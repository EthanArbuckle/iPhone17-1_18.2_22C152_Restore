uint64_t sub_22D09B0D4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_22D09818C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_22D09B0DC()
{
  unint64_t result = qword_26AEC3010;
  if (!qword_26AEC3010)
  {
    sub_22D097714(255, &qword_26AEC3018, (uint64_t (*)(uint64_t))sub_22D0706B4, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC3010);
  }
  return result;
}

void sub_22D09B164()
{
  if (!qword_26853EAE0)
  {
    sub_22D09B210();
    sub_22D2BB5B0();
    sub_22D09754C(&qword_26853EB20, (void (*)(uint64_t))sub_22D09B210);
    unint64_t v0 = sub_22D2BC500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EAE0);
    }
  }
}

void sub_22D09B210()
{
  if (!qword_26853EAE8)
  {
    sub_22D09B2FC();
    sub_22D09B40C();
    sub_22D09754C(&qword_26853EB10, (void (*)(uint64_t))sub_22D09B2FC);
    sub_22D09754C(&qword_26853EB18, (void (*)(uint64_t))sub_22D09B40C);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EAE8);
    }
  }
}

void sub_22D09B2FC()
{
  if (!qword_26853EAF0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D09B81C(255, &qword_26853E790, MEMORY[0x263EFDCF0]);
    type metadata accessor for PBPushBlobsRequest(255);
    sub_22D09B3C8(&qword_26853E798, &qword_26853E790, v0);
    unint64_t v1 = sub_22D2BC450();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26853EAF0);
    }
  }
}

uint64_t sub_22D09B3C8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D09B81C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D09B40C()
{
  if (!qword_26853EAF8)
  {
    sub_22D097714(255, &qword_26853EAB8, (uint64_t (*)(uint64_t))sub_22D099090, MEMORY[0x263EFDEA0]);
    sub_22D09B4B8();
    sub_22D09B520();
    unint64_t v0 = sub_22D2BC500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EAF8);
    }
  }
}

void sub_22D09B4B8()
{
  if (!qword_26853EB00)
  {
    type metadata accessor for PBBlobs(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853EB00);
    }
  }
}

unint64_t sub_22D09B520()
{
  unint64_t result = qword_26853EB08;
  if (!qword_26853EB08)
  {
    sub_22D097714(255, &qword_26853EAB8, (uint64_t (*)(uint64_t))sub_22D099090, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EB08);
  }
  return result;
}

void sub_22D09B5A8()
{
  if (!qword_26853EB28)
  {
    sub_22D097714(255, &qword_26853E978, type metadata accessor for PBPushBlobsResponse, MEMORY[0x263EFDCF0]);
    sub_22D09B164();
    sub_22D0990C4();
    sub_22D09754C(&qword_26853EB30, (void (*)(uint64_t))sub_22D09B164);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EB28);
    }
  }
}

uint64_t sub_22D09B694()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_22D09B6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_22D098A48(a1, a2, a3, v4 + 16, a4);
}

uint64_t sub_22D09B6EC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D09B724(uint64_t a1)
{
  v3 = *(uint64_t (**)(uint64_t, void, void))(v1 + 16);
  sub_22D09B4B8();
  return v3(a1, *(void *)(a1 + *(int *)(v4 + 48)), *(void *)(a1 + *(int *)(v4 + 48) + 8));
}

uint64_t sub_22D09B778()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22D09B7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D222230(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_22D09B7CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D2227B0(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_22D09B7D4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_22CFF5630(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

void sub_22D09B81C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_22CFF49FC();
    unint64_t v7 = a3(a1, &type metadata for ClinicalSharingEncryption.BAACertSignature, v6, MEMORY[0x263F8E4E0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D09B88C()
{
  uint64_t v1 = (int *)(type metadata accessor for PBBlobs(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D09B980@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for PBBlobs(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_22D098D2C(a1, v6, a2);
}

void sub_22D09BA00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_22D097714(255, &qword_26853E978, type metadata accessor for PBPushBlobsResponse, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_22D0990C4();
    unint64_t v5 = sub_22D2BC450();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_22D09BAAC()
{
  if (!qword_26853EB60)
  {
    sub_22D072E5C(255);
    unint64_t v0 = sub_22D2BCB10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EB60);
    }
  }
}

uint64_t sub_22D09BB14()
{
  return sub_22D09754C(&qword_26853EB68, (void (*)(uint64_t))sub_22D09BAAC);
}

uint64_t sub_22D09BB48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_22D09BBB0()
{
  unint64_t result = qword_26853EB80;
  if (!qword_26853EB80)
  {
    sub_22D098FF8(255, &qword_26853EB70, (void (*)(uint64_t))sub_22D09BAAC, (void (*)(void))sub_22D09BB14);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EB80);
  }
  return result;
}

uint64_t sub_22D09BC3C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D09BA00(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D09BCA4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v42 = a1;
  uint64_t v43 = a2;
  sub_22D09C798(0, &qword_26AEC0F48, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v11);
  v45 = (char *)&v30 - v14;
  uint64_t v46 = MEMORY[0x263F8EE78];
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unint64_t v15 = 0;
    uint64_t v39 = v10 + 48;
    v44 = (void (**)(char *))(v10 + 32);
    uint64_t v40 = v10 + 56;
    uint64_t v41 = v10 + 16;
    unint64_t v32 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v33 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v36 = v10;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9);
      v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v18(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_17;
      }
      v35 = v18;
      uint64_t v19 = a3;
      v20 = v8;
      v21 = v45;
      v22 = *v44;
      v23 = v20;
      (*v44)(v45);
      char v24 = v42(v21);
      if (v4)
      {
        (*v33)(v45, v9);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if (v24)
      {
        ((void (*)(char *, char *, uint64_t))v22)(v37, v45, v9);
        uint64_t v25 = v46;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_22D24B964(0, *(void *)(v25 + 16) + 1, 1);
          uint64_t v25 = v46;
        }
        unint64_t v28 = *(void *)(v25 + 16);
        unint64_t v27 = *(void *)(v25 + 24);
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          unint64_t v31 = v28 + 1;
          sub_22D24B964(v27 > 1, v28 + 1, 1);
          unint64_t v29 = v31;
          uint64_t v25 = v46;
        }
        *(void *)(v25 + 16) = v29;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v25 + v16 + v28 * v17, v37, v9);
        uint64_t v46 = v25;
        uint64_t v4 = v34;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v33)(v45, v9);
      }
      a3 = v19;
      ++v15;
      uint64_t v8 = v23;
      uint64_t v10 = v36;
      if (v38 == v15)
      {
        v35(v23, 1, 1, v9);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_22D04BD5C((uint64_t)v8);
    return v46;
  }
  return result;
}

void sub_22D09C070()
{
  qword_26AEC3CE8 = 0x40F5180000000000;
}

uint64_t sub_22D09C084(uint64_t a1)
{
  sub_22D09C798(0, &qword_26AEC0F48, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v26 - v3;
  uint64_t v5 = sub_22D2BBC30();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v35 = (char *)v26 - v10;
  uint64_t v36 = MEMORY[0x263F8EE78];
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  v26[1] = a1;
  if (v11)
  {
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v12 = v6 + 16;
    unint64_t v28 = (*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64);
    unint64_t v29 = v9;
    uint64_t v14 = a1 + v28;
    unint64_t v31 = v4;
    unint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v15 = *(void *)(v12 + 56);
    unint64_t v16 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    unint64_t v27 = (void (**)(char *, uint64_t, double, double))(v12 - 8);
    v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    uint64_t v34 = v13;
    v26[0] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v30 = v12;
    v13(v4, a1 + v28, v5);
    while (1)
    {
      uint64_t v17 = *v33;
      (*v33)(v4, 0, 1, v5);
      if ((*v32)(v4, 1, v5) == 1) {
        break;
      }
      v18 = *v16;
      (*v16)(v35, v4, v5);
      sub_22D2BBBF0();
      double v20 = v19;
      if (qword_26AEC2070 != -1) {
        swift_once();
      }
      double v21 = -v20;
      if (*(double *)&qword_26AEC3CE8 <= -v20)
      {
        (*v27)(v35, v5, v21, *(double *)&qword_26AEC3CE8);
      }
      else
      {
        ((void (*)(char *, char *, uint64_t, double, double))v18)(v9, v35, v5, v21, *(double *)&qword_26AEC3CE8);
        uint64_t v22 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22D24B964(0, *(void *)(v22 + 16) + 1, 1);
          uint64_t v22 = v36;
        }
        unint64_t v24 = *(void *)(v22 + 16);
        unint64_t v23 = *(void *)(v22 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_22D24B964(v23 > 1, v24 + 1, 1);
          uint64_t v22 = v36;
        }
        *(void *)(v22 + 16) = v24 + 1;
        uint64_t v9 = v29;
        v18((char *)(v22 + v28 + v24 * v15), v29, v5);
        uint64_t v36 = v22;
      }
      uint64_t v4 = v31;
      v14 += v15;
      if (!--v11)
      {
        v17(v31, 1, 1, v5);
        break;
      }
      v34(v31, v14, v5);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  sub_22D04BD5C((uint64_t)v4);
  return v36;
}

uint64_t sub_22D09C410(void *a1, uint64_t a2)
{
  sub_22D09C9EC(0, &qword_26AEC2FE0, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D09C744();
  sub_22D2BD7B0();
  v10[1] = a2;
  sub_22D09C798(0, &qword_26AEC1E70, MEMORY[0x263F8D488]);
  sub_22D09CA50(&qword_26AEC1E78, &qword_26AEC0F38);
  sub_22D2BD5F0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_22D09C5C4()
{
  return 0x73636E7973;
}

uint64_t sub_22D09C5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73636E7973 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_22D2BD660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22D09C668(uint64_t a1)
{
  unint64_t v2 = sub_22D09C744();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D09C6A4(uint64_t a1)
{
  unint64_t v2 = sub_22D09C744();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_22D09C6E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_22D09C7F8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_22D09C70C(void *a1)
{
  return sub_22D09C410(a1, *v1);
}

uint64_t sub_22D09C728(uint64_t *a1, uint64_t *a2)
{
  return sub_22D10F4C0(*a1, *a2);
}

ValueMetadata *type metadata accessor for ClinicalSharingSyncHistory()
{
  return &type metadata for ClinicalSharingSyncHistory;
}

unint64_t sub_22D09C744()
{
  unint64_t result = qword_26AEC2860;
  if (!qword_26AEC2860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2860);
  }
  return result;
}

void sub_22D09C798(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_22D2BBC30();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void *sub_22D09C7F8(void *a1)
{
  sub_22D09C9EC(0, &qword_26AEC22A8, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D09C744();
  sub_22D2BD7A0();
  if (!v1)
  {
    sub_22D09C798(0, &qword_26AEC1E70, MEMORY[0x263F8D488]);
    sub_22D09CA50(&qword_26AEC1E80, &qword_26AEC0F40);
    sub_22D2BD560();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = (void *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void sub_22D09C9EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_22D09C744();
    unint64_t v7 = a3(a1, &type metadata for ClinicalSharingSyncHistory.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D09CA50(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D09C798(255, &qword_26AEC1E70, MEMORY[0x263F8D488]);
    sub_22D09CAE8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D09CAE8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D2BBC30();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClinicalSharingSyncHistory.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22D09CBC8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingSyncHistory.CodingKeys()
{
  return &type metadata for ClinicalSharingSyncHistory.CodingKeys;
}

unint64_t sub_22D09CC04()
{
  unint64_t result = qword_26853EB98;
  if (!qword_26853EB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EB98);
  }
  return result;
}

unint64_t sub_22D09CC5C()
{
  unint64_t result = qword_26AEC2870;
  if (!qword_26AEC2870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2870);
  }
  return result;
}

unint64_t sub_22D09CCB4()
{
  unint64_t result = qword_26AEC2868;
  if (!qword_26AEC2868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2868);
  }
  return result;
}

void sub_22D09CD08(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(int *)(type metadata accessor for ClinicalSharingSleepStatisticsQuery(0) + 32);
  sub_22D030474(0, (unint64_t *)&qword_26853EBA0);
  *(void *)(a4 + v8) = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F09410]);
  uint64_t v9 = sub_22D09CE70(a1 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date, a2, a3);
  uint64_t v11 = v10;
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  *(void *)(a4 + 24) = v9;
  *(void *)(a4 + 32) = v10;
  uint64_t v12 = self;
  swift_retain();
  v13 = (void *)sub_22D2BBD30();
  id v14 = objc_msgSend(v12, sel_hk_sleepDayIntervalForMorningIndexRange_calendar_, v9, v11, v13);

  sub_22D2BB680();
  swift_release();
}

uint64_t type metadata accessor for ClinicalSharingSleepStatisticsQuery(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853EBA8);
}

uint64_t sub_22D09CE70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v28 = sub_22D2BBC30();
  uint64_t v6 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22D2BB8E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22D2BB6F0();
  uint64_t v26 = *(void *)(v13 - 8);
  uint64_t v27 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0A0258(a2, a2, a3);
  sub_22D0B23DC(a1, 0x90008u >> (8 * a3), (uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_22D2BB6C0();
  unint64_t v16 = (void *)sub_22D2BBBC0();
  uint64_t v17 = (void *)sub_22D2BBD30();
  v18 = objc_msgSend(v16, sel_hk_morningIndexWithCalendar_, v17);

  double v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v28;
  v19(v8, v28);
  sub_22D2BB690();
  double v21 = (void *)sub_22D2BBBC0();
  uint64_t v22 = (void *)sub_22D2BBD30();
  unint64_t v23 = objc_msgSend(v21, sel_hk_morningIndexWithCalendar_, v22);

  uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v8, v20);
  if ((uint64_t)v23 < (uint64_t)v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (__OFSUB__(v23, v18))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (!__OFADD__(v23 - v18, 1))
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v27);
    return (uint64_t)v18;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_22D09D170()
{
  uint64_t v1 = type metadata accessor for ClinicalSharingSleepStatisticsQuery(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  unsigned int v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0A0DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  uint64_t v33 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v28 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0A0F08(0, &qword_26853EBD8, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  uint64_t v35 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - v9;
  sub_22D0A0F08(0, &qword_26853EBE8, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  uint64_t v34 = v11;
  uint64_t v36 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v31 = (char *)&v28 - v12;
  uint64_t v13 = sub_22D2BD150();
  uint64_t v14 = sub_22D249238(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_22D09D658(v14);
  uint64_t v30 = v15;
  swift_release();
  swift_retain();
  uint64_t v29 = v0;
  uint64_t v16 = sub_22D09D658(qword_26E05A370);
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  sub_22D0A0E40();
  sub_22D0A0EC0(&qword_26853EBD0, (void (*)(uint64_t))sub_22D0A0E40);
  sub_22D2BC470();
  sub_22D0A1614(v0, (uint64_t)v4, type metadata accessor for ClinicalSharingSleepStatisticsQuery);
  unint64_t v17 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v18 = swift_allocObject();
  sub_22D0A14F0((uint64_t)v4, v18 + v17, type metadata accessor for ClinicalSharingSleepStatisticsQuery);
  type metadata accessor for PBTypedData(0);
  sub_22D0A0EC0(&qword_26853EBE0, (void (*)(uint64_t))sub_22D0A0DA0);
  double v19 = v10;
  uint64_t v20 = v32;
  double v21 = v28;
  sub_22D2BC730();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v20);
  sub_22D0A1614(v29, (uint64_t)v4, type metadata accessor for ClinicalSharingSleepStatisticsQuery);
  uint64_t v22 = swift_allocObject();
  sub_22D0A14F0((uint64_t)v4, v22 + v17, type metadata accessor for ClinicalSharingSleepStatisticsQuery);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  unint64_t v23 = v31;
  uint64_t v24 = v35;
  sub_22D2BC3C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v24);
  sub_22D0A11A8();
  uint64_t v25 = v34;
  uint64_t v26 = sub_22D2BC720();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v25);
  return v26;
}

uint64_t sub_22D09D658(void *a1)
{
  uint64_t v2 = v1;
  v83 = a1;
  uint64_t v3 = sub_22D2BD020();
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  MEMORY[0x270FA5388](v3);
  v76 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0A1854();
  uint64_t v81 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  MEMORY[0x270FA5388](v5);
  v78 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0A1800(0, &qword_26853D7A0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v7 - 8);
  v77 = (char *)&v64 - v8;
  sub_22D0A1800(0, &qword_26853DEE0, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v9 - 8);
  v69 = (char *)&v64 - v10;
  sub_22D0A1800(0, &qword_26853DEE8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v11 - 8);
  v68 = (char *)&v64 - v12;
  uint64_t v13 = sub_22D2BB8E0();
  uint64_t v74 = *(void *)(v13 - 8);
  uint64_t v75 = v13;
  MEMORY[0x270FA5388](v13);
  v73 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_22D2BBC30();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0A1910(0, (unint64_t *)&qword_2685426B0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_22D2C2100;
  uint64_t v66 = type metadata accessor for ClinicalSharingSleepStatisticsQuery(0);
  uint64_t v20 = (char *)v1 + *(int *)(v66 + 28);
  double v21 = self;
  sub_22D2BB6C0();
  uint64_t v22 = (void *)sub_22D2BBBC0();
  unint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v18, v15);
  v67 = v20;
  sub_22D2BB690();
  uint64_t v24 = (void *)sub_22D2BBBC0();
  uint64_t v71 = v16 + 8;
  uint64_t v72 = v15;
  v70 = v23;
  v23(v18, v15);
  id v25 = objc_msgSend(v21, sel_predicateForSamplesWithStartDate_endDate_options_, v22, v24, 0);

  *(void *)(v19 + 32) = v25;
  uint64_t v26 = v83;
  int64_t v27 = v83[2];
  if (v27)
  {
    v65 = v2;
    uint64_t v84 = MEMORY[0x263F8EE78];
    sub_22D2BD3D0();
    uint64_t v28 = v26 + 4;
    int64_t v29 = v27;
    do
    {
      uint64_t v30 = *v28++;
      id v31 = objc_msgSend(v21, sel_predicateForCategorySamplesWithOperatorType_value_, 4, v30);
      sub_22D2BD3A0();
      sub_22D2BD3E0();
      sub_22D2BD3F0();
      sub_22D2BD3B0();
      --v29;
    }
    while (v29);
    uint64_t v2 = v65;
  }
  sub_22D030474(0, &qword_26853E820);
  uint64_t v32 = (void *)sub_22D2BCDF0();
  swift_bridgeObjectRelease();
  uint64_t v33 = self;
  id v34 = objc_msgSend(v33, sel_orPredicateWithSubpredicates_, v32);

  *(void *)(v19 + 40) = v34;
  uint64_t v84 = v19;
  sub_22D2BCE20();
  uint64_t v35 = (void *)sub_22D2BCDF0();
  swift_bridgeObjectRelease();
  uint64_t v36 = objc_msgSend(v33, sel_andPredicateWithSubpredicates_, v35);

  uint64_t v84 = 0;
  unint64_t v85 = 0xE000000000000000;
  v65 = v36;
  uint64_t v37 = v83;
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  uint64_t v38 = MEMORY[0x263F8EE78];
  if (v27)
  {
    uint64_t v87 = MEMORY[0x263F8EE78];
    sub_22D24B86C(0, v27, 0);
    uint64_t v38 = v87;
    uint64_t v39 = v37 + 4;
    do
    {
      uint64_t v40 = *v39++;
      unint64_t v41 = 0xE600000000000000;
      uint64_t v42 = 0x6465622D6E69;
      switch(v40)
      {
        case 0:
          break;
        case 1:
          uint64_t v42 = 0x7065656C7361;
          break;
        case 2:
          unint64_t v41 = 0xE500000000000000;
          uint64_t v42 = 0x656B617761;
          break;
        case 3:
          unint64_t v41 = 0xEC00000074686769;
          uint64_t v42 = 0x6C2D7065656C7361;
          break;
        case 4:
          unint64_t v41 = 0xEB00000000706565;
          uint64_t v42 = 0x642D7065656C7361;
          break;
        case 5:
          unint64_t v41 = 0xEA00000000006D65;
          uint64_t v42 = 0x722D7065656C7361;
          break;
        default:
          sub_22D2BD460();
          __break(1u);
          JUMPOUT(0x22D09E280);
      }
      uint64_t v87 = v38;
      unint64_t v44 = *(void *)(v38 + 16);
      unint64_t v43 = *(void *)(v38 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_22D24B86C(v43 > 1, v44 + 1, 1);
        uint64_t v38 = v87;
      }
      *(void *)(v38 + 16) = v44 + 1;
      uint64_t v45 = v38 + 16 * v44;
      *(void *)(v45 + 32) = v42;
      *(void *)(v45 + 40) = v41;
      --v27;
    }
    while (v27);
  }
  uint64_t v87 = v38;
  sub_22D0A1910(0, (unint64_t *)&qword_26AEC1EC0, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_22D084BBC();
  sub_22D2BCB60();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  uint64_t v46 = v84;
  unint64_t v47 = v85;
  v48 = *(void **)((char *)v2 + *(int *)(v66 + 32));
  id v49 = v48;
  uint64_t v66 = sub_22D229C70(v46, v47, v48, 2, 1);
  swift_bridgeObjectRelease();

  sub_22CFF4B00(*v2 + 16, (uint64_t)&v84);
  __swift_project_boxed_opaque_existential_1(&v84, v86);
  v83 = v65;
  v50 = v67;
  sub_22D2BB6C0();
  uint64_t v51 = sub_22D2BBE00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v68, 1, 1, v51);
  uint64_t v52 = sub_22D2BBE60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v69, 1, 1, v52);
  v53 = v73;
  sub_22D2BB8C0();
  sub_22D2BB830();
  uint64_t v54 = sub_22D2BB6F0();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = (uint64_t)v77;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v77, v50, v54);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v54);
  v57 = v76;
  sub_22D2BD030();
  sub_22D030474(0, &qword_26853EBC8);
  sub_22D0A0EC0(&qword_26853EC38, MEMORY[0x263F44B38]);
  v58 = v78;
  uint64_t v59 = v80;
  sub_22D2BC780();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v57, v59);
  sub_22D0A0EC0(&qword_26853EC40, (void (*)(uint64_t))sub_22D0A1854);
  uint64_t v60 = v82;
  uint64_t v61 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v58, v60);
  id v62 = v83;

  swift_bridgeObjectRelease();
  sub_22D0A15B8(v56, &qword_26853D7A0, MEMORY[0x263F062D0]);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v75);
  v70(v18, v72);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
  return v61;
}

uint64_t sub_22D09E298@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v98 = a3;
  sub_22D0A1800(0, &qword_26853D7A0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v85 = (char *)&v82 - v8;
  uint64_t v9 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v84 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PBSleepSeries.Value(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v96 = v11;
  uint64_t v97 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v101 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0A1800(0, &qword_26853EBF8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v82 - v15;
  sub_22D0A1800(0, &qword_26853DEE0, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v17 - 8);
  v95 = (char *)&v82 - v18;
  sub_22D0A1800(0, &qword_26853DEE8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v19 - 8);
  v94 = (char *)&v82 - v20;
  uint64_t v87 = type metadata accessor for SleepSeriesValueIterator(0) - 8;
  MEMORY[0x270FA5388](v87);
  uint64_t v22 = (uint64_t *)((char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = type metadata accessor for ClinicalSharingSleepStatisticsQuery(0);
  uint64_t v99 = *(void *)(v82 - 8);
  uint64_t v23 = *(void *)(v99 + 64);
  uint64_t v24 = MEMORY[0x270FA5388](v82);
  id v25 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  int64_t v27 = (char *)&v82 - v26;
  uint64_t v28 = type metadata accessor for PBSleepSeries(0);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  uint64_t v83 = (uint64_t)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  v100 = (unint64_t *)((char *)&v82 - v31);
  *(uint64_t *)((char *)&v82 - v31) = MEMORY[0x263F8EE78];
  sub_22D2BBFE0();
  uint64_t v86 = v4;
  sub_22D0A1614(v4, (uint64_t)v27, type metadata accessor for ClinicalSharingSleepStatisticsQuery);
  sub_22D0A1614((uint64_t)v27, (uint64_t)v25, type metadata accessor for ClinicalSharingSleepStatisticsQuery);
  unint64_t v32 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
  uint64_t v33 = swift_allocObject();
  id v34 = a1;
  *(void *)(v33 + 16) = a1;
  *(void *)(v33 + 24) = a2;
  uint64_t v35 = v33 + v32;
  uint64_t v36 = v33;
  sub_22D0A14F0((uint64_t)v27, v35, type metadata accessor for ClinicalSharingSleepStatisticsQuery);
  sub_22D0A1470(0, &qword_26853EC00, (uint64_t (*)(uint64_t))sub_22D0A13C0, sub_22D0A143C, MEMORY[0x263F8DC98]);
  uint64_t inited = swift_initStackObject();
  uint64_t v99 = inited;
  *(void *)(inited + 16) = sub_22D0A134C;
  *(void *)(inited + 24) = v36;
  uint64_t v38 = *((void *)v25 + 3);
  uint64_t v91 = v36;
  uint64_t v92 = v38;
  uint64_t v93 = *((void *)v25 + 4);
  uint64_t v39 = *((void *)v25 + 1);
  char v40 = v25[16];
  unint64_t v41 = v25;
  v89 = v25;
  id v42 = v34;
  id v43 = a2;
  id v90 = v42;
  id v88 = v43;
  swift_retain();
  sub_22D0A0258(1, v39, v40);
  unint64_t v44 = *(void **)(*v41 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  uint64_t v45 = *v41 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar;
  uint64_t v46 = (int *)v87;
  unint64_t v47 = (char *)v22 + *(int *)(v87 + 44);
  uint64_t v48 = sub_22D2BBE00();
  uint64_t v49 = *(void *)(v48 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v47, v45, v48);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v94, 1, 1, v48);
  uint64_t v50 = sub_22D2BBE60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v95, 1, 1, v50);
  id v51 = v44;
  sub_22D2BB8C0();
  sub_22D2BB830();
  uint64_t v52 = v46[14];
  *(void *)((char *)v22 + v52) = objc_msgSend(self, sel_secondUnit);
  v53 = (char *)v22 + v46[15];
  *(void *)v53 = 0;
  *((void *)v53 + 1) = 0xE000000000000000;
  *((void *)v53 + 2) = 0;
  *((_DWORD *)v53 + 6) = 0;
  uint64_t v54 = v96;
  sub_22D2BBFE0();
  id v55 = v88;
  *uint64_t v22 = v90;
  v22[1] = v55;
  uint64_t v57 = v92;
  uint64_t v56 = v93;
  v22[2] = v92;
  v22[3] = v56;
  *(void *)((char *)v22 + v46[10]) = v51;
  *(void *)((char *)v22 + v46[12]) = v57;
  swift_retain();
  swift_release();
  sub_22D0A1558((uint64_t)v89, type metadata accessor for ClinicalSharingSleepStatisticsQuery);
  sub_22D0A1470(0, &qword_26853EC20, type metadata accessor for SleepSeriesValueIterator, sub_22D0A1408, MEMORY[0x263F8DC88]);
  v58 = (void *)swift_allocObject();
  sub_22D0A14F0((uint64_t)v22, (uint64_t)v58 + *(void *)(*MEMORY[0x263F8DC90] + *v58 + 16), type metadata accessor for SleepSeriesValueIterator);
  swift_release();
  unint64_t v59 = *v100;
  sub_22D09F494((uint64_t)v16);
  uint64_t v60 = v97;
  uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
  uint64_t v62 = v54;
  if (v61(v16, 1, v54) != 1)
  {
    uint64_t v78 = v101;
    do
    {
      sub_22D0A14F0((uint64_t)v16, v78, type metadata accessor for PBSleepSeries.Value);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v59 = sub_22D28166C(0, *(void *)(v59 + 16) + 1, 1, v59);
      }
      unint64_t v80 = *(void *)(v59 + 16);
      unint64_t v79 = *(void *)(v59 + 24);
      if (v80 >= v79 >> 1) {
        unint64_t v59 = sub_22D28166C(v79 > 1, v80 + 1, 1, v59);
      }
      *(void *)(v59 + 16) = v80 + 1;
      uint64_t v78 = v101;
      sub_22D0A14F0(v101, v59+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v80, type metadata accessor for PBSleepSeries.Value);
      sub_22D09F494((uint64_t)v16);
    }
    while (v61(v16, 1, v62) != 1);
  }
  swift_setDeallocating();
  sub_22D0A1558((uint64_t)v58 + *(void *)(*MEMORY[0x263F8DC90] + *v58 + 16), type metadata accessor for SleepSeriesValueIterator);
  swift_deallocClassInstance();
  v63 = v100;
  unint64_t *v100 = v59;
  if (*(void *)(v59 + 16))
  {
    uint64_t v64 = v98;
    sub_22D2BBFE0();
    uint64_t v65 = type metadata accessor for PBTypedData(0);
    uint64_t v66 = *(int *)(v65 + 20);
    if (qword_26853CCD0 != -1) {
      swift_once();
    }
    *(void *)(v64 + v66) = qword_26853D990;
    uint64_t v67 = *(unsigned __int8 *)(v86 + 16) + 2;
    uint64_t v68 = v86 + *(int *)(v82 + 28);
    uint64_t v69 = sub_22D2BB6F0();
    uint64_t v70 = *(void *)(v69 - 8);
    uint64_t v71 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v85, v68, v69);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v69);
    swift_retain();
    uint64_t v72 = (uint64_t)v84;
    sub_22D22BA04(v67, 1, v71);
    sub_22D0A15B8(v71, &qword_26853D7A0, MEMORY[0x263F062D0]);
    PBTypedData.dateRange.setter(v72);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v73 = swift_retain();
      *(void *)(v64 + v66) = sub_22D0040E0(v73);
      swift_release();
    }
    uint64_t v74 = *(void *)(v64 + v66);
    swift_beginAccess();
    *(void *)(v74 + 16) = 114;
    *(unsigned char *)(v74 + 24) = 1;
    uint64_t v75 = v100;
    uint64_t v76 = v83;
    sub_22D0A1614((uint64_t)v100, v83, type metadata accessor for PBSleepSeries);
    PBTypedData.sleepSeries.setter(v76);
    swift_release();
    sub_22D0A1558((uint64_t)v75, type metadata accessor for PBSleepSeries);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v64, 0, 1, v65);
  }
  else
  {
    sub_22D0A1558((uint64_t)v63, type metadata accessor for PBSleepSeries);
    swift_setDeallocating();
    swift_release();
    uint64_t v81 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v98, 1, 1, v81);
  }
}

uint64_t sub_22D09EFB4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v7 = sub_22D2BBE00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22D2BB8E0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a3 + 32);
  uint64_t v22 = *(void *)(a3 + 24);
  uint64_t v15 = *(void *)(a3 + 8);
  char v16 = *(unsigned char *)(a3 + 16);
  id v17 = a1;
  id v18 = a2;
  sub_22D0A0258(1, v15, v16);
  uint64_t v19 = *(void **)(*(void *)a3 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, *(void *)a3 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v7);
  id v20 = v19;
  return sub_22D09F158((uint64_t)v17, (uint64_t)v18, v22, v14, (uint64_t)v13, (uint64_t)v20, (uint64_t)v10, v23);
}

uint64_t sub_22D09F158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v30 = a2;
  sub_22D0A1800(0, &qword_26853DEE0, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v29 - v12;
  sub_22D0A1800(0, &qword_26853DEE8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v14 - 8);
  char v16 = (char *)&v29 - v15;
  id v17 = (int *)type metadata accessor for SleepSeriesValueIterator(0);
  uint64_t v18 = sub_22D2BBE00();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, 1, 1, v18);
  uint64_t v20 = sub_22D2BBE60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
  sub_22D2BB8C0();
  sub_22D2BB830();
  uint64_t v21 = v17[12];
  *(void *)&a8[v21] = objc_msgSend(self, sel_secondUnit);
  uint64_t v22 = &a8[v17[13]];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0xE000000000000000;
  *((void *)v22 + 2) = 0;
  *((_DWORD *)v22 + 6) = 0;
  type metadata accessor for PBSleepSeries.Value(0);
  sub_22D2BBFE0();
  uint64_t v23 = v30;
  *(void *)a8 = a1;
  *((void *)a8 + 1) = v23;
  uint64_t v24 = v31;
  *((void *)a8 + 2) = a3;
  *((void *)a8 + 3) = v24;
  id v25 = &a8[v17[7]];
  uint64_t v26 = sub_22D2BB8E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, v32, v26);
  uint64_t v27 = v34;
  *(void *)&a8[v17[8]] = v33;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 32))(&a8[v17[9]], v27, v18);
  *(void *)&a8[v17[10]] = a3;
  return result;
}

uint64_t sub_22D09F494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  sub_22D0A167C();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0A1800(0, &qword_26853EBF8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v22 - v9;
  uint64_t v11 = type metadata accessor for PBSleepSeries.Value(0);
  uint64_t v12 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  uint64_t v23 = *v12;
  uint64_t v13 = v23(v10, 1, 1, v11);
  v22[1] = v12;
  uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 - 1);
  while (1)
  {
    uint64_t v15 = (void *)MEMORY[0x230F7B690](v13);
    uint64_t v16 = (uint64_t)&v4[*(int *)(v2 + 48)];
    sub_22D09F740(v16);
    *uint64_t v4 = v17 & 1;
    sub_22D0A15B8((uint64_t)v10, &qword_26853EBF8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
    int v18 = *v4;
    sub_22D0A1700(v16, (uint64_t)v10);
    sub_22D0A1780((uint64_t)v10, (uint64_t)v8);
    if ((*v14)(v8, 1, v11) != 1) {
      break;
    }
    uint64_t v13 = sub_22D0A15B8((uint64_t)v8, &qword_26853EBF8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
    if (v18)
    {
      sub_22D0A15B8((uint64_t)v10, &qword_26853EBF8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
      uint64_t v19 = 1;
      uint64_t v20 = v24;
      return v23((char *)v20, v19, 1, v11);
    }
  }
  sub_22D0A15B8((uint64_t)v10, &qword_26853EBF8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
  uint64_t v20 = v24;
  sub_22D0A14F0((uint64_t)v8, v24, type metadata accessor for PBSleepSeries.Value);
  uint64_t v19 = 0;
  return v23((char *)v20, v19, 1, v11);
}

void sub_22D09F740(uint64_t a1)
{
  uint64_t v85 = a1;
  uint64_t v2 = type metadata accessor for PBSleepSeries.Value(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v82 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v83 = (uint64_t *)((char *)&v76 - v6);
  sub_22D0A1800(0, &qword_26AEC0F48, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v76 - v8;
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v76 - v15;
  sub_22D09FEC4();
  int v20 = v19;
  if (v19)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v85, 1, 1, v2);
    return;
  }
  uint64_t v21 = v17;
  uint64_t v79 = v3;
  uint64_t v22 = v18;
  uint64_t v81 = (int *)type metadata accessor for SleepSeriesValueIterator(0);
  uint64_t v23 = v81[9];
  uint64_t v92 = v1;
  uint64_t v24 = v1 + v23;
  uint64_t v25 = self;
  uint64_t v84 = v11;
  uint64_t v26 = (void *)v25;
  uint64_t v91 = v24;
  uint64_t v27 = (void *)sub_22D2BBD30();
  id v28 = objc_msgSend(v26, sel_hk_sleepDayStartForMorningIndex_calendar_, v21, v27);

  sub_22D2BBC00();
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v14, v16, v10);
  uint64_t v29 = v21 + v22;
  BOOL v30 = __OFADD__(v21, v22);
  uint64_t v31 = v29 - 1;
  BOOL v32 = __OFSUB__(v29, 1);
  if (v30) {
    goto LABEL_40;
  }
  if (v32)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v33 = v10;
  uint64_t v78 = v16;
  int v77 = v20;
  uint64_t v80 = v2;
  if (v21 < v31)
  {
    uint64_t v76 = v31;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = v81[12];
    uint64_t v37 = v92;
    uint64_t v89 = v92 + v81[11];
    uint64_t v90 = v36;
    uint64_t v87 = (void (**)(char *, uint64_t))(v84 + 8);
    id v88 = (uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
    uint64_t v86 = (void (**)(char *, char *, uint64_t))(v84 + 32);
    uint64_t v38 = v22 - 1;
    double v39 = 0.0;
    double v40 = 0.0;
    while (1)
    {
      uint64_t v41 = v33;
      id v42 = *(void **)v37;
      id v43 = (void *)sub_22D2BBBC0();
      id v44 = objc_msgSend(v42, sel_statisticsForDate_, v43);

      id v45 = objc_msgSend(v44, sel_duration);
      uint64_t v46 = *(void *)(v37 + v90);
      if (v45)
      {
        objc_msgSend(v45, sel_doubleValueForUnit_, v46);
        double v48 = v47;

        BOOL v49 = __OFADD__(v35++, 1);
        if (v49)
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        double v40 = v40 + v48;
      }
      uint64_t v50 = *(void **)(v37 + 8);
      id v51 = (void *)sub_22D2BBBC0();
      id v52 = objc_msgSend(v50, sel_statisticsForDate_, v51);

      id v53 = objc_msgSend(v52, sel_duration);
      if (v53)
      {
        objc_msgSend(v53, sel_doubleValueForUnit_, v46);
        double v55 = v54;

        BOOL v49 = __OFADD__(v34++, 1);
        if (v49) {
          goto LABEL_39;
        }
        double v39 = v39 + v55;
      }
      sub_22D2BBD60();
      uint64_t v33 = v41;
      int v56 = (*v88)(v9, 1, v41);
      uint64_t v37 = v92;
      if (v56 == 1)
      {
        sub_22D0A15B8((uint64_t)v9, &qword_26AEC0F48, MEMORY[0x263F07490]);
        goto LABEL_24;
      }
      (*v87)(v14, v41);
      (*v86)(v14, v9, v41);
      ++v21;
      if (!--v38)
      {
        uint64_t v21 = v76;
        goto LABEL_24;
      }
    }
  }
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  double v39 = 0.0;
  double v40 = 0.0;
LABEL_24:
  uint64_t v57 = v81;
  *(void *)(v92 + v81[10]) = v21;
  uint64_t v58 = (uint64_t)v83;
  void *v83 = 0;
  *(void *)(v58 + 8) = 0xE000000000000000;
  *(void *)(v58 + 16) = 0;
  *(_DWORD *)(v58 + 24) = 0;
  sub_22D2BBFE0();
  if (v35 >= 1)
  {
    double v59 = v40 / (double)v35;
    if ((~*(void *)&v59 & 0x7FF0000000000000) != 0)
    {
      if (v59 > -1.0)
      {
        if (v59 < 4294967300.0)
        {
          *(_DWORD *)(v58 + 20) = v59;
          goto LABEL_29;
        }
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
LABEL_29:
  uint64_t v60 = v84;
  uint64_t v61 = v78;
  if (v34 >= 1)
  {
    double v62 = v39 / (double)v34;
    if ((~*(void *)&v62 & 0x7FF0000000000000) != 0)
    {
      if (v62 > -1.0)
      {
        if (v62 < 4294967300.0)
        {
          *(_DWORD *)(v58 + 16) = v62;
          goto LABEL_34;
        }
LABEL_47:
        __break(1u);
        return;
      }
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_34:
  uint64_t v63 = v33;
  uint64_t v64 = v92;
  uint64_t v65 = v82;
  sub_22D0A1614(v92 + v57[13], v82, type metadata accessor for PBSleepSeries.Value);
  char v66 = _s19HealthRecordsDaemon13PBSleepSeriesV5ValueV2eeoiySbAE_AEtFZ_0(v58, v65);
  sub_22D0A1558(v65, type metadata accessor for PBSleepSeries.Value);
  if (v66)
  {
    uint64_t v67 = *(void (**)(char *, uint64_t))(v60 + 8);
    v67(v14, v63);
    v67(v61, v63);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v85, 1, 1, v80);
  }
  else
  {
    uint64_t v68 = *(void **)(v64 + v57[8]);
    uint64_t v69 = (void *)sub_22D2BBBC0();
    id v70 = objc_msgSend(v68, sel_stringFromDate_, v69);

    uint64_t v71 = sub_22D2BCBD0();
    uint64_t v73 = v72;

    uint64_t v74 = *(void (**)(char *, uint64_t))(v60 + 8);
    v74(v14, v63);
    v74(v61, v63);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v58 = v71;
    *(void *)(v58 + 8) = v73;
    uint64_t v75 = v85;
    sub_22D0A1614(v58, v85, type metadata accessor for PBSleepSeries.Value);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v75, 0, 1, v80);
  }
  sub_22D0A1558(v58, type metadata accessor for PBSleepSeries.Value);
}

void sub_22D09FEC4()
{
  uint64_t v1 = v0;
  sub_22D0A1800(0, &qword_26AEC0F48, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v33 - v3;
  uint64_t v5 = sub_22D2BCAE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_22D2BBC30();
  uint64_t v9 = *(void *)(v34 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v34);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = type metadata accessor for SleepSeriesValueIterator(0);
  uint64_t v16 = *(void *)(v1 + 16);
  uint64_t v17 = *(void *)(v1 + 24);
  BOOL v29 = __OFADD__(v16, v17);
  uint64_t v18 = v16 + v17;
  if (v29)
  {
    __break(1u);
    goto LABEL_16;
  }
  BOOL v29 = __OFSUB__(v18, 1);
  uint64_t v19 = v18 - 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v20 = *(void *)(v1 + *(int *)(v15 + 40));
  if (v20 >= v19) {
    return;
  }
  uint64_t v33 = v12;
  sub_22D2BCAB0();
  sub_22D2BCAD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_22D2BBD60();
  uint64_t v21 = v34;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v34) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v33, v4, v21);
    uint64_t v22 = (void *)sub_22D2BBBC0();
    uint64_t v23 = (void *)sub_22D2BBD30();
    uint64_t v24 = (char *)objc_msgSend(v22, sel_hk_morningIndexWithCalendar_, v23);

    uint64_t v25 = *(void *)(v1 + 16);
    uint64_t v26 = *(void *)(v1 + 24);
    BOOL v29 = __OFADD__(v25, v26);
    uint64_t v27 = v25 + v26;
    if (!v29)
    {
      BOOL v29 = __OFSUB__(v27, 1);
      id v28 = (char *)(v27 - 1);
      if (!v29)
      {
        if ((uint64_t)v28 >= (uint64_t)v24) {
          id v28 = v24;
        }
        BOOL v29 = __OFSUB__(v28, v20);
        BOOL v30 = (uint64_t)v28 < v20;
        uint64_t v31 = &v28[-v20];
        if (!v30)
        {
          if (!v29)
          {
            if (!__OFADD__(v31, 1))
            {
              BOOL v32 = *(void (**)(char *, uint64_t))(v9 + 8);
              v32(v33, v21);
              v32(v14, v21);
              return;
            }
            goto LABEL_21;
          }
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
          return;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v21);
  sub_22D0A15B8((uint64_t)v4, &qword_26AEC0F48, MEMORY[0x263F07490]);
}

uint64_t sub_22D0A0258(uint64_t a1, uint64_t a2, char a3)
{
  sub_22D0A1800(0, &qword_26853DEE0, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - v6;
  sub_22D0A1800(0, &qword_26853DEE8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v18 - v9;
  if (!a3) {
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    uint64_t v11 = sub_22D2BBE00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    uint64_t v12 = sub_22D2BBE60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
    sub_22D2BB8C0();
    if ((unsigned __int128)(a1 * (__int128)7) >> 64 == (7 * a1) >> 63) {
      return sub_22D2BB830();
    }
    __break(1u);
LABEL_5:
    uint64_t v13 = sub_22D2BBE00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
    uint64_t v14 = sub_22D2BBE60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
    sub_22D2BB8C0();
    return sub_22D2BB830();
  }
  uint64_t v16 = sub_22D2BBE00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
  uint64_t v17 = sub_22D2BBE60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  sub_22D2BB8C0();
  return sub_22D2BB880();
}

uint64_t sub_22D0A06B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_22D2BB6F0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = *(void **)((char *)a2 + v13);
    *(void *)(v7 + v13) = v14;
    id v15 = v14;
  }
  return v7;
}

void sub_22D0A07D4(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 32));
}

uint64_t sub_22D0A0860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BB6F0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v13;
  id v14 = v13;
  return a1;
}

uint64_t sub_22D0A0928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  return a1;
}

uint64_t sub_22D0A09FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_22D0A0AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);

  return a1;
}

uint64_t sub_22D0A0B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0A0B78);
}

uint64_t sub_22D0A0B78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BB6F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_22D0A0C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0A0C3C);
}

void *sub_22D0A0C3C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BB6F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D0A0CE4()
{
  uint64_t result = sub_22D2BB6F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_22D0A0DA0()
{
  if (!qword_26853EBB8)
  {
    sub_22D0A0E40();
    sub_22D0A0EC0(&qword_26853EBD0, (void (*)(uint64_t))sub_22D0A0E40);
    unint64_t v0 = sub_22D2BC460();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EBB8);
    }
  }
}

void sub_22D0A0E40()
{
  if (!qword_26853EBC0)
  {
    sub_22D030474(255, &qword_26853EBC8);
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EBC0);
    }
  }
}

uint64_t sub_22D0A0EC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D0A0F08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_22D0A0DA0();
    a3(255);
    sub_22D0A0EC0(&qword_26853EBE0, (void (*)(uint64_t))sub_22D0A0DA0);
    unint64_t v5 = sub_22D2BC3D0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_22D0A0FB8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D09E298(*a1, a1[1], a2);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingSleepStatisticsQuery(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D0A1130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D22A2D8(a1, 0, a2);
}

unint64_t sub_22D0A11A8()
{
  unint64_t result = qword_26853EBF0;
  if (!qword_26853EBF0)
  {
    sub_22D0A0F08(255, &qword_26853EBE8, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EBF0);
  }
  return result;
}

uint64_t type metadata accessor for SleepSeriesValueIterator(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853EC48);
}

uint64_t sub_22D0A123C()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingSleepStatisticsQuery(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v0 + v3 + v1[9];
  uint64_t v8 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D0A134C@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ClinicalSharingSleepStatisticsQuery(0) - 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = *(void **)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_22D09EFB4(v4, v5, v6, a1);
}

void sub_22D0A13C0(uint64_t a1)
{
}

uint64_t sub_22D0A1408()
{
  return sub_22D0A0EC0(&qword_26853EC10, (void (*)(uint64_t))type metadata accessor for SleepSeriesValueIterator);
}

uint64_t sub_22D0A143C()
{
  return sub_22D0A0EC0(&qword_26853EC18, sub_22D0A13C0);
}

void sub_22D0A1470(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_22D0A14F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D0A1558(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D0A15B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D0A1800(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D0A1614(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_22D0A167C()
{
  if (!qword_26853EC28)
  {
    sub_22D0A1800(255, &qword_26853EBF8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853EC28);
    }
  }
}

uint64_t sub_22D0A1700(uint64_t a1, uint64_t a2)
{
  sub_22D0A1800(0, &qword_26853EBF8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0A1780(uint64_t a1, uint64_t a2)
{
  sub_22D0A1800(0, &qword_26853EBF8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22D0A1800(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_22D0A1854()
{
  if (!qword_26853EC30)
  {
    sub_22D2BD020();
    sub_22D030474(255, &qword_26853EBC8);
    sub_22D0A0EC0(&qword_26853EC38, MEMORY[0x263F44B38]);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EC30);
    }
  }
}

void sub_22D0A1910(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SleepSeriesValueIterator.EnumerationStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D0A1A28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepSeriesValueIterator.EnumerationStatus()
{
  return &type metadata for SleepSeriesValueIterator.EnumerationStatus;
}

char *sub_22D0A1A60(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  unsigned int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[1];
    *((void *)a1 + 1) = v8;
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    uint64_t v9 = a3[7];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_22D2BB8E0();
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v13 = v4;
    id v14 = v8;
    v38(v10, v11, v12);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = *(char **)((char *)a2 + v15);
    *(void *)&v7[v15] = v17;
    uint64_t v18 = &v7[v16];
    uint64_t v19 = (uint64_t)a2 + v16;
    uint64_t v20 = sub_22D2BBE00();
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    id v22 = v17;
    v21(v18, v19, v20);
    uint64_t v23 = a3[11];
    *(void *)&v7[a3[10]] = *(char **)((char *)a2 + a3[10]);
    v38(&v7[v23], (uint64_t)a2 + v23, v12);
    uint64_t v24 = a3[12];
    uint64_t v25 = a3[13];
    uint64_t v26 = *(char **)((char *)a2 + v24);
    *(void *)&v7[v24] = v26;
    uint64_t v27 = &v7[v25];
    uint64_t v28 = (uint64_t)a2 + v25;
    uint64_t v29 = *(uint64_t *)((char *)a2 + v25);
    uint64_t v30 = *(uint64_t *)((char *)a2 + v25 + 8);
    *(void *)uint64_t v27 = v29;
    *((void *)v27 + 1) = v30;
    *((void *)v27 + 2) = *(void *)(v28 + 16);
    *((_DWORD *)v27 + 6) = *(_DWORD *)(v28 + 24);
    uint64_t v31 = *(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32);
    BOOL v32 = &v27[v31];
    uint64_t v33 = v28 + v31;
    uint64_t v34 = sub_22D2BBFF0();
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
    id v36 = v26;
    swift_bridgeObjectRetain();
    v35(v32, v33, v34);
  }
  return v7;
}

uint64_t sub_22D0A1C7C(id *a1, int *a2)
{
  unsigned int v4 = (char *)a1 + a2[7];
  uint64_t v5 = sub_22D2BB8E0();
  unsigned int v6 = *(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);

  uint64_t v7 = (char *)a1 + a2[9];
  uint64_t v8 = sub_22D2BBE00();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  v6((char *)a1 + a2[11], v5);

  uint64_t v9 = (char *)a1 + a2[13];
  swift_bridgeObjectRelease();
  uint64_t v10 = &v9[*(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32)];
  uint64_t v11 = sub_22D2BBFF0();
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
  return v12(v10, v11);
}

uint64_t sub_22D0A1DD8(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_22D2BB8E0();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v12 = v6;
  id v13 = v7;
  v37(v9, v10, v11);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v16;
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  uint64_t v19 = sub_22D2BBE00();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  id v21 = v16;
  v20(v17, v18, v19);
  uint64_t v22 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  v37(a1 + v22, a2 + v22, v11);
  uint64_t v23 = a3[12];
  uint64_t v24 = a3[13];
  uint64_t v25 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v25;
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  uint64_t v28 = *(void *)(a2 + v24);
  uint64_t v29 = *(void *)(a2 + v24 + 8);
  *(void *)uint64_t v26 = v28;
  *(void *)(v26 + 8) = v29;
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  *(_DWORD *)(v26 + 24) = *(_DWORD *)(v27 + 24);
  uint64_t v30 = *(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32);
  uint64_t v31 = v26 + v30;
  uint64_t v32 = v27 + v30;
  uint64_t v33 = sub_22D2BBFF0();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
  id v35 = v25;
  swift_bridgeObjectRetain();
  v34(v31, v32, v33);
  return a1;
}

uint64_t sub_22D0A1FA0(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_22D2BB8E0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  uint64_t v17 = a3[8];
  uint64_t v18 = *(void **)(a2 + v17);
  uint64_t v19 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = v18;
  id v20 = v18;

  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_22D2BBE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  v16(a1 + a3[11], a2 + a3[11], v15);
  uint64_t v25 = a3[12];
  uint64_t v26 = *(void **)(a2 + v25);
  uint64_t v27 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = v26;
  id v28 = v26;

  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (_DWORD *)(a2 + v29);
  *(void *)uint64_t v30 = *(void *)(a2 + v29);
  *(void *)(v30 + 8) = *(void *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v30 + 16) = v31[4];
  *(_DWORD *)(v30 + 20) = v31[5];
  *(_DWORD *)(v30 + 24) = v31[6];
  uint64_t v32 = *(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32);
  uint64_t v33 = v30 + v32;
  uint64_t v34 = (char *)v31 + v32;
  uint64_t v35 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

char *sub_22D0A219C(char *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  uint64_t v7 = a3[7];
  id v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_22D2BB8E0();
  id v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_22D2BBE00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  v11(&a1[v16], &a2[v16], v10);
  uint64_t v17 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)&a2[v17];
  *((void *)v18 + 2) = *(void *)&a2[v17 + 16];
  *((_DWORD *)v18 + 6) = *(_DWORD *)&a2[v17 + 24];
  uint64_t v20 = *(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32);
  uint64_t v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  uint64_t v23 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

uint64_t sub_22D0A2324(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_22D2BB8E0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);

  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_22D2BBE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  v12(a1 + v19, a2 + v19, v11);
  uint64_t v20 = a3[12];
  uint64_t v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  uint64_t v22 = a3[13];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a2 + v22 + 8);
  *(void *)uint64_t v23 = *(void *)(a2 + v22);
  *(void *)(v23 + 8) = v25;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  *(_DWORD *)(v23 + 24) = *(_DWORD *)(v24 + 24);
  uint64_t v26 = *(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32);
  uint64_t v27 = v23 + v26;
  uint64_t v28 = v24 + v26;
  uint64_t v29 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t sub_22D0A24EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0A2500);
}

uint64_t sub_22D0A2500(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_22D2BB8E0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[7];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_22D2BBE00();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for PBSleepSeries.Value(0);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = &a1[a3[13]];
  return v15(v17, a2, v16);
}

uint64_t sub_22D0A2678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0A268C);
}

char *sub_22D0A268C(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)unint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_22D2BB8E0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[7];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_22D2BBE00();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for PBSleepSeries.Value(0);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[13]];
  return (char *)v15(v17, a2, a2, v16);
}

uint64_t sub_22D0A2804()
{
  uint64_t result = sub_22D2BB8E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22D2BBE00();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PBSleepSeries.Value(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingSleepStatisticsQuery.Duration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingSleepStatisticsQuery.Duration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22D0A29CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_22D0A29D4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingSleepStatisticsQuery.Duration()
{
  return &type metadata for ClinicalSharingSleepStatisticsQuery.Duration;
}

unint64_t sub_22D0A29F0()
{
  unint64_t result = qword_26853EC58;
  if (!qword_26853EC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EC58);
  }
  return result;
}

uint64_t sub_22D0A2A44(uint64_t a1, void *a2)
{
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (v8)
  {
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
    char v14 = *(unsigned char *)(*(void *)(a1 + 48) + v13);
    sub_22CFF5A90(*(void *)(a1 + 56) + 32 * v13, (uint64_t)v20 + 8);
    LOBYTE(v20[0]) = v14;
    v18[0] = v20[0];
    v18[1] = v20[1];
    uint64_t v19 = v21;
    sub_22D0A4020((unsigned __int8 *)v18, a2);
    uint64_t result = sub_22D0A55A0((uint64_t)v18);
    if (v2) {
      return swift_release();
    }
  }
  if (__OFADD__(v11++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v9) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v5 + 8 * v11);
  if (v16)
  {
LABEL_19:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_5;
  }
  int64_t v17 = v11 + 1;
  if (v11 + 1 >= v9) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v11 + 2;
  if (v11 + 2 >= v9) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v11 + 3;
  if (v11 + 3 >= v9) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v11 + 4;
  if (v11 + 4 >= v9) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v11 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v9) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v5 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void HKClinicalGatewayEndpointSchema.asWebRequest(substitutions:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v88[1] = *(id *)MEMORY[0x263EF8340];
  sub_22D0A54D8(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v80 - v6;
  uint64_t v8 = sub_22D2BBAA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v80 - v13;
  if (objc_msgSend(v2, sel_enabled))
  {
    uint64_t v82 = v14;
    uint64_t v83 = v9;
    uint64_t v84 = (uint8_t *)v8;
    uint64_t v85 = a2;
    id v15 = v86;
    id v16 = objc_msgSend(v2, sel_method);
    uint64_t v17 = sub_22D2BCBD0();
    uint64_t v19 = v18;

    v20._countAndFlagsBits = v17;
    v20._object = v19;
    HTTPMethod.init(rawValue:)(v20);
    if (LOBYTE(v88[0]) == 8)
    {
      type metadata accessor for WebRequestError();
      sub_22D085194();
      uint64_t v21 = (void *)swift_allocError();
      uint64_t v23 = v22;
      id v24 = objc_msgSend(v2, sel_method);
      uint64_t v25 = sub_22D2BCBD0();
      uint64_t v27 = v26;

      uint64_t *v23 = v25;
      v23[1] = v27;
      swift_storeEnumTagMultiPayload();
      id v86 = v21;
      swift_willThrow();
      return;
    }
    int v81 = LOBYTE(v88[0]);
    v88[0] = (id)MEMORY[0x263F8EE80];
    sub_22D0A2A44(a1, v88);
    id v86 = v15;
    id v40 = v88[0];
    id v41 = objc_msgSend(v2, sel_URL);
    uint64_t v42 = sub_22D2BCBD0();

    uint64_t v43 = sub_22D26CFAC((uint64_t)v40, v42);
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    sub_22D2573E4(v7);
    uint64_t v47 = v83;
    uint64_t v46 = v84;
    if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v83 + 48))(v7, 1, v84) == 1)
    {
      swift_bridgeObjectRelease();
      sub_22D0A5478((uint64_t)v7, (uint64_t)&qword_26AEC0F28, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_22D0A54D8);
      type metadata accessor for WebRequestError();
      sub_22D085194();
      double v48 = (void *)swift_allocError();
      *BOOL v49 = v43;
      v49[1] = v45;
      swift_storeEnumTagMultiPayload();
      id v86 = v48;
      swift_willThrow();
      return;
    }
    uint64_t v80 = (uint64_t)v40;
    swift_bridgeObjectRelease();
    uint64_t v50 = v82;
    (*(void (**)(char *, char *, uint8_t *))(v47 + 32))(v82, v7, v46);
    uint64_t v51 = sub_22D0A34A4(a1);
    if (!v51)
    {
      unint64_t v57 = 0xF000000000000000;
      goto LABEL_16;
    }
    id v52 = self;
    id v53 = (void *)sub_22D2BCAF0();
    swift_bridgeObjectRelease();
    v88[0] = 0;
    id v54 = objc_msgSend(v52, sel_dataWithJSONObject_options_error_, v53, 0, v88);

    id v55 = v88[0];
    if (v54)
    {
      uint64_t v51 = sub_22D2BBB20();
      unint64_t v57 = v56;

      uint64_t v47 = v83;
      uint64_t v46 = v84;
      uint64_t v50 = v82;
LABEL_16:
      LOBYTE(v88[0]) = v81;
      (*(void (**)(char *, char *, uint8_t *))(v47 + 16))(v12, v50, v46);
      uint64_t v58 = sub_22D0A3C3C(v80);
      swift_bridgeObjectRelease();
      uint64_t v59 = type metadata accessor for FHIRServerWebRequest();
      uint64_t v60 = v85;
      v85[3] = v59;
      v60[4] = (uint64_t)&protocol witness table for FHIRServerWebRequest;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v60);
      FHIRServerWebRequest.init(method:url:body:headers:)(v88, (uint64_t)v12, v51, v57, v58, (uint64_t)boxed_opaque_existential_1);
      (*(void (**)(char *, uint8_t *))(v47 + 8))(v50, v46);
      return;
    }
    double v62 = v55;
    swift_bridgeObjectRelease();
    uint64_t v63 = (void *)sub_22D2BB9C0();

    id v86 = v63;
    swift_willThrow();
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_22D2BC390();
    __swift_project_value_buffer(v64, (uint64_t)qword_26AEC3C90);
    id v65 = v86;
    id v66 = v86;
    id v67 = v65;
    uint64_t v68 = sub_22D2BC380();
    os_log_type_t v69 = sub_22D2BD060();
    if (os_log_type_enabled(v68, v69))
    {
      id v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = (void *)swift_slowAlloc();
      *(_DWORD *)id v70 = 136315138;
      id v72 = v86;
      uint64_t v87 = (uint64_t)v86;
      v88[0] = v71;
      id v73 = v86;
      sub_22CFF49FC();
      uint64_t v74 = sub_22D2BCC30();
      uint64_t v87 = sub_22D0A4D24(v74, v75, (uint64_t *)v88);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v68, v69, "Failed to serialize JSON data: %s", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v71, -1, -1);
      MEMORY[0x230F7BDF0](v70, -1, -1);
    }
    else
    {
      id v76 = v86;
    }
    uint64_t v78 = v83;
    int v77 = v84;
    uint64_t v79 = v82;
    swift_willThrow();
    (*(void (**)(char *, uint8_t *))(v78 + 8))(v79, v77);
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_22D2BC390();
    __swift_project_value_buffer(v28, (uint64_t)qword_26AEC3C90);
    id v29 = v2;
    uint64_t v30 = sub_22D2BC380();
    os_log_type_t v31 = sub_22D2BD050();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v85 = a2;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v34 = (void *)swift_slowAlloc();
      v88[0] = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v84 = v33 + 4;
      id v35 = objc_msgSend(v29, sel_name);
      uint64_t v36 = sub_22D2BCBD0();
      unint64_t v38 = v37;

      uint64_t v87 = sub_22D0A4D24(v36, v38, (uint64_t *)v88);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v30, v31, "HKClinicalGatewayEndpointSchema: %s is not enabled.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v34, -1, -1);
      double v39 = v33;
      a2 = v85;
      MEMORY[0x230F7BDF0](v39, -1, -1);
    }
    else
    {
    }
    a2[4] = 0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
}

uint64_t sub_22D0A34A4(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D0A54D8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v56 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v57 = (char *)&v53 - v14;
  id v15 = objc_msgSend(v2, sel_name);
  uint64_t v16 = sub_22D2BCBD0();
  uint64_t v18 = v17;

  if (v16 == 0xD000000000000013 && v18 == 0x800000022D2D6B50)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
  }
  if (!*(void *)(a1 + 16) || (unint64_t v20 = sub_22D04ED0C(5u), (v21 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_13;
  }
  sub_22CFF5A90(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v60);
  int v22 = swift_dynamicCast();
  uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
  v23(v9, v22 ^ 1u, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_13:
    sub_22D0A5478((uint64_t)v9, (uint64_t)&qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_22D0A54D8);
    goto LABEL_14;
  }
  id v24 = v57;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v57, v9, v10);
  id v25 = objc_msgSend(v2, sel_body);
  if (!v25)
  {
LABEL_29:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_14:
    id v30 = objc_msgSend(v2, sel_body);
    if (!v30) {
      return 0;
    }
    os_log_type_t v31 = v30;
    uint64_t v32 = sub_22D2BCB00();

    return v32;
  }
  uint64_t v26 = v25;
  uint64_t v27 = sub_22D2BCB00();

  if (!*(void *)(v27 + 16))
  {
    long long v60 = 0u;
    long long v61 = 0u;
LABEL_27:
    sub_22D0A5478((uint64_t)&v60, (uint64_t)&qword_26AEC1FF0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_22D0A566C);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_22D04EB7C(0x6574656D61726170, 0xE900000000000072);
  if (v29)
  {
    sub_22CFF5A90(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v60);
  }
  else
  {
    long long v60 = 0u;
    long long v61 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v61 + 1)) {
    goto LABEL_27;
  }
  sub_22D0A54D8(0, &qword_26853EC68, (uint64_t (*)(uint64_t))sub_22D0A553C, MEMORY[0x263F8D488]);
  uint64_t v35 = v34;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  uint64_t v55 = v35;
  uint64_t v36 = *(void **)&v59[0];
  uint64_t v37 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v60 = v37;
  sub_22D053A8C(0x65636E69735FLL, 0xE600000000000000, 1701667182, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v54 = v60;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v24, v10);
  v23(v7, 0, 1, v10);
  uint64_t v39 = v56;
  static SchemaSubstitutions.determineSinceDate(lastFetchDate:)((uint64_t)v7, v56);
  sub_22D0A5478((uint64_t)v7, (uint64_t)&qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_22D0A54D8);
  id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  objc_msgSend(v40, sel_setFormatOptions_, 275);
  id v41 = (void *)sub_22D2BBBC0();
  id v42 = objc_msgSend(v40, sel_stringFromDate_, v41);

  uint64_t v43 = sub_22D2BCBD0();
  uint64_t v45 = v44;

  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v46(v39, v10);
  uint64_t v47 = v54;
  char v48 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v60 = v47;
  sub_22D053A8C(v43, v45, 0x74614465756C6176, 0xED0000656D695465, v48);
  uint64_t v49 = v60;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v36 = sub_22D2816B4(0, v36[2] + 1, 1, v36);
  }
  unint64_t v51 = v36[2];
  unint64_t v50 = v36[3];
  if (v51 >= v50 >> 1) {
    uint64_t v36 = sub_22D2816B4((void *)(v50 > 1), v51 + 1, 1, v36);
  }
  v36[2] = v51 + 1;
  v36[v51 + 4] = v49;
  *((void *)&v61 + 1) = v55;
  *(void *)&long long v60 = v36;
  sub_22D056B08(&v60, v59);
  char v52 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v58 = v27;
  sub_22D053F1C(v59, 0x6574656D61726170, 0xE900000000000072, v52);
  uint64_t v32 = v58;
  swift_bridgeObjectRelease();
  v46((uint64_t)v57, v10);
  return v32;
}

uint64_t sub_22D0A3C3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v14 = MEMORY[0x263F8EE78];
  id v5 = objc_msgSend(v2, sel_headers);
  if (!v5) {
    return v4;
  }
  uint64_t v6 = v5;
  sub_22D0A5438();
  unint64_t v7 = sub_22D2BCE00();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_22D2BD470();
  uint64_t v8 = result;
  if (!result)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    return MEMORY[0x263F8EE78];
  }
LABEL_4:
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x230F7AF90](v10, v7);
      }
      else {
        id v11 = *(id *)(v7 + 8 * v10 + 32);
      }
      uint64_t v12 = v11;
      ++v10;
      id v13 = v11;
      *((void *)&v15 + 1) = &v14;
      *(void *)&long long v15 = a1;
      sub_22D0A3D98((int)&v13, v15);
    }
    while (v8 != v10);
    swift_bridgeObjectRelease_n();
    return v14;
  }
  __break(1u);
  return result;
}

void sub_22D0A3D98(int a1, long long using)
{
  uint64_t v2 = (void **)*((void *)&using + 1);
  uint64_t v4 = *v3;
  uint64_t v5 = using;
  HKClinicalGatewayEndpointSchemaParameter.asHTTPHeader(using:)(*(Swift::OpaquePointer_optional *)((char *)&using - 8));
  uint64_t v6 = v26;
  if (v26)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v27;
    uint64_t v9 = v28;
    uint64_t v10 = *v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v10 = sub_22D2814A4(0, v10[2] + 1, 1, v10);
      *uint64_t v2 = v10;
    }
    unint64_t v13 = v10[2];
    unint64_t v12 = v10[3];
    if (v13 >= v12 >> 1)
    {
      uint64_t v10 = sub_22D2814A4((void *)(v12 > 1), v13 + 1, 1, v10);
      *uint64_t v2 = v10;
    }
    void v10[2] = v13 + 1;
    uint64_t v14 = &v10[4 * v13];
    v14[4] = v7;
    v14[5] = v6;
    v14[6] = v8;
    v14[7] = v9;
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22D2BC390();
    __swift_project_value_buffer(v15, (uint64_t)qword_26AEC3C90);
    id v16 = v4;
    uint64_t v17 = sub_22D2BC380();
    os_log_type_t v18 = sub_22D2BD050();
    if (os_log_type_enabled(v17, v18))
    {
      char v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = v24;
      *(_DWORD *)char v19 = 136315138;
      id v20 = objc_msgSend(v16, sel_param);
      uint64_t v21 = sub_22D2BCBD0();
      unint64_t v23 = v22;

      uint64_t v29 = sub_22D0A4D24(v21, v23, &v25);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v17, v18, "Unable to create HTTPHeader: %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v24, -1, -1);
      MEMORY[0x230F7BDF0](v19, -1, -1);
    }
    else
    {
    }
  }
}

void sub_22D0A4020(unsigned __int8 *a1, void *a2)
{
  sub_22D0A54D8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v79 = (char *)&v74 - v10;
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v74 - v11;
  uint64_t v13 = sub_22D2BBC30();
  uint64_t v95 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v78 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v80 = (uint64_t)&v74 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v81 = (uint64_t)&v74 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v82 = (char *)&v74 - v20;
  LOBYTE(v93[0]) = *a1;
  sub_22CFF5A90((uint64_t)(a1 + 8), (uint64_t)v93 + 8);
  if (swift_dynamicCast())
  {
    long long v21 = v91[0];
    unsigned __int8 v22 = *a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v93[0] = *a2;
    *a2 = 0x8000000000000000;
    sub_22D054070(v21, *((uint64_t *)&v21 + 1), v22, isUniquelyReferenced_nonNull_native);
    *a2 = *(void *)&v93[0];
    swift_bridgeObjectRelease();
    return;
  }
  id v76 = a2;
  uint64_t v77 = v2;
  unsigned __int8 v24 = *a1;
  LOBYTE(v93[0]) = *a1;
  if (ContentVariables.rawValue.getter() == 0xD000000000000011 && v25 == 0x800000022D2D5810)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      goto LABEL_12;
    }
  }
  LOBYTE(v93[0]) = v24;
  sub_22CFF5A90((uint64_t)(a1 + 8), (uint64_t)v93 + 8);
  int v27 = swift_dynamicCast();
  uint64_t v28 = v95;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56);
  if (v27)
  {
    v29(v12, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v12, 1, v13) != 1)
    {
      id v30 = v82;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v82, v12, v13);
      unint64_t v75 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
      LODWORD(v78) = *a1;
      uint64_t v31 = (uint64_t)v79;
      v75(v79, v30, v13);
      v29((char *)v31, 0, 1, v13);
      uint64_t v32 = v81;
      static SchemaSubstitutions.determineSinceDate(lastFetchDate:)(v31, v81);
      uint64_t v33 = MEMORY[0x263F07490];
      uint64_t v34 = MEMORY[0x263F8D8F0];
      sub_22D0A5478(v31, (uint64_t)&qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_22D0A54D8);
      *(void *)&v93[0] = 25959;
      *((void *)&v93[0] + 1) = 0xE200000000000000;
      v75((char *)v31, (char *)v32, v13);
      v29((char *)v31, 0, 1, v13);
      uint64_t v35 = v80;
      static SchemaSubstitutions.determineSinceDate(lastFetchDate:)(v31, v80);
      sub_22D0A5478(v31, (uint64_t)&qword_26AEC0F48, v33, v34, (uint64_t (*)(void))sub_22D0A54D8);
      id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
      objc_msgSend(v36, sel_setFormatOptions_, 275);
      uint64_t v37 = (void *)sub_22D2BBBC0();
      id v38 = objc_msgSend(v36, sel_stringFromDate_, v37);

      sub_22D2BCBD0();
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
      v39(v35, v13);
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      long long v40 = v93[0];
      v39(v32, v13);
      id v41 = v76;
      char v42 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v93[0] = *v41;
      *id v41 = 0x8000000000000000;
      sub_22D054070(v40, *((uint64_t *)&v40 + 1), v78, v42);
      *id v41 = *(void *)&v93[0];
      swift_bridgeObjectRelease();
      v39((uint64_t)v82, v13);
      return;
    }
  }
  else
  {
    v29(v12, 1, 1, v13);
  }
  sub_22D0A5478((uint64_t)v12, (uint64_t)&qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_22D0A54D8);
LABEL_12:
  unsigned __int8 v43 = *a1;
  LOBYTE(v93[0]) = *a1;
  if (ContentVariables.rawValue.getter() == 0xD000000000000015 && v44 == 0x800000022D2D5830)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v45 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0) {
      goto LABEL_21;
    }
  }
  LOBYTE(v93[0]) = v43;
  sub_22CFF5A90((uint64_t)(a1 + 8), (uint64_t)v93 + 8);
  int v46 = swift_dynamicCast();
  uint64_t v47 = v95;
  char v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56);
  if (v46)
  {
    v48(v8, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v8, 1, v13) != 1)
    {
      uint64_t v49 = v78;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v78, v8, v13);
      unint64_t v75 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      LODWORD(v82) = *a1;
      uint64_t v50 = (uint64_t)v79;
      v75(v79, v49, v13);
      v48((char *)v50, 0, 1, v13);
      uint64_t v51 = v81;
      static SchemaSubstitutions.determineSinceDate(lastFetchDate:)(v50, v81);
      uint64_t v52 = MEMORY[0x263F07490];
      uint64_t v53 = MEMORY[0x263F8D8F0];
      sub_22D0A5478(v50, (uint64_t)&qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_22D0A54D8);
      *(void *)&v93[0] = 25959;
      *((void *)&v93[0] + 1) = 0xE200000000000000;
      v75((char *)v50, (char *)v51, v13);
      v48((char *)v50, 0, 1, v13);
      uint64_t v54 = v80;
      static SchemaSubstitutions.determineSinceDate(lastFetchDate:)(v50, v80);
      sub_22D0A5478(v50, (uint64_t)&qword_26AEC0F48, v52, v53, (uint64_t (*)(void))sub_22D0A54D8);
      id v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
      objc_msgSend(v55, sel_setFormatOptions_, 1907);
      uint64_t v56 = (void *)sub_22D2BBBC0();
      id v57 = objc_msgSend(v55, sel_stringFromDate_, v56);

      sub_22D2BCBD0();
      uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
      v58(v54, v13);
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      long long v59 = v93[0];
      v58(v51, v13);
      long long v60 = v76;
      char v61 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v93[0] = *v60;
      *long long v60 = 0x8000000000000000;
      sub_22D054070(v59, *((uint64_t *)&v59 + 1), v82, v61);
      *long long v60 = *(void *)&v93[0];
      swift_bridgeObjectRelease();
      v58((uint64_t)v78, v13);
      return;
    }
  }
  else
  {
    v48(v8, 1, 1, v13);
  }
  sub_22D0A5478((uint64_t)v8, (uint64_t)&qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_22D0A54D8);
LABEL_21:
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v62 = sub_22D2BC390();
  __swift_project_value_buffer(v62, (uint64_t)qword_26AEC3C90);
  LOBYTE(v93[0]) = *a1;
  char v63 = v93[0];
  sub_22CFF5A90((uint64_t)(a1 + 8), (uint64_t)v93 + 8);
  v91[0] = v93[0];
  v91[1] = v93[1];
  uint64_t v92 = v94;
  LOBYTE(v89[0]) = v63;
  sub_22CFF5A90((uint64_t)(a1 + 8), (uint64_t)v89 + 8);
  v87[0] = v89[0];
  v87[1] = v89[1];
  uint64_t v88 = v90;
  uint64_t v64 = sub_22D2BC380();
  os_log_type_t v65 = sub_22D2BD050();
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v66 = swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v86 = v67;
    *(_DWORD *)uint64_t v66 = 136315394;
    char v68 = v91[0];
    LOBYTE(v84) = v91[0];
    sub_22CFF5A90((uint64_t)v91 + 8, (uint64_t)v85);
    char v83 = v68;
    unint64_t v69 = ContentVariables.rawValue.getter();
    unint64_t v71 = v70;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
    uint64_t v84 = sub_22D0A4D24(v69, v71, &v86);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D0A55A0((uint64_t)v91);
    *(_WORD *)(v66 + 12) = 2080;
    sub_22CFF5A90((uint64_t)v87 + 8, (uint64_t)v85);
    uint64_t v72 = sub_22D2BCC30();
    uint64_t v84 = sub_22D0A4D24(v72, v73, &v86);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D0A55A0((uint64_t)v87);
    _os_log_impl(&dword_22CFEE000, v64, v65, "Unexpected type for key: %s -- %s", (uint8_t *)v66, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v67, -1, -1);
    MEMORY[0x230F7BDF0](v66, -1, -1);
  }
  else
  {
    sub_22D0A55A0((uint64_t)v91);
    sub_22D0A55A0((uint64_t)v87);
  }
}

uint64_t sub_22D0A4D24(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_22D0A4DF8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_22CFF5A90((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_22CFF5A90((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_22D0A4DF8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22D2BD230();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_22D0A4FB4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_22D2BD390();
  if (!v8)
  {
    sub_22D2BD450();
    __break(1u);
LABEL_17:
    uint64_t result = sub_22D2BD4C0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_22D0A4FB4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_22D0A504C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D0A52C8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_22D0A52C8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22D0A504C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_22D0A51C4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_22D2BD320();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_22D2BD450();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_22D2BCCC0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_22D2BD4C0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_22D2BD450();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_22D0A51C4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_22D0A566C(0, (unint64_t *)&qword_26AEC1FA8, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_22D0A524C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_22D2BCD10();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x230F7A940](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_22D0A52C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_22D0A566C(0, (unint64_t *)&qword_26AEC1FA8, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

unint64_t sub_22D0A5438()
{
  unint64_t result = qword_26853EC60;
  if (!qword_26853EC60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26853EC60);
  }
  return result;
}

uint64_t sub_22D0A5478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_22D0A54D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D0A553C()
{
  if (!qword_26853EC70)
  {
    unint64_t v0 = sub_22D2BCB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EC70);
    }
  }
}

uint64_t sub_22D0A55A0(uint64_t a1)
{
  sub_22D0A55FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22D0A55FC()
{
  if (!qword_26853EC78)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853EC78);
    }
  }
}

void sub_22D0A566C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_22D0A56B8(uint64_t (*a1)(void), uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return a1();
  }
  uint64_t v5 = Strong;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  swift_retain();
  sub_22D0A63F8(0, (uint64_t)sub_22D0A8D80, (uint64_t)v6);
  swift_release();
  return swift_release();
}

uint64_t sub_22D0A5784(uint64_t *a1, id a2, uint64_t *a3, uint64_t (*a4)(id))
{
  uint64_t v7 = a1[1];
  unint64_t v8 = a1[2];
  uint64_t v9 = a1[3];
  if (v7)
  {
    if (v7 == 1) {
      goto LABEL_8;
    }
    if ((*a1 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = *a1;
      uint64_t v25 = v7;
      sub_22D0A6DC4(&v24, 1);
      swift_bridgeObjectRelease();
    }
  }
  if (v9 && (v8 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v8;
    uint64_t v25 = v9;
    sub_22D0A7E14(&v24, 1);
    swift_bridgeObjectRelease();
  }
LABEL_8:
  if (a2)
  {
    id v10 = a2;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_22D2BC390();
    __swift_project_value_buffer(v11, (uint64_t)qword_26AEC3C90);
    id v12 = a2;
    swift_retain();
    id v13 = a2;
    swift_retain();
    uint64_t v14 = sub_22D2BC380();
    os_log_type_t v15 = sub_22D2BD060();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v26 = v17;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v24 = *a3;
      swift_getMetatypeMetadata();
      uint64_t v18 = sub_22D2BCC30();
      uint64_t v24 = sub_22D0A4D24(v18, v19, &v26);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      uint64_t v24 = (uint64_t)a2;
      id v20 = a2;
      sub_22CFF49FC();
      uint64_t v21 = sub_22D2BCC30();
      uint64_t v24 = sub_22D0A4D24(v21, v22, &v26);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v14, v15, "%s: performIssuerDirectoryDownloadTask returned error: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v17, -1, -1);
      MEMORY[0x230F7BDF0](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  return a4(a2);
}

uint64_t sub_22D0A5A8C()
{
  swift_getMetatypeMetadata();
  uint64_t v1 = sub_22D2BCC30();
  uint64_t v3 = v2;
  sub_22D04C890();
  uint64_t v4 = (void *)swift_allocError();
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 16) = 1;
  sub_22D2A057C(v4);

  uint64_t v7 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6);
}

void sub_22D0A5B74(uint64_t *a1, id a2, uint64_t a3, char a4, void (*a5)(unint64_t, id, id))
{
  unint64_t v6 = a1[1];
  if (v6 < 2)
  {
    if (a2)
    {
      id v8 = a2;
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_22D2BC390();
      __swift_project_value_buffer(v9, (uint64_t)qword_26AEC3C90);
      id v10 = a2;
      swift_retain();
      id v11 = a2;
      swift_retain();
      id v12 = sub_22D2BC380();
      os_log_type_t v13 = sub_22D2BD060();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v29 = v15;
        *(_DWORD *)uint64_t v14 = 136315394;
        swift_getMetatypeMetadata();
        uint64_t v16 = sub_22D2BCC30();
        sub_22D0A4D24(v16, v17, &v29);
        sub_22D2BD220();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        id v18 = a2;
        sub_22CFF49FC();
        uint64_t v19 = sub_22D2BCC30();
        v28[0] = sub_22D0A4D24(v19, v20, &v29);
        sub_22D2BD220();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22CFEE000, v12, v13, "%s: performIssuerDirectoryDownloadTask returned error: %s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v15, -1, -1);
        MEMORY[0x230F7BDF0](v14, -1, -1);
      }
      else
      {

        swift_release_n();
      }
    }
    a5(0, 0, a2);
    return;
  }
  uint64_t v21 = *a1;
  if ((*a1 & 0x8000000000000000) == 0)
  {
    v28[0] = *a1;
    v28[1] = v6;
    unint64_t v22 = sub_22D0A6DC4(v28, a4 & 1);
    unint64_t v23 = v22;
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_22D2BD470();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_11;
      }
    }
    else if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_11:
      id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v21);
      a5(v23, v24, 0);

      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    unint64_t v23 = 0;
    goto LABEL_11;
  }
  sub_22CFF9B10();
  uint64_t v25 = (void *)swift_allocError();
  *uint64_t v26 = 4;
  a5(0, 0, v25);
}

void sub_22D0A5F80(void *a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(unint64_t, id, uint64_t))
{
  uint64_t v6 = a1[3];
  if (a1[1] == 1 || v6 == 0)
  {
    a5(0, 0, a2);
    return;
  }
  uint64_t v8 = a1[2];
  if ((v8 & 0x8000000000000000) == 0)
  {
    v15[0] = a1[2];
    v15[1] = v6;
    unint64_t v9 = sub_22D0A7E14(v15, a4 & 1);
    unint64_t v10 = v9;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_22D2BD470();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_11;
      }
    }
    else if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_11:
      id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v8);
      a5(v10, v11, 0);

      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = 0;
    goto LABEL_11;
  }
  sub_22CFF9B10();
  id v12 = (void *)swift_allocError();
  unsigned char *v13 = 7;
  a5(0, 0, (uint64_t)v12);
}

uint64_t sub_22D0A62DC(int a1, int a2, void *aBlock)
{
  uint64_t v4 = (void (**)(void *, uint64_t, void))_Block_copy(aBlock);
  v4[2](v4, 1, 0);
  _Block_release(v4);
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return sub_22D0A90A4(v5);
}

id sub_22D0A63C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IssuerDirectoryDownloadTaskManager.URLSessionNoCustomCertVerificationDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22D0A63F8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  char v7 = a1 & 1;
  if (a1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = *(void *)(v4 + 56);
      swift_retain();
      goto LABEL_6;
    }
  }
  uint64_t v10 = *(void *)(v4 + 56);
  id v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IssuerDirectoryDownloadTaskManager.URLSessionNoCustomCertVerificationDelegate()), sel_init);
  id v12 = objc_msgSend(*(id *)(v10 + 16), sel_configuration);
  type metadata accessor for WebRequestPerformer();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 24) = MEMORY[0x263F8EE88];
  os_log_type_t v13 = self;
  id v14 = v11;
  id v15 = objc_msgSend(v13, sel_sessionWithConfiguration_delegate_delegateQueue_, v12, v14, 0);

  *(void *)(v9 + 16) = v15;
LABEL_6:
  uint64_t v16 = *(void **)(v4 + 64);
  sub_22CFF4B00(v4 + 16, (uint64_t)&v32);
  v29[0] = v7;
  uint64_t v30 = v9;
  uint64_t v31 = v16;
  uint64_t v17 = qword_26AEC1C58;
  swift_retain();
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_22D2BC390();
  __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  unint64_t v20 = sub_22D2BC380();
  os_log_type_t v21 = sub_22D2BD080();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = v27;
    *(_DWORD *)uint64_t v22 = 136315394;
    swift_getMetatypeMetadata();
    uint64_t v23 = sub_22D2BCC30();
    sub_22D0A4D24(v23, v24, &v28);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2048;
    sub_22D0A93E0(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
    sub_22D086B58();
    sub_22D2BBED0();
    swift_release();
    sub_22D2BD220();
    swift_release();
    _os_log_impl(&dword_22CFEE000, v20, v21, "%s: Enqueuing Issuer directory download task: (%ld tasks already enqueued)", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v27, -1, -1);
    MEMORY[0x230F7BDF0](v22, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v4;
  v25[3] = a2;
  v25[4] = a3;
  swift_retain();
  swift_retain();
  sub_22D2A0D94((uint64_t)v29, (uint64_t)sub_22D0A9330, (uint64_t)v25);
  swift_release();
  swift_release();
  return sub_22D0A933C((uint64_t)v29);
}

void sub_22D0A6848(uint64_t a1, void *a2, void (*a3)(void, void))
{
  uint64_t v6 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    id v9 = v6;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_22D2BC390();
    __swift_project_value_buffer(v10, (uint64_t)qword_26AEC3C90);
    sub_22D0A9444(v6, v5, v8, v7, 1);
    swift_retain();
    sub_22D0A9444(v6, v5, v8, v7, 1);
    swift_retain();
    id v11 = sub_22D2BC380();
    os_log_type_t v12 = sub_22D2BD060();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t type = v12;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v41 = v37;
      *(void *)&long long v42 = *a2;
      swift_getMetatypeMetadata();
      uint64_t v14 = sub_22D2BCC30();
      uint64_t v39 = a3;
      *(void *)&long long v42 = sub_22D0A4D24(v14, v15, &v41);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      uint64_t v16 = (void *)sub_22D2BB9B0();
      id v17 = objc_msgSend(v16, sel_hrs_safelyLoggableDescription);

      uint64_t v18 = sub_22D2BCBD0();
      unint64_t v20 = v19;

      uint64_t v21 = v18;
      a3 = v39;
      *(void *)&long long v42 = sub_22D0A4D24(v21, v20, &v41);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D0A9494(v6, v5, v8, v7, 1);
      sub_22D0A9494(v6, v5, v8, v7, 1);
      _os_log_impl(&dword_22CFEE000, v11, type, "%s: Issuer directory download task failed: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v37, -1, -1);
      MEMORY[0x230F7BDF0](v13, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_22D0A9494(v6, v5, v8, v7, 1);
      sub_22D0A9494(v6, v5, v8, v7, 1);
    }

    long long v42 = xmmword_22D2C2D80;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    id v31 = v6;
    a3(&v42, v6);
    sub_22D0A9494(v6, v5, v8, v7, 1);
    uint64_t v32 = v6;
    uint64_t v33 = v5;
    uint64_t v34 = v8;
    uint64_t v35 = v7;
    char v36 = 1;
  }
  else
  {
    uint64_t v22 = qword_26AEC1C58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_22D2BC390();
    __swift_project_value_buffer(v23, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    unint64_t v24 = sub_22D2BC380();
    os_log_type_t v25 = sub_22D2BD080();
    if (os_log_type_enabled(v24, v25))
    {
      long long v40 = a3;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v41 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      *(void *)&long long v42 = *a2;
      swift_getMetatypeMetadata();
      uint64_t v28 = sub_22D2BCC30();
      *(void *)&long long v42 = sub_22D0A4D24(v28, v29, &v41);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v24, v25, "%s: Issuer directory download task finished successfully", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v27, -1, -1);
      uint64_t v30 = v26;
      a3 = v40;
      MEMORY[0x230F7BDF0](v30, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    *(void *)&long long v42 = v6;
    *((void *)&v42 + 1) = v5;
    uint64_t v43 = v8;
    uint64_t v44 = v7;
    a3(&v42, 0);
    uint64_t v32 = v6;
    uint64_t v33 = v5;
    uint64_t v34 = v8;
    uint64_t v35 = v7;
    char v36 = 0;
  }
  sub_22D0A9494(v32, v33, v34, v35, v36);
}

uint64_t sub_22D0A6DC4(uint64_t *a1, char a2)
{
  uint64_t v4 = a1[1];
  uint64_t v32 = *a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = MEMORY[0x263F8EE78];
  uint64_t v6 = (void *)(v5 + 16);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  uint64_t v7 = *(void *)(v4 + 16);
  if (v7)
  {
    char v28 = a2;
    uint64_t v30 = v2;
    uint64_t v31 = v5;
    uint64_t v8 = type metadata accessor for VHRDirectoryIssuer();
    uint64_t v9 = v4;
    uint64_t v10 = v4
        + ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v8 - 8) + 72);
    uint64_t v29 = v9;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_22D2BB9E0();
      os_log_type_t v12 = (uint64_t *)(v10 + *(int *)(v8 + 20));
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      id v15 = objc_allocWithZone(MEMORY[0x263F45D28]);
      swift_bridgeObjectRetain();
      uint64_t v16 = (void *)sub_22D2BCBA0();
      swift_bridgeObjectRelease();
      id v17 = (void *)sub_22D2BCBA0();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_initWithIdentifier_title_, v16, v17);

      MEMORY[0x230F7AA40]();
      if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_22D2BCE30();
      }
      sub_22D2BCE50();
      uint64_t result = sub_22D2BCE20();
      uint64_t v19 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0) {
        uint64_t v19 = v14 & 0xFFFFFFFFFFFFLL;
      }
      if (!v19)
      {
        uint64_t v20 = *(void *)(v33 + 16);
        BOOL v21 = __OFADD__(v20, 1);
        uint64_t v22 = v20 + 1;
        if (v21)
        {
          __break(1u);
          return result;
        }
        *(void *)(v33 + 16) = v22;
      }
      v10 += v11;
      if (!--v7)
      {
        uint64_t v4 = v29;
        swift_bridgeObjectRelease();
        uint64_t v2 = v30;
        uint64_t v5 = v31;
        a2 = v28;
        break;
      }
    }
  }
  if (a2)
  {
    uint64_t v23 = *(void **)(v2 + 64);
    sub_22D030474(0, &qword_26853ED08);
    swift_bridgeObjectRetain();
    unint64_t v24 = (void *)sub_22D2BCDF0();
    swift_bridgeObjectRelease();
    os_log_type_t v25 = (void *)swift_allocObject();
    v25[2] = v2;
    v25[3] = v5;
    v25[4] = v33;
    v25[5] = v32;
    v25[6] = v4;
    aBlock[4] = sub_22D0A9294;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22D1F193C;
    aBlock[3] = &block_descriptor_41;
    uint64_t v26 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v23, sel_insertOrReplaceIssuerRegistryEntries_completion_, v24, v26);
    _Block_release(v26);

    swift_beginAccess();
    uint64_t v27 = *(void *)(v5 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    uint64_t v27 = *(void *)(v5 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  swift_release();
  return v27;
}

void sub_22D0A7168(char a1, id a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = &unk_26AEC1000;
  if (a1)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_22D2BC390();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    id v15 = sub_22D2BC380();
    os_log_type_t v16 = sub_22D2BD050();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v47 = v16;
      uint64_t v48 = a6;
      uint64_t v49 = a7;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v52[0] = v18;
      *(_DWORD *)uint64_t v17 = 136315650;
      swift_getMetatypeMetadata();
      uint64_t v19 = sub_22D2BCC30();
      aBlock[0] = sub_22D0A4D24(v19, v20, v52);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      swift_beginAccess();
      unint64_t v21 = *(void *)(a4 + 16);
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_22D2BD470();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_beginAccess();
      uint64_t v23 = *(void *)(a5 + 16);
      swift_release();
      swift_release();
      if (__OFSUB__(v22, v23))
      {
        __break(1u);
        return;
      }
      aBlock[0] = v22 - v23;
      sub_22D2BD220();
      swift_release();
      swift_release();
      *(_WORD *)(v17 + 22) = 2048;
      swift_beginAccess();
      uint64_t v24 = *(void *)(a5 + 16);
      swift_release();
      aBlock[0] = v24;
      sub_22D2BD220();
      swift_release();
      _os_log_impl(&dword_22CFEE000, v15, v47, "%s: HKSignedClinicalDataStore.insertOrReplaceIssuerRegistryEntries completed sucessfully. Inserted %ld entries. Deleted %ld entries.", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v18, -1, -1);
      MEMORY[0x230F7BDF0](v17, -1, -1);

      uint64_t v9 = (void *)&unk_26AEC1000;
      a6 = v48;
      a7 = v49;
    }
    else
    {

      swift_release_n();
      swift_release_n();
      swift_release_n();
    }
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v25 = sub_22D2BC380();
    os_log_type_t v26 = sub_22D2BD080();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      v52[0] = v50;
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v28 = sub_22D2BCC30();
      sub_22D0A4D24(v28, v29, v52);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2048;
      swift_bridgeObjectRelease();
      aBlock[0] = a6;
      uint64_t v9 = (void *)&unk_26AEC1000;
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v25, v26, "%s: Updating RegistryIssuerContentVersion to %ld", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v50, -1, -1);
      MEMORY[0x230F7BDF0](v27, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v30 = (void *)a3[8];
    id v31 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a6);
    uint64_t v32 = (void *)swift_allocObject();
    v32[2] = a3;
    v32[3] = a6;
    v32[4] = a7;
    aBlock[4] = sub_22D0A92BC;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22D1F193C;
    aBlock[3] = &block_descriptor_47;
    uint64_t v33 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v30, sel_setRegistryIssuerContentVersion_completion_, v31, v33);
    _Block_release(v33);
  }
  if (a2)
  {
    id v34 = a2;
    if (v9[395] != -1) {
      swift_once();
    }
    uint64_t v35 = sub_22D2BC390();
    __swift_project_value_buffer(v35, (uint64_t)qword_26AEC3C90);
    swift_retain();
    id v36 = a2;
    swift_retain();
    id v37 = a2;
    id v38 = sub_22D2BC380();
    os_log_type_t v39 = sub_22D2BD060();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v52[0] = v41;
      *(_DWORD *)uint64_t v40 = 136315394;
      aBlock[0] = *a3;
      swift_getMetatypeMetadata();
      uint64_t v42 = sub_22D2BCC30();
      aBlock[0] = sub_22D0A4D24(v42, v43, v52);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      aBlock[0] = a2;
      id v44 = a2;
      sub_22CFF49FC();
      uint64_t v45 = sub_22D2BCC30();
      aBlock[0] = sub_22D0A4D24(v45, v46, v52);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v38, v39, "%s: HKSignedClinicalDataStore.insertOrReplaceIssuerRegistryEntries failed: %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v41, -1, -1);
      MEMORY[0x230F7BDF0](v40, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

void sub_22D0A7990(char a1, id a2, id *a3, uint64_t a4)
{
  if (a1)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22D2BC390();
    __swift_project_value_buffer(v7, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_22D2BC380();
    os_log_type_t v9 = sub_22D2BD080();
    if (!os_log_type_enabled(v8, v9))
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      if (!a2) {
        return;
      }
      goto LABEL_7;
    }
    uint64_t v27 = a4;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v28 = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v29 = (uint64_t)*a3;
    swift_getMetatypeMetadata();
    uint64_t v12 = sub_22D2BCC30();
    uint64_t v29 = sub_22D0A4D24(v12, v13, &v28);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2048;
    swift_bridgeObjectRelease();
    uint64_t v29 = v27;
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v8, v9, "%s: Updated RegistryIssuerContentVersion to %ld successfully", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v11, -1, -1);
    MEMORY[0x230F7BDF0](v10, -1, -1);
  }
  if (!a2) {
    return;
  }
LABEL_7:
  id v14 = a2;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_22D2BC390();
  __swift_project_value_buffer(v15, (uint64_t)qword_26AEC3C90);
  swift_retain();
  id v16 = a2;
  swift_retain();
  id v17 = a2;
  uint64_t v18 = sub_22D2BC380();
  os_log_type_t v19 = sub_22D2BD060();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v28 = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v29 = (uint64_t)*a3;
    swift_getMetatypeMetadata();
    uint64_t v22 = sub_22D2BCC30();
    uint64_t v29 = sub_22D0A4D24(v22, v23, &v28);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v29 = (uint64_t)a2;
    id v24 = a2;
    sub_22CFF49FC();
    uint64_t v25 = sub_22D2BCC30();
    uint64_t v29 = sub_22D0A4D24(v25, v26, &v28);
    sub_22D2BD220();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v18, v19, "%s: HKSignedClinicalDataStore.setRegistryIssuerContentVersion failed: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v21, -1, -1);
    MEMORY[0x230F7BDF0](v20, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_22D0A7E14(uint64_t *a1, char a2)
{
  uint64_t v5 = type metadata accessor for EUDCCPublicKey() - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  aBlock[0] = MEMORY[0x263F8EE78];
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v23 = v2;
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v13 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_22D0A90AC(v12, (uint64_t)v8);
      id v14 = sub_22D26E2D4();
      uint64_t v15 = sub_22D0A9110((uint64_t)v8);
      if (v14)
      {
        MEMORY[0x230F7AA40](v15);
        if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
          sub_22D2BCE30();
        sub_22D2BCE50();
        sub_22D2BCE20();
      }
      v12 += v13;
      --v11;
    }
    while (v11);
    uint64_t v2 = v23;
    uint64_t v16 = aBlock[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    id v17 = *(void **)(v2 + 64);
    sub_22D030474(0, (unint64_t *)&unk_268542680);
    uint64_t v18 = (void *)sub_22D2BCDF0();
    os_log_type_t v19 = (void *)swift_allocObject();
    v19[2] = v2;
    v19[3] = v16;
    v19[4] = v9;
    v19[5] = v10;
    aBlock[4] = sub_22D0A91B4;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22D1F193C;
    aBlock[3] = &block_descriptor_8;
    uint64_t v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v17, sel_insertOrReplacePublicKeyEntries_completion_, v18, v20);
    _Block_release(v20);
  }
  return v16;
}

void sub_22D0A809C(char a1, id a2, uint64_t a3, unint64_t a4, NSObject *a5, uint64_t a6)
{
  if (a1)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_22D2BC390();
    __swift_project_value_buffer(v10, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_22D2BC380();
    os_log_type_t v12 = sub_22D2BD050();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_t oslog = a5;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v44 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v15 = sub_22D2BCC30();
      aBlock[0] = sub_22D0A4D24(v15, v16, &v44);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2048;
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_22D2BD470();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      aBlock[0] = v17;
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v11, v12, "%s: HKSignedClinicalDataStore.insertOrReplacePublicKeyEntries completed sucessfully. Inserted %ld entries", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v14, -1, -1);
      MEMORY[0x230F7BDF0](v13, -1, -1);

      a5 = oslog;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    id v31 = sub_22D2BC380();
    os_log_type_t v32 = sub_22D2BD080();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v44 = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v35 = sub_22D2BCC30();
      sub_22D0A4D24(v35, v36, &v44);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2048;
      swift_bridgeObjectRelease();
      aBlock[0] = a5;
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v31, v32, "%s: Updating RegistryPublicKeyContentVersion to %ld", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v34, -1, -1);
      MEMORY[0x230F7BDF0](v33, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    id v37 = *(void **)(a3 + 64);
    id v38 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a5);
    os_log_type_t v39 = (void *)swift_allocObject();
    v39[2] = a3;
    v39[3] = a5;
    v39[4] = a6;
    aBlock[4] = sub_22D0A91F0;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22D1F193C;
    aBlock[3] = &block_descriptor_29;
    uint64_t v40 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v37, sel_setRegistryPublicKeyContentVersion_completion_, v38, v40);
    _Block_release(v40);
  }
  else if (a2)
  {
    id v19 = a2;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_22D2BC390();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
    swift_retain();
    id v21 = a2;
    swift_retain();
    id v22 = a2;
    osloga = sub_22D2BC380();
    os_log_type_t v23 = sub_22D2BD060();
    if (os_log_type_enabled(osloga, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v44 = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v26 = sub_22D2BCC30();
      sub_22D0A4D24(v26, v27, &v44);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      id v28 = a2;
      sub_22CFF49FC();
      uint64_t v29 = sub_22D2BCC30();
      aBlock[0] = sub_22D0A4D24(v29, v30, &v44);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, osloga, v23, "%s: HKSignedClinicalDataStore.insertOrReplaceIssuerRegistryEntries failed: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v25, -1, -1);
      MEMORY[0x230F7BDF0](v24, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

void sub_22D0A880C(char a1, void *a2, uint64_t *a3, uint64_t a4)
{
  if (a1)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_22D2BC390();
    __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_22D2BC380();
    os_log_type_t v8 = sub_22D2BD080();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v26 = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v27 = *a3;
      swift_getMetatypeMetadata();
      uint64_t v11 = sub_22D2BCC30();
      uint64_t v27 = sub_22D0A4D24(v11, v12, &v26);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2048;
      swift_bridgeObjectRelease();
      uint64_t v27 = a4;
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v7, v8, "%s: Updated RegistryPublicKeyContentVersion to %ld successfully", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v10, -1, -1);
      MEMORY[0x230F7BDF0](v9, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_22D2BC390();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
    swift_retain();
    id v15 = a2;
    swift_retain();
    id v16 = a2;
    os_log_t oslog = sub_22D2BC380();
    os_log_type_t v17 = sub_22D2BD060();
    if (os_log_type_enabled(oslog, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v26 = v19;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v27 = *a3;
      swift_getMetatypeMetadata();
      uint64_t v20 = sub_22D2BCC30();
      uint64_t v27 = sub_22D0A4D24(v20, v21, &v26);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v27 = (uint64_t)a2;
      id v22 = a2;
      sub_22D0A93E0(0, &qword_26AEC1FC0, (uint64_t (*)(uint64_t))sub_22CFF49FC, MEMORY[0x263F8D8F0]);
      uint64_t v23 = sub_22D2BCC30();
      uint64_t v27 = sub_22D0A4D24(v23, v24, &v26);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, oslog, v17, "%s: HKSignedClinicalDataStore.setRegistryPublicKeyContentVersion failed: %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v19, -1, -1);
      MEMORY[0x230F7BDF0](v18, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
}

uint64_t sub_22D0A8CC4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IssuerDirectoryDownloadTaskManager()
{
  return self;
}

uint64_t type metadata accessor for IssuerDirectoryDownloadTaskManager.URLSessionNoCustomCertVerificationDelegate()
{
  return self;
}

uint64_t sub_22D0A8D5C()
{
  return MEMORY[0x263F8E4E0];
}

uint64_t sub_22D0A8D68()
{
  return objectdestroyTm_4(MEMORY[0x263F8EED8]);
}

uint64_t sub_22D0A8D80(uint64_t *a1, void *a2)
{
  return sub_22D0A5784(a1, a2, *(uint64_t **)(v2 + 16), *(uint64_t (**)(id))(v2 + 24));
}

uint64_t sub_22D0A8D8C()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D0A8DDC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_22D0A8E9C;
  uint64_t v6 = (uint64_t (*)(int, int, void *))((char *)&dword_26853ECE8 + dword_26853ECE8);
  return v6(v2, v3, v4);
}

uint64_t sub_22D0A8E9C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t objectdestroy_14Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D0A8FD8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_22D0A94FC;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_26853F1B8 + dword_26853F1B8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_22D0A90A4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_22D0A90AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EUDCCPublicKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0A9110(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EUDCCPublicKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D0A916C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_22D0A91B4(char a1, void *a2)
{
  sub_22D0A809C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_22D0A91D8()
{
  return objectdestroyTm_4(MEMORY[0x263F8EEA0]);
}

void sub_22D0A91F0(char a1, void *a2)
{
  sub_22D0A880C(a1, a2, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_22D0A91FC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D0A9234()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D0A9244()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_22D0A9294(char a1, void *a2)
{
  sub_22D0A7168(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_22D0A92A4()
{
  return objectdestroyTm_4(MEMORY[0x263F8EEA0]);
}

void sub_22D0A92BC(char a1, void *a2)
{
  sub_22D0A7990(a1, a2, *(id **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_22D0A92C8()
{
  return objectdestroyTm_4(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroyTm_4(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return MEMORY[0x270FA0238](v1, 40, 7);
}

void sub_22D0A9330(uint64_t a1)
{
  sub_22D0A6848(a1, *(void **)(v1 + 16), *(void (**)(void, void))(v1 + 24));
}

uint64_t sub_22D0A933C(uint64_t a1)
{
  return a1;
}

uint64_t sub_22D0A9390@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 16);
  if (*(void *)(v1 + 32)) {
    ++v4;
  }
  *a1 = v4;
  return result;
}

void sub_22D0A93E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_22D0A9444(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_22D0A9494(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D0A9500(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A950C(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A9518(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A9524(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A9530(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A953C(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A9548(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A9554(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A9560(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_22D2BD3D0();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_22CFF5A90(i, (uint64_t)v5);
    type metadata accessor for SecCertificate(0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_22D2BD3A0();
    sub_22D2BD3E0();
    sub_22D2BD3F0();
    sub_22D2BD3B0();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_22D0A965C(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A9668(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A9674(unint64_t a1)
{
  return sub_22D0A9680(a1);
}

uint64_t sub_22D0A9680(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_22D2BD3D0();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x230F7AF90](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_22D2BD3A0();
        sub_22D2BD3E0();
        sub_22D2BD3F0();
        sub_22D2BD3B0();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_22D2BD3A0();
        sub_22D2BD3E0();
        sub_22D2BD3F0();
        sub_22D2BD3B0();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_22D2BD470();
    swift_bridgeObjectRelease();
    sub_22D2BD3D0();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_22D0A9864(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_22D0A9988;
  *(void *)(v15 + 24) = v14;
  swift_retain();
  sub_22D0A9CAC(a4, a5, a6, a7, (uint64_t)sub_22D0A9CA4, v15);
  return swift_release();
}

uint64_t sub_22D0A9950()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D0A9988(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = *(uint64_t (**)(void *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  char v8 = a4 & 1;
  return v5(v7);
}

void sub_22D0A99CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, void (*a7)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_22CFF9B64(a2, a3);
    a7(a1, a2, a3, 0);
    sub_22D0AADC4(a1, a2, a3);
  }
  if (a6 != 0xFF)
  {
    sub_22D0AAD80(a4, a5, a6);
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_22D2BC390();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
    sub_22D0AAD80(a4, a5, a6);
    sub_22D0AAD80(a4, a5, a6);
    uint64_t v15 = sub_22D2BC380();
    os_log_type_t v16 = sub_22D2BD060();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v17 = 136315138;
      uint64_t v23 = v18;
      sub_22D0AAD80(a4, a5, a6);
      uint64_t v19 = sub_22D2BCC30();
      sub_22D0A4D24(v19, v20, &v23);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D0AAD98(a4, a5, a6);
      sub_22D0AAD98(a4, a5, a6);
      _os_log_impl(&dword_22CFEE000, v15, v16, "Could not generate BAA Cert Signature. Error: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v18, -1, -1);
      MEMORY[0x230F7BDF0](v17, -1, -1);
    }
    else
    {
      sub_22D0AAD98(a4, a5, a6);
      sub_22D0AAD98(a4, a5, a6);
    }

    sub_22D092498();
    unint64_t v21 = (void *)swift_allocError();
    *(void *)uint64_t v22 = a4;
    *(void *)(v22 + 8) = a5;
    *(unsigned char *)(v22 + 16) = a6;
    a7((uint64_t)v21, 0, 0, 1);
  }
}

void sub_22D0A9CA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  sub_22D0A99CC(a1, a2, a3, a4, a5, a6, *(void (**)(uint64_t, uint64_t, unint64_t, uint64_t))(v6 + 16));
}

void sub_22D0A9CAC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 < 1)
  {
    sub_22D2BD310();
    swift_bridgeObjectRelease();
    sub_22D2BD630();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D2BCCB0();
    sub_22D2BD460();
    __break(1u);
  }
  else
  {
    uint64_t v12 = (void *)sub_22D2BCAF0();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = a3;
    v13[3] = a1;
    v13[4] = a2;
    v13[5] = a4;
    v13[6] = a5;
    v13[7] = a6;
    aBlock[4] = sub_22D0AAB94;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22D0AABC4;
    aBlock[3] = &block_descriptor_9;
    uint64_t v14 = _Block_copy(aBlock);
    sub_22CFF9B64(a1, a2);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    DeviceIdentityIssueClientCertificateWithCompletion();
    _Block_release(v14);
  }
}

uint64_t sub_22D0A9EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void, void, void, uint64_t, uint64_t, void), uint64_t a8)
{
  if (a3 < 2) {
    return a7(0, 0, 0, a1, a2, 0);
  }
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_22D2BC390();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
  uint64_t v15 = sub_22D2BC380();
  os_log_type_t v16 = sub_22D2BD050();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v17 = 134217984;
    uint64_t v18 = a3 - 1;
    sub_22D2BD220();
    _os_log_impl(&dword_22CFEE000, v15, v16, "Retrying generating the BAA signature. Retries left: %ld", v17, 0xCu);
    MEMORY[0x230F7BDF0](v17, -1, -1);
  }
  else
  {

    uint64_t v18 = a3 - 1;
  }
  return sub_22D0A9CAC(a4, a5, v18, a6, a7, a8);
}

uint64_t sub_22D0AA048(__SecKey *a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9)
{
  uint64_t v13 = a4;
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  if (a3)
  {
    id v16 = a3;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_22D2BC390();
    __swift_project_value_buffer(v17, (uint64_t)qword_26AEC3C90);
    id v18 = a3;
    id v19 = a3;
    unint64_t v20 = sub_22D2BC380();
    os_log_type_t v21 = sub_22D2BD060();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v93 = v13;
      id v23 = (id)swift_slowAlloc();
      uint64_t v98 = (uint64_t)v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      id v24 = a3;
      sub_22CFF49FC();
      uint64_t v25 = sub_22D2BCC30();
      v96[0] = sub_22D0A4D24(v25, v26, &v98);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v20, v21, "Could not retrieve BAA private key caused. Error: %s", v22, 0xCu);
      swift_arrayDestroy();
      id v27 = v23;
      uint64_t v13 = v93;
      MEMORY[0x230F7BDF0](v27, -1, -1);
      MEMORY[0x230F7BDF0](v22, -1, -1);
    }
    else
    {
    }
    uint64_t v98 = (uint64_t)a3;
    id v41 = a3;
    sub_22CFF49FC();
    uint64_t v42 = sub_22D2BCC30();
    sub_22D0A9EB4(v42, v43, v13, a5, a6, a7, a8, a9);
    swift_bridgeObjectRelease();

    return HKReleaseSecKey();
  }
  if (!a2 || (unint64_t v29 = sub_22D0A9560(a2)) == 0)
  {
LABEL_21:
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_22D2BC390();
    __swift_project_value_buffer(v44, (uint64_t)qword_26AEC3C90);
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_22D2BC380();
    os_log_type_t v46 = sub_22D2BD060();
    if (os_log_type_enabled(v45, v46))
    {
      os_log_type_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v96[0] = v48;
      *(_DWORD *)os_log_type_t v47 = 136315138;
      if (a2) {
        uint64_t v49 = *(void *)(a2 + 16);
      }
      else {
        uint64_t v49 = 0;
      }
      uint64_t v98 = v49;
      BOOL v99 = a2 == 0;
      sub_22D0AAC90();
      uint64_t v50 = sub_22D2BCC30();
      uint64_t v98 = sub_22D0A4D24(v50, v51, v96);
      sub_22D2BD220();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v45, v46, "Could not retrieve BAA private key caused by incorrect certs. Count: %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v48, -1, -1);
      MEMORY[0x230F7BDF0](v47, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22D0A9EB4(0xD000000000000011, 0x800000022D2D6FD0, a4, a5, a6, a7, a8, a9);
    return HKReleaseSecKey();
  }
  uint64_t v30 = v29;
  if (*(void *)(a2 + 16) != 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (v29 >> 62)
  {
    uint64_t v31 = sub_22D2BD470();
    uint64_t v91 = a9;
    if (v31) {
      goto LABEL_11;
    }
LABEL_37:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
    goto LABEL_38;
  }
  uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v91 = a9;
  if (!v31) {
    goto LABEL_37;
  }
LABEL_11:
  uint64_t v98 = MEMORY[0x263F8EE78];
  sub_22D24BDFC(0, v31 & ~(v31 >> 63), 0);
  if (v31 < 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v92 = a5;
  uint64_t v89 = a6;
  uint64_t v90 = a1;
  uint64_t v9 = v98;
  if ((v30 & 0xC000000000000001) != 0)
  {
    uint64_t v32 = 0;
    do
    {
      uint64_t v33 = (__SecCertificate *)MEMORY[0x230F7AF90](v32, v30);
      CFDataRef v34 = SecCertificateCopyData(v33);
      uint64_t v35 = sub_22D2BBB20();
      uint64_t v37 = v36;
      swift_unknownObjectRelease();

      uint64_t v98 = v9;
      unint64_t v39 = *(void *)(v9 + 16);
      unint64_t v38 = *(void *)(v9 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_22D24BDFC(v38 > 1, v39 + 1, 1);
        uint64_t v9 = v98;
      }
      ++v32;
      *(void *)(v9 + 16) = v39 + 1;
      uint64_t v40 = v9 + 16 * v39;
      *(void *)(v40 + 32) = v35;
      *(void *)(v40 + 40) = v37;
    }
    while (v31 != v32);
  }
  else
  {
    uint64_t v53 = (id *)(v30 + 32);
    do
    {
      uint64_t v54 = (__SecCertificate *)*v53;
      CFDataRef v55 = SecCertificateCopyData(v54);
      uint64_t v56 = sub_22D2BBB20();
      uint64_t v58 = v57;

      uint64_t v98 = v9;
      unint64_t v60 = *(void *)(v9 + 16);
      unint64_t v59 = *(void *)(v9 + 24);
      if (v60 >= v59 >> 1)
      {
        sub_22D24BDFC(v59 > 1, v60 + 1, 1);
        uint64_t v9 = v98;
      }
      *(void *)(v9 + 16) = v60 + 1;
      uint64_t v61 = v9 + 16 * v60;
      *(void *)(v61 + 32) = v56;
      *(void *)(v61 + 40) = v58;
      ++v53;
      --v31;
    }
    while (v31);
  }
  uint64_t result = swift_bridgeObjectRelease();
  a6 = v89;
  a1 = v90;
  a5 = v92;
LABEL_38:
  error[0] = 0;
  uint64_t v30 = a4;
  if (a1)
  {
    CFStringRef v62 = (const __CFString *)*MEMORY[0x263F172E8];
    CFDataRef v63 = (const __CFData *)sub_22D2BBB00();
    CFDataRef Signature = SecKeyCreateSignature(a1, v62, v63, error);

    if (Signature)
    {
      uint64_t v65 = sub_22D2BBB20();
      unint64_t v67 = v66;

      if (!error[0])
      {
        sub_22CFF9B64(v65, v67);
        a8(v9, v65, v67, 0, 0, 255);
        sub_22CFF5630(v65, v67);
        swift_bridgeObjectRelease();
        sub_22CFF5630(v65, v67);
        return HKReleaseSecKey();
      }
    }
    else
    {
      uint64_t v65 = 0;
      unint64_t v67 = 0xF000000000000000;
    }
    uint64_t v87 = v65;
    unint64_t v88 = v67;
    if (!*(void *)(v9 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_49:
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_22D2BC390();
      __swift_project_value_buffer(v74, (uint64_t)qword_26AEC3C90);
      unint64_t v75 = sub_22D2BC380();
      os_log_type_t v76 = sub_22D2BD060();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v77 = 0;
        _os_log_impl(&dword_22CFEE000, v75, v76, "BAA Signature failed with nil, but referenceKey populated", v77, 2u);
        MEMORY[0x230F7BDF0](v77, -1, -1);
      }

      if (error[0])
      {
        uint64_t v78 = sub_22D2BC380();
        os_log_type_t v79 = sub_22D2BD060();
        if (os_log_type_enabled(v78, v79))
        {
          uint64_t v80 = (uint8_t *)swift_slowAlloc();
          id v81 = (id)swift_slowAlloc();
          uint64_t v98 = (uint64_t)v81;
          *(_DWORD *)uint64_t v80 = 136315138;
          swift_beginAccess();
          sub_22D0AAD1C(0, &qword_26853ED20, (uint64_t (*)(uint64_t))sub_22D0AACE8, MEMORY[0x263F8D8F0]);
          uint64_t v82 = sub_22D2BD1F0();
          CFErrorRef v97 = (CFErrorRef)sub_22D0A4D24(v82, v83, &v98);
          sub_22D2BD220();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_22CFEE000, v78, v79, "Failed to sign the payload. Error: %s", v80, 0xCu);
          swift_arrayDestroy();
          id v84 = v81;
          uint64_t v30 = a4;
          MEMORY[0x230F7BDF0](v84, -1, -1);
          MEMORY[0x230F7BDF0](v80, -1, -1);
        }
      }
      swift_beginAccess();
      CFErrorRef v97 = error[0];
      sub_22D0AAD1C(0, &qword_26853ED20, (uint64_t (*)(uint64_t))sub_22D0AACE8, MEMORY[0x263F8D8F0]);
      uint64_t v85 = sub_22D2BD1F0();
      sub_22D0A9EB4(v85, v86, v30, a5, a6, a7, a8, v91);
      sub_22CFF9C10(v87, v88);
      swift_bridgeObjectRelease();
      return HKReleaseSecKey();
    }
    if (qword_26AEC1C58 == -1)
    {
LABEL_45:
      uint64_t v68 = sub_22D2BC390();
      __swift_project_value_buffer(v68, (uint64_t)qword_26AEC3C90);
      swift_bridgeObjectRetain();
      unint64_t v69 = sub_22D2BC380();
      os_log_type_t v70 = sub_22D2BD060();
      if (os_log_type_enabled(v69, v70))
      {
        unint64_t v71 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v71 = 134217984;
        uint64_t v72 = a6;
        uint64_t v73 = *(void *)(v9 + 16);
        swift_bridgeObjectRelease();
        uint64_t v98 = v73;
        a6 = v72;
        uint64_t v30 = a4;
        sub_22D2BD220();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22CFEE000, v69, v70, "BAA Signature failed with nil, but certs populated. Count: %ld", v71, 0xCu);
        MEMORY[0x230F7BDF0](v71, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_49;
    }
LABEL_59:
    swift_once();
    goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D0AAB4C()
{
  sub_22CFF5630(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_22D0AAB94(__SecKey *a1, uint64_t a2, void *a3)
{
  return sub_22D0AA048(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v3 + 48), *(void *)(v3 + 56));
}

uint64_t sub_22D0AABC4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  if (a3) {
    uint64_t v7 = sub_22D2BCE00();
  }
  else {
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v6(a2, v7, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_22D0AAC90()
{
  if (!qword_268542670)
  {
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542670);
    }
  }
}

void sub_22D0AACE8(uint64_t a1)
{
}

void sub_22D0AAD1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D0AAD80(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 6u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22D0AAD98(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_22D0AADAC(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_22D0AADAC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 6u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22D0AADC4(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_22CFF5630(a2, a3);
  }
  return result;
}

ValueMetadata *_s35DeviceIdentityBAASignatureGeneratorVMa()
{
  return &_s35DeviceIdentityBAASignatureGeneratorVN;
}

uint64_t sub_22D0AAE20@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v159 = a3;
  v168 = a2;
  uint64_t v160 = a4;
  sub_22D0AC17C(0, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v156 = (uint64_t)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v155 = (uint64_t)&v150 - v8;
  uint64_t v154 = type metadata accessor for PBHKInspectableValueCollection(0);
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v154);
  v157 = (char *)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_22D2BBC30();
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  v163 = (char *)&v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0AC17C(0, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v166 = (uint64_t)&v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v150 - v14;
  uint64_t v16 = type metadata accessor for PBHKConcept(0);
  uint64_t v167 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v152 = (uint64_t)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  os_log_type_t v21 = (char *)&v150 - v20;
  MEMORY[0x270FA5388](v19);
  id v23 = (char *)&v150 - v22;
  uint64_t v24 = type metadata accessor for PBHKDiagnosticTestResult(0);
  uint64_t v25 = v24 - 8;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v158 = (uint64_t)&v150 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  unint64_t v29 = (char *)&v150 - v28;
  uint64_t v30 = *a1;
  sub_22D2BBFE0();
  uint64_t v31 = *(int *)(v25 + 28);
  if (qword_26853D0D0 != -1) {
    swift_once();
  }
  *(void *)&v29[v31] = qword_268540438;
  swift_retain();
  id v32 = objc_msgSend(v30, sel_bodySite);
  v162 = v15;
  uint64_t v161 = v16;
  if (v32)
  {
    uint64_t v33 = v32;
    sub_22D080C14(v32, 1, (uint64_t)v23);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v34 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v34);
      swift_release();
    }
    uint64_t v35 = *(void *)&v29[v31];
    sub_22D0AC2FC((uint64_t)v23, (uint64_t)v15, type metadata accessor for PBHKConcept);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(v15, 0, 1, v16);
    uint64_t v36 = (uint64_t)v15;
    uint64_t v37 = v166;
    sub_22D0AC1D0(v36, v166, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    uint64_t v38 = v35
        + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
    swift_beginAccess();
    swift_retain();
    uint64_t v39 = v37;
    uint64_t v40 = v38;
    uint64_t v16 = v161;
    uint64_t v15 = v162;
    sub_22D0AC364(v39, v40, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_endAccess();

    swift_release();
  }
  id v41 = objc_msgSend(v30, sel_category);
  uint64_t v42 = sub_22D2BCBD0();
  uint64_t v44 = v43;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v45 = swift_retain();
    *(void *)&v29[v31] = sub_22D189928(v45);
    swift_release();
  }
  os_log_type_t v46 = (uint64_t *)(*(void *)&v29[v31]
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  *os_log_type_t v46 = v42;
  v46[1] = v44;
  swift_bridgeObjectRelease();
  id v47 = objc_msgSend(v30, sel_comments);
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = sub_22D2BCBD0();
    uint64_t v51 = v50;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v52 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v52);
      swift_release();
    }
    uint64_t v53 = (uint64_t *)(*(void *)&v29[v31]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
    swift_beginAccess();
    uint64_t *v53 = v49;
    v53[1] = v51;
    swift_bridgeObjectRelease();
  }
  id v54 = objc_msgSend(v30, sel_diagnosticTest);
  sub_22D080C14(v54, 1, (uint64_t)v21);

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v55 = swift_retain();
    *(void *)&v29[v31] = sub_22D189928(v55);
    swift_release();
  }
  uint64_t v56 = *(void *)&v29[v31];
  sub_22D0AC2FC((uint64_t)v21, (uint64_t)v15, type metadata accessor for PBHKConcept);
  uint64_t v57 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v167 + 56);
  v167 += 56;
  v151 = v57;
  v57((uint64_t)v15, 0, 1, v16);
  uint64_t v58 = (uint64_t)v15;
  uint64_t v59 = v166;
  sub_22D0AC1D0(v58, v166, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  uint64_t v60 = v56
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_22D0AC364(v59, v60, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
  id v61 = objc_msgSend(v30, sel_effectiveEndDate);
  if (v61)
  {
    CFStringRef v62 = v61;
    uint64_t v63 = *v168;
    uint64_t v64 = (void *)sub_22D2BBD30();
    id v65 = objc_msgSend(v62, sel_adjustedDateForCalendar_, v64);

    unint64_t v66 = v163;
    sub_22D2BBC00();

    id v67 = *(id *)(v63 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v68 = (void *)sub_22D2BBBC0();
    id v69 = objc_msgSend(v67, sel_stringFromDate_, v68);

    uint64_t v70 = sub_22D2BCBD0();
    uint64_t v72 = v71;

    (*(void (**)(char *, uint64_t))(v164 + 8))(v66, v165);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v73 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v73);
      swift_release();
    }
    uint64_t v74 = (uint64_t *)(*(void *)&v29[v31]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
    swift_beginAccess();
    *uint64_t v74 = v70;
    v74[1] = v72;

    swift_bridgeObjectRelease();
  }
  id v75 = objc_msgSend(v30, sel_effectiveStartDate);
  if (v75)
  {
    os_log_type_t v76 = v75;
    uint64_t v77 = *v168;
    uint64_t v78 = (void *)sub_22D2BBD30();
    id v79 = objc_msgSend(v76, sel_adjustedDateForCalendar_, v78);

    uint64_t v80 = v163;
    sub_22D2BBC00();

    id v81 = *(id *)(v77 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v82 = (void *)sub_22D2BBBC0();
    id v83 = objc_msgSend(v81, sel_stringFromDate_, v82);

    uint64_t v84 = sub_22D2BCBD0();
    uint64_t v86 = v85;

    (*(void (**)(char *, uint64_t))(v164 + 8))(v80, v165);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v87 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v87);
      swift_release();
    }
    unint64_t v88 = (uint64_t *)(*(void *)&v29[v31]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
    swift_beginAccess();
    *unint64_t v88 = v84;
    v88[1] = v86;

    swift_bridgeObjectRelease();
  }
  id v89 = objc_msgSend(v30, sel_interpretation);
  if (v89)
  {
    uint64_t v90 = v89;
    sub_22D030474(0, (unint64_t *)&qword_26853ED30);
    unint64_t v91 = sub_22D2BCE00();

    MEMORY[0x270FA5388](v92);
    *(&v150 - 2) = (uint64_t)v168;
    uint64_t v93 = sub_22D29C85C((void (*)(id *))sub_22D0AC3D0, (uint64_t)(&v150 - 4), v91, (uint64_t)v169);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v94 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v94);
      swift_release();
    }
    uint64_t v95 = (uint64_t *)(*(void *)&v29[v31]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
    swift_beginAccess();
    uint64_t *v95 = v93;
    swift_bridgeObjectRelease();
  }
  id v96 = objc_msgSend(v30, sel_issueDate);
  if (v96)
  {
    CFErrorRef v97 = v96;
    uint64_t v98 = *v168;
    BOOL v99 = (void *)sub_22D2BBD30();
    id v100 = objc_msgSend(v97, sel_adjustedDateForCalendar_, v99);

    uint64_t v101 = v163;
    sub_22D2BBC00();

    id v102 = *(id *)(v98 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    v103 = (void *)sub_22D2BBBC0();
    id v104 = objc_msgSend(v102, sel_stringFromDate_, v103);

    uint64_t v105 = sub_22D2BCBD0();
    uint64_t v107 = v106;

    (*(void (**)(char *, uint64_t))(v164 + 8))(v101, v165);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v108 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v108);
      swift_release();
    }
    v109 = (uint64_t *)(*(void *)&v29[v31]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
    swift_beginAccess();
    uint64_t *v109 = v105;
    v109[1] = v107;

    swift_bridgeObjectRelease();
  }
  id v110 = objc_msgSend(v30, sel_method);
  if (v110)
  {
    v111 = v110;
    uint64_t v112 = v152;
    sub_22D080C14(v110, 1, v152);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v113 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v113);
      swift_release();
    }
    uint64_t v114 = *(void *)&v29[v31];
    uint64_t v115 = v112;
    uint64_t v116 = (uint64_t)v162;
    sub_22D0AC2FC(v115, (uint64_t)v162, type metadata accessor for PBHKConcept);
    v151(v116, 0, 1, v161);
    uint64_t v117 = v166;
    sub_22D0AC1D0(v116, v166, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    uint64_t v118 = v114
         + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
    swift_beginAccess();
    swift_retain();
    sub_22D0AC364(v117, v118, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_endAccess();

    swift_release();
  }
  id v119 = objc_msgSend(v30, sel_performers);
  uint64_t v120 = (uint64_t)v157;
  if (v119)
  {
    v121 = v119;
    uint64_t v122 = sub_22D2BCE00();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v123 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v123);
      swift_release();
    }
    v124 = (uint64_t *)(*(void *)&v29[v31]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
    swift_beginAccess();
    uint64_t *v124 = v122;
    swift_bridgeObjectRelease();
  }
  id v125 = objc_msgSend(v30, sel_value);
  if (v125)
  {
    v126 = v125;
    sub_22D07DE40(v125, v120);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v127 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v127);
      swift_release();
    }
    uint64_t v128 = *(void *)&v29[v31];
    uint64_t v129 = v120;
    uint64_t v130 = v155;
    sub_22D0AC2FC(v129, v155, type metadata accessor for PBHKInspectableValueCollection);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56))(v130, 0, 1, v154);
    uint64_t v131 = v156;
    sub_22D0AC1D0(v130, v156, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    uint64_t v132 = v128
         + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
    swift_beginAccess();
    swift_retain();
    sub_22D0AC364(v131, v132, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    swift_endAccess();

    swift_release();
  }
  id v133 = objc_msgSend(v30, sel_referenceRanges);
  if (v133)
  {
    v134 = v133;
    sub_22D030474(0, &qword_26853E878);
    unint64_t v135 = sub_22D2BCE00();

    MEMORY[0x270FA5388](v136);
    *(&v150 - 2) = (uint64_t)v168;
    uint64_t v137 = sub_22D29C808((void (*)(id *))sub_22D083FC4, (uint64_t)(&v150 - 4), v135, (uint64_t)v170);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
      swift_allocObject();
      uint64_t v138 = swift_retain();
      *(void *)&v29[v31] = sub_22D189928(v138);
      swift_release();
    }
    v139 = (uint64_t *)(*(void *)&v29[v31]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
    swift_beginAccess();
    uint64_t *v139 = v137;
    swift_bridgeObjectRelease();
  }
  uint64_t v140 = v160;
  sub_22D081588(v30, v159, v160);
  uint64_t v141 = v158;
  sub_22D0AC23C((uint64_t)v29, v158);
  PBClinicalRecord.diagnosticTestResult.setter(v141);
  uint64_t v142 = sub_22D2B8154();
  uint64_t v144 = v143;
  uint64_t v145 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    v146 = (void *)swift_retain();
    v147 = sub_22D1B90F4(v146);
    swift_release();
    *(void *)(v140 + v145) = v147;
    swift_release();
  }
  v148 = (uint64_t *)(*(void *)(v140 + v145)
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  uint64_t *v148 = v142;
  v148[1] = v144;
  swift_bridgeObjectRelease();
  return sub_22D0AC2A0((uint64_t)v29);
}

void sub_22D0AC17C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D0AC1D0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D0AC17C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D0AC23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBHKDiagnosticTestResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0AC2A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PBHKDiagnosticTestResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D0AC2FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D0AC364(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D0AC17C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

id sub_22D0AC3D0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D080C14(*a1, 1, a2);
}

uint64_t sub_22D0AC404()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  uint64_t v18 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_22D0AC808();
  uint64_t v19 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4B00(v0, (uint64_t)v20);
  uint64_t v8 = swift_allocObject();
  sub_22CFF8C10(v20, v8 + 16);
  uint64_t v9 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDE20];
  sub_22D0ACE08(0, (unint64_t *)&qword_26AEC1E28, MEMORY[0x263EFDE20]);
  swift_allocObject();
  *(void *)&v20[0] = sub_22D2BC6F0();
  sub_22D0ACE88((unint64_t *)&qword_26AEC1E20, (unint64_t *)&qword_26AEC1E28, v9);
  uint64_t v10 = sub_22D2BC720();
  swift_release();
  *(void *)&v20[0] = v10;
  sub_22D0ACECC(v1, (uint64_t)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v12 = swift_allocObject();
  sub_22D0AD0D0((uint64_t)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  sub_22D2BC5D0();
  uint64_t v13 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D0ACE08(0, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263EFDCF0]);
  sub_22D021C20(0, &qword_26AEC1270);
  sub_22D071E04();
  sub_22D0ACE88((unint64_t *)&qword_26AEC1DD0, (unint64_t *)&qword_26AEC1DE0, v13);
  sub_22D0AD3C0(&qword_26AEC1D50, (void (*)(uint64_t))sub_22D071E04);
  sub_22D2BC830();
  swift_release();
  swift_release();
  sub_22D0AD3C0(&qword_26AEC1CC8, (void (*)(uint64_t))sub_22D0AC808);
  uint64_t v14 = v19;
  uint64_t v15 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  return v15;
}

uint64_t type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask()
{
  uint64_t result = qword_26AEC2B58;
  if (!qword_26AEC2B58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22D0AC808()
{
  if (!qword_26AEC1CD0)
  {
    sub_22D071E04();
    uint64_t v0 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0ACE08(255, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263EFDCF0]);
    sub_22D0AD3C0(&qword_26AEC1D50, (void (*)(uint64_t))sub_22D071E04);
    sub_22D0ACE88((unint64_t *)&qword_26AEC1DD0, (unint64_t *)&qword_26AEC1DE0, v0);
    unint64_t v1 = sub_22D2BC520();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AEC1CD0);
    }
  }
}

uint64_t sub_22D0AC910@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v25 = a3;
  sub_22D0716C4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0AD1B4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0AD280();
  uint64_t v24 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v23 = *a1;
  uint64_t v28 = *(void *)(a2 + *(int *)(type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask() + 28));
  sub_22D0AD408(0, &qword_26AEC1E98, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263F8D488]);
  sub_22D071744();
  sub_22D2BCD80();
  sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
  sub_22D2BC540();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v26 = v22;
  char v27 = v23;
  sub_22D021C20(0, &qword_26AEC1270);
  sub_22D2BC550();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_22D0AD3C0(&qword_26AEC2E58, (void (*)(uint64_t))sub_22D0AD280);
  uint64_t v19 = v24;
  uint64_t v20 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v19);
  *uint64_t v25 = v20;
  return result;
}

uint64_t sub_22D0ACC60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = (int *)type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  uint64_t v16 = *(void *)(a2 + v7[8]);
  uint64_t v8 = a2 + v7[5];
  uint64_t v9 = (int *)type metadata accessor for ClinicalSharingOperationalMetric(0);
  a4[3] = (uint64_t)v9;
  a4[4] = (uint64_t)&off_26E0634D0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
  uint64_t v11 = (char *)boxed_opaque_existential_1 + v9[6];
  uint64_t v12 = sub_22D2BBC30();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v11, v8, v12);
  sub_22D04BDE8(a2 + v7[9], (uint64_t)boxed_opaque_existential_1 + v9[7]);
  v13((char *)boxed_opaque_existential_1 + v9[8], a2 + v7[10], v12);
  uint64_t *boxed_opaque_existential_1 = v6;
  boxed_opaque_existential_1[1] = v16;
  *((unsigned char *)boxed_opaque_existential_1 + v9[9]) = a3;
  *((unsigned char *)boxed_opaque_existential_1 + v9[10]) = 0;
  uint64_t v14 = (uint64_t *)((char *)boxed_opaque_existential_1 + v9[11]);
  *uint64_t v14 = 0xD000000000000032;
  v14[1] = 0x800000022D2D6FF0;
  return swift_retain();
}

uint64_t sub_22D0ACDC8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22D0ACE00(uint64_t a1, uint64_t a2)
{
  return sub_22D268754(a1, a2, (void *)(v2 + 16));
}

void sub_22D0ACE08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v7 = a3(a1, MEMORY[0x263F8D4F8], v6, MEMORY[0x263F8E4E0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D0ACE88(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D0ACE08(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0ACECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0ACF30()
{
  unint64_t v1 = (int *)type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v10 = *(void *)(*((void *)v1 - 1) + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  uint64_t v4 = v0 + v3 + v1[5];
  uint64_t v5 = sub_22D2BBC30();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);

  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v3 + v1[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  v7(v0 + v3 + v1[10], v5);
  return MEMORY[0x270FA0238](v0, v3 + v10, v2 | 7);
}

uint64_t sub_22D0AD0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0AD134@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ClinicalSharingOperationalAnalyticsSubmissionTask() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_22D0AC910(a1, v6, a2);
}

void sub_22D0AD1B4()
{
  if (!qword_26AEC1D10)
  {
    sub_22D0AD408(255, &qword_26AEC1E98, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263F8D488]);
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    sub_22D071744();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1D10);
    }
  }
}

void sub_22D0AD280()
{
  if (!qword_26AEC2E60)
  {
    sub_22D0AD34C();
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    sub_22D0AD3C0(&qword_26AEC2F68, (void (*)(uint64_t))sub_22D0AD34C);
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2E60);
    }
  }
}

void sub_22D0AD34C()
{
  if (!qword_26AEC2F60)
  {
    sub_22D021C20(255, &qword_26AEC1270);
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2F60);
    }
  }
}

uint64_t sub_22D0AD3B4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0ACC60(a1, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), a2);
}

uint64_t sub_22D0AD3C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D0AD408(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

char *sub_22D0AD46C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = &v4[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_22D2BBC30();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v24(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(void *)&v4[v13] = v15;
    *(void *)&v4[v14] = *(uint64_t *)((char *)a2 + v14);
    uint64_t v16 = a3[9];
    *(void *)&v4[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    __dst = &v4[v16];
    uint64_t v17 = (char *)a2 + v16;
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    id v19 = v15;
    swift_bridgeObjectRetain();
    if (v18(v17, 1, v11))
    {
      sub_22D0AD408(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      v24(__dst, (uint64_t)v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    v24(&v4[a3[10]], (uint64_t)a2 + a3[10], v11);
  }
  return v4;
}

uint64_t sub_22D0AD6CC(uint64_t a1, int *a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_22D2BBC30();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v4, v5);

  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5)) {
    v10(v7, v5);
  }
  uint64_t v8 = a1 + a2[10];
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v5);
}

uint64_t sub_22D0AD7EC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v22(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v15 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  __dst = (void *)(a1 + v15);
  uint64_t v16 = (const void *)(a2 + v15);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v18 = v14;
  swift_bridgeObjectRetain();
  if (v17(v16, 1, v10))
  {
    sub_22D0AD408(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v22(__dst, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  v22((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), v10);
  return a1;
}

uint64_t *sub_22D0AD9F4(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v25(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)((char *)a2 + v11);
  uint64_t v13 = *(void **)((char *)a1 + v11);
  *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
  id v14 = v12;

  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  uint64_t v15 = a3[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  id v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v19 = v18((char *)a1 + v15, 1, v9);
  int v20 = v18(v17, 1, v9);
  if (!v19)
  {
    if (!v20)
    {
      uint64_t v24 = v16;
      uint64_t v22 = v25;
      v25(v24, v17, v9);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_22D0AD408(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_7:
  uint64_t v22 = v25;
LABEL_8:
  v22((char *)a1 + a3[10], (char *)a2 + a3[10], v9);
  return a1;
}

uint64_t sub_22D0ADC48(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v14, 1, v10))
  {
    sub_22D0AD408(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v12((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), v10);
  return a1;
}

uint64_t sub_22D0ADE04(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v24(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v18 = v17(a1 + v14, 1, v10);
  int v19 = v17((uint64_t)v16, 1, v10);
  if (!v18)
  {
    if (!v19)
    {
      uint64_t v23 = (uint64_t)v15;
      uint64_t v21 = v24;
      v24(v23, (uint64_t)v16, v10);
      goto LABEL_8;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v15, v10);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_22D0AD408(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
LABEL_7:
  uint64_t v21 = v24;
LABEL_8:
  v21(a1 + a3[10], a2 + a3[10], v10);
  return a1;
}

uint64_t sub_22D0AE058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0AE06C);
}

uint64_t sub_22D0AE06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_22D0AD408(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_22D0AE1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0AE1DC);
}

uint64_t sub_22D0AE1DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_22D0AD408(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_22D0AE338()
{
  sub_22D2BBC30();
  if (v0 <= 0x3F)
  {
    sub_22D0AD408(319, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

char *sub_22D0AE464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t result = (char *)objc_msgSend(v2, sel_collectionType);
  if ((unint64_t)result >= 4)
  {
    sub_22D2BD310();
    sub_22D2BCCB0();
    objc_msgSend(v2, sel_collectionType);
    type metadata accessor for HKInspectableValueCollectionType(0);
    sub_22D2BD430();
    sub_22D2BCCB0();
    uint64_t result = (char *)sub_22D2BD460();
    __break(1u);
  }
  else
  {
    *(void *)a1 = result + 1;
    *(unsigned char *)(a1 + 8) = 1;
  }
  return result;
}

uint64_t sub_22D0AE590(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  sub_22D0AEFF8(0, &qword_26853ED50, MEMORY[0x263F8E0C0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D0AEF50();
  sub_22D2BD7B0();
  LOBYTE(v15) = 0;
  sub_22D2BD5C0();
  if (!v5)
  {
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    char v17 = 1;
    sub_22D0AF05C();
    sub_22D2BD5F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_22D0AE734()
{
  if (*v0) {
    return 0xD000000000000017;
  }
  else {
    return 25705;
  }
}

uint64_t sub_22D0AE768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22D0AEC30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22D0AE790(uint64_t a1)
{
  unint64_t v2 = sub_22D0AEF50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D0AE7CC(uint64_t a1)
{
  unint64_t v2 = sub_22D0AEF50();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22D0AE808@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22D0AED08(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_22D0AE838(void *a1)
{
  return sub_22D0AE590(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_22D0AE858(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_22D2BD660() & 1) == 0) {
    return 0;
  }
  return sub_22D1158DC(v2, v3, v4, v5);
}

uint64_t sub_22D0AE8E4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  sub_22D2BD730();
  swift_bridgeObjectRetain();
  sub_22D2BCC70();
  swift_bridgeObjectRelease();
  sub_22CFF9B64(v2, v1);
  sub_22D2BBB30();
  sub_22CFF5630(v2, v1);
  return sub_22D2BD760();
}

uint64_t sub_22D0AE974()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_22D2BCC70();
  swift_bridgeObjectRelease();
  sub_22CFF9B64(v2, v1);
  sub_22D2BBB30();
  return sub_22CFF5630(v2, v1);
}

uint64_t sub_22D0AEA00()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  sub_22D2BD730();
  swift_bridgeObjectRetain();
  sub_22D2BCC70();
  swift_bridgeObjectRelease();
  sub_22CFF9B64(v2, v1);
  sub_22D2BBB30();
  sub_22CFF5630(v2, v1);
  return sub_22D2BD760();
}

uint64_t destroy for ClinicalSharingNodeMetadata(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  return sub_22CFF5630(v2, v3);
}

void *initializeWithCopy for ClinicalSharingNodeMetadata(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_22CFF9B64(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

void *assignWithCopy for ClinicalSharingNodeMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  sub_22CFF9B64(v5, v4);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_22CFF5630(v6, v7);
  return a1;
}

void *assignWithTake for ClinicalSharingNodeMetadata(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_22CFF5630(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingNodeMetadata()
{
  return &type metadata for ClinicalSharingNodeMetadata;
}

unint64_t sub_22D0AEBDC()
{
  unint64_t result = qword_26AEC3060;
  if (!qword_26AEC3060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC3060);
  }
  return result;
}

uint64_t sub_22D0AEC30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000022D2D70E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22D0AED08(void *a1)
{
  sub_22D0AEFF8(0, &qword_26853ED38, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = &v12[-v6];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D0AEF50();
  sub_22D2BD7A0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v13) = 0;
    uint64_t v8 = sub_22D2BD540();
    v12[15] = 1;
    sub_22D0AEFA4();
    swift_bridgeObjectRetain();
    sub_22D2BD560();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v10 = v13;
    unint64_t v11 = v14;
    swift_bridgeObjectRetain();
    sub_22CFF9B64(v10, v11);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_22CFF5630(v10, v11);
  }
  return v8;
}

unint64_t sub_22D0AEF50()
{
  unint64_t result = qword_26853ED40;
  if (!qword_26853ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853ED40);
  }
  return result;
}

unint64_t sub_22D0AEFA4()
{
  unint64_t result = qword_26853ED48;
  if (!qword_26853ED48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853ED48);
  }
  return result;
}

void sub_22D0AEFF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_22D0AEF50();
    unint64_t v7 = a3(a1, &type metadata for ClinicalSharingNodeMetadata.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_22D0AF05C()
{
  unint64_t result = qword_26853ED58;
  if (!qword_26853ED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853ED58);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClinicalSharingNodeMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D0AF17CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingNodeMetadata.CodingKeys()
{
  return &type metadata for ClinicalSharingNodeMetadata.CodingKeys;
}

unint64_t sub_22D0AF1B8()
{
  unint64_t result = qword_26853ED60;
  if (!qword_26853ED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853ED60);
  }
  return result;
}

unint64_t sub_22D0AF210()
{
  unint64_t result = qword_26853ED68;
  if (!qword_26853ED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853ED68);
  }
  return result;
}

unint64_t sub_22D0AF268()
{
  unint64_t result = qword_26853ED70;
  if (!qword_26853ED70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853ED70);
  }
  return result;
}

void sub_22D0AF2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_22D034BAC;
  *(void *)(v11 + 24) = v10;
  id v12 = objc_allocWithZone(MEMORY[0x263F45150]);
  v15[4] = sub_22D0AF514;
  v15[5] = v11;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  uint64_t v15[2] = sub_22D0AF51C;
  v15[3] = &block_descriptor_10;
  uint64_t v13 = _Block_copy(v15);
  swift_retain();
  id v14 = objc_msgSend(v12, sel_initWithDayIndexRange_ascending_limit_resultsHandler_, a3, a4, 1, 0, v13);
  _Block_release(v13);
  swift_release();
  objc_msgSend(a5, sel_executeQuery_, v14);
}

uint64_t sub_22D0AF424()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D0AF45C(int a1, void *a2, int a3, id a4, void (*a5)(id, BOOL))
{
  id v7 = a2;
  if (!a2)
  {
    id v7 = a4;
    if (!a4)
    {
      sub_22D04C890();
      id v7 = (id)swift_allocError();
      *(void *)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      *(unsigned char *)(v9 + 16) = 2;
    }
    id v10 = a4;
  }
  swift_bridgeObjectRetain();
  a5(v7, a2 == 0);
  sub_22D0AF638(v7, a2 == 0);
}

void sub_22D0AF514(int a1, void *a2, int a3, void *a4)
{
  sub_22D0AF45C(a1, a2, a3, a4, *(void (**)(id, BOOL))(v4 + 16));
}

uint64_t sub_22D0AF51C(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_22D0AF5F8();
    uint64_t v7 = sub_22D2BCE00();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a4;
  id v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

unint64_t sub_22D0AF5F8()
{
  unint64_t result = qword_26853ED78;
  if (!qword_26853ED78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26853ED78);
  }
  return result;
}

void sub_22D0AF638(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D0AF648(uint64_t a1)
{
  uint64_t v127 = sub_22D2BBC30();
  uint64_t v2 = *(void *)(v127 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v127);
  id v102 = (char *)v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v100 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v123 = (char *)v100 - v8;
  sub_22D0B0E24(0, &qword_26AEC0F48, MEMORY[0x263F07490]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v101 = (char *)v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v103 = (char *)v100 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v108 = (char *)v100 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v109 = (char *)v100 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v100 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)v100 - v22;
  MEMORY[0x270FA5388](v21);
  id v125 = (char *)v100 - v24;
  uint64_t v126 = type metadata accessor for ClinicalSharingDataNodeInfo();
  MEMORY[0x270FA5388](v126);
  uint64_t v28 = (char *)v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void *)(a1 + 16);
  if (!v29) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v112 = v7;
  uint64_t v30 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  uint64_t v124 = *(void *)(v25 + 72);
  v121 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  uint64_t v122 = (unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  id v119 = (void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v114 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v115 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v31 = MEMORY[0x263F8EE80];
  uint64_t v104 = v2;
  v100[1] = v2 + 40;
  *(void *)&long long v26 = 136315394;
  long long v107 = v26;
  unint64_t v106 = 0x800000022D2D7150;
  uint64_t v105 = MEMORY[0x263F8EE58] + 8;
  uint64_t v117 = v20;
  uint64_t v118 = v23;
  while (1)
  {
    sub_22D0B0D14(v30, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo);
    id v32 = &v28[*(int *)(v126 + 28)];
    uint64_t v33 = *(void *)&v32[*(int *)(type metadata accessor for PBTypedData(0) + 20)];
    swift_beginAccess();
    if ((*(unsigned char *)(v33 + 24) & 1) == 0)
    {
      uint64_t v128 = *(void **)(v33 + 16);
      char v129 = 0;
      uint64_t v128 = (void *)PBDataType.rawValue.getter();
      sub_22D0B0D7C();
      uint64_t v38 = sub_22D2BD250();
      uint64_t v40 = v39;
      sub_22D0B0DD0();
      id v41 = (void *)swift_allocError();
      *(void *)uint64_t v42 = v38;
      *(void *)(v42 + 8) = v40;
      *(unsigned char *)(v42 + 16) = 6;
      swift_willThrow();
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_22D2BC390();
      __swift_project_value_buffer(v43, (uint64_t)qword_26AEC3C90);
      id v44 = v41;
      id v45 = v41;
      os_log_type_t v46 = sub_22D2BC380();
      os_log_type_t v47 = sub_22D2BD060();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v49 = (void *)swift_slowAlloc();
        uint64_t v50 = v31;
        uint64_t v51 = swift_slowAlloc();
        uint64_t v128 = (void *)v51;
        *(_DWORD *)uint64_t v48 = v107;
        *(void *)(v48 + 4) = sub_22D0A4D24(0xD000000000000023, v106, (uint64_t *)&v128);
        *(_WORD *)(v48 + 12) = 2112;
        id v52 = v41;
        uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v48 + 14) = v53;
        *uint64_t v49 = v53;

        _os_log_impl(&dword_22CFEE000, v46, v47, "%s %@", (uint8_t *)v48, 0x16u);
        sub_22D0B0E24(0, (unint64_t *)&qword_26AEC2288, (void (*)(uint64_t))sub_22D0B0E78);
        swift_arrayDestroy();
        id v54 = v49;
        uint64_t v23 = v118;
        MEMORY[0x230F7BDF0](v54, -1, -1);
        swift_arrayDestroy();
        uint64_t v55 = v51;
        uint64_t v31 = v50;
        uint64_t v20 = v117;
        MEMORY[0x230F7BDF0](v55, -1, -1);
        MEMORY[0x230F7BDF0](v48, -1, -1);
      }
      else
      {
      }
      goto LABEL_5;
    }
    uint64_t v34 = qword_22D2C30C8[*(void *)(v33 + 16)];
    uint64_t v35 = v125;
    sub_22D03CCB4(v125);
    sub_22D04BDE8((uint64_t)v35, (uint64_t)v23);
    uint64_t v36 = *v122;
    if ((*v122)(v23, 1, v127) != 1) {
      break;
    }
    uint64_t v37 = (uint64_t)v23;
LABEL_42:
    sub_22D04BD5C(v37);
    sub_22D04BD5C((uint64_t)v125);
LABEL_5:
    sub_22D0B0CB4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo);
    v30 += v124;
    if (!--v29) {
      return v31;
    }
  }
  v111 = *v115;
  v111(v123, v23, v127);
  uint64_t v56 = *(void *)(v31 + 16);
  uint64_t v57 = (uint64_t)v109;
  uint64_t v116 = v34;
  uint64_t v120 = v36;
  if (v56 && (unint64_t v58 = sub_22D04EAF4(v34, 1), (v59 & 1) != 0))
  {
    uint64_t v60 = v104;
    unint64_t v61 = *(void *)(v31 + 56) + *(void *)(v104 + 72) * v58;
    CFStringRef v62 = v20;
    uint64_t v63 = v20;
    uint64_t v64 = v127;
    (*(void (**)(char *, unint64_t, uint64_t))(v104 + 16))(v62, v61, v127);
    uint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    v113((uint64_t)v63, 0, 1, v64);
    uint64_t v65 = v64;
    uint64_t v20 = v63;
    BOOL v66 = ((uint64_t (*)(char *, uint64_t, uint64_t))v36)(v63, 1, v65) == 1;
  }
  else
  {
    BOOL v66 = 1;
    uint64_t v113 = *v121;
    v113((uint64_t)v20, 1, 1, v127);
  }
  sub_22D04BDE8((uint64_t)v20, v57);
  id v67 = *v119;
  uint64_t v68 = v112;
  (*v119)(v112, v123, v127);
  if (v66)
  {
    id v110 = *v114;
    v110(v68, v127);
    sub_22D04BD5C(v57);
    goto LABEL_22;
  }
  uint64_t v69 = (uint64_t)v108;
  sub_22D04BDE8(v57, (uint64_t)v108);
  uint64_t v70 = v127;
  if (v120((char *)v69, 1, v127) == 1) {
    goto LABEL_47;
  }
  uint64_t v71 = v112;
  LODWORD(v110) = sub_22D2BBBE0();
  uint64_t v72 = *v114;
  (*v114)(v71, v70);
  sub_22D04BD5C(v57);
  v72(v108, v70);
  if ((v110 & 1) == 0)
  {
    v72(v123, v127);
    uint64_t v20 = v117;
    uint64_t v23 = v118;
    uint64_t v37 = (uint64_t)v117;
    goto LABEL_42;
  }
  id v110 = v72;
LABEL_22:
  uint64_t v73 = (uint64_t)v103;
  uint64_t v74 = v127;
  v67(v103, v123, v127);
  id v75 = v113;
  v113(v73, 0, 1, v74);
  if (v120((char *)v73, 1, v74) == 1)
  {
    sub_22D04BD5C(v73);
    swift_bridgeObjectRetain();
    uint64_t v76 = 1;
    unint64_t v77 = sub_22D04EAF4(v116, 1);
    char v79 = v78;
    swift_bridgeObjectRelease();
    uint64_t v23 = v118;
    if (v79)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v128 = (void *)v31;
      uint64_t v20 = v117;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_22D05514C();
        uint64_t v31 = (uint64_t)v128;
      }
      uint64_t v81 = (uint64_t)v101;
      v111(v101, (char *)(*(void *)(v31 + 56) + *(void *)(v104 + 72) * v77), v127);
      sub_22D1E4F64(v77, v31);
      swift_bridgeObjectRelease();
      uint64_t v76 = 0;
    }
    else
    {
      uint64_t v81 = (uint64_t)v101;
      uint64_t v20 = v117;
    }
    v75(v81, v76, 1, v127);
    sub_22D04BD5C(v81);
    goto LABEL_41;
  }
  uint64_t v82 = (void (*)(unint64_t, char *, uint64_t))v111;
  v111(v102, (char *)v73, v127);
  int v83 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v128 = (void *)v31;
  unint64_t v85 = sub_22D04EAF4(v116, 1);
  uint64_t v86 = v31;
  uint64_t v87 = *(void *)(v31 + 16);
  BOOL v88 = (v84 & 1) == 0;
  uint64_t v89 = v87 + v88;
  if (!__OFADD__(v87, v88))
  {
    char v90 = v84;
    if (*(void *)(v86 + 24) >= v89)
    {
      uint64_t v23 = v118;
      if ((v83 & 1) == 0) {
        sub_22D05514C();
      }
      uint64_t v91 = v116;
      uint64_t v94 = v128;
      if ((v90 & 1) == 0) {
        goto LABEL_31;
      }
    }
    else
    {
      sub_22D050808(v89, v83);
      uint64_t v91 = v116;
      unint64_t v92 = sub_22D04EAF4(v116, 1);
      uint64_t v23 = v118;
      if ((v90 & 1) != (v93 & 1)) {
        goto LABEL_48;
      }
      unint64_t v85 = v92;
      uint64_t v94 = v128;
      if ((v90 & 1) == 0)
      {
LABEL_31:
        v94[(v85 >> 6) + 8] |= 1 << v85;
        uint64_t v95 = v94[6] + 16 * v85;
        *(void *)uint64_t v95 = v91;
        *(unsigned char *)(v95 + 8) = 1;
        v82(v94[7] + *(void *)(v104 + 72) * v85, v102, v127);
        uint64_t v96 = v94[2];
        BOOL v97 = __OFADD__(v96, 1);
        uint64_t v98 = v96 + 1;
        if (v97) {
          goto LABEL_46;
        }
        v94[2] = v98;
        goto LABEL_40;
      }
    }
    (*(void (**)(unint64_t, char *, uint64_t))(v104 + 40))(v94[7] + *(void *)(v104 + 72) * v85, v102, v127);
LABEL_40:
    uint64_t v31 = (uint64_t)v128;
    swift_bridgeObjectRelease();
    uint64_t v20 = v117;
LABEL_41:
    v110(v123, v127);
    uint64_t v37 = (uint64_t)v20;
    goto LABEL_42;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_22D2BD6A0();
  __break(1u);
  return result;
}

uint64_t sub_22D0B027C(uint64_t a1)
{
  uint64_t v2 = sub_22D2BBC30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  char v90 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v81 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v108 = (char *)&v81 - v9;
  sub_22D0B0E24(0, &qword_26AEC0F48, MEMORY[0x263F07490]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v91 = (char *)&v81 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v94 = (char *)&v81 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v81 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v81 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  long long v26 = (char *)&v81 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v95 = (char *)&v81 - v27;
  uint64_t v81 = type metadata accessor for ClinicalSharingCategoryNodeInfo();
  MEMORY[0x270FA5388](v81);
  id v102 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = *(void *)(a1 + 16);
  if (!v84) {
    return MEMORY[0x263F8EE80];
  }
  BOOL v97 = v8;
  uint64_t v30 = 0;
  uint64_t v83 = a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  uint64_t v82 = *(void *)(v28 + 72);
  id v110 = (void (**)(char *, void, uint64_t, uint64_t))(v3 + 56);
  uint64_t v104 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v105 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  BOOL v99 = (void (**)(char *, uint64_t))(v3 + 8);
  id v100 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v101 = MEMORY[0x263F8EE80];
  uint64_t v87 = v3 + 40;
  uint64_t v92 = v3;
  char v93 = v26;
  uint64_t v31 = (uint64_t)v102;
  uint64_t v89 = v13;
  BOOL v88 = v20;
  while (1)
  {
    sub_22D0B0D14(v83 + v82 * v30, v31, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
    if (qword_26853CD60 != -1) {
      swift_once();
    }
    uint64_t v32 = *(void *)(qword_268568460 + 16);
    if (v32) {
      break;
    }
LABEL_4:
    ++v30;
    sub_22D0B0CB4(v31, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
    if (v30 == v84) {
      return v101;
    }
  }
  uint64_t v86 = v30;
  uint64_t v103 = *(int *)(v81 + 28);
  uint64_t v85 = swift_bridgeObjectRetain();
  uint64_t v33 = (char *)(v85 + 40);
  uint64_t v34 = (uint64_t)v95;
  while (1)
  {
    uint64_t v38 = *((void *)v33 - 1);
    char v39 = *v33;
    uint64_t v40 = *(void *)(v31 + v103);
    uint64_t v41 = *(void *)(v40 + 16);
    int v107 = *v33;
    uint64_t v106 = v38;
    if (v41 && (unint64_t v42 = sub_22D04EAF4(v38, v39), (v43 & 1) != 0))
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v34, *(void *)(v40 + 56) + *(void *)(v3 + 72) * v42, v2);
      id v44 = *(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56);
      uint64_t v45 = v34;
      uint64_t v46 = 0;
      uint64_t v47 = v2;
    }
    else
    {
      id v44 = *v110;
      uint64_t v45 = v34;
      uint64_t v46 = 1;
      uint64_t v47 = v2;
    }
    v109 = v44;
    v44((char *)v45, v46, 1, v47);
    sub_22D04BDE8(v34, (uint64_t)v26);
    uint64_t v48 = *v105;
    if ((*v105)(v26, 1, v2) == 1)
    {
      uint64_t v37 = (uint64_t)v26;
LABEL_19:
      uint64_t v31 = (uint64_t)v102;
      goto LABEL_12;
    }
    uint64_t v98 = *v100;
    v98(v108, v26, v2);
    uint64_t v49 = v101;
    if (*(void *)(v101 + 16) && (unint64_t v50 = sub_22D04EAF4(v106, v107), (v51 & 1) != 0))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v23, *(void *)(v49 + 56) + *(void *)(v3 + 72) * v50, v2);
      v109(v23, 0, 1, v2);
      BOOL v52 = ((uint64_t (*)(char *, uint64_t, uint64_t))v48)(v23, 1, v2) == 1;
    }
    else
    {
      BOOL v52 = 1;
      v109(v23, 1, 1, v2);
    }
    sub_22D04BDE8((uint64_t)v23, (uint64_t)v20);
    uint64_t v53 = *v104;
    id v54 = v97;
    (*v104)(v97, v108, v2);
    if (v52)
    {
      uint64_t v96 = *v99;
      v96(v54, v2);
      sub_22D04BD5C((uint64_t)v20);
    }
    else
    {
      uint64_t v55 = (uint64_t)v94;
      sub_22D04BDE8((uint64_t)v20, (uint64_t)v94);
      if (v48((char *)v55, 1, v2) == 1) {
        goto LABEL_50;
      }
      uint64_t v56 = v97;
      LODWORD(v96) = sub_22D2BBBE0();
      uint64_t v57 = *v99;
      (*v99)(v56, v2);
      sub_22D04BD5C((uint64_t)v20);
      v57(v94, v2);
      if ((v96 & 1) == 0)
      {
        v57(v108, v2);
        uint64_t v37 = (uint64_t)v23;
        uint64_t v3 = v92;
        long long v26 = v93;
        uint64_t v34 = (uint64_t)v95;
        goto LABEL_19;
      }
      uint64_t v96 = v57;
      uint64_t v49 = v101;
    }
    uint64_t v58 = (uint64_t)v91;
    v53(v91, v108, v2);
    v109((char *)v58, 0, 1, v2);
    unsigned int v59 = v48((char *)v58, 1, v2);
    long long v26 = v93;
    if (v59 != 1) {
      break;
    }
    sub_22D04BD5C(v58);
    swift_bridgeObjectRetain();
    unint64_t v60 = sub_22D04EAF4(v106, v107);
    char v62 = v61;
    swift_bridgeObjectRelease();
    if (v62)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v111 = (void *)v49;
      uint64_t v3 = v92;
      uint64_t v64 = v49;
      uint64_t v34 = (uint64_t)v95;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_22D05514C();
        uint64_t v64 = (uint64_t)v111;
      }
      uint64_t v36 = (uint64_t)v89;
      v98(v89, (char *)(*(void *)(v64 + 56) + *(void *)(v3 + 72) * v60), v2);
      uint64_t v101 = v64;
      sub_22D1E4F64(v60, v64);
      swift_bridgeObjectRelease();
      uint64_t v35 = 0;
      uint64_t v20 = v88;
    }
    else
    {
      uint64_t v35 = 1;
      uint64_t v3 = v92;
      uint64_t v36 = (uint64_t)v89;
      uint64_t v34 = (uint64_t)v95;
    }
    v109((char *)v36, v35, 1, v2);
    sub_22D04BD5C(v36);
LABEL_11:
    uint64_t v31 = (uint64_t)v102;
    v96(v108, v2);
    uint64_t v37 = (uint64_t)v23;
LABEL_12:
    sub_22D04BD5C(v37);
    sub_22D04BD5C(v34);
    v33 += 16;
    if (!--v32)
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = v86;
      goto LABEL_4;
    }
  }
  v98(v90, (char *)v58, v2);
  uint64_t v65 = (void *)v49;
  int v66 = swift_isUniquelyReferenced_nonNull_native();
  v111 = v65;
  unint64_t v68 = sub_22D04EAF4(v106, v107);
  uint64_t v69 = v65[2];
  BOOL v70 = (v67 & 1) == 0;
  uint64_t v71 = v69 + v70;
  if (!__OFADD__(v69, v70))
  {
    char v72 = v67;
    if (v65[3] >= v71)
    {
      if ((v66 & 1) == 0) {
        sub_22D05514C();
      }
    }
    else
    {
      sub_22D050808(v71, v66);
      unint64_t v73 = sub_22D04EAF4(v106, v107);
      if ((v72 & 1) != (v74 & 1)) {
        goto LABEL_51;
      }
      unint64_t v68 = v73;
    }
    uint64_t v34 = (uint64_t)v95;
    id v75 = v111;
    if (v72)
    {
      uint64_t v3 = v92;
      (*(void (**)(unint64_t, char *, uint64_t))(v92 + 40))(v111[7] + *(void *)(v92 + 72) * v68, v90, v2);
    }
    else
    {
      v111[(v68 >> 6) + 8] |= 1 << v68;
      uint64_t v76 = v75[6] + 16 * v68;
      *(void *)uint64_t v76 = v106;
      *(unsigned char *)(v76 + 8) = v107;
      uint64_t v3 = v92;
      v98((char *)(v75[7] + *(void *)(v92 + 72) * v68), v90, v2);
      uint64_t v77 = v75[2];
      BOOL v78 = __OFADD__(v77, 1);
      uint64_t v79 = v77 + 1;
      if (v78) {
        goto LABEL_49;
      }
      v75[2] = v79;
    }
    uint64_t v101 = (uint64_t)v111;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  uint64_t result = sub_22D2BD6A0();
  __break(1u);
  return result;
}

uint64_t sub_22D0B0CB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D0B0D14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_22D0B0D7C()
{
  unint64_t result = qword_26AEC1E38;
  if (!qword_26AEC1E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1E38);
  }
  return result;
}

unint64_t sub_22D0B0DD0()
{
  unint64_t result = qword_26853ED80;
  if (!qword_26853ED80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853ED80);
  }
  return result;
}

void sub_22D0B0E24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_22D0B0E78()
{
  unint64_t result = qword_26AEC1F30;
  if (!qword_26AEC1F30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AEC1F30);
  }
  return result;
}

uint64_t HTTPMethod.rawValue.getter()
{
  uint64_t result = 0x5443454E4E4F43;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4554454C4544;
      break;
    case 2:
      uint64_t result = 5522759;
      break;
    case 3:
      uint64_t result = 1145128264;
      break;
    case 4:
      uint64_t result = 0x534E4F4954504FLL;
      break;
    case 5:
      uint64_t result = 1414745936;
      break;
    case 6:
      uint64_t result = 5526864;
      break;
    case 7:
      uint64_t result = 0x4543415254;
      break;
    default:
      return result;
  }
  return result;
}

HealthRecordsDaemon::HTTPMethod_optional __swiftcall HTTPMethod.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_22D2BD4E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_22D0B0FE8(unsigned __int8 *a1, char *a2)
{
  return sub_22D0B9418(*a1, *a2);
}

unint64_t sub_22D0B0FF8()
{
  unint64_t result = qword_26853ED88;
  if (!qword_26853ED88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853ED88);
  }
  return result;
}

uint64_t sub_22D0B104C()
{
  return sub_22D29838C();
}

uint64_t sub_22D0B1058()
{
  return sub_22D298280();
}

uint64_t sub_22D0B1060()
{
  return sub_22D29838C();
}

HealthRecordsDaemon::HTTPMethod_optional sub_22D0B1068(Swift::String *a1)
{
  return HTTPMethod.init(rawValue:)(*a1);
}

void sub_22D0B1074(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x5443454E4E4F43;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x4554454C4544;
      goto LABEL_3;
    case 2:
      unsigned __int16 v4 = 17735;
      goto LABEL_9;
    case 3:
      *a1 = 1145128264;
      a1[1] = 0xE400000000000000;
      return;
    case 4:
      *a1 = 0x534E4F4954504FLL;
      a1[1] = 0xE700000000000000;
      return;
    case 5:
      *a1 = 1414745936;
      a1[1] = 0xE400000000000000;
      return;
    case 6:
      unsigned __int16 v4 = 21840;
LABEL_9:
      *a1 = v4 | 0x540000u;
      a1[1] = 0xE300000000000000;
      break;
    case 7:
      *a1 = 0x4543415254;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unsigned char *storeEnumTagSinglePayload for HTTPMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D0B1228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPMethod()
{
  return &type metadata for HTTPMethod;
}

uint64_t Catalog.content.getter()
{
  return swift_bridgeObjectRetain();
}

HealthRecordsDaemon::Catalog __swiftcall Catalog.init(entries:)(HealthRecordsDaemon::Catalog entries)
{
  v1->content._rawValue = entries.content._rawValue;
  return entries;
}

uint64_t sub_22D0B1270()
{
  return 0x746E65746E6F63;
}

uint64_t sub_22D0B1288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_22D2BD660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22D0B1320(uint64_t a1)
{
  unint64_t v2 = sub_22D0B1534();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D0B135C(uint64_t a1)
{
  unint64_t v2 = sub_22D0B1534();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Catalog.encode(to:)(void *a1)
{
  sub_22D0B17B8(0, &qword_26853ED90, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D0B1534();
  sub_22D2BD7B0();
  v10[1] = v8;
  sub_22D0B1588();
  sub_22D0B181C(&qword_26853EDA8, &qword_26853EDB0);
  sub_22D2BD5F0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_22D0B1534()
{
  unint64_t result = qword_26853ED98;
  if (!qword_26853ED98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853ED98);
  }
  return result;
}

void sub_22D0B1588()
{
  if (!qword_26853EDA0)
  {
    type metadata accessor for CatalogEntry();
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EDA0);
    }
  }
}

uint64_t Catalog.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_22D0B17B8(0, &qword_26853EDB8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D0B1534();
  sub_22D2BD7A0();
  if (!v2)
  {
    sub_22D0B1588();
    sub_22D0B181C(&qword_26853EDC0, &qword_26853EDC8);
    sub_22D2BD560();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_22D0B17B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_22D0B1534();
    unint64_t v7 = a3(a1, &type metadata for Catalog.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D0B181C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D0B1588();
    sub_22D0B1898(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0B1898(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CatalogEntry();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0B18DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Catalog.init(from:)(a1, a2);
}

uint64_t sub_22D0B18F4(void *a1)
{
  return Catalog.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Catalog()
{
  return &type metadata for Catalog;
}

unsigned char *storeEnumTagSinglePayload for Catalog.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22D0B19B8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Catalog.CodingKeys()
{
  return &type metadata for Catalog.CodingKeys;
}

unint64_t sub_22D0B19F4()
{
  unint64_t result = qword_26853EDD0;
  if (!qword_26853EDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EDD0);
  }
  return result;
}

unint64_t sub_22D0B1A4C()
{
  unint64_t result = qword_26853EDD8;
  if (!qword_26853EDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EDD8);
  }
  return result;
}

unint64_t sub_22D0B1AA4()
{
  unint64_t result = qword_26853EDE0;
  if (!qword_26853EDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EDE0);
  }
  return result;
}

uint64_t sub_22D0B1AF8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22D2BB7C0();
  if (!result || (uint64_t result = sub_22D2BB7F0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_22D2BB7E0();
      sub_22D2BCA90();
      sub_22D0B2394(&qword_26853E4E0, MEMORY[0x263F047F8]);
      return sub_22D2BC8E0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22D0B1BD8(uint64_t a1, unint64_t a2)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_22D2BCA90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22D2BC910();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v35 = (char *)&v32 - v14;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 == a1 >> 32) {
        goto LABEL_5;
      }
      goto LABEL_7;
    case 2uLL:
      if (*(void *)(a1 + 16) == *(void *)(a1 + 24)) {
        goto LABEL_5;
      }
LABEL_7:
      uint64_t v37 = v6;
      uint64_t v34 = v13;
      *(void *)&long long v36 = sub_22D0B2394(&qword_26853E4E0, MEMORY[0x263F047F8]);
      sub_22D2BC900();
      if (a2 >> 62 == 2)
      {
        uint64_t v16 = *(void *)(a1 + 16);
        uint64_t v32 = *(void *)(a1 + 24);
        sub_22CFF9B64(a1, a2);
        swift_retain();
        swift_retain();
        sub_22D0B1AF8(v16, v32);
        if (v2)
        {
          swift_release();
          swift_release();
          __break(1u);
          JUMPOUT(0x22D0B227CLL);
        }
        uint64_t v32 = 0;
        swift_release();
        swift_release();
        sub_22CFF5630(a1, a2);
      }
      else
      {
        uint64_t v33 = v9;
        if (a1 >> 32 < (int)a1) {
          goto LABEL_29;
        }
        sub_22CFF9B64(a1, a2);
        sub_22D0B1AF8((int)a1, a1 >> 32);
        uint64_t v32 = v2;
        sub_22CFF5630(a1, a2);
        uint64_t v9 = v33;
      }
LABEL_12:
      uint64_t v17 = v35;
      sub_22D2BC8F0();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v5);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v12, v17, v9);
      sub_22D0B2394(&qword_26853EDE8, MEMORY[0x263F045C0]);
      sub_22D2BCD60();
      uint64_t v18 = v38;
      uint64_t v19 = v39;
      uint64_t v20 = v38[2];
      uint64_t v33 = v9;
      if (v39 != v20)
      {
        if (v39 < v20)
        {
          uint64_t v37 = (uint64_t)(v38 + 4);
          uint64_t v21 = (void *)MEMORY[0x263F8EE78];
          long long v36 = xmmword_22D2BFF40;
          unint64_t v23 = v39;
          while ((v19 & 0x8000000000000000) == 0)
          {
            if (v23 >= v18[2]) {
              goto LABEL_27;
            }
            char v24 = *(unsigned char *)(v37 + v23);
            sub_22D0B228C();
            uint64_t v25 = swift_allocObject();
            *(_OWORD *)(v25 + 16) = v36;
            *(void *)(v25 + 56) = MEMORY[0x263F8E778];
            *(void *)(v25 + 64) = MEMORY[0x263F8E7C0];
            *(unsigned char *)(v25 + 32) = v24;
            uint64_t v26 = sub_22D2BCC00();
            uint64_t v28 = v27;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v21 = sub_22D2810D4(0, v21[2] + 1, 1, v21);
            }
            unint64_t v30 = v21[2];
            unint64_t v29 = v21[3];
            if (v30 >= v29 >> 1) {
              uint64_t v21 = sub_22D2810D4((void *)(v29 > 1), v30 + 1, 1, v21);
            }
            ++v23;
            v21[2] = v30 + 1;
            uint64_t v31 = &v21[2 * v30];
            v31[4] = v26;
            v31[5] = v28;
            if (v20 == v23) {
              goto LABEL_14;
            }
          }
          __break(1u);
LABEL_27:
          __break(1u);
        }
        __break(1u);
LABEL_29:
        __break(1u);
      }
      uint64_t v21 = (void *)MEMORY[0x263F8EE78];
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
      uint64_t v38 = v21;
      sub_22D0B233C();
      sub_22D0B2394((unint64_t *)&qword_26AEC1EC8, (void (*)(uint64_t))sub_22D0B233C);
      uint64_t v6 = sub_22D2BCB60();
      swift_bridgeObjectRelease();
      return v6;
    case 3uLL:
      goto LABEL_5;
    default:
      if ((a2 & 0xFF000000000000) == 0)
      {
LABEL_5:
        sub_22D092498();
        swift_allocError();
        *(_OWORD *)uint64_t v15 = xmmword_22D2C3750;
        *(unsigned char *)(v15 + 16) = 1;
        swift_willThrow();
        return v6;
      }
      uint64_t v37 = v6;
      uint64_t v34 = v13;
      uint64_t v32 = v2;
      sub_22D0B2394(&qword_26853E4E0, MEMORY[0x263F047F8]);
      sub_22D2BC900();
      uint64_t v38 = (void *)a1;
      LOWORD(v39) = a2;
      BYTE2(v39) = BYTE2(a2);
      BYTE3(v39) = BYTE3(a2);
      BYTE4(v39) = BYTE4(a2);
      BYTE5(v39) = BYTE5(a2);
      sub_22D2BC8E0();
      sub_22CFF5630(a1, a2);
      goto LABEL_12;
  }
}

void sub_22D0B228C()
{
  if (!qword_26853EDF0)
  {
    sub_22D0B22E4();
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EDF0);
    }
  }
}

unint64_t sub_22D0B22E4()
{
  unint64_t result = qword_26853EDF8;
  if (!qword_26853EDF8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26853EDF8);
  }
  return result;
}

void sub_22D0B233C()
{
  if (!qword_26AEC1EC0)
  {
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1EC0);
    }
  }
}

uint64_t sub_22D0B2394(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0B23DC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  unsigned int v51 = a2;
  uint64_t v48 = a3;
  uint64_t v55 = sub_22D2BBDE0();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  BOOL v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22D2BB8E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0B33C0(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v57 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = sub_22D2BBC30();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v47 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v45 = (char *)&v42 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v46 = (uint64_t)&v42 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  unint64_t v50 = (char *)&v42 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v42 - v26;
  id v49 = (id)sub_22D2BB810();
  id v28 = objc_msgSend(v49, sel_hk_negativeComponents);
  sub_22D2BB820();

  uint64_t v54 = a1;
  uint64_t v56 = v4;
  sub_22D2BBD60();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  unint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t result = v29(v15, 1, v16);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v43 = v17;
  id v44 = v27;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v31(v27, v15, v16);
  uint64_t v32 = v52;
  uint64_t v33 = v53;
  uint64_t v34 = v55;
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, *MEMORY[0x263F07870], v55);
  uint64_t v35 = v57;
  sub_22D2BBD70();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
  uint64_t result = v29(v35, 1, v16);
  if (result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  long long v36 = v50;
  v31(v50, v57, v16);
  if (v51 == 9)
  {
    uint64_t v37 = v46;
    uint64_t v39 = (uint64_t)v44;
    sub_22D0B307C((uint64_t)v44, v46);
    uint64_t v38 = v45;
    uint64_t v40 = v43;
  }
  else
  {
    uint64_t v38 = v45;
    uint64_t v37 = v46;
    uint64_t v40 = v43;
    uint64_t v39 = (uint64_t)v44;
    if (v51 == 8)
    {
      sub_22D2BBCE0();
    }
    else if (v51 == 7)
    {
      sub_22D2BBCE0();
      sub_22D2BBBA0();
      sub_22D2BBBB0();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v16);
    }
    else
    {
      sub_22D0B2984(v51, (uint64_t)v44, v46);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v38, v37, v16);
  sub_22D2BBCE0();
  sub_22D2BB6A0();

  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v41(v37, v16);
  v41((uint64_t)v36, v16);
  return ((uint64_t (*)(uint64_t, uint64_t))v41)(v39, v16);
}

uint64_t sub_22D0B2984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v53 = a3;
  uint64_t v5 = sub_22D2BBD20();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v48 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_22D2BBD10();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v46 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22D2BBCF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D0B33C0(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v54 = (char *)&v42 - v14;
  sub_22D0B33C0(0, &qword_26853DEE0, MEMORY[0x263F079C8], v12);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v42 - v16;
  sub_22D0B33C0(0, &qword_26853DEE8, MEMORY[0x263F07920], v12);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v42 - v19;
  uint64_t v21 = sub_22D2BB8E0();
  uint64_t v44 = *(void *)(v21 - 8);
  uint64_t v45 = v21;
  MEMORY[0x270FA5388](v21);
  BOOL v52 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_22D2BBDE0();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v26, *MEMORY[0x263F078E8], v23);
  uint64_t v56 = v3;
  uint64_t v57 = a2;
  uint64_t v27 = sub_22D2BBDF0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  if (v27 == v55 + 1) {
    return sub_22D2BBCE0();
  }
  uint64_t v29 = sub_22D2BBE00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v20, 1, 1, v29);
  uint64_t v30 = sub_22D2BBE60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v17, 1, 1, v30);
  sub_22D2BB8C0();
  uint64_t v31 = *MEMORY[0x263F07780];
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  uint64_t v43 = v8;
  v32(v11, v31, v8);
  uint64_t v34 = v46;
  uint64_t v33 = v47;
  uint64_t v35 = v49;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, *MEMORY[0x263F077F0], v49);
  uint64_t v37 = v50;
  uint64_t v36 = v51;
  uint64_t v38 = v48;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v48, *MEMORY[0x263F07800], v51);
  uint64_t v39 = v54;
  sub_22D2BBDB0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v43);
  uint64_t v40 = sub_22D2BBC30();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v52, v45);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v53, v54, v40);
  }
  return result;
}

uint64_t sub_22D0B307C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  sub_22D0B33C0(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v18 - v3;
  uint64_t v5 = sub_22D2BB8E0();
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0B33C0(0, &qword_26853E7E0, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v8 = sub_22D2BBDE0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22D2C20F0;
  unint64_t v13 = v12 + v11;
  uint64_t v14 = *(void (**)(unint64_t, void, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x263F07878], v8);
  v14(v13 + v10, *MEMORY[0x263F078A0], v8);
  v14(v13 + 2 * v10, *MEMORY[0x263F078A8], v8);
  sub_22D0B3424(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_22D2BBD00();
  swift_bridgeObjectRelease();
  sub_22D2BBD50();
  uint64_t v15 = sub_22D2BBC30();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(v20, v4, v15);
  }
  return result;
}

void sub_22D0B33C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D0B3424(uint64_t a1)
{
  uint64_t v2 = sub_22D2BBDE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_22D0B3738();
    uint64_t v9 = sub_22D2BD2F0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_22D0B3B10(&qword_26853EE08, MEMORY[0x263F07908]);
      uint64_t v16 = sub_22D2BCB30();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_22D0B3B10(&qword_26853EE10, MEMORY[0x263F07908]);
          char v23 = sub_22D2BCB90();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_22D0B3738()
{
  if (!qword_26853EE00)
  {
    sub_22D2BBDE0();
    sub_22D0B3B10(&qword_26853EE08, MEMORY[0x263F07908]);
    unint64_t v0 = sub_22D2BD300();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EE00);
    }
  }
}

unint64_t sub_22D0B37CC(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22D2BD470();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_22D0B3A7C();
      uint64_t result = sub_22D2BD2F0();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_22D2BD470();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x230F7AF90](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    sub_22D2BC610();
    sub_22D0B3B10(&qword_26853EE20, MEMORY[0x263EFDD18]);
    uint64_t result = sub_22D2BCB30();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_22D0B3B10(&qword_26853EE28, MEMORY[0x263EFDD18]);
      do
      {
        uint64_t result = sub_22D2BCB90();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void sub_22D0B3A7C()
{
  if (!qword_26853EE18)
  {
    sub_22D2BC610();
    sub_22D0B3B10(&qword_26853EE20, MEMORY[0x263EFDD18]);
    unint64_t v0 = sub_22D2BD300();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EE18);
    }
  }
}

uint64_t sub_22D0B3B10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0B3B58(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v4 + 392) = a3;
  *(void *)(v4 + 232) = a1;
  *(void *)(v4 + 240) = a2;
  *(void *)(v4 + 248) = type metadata accessor for HTTPError();
  *(void *)(v4 + 256) = swift_task_alloc();
  *(void *)(v4 + 264) = swift_task_alloc();
  *(void *)(v4 + 272) = swift_task_alloc();
  *(void *)(v4 + 280) = swift_task_alloc();
  *(void *)(v4 + 288) = swift_task_alloc();
  *(void *)(v4 + 296) = swift_task_alloc();
  *(void *)(v4 + 304) = type metadata accessor for ClinicalDocumentDownloadRequest();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *v3;
  uint64_t v9 = v3[1];
  *(void *)(v4 + 312) = v7;
  *(void *)(v4 + 320) = v8;
  uint64_t v10 = v3[2];
  *(void *)(v4 + 328) = v9;
  *(void *)(v4 + 336) = v10;
  *(void *)(v4 + 144) = v8;
  *(void *)(v4 + 152) = v9;
  *(void *)(v4 + 160) = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v4 + 344) = v11;
  *uint64_t v11 = v4;
  v11[1] = sub_22D0B3CCC;
  return sub_22D0B6584(v7, a2, a3, 0);
}

uint64_t sub_22D0B3CCC()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_22D0B40C0;
  }
  else {
    unint64_t v2 = sub_22D0B3DE0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D0B3DE0()
{
  uint64_t v1 = v0[39];
  v0[5] = v0[38];
  v0[6] = (uint64_t)&off_26E063760;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_22D0B8054(v1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
  unint64_t v3 = (void *)swift_task_alloc();
  v0[45] = (uint64_t)v3;
  *unint64_t v3 = v0;
  v3[1] = sub_22D0B3ED8;
  uint64_t v4 = v0[29];
  return WebRequestPerformer.performFileDownload(for:timeoutInterval:cachePolicy:attribution:)(v4, (uint64_t)(v0 + 2), 0, 1, 0, 1, 1);
}

uint64_t sub_22D0B3ED8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 368) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_22D0B4178;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    unint64_t v3 = sub_22D0B3FF4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_22D0B3FF4()
{
  sub_22D0B7F8C(*(void *)(v0 + 312), (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22D0B40C0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22D0B4178()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void **)(v0 + 368);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(void *)(v0 + 216) = v1;
  id v2 = v1;
  sub_22CFF49FC();
  if (!swift_dynamicCast())
  {

    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v13 = *(void **)(v0 + 368);
    uint64_t v14 = sub_22D2BC390();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
    id v15 = v13;
    id v16 = v13;
    uint64_t v17 = sub_22D2BC380();
    os_log_type_t v18 = sub_22D2BD060();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *(void **)(v0 + 368);
    if (v19)
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v53[0] = v22;
      *(_DWORD *)unint64_t v21 = 136315138;
      *(void *)(v0 + 208) = v20;
      id v23 = v20;
      id v24 = v20;
      sub_22D2BD680();
      id v25 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v26 = sub_22D2BCC30();
      unint64_t v28 = v27;

      *(void *)(v0 + 224) = sub_22D0A4D24(v26, v28, v53);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v17, v18, "ClinicalDocumentDownloadHandler performFileDownload Error %s : re-throwing error", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v22, -1, -1);
      MEMORY[0x230F7BDF0](v21, -1, -1);
    }
    else
    {
    }
    uint64_t v43 = *(void *)(v0 + 312);
    swift_willThrow();
    sub_22D0B7F8C(v43, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
    goto LABEL_21;
  }
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v5 = *(void *)(v0 + 280);

  sub_22D0B7FEC(v4, v3, (uint64_t (*)(void))type metadata accessor for HTTPError);
  sub_22D0B8054(v3, v5, (uint64_t (*)(void))type metadata accessor for HTTPError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *(void **)(v0 + 280);
  if (EnumCaseMultiPayload != 2)
  {
    sub_22D0B7F8C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for HTTPError);
LABEL_12:
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v29 = *(void *)(v0 + 288);
    uint64_t v30 = *(void *)(v0 + 272);
    uint64_t v31 = sub_22D2BC390();
    __swift_project_value_buffer(v31, (uint64_t)qword_26AEC3C90);
    sub_22D0B8054(v29, v30, (uint64_t (*)(void))type metadata accessor for HTTPError);
    uint64_t v32 = sub_22D2BC380();
    os_log_type_t v33 = sub_22D2BD060();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v35 = *(void *)(v0 + 272);
    if (v34)
    {
      os_log_type_t type = v33;
      uint64_t v36 = *(void *)(v0 + 256);
      uint64_t v37 = *(void *)(v0 + 264);
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      v53[0] = v51;
      *(_DWORD *)uint64_t v38 = 136315138;
      sub_22D0B8054(v35, v37, (uint64_t (*)(void))type metadata accessor for HTTPError);
      sub_22D0B8054(v37, v36, (uint64_t (*)(void))type metadata accessor for HTTPError);
      sub_22D2BD680();
      id v39 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v40 = sub_22D2BCC30();
      unint64_t v42 = v41;
      sub_22D0B7F8C(v37, (uint64_t (*)(void))type metadata accessor for HTTPError);
      *(void *)(v0 + 200) = sub_22D0A4D24(v40, v42, v53);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D0B7F8C(v35, (uint64_t (*)(void))type metadata accessor for HTTPError);
      _os_log_impl(&dword_22CFEE000, v32, type, "ClinicalDocumentDownloadHandler performFileDownload HTTPError %s : re-throwing error", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v51, -1, -1);
      MEMORY[0x230F7BDF0](v38, -1, -1);
    }
    else
    {
      sub_22D0B7F8C(*(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for HTTPError);
    }

    uint64_t v10 = *(void *)(v0 + 312);
    uint64_t v11 = *(void *)(v0 + 288);
    sub_22D0B8358(&qword_26853EE70, (void (*)(uint64_t))type metadata accessor for HTTPError);
    swift_allocError();
    sub_22D0B8054(v11, v44, (uint64_t (*)(void))type metadata accessor for HTTPError);
    goto LABEL_20;
  }
  uint64_t v8 = v7[1];
  if (!v8) {
    goto LABEL_12;
  }
  *(void *)(v0 + 184) = *v7;
  *(void *)(v0 + 192) = v8;
  *(void *)(v0 + 168) = 0x20726572616542;
  *(void *)(v0 + 176) = 0xE700000000000000;
  sub_22D0B80BC();
  sub_22D0B8110();
  char v9 = sub_22D2BCB50();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0) {
    goto LABEL_12;
  }
  if (*(unsigned char *)(v0 + 392))
  {
    uint64_t v10 = *(void *)(v0 + 312);
    uint64_t v11 = *(void *)(v0 + 288);
    sub_22D0B8164();
    swift_allocError();
    *unint64_t v12 = 2;
LABEL_20:
    swift_willThrow();
    sub_22D0B7F8C(v11, (uint64_t (*)(void))type metadata accessor for HTTPError);
    sub_22D0B7F8C(v10, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);

LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
    return v45();
  }
  uint64_t v47 = *(void *)(v0 + 336);
  *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 320);
  *(void *)(v0 + 136) = v47;
  uint64_t v48 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v48;
  void *v48 = v0;
  v48[1] = sub_22D0B4988;
  uint64_t v49 = *(void *)(v0 + 232);
  uint64_t v50 = *(void *)(v0 + 240);
  return sub_22D0B3B58(v49, v50, 1);
}

uint64_t sub_22D0B4988()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_22D0B4B90;
  }
  else {
    id v2 = sub_22D0B4A9C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D0B4A9C()
{
  uint64_t v1 = *(void *)(v0 + 312);
  sub_22D0B7F8C(*(void *)(v0 + 288), (uint64_t (*)(void))type metadata accessor for HTTPError);
  sub_22D0B7F8C(v1, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_22D0B4B90()
{
  uint64_t v1 = *(void *)(v0 + 312);
  sub_22D0B7F8C(*(void *)(v0 + 288), (uint64_t (*)(void))type metadata accessor for HTTPError);
  sub_22D0B7F8C(v1, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_22D0B4C8C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 456) = a2;
  *(void *)(v3 + 248) = a1;
  *(void *)(v3 + 256) = type metadata accessor for WebRequestResponseError.ErrorType(0);
  *(void *)(v3 + 264) = swift_task_alloc();
  *(void *)(v3 + 272) = type metadata accessor for HTTPError();
  *(void *)(v3 + 280) = swift_task_alloc();
  *(void *)(v3 + 288) = swift_task_alloc();
  *(void *)(v3 + 296) = type metadata accessor for WebRequestResponseError(0);
  *(void *)(v3 + 304) = swift_task_alloc();
  *(void *)(v3 + 312) = swift_task_alloc();
  *(void *)(v3 + 320) = swift_task_alloc();
  *(void *)(v3 + 328) = swift_task_alloc();
  *(void *)(v3 + 336) = swift_task_alloc();
  *(void *)(v3 + 344) = type metadata accessor for ClinicalDocumentDownloadRequest();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  *(void *)(v3 + 352) = v6;
  *(void *)(v3 + 360) = v7;
  uint64_t v9 = v2[2];
  *(void *)(v3 + 368) = v8;
  *(void *)(v3 + 376) = v9;
  *(void *)(v3 + 152) = v7;
  *(void *)(v3 + 160) = v8;
  *(void *)(v3 + 168) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 384) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_22D0B4E64;
  return sub_22D0B6584(v6, a1, a2, 1);
}

uint64_t sub_22D0B4E64()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_22D0B60E4;
  }
  else {
    id v2 = sub_22D0B4F78;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D0B4F78()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = v0[45];
  v0[13] = v0[43];
  v0[14] = (uint64_t)&off_26E063760;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 10);
  sub_22D0B8054(v1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
  uint64_t v4 = swift_task_alloc();
  v0[50] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0 + 10;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 1;
  *(void *)(v4 + 48) = 0;
  *(unsigned char *)(v4 + 56) = 1;
  *(void *)(v4 + 64) = 1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[51] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_22D0B50C8;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000032, 0x800000022D2D7180, sub_22D0B7F70, v4, &type metadata for WebRequestResponse);
}

uint64_t sub_22D0B50C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_22D0B5A00;
  }
  else
  {
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 80);
    uint64_t v3 = sub_22D0B51F0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_22D0B51F0()
{
  uint64_t v48 = v0;
  unint64_t v1 = *(void *)(v0 + 64);
  if (v1 >> 60 != 15)
  {
    uint64_t v21 = *(void *)(v0 + 352);
    uint64_t type = *(void *)(v0 + 56);
    sub_22CFF9B64(type, v1);
    sub_22D0B81B8(v0 + 16);
    sub_22D0B7F8C(v21, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
    return v22(type, v1);
  }
  sub_22D0B8164();
  uint64_t v2 = (void *)swift_allocError();
  *uint64_t v3 = 1;
  swift_willThrow();
  sub_22D0B81B8(v0 + 16);
  *(void *)(v0 + 232) = v2;
  id v4 = v2;
  sub_22CFF49FC();
  if (!swift_dynamicCast())
  {
    uint64_t v16 = *(void *)(v0 + 352);
LABEL_23:
    sub_22D0B7F8C(v16, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
    return v41();
  }
  uint64_t v6 = *(void *)(v0 + 328);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v7 = *(void *)(v0 + 296);
  uint64_t v8 = *(void *)(v0 + 264);

  sub_22D0B7FEC(v5, v6, type metadata accessor for WebRequestResponseError);
  sub_22D0B8054(v6 + *(int *)(v7 + 20), v8, type metadata accessor for WebRequestResponseError.ErrorType);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    id v24 = type metadata accessor for WebRequestResponseError.ErrorType;
    uint64_t v9 = (uint64_t *)(v0 + 264);
LABEL_16:
    sub_22D0B7F8C(*v9, v24);
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v25 = *(void *)(v0 + 320);
    uint64_t v26 = *(void *)(v0 + 328);
    uint64_t v27 = sub_22D2BC390();
    __swift_project_value_buffer(v27, (uint64_t)qword_26AEC3C90);
    sub_22D0B8054(v26, v25, type metadata accessor for WebRequestResponseError);
    unint64_t v28 = sub_22D2BC380();
    os_log_type_t v29 = sub_22D2BD060();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v31 = *(void *)(v0 + 320);
    if (v30)
    {
      uint64_t v32 = *(void *)(v0 + 304);
      uint64_t v33 = *(void *)(v0 + 312);
      BOOL v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v47 = v45;
      *(_DWORD *)BOOL v34 = 136315138;
      sub_22D0B8054(v31, v33, type metadata accessor for WebRequestResponseError);
      sub_22D0B8054(v33, v32, type metadata accessor for WebRequestResponseError);
      sub_22D2BD680();
      id v35 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v36 = sub_22D2BCC30();
      unint64_t v38 = v37;
      sub_22D0B7F8C(v33, type metadata accessor for WebRequestResponseError);
      *(void *)(v0 + 240) = sub_22D0A4D24(v36, v38, &v47);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D0B7F8C(v31, type metadata accessor for WebRequestResponseError);
      _os_log_impl(&dword_22CFEE000, v28, v29, "ClinicalDocumentDownloadHandler performDataRequest WebRequestResponseError %s : re-throwing error", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v45, -1, -1);
      MEMORY[0x230F7BDF0](v34, -1, -1);
    }
    else
    {
      sub_22D0B7F8C(*(void *)(v0 + 320), type metadata accessor for WebRequestResponseError);
    }

    uint64_t v16 = *(void *)(v0 + 352);
    uint64_t v39 = *(void *)(v0 + 328);
    sub_22D0B8358(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    swift_allocError();
    sub_22D0B8054(v39, v40, type metadata accessor for WebRequestResponseError);
    swift_willThrow();
    uint64_t v20 = v39;
    goto LABEL_22;
  }
  uint64_t v9 = (uint64_t *)(v0 + 288);
  uint64_t v11 = *(void *)(v0 + 280);
  uint64_t v10 = *(void *)(v0 + 288);
  sub_22D0B7FEC(*(void *)(v0 + 264), v10, (uint64_t (*)(void))type metadata accessor for HTTPError);
  sub_22D0B8054(v10, v11, (uint64_t (*)(void))type metadata accessor for HTTPError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v13 = *(void **)(v0 + 280);
  if (EnumCaseMultiPayload != 2)
  {
    id v24 = (uint64_t (*)(void))type metadata accessor for HTTPError;
    sub_22D0B7F8C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for HTTPError);
    goto LABEL_16;
  }
  uint64_t v14 = v13[1];
  if (!v14) {
    goto LABEL_15;
  }
  *(void *)(v0 + 200) = *v13;
  *(void *)(v0 + 208) = v14;
  *(void *)(v0 + 216) = 0x20726572616542;
  *(void *)(v0 + 224) = 0xE700000000000000;
  sub_22D0B80BC();
  sub_22D0B8110();
  char v15 = sub_22D2BCB50();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_15:
    id v24 = (uint64_t (*)(void))type metadata accessor for HTTPError;
    goto LABEL_16;
  }
  if (*(unsigned char *)(v0 + 456))
  {
    uint64_t v16 = *(void *)(v0 + 352);
    uint64_t v17 = *(void *)(v0 + 328);
    uint64_t v18 = *(void *)(v0 + 288);
    swift_allocError();
    *BOOL v19 = 2;
    swift_willThrow();
    sub_22D0B7F8C(v18, (uint64_t (*)(void))type metadata accessor for HTTPError);
    uint64_t v20 = v17;
LABEL_22:
    sub_22D0B7F8C(v20, type metadata accessor for WebRequestResponseError);
    goto LABEL_23;
  }
  uint64_t v42 = *(void *)(v0 + 376);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 360);
  *(void *)(v0 + 192) = v42;
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v43;
  *uint64_t v43 = v0;
  v43[1] = sub_22D0B61BC;
  uint64_t v44 = *(void *)(v0 + 248);
  return sub_22D0B4C8C(v44, 1);
}

uint64_t sub_22D0B5A00()
{
  uint64_t v41 = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  unint64_t v1 = *(void **)(v0 + 416);
  *(void *)(v0 + 232) = v1;
  id v2 = v1;
  sub_22CFF49FC();
  if (!swift_dynamicCast())
  {
    uint64_t v14 = *(void *)(v0 + 352);
LABEL_19:
    sub_22D0B7F8C(v14, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v34 = *(uint64_t (**)(void))(v0 + 8);
    return v34();
  }
  uint64_t v4 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 264);

  sub_22D0B7FEC(v3, v4, type metadata accessor for WebRequestResponseError);
  sub_22D0B8054(v4 + *(int *)(v5 + 20), v6, type metadata accessor for WebRequestResponseError.ErrorType);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v18 = type metadata accessor for WebRequestResponseError.ErrorType;
    uint64_t v7 = (uint64_t *)(v0 + 264);
LABEL_12:
    sub_22D0B7F8C(*v7, v18);
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v20 = *(void *)(v0 + 320);
    uint64_t v19 = *(void *)(v0 + 328);
    uint64_t v21 = sub_22D2BC390();
    __swift_project_value_buffer(v21, (uint64_t)qword_26AEC3C90);
    sub_22D0B8054(v19, v20, type metadata accessor for WebRequestResponseError);
    uint64_t v22 = sub_22D2BC380();
    os_log_type_t v23 = sub_22D2BD060();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = *(void *)(v0 + 320);
    if (v24)
    {
      uint64_t v26 = *(void *)(v0 + 304);
      uint64_t v27 = *(void *)(v0 + 312);
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = v39;
      *(_DWORD *)unint64_t v28 = 136315138;
      sub_22D0B8054(v25, v27, type metadata accessor for WebRequestResponseError);
      sub_22D0B8054(v27, v26, type metadata accessor for WebRequestResponseError);
      sub_22D2BD680();
      id v29 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v30 = sub_22D2BCC30();
      unint64_t v32 = v31;
      sub_22D0B7F8C(v27, type metadata accessor for WebRequestResponseError);
      *(void *)(v0 + 240) = sub_22D0A4D24(v30, v32, &v40);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D0B7F8C(v25, type metadata accessor for WebRequestResponseError);
      _os_log_impl(&dword_22CFEE000, v22, v23, "ClinicalDocumentDownloadHandler performDataRequest WebRequestResponseError %s : re-throwing error", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v39, -1, -1);
      MEMORY[0x230F7BDF0](v28, -1, -1);
    }
    else
    {
      sub_22D0B7F8C(*(void *)(v0 + 320), type metadata accessor for WebRequestResponseError);
    }

    uint64_t v14 = *(void *)(v0 + 352);
    uint64_t v15 = *(void *)(v0 + 328);
    sub_22D0B8358(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    swift_allocError();
    sub_22D0B8054(v15, v33, type metadata accessor for WebRequestResponseError);
    swift_willThrow();
    goto LABEL_18;
  }
  uint64_t v7 = (uint64_t *)(v0 + 288);
  uint64_t v9 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 288);
  sub_22D0B7FEC(*(void *)(v0 + 264), v8, (uint64_t (*)(void))type metadata accessor for HTTPError);
  sub_22D0B8054(v8, v9, (uint64_t (*)(void))type metadata accessor for HTTPError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = *(void **)(v0 + 280);
  if (EnumCaseMultiPayload != 2)
  {
    uint64_t v18 = (uint64_t (*)(void))type metadata accessor for HTTPError;
    sub_22D0B7F8C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for HTTPError);
    goto LABEL_12;
  }
  uint64_t v12 = v11[1];
  if (!v12) {
    goto LABEL_11;
  }
  *(void *)(v0 + 200) = *v11;
  *(void *)(v0 + 208) = v12;
  *(void *)(v0 + 216) = 0x20726572616542;
  *(void *)(v0 + 224) = 0xE700000000000000;
  sub_22D0B80BC();
  sub_22D0B8110();
  char v13 = sub_22D2BCB50();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
LABEL_11:
    uint64_t v18 = (uint64_t (*)(void))type metadata accessor for HTTPError;
    goto LABEL_12;
  }
  if (*(unsigned char *)(v0 + 456))
  {
    uint64_t v14 = *(void *)(v0 + 352);
    uint64_t v15 = *(void *)(v0 + 328);
    uint64_t v16 = *(void *)(v0 + 288);
    sub_22D0B8164();
    swift_allocError();
    *uint64_t v17 = 2;
    swift_willThrow();
    sub_22D0B7F8C(v16, (uint64_t (*)(void))type metadata accessor for HTTPError);
LABEL_18:
    sub_22D0B7F8C(v15, type metadata accessor for WebRequestResponseError);
    goto LABEL_19;
  }
  uint64_t v36 = *(void *)(v0 + 376);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 360);
  *(void *)(v0 + 192) = v36;
  unint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v37;
  void *v37 = v0;
  v37[1] = sub_22D0B61BC;
  uint64_t v38 = *(void *)(v0 + 248);
  return sub_22D0B4C8C(v38, 1);
}

uint64_t sub_22D0B60E4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22D0B61BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 432) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_22D0B643C;
  }
  else
  {
    *(void *)(v6 + 440) = a2;
    *(void *)(v6 + 448) = a1;
    uint64_t v7 = sub_22D0B62F0;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_22D0B62F0()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 328);
  sub_22D0B7F8C(*(void *)(v0 + 288), (uint64_t (*)(void))type metadata accessor for HTTPError);
  sub_22D0B7F8C(v2, type metadata accessor for WebRequestResponseError);
  sub_22D0B7F8C(v1, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);

  uint64_t v3 = *(void *)(v0 + 440);
  uint64_t v6 = *(void *)(v0 + 448);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v4(v6, v3);
}

uint64_t sub_22D0B643C()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 328);
  sub_22D0B7F8C(*(void *)(v0 + 288), (uint64_t (*)(void))type metadata accessor for HTTPError);
  sub_22D0B7F8C(v2, type metadata accessor for WebRequestResponseError);
  sub_22D0B7F8C(v1, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t ClinicalDocumentDownloadHandler.init(performer:accountStore:credential:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_22D0B6584(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(unsigned char *)(v5 + 361) = a4;
  *(unsigned char *)(v5 + 360) = a3;
  *(void *)(v5 + 192) = a1;
  *(void *)(v5 + 200) = a2;
  sub_22D0B820C(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  *(void *)(v5 + 208) = swift_task_alloc();
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = swift_task_alloc();
  *(void *)(v5 + 232) = swift_task_alloc();
  *(void *)(v5 + 240) = type metadata accessor for ClinicalDocumentDownloadRequest();
  *(void *)(v5 + 248) = swift_task_alloc();
  sub_22D0B820C(0, &qword_26AEC22D8, MEMORY[0x263F07508]);
  *(void *)(v5 + 256) = swift_task_alloc();
  uint64_t v6 = sub_22D2BBC90();
  *(void *)(v5 + 264) = v6;
  *(void *)(v5 + 272) = *(void *)(v6 - 8);
  *(void *)(v5 + 280) = swift_task_alloc();
  *(void *)(v5 + 288) = swift_task_alloc();
  *(_OWORD *)(v5 + 296) = *(_OWORD *)(v4 + 8);
  return MEMORY[0x270FA2498](sub_22D0B6758, 0, 0);
}

uint64_t sub_22D0B6758()
{
  id v1 = objc_msgSend(*(id *)(v0 + 200), sel_accountIdentifier);
  if (!v1)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 272) + 56))(*(void *)(v0 + 256), 1, 1, *(void *)(v0 + 264));
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 264);
  sub_22D2BBC70();

  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v7(v6, v3, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) == 1)
  {
LABEL_8:
    sub_22D0B8260(*(void *)(v0 + 256), &qword_26AEC22D8, MEMORY[0x263F07508]);
    sub_22D0B8164();
    swift_allocError();
    *uint64_t v12 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v13 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
    return v13();
  }
  char v8 = *(unsigned char *)(v0 + 360);
  v7(*(void *)(v0 + 288), *(void *)(v0 + 256), *(void *)(v0 + 264));
  if (v8)
  {
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_22D0B6D34;
    uint64_t v10 = *(void *)(v0 + 288);
    return sub_22D1F19B4(v10);
  }
  uint64_t v14 = *(void **)(v0 + 304);
  *(void *)(v0 + 336) = v14;
  uint64_t v15 = *(void *)(v0 + 248);
  uint64_t v16 = *(void **)(v0 + 200);
  id v17 = v14;
  sub_22D1FC714(v16, v15);
  if (*(unsigned char *)(v0 + 361))
  {
    HKFHIRCredential.asAuthorizationHeader()();
    if (v43)
    {
      uint64_t v18 = *(void *)(v0 + 248);
      if (*(void *)(v18 + 8))
      {
        uint64_t v20 = sub_22CFF8834();
        uint64_t v21 = *v19;
        if (*v19)
        {
          uint64_t v22 = v19;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v22 = v21;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v21 = sub_22D2814A4(0, v21[2] + 1, 1, v21);
            *uint64_t v22 = v21;
          }
          unint64_t v24 = v21[2];
          unint64_t v25 = v21[3];
          unint64_t v26 = v24 + 1;
          if (v24 >= v25 >> 1)
          {
            unint64_t v41 = v24 + 1;
            uint64_t v38 = v21;
            unint64_t v39 = v21[2];
            uint64_t v40 = sub_22D2814A4((void *)(v25 > 1), v24 + 1, 1, v38);
            unint64_t v24 = v39;
            unint64_t v26 = v41;
            uint64_t v21 = v40;
            *uint64_t v22 = v40;
          }
          v21[2] = v26;
          uint64_t v27 = &v21[4 * v24];
          v27[4] = v42;
          v27[5] = v43;
          v27[6] = v44;
          v27[7] = v45;
        }
        ((void (*)(uint64_t, void))v20)(v0 + 120, 0);
      }
      else
      {
        sub_22D0B8300();
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_22D2BFF40;
        *(void *)(v34 + 32) = v42;
        *(void *)(v34 + 40) = v43;
        *(void *)(v34 + 48) = v44;
        *(void *)(v34 + 56) = v45;
        *(void *)(v18 + 8) = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v35 = *(void *)(v0 + 288);
      uint64_t v36 = *(void *)(v0 + 264);
      uint64_t v37 = *(void *)(v0 + 272);

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      sub_22D0B82BC(v42, v43);
    }
    else
    {
      uint64_t v31 = *(void *)(v0 + 288);
      uint64_t v32 = *(void *)(v0 + 264);
      uint64_t v33 = *(void *)(v0 + 272);

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    }
    sub_22D0B7FEC(*(void *)(v0 + 248), *(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v13 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  unint64_t v28 = *(void **)(v0 + 296);
  uint64_t v29 = sub_22D2BBC50();
  *(void *)(v0 + 344) = v29;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 184;
  *(void *)(v0 + 24) = sub_22D0B7280;
  uint64_t v30 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_22D08A360;
  *(void *)(v0 + 104) = &block_descriptor_0;
  *(void *)(v0 + 112) = v30;
  objc_msgSend(v28, sel_fetchAccountWithIdentifier_completion_, v29, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_22D0B6D34(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 320) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_22D0B79B0;
  }
  else
  {
    *(void *)(v4 + 328) = a1;
    uint64_t v5 = sub_22D0B6E5C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_22D0B6E5C()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void **)(v0 + 328);
  *(void *)(v0 + 336) = v2;
  sub_22D1FC714(*(id *)(v0 + 200), *(void *)(v0 + 248));
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 288);
    uint64_t v4 = *(void *)(v0 + 264);
    uint64_t v5 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
LABEL_20:
    return v6();
  }
  if (*(unsigned char *)(v0 + 361))
  {
    HKFHIRCredential.asAuthorizationHeader()();
    if (v33)
    {
      uint64_t v7 = *(void *)(v0 + 248);
      if (*(void *)(v7 + 8))
      {
        uint64_t v9 = sub_22CFF8834();
        uint64_t v10 = *v8;
        if (*v8)
        {
          uint64_t v11 = v8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v11 = v10;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v10 = sub_22D2814A4(0, v10[2] + 1, 1, v10);
            *uint64_t v11 = v10;
          }
          unint64_t v13 = v10[2];
          unint64_t v14 = v10[3];
          unint64_t v15 = v13 + 1;
          if (v13 >= v14 >> 1)
          {
            unint64_t v31 = v13 + 1;
            uint64_t v27 = v10;
            unint64_t v28 = v10[2];
            uint64_t v29 = sub_22D2814A4((void *)(v14 > 1), v13 + 1, 1, v27);
            unint64_t v13 = v28;
            unint64_t v15 = v31;
            uint64_t v10 = v29;
            *uint64_t v11 = v29;
          }
          void v10[2] = v15;
          uint64_t v16 = &v10[4 * v13];
          v16[4] = v32;
          v16[5] = v33;
          v16[6] = v34;
          v16[7] = v35;
        }
        ((void (*)(uint64_t, void))v9)(v0 + 120, 0);
      }
      else
      {
        sub_22D0B8300();
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_22D2BFF40;
        *(void *)(v23 + 32) = v32;
        *(void *)(v23 + 40) = v33;
        *(void *)(v23 + 48) = v34;
        *(void *)(v23 + 56) = v35;
        *(void *)(v7 + 8) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v24 = *(void *)(v0 + 288);
      uint64_t v25 = *(void *)(v0 + 264);
      uint64_t v26 = *(void *)(v0 + 272);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      sub_22D0B82BC(v32, v33);
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 288);
      uint64_t v21 = *(void *)(v0 + 264);
      uint64_t v22 = *(void *)(v0 + 272);

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    sub_22D0B7FEC(*(void *)(v0 + 248), *(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_20;
  }
  id v17 = *(void **)(v0 + 296);
  uint64_t v18 = sub_22D2BBC50();
  *(void *)(v0 + 344) = v18;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 184;
  *(void *)(v0 + 24) = sub_22D0B7280;
  uint64_t v19 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_22D08A360;
  *(void *)(v0 + 104) = &block_descriptor_0;
  *(void *)(v0 + 112) = v19;
  objc_msgSend(v17, sel_fetchAccountWithIdentifier_completion_, v18, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_22D0B7280()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 352) = v1;
  if (v1) {
    uint64_t v2 = sub_22D0B7A88;
  }
  else {
    uint64_t v2 = sub_22D0B7390;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D0B7390()
{
  uint64_t v1 = *(void **)(v0 + 184);

  id v2 = objc_msgSend(v1, sel_gateway);
  if (!v2) {
    goto LABEL_7;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_baseURL);

  uint64_t v5 = *(void *)(v0 + 224);
  if (v4)
  {
    sub_22D2BBA50();

    uint64_t v6 = sub_22D2BBAA0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  }
  else
  {
    uint64_t v6 = sub_22D2BBAA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
  uint64_t v7 = *(void *)(v0 + 232);
  sub_22D08A690(*(void *)(v0 + 224), v7);
  sub_22D2BBAA0();
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v7, 1, v6);
  uint64_t v11 = *(void *)(v0 + 232);
  if (v10 == 1)
  {
    sub_22D0B8260(*(void *)(v0 + 232), (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
LABEL_7:
    uint64_t v12 = *(void **)(v0 + 336);
    uint64_t v13 = *(void *)(v0 + 288);
    uint64_t v14 = *(void *)(v0 + 264);
    uint64_t v15 = *(void *)(v0 + 272);
    uint64_t v16 = *(void *)(v0 + 248);
    sub_22D0B8164();
    swift_allocError();
    *id v17 = 3;
    swift_willThrow();

    sub_22D0B7F8C(v16, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_25;
  }
  uint64_t v19 = *(void **)(v0 + 200);
  uint64_t v52 = sub_22D2BB9E0();
  uint64_t v53 = v20;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v21(v11, v6);
  id v22 = objc_msgSend(v19, sel_webURL);
  if (v22)
  {
    uint64_t v23 = v22;
    sub_22D2BBA50();

    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v24 = 1;
  }
  uint64_t v26 = *(void *)(v0 + 208);
  uint64_t v25 = *(void *)(v0 + 216);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v26, v24, 1, v6);
  sub_22D08A690(v26, v25);
  int v27 = v9(v25, 1, v6);
  uint64_t v28 = *(void *)(v0 + 216);
  if (v27 == 1)
  {

    swift_bridgeObjectRelease();
    sub_22D0B8260(v28, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  }
  else
  {
    uint64_t v29 = sub_22D2BB9E0();
    uint64_t v31 = v30;
    v21(v28, v6);
    *(void *)(v0 + 152) = v29;
    *(void *)(v0 + 160) = v31;
    *(void *)(v0 + 168) = v52;
    *(void *)(v0 + 176) = v53;
    sub_22D0B80BC();
    sub_22D0B8110();
    char v32 = sub_22D2BCB50();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v32)
    {
      HKFHIRCredential.asAuthorizationHeader()();
      if (v55)
      {
        uint64_t v33 = *(void *)(v0 + 248);
        if (*(void *)(v33 + 8))
        {
          uint64_t v35 = sub_22CFF8834();
          uint64_t v36 = *v34;
          if (*v34)
          {
            uint64_t v37 = v34;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            void *v37 = v36;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v36 = sub_22D2814A4(0, v36[2] + 1, 1, v36);
              void *v37 = v36;
            }
            unint64_t v40 = v36[2];
            unint64_t v39 = v36[3];
            unint64_t v41 = v40 + 1;
            if (v40 >= v39 >> 1)
            {
              uint64_t v51 = sub_22D2814A4((void *)(v39 > 1), v40 + 1, 1, v36);
              unint64_t v41 = v40 + 1;
              uint64_t v36 = v51;
              void *v37 = v51;
            }
            v36[2] = v41;
            uint64_t v42 = &v36[4 * v40];
            v42[4] = v54;
            v42[5] = v55;
            v42[6] = v56;
            v42[7] = v57;
          }
          ((void (*)(uint64_t, void))v35)(v0 + 120, 0);
        }
        else
        {
          sub_22D0B8300();
          uint64_t v47 = swift_allocObject();
          *(_OWORD *)(v47 + 16) = xmmword_22D2BFF40;
          *(void *)(v47 + 32) = v54;
          *(void *)(v47 + 40) = v55;
          *(void *)(v47 + 48) = v56;
          *(void *)(v47 + 56) = v57;
          *(void *)(v33 + 8) = v47;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v48 = *(void *)(v0 + 288);
        uint64_t v49 = *(void *)(v0 + 264);
        uint64_t v50 = *(void *)(v0 + 272);

        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
        sub_22D0B82BC(v54, v55);
        goto LABEL_24;
      }
    }
  }
  uint64_t v43 = *(void *)(v0 + 288);
  uint64_t v44 = *(void *)(v0 + 264);
  uint64_t v45 = *(void *)(v0 + 272);

  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
LABEL_24:
  sub_22D0B7FEC(*(void *)(v0 + 248), *(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
LABEL_25:
  return v18();
}

uint64_t sub_22D0B79B0()
{
  (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[33]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_22D0B7A88()
{
  uint64_t v1 = (void *)v0[43];
  id v2 = (void *)v0[42];
  uint64_t v3 = v0[36];
  uint64_t v4 = v0[33];
  uint64_t v5 = v0[34];
  uint64_t v6 = v0[31];
  swift_willThrow();

  sub_22D0B7F8C(v6, (uint64_t (*)(void))type metadata accessor for ClinicalDocumentDownloadRequest);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

BOOL static ClinicalDocumentDownloadHandlerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ClinicalDocumentDownloadHandlerError.hash(into:)()
{
  return sub_22D2BD740();
}

uint64_t ClinicalDocumentDownloadHandlerError.hashValue.getter()
{
  return sub_22D2BD760();
}

unint64_t sub_22D0B7C30()
{
  unint64_t result = qword_26853EE30;
  if (!qword_26853EE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26853EE30);
  }
  return result;
}

void destroy for ClinicalDocumentDownloadHandler(uint64_t a1)
{
  swift_release();

  id v2 = *(void **)(a1 + 16);
}

void *_s19HealthRecordsDaemon31ClinicalDocumentDownloadHandlerVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_retain();
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void *assignWithCopy for ClinicalDocumentDownloadHandler(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[2];
  uint64_t v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for ClinicalDocumentDownloadHandler(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalDocumentDownloadHandler(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalDocumentDownloadHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalDocumentDownloadHandler()
{
  return &type metadata for ClinicalDocumentDownloadHandler;
}

unsigned char *storeEnumTagSinglePayload for ClinicalDocumentDownloadHandlerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D0B7F38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalDocumentDownloadHandlerError()
{
  return &type metadata for ClinicalDocumentDownloadHandlerError;
}

uint64_t sub_22D0B7F70(uint64_t a1)
{
  return sub_22D2B51E8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_22D0B7F8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D0B7FEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D0B8054(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_22D0B80BC()
{
  unint64_t result = qword_26853EE48;
  if (!qword_26853EE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EE48);
  }
  return result;
}

unint64_t sub_22D0B8110()
{
  unint64_t result = qword_26853EE50;
  if (!qword_26853EE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EE50);
  }
  return result;
}

unint64_t sub_22D0B8164()
{
  unint64_t result = qword_26853EE58;
  if (!qword_26853EE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EE58);
  }
  return result;
}

uint64_t sub_22D0B81B8(uint64_t a1)
{
  return a1;
}

void sub_22D0B820C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D0B8260(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D0B820C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D0B82BC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_22D0B8300()
{
  if (!qword_26853EE60)
  {
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, &qword_26853EE60);
    }
  }
}

uint64_t sub_22D0B8358(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0B83A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_22D0B8404()
{
  MEMORY[0x230F7BDF0](*(void *)(v0 + 16), -1, -1);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_22D0B843C()
{
  sub_22D0B8404();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SingleValuePublisherTaskQueue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22D0B8488()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_22D0B8530()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  sub_22D074520(*(void *)(v0 + *(void *)(*(void *)v0 + 104)));
  sub_22D0B8DE4(v0 + *(void *)(*(void *)v0 + 112));
  return v0;
}

uint64_t sub_22D0B85DC()
{
  sub_22D0B8530();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SingleValuePublisherTaskQueue.ActiveTaskWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22D0B864C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_22D0B8654()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22D0B86F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    int v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_22D0B87E8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_22D0B8858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_22D0B88D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22D0B8964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22D0B89E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_22D0B8A64(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22D0B8BB0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_22D0B8BC4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x22D0B8DA4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          void *v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22D0B8DE4(uint64_t a1)
{
  sub_22D0B8E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22D0B8E40()
{
  if (!qword_26AEC1D20)
  {
    sub_22D0B8E98();
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1D20);
    }
  }
}

unint64_t sub_22D0B8E98()
{
  unint64_t result = qword_26AEC1D18;
  if (!qword_26AEC1D18)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AEC1D18);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_22D0B8F20(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000031;
  uint64_t v3 = 0x6B36353270636573;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x3635322D50;
    }
    else {
      uint64_t v5 = 0x39313535326445;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6B36353270636573;
  unint64_t v6 = 0xE900000000000031;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x3635322D50;
    }
    else {
      uint64_t v3 = 0x39313535326445;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE500000000000000;
    }
    else {
      unint64_t v2 = 0xE700000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_22D2BD660();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22D0B9034(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 17221;
    }
    else {
      uint64_t v3 = 5262159;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE200000000000000;
    }
    else {
      unint64_t v4 = 0xE300000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 17221;
      }
      else {
        uint64_t v6 = 5262159;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE200000000000000;
      }
      else {
        unint64_t v7 = 0xE300000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE300000000000000;
    uint64_t v3 = 4281170;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE300000000000000;
  if (v3 != 4281170)
  {
LABEL_21:
    char v8 = sub_22D2BD660();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22D0B9118(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7972726163;
  }
  else {
    uint64_t v3 = 1685025392;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x7972726163;
  }
  else {
    uint64_t v5 = 1685025392;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_22D2BD660();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

BOOL sub_22D0B91B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

uint64_t sub_22D0B91C0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7566185;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 7566185;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1701667182;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6972755F6F676F6CLL;
      break;
    case 3:
      unint64_t v3 = 0x800000022D2D58E0;
      unint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1701667182) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6972755F6F676F6CLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x800000022D2D58E0;
      if (v5 == 0xD000000000000011) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

BOOL sub_22D0B9338(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2) {
    a1 = qword_22D2C3E98[a1];
  }
  if (a4) {
    a3 = qword_22D2C3E98[a3];
  }
  return a1 == a3;
}

BOOL sub_22D0B935C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2) {
    a1 = qword_22D2C3ED8[a1];
  }
  if (a4) {
    a3 = qword_22D2C3ED8[a3];
  }
  return a1 == a3;
}

uint64_t sub_22D0B9380()
{
  unint64_t v0 = ContentVariables.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == ContentVariables.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_22D2BD660();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_22D0B9418(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x5443454E4E4F43;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x5443454E4E4F43;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x4554454C4544;
      break;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 5522759;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1145128264;
      break;
    case 4:
      uint64_t v5 = 0x534E4F4954504FLL;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1414745936;
      break;
    case 6:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 5526864;
      break;
    case 7:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x4543415254;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x4554454C4544) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 5522759) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1145128264) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      if (v5 != 0x534E4F4954504FLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1414745936) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 5526864;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x4543415254) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t PBDataTypeShared.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  type metadata accessor for PBDataTypeShared(0);
  return sub_22D2BBFE0();
}

uint64_t type metadata accessor for PBDataTypeShared(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853EF30);
}

void PBDaiDataCategory.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t PBDaiDataCategory.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 8;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBDaiDataCategory.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t sub_22D0B96E8()
{
  return *(void *)v0;
}

unint64_t sub_22D0B96F0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBDaiDataCategory.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D0B96F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D0BA458();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

BOOL sub_22D0B9744(uint64_t a1, uint64_t *a2)
{
  return sub_22D0B91B4(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_22D0B9760()
{
  qword_26853EE78 = (uint64_t)&unk_26E05A3E8;
}

uint64_t static PBDaiDataCategory.allCases.getter()
{
  if (qword_26853CD38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PBDaiDataCategory.allCases.setter(uint64_t a1)
{
  if (qword_26853CD38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26853EE78 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PBDaiDataCategory.allCases.modify())()
{
  if (qword_26853CD38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22D0B98F4@<X0>(void *a1@<X8>)
{
  if (qword_26853CD38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_26853EE78;
  return swift_bridgeObjectRetain();
}

uint64_t (*PBDataTypeShared.latestUpdateDate.modify())()
{
  return nullsub_1;
}

void PBDataTypeShared.dataType.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBDataTypeShared.dataType.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 16) = *(void *)result;
  *(unsigned char *)(v1 + 24) = v2;
  return result;
}

uint64_t (*PBDataTypeShared.dataType.modify())()
{
  return nullsub_1;
}

uint64_t PBDataTypeShared.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBDataTypeShared(0) + 24);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBDataTypeShared.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBDataTypeShared(0) + 24);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBDataTypeShared.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBDaiPayload.currentSyncDate.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBDaiPayload.currentSyncDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PBDaiPayload.currentSyncDate.modify())()
{
  return nullsub_1;
}

uint64_t PBDaiPayload.dataTypeShared.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBDaiPayload.dataTypeShared.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PBDaiPayload.dataTypeShared.modify())()
{
  return nullsub_1;
}

uint64_t PBDaiPayload.gatewayID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBDaiPayload.gatewayID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*PBDaiPayload.gatewayID.modify())()
{
  return nullsub_1;
}

uint64_t PBDaiPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBDaiPayload(0) + 28);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PBDaiPayload(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853EF40);
}

uint64_t PBDaiPayload.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBDaiPayload(0) + 28);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBDaiPayload.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBDaiPayload.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x263F8EE78];
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  type metadata accessor for PBDaiPayload(0);
  return sub_22D2BBFE0();
}

uint64_t sub_22D0B9E1C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853EE80);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853EE80);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_22D2C39B0;
  unint64_t v5 = v24 + v4;
  unint64_t v6 = v24 + v4 + *(int *)(v2 + 56);
  *(void *)(v24 + v4) = 0;
  *(void *)unint64_t v6 = "ACTIVITY";
  *(void *)(v6 + 8) = 8;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "VITALS_AND_MES";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unsigned int v11 = (void *)(v5 + 2 * v3);
  int v12 = (char *)v11 + *(int *)(v2 + 56);
  *unsigned int v11 = 2;
  *(void *)int v12 = "ALERTS_AND_ECG";
  *((void *)v12 + 1) = 14;
  unsigned char v12[16] = 2;
  v9();
  unsigned int v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  void *v13 = 3;
  *(void *)uint64_t v14 = "CHR";
  *((void *)v14 + 1) = 3;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v3);
  int v16 = (char *)v15 + *(int *)(v2 + 56);
  *int v15 = 4;
  *(void *)int v16 = "CYCLE_TRACKING";
  *((void *)v16 + 1) = 14;
  v16[16] = 2;
  v9();
  unint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  *unint64_t v17 = 5;
  *(void *)uint64_t v18 = "SLEEP";
  *((void *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  *uint64_t v19 = 6;
  *(void *)uint64_t v20 = "DEVICE_GENERATED";
  *((void *)v20 + 1) = 16;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  id v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)id v22 = "PATIENT_GENERATED";
  *((void *)v22 + 1) = 17;
  v22[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBDaiDataCategory._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CD40, (uint64_t)qword_26853EE80, a1);
}

uint64_t sub_22D0BA160@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CD40, (uint64_t)qword_26853EE80, a1);
}

unint64_t static PBDataTypeShared.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_22D0BA1A0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853EE98);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853EE98);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 1;
  *(void *)unint64_t v7 = "latest_update_date";
  *(void *)(v7 + 8) = 18;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unsigned int v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)unsigned int v11 = "data_type";
  *((void *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBDataTypeShared._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CD48, (uint64_t)qword_26853EE98, a1);
}

uint64_t PBDataTypeShared.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_22D0BA458();
        sub_22D2BC0D0();
      }
      else if (result == 1)
      {
        sub_22D2BC170();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

unint64_t sub_22D0BA458()
{
  unint64_t result = qword_26853EEC8;
  if (!qword_26853EEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EEC8);
  }
  return result;
}

uint64_t PBDataTypeShared.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    if (!v0[2] || (sub_22D0BA458(), uint64_t result = sub_22D2BC240(), !v1))
    {
      type metadata accessor for PBDataTypeShared(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t PBDataTypeShared.hashValue.getter()
{
  return sub_22D0BAD14((void (*)(void))type metadata accessor for PBDataTypeShared, &qword_26853EED0, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared);
}

uint64_t sub_22D0BA5EC@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  return sub_22D2BBFE0();
}

unint64_t sub_22D0BA620()
{
  return 0xD000000000000029;
}

uint64_t sub_22D0BA63C()
{
  return PBDataTypeShared.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D0BA654()
{
  return PBDataTypeShared.traverse<A>(visitor:)();
}

uint64_t sub_22D0BA66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D0BB330(&qword_26853EF58, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0BA6E8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CD48, (uint64_t)qword_26853EE98, a1);
}

uint64_t sub_22D0BA70C(uint64_t a1)
{
  uint64_t v2 = sub_22D0BB330(&qword_26853EED8, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0BA778()
{
  sub_22D0BB330(&qword_26853EED8, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared);
  return sub_22D2BC200();
}

unint64_t static PBDaiPayload.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_22D0BA814()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853EEB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853EEB0);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 1;
  *(void *)unint64_t v7 = "current_sync_date";
  *(void *)(v7 + 8) = 17;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unsigned int v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)unsigned int v11 = "data_type_shared";
  *((void *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "gateway_id";
  *(void *)(v12 + 8) = 10;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBDaiPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(qword_26853CD50, (uint64_t)qword_26853EEB0, a1);
}

uint64_t PBDaiPayload.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        type metadata accessor for PBDataTypeShared(0);
        sub_22D0BB330(&qword_26853EED8, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared);
        sub_22D2BC190();
      }
      else if (result == 1)
      {
        break;
      }
LABEL_11:
      uint64_t result = sub_22D2BC080();
    }
    sub_22D2BC170();
    goto LABEL_11;
  }
  return result;
}

uint64_t PBDaiPayload.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    if (!*(void *)(v0[2] + 16)
      || (type metadata accessor for PBDataTypeShared(0),
          sub_22D0BB330(&qword_26853EED8, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared),
          uint64_t result = sub_22D2BC2D0(),
          !v1))
    {
      unint64_t v5 = v0[4];
      uint64_t v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0) {
        uint64_t v6 = v0[3] & 0xFFFFFFFFFFFFLL;
      }
      if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
      {
        type metadata accessor for PBDaiPayload(0);
        return sub_22D2BBFD0();
      }
    }
  }
  return result;
}

uint64_t PBDaiPayload.hashValue.getter()
{
  return sub_22D0BAD14((void (*)(void))type metadata accessor for PBDaiPayload, &qword_26853EEE0, (void (*)(uint64_t))type metadata accessor for PBDaiPayload);
}

uint64_t sub_22D0BAD14(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_22D2BD760();
}

uint64_t sub_22D0BAD9C@<X0>(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = v1;
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  return sub_22D2BBFE0();
}

unint64_t sub_22D0BADD4()
{
  return 0xD000000000000025;
}

uint64_t sub_22D0BADF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_22D0BAE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_22D0BAED0())()
{
  return nullsub_1;
}

uint64_t sub_22D0BAEF4()
{
  return PBDaiPayload.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D0BAF0C()
{
  return PBDaiPayload.traverse<A>(visitor:)();
}

uint64_t sub_22D0BAF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D0BB330(&qword_26853EF50, (void (*)(uint64_t))type metadata accessor for PBDaiPayload);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0BAFA0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(qword_26853CD50, (uint64_t)qword_26853EEB0, a1);
}

uint64_t sub_22D0BAFC4(uint64_t a1)
{
  uint64_t v2 = sub_22D0BB330(&qword_26853EF20, (void (*)(uint64_t))type metadata accessor for PBDaiPayload);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0BB030()
{
  sub_22D0BB330(&qword_26853EF20, (void (*)(uint64_t))type metadata accessor for PBDaiPayload);
  return sub_22D2BC200();
}

uint64_t _s19HealthRecordsDaemon16PBDataTypeSharedV2eeoiySbAC_ACtFZ_0(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v19 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    uint64_t v13 = *((void *)a1 + 2);
    uint64_t v14 = *(void *)(a2 + 16);
    if (*(unsigned char *)(a2 + 24) == 1)
    {
      switch(v14)
      {
        case 1:
          if (v13 == 1) {
            goto LABEL_11;
          }
          goto LABEL_9;
        case 2:
          if (v13 == 2) {
            goto LABEL_11;
          }
          goto LABEL_9;
        case 3:
          if (v13 == 3) {
            goto LABEL_11;
          }
          goto LABEL_9;
        case 4:
          if (v13 == 4) {
            goto LABEL_11;
          }
          goto LABEL_9;
        case 5:
          if (v13 == 5) {
            goto LABEL_11;
          }
          goto LABEL_9;
        case 6:
          if (v13 == 6) {
            goto LABEL_11;
          }
          goto LABEL_9;
        case 7:
          if (v13 == 7) {
            goto LABEL_11;
          }
          goto LABEL_9;
        default:
          if (v13) {
            goto LABEL_9;
          }
          goto LABEL_11;
      }
    }
    if (v13 == v14)
    {
LABEL_11:
      uint64_t v15 = type metadata accessor for PBDataTypeShared(0);
      int v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, &a1[*(int *)(v15 + 24)], v4);
      v16(v8, (char *)(a2 + *(int *)(v15 + 24)), v4);
      sub_22D0BB330(&qword_26853DB30, MEMORY[0x263F50560]);
      char v12 = sub_22D2BCB90();
      unint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
    else
    {
LABEL_9:
      char v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_22D0BB330(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s19HealthRecordsDaemon12PBDaiPayloadV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    if (sub_22D1120FC(*((void *)a1 + 2), *((void *)a2 + 2)))
    {
      if (*((void *)a1 + 3) == *((void *)a2 + 3) && *((void *)a1 + 4) == *((void *)a2 + 4)
        || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
      {
        uint64_t v13 = type metadata accessor for PBDaiPayload(0);
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v14(v10, &a1[*(int *)(v13 + 28)], v4);
        v14(v8, &a2[*(int *)(v13 + 28)], v4);
        sub_22D0BB330(&qword_26853DB30, MEMORY[0x263F50560]);
        char v12 = sub_22D2BCB90();
        uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
        v15(v8, v4);
        v15(v10, v4);
      }
    }
    else
    {
      char v12 = 0;
    }
  }
  return v12 & 1;
}

unint64_t sub_22D0BB584()
{
  unint64_t result = qword_26853EEE8;
  if (!qword_26853EEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EEE8);
  }
  return result;
}

unint64_t sub_22D0BB5DC()
{
  unint64_t result = qword_26853EEF0;
  if (!qword_26853EEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EEF0);
  }
  return result;
}

uint64_t sub_22D0BB630()
{
  return sub_22D0BB330(&qword_26853EEF8, (void (*)(uint64_t))sub_22D0BB678);
}

void sub_22D0BB678()
{
  if (!qword_26853EF00)
  {
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EF00);
    }
  }
}

uint64_t sub_22D0BB6D0()
{
  return sub_22D0BB330(&qword_26853EF08, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared);
}

uint64_t sub_22D0BB718()
{
  return sub_22D0BB330(&qword_26853EED8, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared);
}

uint64_t sub_22D0BB760()
{
  return sub_22D0BB330(&qword_26853EED0, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared);
}

uint64_t sub_22D0BB7A8()
{
  return sub_22D0BB330(&qword_26853EF10, (void (*)(uint64_t))type metadata accessor for PBDataTypeShared);
}

uint64_t sub_22D0BB7F0()
{
  return sub_22D0BB330(&qword_26853EF18, (void (*)(uint64_t))type metadata accessor for PBDaiPayload);
}

uint64_t sub_22D0BB838()
{
  return sub_22D0BB330(&qword_26853EF20, (void (*)(uint64_t))type metadata accessor for PBDaiPayload);
}

uint64_t sub_22D0BB880()
{
  return sub_22D0BB330(&qword_26853EEE0, (void (*)(uint64_t))type metadata accessor for PBDaiPayload);
}

uint64_t sub_22D0BB8C8()
{
  return sub_22D0BB330(&qword_26853EF28, (void (*)(uint64_t))type metadata accessor for PBDaiPayload);
}

ValueMetadata *type metadata accessor for PBDaiDataCategory()
{
  return &type metadata for PBDaiDataCategory;
}

void *initializeBufferWithCopyOfBuffer for PBDataTypeShared(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_22D2BBFF0();
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBDataTypeShared(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0BBD20);
}

uint64_t sub_22D0BBD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBDataTypeShared(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0BBDE4);
}

uint64_t sub_22D0BBDE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D0BBE8C()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBHistogramSeries.Value(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    uint64_t v10 = sub_22D2BBFF0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for PBHistogramSeries.Value(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for PBHistogramSeries.Value(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for PBHistogramSeries.Value(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBHistogramSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for PBHistogramSeries.Value(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBDaiPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0BC3A4);
}

uint64_t sub_22D0BC3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBDaiPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0BC468);
}

uint64_t sub_22D0BC468(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D0BC510()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t HKClinicalSharingQueryDiagnosticOptions.description.getter(uint64_t a1)
{
  uint64_t v1 = sub_22D0BC6C8((uint64_t)&unk_26E059F70, a1);
  sub_22D0BC928(0, (unint64_t *)&qword_26853F3C0, type metadata accessor for HKClinicalSharingQueryDiagnosticOptions);
  swift_arrayDestroy();
  return v1;
}

uint64_t HKClinicalSharingOptions.description.getter(uint64_t a1)
{
  uint64_t v1 = sub_22D0BC6C8((uint64_t)&unk_26E059F38, a1);
  sub_22D0BC928(0, &qword_26AEC1F20, type metadata accessor for HKClinicalSharingOptions);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_22D0BC6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    if (!a2) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  unint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  uint64_t v6 = a2;
  do
  {
    uint64_t v8 = *(v4 - 2);
    if ((v8 & ~a2) == 0)
    {
      uint64_t v10 = *(v4 - 1);
      uint64_t v9 = *v4;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_22D2810D4(0, v5[2] + 1, 1, v5);
      }
      unint64_t v12 = v5[2];
      unint64_t v11 = v5[3];
      if (v12 >= v11 >> 1) {
        uint64_t v5 = sub_22D2810D4((void *)(v11 > 1), v12 + 1, 1, v5);
      }
      v5[2] = v12 + 1;
      uint64_t v7 = &v5[2 * v12];
      v7[4] = v10;
      v7[5] = v9;
      if ((v8 & v6) != 0) {
        v6 &= ~v8;
      }
    }
    v4 += 3;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_14:
    sub_22D2BCCB0();
    sub_22D2BD430();
    sub_22D2BCCB0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_22D2810D4(0, v5[2] + 1, 1, v5);
    }
    unint64_t v14 = v5[2];
    unint64_t v13 = v5[3];
    if (v14 >= v13 >> 1) {
      uint64_t v5 = sub_22D2810D4((void *)(v13 > 1), v14 + 1, 1, v5);
    }
    v5[2] = v14 + 1;
    uint64_t v15 = &v5[2 * v14];
    v15[4] = 0;
    v15[5] = 0xE000000000000000;
  }
LABEL_19:
  sub_22D0B233C();
  sub_22D084BBC();
  sub_22D2BCB60();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  return 91;
}

void sub_22D0BC928(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_22D0BC98C()
{
  uint64_t v1 = sub_22D0BC6C8((uint64_t)&unk_26E059F38, *v0);
  sub_22D0BC928(0, &qword_26AEC1F20, type metadata accessor for HKClinicalSharingOptions);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_22D0BCA0C()
{
  return HKClinicalSharingQueryDiagnosticOptions.description.getter(*v0);
}

unint64_t HKClinicalSharingReason.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0x7A69726F68747561;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x617461642D77656ELL;
      break;
    case 2:
      unint64_t result = 0x756F72676B636162;
      break;
    case 3:
      unint64_t result = 0x676E6974736574;
      break;
    case 4:
      unint64_t result = 0x696E692D72657375;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

unint64_t sub_22D0BCB1C()
{
  return HKClinicalSharingReason.description.getter(*v0);
}

uint64_t sub_22D0BCB24@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void)@<X1>, uint64_t *a3@<X8>)
{
  sub_22D02FD9C();
  uint64_t result = a2(a1, *(void *)(a1 + *(int *)(v6 + 48)));
  *a3 = result;
  return result;
}

uint64_t sub_22D0BCB78@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v53 = a3;
  sub_22D02FCD0();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0BDEF0(0, (unint64_t *)&qword_26853DF40, (void (*)(uint64_t))sub_22D02FCD0, (void (*)(void))sub_22D0BD36C);
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v48 = (char *)&v45 - v7;
  sub_22D0BE88C(0, (unint64_t *)&qword_26853DF08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263EFDDF8]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v45 - v11;
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDEA0];
  sub_22D0913E0(0, (unint64_t *)&qword_26853DF10, MEMORY[0x263EFDEA0]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v45 - v17;
  uint64_t v19 = *a1;
  v55[0] = v19;
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_22D2BC6B0();
  sub_22CFF49FC();
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_22D091458((unint64_t *)&qword_26853DF18, (unint64_t *)&qword_26853DF10, v13);
  uint64_t v20 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v21 = v19 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_22CFF4B00(v21, (uint64_t)v55);
  uint64_t v22 = v56;
  uint64_t v23 = v57;
  __swift_project_boxed_opaque_existential_1(v55, v56);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  uint64_t v25 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  swift_bridgeObjectRelease();
  if (v25)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_22D2BC390();
    __swift_project_value_buffer(v26, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    int v27 = sub_22D2BC380();
    os_log_type_t v28 = sub_22D2BD050();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      v55[0] = v30;
      sub_22D2BBC90();
      sub_22D0BD3A0((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v31 = sub_22D2BD630();
      uint64_t v54 = sub_22D0A4D24(v31, v32, v55);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v27, v28, "No DocRef creation required. DocRef already exists. Account: %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v30, -1, -1);
      MEMORY[0x230F7BDF0](v29, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    v55[0] = v20;
    uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(0, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v44);
    uint64_t v42 = sub_22D2BC720();
    uint64_t result = swift_release();
  }
  else
  {
    v55[0] = v20;
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(0, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    sub_22D02FD9C();
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v33);
    uint64_t v34 = v47;
    sub_22D2BC7F0();
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v46;
    *(void *)(v35 + 16) = v46;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_22D0BDD0C;
    *(void *)(v37 + 24) = v35;
    id v38 = v36;
    sub_22D2BC5D0();
    sub_22D0BD36C();
    unint64_t v39 = v48;
    uint64_t v40 = v50;
    sub_22D2BC830();
    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v40);
    sub_22D0BDD9C(&qword_26853DF58, (unint64_t *)&qword_26853DF40, (void (*)(uint64_t))sub_22D02FCD0, (void (*)(void))sub_22D0BD36C);
    uint64_t v41 = v52;
    uint64_t v42 = sub_22D2BC720();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v39, v41);
  }
  uint64_t *v53 = v42;
  return result;
}

uint64_t sub_22D0BD36C()
{
  return sub_22D0BD3A0(&qword_26853DF48, (void (*)(uint64_t))sub_22D02FCD0);
}

uint64_t sub_22D0BD3A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0BD3E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22D2BC390();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  uint64_t v7 = sub_22D2BC380();
  os_log_type_t v8 = sub_22D2BD050();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v19[0] = v10;
    uint64_t v22 = a2;
    sub_22D2BBC90();
    sub_22D0BD3A0((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v11 = sub_22D2BD630();
    sub_22D0A4D24(v11, v12, v19);
    a2 = v22;
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v7, v8, "Preparing create request. Account: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v10, -1, -1);
    unint64_t v13 = v9;
    uint64_t v3 = v2;
    MEMORY[0x230F7BDF0](v13, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = v5 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_22CFF4B00(v14, (uint64_t)v19);
  uint64_t v15 = v20;
  uint64_t v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  sub_22D1DA6AC(v15, v16, a2);
  if (!v3)
  {
    sub_22D02FD9C();
    *(void *)(a2 + *(int *)(v17 + 48)) = v5;
    swift_retain();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_22D0BD68C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v31 = a3;
  uint64_t v5 = sub_22D2BB5B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  sub_22D030340();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0BDDEC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  uint64_t v38 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v34 = sub_22D0BDDEC;
  unint64_t v32 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_22D0BDFDC;
  sub_22D0BDEF0(0, &qword_26853EF70, (void (*)(uint64_t))sub_22D0BDDEC, (void (*)(void))sub_22D0BDFDC);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v35 = v16;
  uint64_t v36 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v39 = sub_22D2B2614(a1, a2, 3, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v20, (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_22D0307A8;
  *(void *)(v22 + 24) = v21;
  sub_22D030624(0, (unint64_t *)&qword_26853DF78, (unint64_t *)&qword_26853DF80, (unint64_t *)&qword_26853DF88);
  sub_22D0303F4(0, &qword_26853DF90, (unint64_t *)&qword_26853DF98);
  sub_22D0304B0();
  sub_22D2BC7F0();
  swift_release();
  swift_release();
  sub_22D0BD3A0(&qword_26853DFC0, (void (*)(uint64_t))sub_22D030340);
  uint64_t v23 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v39 = v23;
  sub_22D030624(0, &qword_26853DFB0, &qword_26853DF90, (unint64_t *)&qword_26853DF98);
  sub_22D0BDE88();
  sub_22D0306A0();
  uint64_t v24 = v32;
  sub_22D2BC7F0();
  swift_release();
  sub_22D2BC5D0();
  type metadata accessor for ClinicalSharingSyncContext();
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D0913E0(0, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
  sub_22D0BDFDC();
  sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v25);
  uint64_t v26 = v37;
  sub_22D2BC830();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v26);
  sub_22D0BDD9C(&qword_26853EF80, &qword_26853EF70, (void (*)(uint64_t))v34, (void (*)(void))v33);
  uint64_t v27 = v35;
  uint64_t v28 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v27);
  return v28;
}

uint64_t sub_22D0BDC1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22D0BE0E4(*(void **)(a1 + 16), *(void *)(a1 + 24));
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_22D0BDC54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_22D0BF230(*(void *)(a1 + 8), *(void *)(a1 + 16));
  uint64_t result = sub_22D0BE948();
  *a2 = result;
  return result;
}

uint64_t sub_22D0BDC8C@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1, a1[1], a1[2], a1[3]);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
    a3[2] = v7;
    a3[3] = v8;
  }
  return result;
}

uint64_t sub_22D0BDCD4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D0BDD0C(uint64_t a1, uint64_t a2)
{
  return sub_22D0BD68C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_22D0BDD14()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D0BDD4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, void))(v2 + 16);
  sub_22D02FD9C();
  uint64_t result = v5(a1, *(void *)(a1 + *(int *)(v6 + 48)));
  *a2 = result;
  return result;
}

uint64_t sub_22D0BDD9C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D0BDEF0(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D0BDDEC()
{
  if (!qword_26853EF60)
  {
    sub_22D030624(255, &qword_26853DFB0, &qword_26853DF90, (unint64_t *)&qword_26853DF98);
    sub_22D0BDE88();
    sub_22D0306A0();
    unint64_t v0 = sub_22D2BC500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EF60);
    }
  }
}

void sub_22D0BDE88()
{
  if (!qword_26853EF68)
  {
    type metadata accessor for ClinicalSharingSyncContext();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853EF68);
    }
  }
}

void sub_22D0BDEF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(255, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v7);
    a4();
    unint64_t v8 = sub_22D2BC520();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D0BDFDC()
{
  return sub_22D0BD3A0(&qword_26853EF78, (void (*)(uint64_t))sub_22D0BDDEC);
}

uint64_t sub_22D0BE010()
{
  uint64_t v1 = sub_22D2BB5B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_22D0BE0A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void, void))(v2 + 16))(*a1, a1[1], a1[2], a1[3]);
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_22D0BE0E4(void *a1, uint64_t a2)
{
  sub_22D0BE88C(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v38 - v6;
  uint64_t v8 = (void *)sub_22D2BCBA0();
  id v9 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v8);

  if (!v9)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_22D2BC390();
    __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    unint64_t v20 = sub_22D2BC380();
    os_log_type_t v21 = sub_22D2BD060();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v42 = v23;
      sub_22D2BBC90();
      sub_22D0BD3A0((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v24 = sub_22D2BD630();
      uint64_t v41 = sub_22D0A4D24(v24, v25, &v42);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v20, v21, "No Location header found while creating DocRef. Account: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v23, -1, -1);
      MEMORY[0x230F7BDF0](v22, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_22D0BE8F0();
    swift_allocError();
    uint64_t v27 = 1;
    goto LABEL_17;
  }
  sub_22D2BCBD0();

  sub_22D2BBA90();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_22D2BBAA0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    sub_22D085138((uint64_t)v7);
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_22D2BC390();
    __swift_project_value_buffer(v12, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    uint64_t v13 = sub_22D2BC380();
    os_log_type_t v14 = sub_22D2BD060();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v42 = v16;
      sub_22D2BBC90();
      sub_22D0BD3A0((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v17 = sub_22D2BD630();
      uint64_t v41 = sub_22D0A4D24(v17, v18, &v42);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v13, v14, "Could not parse location url from header while creating DocRef. Account: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v16, -1, -1);
      MEMORY[0x230F7BDF0](v15, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_22D0BE8F0();
    swift_allocError();
    uint64_t v27 = 2;
LABEL_17:
    *(void *)(v26 + 8) = 0;
    *(void *)(v26 + 16) = 0;
    *(void *)uint64_t v26 = v27;
    *(unsigned char *)(v26 + 24) = 3;
    swift_willThrow();
    return a2;
  }
  sub_22D257654();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_22D2BC390();
    __swift_project_value_buffer(v29, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    uint64_t v30 = sub_22D2BC380();
    os_log_type_t v31 = sub_22D2BD050();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v40 = v33;
      uint64_t v39 = v32;
      *(_DWORD *)unint64_t v32 = 136315138;
      uint64_t v42 = v33;
      uint64_t v38 = v32 + 4;
      sub_22D2BBC90();
      sub_22D0BD3A0((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v34 = sub_22D2BD630();
      uint64_t v41 = sub_22D0A4D24(v34, v35, &v42);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v36 = v39;
      _os_log_impl(&dword_22CFEE000, v30, v31, "Successfully created DocRef. Account: %s", v39, 0xCu);
      uint64_t v37 = v40;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v37, -1, -1);
      MEMORY[0x230F7BDF0](v36, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    swift_retain();
  }
  return a2;
}

void sub_22D0BE88C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22D0BE8F0()
{
  unint64_t result = qword_26853EF88;
  if (!qword_26853EF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853EF88);
  }
  return result;
}

uint64_t sub_22D0BE948()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22D2BBC90();
  uint64_t v51 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0C1840();
  uint64_t v54 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0C1AA8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v45 - v12;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_22D2BC390();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  uint64_t v15 = sub_22D2BC380();
  os_log_type_t v16 = sub_22D2BD050();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v52 = v13;
  uint64_t v49 = v11;
  uint64_t v50 = v4;
  if (v17)
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v56[0] = v19;
    *(_DWORD *)unint64_t v18 = 136315138;
    sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v20 = sub_22D2BD630();
    uint64_t v55 = sub_22D0A4D24(v20, v21, v56);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v15, v16, "Updating syncSuccessful info. Account: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v19, -1, -1);
    MEMORY[0x230F7BDF0](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v22 = (void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
  uint64_t v23 = *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
  if (v23)
  {
    uint64_t v24 = v22[9];
    uint64_t v45 = v22[7];
    uint64_t v46 = v2;
    uint64_t v47 = v0;
    uint64_t v48 = v6;
    unint64_t v25 = v22[5];
    uint64_t v26 = v22[3];
    uint64_t v27 = v22[4];
    uint64_t v28 = v22[1];
    uint64_t v29 = v22[2];
    sub_22D057BD8(v23, v28, v29, v26, v27, v25);
    swift_bridgeObjectRetain();
    uint64_t v30 = v29;
    uint64_t v31 = v26;
    uint64_t v2 = v46;
    uint64_t v1 = v47;
    uint64_t v6 = v48;
    sub_22D057C70(v23, v28, v30, v31, v27, v25);
  }
  else
  {
    uint64_t v24 = 0;
  }
  uint64_t v32 = (uint64_t)v49;
  uint64_t v33 = (uint64_t)v52;
  sub_22D227DAC(v24, (uint64_t)v52);
  swift_bridgeObjectRelease();
  sub_22CFF4B00(v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore, (uint64_t)v56);
  uint64_t v34 = __swift_project_boxed_opaque_existential_1(v56, v56[3]);
  uint64_t v36 = (uint64_t)v50;
  uint64_t v35 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID, v2);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare) == 1)
  {
    sub_22D0C19B8(v33, v32, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
  else
  {
    uint64_t v37 = sub_22D2BBC30();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v32, 1, 1, v37);
  }
  uint64_t v38 = sub_22D04B228(v36, v32, v33, *v34);
  uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_22D0C1A38(v32, &qword_26AEC0F48, MEMORY[0x263F07490]);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v2);
  uint64_t v55 = v38;
  sub_22D0C18EC();
  type metadata accessor for ClinicalSharingSyncContext();
  uint64_t v40 = v33;
  sub_22D0C1964((unint64_t *)&qword_26AEC1DD0, (void (*)(uint64_t))sub_22D0C18EC);
  swift_retain();
  uint64_t v41 = v53;
  sub_22D2BC780();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  sub_22D0C1964(&qword_26853EF98, (void (*)(uint64_t))sub_22D0C1840);
  uint64_t v42 = v54;
  uint64_t v43 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v41, v42);
  sub_22D0C1A38(v40, &qword_26AEC0F48, v39);
  return v43;
}

void sub_22D0BF004(void *a1)
{
  uint64_t v2 = v1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_22D2BC390();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  uint64_t v5 = sub_22D2BC380();
  os_log_type_t v6 = sub_22D2BD050();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v13 = v8;
    sub_22D2BBC90();
    sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v9 = sub_22D2BD630();
    sub_22D0A4D24(v9, v10, &v13);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v5, v6, "Updating error info. Account: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v8, -1, -1);
    MEMORY[0x230F7BDF0](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
  *(void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error) = a1;
  id v12 = a1;
}

uint64_t sub_22D0BF230(uint64_t a1, uint64_t a2)
{
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_22D2BC390();
  __swift_project_value_buffer(v5, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  os_log_type_t v6 = sub_22D2BC380();
  os_log_type_t v7 = sub_22D2BD050();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = a1;
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    v19[0] = v9;
    sub_22D2BBC90();
    sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v10 = sub_22D2BD630();
    sub_22D0A4D24(v10, v11, v19);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v6, v7, "Updating resource ID. Account: %s", v8, 0xCu);
    swift_arrayDestroy();
    uint64_t v12 = v9;
    a1 = v18;
    MEMORY[0x230F7BDF0](v12, -1, -1);
    MEMORY[0x230F7BDF0](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo);
  swift_beginAccess();
  sub_22CFF4B00((uint64_t)v13, (uint64_t)v19);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  os_log_type_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24);
  swift_bridgeObjectRetain();
  v16(a1, a2, v14, v15);
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(v13, v19);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_22D0BF4E4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v56 = *(void *)(a1 + 24);
  uint64_t v57 = *(void *)(a1 + 16);
  uint64_t v54 = *(void *)(a1 + 40);
  uint64_t v55 = *(void *)(a1 + 32);
  uint64_t v52 = *(void *)(a1 + 56);
  uint64_t v53 = *(void *)(a1 + 48);
  uint64_t v51 = *(void *)(a1 + 64);
  long long v58 = *(_OWORD *)(a1 + 72);
  long long v59 = *(_OWORD *)a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_22D2BC390();
  __swift_project_value_buffer(v5, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  os_log_type_t v6 = sub_22D2BC380();
  os_log_type_t v7 = sub_22D2BD050();
  uint64_t v70 = v2;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)&long long v60 = v49;
    sub_22D2BBC90();
    sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v9 = sub_22D2BD630();
    *(void *)&v69[0] = sub_22D0A4D24(v9, v10, (uint64_t *)&v60);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v6, v7, "Updating root node. Account: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v49, -1, -1);
    MEMORY[0x230F7BDF0](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v11 = v1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_22CFF4B00(v11, (uint64_t)v69);
  sub_22D021C20(0, (unint64_t *)&qword_26853EFA8);
  if (swift_dynamicCast())
  {
    uint64_t v48 = v11;
    uint64_t v12 = *((void *)&v60 + 1);
    uint64_t v13 = v62;
    uint64_t v40 = v61;
    uint64_t v41 = v60;
    uint64_t v39 = v63;
    uint64_t v14 = v65;
    uint64_t v15 = v66;
    os_log_type_t v16 = v67;
    BOOL v17 = v68;
    uint64_t v18 = v3;
    uint64_t v19 = *(void **)(v3 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus);
    uint64_t v46 = v64;
    swift_bridgeObjectRetain();
    id v45 = v14;
    id v44 = v15;
    id v43 = v16;
    id v42 = v17;
    id v20 = v19;
    uint64_t v47 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (objc_msgSend(v20, sel_userStatus) == (id)4)
    {
    }
    else
    {
      id v26 = objc_msgSend(v20, sel_userStatus);

      if (v26 != (id)5)
      {
        uint64_t v38 = *(void *)(a1 + 48);
        uint64_t v27 = *(void *)(a1 + 56);
        goto LABEL_15;
      }
    }
    uint64_t v38 = 0;
    uint64_t v27 = 0;
LABEL_15:
    uint64_t v50 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void *)(a1 + 24);
    uint64_t v37 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v28 = v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode;
    uint64_t v29 = *(void *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
    uint64_t v30 = *(void *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8);
    uint64_t v31 = *(void *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16);
    uint64_t v32 = *(void *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24);
    uint64_t v33 = *(void *)(v18 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32);
    unint64_t v34 = *(void *)(v28 + 40);
    *(_OWORD *)uint64_t v28 = v59;
    *(void *)(v28 + 16) = v57;
    *(void *)(v28 + 24) = v56;
    *(void *)(v28 + 32) = v55;
    *(void *)(v28 + 40) = v54;
    *(void *)(v28 + 48) = v53;
    *(void *)(v28 + 56) = v52;
    *(void *)(v28 + 64) = v51;
    *(_OWORD *)(v28 + 72) = v58;
    sub_22D0C1CC4(a1);
    sub_22D057C70(v29, v30, v31, v32, v33, v34);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v62 = &type metadata for ClinicalSharingDocumentReferenceForLookupInfo;
    uint64_t v63 = &off_26E061090;
    uint64_t v35 = (void *)swift_allocObject();
    *(void *)&long long v60 = v35;
    v35[2] = v41;
    v35[3] = v47;
    v35[4] = v40;
    v35[5] = v13;
    v35[6] = v39;
    v35[7] = v46;
    v35[8] = v38;
    v35[9] = v50;
    v35[10] = v37;
    v35[11] = v36;
    v35[12] = v45;
    v35[13] = v44;
    v35[14] = v43;
    v35[15] = v42;
    sub_22CFF8C10(&v60, (uint64_t)v69);
    swift_beginAccess();
    __swift_destroy_boxed_opaque_existential_1(v48);
    sub_22CFF8C10(v69, v48);
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v21 = sub_22D2BC380();
  os_log_type_t v22 = sub_22D2BD060();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_22CFEE000, v21, v22, "Attempting to update rootNodeInfo when docRefInfo is not for lookupInfo", v23, 2u);
    MEMORY[0x230F7BDF0](v23, -1, -1);
  }

  sub_22D0B0DD0();
  swift_allocError();
  *(_OWORD *)uint64_t v24 = xmmword_22D2C3FA0;
  *(unsigned char *)(v24 + 16) = 4;
  return swift_willThrow();
}

uint64_t sub_22D0BFB3C(uint64_t a1, uint64_t a2)
{
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_22D2BC390();
  __swift_project_value_buffer(v5, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  os_log_type_t v6 = sub_22D2BC380();
  os_log_type_t v7 = sub_22D2BD050();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v14 = v9;
    sub_22D2BBC90();
    sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v10 = sub_22D2BD630();
    sub_22D0A4D24(v10, v11, &v14);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v6, v7, "Updating access token. Account: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v9, -1, -1);
    MEMORY[0x230F7BDF0](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v12 = (void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken);
  *uint64_t v12 = a1;
  v12[1] = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D0BFD7C(uint64_t a1, uint64_t a2)
{
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_22D2BC390();
  __swift_project_value_buffer(v5, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  os_log_type_t v6 = sub_22D2BC380();
  os_log_type_t v7 = sub_22D2BD050();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = a1;
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    v19[0] = v9;
    sub_22D2BBC90();
    sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v10 = sub_22D2BD630();
    sub_22D0A4D24(v10, v11, v19);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v6, v7, "Updating eTag. Account: %s", v8, 0xCu);
    swift_arrayDestroy();
    uint64_t v12 = v9;
    a1 = v18;
    MEMORY[0x230F7BDF0](v12, -1, -1);
    MEMORY[0x230F7BDF0](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo);
  swift_beginAccess();
  sub_22CFF4B00((uint64_t)v13, (uint64_t)v19);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  os_log_type_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  v16(a1, a2, v14, v15);
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(v13, v19);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_22D0C0030(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v87 = a1;
  sub_22D0C1840();
  uint64_t v93 = v3;
  uint64_t v92 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v91 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D0C1AA8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  char v90 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v89 = (char *)&v81 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v81 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v86 = (uint64_t)&v81 - v14;
  sub_22D0C1AA8(0, &qword_26853EFA0, type metadata accessor for PBLookupInfo, v5);
  MEMORY[0x270FA5388](v15 - 8);
  BOOL v17 = (char *)&v81 - v16;
  uint64_t v88 = type metadata accessor for PBLookupInfo(0);
  uint64_t v18 = *(void *)(v88 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v88);
  uint64_t v83 = (uint64_t)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  os_log_type_t v22 = (char *)&v81 - v21;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_22D2BC390();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  unint64_t v25 = sub_22D2BC380();
  os_log_type_t v26 = sub_22D2BD050();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v85 = (uint64_t)v13;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v84 = v24;
    uint64_t v82 = v22;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc();
    v95[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v81 = v29 + 4;
    sub_22D2BBC90();
    sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v31 = sub_22D2BD630();
    uint64_t v94 = sub_22D0A4D24(v31, v32, v95);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v25, v26, "Updating multi device info. Account: %s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v30, -1, -1);
    uint64_t v33 = v29;
    os_log_type_t v22 = v82;
    MEMORY[0x230F7BDF0](v33, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v84 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus;
  uint64_t v34 = (uint64_t)objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus), sel_multiDeviceStatus);
  sub_22D0C19B8(v87, (uint64_t)v17, &qword_26853EFA0, type metadata accessor for PBLookupInfo);
  uint64_t v35 = v88;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v88) == 1)
  {
    sub_22D0C1A38((uint64_t)v17, &qword_26853EFA0, type metadata accessor for PBLookupInfo);
    uint64_t v87 = 0;
    uint64_t v88 = 0;
  }
  else
  {
    sub_22D0C1B0C((uint64_t)v17, (uint64_t)v22);
    uint64_t v36 = v83;
    sub_22D0C1B70((uint64_t)v22, v83);
    uint64_t v37 = *(void *)(v36 + *(int *)(v35 + 20));
    swift_beginAccess();
    uint64_t v38 = v35;
    uint64_t v40 = *(void *)(v37 + 80);
    uint64_t v39 = *(void *)(v37 + 88);
    swift_beginAccess();
    uint64_t v41 = *(void *)(v37 + 96);
    uint64_t v42 = *(void *)(v37 + 104);
    swift_beginAccess();
    uint64_t v43 = *(int *)(v37 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22D0C1BD4(v36);
    id v44 = (void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
    uint64_t v45 = *(void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
    uint64_t v46 = *(void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo + 8);
    *id v44 = v40;
    v44[1] = v39;
    v44[2] = v41;
    v44[3] = v42;
    v44[4] = v43;
    sub_22D0B82BC(v45, v46);
    uint64_t v47 = *(int *)(v38 + 20);
    swift_beginAccess();
    uint64_t v48 = qword_26853D3D0;
    swift_bridgeObjectRetain();
    if (v48 != -1) {
      swift_once();
    }
    uint64_t v49 = (void *)qword_268568488;
    uint64_t v50 = (void *)sub_22D2BCBA0();
    id v51 = objc_msgSend(v49, sel_dateFromString_, v50);

    if (v51)
    {
      uint64_t v52 = v85;
      sub_22D2BBC00();

      uint64_t v53 = sub_22D2BBC30();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 0, 1, v53);
    }
    else
    {
      uint64_t v54 = sub_22D2BBC30();
      uint64_t v52 = v85;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v85, 1, 1, v54);
    }
    uint64_t v55 = v86;
    sub_22D043228(v52, v86);
    swift_bridgeObjectRelease();
    uint64_t v56 = v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync;
    swift_beginAccess();
    sub_22D0C1C30(v55, v56);
    swift_endAccess();
    uint64_t v57 = *(void **)&v22[v47];
    swift_beginAccess();
    if (v57[10] == *(void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID)
      && v57[11] == *(void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID + 8))
    {
      uint64_t v34 = 1;
    }
    else if (sub_22D2BD660())
    {
      uint64_t v34 = 1;
    }
    else
    {
      uint64_t v34 = 2;
    }
    swift_beginAccess();
    unint64_t v58 = v57[13];
    uint64_t v59 = HIBYTE(v58) & 0xF;
    if ((v58 & 0x2000000000000000) == 0) {
      uint64_t v59 = v57[12] & 0xFFFFFFFFFFFFLL;
    }
    if (v59)
    {
      uint64_t v87 = v57[12];
      uint64_t v88 = v58;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v87 = 0;
      uint64_t v88 = 0;
    }
    sub_22D0C1BD4((uint64_t)v22);
  }
  swift_retain_n();
  long long v60 = sub_22D2BC380();
  os_log_type_t v61 = sub_22D2BD050();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = swift_slowAlloc();
    uint64_t v63 = (void *)swift_slowAlloc();
    uint64_t v85 = swift_slowAlloc();
    uint64_t v97 = v85;
    *(_DWORD *)uint64_t v62 = 136315394;
    uint64_t v86 = v34;
    sub_22D2BBC90();
    sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v64 = sub_22D2BD630();
    uint64_t v96 = sub_22D0A4D24(v64, v65, &v97);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 12) = 2112;
    int v66 = *(void **)(v2 + v84);
    uint64_t v96 = (uint64_t)v66;
    id v67 = v66;
    sub_22D2BD220();
    void *v63 = v66;
    swift_release_n();
    _os_log_impl(&dword_22CFEE000, v60, v61, "Updated multi device info. Account: %s HKClinicalSharingStatus: %@", (uint8_t *)v62, 0x16u);
    sub_22D0C1AA8(0, (unint64_t *)&qword_26AEC2288, (uint64_t (*)(uint64_t))sub_22D0B0E78, MEMORY[0x263F8D8F0]);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v63, -1, -1);
    uint64_t v68 = v85;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v68, -1, -1);
    MEMORY[0x230F7BDF0](v62, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore), *(void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore + 24));
  uint64_t v69 = v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID;
  uint64_t v70 = (void *)sub_22D2BCF50();
  uint64_t v71 = sub_22D2BBC30();
  char v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
  uint64_t v73 = (uint64_t)v89;
  v72(v89, 1, 1, v71);
  uint64_t v74 = (uint64_t)v90;
  v72(v90, 1, 1, v71);
  uint64_t v75 = sub_22D1F163C(v69, v73, v74, 0, v70, v87, v88);
  uint64_t v76 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_22D0C1A38(v74, &qword_26AEC0F48, MEMORY[0x263F07490]);
  sub_22D0C1A38(v73, &qword_26AEC0F48, v76);

  swift_bridgeObjectRelease();
  uint64_t v97 = v75;
  sub_22D0C18EC();
  type metadata accessor for ClinicalSharingSyncContext();
  sub_22D0C1964((unint64_t *)&qword_26AEC1DD0, (void (*)(uint64_t))sub_22D0C18EC);
  swift_retain();
  uint64_t v77 = v91;
  sub_22D2BC780();
  swift_release();
  swift_release();
  sub_22D0C1964(&qword_26853EF98, (void (*)(uint64_t))sub_22D0C1840);
  uint64_t v78 = v93;
  uint64_t v79 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v77, v78);
  return v79;
}

uint64_t sub_22D0C0D0C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D0C1AA8(0, (unint64_t *)&qword_26853DF08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263EFDDF8]);
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v54 - v5;
  sub_22D0C17C0();
  uint64_t v8 = v7;
  uint64_t v59 = *(uint8_t **)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0C1840();
  uint64_t v12 = v11;
  uint64_t v56 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(id *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus);
  if (objc_msgSend(v15, sel_userStatus) == (id)4)
  {

LABEL_4:
    uint64_t v17 = v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID;
    if (*(void *)(a1 + 16)
      && (unint64_t v18 = sub_22D04EA20(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID),
          (v19 & 1) != 0))
    {
      uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v20 = 0;
    }
    uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
    swift_bridgeObjectRelease();
    if (v21) {
      BOOL v22 = v20 == 0;
    }
    else {
      BOOL v22 = 1;
    }
    if (v22)
    {
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_22D2BC390();
      __swift_project_value_buffer(v23, (uint64_t)qword_26AEC3C90);
      swift_retain_n();
      uint64_t v24 = sub_22D2BC380();
      os_log_type_t v25 = sub_22D2BD050();
      if (os_log_type_enabled(v24, v25))
      {
        os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v61 = v27;
        *(_DWORD *)os_log_type_t v26 = 136315138;
        uint64_t v59 = v26 + 4;
        sub_22D2BBC90();
        sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
        uint64_t v28 = sub_22D2BD630();
        uint64_t v60 = sub_22D0A4D24(v28, v29, &v61);
        sub_22D2BD220();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22CFEE000, v24, v25, "Updating User status to revoked. Account: %s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v27, -1, -1);
        MEMORY[0x230F7BDF0](v26, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v46 = __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore), *(void *)(v2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore + 24));
      uint64_t v47 = (void *)sub_22D2BCF50();
      uint64_t v48 = sub_22D04B8CC(v17, v47, *v46);

      uint64_t v61 = v48;
      sub_22D0C18EC();
      type metadata accessor for ClinicalSharingSyncContext();
      sub_22D0C1964((unint64_t *)&qword_26AEC1DD0, (void (*)(uint64_t))sub_22D0C18EC);
      swift_retain();
      sub_22D2BC780();
      swift_release();
      swift_release();
      sub_22D0C1964(&qword_26853EF98, (void (*)(uint64_t))sub_22D0C1840);
      uint64_t v49 = sub_22D2BC720();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v12);
    }
    else
    {
      uint64_t v56 = v8;
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_22D2BC390();
      __swift_project_value_buffer(v30, (uint64_t)qword_26AEC3C90);
      swift_retain_n();
      uint64_t v31 = sub_22D2BC380();
      os_log_type_t v32 = sub_22D2BD050();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v61 = v34;
        *(_DWORD *)uint64_t v33 = 136315138;
        uint64_t v55 = v33 + 4;
        sub_22D2BBC90();
        sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
        uint64_t v35 = sub_22D2BD630();
        uint64_t v60 = sub_22D0A4D24(v35, v36, &v61);
        sub_22D2BD220();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22CFEE000, v31, v32, "User status not updated to revoked due to failed sync. Account: %s", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v34, -1, -1);
        MEMORY[0x230F7BDF0](v33, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v61 = v2;
      type metadata accessor for ClinicalSharingSyncContext();
      swift_retain();
      sub_22D2BC6B0();
      sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
      uint64_t v50 = v58;
      sub_22D2BC680();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v6, v50);
      sub_22D0C1964((unint64_t *)&qword_26853DF18, (void (*)(uint64_t))sub_22D0C17C0);
      uint64_t v51 = v56;
      uint64_t v49 = sub_22D2BC720();
      (*((void (**)(char *, uint64_t))v59 + 1))(v10, v51);
    }
    return v49;
  }
  id v16 = objc_msgSend(v15, sel_userStatus);

  if (v16 == (id)5) {
    goto LABEL_4;
  }
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_22D2BC390();
  __swift_project_value_buffer(v37, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  uint64_t v38 = sub_22D2BC380();
  os_log_type_t v39 = sub_22D2BD050();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v56 = v8;
    uint64_t v42 = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v61 = v41;
    uint64_t v55 = v40 + 4;
    sub_22D2BBC90();
    sub_22D0C1964((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v43 = sub_22D2BD630();
    uint64_t v60 = sub_22D0A4D24(v43, v44, &v61);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v38, v39, "User status does not need to be updated. Account: %s", v40, 0xCu);
    swift_arrayDestroy();
    uint64_t v45 = v42;
    uint64_t v8 = v56;
    MEMORY[0x230F7BDF0](v45, -1, -1);
    MEMORY[0x230F7BDF0](v40, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v61 = v2;
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_22D2BC6B0();
  sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
  uint64_t v52 = v58;
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v6, v52);
  sub_22D0C1964((unint64_t *)&qword_26853DF18, (void (*)(uint64_t))sub_22D0C17C0);
  uint64_t v49 = sub_22D2BC720();
  (*((void (**)(char *, uint64_t))v59 + 1))(v10, v8);
  return v49;
}

void sub_22D0C17C0()
{
  if (!qword_26853DF10)
  {
    type metadata accessor for ClinicalSharingSyncContext();
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v0 = sub_22D2BD780();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853DF10);
    }
  }
}

void sub_22D0C1840()
{
  if (!qword_26853EF90)
  {
    sub_22D0C18EC();
    type metadata accessor for ClinicalSharingSyncContext();
    sub_22D0C1964((unint64_t *)&qword_26AEC1DD0, (void (*)(uint64_t))sub_22D0C18EC);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853EF90);
    }
  }
}

void sub_22D0C18EC()
{
  if (!qword_26AEC1DE0)
  {
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1DE0);
    }
  }
}

uint64_t sub_22D0C1964(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0C19AC@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_22D0C19B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D0C1AA8(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D0C1A38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D0C1AA8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_22D0C1AA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D0C1B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBLookupInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0C1B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBLookupInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0C1BD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PBLookupInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D0C1C30(uint64_t a1, uint64_t a2)
{
  sub_22D0C1AA8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0C1CC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22CFF9B64(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22D0C1D50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 128, 7);
}

uint64_t sub_22D0C1DCC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[8];
    uint64_t v20 = a1 + v10;
    uint64_t v11 = (uint64_t)a2 + v10;
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v12 = sub_22D2BBC30();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v20, v11, v12);
    uint64_t v14 = a3[10];
    *(unsigned char *)(v7 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(unsigned char *)(v7 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[12];
    *(void *)(v7 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    id v16 = (void *)(v7 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *id v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_22D0C1F30(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D0C1FDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = a3[8];
  uint64_t v18 = a1 + v8;
  uint64_t v9 = a2 + v8;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v18, v9, v10);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22D0C20F4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[12];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D0C2238(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_22D0C2304(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[12];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D0C240C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0C2420);
}

uint64_t sub_22D0C2420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 48) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_22D0C24E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0C24FC);
}

uint64_t sub_22D0C24FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_22D2BBC30();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 32);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 48) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingDailyMetric()
{
  uint64_t result = qword_26AEC13C8;
  if (!qword_26AEC13C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D0C260C()
{
  uint64_t result = sub_22D2BBC30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_22D0C26D0()
{
  sub_22D0C3238(0, (unint64_t *)&qword_26AEC22B0, (uint64_t (*)(uint64_t))sub_22D0C2A78, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22D2C3FB0;
  *(void *)(inited + 32) = 0xD000000000000021;
  *(void *)(inited + 40) = 0x800000022D2D7360;
  uint64_t v2 = (int *)type metadata accessor for ClinicalSharingDailyMetric();
  char v3 = *((unsigned char *)v0 + v2[9]);
  *(void *)(inited + 72) = &type metadata for IHAMetricField;
  *(void *)(inited + 80) = &off_26E05DED8;
  *(unsigned char *)(inited + 48) = v3;
  *(void *)(inited + 88) = 0xD00000000000001DLL;
  *(void *)(inited + 96) = 0x800000022D2D7390;
  char v4 = *((unsigned char *)v0 + v2[10]);
  *(void *)(inited + 128) = &type metadata for IHRMetricField;
  *(void *)(inited + 136) = &off_26E05DF38;
  *(unsigned char *)(inited + 104) = v4;
  *(void *)(inited + 144) = 0xD000000000000016;
  *(void *)(inited + 152) = 0x800000022D2D73B0;
  *(void *)(inited + 184) = &type metadata for PairedWatchSystemVersionMetricField;
  *(void *)(inited + 192) = &off_26E0609C8;
  *(void *)(inited + 200) = 6645601;
  *(void *)(inited + 208) = 0xE300000000000000;
  uint64_t v5 = v0[2];
  char v6 = *((unsigned char *)v0 + 24);
  *(void *)(inited + 240) = &type metadata for AgeMetricField;
  *(void *)(inited + 248) = &off_26E05DEF0;
  *(void *)(inited + 216) = v5;
  *(unsigned char *)(inited + 224) = v6;
  *(void *)(inited + 256) = 7890291;
  *(void *)(inited + 264) = 0xE300000000000000;
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  *(void *)(inited + 296) = &type metadata for SexMetricField;
  *(void *)(inited + 304) = &off_26E05DEC0;
  *(void *)(inited + 272) = v7;
  *(void *)(inited + 280) = v8;
  *(void *)(inited + 312) = 0xD00000000000002ALL;
  *(void *)(inited + 320) = 0x800000022D2D73D0;
  *(void *)(inited + 352) = &type metadata for AvgDataTypesMetricField;
  *(void *)(inited + 360) = &off_26E0609B0;
  uint64_t v9 = *v0;
  uint64_t v10 = v0[1];
  *(void *)(inited + 328) = *v0;
  *(void *)(inited + 368) = 0xD000000000000019;
  *(void *)(inited + 376) = 0x800000022D2D7400;
  *(void *)(inited + 408) = &type metadata for ProvidersSharedWithMetricField;
  *(void *)(inited + 416) = &off_26E060998;
  *(void *)(inited + 384) = v10;
  *(void *)(inited + 424) = 0xD000000000000018;
  *(void *)(inited + 432) = 0x800000022D2D7420;
  *(void *)(inited + 464) = &type metadata for SharingEnabledMetricField;
  *(void *)(inited + 472) = &off_26E060980;
  *(void *)(inited + 440) = v10;
  *(void *)(inited + 480) = 0xD000000000000020;
  *(void *)(inited + 488) = 0x800000022D2D7440;
  *(void *)(inited + 520) = &type metadata for CHROnboardedMetricField;
  *(void *)(inited + 528) = &off_26E060968;
  *(void *)(inited + 496) = v10;
  *(void *)(inited + 544) = 0x800000022D2D7470;
  *(void *)(inited + 576) = &type metadata for MaxConceptsSharedMetricField;
  *(void *)(inited + 536) = 0xD000000000000020;
  *(void *)(inited + 584) = &off_26E060950;
  *(void *)(inited + 600) = 0x800000022D2D74A0;
  *(void *)(inited + 632) = &type metadata for MinConceptsSharedMetricField;
  *(void *)(inited + 552) = v9;
  *(void *)(inited + 640) = &off_26E060938;
  *(void *)(inited + 648) = 0xD000000000000012;
  *(void *)(inited + 592) = 0xD000000000000020;
  *(void *)(inited + 656) = 0x800000022D2D74D0;
  *(void *)(inited + 608) = v9;
  *(void *)(inited + 688) = &type metadata for TimeSinceLastShareMetricField;
  *(void *)(inited + 696) = &off_26E060920;
  *(void *)(inited + 664) = v10;
  *(void *)(inited + 704) = 0xD00000000000001BLL;
  *(void *)(inited + 712) = 0x800000022D2D74F0;
  uint64_t v11 = *(uint64_t *)((char *)v0 + v2[11]);
  *(void *)(inited + 744) = &type metadata for NoOfSharesMetricField;
  *(void *)(inited + 752) = &off_26E060908;
  *(void *)(inited + 720) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return sub_22D0D37CC(inited);
}

uint64_t sub_22D0C2A30(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D0C2A6C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

void sub_22D0C2A78()
{
  if (!qword_26AEC2260)
  {
    sub_22D0C2AE0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AEC2260);
    }
  }
}

unint64_t sub_22D0C2AE0()
{
  unint64_t result = qword_26AEC2080;
  if (!qword_26AEC2080)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AEC2080);
  }
  return result;
}

ValueMetadata *type metadata accessor for NoOfSharesMetricField()
{
  return &type metadata for NoOfSharesMetricField;
}

ValueMetadata *type metadata accessor for TimeSinceLastShareMetricField()
{
  return &type metadata for TimeSinceLastShareMetricField;
}

ValueMetadata *type metadata accessor for MinConceptsSharedMetricField()
{
  return &type metadata for MinConceptsSharedMetricField;
}

ValueMetadata *type metadata accessor for MaxConceptsSharedMetricField()
{
  return &type metadata for MaxConceptsSharedMetricField;
}

ValueMetadata *type metadata accessor for CHROnboardedMetricField()
{
  return &type metadata for CHROnboardedMetricField;
}

ValueMetadata *type metadata accessor for SharingEnabledMetricField()
{
  return &type metadata for SharingEnabledMetricField;
}

ValueMetadata *type metadata accessor for ProvidersSharedWithMetricField()
{
  return &type metadata for ProvidersSharedWithMetricField;
}

ValueMetadata *type metadata accessor for AvgDataTypesMetricField()
{
  return &type metadata for AvgDataTypesMetricField;
}

ValueMetadata *type metadata accessor for PairedWatchSystemVersionMetricField()
{
  return &type metadata for PairedWatchSystemVersionMetricField;
}

uint64_t sub_22D0C2BC8(unint64_t a1)
{
  sub_22D0C3238(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v47 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v38 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v46 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v42 = (char *)&v38 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v38 - v16;
  if (!a1) {
    return 0;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_22D2BD470();
    uint64_t v18 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x263F8EE78];
    goto LABEL_23;
  }
  uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v18) {
    goto LABEL_22;
  }
LABEL_4:
  if (v18 < 1)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v44 = v18;
  unint64_t v45 = a1;
  os_log_type_t v39 = v9;
  uint64_t v40 = v17;
  uint64_t v20 = 0;
  unint64_t v43 = a1 & 0xC000000000000001;
  uint64_t v21 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  BOOL v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v41 = v11;
  uint64_t v23 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v24 = MEMORY[0x263F8EE78];
  do
  {
    if (v43) {
      id v25 = (id)MEMORY[0x230F7AF90](v20, v45);
    }
    else {
      id v25 = *(id *)(v45 + 8 * v20 + 32);
    }
    os_log_type_t v26 = v25;
    id v27 = objc_msgSend(v25, sel_clinicalSharingStatus);
    id v28 = objc_msgSend(v27, sel_lastSharedDate);

    if (v28)
    {
      uint64_t v29 = (uint64_t)v47;
      sub_22D2BBC00();

      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = 1;
      uint64_t v29 = (uint64_t)v47;
    }
    (*v21)(v29, v30, 1, v10);
    sub_22D043228(v29, (uint64_t)v7);

    if ((*v22)(v7, 1, v10) == 1)
    {
      sub_22D04BD5C((uint64_t)v7);
    }
    else
    {
      uint64_t v31 = *v23;
      os_log_type_t v32 = v42;
      (*v23)(v42, v7, v10);
      v31(v46, v32, v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_22D2812B0(0, *(void *)(v24 + 16) + 1, 1, v24);
      }
      unint64_t v34 = *(void *)(v24 + 16);
      unint64_t v33 = *(void *)(v24 + 24);
      if (v34 >= v33 >> 1) {
        uint64_t v24 = sub_22D2812B0(v33 > 1, v34 + 1, 1, v24);
      }
      *(void *)(v24 + 16) = v34 + 1;
      v31((char *)(v24+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v34), v46, v10);
    }
    ++v20;
  }
  while (v44 != v20);
  swift_bridgeObjectRelease();
  uint64_t v17 = v40;
  uint64_t v11 = v41;
  uint64_t v9 = v39;
LABEL_23:
  sub_22D042D40(v24, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_22D04BD5C((uint64_t)v9);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v9, v10);
  uint64_t result = sub_22D2BBBF0();
  if (v35 >= 0.0)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    return 0;
  }
  double v36 = v35 / -3600.0;
  if ((~*(void *)&v36 & 0x7FF0000000000000) == 0) {
    goto LABEL_38;
  }
  if (v36 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v36 >= 9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (!__OFADD__((uint64_t)v36, 1))
  {
    if ((uint64_t)v36 + 1 >= 49) {
      uint64_t v37 = 49;
    }
    else {
      uint64_t v37 = (uint64_t)v36 + 1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    return v37;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22D0C310C()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_getActivePairedDevice);
  if (!v1)
  {

    long long v5 = 0u;
    long long v6 = 0u;
LABEL_11:
    sub_22CFF5998((uint64_t)&v5);
    return 0;
  }
  uint64_t v2 = v1;
  if (objc_msgSend(v1, sel_valueForProperty_, *MEMORY[0x263F57668]))
  {
    sub_22D2BD260();
    swift_unknownObjectRelease();
  }
  else
  {

    memset(v4, 0, sizeof(v4));
  }
  sub_22D0926B0((uint64_t)v4, (uint64_t)&v5);
  if (!*((void *)&v6 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v4[0];
  }
  else {
    return 0;
  }
}

void sub_22D0C3238(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D0C32A8@<X0>(unint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v64 = a3;
  sub_22D05C844(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_22D2BB6F0();
  uint64_t v10 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a2, sel_identifier);
  uint64_t v14 = sub_22D2BCBD0();
  uint64_t v16 = v15;

  if (v14 == sub_22D2BCBD0() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      uint64_t v65 = 0;
      unint64_t v66 = 0xE000000000000000;
      sub_22D2BD310();
      sub_22D2BCCB0();
      id v20 = objc_msgSend(a2, sel_identifier);
      sub_22D2BCBD0();

      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      sub_22D2BCCB0();
      int v61 = 0;
      uint64_t v60 = 17;
      goto LABEL_32;
    }
  }
  uint64_t v21 = sub_22D0A9518(a1);
  if (v21)
  {
    unint64_t v22 = v21;
    sub_22D2BBFE0();
    uint64_t v23 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
    if (qword_26853CF38 != -1) {
      swift_once();
    }
    *(void *)(a4 + v23) = qword_268540090;
    if (v64 >= 2u)
    {
      if (v64 == 2)
      {
        os_log_type_t v39 = self;
        swift_retain();
        id v48 = objc_msgSend(v39, sel_poundUnit);
        id v40 = objc_msgSend(v48, sel_unitString);
        uint64_t v41 = sub_22D2BCBD0();
        uint64_t v43 = v42;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for PBTimeSeries._StorageClass(0);
          swift_allocObject();
          uint64_t v44 = swift_retain();
          *(void *)(a4 + v23) = sub_22D160258(v44);
          swift_release();
        }
        unint64_t v45 = (uint64_t *)(*(void *)(a4 + v23)
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
        swift_beginAccess();
        uint64_t *v45 = v41;
        v45[1] = v43;
        swift_bridgeObjectRelease();
        uint64_t v46 = 49948;
      }
      else
      {
        swift_retain();
        uint64_t v47 = (void *)sub_22D2BCBA0();
        id v48 = objc_msgSend(self, sel_unitFromString_, v47);

        id v49 = objc_msgSend(v48, sel_unitString);
        uint64_t v50 = sub_22D2BCBD0();
        uint64_t v52 = v51;

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          type metadata accessor for PBTimeSeries._StorageClass(0);
          swift_allocObject();
          uint64_t v54 = swift_retain();
          *(void *)(a4 + v23) = sub_22D160258(v54);
          swift_release();
        }
        uint64_t v55 = (uint64_t *)(*(void *)(a4 + v23)
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
        swift_beginAccess();
        *uint64_t v55 = v50;
        v55[1] = v52;
        swift_bridgeObjectRelease();
        uint64_t v46 = 52725;
      }
      uint64_t v56 = sub_22D0C4794(v46, v22, (uint64_t)v48);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBTimeSeries._StorageClass(0);
        swift_allocObject();
        uint64_t v57 = swift_retain();
        *(void *)(a4 + v23) = sub_22D160258(v57);
        swift_release();
      }
      uint64_t v58 = (uint64_t *)(*(void *)(a4 + v23)
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
      swift_beginAccess();
      uint64_t *v58 = v56;
    }
    else
    {
      uint64_t v24 = self;
      swift_retain();
      id v25 = objc_msgSend(v24, sel_millimeterOfMercuryUnit);
      id v26 = objc_msgSend(v25, sel_unitString);

      uint64_t v27 = sub_22D2BCBD0();
      uint64_t v29 = v28;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBTimeSeries._StorageClass(0);
        swift_allocObject();
        uint64_t v30 = swift_retain();
        *(void *)(a4 + v23) = sub_22D160258(v30);
        swift_release();
      }
      uint64_t v31 = (uint64_t *)(*(void *)(a4 + v23)
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
      swift_beginAccess();
      *uint64_t v31 = v27;
      v31[1] = v29;
      swift_bridgeObjectRelease();
      uint64_t v32 = type metadata accessor for ClinicalSharingMedicalRecordsQuery();
      uint64_t v33 = v63;
      sub_22D0C5FC0(v63 + *(int *)(v32 + 28), (uint64_t)v9, (uint64_t (*)(void))sub_22D05C844);
      uint64_t v34 = v62;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v62) == 1)
      {
        sub_22D0C6028((uint64_t)v9, (uint64_t (*)(void))sub_22D05C844);
        int v61 = 0;
        uint64_t v60 = 44;
        goto LABEL_32;
      }
      uint64_t v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v34);
      MEMORY[0x270FA5388](v35);
      *((unsigned char *)&v62 - 32) = v64;
      *(&v62 - 3) = v33;
      uint64_t v60 = (uint64_t)v12;
      unint64_t v36 = sub_22D23FFD4((void (*)(id *))sub_22D0C5FA0, (uint64_t)(&v62 - 6), v22);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v34);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBTimeSeries._StorageClass(0);
        swift_allocObject();
        uint64_t v37 = swift_retain();
        *(void *)(a4 + v23) = sub_22D160258(v37);
        swift_release();
      }
      uint64_t v38 = (unint64_t *)(*(void *)(a4 + v23)
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
      swift_beginAccess();
      *uint64_t v38 = v36;
    }
    return swift_bridgeObjectRelease();
  }
  int v61 = 0;
  uint64_t v60 = 21;
LABEL_32:
  uint64_t result = sub_22D2BD460();
  __break(1u);
  return result;
}

uint64_t sub_22D0C3AB8(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v16 = a1;
  uint64_t v6 = a1;
  if (a4 >> 62) {
    goto LABEL_14;
  }
  uint64_t v7 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_22D2BD470())
  {
    uint64_t v8 = 4;
    while (1)
    {
      id v9 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F7AF90](v8 - 4, a4) : *(id *)(a4 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id v15 = v9;
      a2(&v14, &v16, &v15);
      swift_bridgeObjectRelease();
      if (v4)
      {
        swift_bridgeObjectRelease();

        return v6;
      }

      uint64_t v6 = v14;
      uint64_t v16 = v14;
      ++v8;
      if (v11 == v7) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return v6;
}

void sub_22D0C3C04(id *a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, id a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v95 = a4;
  uint64_t v98 = a3;
  LODWORD(v96) = a2;
  uint64_t v103 = *MEMORY[0x263EF8340];
  uint64_t v9 = type metadata accessor for PBTimeSeries.Value(0);
  unint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22D2BBC30();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v97 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v100 = (char *)&v79 - v17;
  id v99 = *a1;
  id v18 = objc_msgSend(v99, sel_value);
  if (!v18) {
    goto LABEL_67;
  }
  char v19 = v18;
  id v20 = objc_msgSend(v18, sel_inspectableValue);

  if (!v20) {
    goto LABEL_67;
  }
  uint64_t v21 = v20;
  if (objc_msgSend(v20, sel_valueType) != (id)8
    || (id v22 = objc_msgSend(v20, sel_codedValueCollection)) == 0)
  {
LABEL_66:

LABEL_67:
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, 1, 1, v9);
    return;
  }
  uint64_t v23 = v22;
  if ((objc_msgSend(v22, sel_representsCanonicalBloodPressure) & 1) == 0
    && !objc_msgSend(v23, sel_representsSingleBloodPressurePoint))
  {

    uint64_t v21 = v23;
    goto LABEL_66;
  }
  id v94 = v21;
  uint64_t v87 = v14;
  uint64_t v80 = v13;
  uint64_t v81 = v12;
  id v85 = v23;
  id v24 = objc_msgSend(v23, sel_codedValues);
  sub_22D030474(0, &qword_26853E870);
  unint64_t v25 = sub_22D2BCE00();

  unint64_t v102 = MEMORY[0x263F8EE78];
  if (v25 >> 62) {
    goto LABEL_72;
  }
  uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_9:
  unint64_t v92 = v10;
  uint64_t v93 = v9;
  id v91 = a5;
  id v27 = v94;
  if (v26)
  {
    if (v26 < 1) {
      __break(1u);
    }
    for (uint64_t i = 0; i != v26; ++i)
    {
      if ((v25 & 0xC000000000000001) != 0) {
        id v31 = (id)MEMORY[0x230F7AF90](i, v25);
      }
      else {
        id v31 = *(id *)(v25 + 8 * i + 32);
      }
      uint64_t v32 = v31;
      id v101 = 0;
      if (objc_msgSend(v31, sel_chartableCodedQuantityWithError_, &v101))
      {
        id v33 = v101;

        MEMORY[0x230F7AA40]();
        if (*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_22D2BCE30();
        }
        sub_22D2BCE50();
        sub_22D2BCE20();
      }
      else
      {
        id v29 = v101;
        uint64_t v30 = (void *)sub_22D2BB9C0();

        swift_willThrow();
        uint64_t v6 = 0;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v34 = v102;
    unint64_t v10 = v92;
    uint64_t v9 = v93;
    a5 = v91;
    id v27 = v94;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v34 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_22D2BD470();
    if (v35) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v35)
    {
LABEL_25:
      unint64_t v25 = 0;
      unint64_t v90 = v34 & 0xC000000000000001;
      unint64_t v82 = v34 + 32;
      int v89 = v96;
      unint64_t v83 = v34;
      uint64_t v84 = v35;
      do
      {
        if (v90) {
          id v37 = (id)MEMORY[0x230F7AF90](v25, v34);
        }
        else {
          id v37 = *(id *)(v82 + 8 * v25);
        }
        id v36 = v37;
        if (__OFADD__(v25++, 1))
        {
LABEL_71:
          __break(1u);
LABEL_72:
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_22D2BD470();
          goto LABEL_9;
        }
        if (v89 == 1)
        {
          unint64_t v88 = v25;
          id v45 = objc_msgSend(v37, sel_codings);
          sub_22D030474(0, &qword_26853E868);
          unint64_t v46 = sub_22D2BCE00();

          uint64_t v96 = v6;
          if (v46 >> 62)
          {
            swift_bridgeObjectRetain();
            unint64_t v25 = sub_22D2BD470();
            if (v25)
            {
LABEL_47:
              id v86 = v36;
              uint64_t v47 = self;
              unint64_t v10 = v46 & 0xC000000000000001;
              uint64_t v6 = 4;
              while (1)
              {
                id v48 = v10 ? (id)MEMORY[0x230F7AF90](v6 - 4, v46) : *(id *)(v46 + 8 * v6);
                uint64_t v43 = v48;
                uint64_t v9 = v6 - 3;
                if (__OFADD__(v6 - 4, 1)) {
                  goto LABEL_70;
                }
                a5 = objc_msgSend(v47, sel_loinc_diastolicBloodPressureCoding);
                unsigned __int8 v49 = objc_msgSend(v43, sel_isEquivalent_, a5);

                if (v49)
                {
LABEL_59:
                  uint64_t v50 = v100;

                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  id v51 = v86;
                  objc_msgSend(v86, sel_doubleValue);
                  uint64_t v53 = v52;
                  id v54 = v99;
                  id v55 = objc_msgSend(v99, sel__creationDate);
                  sub_22D2BBC00();

                  id v56 = objc_msgSend(v54, sel_issueDate);
                  uint64_t v57 = (uint64_t)v81;
                  uint64_t v58 = v80;
                  if (v56)
                  {
                    uint64_t v59 = v56;
                    uint64_t v60 = (void *)sub_22D2BBD30();
                    id v61 = objc_msgSend(v59, sel_adjustedDateForCalendar_, v60);

                    uint64_t v62 = v97;
                    sub_22D2BBC00();

                    uint64_t v50 = v100;
                    uint64_t v63 = v87;
                    (*(void (**)(char *, uint64_t))(v87 + 8))(v100, v58);
                    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v50, v62, v58);
                  }
                  id v64 = objc_msgSend(v99, sel_effectiveEndDate);
                  if (v64)
                  {
                    uint64_t v65 = v64;
                    unint64_t v66 = (void *)sub_22D2BBD30();
                    id v67 = objc_msgSend(v65, sel_adjustedDateForCalendar_, v66);

                    uint64_t v68 = v97;
                    sub_22D2BBC00();

                    uint64_t v50 = v100;
                    uint64_t v69 = v87;
                    (*(void (**)(char *, uint64_t))(v87 + 8))(v100, v58);
                    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v50, v68, v58);
                  }
                  if (sub_22D2BB6D0())
                  {
                    *(_DWORD *)(v57 + 40) = 0;
                    *(void *)uint64_t v57 = 0;
                    *(void *)(v57 + 8) = 0;
                    *(_DWORD *)(v57 + 16) = 0;
                    *(void *)(v57 + 48) = 0;
                    *(void *)(v57 + 56) = 0xE000000000000000;
                    *(void *)(v57 + 64) = 0;
                    *(void *)(v57 + 72) = 0xE000000000000000;
                    *(_OWORD *)(v57 + 80) = 0u;
                    *(_OWORD *)(v57 + 96) = 0u;
                    *(void *)(v57 + 120) = MEMORY[0x263F8EE78];
                    *(void *)(v57 + 128) = 0;
                    *(_WORD *)(v57 + 136) = 256;
                    uint64_t v70 = v93;
                    sub_22D2BBFE0();
                    *(void *)(v57 + 112) = v53;
                    id v71 = objc_retain(*(id *)(*v98
                                            + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
                    char v72 = (void *)sub_22D2BBBC0();
                    uint64_t v73 = v50;
                    id v74 = objc_msgSend(v71, sel_stringFromDate_, v72);

                    uint64_t v75 = sub_22D2BCBD0();
                    uint64_t v77 = v76;

                    *(void *)(v57 + 24) = v75;
                    *(void *)(v57 + 32) = v77;

                    (*(void (**)(char *, uint64_t))(v87 + 8))(v73, v58);
                    swift_bridgeObjectRelease();
                    *(void *)(v57 + 48) = 1732799853;
                    *(void *)(v57 + 56) = 0xE400000000000000;
                    uint64_t v78 = (uint64_t)v91;
                    sub_22D0C5FC0(v57, (uint64_t)v91, type metadata accessor for PBTimeSeries.Value);
                    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56))(v78, 0, 1, v70);
                    sub_22D0C6028(v57, type metadata accessor for PBTimeSeries.Value);
                  }
                  else
                  {
                    (*(void (**)(char *, uint64_t))(v87 + 8))(v50, v58);

                    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v92 + 56))(v91, 1, 1, v93);
                  }
                  return;
                }

                ++v6;
                if (v9 == v25)
                {
LABEL_26:
                  id v36 = v86;
                  unint64_t v34 = v83;
                  break;
                }
              }
            }
          }
          else
          {
            unint64_t v25 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v25) {
              goto LABEL_47;
            }
          }
        }
        else
        {
          if (v89) {
            goto LABEL_28;
          }
          unint64_t v88 = v25;
          id v39 = objc_msgSend(v37, sel_codings);
          sub_22D030474(0, &qword_26853E868);
          unint64_t v40 = sub_22D2BCE00();

          uint64_t v96 = v6;
          if (v40 >> 62)
          {
            swift_bridgeObjectRetain();
            unint64_t v25 = sub_22D2BD470();
            if (v25)
            {
LABEL_37:
              id v86 = v36;
              uint64_t v41 = self;
              unint64_t v10 = v40 & 0xC000000000000001;
              uint64_t v6 = 4;
              while (1)
              {
                id v42 = v10 ? (id)MEMORY[0x230F7AF90](v6 - 4, v40) : *(id *)(v40 + 8 * v6);
                uint64_t v43 = v42;
                uint64_t v9 = v6 - 3;
                if (__OFADD__(v6 - 4, 1)) {
                  break;
                }
                a5 = objc_msgSend(v41, sel_loinc_systolicBloodPressureCoding);
                unsigned __int8 v44 = objc_msgSend(v43, sel_isEquivalent_, a5);

                if (v44) {
                  goto LABEL_59;
                }

                ++v6;
                if (v9 == v25) {
                  goto LABEL_26;
                }
              }
              __break(1u);
LABEL_70:
              __break(1u);
              goto LABEL_71;
            }
          }
          else
          {
            unint64_t v25 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v25) {
              goto LABEL_37;
            }
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v96;
        unint64_t v10 = v92;
        uint64_t v9 = v93;
        a5 = v91;
        id v27 = v94;
        uint64_t v35 = v84;
        unint64_t v25 = v88;
LABEL_28:
      }
      while (v25 != v35);
    }
  }
  swift_bridgeObjectRelease_n();
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, 1, 1, v9);
}

uint64_t sub_22D0C4794(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_22D05C844(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_22D2BB6F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for ClinicalSharingMedicalRecordsQuery();
  sub_22D0C5FC0(v3 + *(int *)(v14 + 28), (uint64_t)v9, (uint64_t (*)(void))sub_22D05C844);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_22D0C6028((uint64_t)v9, (uint64_t (*)(void))sub_22D05C844);
    uint64_t result = sub_22D2BD460();
    __break(1u);
  }
  else
  {
    uint64_t v15 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v13, v9, v10);
    MEMORY[0x270FA5388](v15);
    *(void *)&v20[-32] = a1;
    *(void *)&v20[-24] = a3;
    id v18 = v13;
    uint64_t v19 = v3;
    uint64_t v16 = sub_22D0C3AB8(MEMORY[0x263F8EE78], (void (*)(uint64_t *__return_ptr, uint64_t *, id *))sub_22D0C6088, (uint64_t)&v20[-48], a2);
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    return v16;
  }
  return result;
}

void sub_22D0C49F4(uint64_t *a1@<X0>, id *a2@<X1>, id a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v24 = a6;
  uint64_t v11 = *a1;
  id v12 = *a2;
  id v13 = objc_msgSend(*a2, sel_primaryConcept);
  id v14 = objc_msgSend(v13, sel_groupByConcept);

  id v15 = objc_msgSend(v14, sel_identifier);
  id v16 = objc_msgSend(v15, sel_rawIdentifier);

  if (v16 == a3)
  {
    id v17 = objc_msgSend(v12, sel_chartableCodedQuantitySet);
    if (v17)
    {
      id v18 = v17;
      if (objc_msgSend(v17, sel_isCompatibleWithUnit_, a4))
      {
        id v19 = objc_msgSend(v18, sel_quantities);
        sub_22D030474(0, (unint64_t *)&unk_26853EFB0);
        unint64_t v20 = sub_22D2BCE00();

        MEMORY[0x270FA5388](v21);
        v23[2] = v18;
        v23[3] = a5;
        v23[4] = a4;
        v23[5] = v24;
        unint64_t v22 = sub_22D23FFD4((void (*)(id *))sub_22D0C60A8, (uint64_t)v23, v20);
        swift_bridgeObjectRelease();
        uint64_t v25 = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_22D23EBF0(v22);
        swift_bridgeObjectRelease();

        *a7 = v25;
        return;
      }
    }
  }
  *a7 = v11;
  swift_bridgeObjectRetain();
}

uint64_t sub_22D0C4C00@<X0>(void **a1@<X0>, void *a2@<X1>, void *a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v32 = a4;
  id v33 = a3;
  uint64_t v34 = a5;
  uint64_t v7 = type metadata accessor for PBTimeSeries.Value(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22D2BBC30();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *a1;
  id v16 = objc_msgSend(a2, sel_date);
  sub_22D2BBC00();

  if (sub_22D2BB6D0())
  {
    *((_DWORD *)v10 + 10) = 0;
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0;
    *((_DWORD *)v10 + 4) = 0;
    *((void *)v10 + 6) = 0;
    *((void *)v10 + 7) = 0xE000000000000000;
    *((void *)v10 + 8) = 0;
    *((void *)v10 + 9) = 0xE000000000000000;
    *((_OWORD *)v10 + 5) = 0u;
    *((_OWORD *)v10 + 6) = 0u;
    *((void *)v10 + 15) = MEMORY[0x263F8EE78];
    *((void *)v10 + 16) = 0;
    *((_WORD *)v10 + 68) = 256;
    sub_22D2BBFE0();
    uint64_t v31 = v7;
    id v17 = v33;
    objc_msgSend(v15, sel_doubleValueForUnit_, v33);
    *((void *)v10 + 14) = v18;
    id v19 = *(id *)(*v32 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    unint64_t v20 = (void *)sub_22D2BBBC0();
    id v21 = objc_msgSend(v19, sel_stringFromDate_, v20);

    uint64_t v22 = sub_22D2BCBD0();
    uint64_t v24 = v23;

    *((void *)v10 + 3) = v22;
    *((void *)v10 + 4) = v24;
    id v25 = objc_msgSend(v17, sel_unitString);
    uint64_t v26 = sub_22D2BCBD0();
    uint64_t v28 = v27;

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_bridgeObjectRelease();
    *((void *)v10 + 6) = v26;
    *((void *)v10 + 7) = v28;
    uint64_t v29 = v34;
    sub_22D0C5FC0((uint64_t)v10, v34, type metadata accessor for PBTimeSeries.Value);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v31);
    return sub_22D0C6028((uint64_t)v10, type metadata accessor for PBTimeSeries.Value);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v34, 1, 1, v7);
  }
}

BOOL sub_22D0C4F34(void *a1)
{
  id v1 = a1;
  BOOL v2 = sub_22D0C4F68();

  return v2;
}

BOOL sub_22D0C4F68()
{
  uint64_t v1 = (uint64_t)&property descriptor for PBUpdateParameters.mailboxID;
  id v2 = objc_msgSend(v0, sel_codedValues);
  sub_22D030474(0, &qword_26853E870);
  unint64_t v3 = sub_22D2BCE00();

  if (v3 >> 62) {
    goto LABEL_28;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  swift_bridgeObjectRelease();
  if (v4 != 2) {
    return 0;
  }
  id v5 = [v0 *(SEL *)(v1 + 2392)];
  unint64_t v6 = sub_22D2BCE00();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_6;
    }
LABEL_31:
    swift_bridgeObjectRelease_n();
    uint64_t v47 = 0;
    goto LABEL_32;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_22D2BD470();
  if (!v7) {
    goto LABEL_31;
  }
LABEL_6:
  id v37 = v0;
  uint64_t v8 = 0;
  unint64_t v43 = v6;
  unint64_t v45 = v6 & 0xC000000000000001;
  unint64_t v39 = v6 + 32;
  uint64_t v41 = v7;
  do
  {
    if (v45) {
      id v9 = (id)MEMORY[0x230F7AF90](v8, v6);
    }
    else {
      id v9 = *(id *)(v39 + 8 * v8);
    }
    id v10 = v9;
    BOOL v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      goto LABEL_30;
    }
    id v12 = objc_msgSend(v9, sel_codings);
    sub_22D030474(0, &qword_26853E868);
    unint64_t v13 = sub_22D2BCE00();

    uint64_t v47 = v10;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v14 = sub_22D2BD470();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_14:
        id v15 = self;
        uint64_t v1 = 4;
        while (1)
        {
          id v16 = (v13 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x230F7AF90](v1 - 4, v13)
              : *(id *)(v13 + 8 * v1);
          id v17 = v16;
          id v0 = (void *)(v1 - 3);
          if (__OFADD__(v1 - 4, 1)) {
            break;
          }
          id v18 = objc_msgSend(v15, sel_loinc_systolicBloodPressureCoding);
          unsigned int v19 = objc_msgSend(v17, sel_isEquivalent_, v18);

          if (v19)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_25;
          }
          ++v1;
          if (v0 == (void *)v14) {
            goto LABEL_7;
          }
        }
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        uint64_t v4 = sub_22D2BD470();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_14;
      }
    }
LABEL_7:
    swift_bridgeObjectRelease_n();

    unint64_t v6 = v43;
  }
  while (v8 != v41);
  swift_bridgeObjectRelease_n();
  uint64_t v47 = 0;
LABEL_25:
  id v0 = v37;
  uint64_t v1 = 0x26493B000;
LABEL_32:
  id v20 = [v0 *(SEL *)(v1 + 2392)];
  unint64_t v21 = sub_22D2BCE00();

  if (v21 >> 62)
  {
LABEL_56:
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_22D2BD470();
    if (v40) {
      goto LABEL_34;
    }
    goto LABEL_57;
  }
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v40 = v22;
  if (!v22)
  {
LABEL_57:
    swift_bridgeObjectRelease_n();
    uint64_t v34 = 0;
    uint64_t v35 = v47;
    if (v47) {
      goto LABEL_53;
    }
LABEL_58:

    return 0;
  }
LABEL_34:
  uint64_t v23 = 0;
  unint64_t v42 = v21;
  unint64_t v44 = v21 & 0xC000000000000001;
  unint64_t v38 = v21 + 32;
  while (1)
  {
    if (v44) {
      id v24 = (id)MEMORY[0x230F7AF90](v23, v21);
    }
    else {
      id v24 = *(id *)(v38 + 8 * v23);
    }
    unint64_t v21 = (unint64_t)v24;
    BOOL v11 = __OFADD__(v23++, 1);
    if (v11)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    id v25 = objc_msgSend(v24, sel_codings);
    sub_22D030474(0, &qword_26853E868);
    unint64_t v26 = sub_22D2BCE00();

    unint64_t v46 = (void *)v21;
    if (v26 >> 62) {
      break;
    }
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v27) {
      goto LABEL_42;
    }
LABEL_35:
    swift_bridgeObjectRelease_n();

    unint64_t v21 = v42;
    if (v23 == v40) {
      goto LABEL_57;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_22D2BD470();
  swift_bridgeObjectRelease();
  if (!v27) {
    goto LABEL_35;
  }
LABEL_42:
  uint64_t v28 = self;
  uint64_t v29 = 4;
  while (1)
  {
    if ((v26 & 0xC000000000000001) != 0) {
      id v30 = (id)MEMORY[0x230F7AF90](v29 - 4, v26);
    }
    else {
      id v30 = *(id *)(v26 + 8 * v29);
    }
    uint64_t v31 = v30;
    unint64_t v21 = v29 - 3;
    if (__OFADD__(v29 - 4, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    id v32 = objc_msgSend(v28, sel_loinc_diastolicBloodPressureCoding);
    unsigned int v33 = objc_msgSend(v31, sel_isEquivalent_, v32);

    if (v33) {
      break;
    }
    ++v29;
    if (v21 == v27) {
      goto LABEL_35;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v34 = v46;
  uint64_t v35 = v47;
  if (!v47) {
    goto LABEL_58;
  }
LABEL_53:

  return v34 != 0;
}

BOOL sub_22D0C54FC(void *a1)
{
  id v1 = a1;
  BOOL v2 = sub_22D0C5530();

  return v2;
}

BOOL sub_22D0C5530()
{
  uint64_t v1 = (uint64_t)v0;
  BOOL v2 = (SEL *)&property descriptor for PBUpdateParameters.mailboxID;
  id v3 = objc_msgSend(v0, sel_codedValues);
  sub_22D030474(0, &qword_26853E870);
  unint64_t v4 = sub_22D2BCE00();

  if (v4 >> 62) {
    goto LABEL_28;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  swift_bridgeObjectRelease();
  if (v5 != 1) {
    return 0;
  }
  id v6 = [(id)v1 v2[299]];
  unint64_t v7 = sub_22D2BCE00();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_6;
    }
LABEL_31:
    swift_bridgeObjectRelease_n();
    id v20 = 0;
    goto LABEL_32;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_22D2BD470();
  if (!v8) {
    goto LABEL_31;
  }
LABEL_6:
  uint64_t v36 = v1;
  uint64_t v9 = 0;
  unint64_t v42 = v7;
  unint64_t v44 = v7 & 0xC000000000000001;
  unint64_t v38 = v7 + 32;
  uint64_t v40 = v8;
  do
  {
    if (v44) {
      id v10 = (id)MEMORY[0x230F7AF90](v9, v7);
    }
    else {
      id v10 = *(id *)(v38 + 8 * v9);
    }
    unint64_t v7 = (unint64_t)v10;
    BOOL v11 = __OFADD__(v9++, 1);
    if (v11)
    {
      __break(1u);
      goto LABEL_30;
    }
    id v12 = objc_msgSend(v10, sel_codings);
    sub_22D030474(0, &qword_26853E868);
    unint64_t v13 = sub_22D2BCE00();

    unint64_t v46 = (void *)v7;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v14 = sub_22D2BD470();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_14:
        id v15 = self;
        uint64_t v1 = 4;
        while (1)
        {
          id v16 = (v13 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x230F7AF90](v1 - 4, v13)
              : *(id *)(v13 + 8 * v1);
          id v17 = v16;
          uint64_t v18 = v1 - 3;
          if (__OFADD__(v1 - 4, 1)) {
            break;
          }
          id v19 = objc_msgSend(v15, sel_loinc_systolicBloodPressureCoding);
          BOOL v2 = (SEL *)objc_msgSend(v17, sel_isEquivalent_, v19);

          if (v2)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            id v20 = v46;
            goto LABEL_25;
          }
          ++v1;
          if (v18 == v14) {
            goto LABEL_7;
          }
        }
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_22D2BD470();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_14;
      }
    }
LABEL_7:
    swift_bridgeObjectRelease_n();

    unint64_t v7 = v42;
  }
  while (v9 != v40);
  swift_bridgeObjectRelease_n();
  id v20 = 0;
LABEL_25:
  uint64_t v1 = v36;
  BOOL v2 = (SEL *)&property descriptor for PBUpdateParameters.mailboxID;
LABEL_32:
  id v21 = [(id)v1 v2[299]];
  unint64_t v22 = sub_22D2BCE00();

  if (v22 >> 62) {
    goto LABEL_57;
  }
  uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = v23; i; uint64_t i = sub_22D2BD470())
  {
    uint64_t v47 = v20;
    uint64_t v24 = 0;
    unint64_t v41 = v22;
    unint64_t v43 = v22 & 0xC000000000000001;
    unint64_t v37 = v22 + 32;
    while (1)
    {
      if (v43)
      {
        id v25 = (id)MEMORY[0x230F7AF90](v24, v22);
        BOOL v11 = __OFADD__(v24++, 1);
        if (v11) {
          goto LABEL_56;
        }
      }
      else
      {
        id v25 = *(id *)(v37 + 8 * v24);
        BOOL v11 = __OFADD__(v24++, 1);
        if (v11) {
          goto LABEL_56;
        }
      }
      unint64_t v45 = v25;
      id v26 = objc_msgSend(v25, sel_codings);
      sub_22D030474(0, &qword_26853E868);
      unint64_t v27 = sub_22D2BCE00();

      if (v27 >> 62) {
        break;
      }
      uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v28) {
        goto LABEL_43;
      }
LABEL_35:
      swift_bridgeObjectRelease_n();

      unint64_t v22 = v41;
      if (v24 == i)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v34 = 0;
        id v20 = v47;
        goto LABEL_59;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (!v28) {
      goto LABEL_35;
    }
LABEL_43:
    uint64_t v29 = self;
    unint64_t v22 = 4;
    while (1)
    {
      id v30 = (v27 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x230F7AF90](v22 - 4, v27)
          : *(id *)(v27 + 8 * v22);
      uint64_t v31 = v30;
      id v20 = (void *)(v22 - 3);
      if (__OFADD__(v22 - 4, 1)) {
        break;
      }
      id v32 = objc_msgSend(v29, sel_loinc_diastolicBloodPressureCoding);
      unsigned int v33 = objc_msgSend(v31, sel_isEquivalent_, v32);

      if (v33)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v34 = v45;
        id v20 = v47;
        goto LABEL_59;
      }
      ++v22;
      if (v20 == (void *)v28) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
  uint64_t v34 = 0;
LABEL_59:
  if (v20)
  {
    if (v34)
    {

      return 0;
    }

    return 1;
  }

  return v34 != 0;
}

id sub_22D0C5AF0()
{
  return 0;
}

id sub_22D0C5AF8()
{
  uint64_t v1 = v0;
  v38[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_22D2BBC30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v37[-v7];
  id v9 = objc_msgSend(v1, sel_value);
  if (!v9) {
    return 0;
  }
  id v10 = v9;
  id v11 = objc_msgSend(v9, sel_inspectableValue);

  if (!v11) {
    return 0;
  }
  id v12 = objc_msgSend(v1, sel_sortDate);
  id v13 = objc_msgSend(v12, sel_keyPath);

  uint64_t v14 = sub_22D2BCBD0();
  uint64_t v16 = v15;

  if (v14 == sub_22D2BCBD0() && v16 == v17)
  {

    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v18 = sub_22D2BD660();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18)
  {

    return 0;
  }
  id v19 = objc_msgSend(v1, sel_diagnosticTestCodingCollection);
  id v20 = objc_msgSend(v19, sel_codings);

  sub_22D030474(0, &qword_26853E868);
  sub_22D2BCE00();

  id v21 = objc_msgSend(v1, sel_referenceRanges);
  if (v21)
  {
    unint64_t v22 = v21;
    sub_22D030474(0, &qword_26853E878);
    uint64_t v23 = sub_22D2BCE00();
  }
  else
  {
    uint64_t v23 = 0;
  }
  id v24 = v11;
  id v25 = (void *)sub_22D2BCDF0();
  swift_bridgeObjectRelease();
  if (v23)
  {
    sub_22D030474(0, &qword_26853E878);
    id v26 = (void *)sub_22D2BCDF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v26 = 0;
  }
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A1E0]), sel_initWithCodings_value_referenceRanges_, v25, v24, v26);

  id v28 = objc_msgSend(v1, sel_sortDate);
  id v29 = objc_msgSend(v28, sel_date);

  sub_22D2BBC00();
  sub_22D082184((uint64_t)v8);
  id v30 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v30(v6, v2);
  uint64_t v31 = (void *)sub_22D2BBBC0();
  v38[0] = 0;
  id v32 = objc_msgSend(v27, sel_chartableCodedQuantitySetWithDate_error_, v31, v38);

  id v33 = v38[0];
  if (!v32)
  {
    uint64_t v34 = v33;
    uint64_t v35 = (void *)sub_22D2BB9C0();

    swift_willThrow();
    v30(v8, v2);

    return 0;
  }
  v30(v8, v2);

  return v32;
}

id sub_22D0C5F5C(void *a1)
{
  id v1 = a1;
  id v2 = sub_22D0C5AF8();

  return v2;
}

void sub_22D0C5FA0(id *a1@<X0>, void *a2@<X8>)
{
  sub_22D0C3C04(a1, *(unsigned __int8 *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_22D0C5FC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D0C6028(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_22D0C6088(uint64_t *a1@<X0>, id *a2@<X1>, void *a3@<X8>)
{
  sub_22D0C49F4(a1, a2, *(id *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), a3);
}

uint64_t sub_22D0C60A8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0C4C00(a1, *(void **)(v2 + 16), *(void **)(v2 + 32), *(void **)(v2 + 40), a2);
}

uint64_t sub_22D0C60C8()
{
  uint64_t result = sub_22D2BCBD0();
  qword_26AEC3CF0 = result;
  *(void *)algn_26AEC3CF8 = v1;
  return result;
}

uint64_t sub_22D0C60F8()
{
  swift_getObjectType();
  swift_getMetatypeMetadata();
  uint64_t v1 = sub_22D2BCC30();
  swift_bridgeObjectRetain();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  return v1;
}

id sub_22D0C61CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VerifiableHealthRecordsParsingServiceServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VerifiableHealthRecordsParsingServiceServer()
{
  return self;
}

uint64_t sub_22D0C6270(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_22D2BC390();
  __swift_project_value_buffer(v9, (uint64_t)qword_26AEC3C90);
  id v10 = v4;
  id v11 = sub_22D2BC380();
  os_log_type_t v12 = sub_22D2BD080();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v23 = a3;
    id v13 = (uint8_t *)swift_slowAlloc();
    unint64_t v22 = a1;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v14;
    *(_DWORD *)id v13 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v25 = sub_22D2BCC30();
    unint64_t v26 = v15;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_22D0A4D24(v25, v26, &v24);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v11, v12, "%s starting", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v14;
    a1 = v22;
    MEMORY[0x230F7BDF0](v16, -1, -1);
    uint64_t v17 = v13;
    a3 = v23;
    MEMORY[0x230F7BDF0](v17, -1, -1);
  }
  else
  {
  }
  type metadata accessor for VerifiableHealthRecordsParsingService();
  *(void *)(swift_initStackObject() + 16) = 0;
  uint64_t v25 = sub_22D1E82CC(a1, a2);
  char v18 = (void *)swift_allocObject();
  _OWORD v18[2] = v10;
  v18[3] = a3;
  v18[4] = a4;
  id v19 = (void *)swift_allocObject();
  v19[2] = v10;
  uint64_t v19[3] = a3;
  v19[4] = a4;
  sub_22D0C6E50();
  sub_22D0C6F00();
  id v20 = v10;
  swift_retain_n();
  v20;
  sub_22D2BC790();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_22D2BC5F0();
  swift_endAccess();
  swift_release();
  swift_setDeallocating();
  return swift_release();
}

void sub_22D0C6600(void **a1, void *a2, void (*a3)(void, id))
{
  uint64_t v4 = *a1;
  if (*a1)
  {
    id v6 = v4;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22D2BC390();
    __swift_project_value_buffer(v7, (uint64_t)qword_26AEC3C90);
    id v8 = v4;
    id v9 = a2;
    id v10 = v4;
    id v11 = v9;
    os_log_type_t v12 = sub_22D2BC380();
    os_log_type_t v13 = sub_22D2BD060();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v32 = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v16 = sub_22D0C60F8();
      sub_22D0A4D24(v16, v17, &v32);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      id v18 = v4;
      sub_22CFF49FC();
      uint64_t v19 = sub_22D2BCC30();
      sub_22D0A4D24(v19, v20, &v32);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v12, v13, "%s failed with %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v15, -1, -1);
      MEMORY[0x230F7BDF0](v14, -1, -1);
    }
    else
    {
    }
    swift_getErrorValue();
    id v28 = sub_22D1E4268(v30, v31);
    a3(0, v28);
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_22D2BC390();
    __swift_project_value_buffer(v21, (uint64_t)qword_26AEC3C90);
    id v29 = a2;
    unint64_t v22 = sub_22D2BC380();
    os_log_type_t v23 = sub_22D2BD080();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v32 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v26 = sub_22D0C60F8();
      sub_22D0A4D24(v26, v27, &v32);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v22, v23, "%s finished successfully", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v25, -1, -1);
      MEMORY[0x230F7BDF0](v24, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_22D0C6A58(uint64_t *a1, void *a2, uint64_t (*a3)(uint64_t, void))
{
  uint64_t v5 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22D2BC390();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
  id v7 = a2;
  id v8 = sub_22D2BC380();
  os_log_type_t v9 = sub_22D2BD050();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v15 = v11;
    *(_DWORD *)id v10 = 136315138;
    uint64_t v12 = sub_22D0C60F8();
    sub_22D0A4D24(v12, v13, &v15);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v8, v9, "%s received a parsing result", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v11, -1, -1);
    MEMORY[0x230F7BDF0](v10, -1, -1);
  }
  else
  {
  }
  return a3(v5, 0);
}

void sub_22D0C6D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_22D2BB9B0();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_22D0C6DB0()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22D0C6DE8(uint64_t a1, uint64_t a2)
{
  sub_22D0C6D04(a1, a2, *(void *)(v2 + 16));
}

void sub_22D0C6DF4(void **a1)
{
  sub_22D0C6600(a1, *(void **)(v1 + 16), *(void (**)(void, id))(v1 + 24));
}

uint64_t objectdestroy_7Tm()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22D0C6E44(uint64_t *a1)
{
  return sub_22D0C6A58(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t, void))(v1 + 24));
}

void sub_22D0C6E50()
{
  if (!qword_26853F038)
  {
    sub_22D0C6EC0();
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853F038);
    }
  }
}

unint64_t sub_22D0C6EC0()
{
  unint64_t result = qword_26853F040;
  if (!qword_26853F040)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26853F040);
  }
  return result;
}

unint64_t sub_22D0C6F00()
{
  unint64_t result = qword_26853F050;
  if (!qword_26853F050)
  {
    sub_22D0C6E50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F050);
  }
  return result;
}

uint64_t sub_22D0C6F58@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v46 = a2;
  uint64_t v53 = a3;
  sub_22D02FCD0();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D02FE0C();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  MEMORY[0x270FA5388](v6);
  id v48 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D02DA2C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDEA0];
  sub_22D0913E0(0, (unint64_t *)&qword_26853DF10, MEMORY[0x263EFDEA0]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v45 - v17;
  uint64_t v19 = *a1;
  v55[0] = v19;
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_22D2BC6B0();
  sub_22CFF49FC();
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_22D091458((unint64_t *)&qword_26853DF18, (unint64_t *)&qword_26853DF10, v13);
  uint64_t v20 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v21 = v19 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_22CFF4B00(v21, (uint64_t)v55);
  uint64_t v22 = v56;
  uint64_t v23 = v57;
  __swift_project_boxed_opaque_existential_1(v55, v56);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  uint64_t v25 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  swift_bridgeObjectRelease();
  if (v25)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_22D2BC390();
    __swift_project_value_buffer(v26, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    unint64_t v27 = sub_22D2BC380();
    os_log_type_t v28 = sub_22D2BD050();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)id v29 = 136315138;
      v55[0] = v30;
      sub_22D2BBC90();
      sub_22D0C771C((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v31 = sub_22D2BD630();
      uint64_t v54 = sub_22D0A4D24(v31, v32, v55);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v27, v28, "No search required. DocRef already exists. Account: %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v30, -1, -1);
      MEMORY[0x230F7BDF0](v29, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    v55[0] = v20;
    unint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(0, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v44);
    uint64_t v42 = sub_22D2BC720();
    uint64_t result = swift_release();
  }
  else
  {
    v55[0] = v20;
    id v33 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(0, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    sub_22D02FD9C();
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v33);
    uint64_t v34 = v47;
    sub_22D2BC7F0();
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v46;
    *(void *)(v35 + 16) = v46;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_22D0C83E0;
    *(void *)(v37 + 24) = v35;
    id v38 = v36;
    sub_22D2BC5D0();
    sub_22D0C771C(&qword_26853DF48, (void (*)(uint64_t))sub_22D02FCD0);
    unint64_t v39 = v48;
    uint64_t v40 = v50;
    sub_22D2BC830();
    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v40);
    sub_22D0C771C(&qword_26853DF58, (void (*)(uint64_t))sub_22D02FE0C);
    uint64_t v41 = v52;
    uint64_t v42 = sub_22D2BC720();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v39, v41);
  }
  uint64_t *v53 = v42;
  return result;
}

uint64_t sub_22D0C771C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0C7764@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22D2BC390();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  uint64_t v7 = sub_22D2BC380();
  os_log_type_t v8 = sub_22D2BD050();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v19[0] = v10;
    uint64_t v22 = a2;
    sub_22D2BBC90();
    sub_22D0C771C((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v11 = sub_22D2BD630();
    sub_22D0A4D24(v11, v12, v19);
    a2 = v22;
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v7, v8, "Preparing search request. Account: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v10, -1, -1);
    unint64_t v13 = v9;
    uint64_t v3 = v2;
    MEMORY[0x230F7BDF0](v13, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = v5 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_22CFF4B00(v14, (uint64_t)v19);
  uint64_t v15 = v20;
  uint64_t v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  sub_22D1DA748(v15, v16, a2);
  if (!v3)
  {
    sub_22D02FD9C();
    *(void *)(a2 + *(int *)(v17 + 48)) = v5;
    swift_retain();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_22D0C7A08(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v30 = a3;
  uint64_t v5 = sub_22D2BB5B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  sub_22D030340();
  uint64_t v31 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0C8420(0, &qword_26853F060, (void (*)(uint64_t))sub_22D0C84BC);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  uint64_t v35 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v29 - v14;
  sub_22D0C8420(0, &qword_26853F070, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v32 = v16;
  uint64_t v33 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v36 = sub_22D2B2614(a1, a2, 3, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v20, (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_22D0307A8;
  *(void *)(v22 + 24) = v21;
  sub_22D030624(0, (unint64_t *)&qword_26853DF78, (unint64_t *)&qword_26853DF80, (unint64_t *)&qword_26853DF88);
  sub_22D0303F4(0, &qword_26853DF90, (unint64_t *)&qword_26853DF98);
  sub_22D0304B0();
  sub_22D2BC7F0();
  swift_release();
  swift_release();
  sub_22D0C771C(&qword_26853DFC0, (void (*)(uint64_t))sub_22D030340);
  uint64_t v23 = v31;
  uint64_t v24 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  uint64_t v36 = v24;
  sub_22D030624(0, &qword_26853DFB0, &qword_26853DF90, (unint64_t *)&qword_26853DF98);
  sub_22D0C84BC();
  sub_22D0306A0();
  sub_22D2BC7F0();
  swift_release();
  type metadata accessor for ClinicalSharingSyncContext();
  uint64_t v25 = v34;
  sub_22D2BC4F0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v25);
  sub_22D0C85B4();
  uint64_t v26 = v32;
  uint64_t v27 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v26);
  return v27;
}

uint64_t sub_22D0C7F04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 24);
  sub_22D2BB600();
  swift_allocObject();
  sub_22D2BB5F0();
  sub_22D0C9EC4();
  sub_22D2BB5E0();
  uint64_t result = swift_release();
  if (!v2)
  {
    *a2 = v6;
    a2[1] = v4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_22D0C7FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (a1)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_22D0C9CD8(v4, 0xD000000000000011, 0x800000022D2D77A0);
    swift_bridgeObjectRelease();
    v20[0] = v5;
    swift_bridgeObjectRetain();
    sub_22D0C8628(v20);
    swift_bridgeObjectRelease();
    if (*(void *)(v20[0] + 16))
    {
      uint64_t v3 = *(void *)(v20[0] + 32);
      uint64_t v6 = *(void *)(v20[0] + 40);
      uint64_t v7 = *(void *)(v20[0] + 72);
      uint64_t v8 = *(void *)(v20[0] + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22D0C9E9C(v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_22D0C9EB0(v7, v8);
      goto LABEL_6;
    }
    swift_release();
    uint64_t v3 = 0;
  }
  uint64_t v6 = 0;
LABEL_6:
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_22D2BC390();
  __swift_project_value_buffer(v9, (uint64_t)qword_26AEC3C90);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v10 = sub_22D2BC380();
  os_log_type_t v11 = sub_22D2BD050();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_22D2BBC90();
    sub_22D0C771C((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v14 = sub_22D2BD630();
    v20[0] = sub_22D0A4D24(v14, v15, &v21);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v20[0] = v3;
    v20[1] = v6;
    sub_22CFFA100();
    swift_bridgeObjectRetain();
    sub_22D2BD680();
    id v16 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v17 = sub_22D2BCC30();
    v20[0] = sub_22D0A4D24(v17, v18, &v21);
    sub_22D2BD220();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v10, v11, "Received search response. Account: %s ResourceID: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v13, -1, -1);
    MEMORY[0x230F7BDF0](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_22D0BF230(v3, v6);
  swift_retain();
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_22D0C8378@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22D0C7FB8(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_22D0C83A8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D0C83E0(uint64_t a1, uint64_t a2)
{
  return sub_22D0C7A08(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_22D0C83E8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D0C8420(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_22D030624(255, &qword_26853DFB0, &qword_26853DF90, (unint64_t *)&qword_26853DF98);
    a3(255);
    sub_22D0306A0();
    unint64_t v5 = sub_22D2BC500();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_22D0C84BC()
{
  if (!qword_26853F068)
  {
    type metadata accessor for ClinicalSharingSyncContext();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853F068);
    }
  }
}

uint64_t sub_22D0C8524()
{
  uint64_t v1 = sub_22D2BB5B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

unint64_t sub_22D0C85B4()
{
  unint64_t result = qword_26853F078;
  if (!qword_26853F078)
  {
    sub_22D0C8420(255, &qword_26853F070, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F078);
  }
  return result;
}

uint64_t sub_22D0C8628(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D237C3C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_22D0C8694(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_22D0C8694(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_22D2BD620();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_165;
    }
    if (v3) {
      return sub_22D0C931C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_173;
  }
  uint64_t v136 = v3;
  uint64_t v131 = result;
  uint64_t v139 = v1;
  char v129 = a1;
  if (v3 < 2)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v138 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
LABEL_131:
      uint64_t v133 = v7;
      if (v11 >= 2)
      {
        uint64_t v122 = *v129;
        do
        {
          unint64_t v123 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_160;
          }
          if (!v122) {
            goto LABEL_172;
          }
          uint64_t v124 = *(void *)&v9[16 * v123 + 32];
          uint64_t v125 = *(void *)&v9[16 * v11 + 24];
          sub_22D0C9618((char *)(v122 + 56 * v124), (char *)(v122 + 56 * *(void *)&v9[16 * v11 + 16]), v122 + 56 * v125, v138);
          if (v139) {
            goto LABEL_128;
          }
          if (v125 < v124) {
            goto LABEL_161;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_22D237C00((uint64_t)v9);
          }
          if (v123 >= *((void *)v9 + 2)) {
            goto LABEL_162;
          }
          uint64_t v126 = &v9[16 * v123 + 32];
          *(void *)uint64_t v126 = v124;
          *((void *)v126 + 1) = v125;
          unint64_t v127 = *((void *)v9 + 2);
          if (v11 > v127) {
            goto LABEL_163;
          }
          memmove(&v9[16 * v11 + 16], &v9[16 * v11 + 32], 16 * (v127 - v11));
          *((void *)v9 + 2) = v127 - 1;
          unint64_t v11 = v127 - 1;
        }
        while (v127 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v133 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_22D2BCE40();
    *(void *)(v7 + 16) = v6;
    uint64_t v138 = (char *)(v7 + 32);
  }
  uint64_t v133 = v7;
  uint64_t v8 = 0;
  uint64_t v130 = *a1 + 80;
  uint64_t v140 = *a1;
  uint64_t v128 = *a1 - 56;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  uint64_t v10 = v136;
  while (2)
  {
    uint64_t v12 = v8;
    uint64_t v13 = v8 + 1;
    if (v8 + 1 >= v10)
    {
      uint64_t v22 = v140;
      goto LABEL_54;
    }
    uint64_t v14 = v140 + 56 * v13;
    uint64_t v15 = *(void *)(v14 + 40);
    unint64_t v16 = *(void *)(v14 + 48);
    uint64_t v17 = v140 + 56 * v8;
    uint64_t v18 = *(void *)(v17 + 40);
    unint64_t v19 = *(void *)(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22D0C9E9C(v15, v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22D0C9E9C(v18, v19);
    if (v16 >= 2)
    {
      sub_22D0C9E9C(v15, v16);
      uint64_t v20 = v15;
      unint64_t v21 = v16;
    }
    else
    {
      sub_22D0C9EB0(v15, v16);
      uint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
    }
    uint64_t v135 = v12;
    if (v19 >= 2)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = v18;
      unint64_t v24 = v19;
    }
    else
    {
      sub_22D0C9EB0(v18, v19);
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
    }
    if (v23 == v20 && v24 == v21) {
      int v144 = 0;
    }
    else {
      int v144 = sub_22D2BD660();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22D0C9EB0(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22D0C9EB0(v15, v16);
    uint64_t v12 = v135;
    uint64_t v13 = v135 + 2;
    if (v135 + 2 >= v136) {
      goto LABEL_46;
    }
    uint64_t v26 = (void *)(v130 + 56 * v135);
    while (1)
    {
      uint64_t v141 = v13;
      uint64_t v27 = v26[9];
      unint64_t v28 = v26[10];
      uint64_t v30 = v26[2];
      unint64_t v29 = v26[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22D0C9E9C(v27, v28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22D0C9E9C(v30, v29);
      if (v28 >= 2)
      {
        sub_22D0C9E9C(v27, v28);
        uint64_t v31 = v27;
        unint64_t v32 = v28;
      }
      else
      {
        sub_22D0C9EB0(v27, v28);
        uint64_t v31 = 0;
        unint64_t v32 = 0xE000000000000000;
      }
      if (v29 >= 2)
      {
        swift_bridgeObjectRetain();
        unint64_t v33 = v29;
        if (v30 != v31) {
          goto LABEL_40;
        }
      }
      else
      {
        sub_22D0C9EB0(v30, v29);
        unint64_t v33 = 0xE000000000000000;
        if (v31) {
          goto LABEL_40;
        }
      }
      if (v33 == v32)
      {
        int v34 = 0;
        goto LABEL_41;
      }
LABEL_40:
      int v34 = sub_22D2BD660();
LABEL_41:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22D0C9EB0(v30, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22D0C9EB0(v27, v28);
      if ((v144 ^ v34)) {
        break;
      }
      uint64_t v13 = v141 + 1;
      v26 += 7;
      if (v136 == v141 + 1)
      {
        uint64_t v13 = v136;
        goto LABEL_45;
      }
    }
    uint64_t v13 = v141;
LABEL_45:
    uint64_t v12 = v135;
LABEL_46:
    uint64_t v22 = v140;
    if (v144)
    {
      if (v13 < v12) {
        goto LABEL_166;
      }
      if (v12 < v13)
      {
        uint64_t v35 = 56 * v13;
        uint64_t v36 = v13;
        uint64_t v37 = v12;
        uint64_t v38 = 56 * v12;
        do
        {
          if (v37 != --v36)
          {
            if (!v140) {
              goto LABEL_171;
            }
            uint64_t v39 = v140 + v38;
            long long v40 = *(_OWORD *)(v140 + v38);
            uint64_t v41 = v140 + v35;
            uint64_t v42 = *(void *)(v140 + v38 + 16);
            uint64_t v43 = *(void *)(v140 + v38 + 24);
            uint64_t v44 = *(void *)(v140 + v38 + 48);
            long long v45 = *(_OWORD *)(v140 + v38 + 32);
            long long v46 = *(_OWORD *)(v140 + v35 - 40);
            long long v47 = *(_OWORD *)(v140 + v35 - 24);
            long long v48 = *(_OWORD *)(v140 + v35 - 56);
            *(void *)(v39 + 48) = *(void *)(v140 + v35 - 8);
            *(_OWORD *)(v39 + 16) = v46;
            *(_OWORD *)(v39 + 32) = v47;
            *(_OWORD *)uint64_t v39 = v48;
            *(_OWORD *)(v41 - 56) = v40;
            *(void *)(v41 - 40) = v42;
            *(void *)(v41 - 32) = v43;
            *(_OWORD *)(v41 - 24) = v45;
            *(void *)(v41 - 8) = v44;
          }
          ++v37;
          v35 -= 56;
          v38 += 56;
        }
        while (v37 < v36);
      }
    }
LABEL_54:
    if (v13 >= v136) {
      goto LABEL_81;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_164;
    }
    if (v13 - v12 >= v131) {
      goto LABEL_81;
    }
    if (__OFADD__(v12, v131)) {
      goto LABEL_167;
    }
    if (v12 + v131 >= v136) {
      uint64_t v49 = v136;
    }
    else {
      uint64_t v49 = v12 + v131;
    }
    if (v49 >= v12)
    {
      if (v13 == v49) {
        goto LABEL_81;
      }
      uint64_t v134 = v49;
      uint64_t v132 = v9;
      uint64_t v50 = v128 + 56 * v13;
      while (2)
      {
        uint64_t v52 = v22 + 56 * v13;
        uint64_t v53 = *(void *)(v52 + 40);
        unint64_t v54 = *(void *)(v52 + 48);
        uint64_t v55 = v12;
        uint64_t v137 = v50;
        uint64_t v142 = v13;
        while (2)
        {
          uint64_t v56 = v53;
          uint64_t v58 = *(void *)(v50 + 40);
          unint64_t v57 = *(void *)(v50 + 48);
          uint64_t v145 = v55;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22D0C9E9C(v56, v54);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v59 = v58;
          sub_22D0C9E9C(v58, v57);
          if (v54 >= 2)
          {
            sub_22D0C9E9C(v56, v54);
            uint64_t v60 = v56;
            unint64_t v61 = v54;
          }
          else
          {
            sub_22D0C9EB0(v56, v54);
            uint64_t v60 = 0;
            unint64_t v61 = 0xE000000000000000;
          }
          if (v57 >= 2)
          {
            swift_bridgeObjectRetain();
            unint64_t v62 = v57;
            if (v59 == v60) {
              goto LABEL_75;
            }
            goto LABEL_76;
          }
          sub_22D0C9EB0(v59, v57);
          unint64_t v62 = 0xE000000000000000;
          if (v60) {
            goto LABEL_76;
          }
LABEL_75:
          if (v62 != v61)
          {
LABEL_76:
            char v63 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22D0C9EB0(v59, v57);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22D0C9EB0(v56, v54);
            if ((v63 & 1) == 0) {
              goto LABEL_65;
            }
            uint64_t v22 = v140;
            uint64_t v51 = v142;
            if (!v140) {
              goto LABEL_169;
            }
            uint64_t v64 = v50 + 56;
            uint64_t v66 = *(void *)(v50 + 64);
            uint64_t v65 = *(void *)(v50 + 72);
            uint64_t v68 = *(void *)(v50 + 80);
            uint64_t v67 = *(void *)(v50 + 88);
            uint64_t v53 = *(void *)(v50 + 96);
            unint64_t v54 = *(void *)(v50 + 104);
            long long v69 = *(_OWORD *)(v50 + 16);
            uint64_t v71 = *(void *)(v50 + 48);
            uint64_t v70 = *(void *)(v50 + 56);
            *(_OWORD *)(v50 + 56) = *(_OWORD *)v50;
            *(_OWORD *)(v50 + 72) = v69;
            *(_OWORD *)(v50 + 88) = *(_OWORD *)(v50 + 32);
            *(void *)uint64_t v50 = v70;
            *(void *)(v50 + 8) = v66;
            *(void *)(v50 + 16) = v65;
            *(void *)(v50 + 24) = v68;
            *(void *)(v50 + 32) = v67;
            *(void *)(v50 + 40) = v53;
            *(void *)(v50 + 48) = v54;
            v50 -= 56;
            uint64_t v55 = v145 + 1;
            *(void *)(v64 + 48) = v71;
            if (v142 == v145 + 1) {
              goto LABEL_66;
            }
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_22D0C9EB0(v59, v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22D0C9EB0(v56, v54);
LABEL_65:
        uint64_t v22 = v140;
        uint64_t v51 = v142;
LABEL_66:
        uint64_t v13 = v51 + 1;
        uint64_t v50 = v137 + 56;
        if (v13 != v134) {
          continue;
        }
        break;
      }
      uint64_t v13 = v134;
      uint64_t v9 = v132;
LABEL_81:
      if (v13 < v12) {
        goto LABEL_159;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_22D23775C(0, *((void *)v9 + 2) + 1, 1, v9);
      }
      unint64_t v73 = *((void *)v9 + 2);
      unint64_t v72 = *((void *)v9 + 3);
      unint64_t v11 = v73 + 1;
      if (v73 >= v72 >> 1) {
        uint64_t v9 = sub_22D23775C((char *)(v72 > 1), v73 + 1, 1, v9);
      }
      *((void *)v9 + 2) = v11;
      id v74 = v9 + 32;
      uint64_t v75 = &v9[16 * v73 + 32];
      *(void *)uint64_t v75 = v12;
      *((void *)v75 + 1) = v13;
      uint64_t v143 = v13;
      if (v73)
      {
        while (2)
        {
          unint64_t v76 = v11 - 1;
          if (v11 >= 4)
          {
            uint64_t v81 = &v74[16 * v11];
            uint64_t v82 = *((void *)v81 - 8);
            uint64_t v83 = *((void *)v81 - 7);
            BOOL v87 = __OFSUB__(v83, v82);
            uint64_t v84 = v83 - v82;
            if (v87) {
              goto LABEL_148;
            }
            uint64_t v86 = *((void *)v81 - 6);
            uint64_t v85 = *((void *)v81 - 5);
            BOOL v87 = __OFSUB__(v85, v86);
            uint64_t v79 = v85 - v86;
            char v80 = v87;
            if (v87) {
              goto LABEL_149;
            }
            unint64_t v88 = v11 - 2;
            int v89 = &v74[16 * v11 - 32];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v87 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v87) {
              goto LABEL_151;
            }
            BOOL v87 = __OFADD__(v79, v92);
            uint64_t v93 = v79 + v92;
            if (v87) {
              goto LABEL_154;
            }
            if (v93 >= v84)
            {
              v111 = &v74[16 * v76];
              uint64_t v113 = *(void *)v111;
              uint64_t v112 = *((void *)v111 + 1);
              BOOL v87 = __OFSUB__(v112, v113);
              uint64_t v114 = v112 - v113;
              if (v87) {
                goto LABEL_158;
              }
              BOOL v104 = v79 < v114;
            }
            else
            {
LABEL_100:
              if (v80) {
                goto LABEL_150;
              }
              unint64_t v88 = v11 - 2;
              id v94 = &v74[16 * v11 - 32];
              uint64_t v96 = *(void *)v94;
              uint64_t v95 = *((void *)v94 + 1);
              BOOL v97 = __OFSUB__(v95, v96);
              uint64_t v98 = v95 - v96;
              char v99 = v97;
              if (v97) {
                goto LABEL_153;
              }
              id v100 = &v74[16 * v76];
              uint64_t v102 = *(void *)v100;
              uint64_t v101 = *((void *)v100 + 1);
              BOOL v87 = __OFSUB__(v101, v102);
              uint64_t v103 = v101 - v102;
              if (v87) {
                goto LABEL_156;
              }
              if (__OFADD__(v98, v103)) {
                goto LABEL_157;
              }
              if (v98 + v103 < v79) {
                goto LABEL_112;
              }
              BOOL v104 = v79 < v103;
            }
            if (v104) {
              unint64_t v76 = v88;
            }
          }
          else
          {
            if (v11 == 3)
            {
              uint64_t v78 = *((void *)v9 + 4);
              uint64_t v77 = *((void *)v9 + 5);
              BOOL v87 = __OFSUB__(v77, v78);
              uint64_t v79 = v77 - v78;
              char v80 = v87;
              goto LABEL_100;
            }
            uint64_t v105 = *((void *)v9 + 4);
            uint64_t v106 = *((void *)v9 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
LABEL_112:
            if (v99) {
              goto LABEL_152;
            }
            int v107 = &v74[16 * v76];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v87 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v87) {
              goto LABEL_155;
            }
            if (v110 < v98) {
              goto LABEL_14;
            }
          }
          unint64_t v115 = v76 - 1;
          if (v76 - 1 >= v11)
          {
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
            goto LABEL_168;
          }
          if (!v140) {
            goto LABEL_170;
          }
          uint64_t v116 = v9;
          uint64_t v117 = &v74[16 * v115];
          uint64_t v118 = *(void *)v117;
          id v119 = &v74[16 * v76];
          uint64_t v120 = *((void *)v119 + 1);
          sub_22D0C9618((char *)(v140 + 56 * *(void *)v117), (char *)(v140 + 56 * *(void *)v119), v140 + 56 * v120, v138);
          if (v139)
          {
LABEL_128:
            swift_bridgeObjectRelease();
            *(void *)(v133 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v120 < v118) {
            goto LABEL_145;
          }
          if (v76 > *((void *)v116 + 2)) {
            goto LABEL_146;
          }
          *(void *)uint64_t v117 = v118;
          *(void *)&v74[16 * v115 + 8] = v120;
          unint64_t v121 = *((void *)v116 + 2);
          if (v76 >= v121) {
            goto LABEL_147;
          }
          uint64_t v9 = v116;
          uint64_t v139 = 0;
          unint64_t v11 = v121 - 1;
          memmove(&v74[16 * v76], v119 + 16, 16 * (v121 - 1 - v76));
          *((void *)v116 + 2) = v121 - 1;
          if (v121 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }
      unint64_t v11 = 1;
LABEL_14:
      uint64_t v10 = v136;
      uint64_t v8 = v143;
      uint64_t v7 = v133;
      if (v143 >= v136) {
        goto LABEL_131;
      }
      continue;
    }
    break;
  }
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  uint64_t result = sub_22D2BD450();
  __break(1u);
  return result;
}

uint64_t sub_22D0C931C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = result;
  if (a3 != a2)
  {
    uint64_t v27 = *a4;
    uint64_t v4 = *a4 + 56 * a3 - 56;
LABEL_6:
    uint64_t v6 = v27 + 56 * a3;
    uint64_t v8 = *(void *)(v6 + 40);
    unint64_t v7 = *(void *)(v6 + 48);
    uint64_t v9 = v25;
    uint64_t v26 = v4;
    uint64_t v28 = a3;
    while (1)
    {
      uint64_t v11 = *(void *)(v4 + 40);
      unint64_t v10 = *(void *)(v4 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22D0C9E9C(v8, v7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22D0C9E9C(v11, v10);
      if (v7 >= 2)
      {
        sub_22D0C9E9C(v8, v7);
        uint64_t v12 = v8;
        unint64_t v13 = v7;
      }
      else
      {
        sub_22D0C9EB0(v8, v7);
        uint64_t v12 = 0;
        unint64_t v13 = 0xE000000000000000;
      }
      uint64_t v29 = v11;
      if (v10 >= 2)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = v11;
        unint64_t v14 = v10;
        if (v15 != v12) {
          goto LABEL_15;
        }
      }
      else
      {
        sub_22D0C9EB0(v11, v10);
        unint64_t v14 = 0xE000000000000000;
        if (v12) {
          goto LABEL_15;
        }
      }
      if (v14 == v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_22D0C9EB0(v29, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = sub_22D0C9EB0(v8, v7);
        uint64_t v5 = v28;
LABEL_5:
        a3 = v5 + 1;
        uint64_t v4 = v26 + 56;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_6;
      }
LABEL_15:
      char v16 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22D0C9EB0(v29, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_22D0C9EB0(v8, v7);
      uint64_t v5 = v28;
      if ((v16 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v27)
      {
        __break(1u);
        return result;
      }
      uint64_t v17 = v4 + 56;
      uint64_t v19 = *(void *)(v4 + 64);
      uint64_t v18 = *(void *)(v4 + 72);
      uint64_t v20 = *(void *)(v4 + 80);
      uint64_t result = *(void *)(v4 + 88);
      uint64_t v8 = *(void *)(v4 + 96);
      unint64_t v7 = *(void *)(v4 + 104);
      long long v21 = *(_OWORD *)(v4 + 16);
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v22 = *(void *)(v4 + 56);
      *(_OWORD *)(v4 + 56) = *(_OWORD *)v4;
      *(_OWORD *)(v4 + 72) = v21;
      *(_OWORD *)(v4 + 88) = *(_OWORD *)(v4 + 32);
      *(void *)uint64_t v4 = v22;
      *(void *)(v4 + 8) = v19;
      *(void *)(v4 + 16) = v18;
      *(void *)(v4 + 24) = v20;
      *(void *)(v4 + 32) = result;
      *(void *)(v4 + 40) = v8;
      *(void *)(v4 + 48) = v7;
      v4 -= 56;
      ++v9;
      *(void *)(v17 + 48) = v23;
      if (v28 == v9) {
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_22D0C9618(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 56;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 56;
  uint64_t v58 = __src;
  unint64_t v57 = __dst;
  if (v8 >= v10)
  {
    if (v9 >= -55)
    {
      if (__dst != a2 || &a2[56 * v10] <= __dst) {
        memmove(__dst, a2, 56 * v10);
      }
      uint64_t v26 = &v4[56 * v10];
      uint64_t v56 = v26;
      uint64_t v58 = v5;
      if (v6 < v5 && v9 >= 56)
      {
        unint64_t v27 = a3 - 56;
        uint64_t v55 = v6;
        do
        {
          uint64_t v28 = *((void *)v26 - 2);
          unint64_t v29 = *((void *)v26 - 1);
          uint64_t v31 = *((void *)v5 - 2);
          unint64_t v30 = *((void *)v5 - 1);
          uint64_t v53 = v28;
          unint64_t v49 = (unint64_t)v26;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22D0C9E9C(v28, v29);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22D0C9E9C(v31, v30);
          if (v29 >= 2)
          {
            sub_22D0C9E9C(v28, v29);
            unint64_t v32 = v29;
          }
          else
          {
            sub_22D0C9EB0(v28, v29);
            uint64_t v28 = 0;
            unint64_t v32 = 0xE000000000000000;
          }
          uint64_t v51 = v31;
          if (v30 >= 2)
          {
            swift_bridgeObjectRetain();
            uint64_t v33 = v31;
            unint64_t v34 = v30;
          }
          else
          {
            sub_22D0C9EB0(v31, v30);
            uint64_t v33 = 0;
            unint64_t v34 = 0xE000000000000000;
          }
          uint64_t v52 = v5;
          if (v33 == v28 && v34 == v32) {
            char v35 = 0;
          }
          else {
            char v35 = sub_22D2BD660();
          }
          uint64_t v36 = (_OWORD *)(v27 + 56);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22D0C9EB0(v51, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22D0C9EB0(v53, v29);
          if (v35)
          {
            uint64_t v37 = (char *)v52 - 56;
            unint64_t v38 = (unint64_t)v55;
            uint64_t v26 = (char *)v49;
            if (v36 != v52 || v27 >= (unint64_t)v52)
            {
              long long v39 = *(_OWORD *)v37;
              long long v40 = *(_OWORD *)((char *)v52 - 40);
              long long v41 = *(_OWORD *)((char *)v52 - 24);
              *(void *)(v27 + 48) = *((void *)v52 - 1);
              *(_OWORD *)(v27 + 16) = v40;
              *(_OWORD *)(v27 + 32) = v41;
              *(_OWORD *)unint64_t v27 = v39;
            }
            uint64_t v58 = (char *)v52 - 56;
            if (v49 <= (unint64_t)v4) {
              break;
            }
          }
          else
          {
            uint64_t v42 = (char *)(v49 - 56);
            uint64_t v56 = (char *)(v49 - 56);
            unint64_t v38 = (unint64_t)v55;
            if ((unint64_t)v36 < v49 || v27 >= v49 || v36 != (_OWORD *)v49)
            {
              long long v43 = *(_OWORD *)v42;
              long long v44 = *(_OWORD *)(v49 - 40);
              long long v45 = *(_OWORD *)(v49 - 24);
              *(void *)(v27 + 48) = *(void *)(v49 - 8);
              *(_OWORD *)(v27 + 16) = v44;
              *(_OWORD *)(v27 + 32) = v45;
              *(_OWORD *)unint64_t v27 = v43;
            }
            uint64_t v37 = (char *)v52;
            uint64_t v26 = (char *)(v49 - 56);
            if (v42 <= v4) {
              break;
            }
          }
          v27 -= 56;
          uint64_t v5 = v37;
        }
        while ((unint64_t)v37 > v38);
      }
LABEL_59:
      sub_22D2379D0((void **)&v58, &v57, &v56);
      return 1;
    }
  }
  else if (v7 >= -55)
  {
    if (__dst != __src || &__src[56 * v8] <= __dst) {
      memmove(__dst, __src, 56 * v8);
    }
    long long v48 = &v4[56 * v8];
    uint64_t v56 = v48;
    if ((unint64_t)v5 < a3 && v7 >= 56)
    {
      uint64_t v11 = v4;
      while (1)
      {
        long long v47 = v4;
        unint64_t v54 = v6;
        uint64_t v13 = *((void *)v5 + 5);
        unint64_t v12 = *((void *)v5 + 6);
        uint64_t v14 = *((void *)v11 + 5);
        unint64_t v15 = *((void *)v11 + 6);
        if (v12 >= 2)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22D0C9E9C(v13, v12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22D0C9E9C(v14, v15);
          sub_22D0C9E9C(v13, v12);
          uint64_t v16 = v13;
          unint64_t v17 = v12;
          if (v15 >= 2)
          {
LABEL_11:
            swift_bridgeObjectRetain();
            unint64_t v18 = v15;
            if (v14 != v16) {
              goto LABEL_17;
            }
            goto LABEL_15;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22D0C9E9C(v13, v12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22D0C9E9C(v14, v15);
          sub_22D0C9EB0(v13, v12);
          uint64_t v16 = 0;
          unint64_t v17 = 0xE000000000000000;
          if (v15 >= 2) {
            goto LABEL_11;
          }
        }
        sub_22D0C9EB0(v14, v15);
        unint64_t v18 = 0xE000000000000000;
        if (v16) {
          goto LABEL_17;
        }
LABEL_15:
        if (v18 == v17)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          sub_22D0C9EB0(v14, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22D0C9EB0(v13, v12);
          goto LABEL_21;
        }
LABEL_17:
        char v19 = sub_22D2BD660();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22D0C9EB0(v14, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22D0C9EB0(v13, v12);
        if (v19)
        {
          uint64_t v20 = v5 + 56;
          long long v21 = v54;
          uint64_t v22 = v5;
          if (v54 == v5)
          {
            uint64_t v4 = v47;
            if (v54 < v20) {
              goto LABEL_27;
            }
          }
          else
          {
            uint64_t v4 = v47;
          }
          goto LABEL_26;
        }
LABEL_21:
        uint64_t v4 = v11 + 56;
        long long v21 = v54;
        uint64_t v22 = v11;
        uint64_t v20 = v5;
        if (v54 == v11)
        {
          v11 += 56;
          if (v54 < v4) {
            goto LABEL_27;
          }
        }
        else
        {
          v11 += 56;
        }
LABEL_26:
        long long v23 = *(_OWORD *)v22;
        long long v24 = *((_OWORD *)v22 + 1);
        long long v25 = *((_OWORD *)v22 + 2);
        *((void *)v21 + 6) = *((void *)v22 + 6);
        *((_OWORD *)v21 + 1) = v24;
        *((_OWORD *)v21 + 2) = v25;
        *(_OWORD *)long long v21 = v23;
LABEL_27:
        uint64_t v6 = v21 + 56;
        if (v11 < v48)
        {
          uint64_t v5 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        unint64_t v57 = v4;
        uint64_t v58 = v6;
        goto LABEL_59;
      }
    }
    goto LABEL_59;
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D0C9CD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = result + 80;
  uint64_t v26 = -(uint64_t)v4;
  unint64_t v21 = v4;
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v20 = result + 80;
LABEL_2:
  if (v3 > v4) {
    unint64_t v4 = v3;
  }
  uint64_t v27 = -(uint64_t)v4;
  unint64_t v6 = v3 + 1;
  int64_t v7 = (uint64_t *)(v5 + 56 * v3);
  while (1)
  {
    if (v26 + v6 == 1) {
      return v22;
    }
    unint64_t v3 = v6++;
    if (v27 + v6 == 2) {
      break;
    }
    uint64_t v8 = *(v7 - 5);
    uint64_t v25 = *(v7 - 6);
    uint64_t v10 = *(v7 - 4);
    uint64_t v9 = *(v7 - 3);
    uint64_t v11 = *(v7 - 2);
    uint64_t v12 = *(v7 - 1);
    uint64_t v13 = *v7;
    if (v10 == a2 && v9 == a3)
    {
      uint64_t v10 = a2;
      uint64_t v9 = a3;
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22D0C9E9C(v12, v13);
      uint64_t v15 = v22;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_22D24BC2C(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v15 = v22;
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      unint64_t v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        uint64_t result = sub_22D24BC2C(v16 > 1, v17 + 1, 1);
        unint64_t v18 = v17 + 1;
        uint64_t v15 = v22;
      }
      *(void *)(v15 + 16) = v18;
      uint64_t v22 = v15;
      char v19 = (void *)(v15 + 56 * v17);
      v19[4] = v25;
      v19[5] = v8;
      v19[6] = v10;
      v19[7] = v9;
      v19[8] = v11;
      v19[9] = v12;
      v19[10] = v13;
      uint64_t v5 = v20;
      unint64_t v4 = v21;
      goto LABEL_2;
    }
    v7 += 7;
    uint64_t result = sub_22D2BD660();
    if (result) {
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22D0C9E9C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22D0C9EB0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_22D0C9EC4()
{
  unint64_t result = qword_26853F080;
  if (!qword_26853F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F080);
  }
  return result;
}

BOOL sub_22D0C9F20(uint64_t a1, uint64_t a2)
{
  return sub_22D0CA4E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

unint64_t sub_22D0C9F44(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      id v4 = (id)a3;
      swift_bridgeObjectRetain();
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      uint64_t v8 = 91;
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      sub_22D2BCCB0();
      sub_22D0CA210();
      id v5 = v4;
      sub_22D2BCC30();
      sub_22D2BCCB0();

      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 3:
      unint64_t v7 = a3 | a2;
      if (a3 | a2 | a1)
      {
        if (a1 != 1 || v7)
        {
          if (a1 == 2 && v7 == 0) {
            unint64_t result = 0xD000000000000052;
          }
          else {
            unint64_t result = 0xD000000000000022;
          }
        }
        else
        {
          unint64_t result = 0xD000000000000042;
        }
      }
      else
      {
        unint64_t result = 0xD000000000000037;
      }
      break;
    default:
      uint64_t v8 = 0;
      swift_bridgeObjectRetain();
      sub_22D2BD310();
      sub_22D2BCCB0();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      sub_22D2BCCB0();
LABEL_4:
      unint64_t result = v8;
      break;
  }
  return result;
}

unint64_t sub_22D0CA200()
{
  return sub_22D0C9F44(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_22D0CA210()
{
  if (!qword_26853F088)
  {
    sub_22D08CD24();
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853F088);
    }
  }
}

uint64_t sub_22D0CA268(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4 && a4 != 2)
  {
    if (a4 != 1) {
      return result;
    }
    id v4 = a3;
  }
  return swift_bridgeObjectRetain();
}

void destroy for ClinicalSharingFHIRAPIError(uint64_t a1)
{
}

uint64_t initializeWithCopy for ClinicalSharingFHIRAPIError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_22D0CA268(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingFHIRAPIError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_22D0CA268(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_22D030094(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingFHIRAPIError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_22D030094(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingFHIRAPIError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingFHIRAPIError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22D0CA49C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_22D0CA4B4(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingFHIRAPIError()
{
  return &type metadata for ClinicalSharingFHIRAPIError;
}

BOOL sub_22D0CA4E0(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, unint64_t a7, char a8)
{
  switch(a4)
  {
    case 1:
      if (a8 != 1) {
        return 0;
      }
      if (!a2)
      {
        if (a6) {
          return 0;
        }
        goto LABEL_35;
      }
      if (!a6) {
        return 0;
      }
      if (a1 == a5 && a2 == a6 || (v11 = sub_22D2BD660(), BOOL result = 0, (v11 & 1) != 0))
      {
LABEL_35:
        if (!a3) {
          return !a7;
        }
        if (!a7) {
          return 0;
        }
        sub_22D08CD24();
        id v14 = (id)a3;
        id v15 = (id)a7;
        char v16 = sub_22D2BD1A0();

        return (v16 & 1) != 0;
      }
      return result;
    case 2:
      if (a8 != 2) {
        return 0;
      }
      if (a2) {
        goto LABEL_15;
      }
      if (!a6) {
        return 1;
      }
      char v10 = 2;
      goto LABEL_41;
    case 3:
      unint64_t v13 = a3 | a2;
      if (a3 | a2 | a1)
      {
        if (a1 != 1 || v13)
        {
          if (a1 != 2 || v13)
          {
            if (a8 != 3 || a5 != 3) {
              return 0;
            }
          }
          else if (a8 != 3 || a5 != 2)
          {
            return 0;
          }
        }
        else if (a8 != 3 || a5 != 1)
        {
          return 0;
        }
        if (a7 | a6) {
          return 0;
        }
      }
      else if (a8 != 3 || a7 | a6 | a5)
      {
        return 0;
      }
      return 1;
    default:
      if (a8) {
        return 0;
      }
      if (a2)
      {
LABEL_15:
        if (!a6 || (a1 != a5 || a2 != a6) && (sub_22D2BD660() & 1) == 0) {
          return 0;
        }
      }
      else if (a6)
      {
        char v10 = 0;
LABEL_41:
        sub_22D030094(a1, 0, (void *)a3, v10);
        return 0;
      }
      return 1;
  }
}

unint64_t sub_22D0CA6E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  unint64_t result = (unint64_t)objc_msgSend(v2, sel_valueType);
  if (result >= 0xC)
  {
    sub_22D2BD310();
    sub_22D2BCCB0();
    objc_msgSend(v2, sel_valueType);
    type metadata accessor for HKInspectableValueType(0);
    sub_22D2BD430();
    sub_22D2BCCB0();
    unint64_t result = sub_22D2BD460();
    __break(1u);
  }
  else
  {
    *(void *)a1 = qword_22D2C43E8[result];
    *(unsigned char *)(a1 + 8) = 1;
  }
  return result;
}

uint64_t sub_22D0CA814(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v78 = a4;
  uint64_t v83 = a3;
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v73 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D05C8D8(0);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_22D2BBC90();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v16 = v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode;
  *(_OWORD *)uint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_OWORD *)(v16 + 48) = 0u;
  *(_OWORD *)(v16 + 64) = 0u;
  *(void *)(v16 + 80) = 0;
  uint64_t v17 = v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo;
  *(_OWORD *)uint64_t v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(void *)(v17 + 32) = 0;
  uint64_t v74 = v11;
  uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v79(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync, 1, 1, v10);
  *(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error) = 0;
  uint64_t v77 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare) = 0;
  id v84 = a1;
  id v18 = objc_msgSend(a1, sel_gateway);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    sub_22D0B0DD0();
    swift_allocError();
    *(_OWORD *)uint64_t v41 = xmmword_22D2C4460;
    *(unsigned char *)(v41 + 16) = 8;
    swift_willThrow();
LABEL_8:
    uint64_t v43 = v83;

    __swift_destroy_boxed_opaque_existential_1(v43);
    goto LABEL_18;
  }
  char v19 = v18;
  uint64_t v75 = a5;
  unint64_t v76 = a2;
  id v20 = objc_msgSend(a2, sel_accessToken);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    sub_22D0B0DD0();
    swift_allocError();
    *(_OWORD *)uint64_t v42 = xmmword_22D2C4450;
    *(unsigned char *)(v42 + 16) = 8;
    swift_willThrow();

    a2 = v76;
    goto LABEL_8;
  }
  unint64_t v21 = v20;
  uint64_t v22 = sub_22D2BCBD0();
  uint64_t v24 = v23;

  uint64_t v25 = (uint64_t *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken);
  *uint64_t v25 = v22;
  v25[1] = v24;
  uint64_t v71 = v19;
  id v26 = objc_msgSend(v19, sel_externalID);
  uint64_t v27 = sub_22D2BCBD0();
  uint64_t v29 = v28;

  *(void *)(v6 + 40) = v27;
  *(void *)(v6 + 48) = v29;
  uint64_t v31 = v83;
  id v30 = v84;
  id v32 = objc_msgSend(v84, sel_identifier);
  sub_22D2BBC70();

  uint64_t v33 = *(void (**)(void))(v81 + 32);
  uint64_t v72 = v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID;
  v33();
  uint64_t v70 = v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore;
  sub_22CFF4B00(v31, v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore);
  unint64_t v34 = (uint64_t *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID);
  uint64_t v35 = v75;
  *unint64_t v34 = v78;
  v34[1] = v35;
  id v36 = objc_msgSend(v30, sel_clinicalSharingStatus);
  uint64_t v78 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus;
  *(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus) = v36;
  id v37 = objc_msgSend(v30, sel_clinicalSharingStatus);
  id v38 = objc_msgSend(v37, sel_firstSharedDate);

  if (!v38)
  {
    v79((uint64_t)v15, 1, 1, v10);
    goto LABEL_10;
  }
  long long v39 = v73;
  sub_22D2BBC00();

  uint64_t v40 = v74;
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v15, v39, v10);
  v79((uint64_t)v15, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v15, 1, v10) == 1)
  {
LABEL_10:
    sub_22D0CCDDC((uint64_t)v15, (uint64_t (*)(void))sub_22D05C8D8);
    *(unsigned char *)(v6 + v77) = 1;
    goto LABEL_11;
  }
  sub_22D0CCDDC((uint64_t)v15, (uint64_t (*)(void))sub_22D05C8D8);
LABEL_11:
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_22D2BC390();
  __swift_project_value_buffer(v44, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  long long v45 = sub_22D2BC380();
  os_log_type_t v46 = sub_22D2BD050();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    long long v48 = (void *)swift_slowAlloc();
    uint64_t v79 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_slowAlloc();
    *(void *)&long long v85 = v79;
    *(_DWORD *)uint64_t v47 = 136315394;
    sub_22D0CD1C0((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v49 = sub_22D2BD630();
    uint64_t v89 = sub_22D0A4D24(v49, v50, (uint64_t *)&v85);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2112;
    uint64_t v51 = *(void **)(v6 + v78);
    uint64_t v89 = (uint64_t)v51;
    id v52 = v51;
    uint64_t v31 = v83;
    sub_22D2BD220();
    void *v48 = v51;
    swift_release_n();
    _os_log_impl(&dword_22CFEE000, v45, v46, "ClinicalSharingSyncContext initialized. Account: %s HKClinicalSharingStatus: %@", (uint8_t *)v47, 0x16u);
    sub_22D0CD208();
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v48, -1, -1);
    uint64_t v53 = v79;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v53, -1, -1);
    MEMORY[0x230F7BDF0](v47, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  unint64_t v54 = v76;
  uint64_t v55 = v71;
  *(void *)(v6 + 16) = v71;
  id v56 = v55;
  id v57 = objc_msgSend(v54, sel_patientID);
  uint64_t v58 = (void *)sub_22D2BCBD0();
  uint64_t v59 = v54;
  uint64_t v61 = v60;

  *(void *)(v6 + 24) = v58;
  *(void *)(v6 + 32) = v61;
  id v62 = v56;
  swift_bridgeObjectRetain();
  uint64_t v63 = v80;
  sub_22D0D8D18(v62, v58, v61, (uint64_t)v88);
  if (!v63)
  {
    uint64_t v86 = &type metadata for ClinicalSharingDocumentReferenceForLookupInfo;
    BOOL v87 = &off_26E061090;
    uint64_t v65 = (_OWORD *)swift_allocObject();
    *(void *)&long long v85 = v65;

    long long v66 = v88[5];
    v65[5] = v88[4];
    v65[6] = v66;
    v65[7] = v88[6];
    long long v67 = v88[1];
    v65[1] = v88[0];
    v65[2] = v67;
    long long v68 = v88[3];
    v65[3] = v88[2];
    v65[4] = v68;
    __swift_destroy_boxed_opaque_existential_1(v31);
    sub_22CFF8C10(&v85, v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo);
    return v6;
  }

  __swift_destroy_boxed_opaque_existential_1(v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v72, v82);
  __swift_destroy_boxed_opaque_existential_1(v70);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_18:
  sub_22D057C70(*(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode), *(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8), *(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16), *(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24), *(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32), *(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 40));
  sub_22D0B82BC(*(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo), *(void *)(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo + 8));
  sub_22D0CCDDC(v6 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync, (uint64_t (*)(void))sub_22D05C8D8);

  type metadata accessor for ClinicalSharingSyncContext();
  swift_deallocPartialClassInstance();
  return v6;
}

uint64_t sub_22D0CB25C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus;
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus), sel_featureStatus) != (id)1|| objc_msgSend(*(id *)(v0 + v1), sel_userStatus) != (id)2)
  {
    return 0;
  }
  if (objc_msgSend(*(id *)(v0 + v1), sel_multiDeviceStatus) == (id)2
    || objc_msgSend(*(id *)(v0 + v1), sel_multiDeviceStatus) == (id)4)
  {
    return objc_msgSend(*(id *)(v0 + v1), sel_multiDeviceStatus) == (id)3;
  }
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo + 8);
  if (v3)
  {
    BOOL v4 = *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo) == *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID)
      && v3 == *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID + 8);
    if (!v4 && (sub_22D2BD660() & 1) == 0) {
      return objc_msgSend(*(id *)(v0 + v1), sel_multiDeviceStatus) == (id)3;
    }
  }
  return 1;
}

uint64_t sub_22D0CB348()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID;
  uint64_t v2 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo);
  sub_22D057C70(*(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode), *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8), *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16), *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24), *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32), *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 40));
  sub_22D0B82BC(*(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo), *(void *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo + 8));
  sub_22D0CCDDC(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync, (uint64_t (*)(void))sub_22D05C8D8);

  return v0;
}

uint64_t sub_22D0CB4A4()
{
  sub_22D0CB348();
  return swift_deallocClassInstance();
}

uint64_t sub_22D0CB4FC()
{
  return type metadata accessor for ClinicalSharingSyncContext();
}

uint64_t type metadata accessor for ClinicalSharingSyncContext()
{
  uint64_t result = qword_26AEC1478;
  if (!qword_26AEC1478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22D0CB550()
{
  sub_22D2BBC90();
  if (v0 <= 0x3F)
  {
    sub_22D05C8D8(319);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D0CB674(void **a1, void **a2)
{
  return sub_22D0CB680(*a1, *a2);
}

uint64_t sub_22D0CB680(void *a1, void *a2)
{
  BOOL v4 = (char *)sub_22D2BBC30();
  v211 = (void *)*((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v189 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0CCC74();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  v212 = (char *)v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D05C8D8(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)v189 - v14;
  uint64_t v16 = (void *)a1[2];
  uint64_t v17 = (void *)a2[2];
  if (v16)
  {
    if (!v17) {
      goto LABEL_47;
    }
    v210 = v4;
    sub_22D030474(0, (unint64_t *)&unk_26853F098);
    id v18 = v17;
    id v19 = v16;
    char v20 = sub_22D2BD1A0();

    if ((v20 & 1) == 0) {
      goto LABEL_47;
    }
  }
  else
  {
    v210 = v4;
    if (v17) {
      goto LABEL_47;
    }
  }
  if (a1[3] == a2[3] && a1[4] == a2[4] || (char v21 = 0, (sub_22D2BD660() & 1) != 0))
  {
    if (a1[5] == a2[5] && a1[6] == a2[6] || (char v21 = 0, (sub_22D2BD660() & 1) != 0))
    {
      if ((sub_22D2BBC60() & 1) == 0) {
        goto LABEL_47;
      }
      sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
      uint64_t v22 = *(void **)((char *)a2
                     + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus);
      id v23 = objc_retain(*(id *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus));
      id v24 = v22;
      char v25 = sub_22D2BD1A0();

      if ((v25 & 1) == 0) {
        goto LABEL_47;
      }
      if (*(void *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken) == *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken)
        && *(void *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken + 8) == *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accessToken + 8)
        || (char v21 = 0, (sub_22D2BD660() & 1) != 0))
      {
        if (*(void *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID) == *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID)
          && *(void *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID + 8) == *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID + 8)
          || (char v21 = 0, (sub_22D2BD660() & 1) != 0))
        {
          id v26 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
          uint64_t v27 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8);
          uint64_t v28 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16);
          uint64_t v29 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24);
          id v30 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32);
          uint64_t v31 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 40);
          uint64_t v32 = *(void *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 48);
          uint64_t v33 = *(void *)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 56);
          unint64_t v34 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 64);
          uint64_t v35 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 72);
          id v36 = *(char **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 80);
          id v37 = *(void **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
          uint64_t v38 = *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 8);
          uint64_t v40 = *(void **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 16);
          uint64_t v39 = *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 24);
          uint64_t v42 = *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 32);
          uint64_t v41 = *(void **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 40);
          uint64_t v44 = *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 48);
          uint64_t v43 = *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 56);
          uint64_t v46 = *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 64);
          long long v45 = *(char **)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 72);
          uint64_t v47 = *(void *)((char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode + 80);
          if (v26)
          {
            if (v37)
            {
              v259[0] = *(void *)((char *)a1
                                  + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
              v259[1] = (uint64_t)v27;
              v259[2] = (uint64_t)v28;
              v259[3] = (uint64_t)v29;
              v259[4] = (uint64_t)v30;
              v259[5] = (uint64_t)v31;
              v259[6] = v32;
              v259[7] = v33;
              v259[8] = (uint64_t)v34;
              v259[9] = (uint64_t)v35;
              v259[10] = (uint64_t)v36;
              v260[0] = (uint64_t)v37;
              v260[1] = v38;
              v189[1] = v38;
              v260[2] = (uint64_t)v40;
              v260[3] = v39;
              v260[4] = v42;
              v260[5] = (uint64_t)v41;
              v260[6] = v44;
              v260[7] = v43;
              v260[8] = v46;
              v260[9] = (uint64_t)v45;
              v207 = v45;
              v260[10] = v47;
              v194 = v27;
              v195 = v26;
              v196 = v28;
              v197 = v29;
              v198 = v30;
              v199 = v31;
              uint64_t v200 = v32;
              uint64_t v201 = v33;
              v205 = v37;
              v206 = v41;
              v208 = (char *)v44;
              uint64_t v209 = v43;
              v203 = (void *)v39;
              uint64_t v204 = v42;
              v192 = v35;
              v193 = v34;
              v202 = v40;
              v191 = v36;
              sub_22D057BD8((uint64_t)v26, (uint64_t)v27, (uint64_t)v28, (uint64_t)v29, (uint64_t)v30, (unint64_t)v31);
              sub_22D057BD8((uint64_t)v205, v38, (uint64_t)v202, (uint64_t)v203, v204, (unint64_t)v206);
              int v190 = sub_22D115B74(v259, v260);
              sub_22D057C70((uint64_t)v205, v38, (uint64_t)v202, (uint64_t)v203, v204, (unint64_t)v206);
              sub_22D057C70((uint64_t)v195, (uint64_t)v194, (uint64_t)v196, (uint64_t)v197, (uint64_t)v198, (unint64_t)v199);
              if ((v190 & 1) == 0) {
                goto LABEL_47;
              }
LABEL_26:
              uint64_t v52 = *(void *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
              uint64_t v53 = *(void *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 8);
              unint64_t v54 = *(char **)((char *)a1
                             + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                             + 16);
              uint64_t v55 = *(void *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 24);
              uint64_t v56 = *(void *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 32);
              uint64_t v57 = *(void *)((char *)a2
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
              uint64_t v58 = *(void **)((char *)a2
                             + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                             + 8);
              uint64_t v60 = *(void *)((char *)a2
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 16);
              uint64_t v59 = *(void **)((char *)a2
                             + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                             + 24);
              if (v53)
              {
                if (v58)
                {
                  uint64_t v204 = *(void *)((char *)a2
                                   + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                                   + 32);
                  v205 = (void *)v56;
                  v206 = v59;
                  v207 = v54;
                  v208 = (char *)v53;
                  uint64_t v209 = v52;
                  if (v52 == v57 && (void *)v53 == v58) {
                    goto LABEL_31;
                  }
                  uint64_t v61 = v57;
                  uint64_t v201 = v55;
                  id v62 = v58;
                  char v63 = sub_22D2BD660();
                  uint64_t v58 = v62;
                  uint64_t v57 = v61;
                  uint64_t v59 = v206;
                  uint64_t v53 = (uint64_t)v208;
                  uint64_t v52 = v209;
                  unint64_t v54 = v207;
                  uint64_t v55 = v201;
                  if (v63)
                  {
LABEL_31:
                    v202 = v58;
                    v203 = (void *)v57;
                    if (v54 == (char *)v60 && (void *)v55 == v59)
                    {
                      uint64_t v64 = v52;
                      sub_22D0CCD98(v52, v53);
                      sub_22D0CCD98(v64, v53);
                      uint64_t v65 = v204;
                      sub_22D0CCD98((uint64_t)v203, (uint64_t)v202);
                      swift_bridgeObjectRelease();
                      goto LABEL_37;
                    }
                    uint64_t v200 = v60;
                    uint64_t v74 = v52;
                    LODWORD(v201) = sub_22D2BD660();
                    sub_22D0CCD98(v74, (uint64_t)v208);
                    sub_22D0CCD98(v74, (uint64_t)v208);
                    uint64_t v65 = v204;
                    sub_22D0CCD98((uint64_t)v203, (uint64_t)v202);
                    swift_bridgeObjectRelease();
                    if (v201)
                    {
LABEL_37:
                      swift_bridgeObjectRelease();
                      uint64_t v75 = (uint64_t)v208;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v76 = v75;
                      uint64_t v77 = (uint64_t)v205;
                      sub_22D0B82BC(v209, v76);
                      long long v66 = v212;
                      if (v77 != v65) {
                        goto LABEL_47;
                      }
LABEL_38:
                      uint64_t v78 = (uint64_t)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync;
                      uint64_t v79 = (uint64_t)v66;
                      swift_beginAccess();
                      sub_22D04BDE8(v78, (uint64_t)v15);
                      uint64_t v80 = (uint64_t)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync;
                      swift_beginAccess();
                      uint64_t v81 = v79 + *(int *)(v8 + 48);
                      sub_22D04BDE8((uint64_t)v15, v79);
                      sub_22D04BDE8(v80, v81);
                      uint64_t v82 = v210;
                      uint64_t v83 = v79;
                      id v84 = (unsigned int (*)(void, void, void))v211[6];
                      if (v84(v83, 1, v210) == 1)
                      {
                        sub_22D0CCDDC((uint64_t)v15, (uint64_t (*)(void))sub_22D05C8D8);
                        if (v84(v81, 1, v82) == 1)
                        {
                          sub_22D0CCDDC((uint64_t)v212, (uint64_t (*)(void))sub_22D05C8D8);
                          goto LABEL_50;
                        }
                      }
                      else
                      {
                        sub_22D04BDE8((uint64_t)v212, (uint64_t)v13);
                        if (v84(v81, 1, v82) != 1)
                        {
                          uint64_t v91 = v211;
                          ((void (*)(char *, uint64_t, void *))v211[4])(v6, v81, v82);
                          sub_22D0CD1C0(&qword_26853E3A0, MEMORY[0x263F07490]);
                          LODWORD(v209) = sub_22D2BCB90();
                          uint64_t v92 = (void (*)(void, void))v91[1];
                          v92(v6, v82);
                          sub_22D0CCDDC((uint64_t)v15, (uint64_t (*)(void))sub_22D05C8D8);
                          v92(v13, v82);
                          sub_22D0CCDDC((uint64_t)v212, (uint64_t (*)(void))sub_22D05C8D8);
                          if ((v209 & 1) == 0) {
                            goto LABEL_47;
                          }
LABEL_50:
                          uint64_t v93 = *(void *)((char *)a1
                                          + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
                          v212 = (char *)OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
                          if (v93)
                          {
                            uint64_t ErrorValue = swift_getErrorValue();
                            uint64_t v95 = v244;
                            uint64_t v96 = *(void *)(v244 - 8);
                            MEMORY[0x270FA5388](ErrorValue);
                            uint64_t v98 = (char *)v189 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
                            (*(void (**)(char *))(v96 + 16))(v98);
                            v211 = (void *)sub_22D2BD6D0();
                            uint64_t v100 = v99;
                            (*(void (**)(char *, uint64_t))(v96 + 8))(v98, v95);
                            uint64_t v101 = (void *)((char *)a2
                                            + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
                            if (!*(void *)((char *)a2
                                            + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error))
                            {
                              if (!v100) {
                                goto LABEL_65;
                              }
                              goto LABEL_63;
                            }
                            v210 = (char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
                          }
                          else
                          {
                            uint64_t v101 = (void *)((char *)a2
                                            + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error);
                            if (!*(void *)((char *)a2
                                            + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error))
                              goto LABEL_65;
                            v210 = (char *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
                            v211 = 0;
                            uint64_t v100 = 0;
                          }
                          uint64_t v102 = swift_getErrorValue();
                          uint64_t v103 = v243;
                          uint64_t v104 = *(void *)(v243 - 8);
                          MEMORY[0x270FA5388](v102);
                          uint64_t v106 = (char *)v189 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
                          (*(void (**)(char *))(v104 + 16))(v106);
                          int v107 = (void *)sub_22D2BD6D0();
                          uint64_t v109 = v108;
                          (*(void (**)(char *, uint64_t))(v104 + 8))(v106, v103);
                          if (v100)
                          {
                            if (v109)
                            {
                              if (v211 == v107 && v100 == v109)
                              {
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                uint64_t v101 = v210;
                              }
                              else
                              {
                                char v110 = sub_22D2BD660();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                char v21 = 0;
                                uint64_t v101 = v210;
                                if ((v110 & 1) == 0) {
                                  return v21 & 1;
                                }
                              }
LABEL_65:
                              if ((*(void *)&v212[(void)a1] != 0) == (*v101 == 0)
                                || *((unsigned __int8 *)a1
                                   + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare) != *((unsigned __int8 *)a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_firstTimeShare))
                              {
                                goto LABEL_47;
                              }
                              v111 = (char *)a1
                                   + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
                              swift_beginAccess();
                              v212 = v111;
                              sub_22CFF4B00((uint64_t)v111, (uint64_t)&v245);
                              uint64_t v112 = (void *)sub_22D0CCE3C();
                              if (swift_dynamicCast())
                              {
                                uint64_t v113 = v223;
                                v211 = v222;
                                unint64_t v115 = v224;
                                uint64_t v114 = v225;

                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                uint64_t v116 = (uint64_t)a2
                                     + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
                                swift_beginAccess();
                                sub_22CFF4B00(v116, (uint64_t)&v245);
                                v211 = v112;
                                if (swift_dynamicCast())
                                {
                                  uint64_t v117 = v223;
                                  id v119 = v224;
                                  uint64_t v118 = v225;

                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  sub_22CFF4B00((uint64_t)v212, (uint64_t)v242);
                                  if (swift_dynamicCast())
                                  {
                                    uint64_t v120 = (uint64_t)v214;
                                    uint64_t v204 = v215;
                                    v205 = v213;
                                    v208 = v218;
                                    uint64_t v209 = (uint64_t)v216;
                                    v202 = v219;
                                    v203 = (void *)v217;
                                    uint64_t v201 = (uint64_t)v221;
                                    unint64_t v121 = v223;
                                    v212 = (char *)v222;
                                    uint64_t v122 = v224;
                                    v210 = v225;
                                    v206 = v226;
                                    v207 = v220;
                                  }
                                  else
                                  {
                                    uint64_t v204 = 0;
                                    v205 = 0;
                                    uint64_t v120 = 0;
                                    v208 = 0;
                                    uint64_t v209 = 0;
                                    v202 = 0;
                                    v203 = 0;
                                    v206 = 0;
                                    v207 = 0;
                                    uint64_t v201 = 0;
                                    v212 = 0;
                                    unint64_t v121 = 0;
                                    uint64_t v122 = 0;
                                    v210 = 0;
                                  }
                                  sub_22CFF4B00(v116, (uint64_t)v241);
                                  if (swift_dynamicCast())
                                  {
                                    uint64_t v130 = (uint64_t)v213;
                                    uint64_t v129 = (uint64_t)v214;
                                    uint64_t v132 = v215;
                                    uint64_t v131 = (uint64_t)v216;
                                    uint64_t v134 = v217;
                                    uint64_t v133 = (uint64_t)v218;
                                    uint64_t v136 = (char *)v219;
                                    uint64_t v135 = (uint64_t)v220;
                                    uint64_t v137 = v221;
                                    uint64_t v138 = (uint64_t)v222;
                                    uint64_t v140 = v223;
                                    uint64_t v139 = v224;
                                    uint64_t v142 = v225;
                                    id v141 = v226;
                                    if (v120)
                                    {
                                      if (v214)
                                      {
                                        v245 = v205;
                                        uint64_t v200 = v120;
                                        uint64_t v246 = v120;
                                        uint64_t v247 = v204;
                                        v248 = (void *)v209;
                                        uint64_t v249 = (uint64_t)v203;
                                        uint64_t v250 = (uint64_t)v208;
                                        v251 = v202;
                                        uint64_t v143 = v206;
                                        v252 = v207;
                                        uint64_t v253 = v201;
                                        v254 = v212;
                                        v255 = v121;
                                        v198 = v122;
                                        v199 = v121;
                                        v256 = v122;
                                        v257 = v210;
                                        v258 = v206;
                                        v196 = v218;
                                        v197 = v219;
                                        v211 = v220;
                                        v194 = v223;
                                        v195 = v221;
                                        v192 = v225;
                                        v193 = v224;
                                        v191 = v226;
                                        swift_bridgeObjectRetain();
                                        int v144 = v121;
                                        uint64_t v145 = v122;
                                        v146 = v210;
                                        v147 = v210;
                                        id v148 = v143;
                                        v206 = v143;
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        char v21 = sub_22D0D86C8(&v245, &v213);
                                        sub_22D0CD0B0(v130, v129, v132, v131, v134, (uint64_t)v196, (uint64_t)v197, (uint64_t)v211, (uint64_t)v195, v138, v194, v193, v192, v191);
                                        v186 = v146;
                                        v187 = v143;
                                        uint64_t v149 = v201;
                                        uint64_t v150 = v204;
                                        uint64_t v151 = (uint64_t)v205;
                                        uint64_t v153 = (uint64_t)v208;
                                        uint64_t v152 = v209;
                                        uint64_t v155 = (uint64_t)v202;
                                        uint64_t v154 = (uint64_t)v203;
                                        uint64_t v156 = (uint64_t)v207;
                                        sub_22D0CD0B0((uint64_t)v205, v200, v204, v209, (uint64_t)v203, (uint64_t)v208, (uint64_t)v202, (uint64_t)v207, v201, (uint64_t)v212, v199, v198, v186, v187);
                                        sub_22D0CD0B0(v151, v200, v150, v152, v154, v153, v155, v156, v149, (uint64_t)v212, v199, v198, v210, v206);
                                        return v21 & 1;
                                      }
                                      goto LABEL_89;
                                    }
                                    if (v214)
                                    {
LABEL_89:
                                      v213 = v205;
                                      v214 = (void *)v120;
                                      uint64_t v215 = v204;
                                      v216 = (char *)v209;
                                      uint64_t v217 = (uint64_t)v203;
                                      v218 = v208;
                                      v219 = v202;
                                      v220 = v207;
                                      v221 = (void *)v201;
                                      v222 = v212;
                                      v223 = v121;
                                      v224 = v122;
                                      v225 = v210;
                                      id v226 = v206;
                                      uint64_t v227 = v130;
                                      uint64_t v228 = v129;
                                      uint64_t v229 = v132;
                                      uint64_t v230 = v131;
                                      uint64_t v231 = v134;
                                      uint64_t v232 = v133;
                                      v233 = v136;
                                      uint64_t v234 = v135;
                                      v235 = v137;
                                      uint64_t v236 = v138;
                                      v237 = v140;
                                      id v238 = v139;
                                      v239 = v142;
                                      id v240 = v141;
                                      sub_22D0CCFE4((uint64_t)&v213);
                                      goto LABEL_47;
                                    }
                                  }
                                  else if (v120)
                                  {
                                    id v141 = 0;
                                    uint64_t v142 = 0;
                                    uint64_t v139 = 0;
                                    uint64_t v140 = 0;
                                    uint64_t v138 = 0;
                                    uint64_t v137 = 0;
                                    uint64_t v135 = 0;
                                    uint64_t v136 = 0;
                                    uint64_t v133 = 0;
                                    uint64_t v134 = 0;
                                    uint64_t v131 = 0;
                                    uint64_t v132 = 0;
                                    uint64_t v129 = 0;
                                    uint64_t v130 = 0;
                                    goto LABEL_89;
                                  }
LABEL_92:
                                  char v21 = 1;
                                  return v21 & 1;
                                }
                              }
                              else
                              {
                                uint64_t v123 = (uint64_t)a2
                                     + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
                                swift_beginAccess();
                                sub_22CFF4B00(v123, (uint64_t)&v245);
                                if (swift_dynamicCast())
                                {
                                  uint64_t v124 = v221;
                                  uint64_t v125 = v222;
                                  uint64_t v126 = v223;

                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  sub_22CFF4B00((uint64_t)v212, (uint64_t)v242);
                                  if (swift_dynamicCast())
                                  {
                                    uint64_t v127 = (uint64_t)v214;
                                    v205 = (void *)v215;
                                    v206 = v213;
                                    uint64_t v209 = (uint64_t)v218;
                                    v210 = v216;
                                    v203 = v219;
                                    uint64_t v204 = v217;
                                    uint64_t v128 = v221;
                                    v207 = (char *)v222;
                                    v208 = v220;
                                    v211 = v224;
                                    v212 = v223;
                                  }
                                  else
                                  {
                                    v205 = 0;
                                    v206 = 0;
                                    uint64_t v127 = 0;
                                    uint64_t v209 = 0;
                                    v210 = 0;
                                    v203 = 0;
                                    uint64_t v204 = 0;
                                    v207 = 0;
                                    v208 = 0;
                                    uint64_t v128 = 0;
                                    v211 = 0;
                                    v212 = 0;
                                  }
                                  sub_22CFF4B00(v123, (uint64_t)v241);
                                  if (swift_dynamicCast())
                                  {
                                    uint64_t v157 = (uint64_t)v213;
                                    uint64_t v158 = v214;
                                    uint64_t v160 = v215;
                                    uint64_t v159 = (uint64_t)v216;
                                    uint64_t v162 = v217;
                                    uint64_t v161 = (uint64_t)v218;
                                    uint64_t v164 = (uint64_t)v219;
                                    uint64_t v163 = (uint64_t)v220;
                                    uint64_t v166 = (char *)v221;
                                    uint64_t v165 = v222;
                                    v168 = v223;
                                    uint64_t v167 = (uint64_t)v224;
                                    if (v127)
                                    {
                                      if (v214)
                                      {
                                        v169 = v207;
                                        v245 = v206;
                                        uint64_t v201 = v127;
                                        v202 = v128;
                                        uint64_t v246 = v127;
                                        uint64_t v247 = (uint64_t)v205;
                                        v248 = v210;
                                        uint64_t v249 = v204;
                                        uint64_t v250 = v209;
                                        v251 = v203;
                                        v252 = v208;
                                        uint64_t v253 = (uint64_t)v128;
                                        v254 = v207;
                                        v170 = v212;
                                        v255 = v212;
                                        v256 = (char *)v211;
                                        v198 = v218;
                                        v199 = v219;
                                        uint64_t v200 = (uint64_t)v220;
                                        v196 = (char *)v222;
                                        v197 = v221;
                                        v195 = v224;
                                        swift_bridgeObjectRetain();
                                        id v171 = v128;
                                        id v172 = v169;
                                        id v173 = v170;
                                        v174 = v211;
                                        v175 = v211;
                                        uint64_t v176 = v201;
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRetain();
                                        char v21 = sub_22D0D8868(&v245, &v213);
                                        sub_22D0CCF58(v157, (uint64_t)v158, v160, v159, v162, (uint64_t)v198, (uint64_t)v199, v200, v197, v196, v168, v195);
                                        v188 = v174;
                                        v177 = v207;
                                        uint64_t v178 = (uint64_t)v206;
                                        uint64_t v179 = v176;
                                        uint64_t v181 = v204;
                                        uint64_t v180 = (uint64_t)v205;
                                        uint64_t v183 = v209;
                                        uint64_t v182 = (uint64_t)v210;
                                        uint64_t v184 = (uint64_t)v203;
                                        uint64_t v185 = (uint64_t)v208;
                                        sub_22D0CCF58((uint64_t)v206, v179, (uint64_t)v205, (uint64_t)v210, v204, v209, (uint64_t)v203, (uint64_t)v208, v202, v207, v212, v188);
                                        sub_22D0CCF58(v178, v201, v180, v182, v181, v183, v184, v185, v202, v177, v212, v211);
                                        return v21 & 1;
                                      }
                                    }
                                    else if (!v214)
                                    {
                                      goto LABEL_92;
                                    }
                                  }
                                  else
                                  {
                                    if (!v127) {
                                      goto LABEL_92;
                                    }
                                    uint64_t v167 = 0;
                                    v168 = 0;
                                    uint64_t v165 = 0;
                                    uint64_t v166 = 0;
                                    uint64_t v163 = 0;
                                    uint64_t v164 = 0;
                                    uint64_t v161 = 0;
                                    uint64_t v162 = 0;
                                    uint64_t v159 = 0;
                                    uint64_t v160 = 0;
                                    uint64_t v158 = 0;
                                    uint64_t v157 = 0;
                                  }
                                  v213 = v206;
                                  v214 = (void *)v127;
                                  uint64_t v215 = (uint64_t)v205;
                                  v216 = v210;
                                  uint64_t v217 = v204;
                                  v218 = (char *)v209;
                                  v219 = v203;
                                  v220 = v208;
                                  v221 = v128;
                                  v222 = v207;
                                  v223 = v212;
                                  v224 = (char *)v211;
                                  v225 = (char *)v157;
                                  id v226 = v158;
                                  uint64_t v227 = v160;
                                  uint64_t v228 = v159;
                                  uint64_t v229 = v162;
                                  uint64_t v230 = v161;
                                  uint64_t v231 = v164;
                                  uint64_t v232 = v163;
                                  v233 = v166;
                                  uint64_t v234 = (uint64_t)v165;
                                  v235 = v168;
                                  uint64_t v236 = v167;
                                  sub_22D0CCE94((uint64_t)&v213);
                                }
                              }
LABEL_47:
                              char v21 = 0;
                              return v21 & 1;
                            }
                          }
                          else
                          {
                            uint64_t v101 = v210;
                            if (!v109) {
                              goto LABEL_65;
                            }
                          }
LABEL_63:
                          swift_bridgeObjectRelease();
                          goto LABEL_47;
                        }
                        sub_22D0CCDDC((uint64_t)v15, (uint64_t (*)(void))sub_22D05C8D8);
                        ((void (*)(char *, void *))v211[1])(v13, v82);
                      }
                      sub_22D0CCDDC((uint64_t)v212, (uint64_t (*)(void))sub_22D0CCC74);
                      goto LABEL_47;
                    }
                  }
                  else
                  {
                    uint64_t v85 = (uint64_t)v208;
                    uint64_t v86 = v57;
                    uint64_t v87 = (uint64_t)v58;
                    uint64_t v88 = v209;
                    sub_22D0CCD98(v209, (uint64_t)v208);
                    sub_22D0CCD98(v88, v85);
                    sub_22D0CCD98(v86, v87);
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v89 = (uint64_t)v208;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v72 = v209;
                  uint64_t v73 = v89;
LABEL_46:
                  sub_22D0B82BC(v72, v73);
                  goto LABEL_47;
                }
              }
              else
              {
                long long v66 = v212;
                if (!v58) {
                  goto LABEL_38;
                }
              }
              uint64_t v67 = *(void *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
              uint64_t v68 = *(void *)((char *)a1
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 8);
              uint64_t v69 = v53;
              uint64_t v70 = *(void *)((char *)a2
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
              uint64_t v71 = *(void *)((char *)a2
                              + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo
                              + 8);
              uint64_t v209 = v52;
              sub_22D0CCD98(v67, v69);
              sub_22D0CCD98(v70, v71);
              sub_22D0B82BC(v209, v68);
              uint64_t v72 = v70;
              uint64_t v73 = v71;
              goto LABEL_46;
            }
          }
          else if (!v37)
          {
            goto LABEL_26;
          }
          v213 = *(void **)((char *)a1 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_rootNode);
          v214 = v27;
          uint64_t v215 = (uint64_t)v28;
          v216 = v29;
          uint64_t v217 = (uint64_t)v30;
          v218 = v31;
          v219 = (void *)v32;
          v220 = (char *)v33;
          v221 = v34;
          v222 = v35;
          v223 = v36;
          v224 = (char *)v37;
          v225 = (char *)v38;
          id v226 = v40;
          uint64_t v227 = v39;
          uint64_t v228 = v42;
          uint64_t v229 = (uint64_t)v41;
          uint64_t v230 = v44;
          uint64_t v231 = v43;
          uint64_t v232 = v46;
          v233 = v45;
          uint64_t v234 = v47;
          v208 = (char *)v44;
          uint64_t v209 = v43;
          unint64_t v48 = (unint64_t)v41;
          uint64_t v49 = v42;
          uint64_t v50 = v39;
          uint64_t v51 = (uint64_t)v40;
          sub_22D057BD8((uint64_t)v26, (uint64_t)v27, (uint64_t)v28, (uint64_t)v29, (uint64_t)v30, (unint64_t)v31);
          sub_22D057BD8((uint64_t)v37, v38, v51, v50, v49, v48);
          sub_22D0CCCD8((uint64_t *)&v213);
          goto LABEL_47;
        }
      }
    }
  }
  return v21 & 1;
}

void sub_22D0CCC74()
{
  if (!qword_26853F090)
  {
    sub_22D05C8D8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853F090);
    }
  }
}

uint64_t *sub_22D0CCCD8(uint64_t *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  uint64_t v4 = a1[13];
  uint64_t v5 = a1[14];
  uint64_t v6 = a1[15];
  unint64_t v7 = a1[16];
  sub_22D057C70(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_22D057C70(v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_22D0CCD98(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22D0CCDDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_22D0CCE3C()
{
  unint64_t result = qword_26853EFA8;
  if (!qword_26853EFA8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26853EFA8);
  }
  return result;
}

uint64_t sub_22D0CCE94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 160);
  uint64_t v10 = *(void **)(a1 + 176);
  uint64_t v9 = *(void **)(a1 + 184);
  sub_22D0CCF58(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void **)(a1 + 72), *(void **)(a1 + 80), *(void **)(a1 + 88));
  sub_22D0CCF58(v13, v2, v3, v4, v5, v6, v7, v8, (void *)v12, *((void **)&v12 + 1), v10, v9);
  return a1;
}

uint64_t sub_22D0CCF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22D0CCFE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 128);
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 160);
  uint64_t v8 = *(void *)(a1 + 168);
  long long v12 = *(_OWORD *)(a1 + 192);
  long long v13 = *(_OWORD *)(a1 + 176);
  uint64_t v10 = *(void **)(a1 + 208);
  uint64_t v9 = *(void **)(a1 + 216);
  sub_22D0CD0B0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void **)(a1 + 80), *(void **)(a1 + 88), *(void **)(a1 + 96), *(void **)(a1 + 104));
  sub_22D0CD0B0(v14, v2, v3, v4, v5, v6, v7, v8, v13, *((uint64_t *)&v13 + 1), (void *)v12, *((void **)&v12 + 1), v10, v9);
  return a1;
}

uint64_t sub_22D0CD0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22D0CD148()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 128, 7);
}

uint64_t sub_22D0CD1C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D0CD208()
{
  if (!qword_26AEC2288)
  {
    sub_22D030474(255, (unint64_t *)&qword_26AEC1F30);
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2288);
    }
  }
}

id sub_22D0CD2A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalDocumentDownloader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalDocumentDownloader()
{
  return self;
}

uint64_t sub_22D0CD4F4(int a1, char a2, void *aBlock, void *a4)
{
  *(void *)(v4 + 16) = a4;
  *(unsigned char *)(v4 + 56) = a2;
  *(void *)(v4 + 24) = _Block_copy(aBlock);
  sub_22D0CF174();
  *(void *)(v4 + 32) = sub_22D2BCE00();
  id v6 = a4;
  return MEMORY[0x270FA2498](sub_22D0CD590, 0, 0);
}

uint64_t sub_22D0CD590()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_22D0CD638;
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 56);
  return sub_22D1D3F74(v2, v3);
}

uint64_t sub_22D0CD638()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_22D0CD7AC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 24);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, void))(v3 + 16))(v3, 1, 0);
    _Block_release(*(const void **)(v2 + 24));
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_22D0CD7AC()
{
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 24);

  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_22D2BB9B0();

  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);
  _Block_release(*(const void **)(v0 + 24));
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_22D0CD9D4(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a3;
  return MEMORY[0x270FA2498](sub_22D0CDA60, 0, 0);
}

uint64_t sub_22D0CDA60()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_22D0CDB04;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_22D1D833C(v2);
}

uint64_t sub_22D0CDB04()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_22D0CDC74, 0, 0);
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 24);
    uint64_t v3 = *(void *)(v2 + 32);

    (*(void (**)(uint64_t, uint64_t, void))(v3 + 16))(v3, 1, 0);
    _Block_release(*(const void **)(v2 + 32));
    uint64_t v5 = *(uint64_t (**)(void))(v2 + 8);
    return v5();
  }
}

uint64_t sub_22D0CDC74()
{
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);

  uint64_t v4 = (void *)sub_22D2BB9B0();
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v4);

  _Block_release(*(const void **)(v0 + 32));
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_22D0CDE84(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  return MEMORY[0x270FA2498](sub_22D0CDEEC, 0, 0);
}

uint64_t sub_22D0CDEEC()
{
  uint64_t v1 = *(void (***)(void, void, void))(v0 + 16);
  v1[2](v1, 1, 0);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_22D0CE0E0(uint64_t a1, const void *a2, void *a3)
{
  v3[2] = a3;
  uint64_t v6 = sub_22D2BBC90();
  v3[3] = v6;
  v3[4] = *(void *)(v6 - 8);
  v3[5] = swift_task_alloc();
  v3[6] = _Block_copy(a2);
  sub_22D2BBC70();
  id v7 = a3;
  return MEMORY[0x270FA2498](sub_22D0CE1D8, 0, 0);
}

uint64_t sub_22D0CE1D8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_22D0CE27C;
  uint64_t v2 = *(void *)(v0 + 40);
  return sub_22D1D71CC(v2);
}

uint64_t sub_22D0CE27C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_22D0CE404, 0, 0);
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void **)(v2 + 16);
    (*(void (**)(void, void))(*(void *)(v2 + 32) + 8))(*(void *)(v2 + 40), *(void *)(v2 + 24));

    (*(void (**)(uint64_t, uint64_t, void))(v3 + 16))(v3, 1, 0);
    _Block_release(*(const void **)(v2 + 48));
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v2 + 8);
    return v5();
  }
}

uint64_t sub_22D0CE404()
{
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 16);
  (*(void (**)(void, void))(*(void *)(v0 + 32) + 8))(*(void *)(v0 + 40), *(void *)(v0 + 24));

  uint64_t v4 = (void *)sub_22D2BB9B0();
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v4);

  _Block_release(*(const void **)(v0 + 48));
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_22D0CE504(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_22D0A94FC;
  return v6();
}

uint64_t sub_22D0CE5D0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_22D0A94FC;
  return v7();
}

uint64_t sub_22D0CE69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BCED0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22D2BCEC0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_22D0CED18(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22D2BCE80();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_22D0CE840(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_22D0CE91C;
  return v6(a1);
}

uint64_t sub_22D0CE91C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

id sub_22D0CEA14(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_client] = a1;
  id v3 = objc_allocWithZone(MEMORY[0x263F0A410]);
  uint64_t v4 = v1;
  id v5 = a1;
  id v6 = objc_msgSend(v3, sel_init);
  *(void *)&v4[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_healthStore] = v6;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C90]), sel_initWithHealthStore_, v6);
  *(void *)&v4[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_documentStore] = v7;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C78]), sel_initWithHealthStore_, v6);
  *(void *)&v4[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_accountStore] = v8;
  type metadata accessor for ClinicalDocumentDownloadTaskCoordinator();
  swift_allocObject();
  *(void *)&v4[OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalDocumentDownloader_taskCoordinator] = sub_22D1D3EF8((uint64_t)v7, (uint64_t)v8);

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for ClinicalDocumentDownloader();
  return objc_msgSendSuper2(&v10, sel_init);
}

void sub_22D0CEB40()
{
  if (!qword_26853ECE0)
  {
    sub_22D2BCED0();
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853ECE0);
    }
  }
}

uint64_t sub_22D0CEB9C()
{
  uint64_t v2 = v0[2];
  id v3 = (const void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_22D0A94FC;
  id v6 = (uint64_t (*)(uint64_t, const void *, void *))((char *)&dword_26853F198 + dword_26853F198);
  return v6(v2, v3, v4);
}

uint64_t sub_22D0CEC54()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_22D0A94FC;
  id v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_26853F1A8 + dword_26853F1A8);
  return v6(v2, v3, v4);
}

uint64_t sub_22D0CED18(uint64_t a1)
{
  sub_22D0CEB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D0CED74()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D0CEDAC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_22D0A8E9C;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26853F1C8 + dword_26853F1C8);
  return v6(a1, v4);
}

uint64_t sub_22D0CEE64()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D0CEEA4()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_22D0A8E9C;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_26853F1D8 + dword_26853F1D8);
  return v4(v2);
}

uint64_t objectdestroyTm_5()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22D0CEFA4()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_22D0A94FC;
  uint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_26853F1F8 + dword_26853F1F8);
  return v6(v2, v3, v4);
}

uint64_t sub_22D0CF060()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D0CF0A8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 24);
  id v5 = *(void **)(v0 + 32);
  uint64_t v4 = *(void **)(v0 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_22D0A94FC;
  id v7 = (uint64_t (*)(int, char, void *, void *))((char *)&dword_26853F218 + dword_26853F218);
  return v7(v2, v3, v5, v4);
}

unint64_t sub_22D0CF174()
{
  unint64_t result = qword_26853F238;
  if (!qword_26853F238)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26853F238);
  }
  return result;
}

uint64_t *sub_22D0CF1B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    objc_super v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22D2BB6F0();
    long long v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    id v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v7 + v13) = (uint64_t)v15;
    uint64_t v16 = (char *)v7 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    *(uint64_t *)((char *)v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    id v18 = v15;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_22D0CF2E4(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_22D0CF37C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  objc_super v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v13;
  uint64_t v14 = (char *)a1 + v12;
  id v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  id v16 = v13;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_22D0CF460(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  uint64_t v14 = a3[7];
  id v15 = (char *)a1 + v14;
  id v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  v15[8] = v16[8];
  *(void *)id v15 = v17;
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_22D0CF54C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_22D0CF608(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);

  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v12;
  id v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D0CF6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0CF6F0);
}

uint64_t sub_22D0CF6F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BB6F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_22D0CF7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0CF7B4);
}

void *sub_22D0CF7B4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BB6F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingHistogramQuery()
{
  uint64_t result = qword_26853F240;
  if (!qword_26853F240) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D0CF8A8()
{
  uint64_t result = sub_22D2BB6F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22D0CF968@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22D2BBC30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22D2BBE00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, *v1 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v11 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date, v3);
  uint64_t v12 = (char *)v1 + *(int *)(type metadata accessor for ClinicalSharingHistogramQuery() + 28);
  if (v12[8] == 1 && (uint64_t v13 = *(void *)v12, ((1 << v13) & 0x67) == 0))
  {
    if (v13 == 3) {
      sub_22D0B2984(0, (uint64_t)v6, a1);
    }
    else {
      sub_22D0B307C((uint64_t)v6, a1);
    }
  }
  else
  {
    sub_22D2BBCE0();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_22D0CFBA0()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ClinicalSharingHistogramQuery();
  uint64_t v3 = (int *)(v2 - 8);
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v50 = *(void *)(v51 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v49 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0D10D8(0, &qword_26853F250, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  uint64_t v57 = v5;
  uint64_t v59 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v52 = (char *)&v45 - v6;
  sub_22D0D10D8(0, &qword_26853F270, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  uint64_t v56 = v7;
  uint64_t v58 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v45 - v8;
  sub_22D0D142C(0, &qword_26853DEE8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v47 = (uint64_t (*)())((char *)&v45 - v10);
  uint64_t v11 = sub_22D2BB8E0();
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v55 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22D2BBC30();
  uint64_t v46 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = self;
  sub_22D2BB6C0();
  id v18 = (void *)sub_22D2BBBC0();
  id v19 = *(void (**)(char *, uint64_t))(v14 + 8);
  v19(v16, v13);
  long long v45 = v19;
  sub_22D2BB690();
  char v20 = (void *)sub_22D2BBBC0();
  v19(v16, v13);
  id v21 = objc_msgSend(v17, sel_predicateForSamplesWithStartDate_endDate_options_, v18, v20, 0);
  id v48 = v21;

  uint64_t v22 = v3[9];
  uint64_t v60 = v1;
  id v23 = (char *)v1 + v22;
  uint64_t v24 = *(void *)v23;
  LOBYTE(v23) = v23[8];
  uint64_t v62 = v24;
  char v63 = (char)v23;
  uint64_t v25 = (uint64_t)v61;
  sub_22D08FCA4();
  uint64_t v26 = *v1;
  uint64_t v27 = *v1 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar;
  uint64_t v28 = sub_22D2BBE00();
  uint64_t v29 = *(void *)(v28 - 8);
  id v30 = v47;
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t))(v29 + 16))(v47, v27, v28);
  (*(void (**)(uint64_t (*)(), void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
  sub_22D2BB8D0();
  __swift_project_boxed_opaque_existential_1((void *)(v26 + 16), *(void *)(v26 + 40));
  uint64_t v31 = (uint64_t)v60;
  uint64_t v32 = *(void **)((char *)v60 + v3[8]);
  sub_22D0CF968((uint64_t)v16);
  uint64_t v33 = sub_22D2717E4(v32, v21, (uint64_t)v16, v25, *(void *)(v31 + v3[10]));
  v45(v16, v46);
  uint64_t v62 = v33;
  uint64_t v47 = type metadata accessor for ClinicalSharingHistogramQuery;
  uint64_t v34 = v49;
  sub_22D0D14FC(v31, v49, (uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery);
  unint64_t v35 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v36 = swift_allocObject();
  sub_22D0D19C8(v34, v36 + v35, (uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_22D0D1158;
  *(void *)(v37 + 24) = v36;
  sub_22D0D1000();
  type metadata accessor for PBTypedData(0);
  sub_22D0D1080();
  uint64_t v38 = v52;
  sub_22D2BC730();
  swift_release();
  swift_release();
  sub_22D0D14FC((uint64_t)v60, v34, (uint64_t (*)(void))v47);
  uint64_t v39 = swift_allocObject();
  sub_22D0D19C8(v34, v39 + v35, (uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  uint64_t v40 = v53;
  uint64_t v41 = v57;
  sub_22D2BC3C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v41);
  sub_22D0D13B8();
  uint64_t v42 = v56;
  uint64_t v43 = sub_22D2BC720();

  (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v42);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v61, v55);
  return v43;
}

uint64_t sub_22D0D02BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v87 = type metadata accessor for ClinicalSharingHistogramQuery();
  MEMORY[0x270FA5388](v87);
  uint64_t v4 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0D142C(0, &qword_26853D9D8, (void (*)(uint64_t))type metadata accessor for PBTypedData.OneOf_Raw);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v84 = (uint64_t)&v76 - v9;
  sub_22D0D142C(0, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v76 - v11;
  uint64_t v13 = type metadata accessor for PBTypedData(0);
  uint64_t v89 = *(void *)(v13 - 8);
  uint64_t v90 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0D142C(0, &qword_26853D7A0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v80 = (char *)&v76 - v17;
  uint64_t v18 = type metadata accessor for PBDateRange(0);
  uint64_t v81 = *(void *)(v18 - 8);
  uint64_t v82 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v85 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PBHistogramSeries(0);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v83 = (uint64_t)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v86 = (uint64_t *)((char *)&v76 - v23);
  id v24 = objc_msgSend(a1, sel_valueHistograms);
  sub_22D030474(0, &qword_26853F280);
  unint64_t v25 = sub_22D2BCE00();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v26)
  {
    uint64_t v79 = v8;
    uint64_t v27 = v87;
    uint64_t v28 = v88;
    uint64_t v78 = *(int *)(v87 + 24);
    uint64_t v29 = (char *)sub_22D272B14();
    if (v29)
    {
      uint64_t v76 = v15;
      id v30 = v29;
      id v31 = objc_msgSend(a1, sel_valueHistograms);
      uint64_t v32 = v27;
      unint64_t v33 = sub_22D2BCE00();

      MEMORY[0x270FA5388](v34);
      *(&v76 - 2) = v30;
      *(&v76 - 1) = (char *)v28;
      uint64_t v35 = sub_22D29C8B0((void (*)(id *))sub_22D0D1480, (uint64_t)(&v76 - 4), v33, (uint64_t)v93);
      swift_bridgeObjectRelease();
      uint64_t v36 = v86;
      sub_22D2BBFE0();
      *uint64_t v36 = v35;
      uint64_t v77 = v30;
      uint64_t v37 = v30;
      uint64_t v38 = (uint64_t)v76;
      id v39 = objc_msgSend(v37, sel_unitString);
      uint64_t v40 = sub_22D2BCBD0();
      uint64_t v42 = v41;

      v36[1] = v40;
      v36[2] = v42;
      uint64_t v43 = v28 + *(int *)(v32 + 28);
      uint64_t v44 = *(void *)v43;
      uint64_t v45 = *(unsigned __int8 *)(v43 + 8);
      uint64_t v46 = v28 + *(int *)(v32 + 20);
      uint64_t v47 = sub_22D2BB6F0();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = (uint64_t)v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v80, v46, v47);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v47);
      uint64_t v50 = (uint64_t)v85;
      sub_22D22BA04(v44, v45, v49);
      sub_22D0D14A0(v49, &qword_26853D7A0, MEMORY[0x263F062D0]);
      sub_22D0D14FC(v50, (uint64_t)v12, type metadata accessor for PBDateRange);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v12, 0, 1, v82);
      sub_22D22CD68((uint64_t)v12, v38);
      sub_22D0D14A0((uint64_t)v12, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
      uint64_t v51 = v83;
      sub_22D0D14FC((uint64_t)v36, v83, type metadata accessor for PBHistogramSeries);
      uint64_t v52 = v90;
      uint64_t v53 = *(int *)(v90 + 20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBTypedData._StorageClass(0);
        swift_allocObject();
        uint64_t v54 = swift_retain();
        *(void *)(v38 + v53) = sub_22D0040E0(v54);
        swift_release();
      }
      uint64_t v55 = *(void *)(v38 + v53);
      uint64_t v56 = v51;
      uint64_t v57 = v84;
      sub_22D0D19C8(v56, v84, type metadata accessor for PBHistogramSeries);
      uint64_t v58 = type metadata accessor for PBTypedData.OneOf_Raw(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
      uint64_t v59 = v57;
      uint64_t v60 = (uint64_t)v79;
      sub_22D0D1564(v59, (uint64_t)v79);
      uint64_t v61 = v55
          + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__raw;
      swift_beginAccess();
      swift_retain();
      sub_22D0D15E4(v60, v61);
      swift_endAccess();
      swift_release();
      if (objc_msgSend(*(id *)(v28 + v78), sel_code) == (id)15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for PBTypedData._StorageClass(0);
          swift_allocObject();
          uint64_t v62 = swift_retain();
          *(void *)(v38 + v53) = sub_22D0040E0(v62);
          swift_release();
        }
        uint64_t v63 = *(void *)(v38 + v53);
        swift_beginAccess();
        *(void *)(v63 + 16) = 130;
        *(unsigned char *)(v63 + 24) = 1;

        sub_22D0D1664(v50, type metadata accessor for PBDateRange);
      }
      else
      {
        sub_22D0D1664(v50, type metadata accessor for PBDateRange);
      }
      uint64_t v75 = v91;
      sub_22D0D19C8(v38, v91, type metadata accessor for PBTypedData);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v75, 0, 1, v52);
      return sub_22D0D1664((uint64_t)v36, type metadata accessor for PBHistogramSeries);
    }
    else
    {
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_22D2BC390();
      __swift_project_value_buffer(v68, (uint64_t)qword_26AEC3C90);
      sub_22D0D14FC(v88, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery);
      uint64_t v69 = sub_22D2BC380();
      os_log_type_t v70 = sub_22D2BD070();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = (uint8_t *)swift_slowAlloc();
        uint64_t v72 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v71 = 138412290;
        uint64_t v73 = *(void **)&v4[*(int *)(v87 + 24)];
        uint64_t v92 = v73;
        id v74 = v73;
        sub_22D2BD220();
        *uint64_t v72 = v73;
        sub_22D0D1664((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery);
        _os_log_impl(&dword_22CFEE000, v69, v70, "Missing encoding unit for %@", v71, 0xCu);
        sub_22D0CD208();
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v72, -1, -1);
        MEMORY[0x230F7BDF0](v71, -1, -1);
      }
      else
      {
        sub_22D0D1664((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery);
      }

      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v91, 1, 1, v90);
    }
  }
  else
  {
    uint64_t v64 = v90;
    uint64_t v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
    uint64_t v66 = v91;
    return v65(v66, 1, 1, v64);
  }
}

uint64_t sub_22D0D0D40@<X0>(void **a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v7 = sub_22D2BBC30();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22D2BB6F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  *a4 = 0;
  a4[1] = 0xE000000000000000;
  a4[3] = 0;
  a4[4] = 0xE000000000000000;
  type metadata accessor for PBHistogramSeries.Value(0);
  sub_22D2BBFE0();
  id v15 = objc_msgSend(v14, sel_segments);
  sub_22D030474(0, &qword_26853F288);
  unint64_t v16 = sub_22D2BCE00();

  id v17 = a2;
  uint64_t v18 = v28;
  uint64_t v19 = sub_22D0D16C4(v16, (uint64_t)v17);
  uint64_t v28 = v18;
  swift_bridgeObjectRelease();

  a4[2] = v19;
  id v20 = objc_msgSend(v14, sel_dateInterval);
  sub_22D2BB680();

  sub_22D2BB6C0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v21 = *(id *)(*v29 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  uint64_t v22 = (void *)sub_22D2BBBC0();
  id v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

  uint64_t v24 = sub_22D2BCBD0();
  uint64_t v26 = v25;

  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v24;
  a4[1] = v26;
  return result;
}

void sub_22D0D1000()
{
  if (!qword_26853F258)
  {
    sub_22D030474(255, &qword_26853F260);
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853F258);
    }
  }
}

unint64_t sub_22D0D1080()
{
  unint64_t result = qword_26853F268;
  if (!qword_26853F268)
  {
    sub_22D0D1000();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F268);
  }
  return result;
}

void sub_22D0D10D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_22D0D1000();
    a3(255);
    sub_22D0D1080();
    unint64_t v5 = sub_22D2BC3D0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_22D0D1158@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0D02BC(a1, a2);
}

uint64_t sub_22D0D11CC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D0D1204(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t objectdestroyTm_6()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingHistogramQuery() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D0D1340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D22A558(a1, 0, a2);
}

unint64_t sub_22D0D13B8()
{
  unint64_t result = qword_26853F278;
  if (!qword_26853F278)
  {
    sub_22D0D10D8(255, &qword_26853F270, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F278);
  }
  return result;
}

void sub_22D0D142C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D0D1480@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0D0D40(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_22D0D14A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D0D142C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D0D14FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D0D1564(uint64_t a1, uint64_t a2)
{
  sub_22D0D142C(0, &qword_26853D9D8, (void (*)(uint64_t))type metadata accessor for PBTypedData.OneOf_Raw);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0D15E4(uint64_t a1, uint64_t a2)
{
  sub_22D0D142C(0, &qword_26853D9D8, (void (*)(uint64_t))type metadata accessor for PBTypedData.OneOf_Raw);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0D1664(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D0D16C4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v30 = type metadata accessor for PBBucket(0);
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (!v7) {
      return v8;
    }
    uint64_t v31 = MEMORY[0x263F8EE78];
    uint64_t result = sub_22D24BEAC(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v24 = v3;
    uint64_t v25 = v7;
    uint64_t v10 = 0;
    uint64_t v8 = v31;
    unint64_t v26 = a1;
    unint64_t v27 = a1 & 0xC000000000000001;
    uint64_t v11 = v29;
    while (v7 != v10)
    {
      if (v27) {
        id v12 = (id)MEMORY[0x230F7AF90](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v3 = v12;
      sub_22D2BBFE0();
      uint64_t v13 = (uint64_t)objc_msgSend(v3, sel_count);
      if (v13 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_17;
      }
      if (v13 > 0x7FFFFFFF) {
        goto LABEL_18;
      }
      *((_DWORD *)v6 + 4) = v13;
      id v14 = objc_msgSend(v3, sel_quantityRange);
      id v15 = objc_msgSend(v14, sel_minimum);

      objc_msgSend(v15, sel_doubleValueForUnit_, v11);
      uint64_t v17 = v16;

      *(void *)uint64_t v6 = v17;
      id v18 = objc_msgSend(v3, sel_quantityRange);
      id v19 = objc_msgSend(v18, sel_maximum);

      objc_msgSend(v19, sel_doubleValueForUnit_, v11);
      uint64_t v21 = v20;

      *((void *)v6 + 1) = v21;
      uint64_t v31 = v8;
      unint64_t v23 = *(void *)(v8 + 16);
      unint64_t v22 = *(void *)(v8 + 24);
      uint64_t v3 = (void *)(v23 + 1);
      if (v23 >= v22 >> 1)
      {
        sub_22D24BEAC(v22 > 1, v23 + 1, 1);
        uint64_t v8 = v31;
      }
      ++v10;
      *(void *)(v8 + 16) = v3;
      sub_22D0D19C8((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23, type metadata accessor for PBBucket);
      uint64_t v7 = v25;
      a1 = v26;
      if (v25 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_22D0D19C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t CatalogEntry.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CatalogEntry.v.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t CatalogEntry.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CatalogEntry() + 24);
  uint64_t v4 = sub_22D2BBAA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CatalogEntry()
{
  uint64_t result = qword_26853F2B8;
  if (!qword_26853F2B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CatalogEntry.bytes.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for CatalogEntry() + 28));
}

uint64_t CatalogEntry.init(id:version:url:bytes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  uint64_t v11 = type metadata accessor for CatalogEntry();
  id v12 = (char *)a7 + *(int *)(v11 + 24);
  uint64_t v13 = sub_22D2BBAA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a4, v13);
  id v15 = (char *)a7 + *(int *)(v11 + 28);
  *(void *)id v15 = a5;
  v15[8] = a6 & 1;
  return result;
}

uint64_t sub_22D0D1C00()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 118;
      break;
    case 2:
      uint64_t result = 7107189;
      break;
    case 3:
      uint64_t result = 0x7365747962;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22D0D1C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22D0D2DC4(a1, a2);
  *a3 = result;
  return result;
}

void sub_22D0D1C94(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_22D0D1CA0(uint64_t a1)
{
  unint64_t v2 = sub_22D0D1F30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D0D1CDC(uint64_t a1)
{
  unint64_t v2 = sub_22D0D1F30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CatalogEntry.encode(to:)(void *a1)
{
  sub_22D0D2364(0, &qword_26853F290, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D0D1F30();
  sub_22D2BD7B0();
  v9[15] = 0;
  sub_22D2BD5C0();
  if (!v1)
  {
    v9[14] = 1;
    sub_22D2BD5E0();
    type metadata accessor for CatalogEntry();
    v9[13] = 2;
    sub_22D2BBAA0();
    sub_22D0D23C8(&qword_26853F2A0);
    sub_22D2BD5F0();
    v9[12] = 3;
    sub_22D2BD5A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_22D0D1F30()
{
  unint64_t result = qword_26853F298;
  if (!qword_26853F298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F298);
  }
  return result;
}

uint64_t CatalogEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_22D2BBAA0();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0D2364(0, &qword_26853F2A8, MEMORY[0x263F8E040]);
  uint64_t v25 = v6;
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for CatalogEntry();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D0D1F30();
  uint64_t v12 = (uint64_t)v26;
  sub_22D2BD7A0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v26 = a1;
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  char v30 = 0;
  *uint64_t v11 = sub_22D2BD540();
  v11[1] = v16;
  char v29 = 1;
  void v11[2] = sub_22D2BD550();
  char v28 = 2;
  sub_22D0D23C8(&qword_26853F2B0);
  sub_22D2BD560();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v11 + *(int *)(v9 + 24), v5, v15);
  char v27 = 3;
  uint64_t v17 = sub_22D2BD520();
  LOBYTE(v15) = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v25);
  id v19 = (char *)v11 + *(int *)(v9 + 28);
  *(void *)id v19 = v17;
  v19[8] = v15 & 1;
  sub_22D0D240C((uint64_t)v11, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_22D0D2470((uint64_t)v11);
}

void sub_22D0D2364(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_22D0D1F30();
    unint64_t v7 = a3(a1, &type metadata for CatalogEntry.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D0D23C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D2BBAA0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0D240C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatalogEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0D2470(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CatalogEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D0D24CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CatalogEntry.init(from:)(a1, a2);
}

uint64_t sub_22D0D24E4(void *a1)
{
  return CatalogEntry.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for CatalogEntry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22D2BBAA0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
  }
  return v4;
}

uint64_t destroy for CatalogEntry(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22D2BBAA0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for CatalogEntry(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22D2BBAA0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  return a1;
}

void *assignWithCopy for CatalogEntry(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBAA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  return a1;
}

uint64_t initializeWithTake for CatalogEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  return a1;
}

void *assignWithTake for CatalogEntry(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22D2BBAA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for CatalogEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0D29A0);
}

uint64_t sub_22D0D29A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBAA0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CatalogEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0D2A64);
}

uint64_t sub_22D0D2A64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBAA0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D0D2B0C()
{
  uint64_t result = sub_22D2BBAA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CatalogEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D0D2C84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CatalogEntry.CodingKeys()
{
  return &type metadata for CatalogEntry.CodingKeys;
}

unint64_t sub_22D0D2CC0()
{
  unint64_t result = qword_26853F2C8;
  if (!qword_26853F2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F2C8);
  }
  return result;
}

unint64_t sub_22D0D2D18()
{
  unint64_t result = qword_26853F2D0;
  if (!qword_26853F2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F2D0);
  }
  return result;
}

unint64_t sub_22D0D2D70()
{
  unint64_t result = qword_26853F2D8;
  if (!qword_26853F2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F2D8);
  }
  return result;
}

uint64_t sub_22D0D2DC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 118 && a2 == 0xE100000000000000 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365747962 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_22D0D2F34()
{
  qword_268568460 = (uint64_t)&unk_26E05A398;
}

unint64_t sub_22D0D2F48(uint64_t a1)
{
  return sub_22D0D2F88(a1, &qword_26853E2E8, (uint64_t (*)(uint64_t))sub_22D02524C);
}

unint64_t sub_22D0D2F68(uint64_t a1)
{
  return sub_22D0D2F88(a1, &qword_26853E2F0, (uint64_t (*)(uint64_t))sub_22D0D401C);
}

unint64_t sub_22D0D2F88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    unsigned int v4 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D0D4074(0, a2, a3, MEMORY[0x263F8DFB0]);
  unsigned int v4 = (void *)sub_22D2BD4A0();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  char v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_22D04EB7C(v7, v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    *(void *)(v4[7] + 8 * result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _OWORD v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D30B4(uint64_t a1)
{
  sub_22D0D413C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D055FB0();
  uint64_t v7 = sub_22D2BD4A0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_22D0D4388(v13, (uint64_t)v6, (uint64_t (*)(void))sub_22D0D413C);
    unint64_t result = sub_22D04EA20((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_22D2BBC90();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D32AC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D054FC4();
  uint64_t v2 = (void *)sub_22D2BD4A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_22D04EBF4((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D33B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D056CE0(0, &qword_26853E370);
  uint64_t v2 = (void *)sub_22D2BD4A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_22D04EB7C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D34F0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D056CE0(0, &qword_26AEC1F60);
  uint64_t v2 = sub_22D2BD4A0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22D0D4210(v6, (uint64_t)v15, &qword_26AEC2FD8);
    unint64_t result = sub_22D04ED98((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_22D056B08(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D3660(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D056CE0(0, &qword_26AEC1F58);
  uint64_t v2 = sub_22D2BD4A0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22D0D4210(v6, (uint64_t)&v15, (unint64_t *)&qword_26AEC1E68);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_22D04EB7C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_22D056B08(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D37CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D0D427C(0, &qword_26AEC22A0, (uint64_t)&qword_26AEC2080, (uint64_t)&protocol descriptor for ClinicalSharingMetricPayloadProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
  uint64_t v2 = sub_22D2BD4A0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22D0D4524(v6, (uint64_t)&v15, (unint64_t *)&qword_26AEC2260, (unint64_t *)&qword_26AEC2080);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_22D04EB7C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_22CFF8C10(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D3948(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D0D42E8();
  uint64_t v2 = sub_22D2BD4A0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22D0D4388(v6, (uint64_t)&v13, (uint64_t (*)(void))sub_22D0D43F0);
    uint64_t v7 = v13;
    unint64_t result = sub_22D04EDDC(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_22D056B08(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D3A74(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D0D445C();
  uint64_t v2 = sub_22D2BD4A0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22D0D4210(v6, (uint64_t)v13, (unint64_t *)&qword_26853F2F8);
    unsigned __int8 v7 = v13[0];
    unint64_t result = sub_22D04ED0C(v13[0]);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v7;
    unint64_t result = (unint64_t)sub_22D056B08(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D3BAC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D0D427C(0, &qword_26AEC1F48, (uint64_t)&qword_26AEC1130, (uint64_t)&protocol descriptor for DaemonXPCService, (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
  uint64_t v2 = sub_22D2BD4A0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22D0D4524(v6, (uint64_t)&v15, &qword_26853F2F0, (unint64_t *)&qword_26AEC1130);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_22D04EB7C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_22CFF8C10(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22D0D3D28(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_22D0D427C(0, &qword_26AEC1F50, (uint64_t)&qword_26AEC1F30, 0x263F8C6D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_22D030474);
  uint64_t v2 = (void *)sub_22D2BD4A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_22D04EB7C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter()
{
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_ephemeralSessionConfiguration);
  sub_22D0D3FB4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22D2BFF40;
  uint64_t v2 = MEMORY[0x263F8D310];
  sub_22D2BD2C0();
  id v3 = (id)HDHealthRecordsPublicUserAgentString();
  uint64_t v4 = sub_22D2BCBD0();
  uint64_t v6 = v5;

  *(void *)(inited + 96) = v2;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = v6;
  sub_22D0D34F0(inited);
  uint64_t v7 = (void *)sub_22D2BCAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setHTTPAdditionalHeaders_, v7);

  objc_msgSend(v0, sel_set_sourceApplicationBundleIdentifier_, *MEMORY[0x263F0AD08]);
  return v0;
}

void sub_22D0D3FB4()
{
  if (!qword_26AEC2FE8)
  {
    sub_22D0D44C4(255, &qword_26AEC2FD8);
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2FE8);
    }
  }
}

void sub_22D0D401C()
{
  if (!qword_26853DDE0)
  {
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853DDE0);
    }
  }
}

void sub_22D0D4074(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x263F8D310], v7, MEMORY[0x263F8D320]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D0D40E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BCE60();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_22D0D413C()
{
  if (!qword_26AEC2060)
  {
    sub_22D2BBC90();
    sub_22D0D40E8(255, &qword_26AEC2268, MEMORY[0x263F44A78]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AEC2060);
    }
  }
}

uint64_t sub_22D0D41C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0D4210(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_22D0D44C4(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_22D0D427C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_22D2BD4B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_22D0D42E8()
{
  if (!qword_26853F2E0)
  {
    type metadata accessor for FileAttributeKey(255);
    sub_22D0D41C8((unint64_t *)&qword_26853D670, type metadata accessor for FileAttributeKey);
    unint64_t v0 = sub_22D2BD4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853F2E0);
    }
  }
}

uint64_t sub_22D0D4388(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_22D0D43F0()
{
  if (!qword_26853F2E8)
  {
    type metadata accessor for FileAttributeKey(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853F2E8);
    }
  }
}

void sub_22D0D445C()
{
  if (!qword_26853E358)
  {
    sub_22D056C28();
    unint64_t v0 = sub_22D2BD4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853E358);
    }
  }
}

void sub_22D0D44C4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_22D0D4524(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_22D0D4594(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_22D0D4594(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_22D021C20(255, a3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t static Catalog.simpleCatalog()@<X0>(uint64_t *a1@<X8>)
{
  BOOL v21 = a1;
  sub_22D0D4920(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v22 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - v4;
  sub_22D0D4920(0, &qword_26853F300, (uint64_t (*)(uint64_t))type metadata accessor for CatalogEntry, MEMORY[0x263F8E0F8]);
  uint64_t v6 = type metadata accessor for CatalogEntry();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v20 = *(void *)(*(void *)(v6 - 8) + 72);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_22D2C0F10;
  sub_22D2BBA90();
  uint64_t v9 = sub_22D2BBAA0();
  uint64_t v10 = *(void *)(v9 - 8);
  BOOL v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t result = v11(v5, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    BOOL v13 = (char *)(v8 + v7);
    *(void *)BOOL v13 = 0xD000000000000014;
    *((void *)v13 + 1) = 0x800000022D2D5F70;
    *((void *)v13 + 2) = 1;
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v14(&v13[*(int *)(v6 + 24)], v5, v9);
    uint64_t v15 = &v13[*(int *)(v6 + 28)];
    *(void *)uint64_t v15 = 0;
    v15[8] = 1;
    uint64_t v16 = v22;
    sub_22D2BBA90();
    uint64_t result = v11(v16, 1, v9);
    if (result != 1)
    {
      long long v17 = &v13[v20];
      *(void *)long long v17 = 0xD000000000000012;
      *((void *)v17 + 1) = 0x800000022D2D5F30;
      *((void *)v17 + 2) = 1;
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v14)(&v17[*(int *)(v6 + 24)], v16, v9);
      uint64_t v18 = &v17[*(int *)(v6 + 28)];
      *(void *)uint64_t v18 = 0;
      v18[8] = 1;
      uint64_t *v21 = v8;
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_22D0D4920(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t static Catalog.simpleCatalogData()()
{
  sub_22D2BB660();
  swift_allocObject();
  sub_22D2BB650();
  static Catalog.simpleCatalog()(&v2);
  sub_22D0D4A48();
  uint64_t v0 = sub_22D2BB640();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_22D0D4A48()
{
  unint64_t result = qword_26853F308;
  if (!qword_26853F308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F308);
  }
  return result;
}

uint64_t sub_22D0D4A9C@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v134 = a3;
  uint64_t v135 = a4;
  int v144 = a2;
  uint64_t v5 = sub_22D2BBC30();
  uint64_t v136 = *(void *)(v5 - 8);
  uint64_t v137 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0D80C8(0, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v132 = (char *)v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v141 = (uint64_t)v131 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v140 = (uint64_t)v131 - v13;
  uint64_t v14 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v138 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v142 = (char *)v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v131 - v17;
  uint64_t v19 = type metadata accessor for PBHKMedicationRecord(0);
  uint64_t v20 = v19 - 8;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v133 = (uint64_t)v131 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v131 - v23;
  uint64_t v25 = *a1;
  sub_22D2BBFE0();
  uint64_t v26 = *(int *)(v20 + 28);
  if (qword_26853D098 != -1) {
    swift_once();
  }
  uint64_t v139 = v14;
  *(void *)&v24[v26] = qword_2685403C0;
  swift_retain();
  id v27 = objc_msgSend(v25, sel_medication);
  id v28 = objc_msgSend(v25, sel_earliestDosageDate);
  id v143 = v25;
  id v29 = objc_msgSend(v25, sel_dosages);
  if (v29)
  {
    char v30 = v29;
    sub_22D030474(0, &qword_26853F318);
    uint64_t v31 = sub_22D2BCE00();
  }
  else
  {
    uint64_t v31 = 0;
  }
  id v32 = objc_msgSend(v143, sel_status);
  sub_22D0D5B5C(v27, v28, v31, v32, (uint64_t)v18);

  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v33 = swift_retain();
    *(void *)&v24[v26] = sub_22D1823FC(v33);
    swift_release();
  }
  uint64_t v34 = *(void *)&v24[v26];
  uint64_t v35 = v140;
  sub_22D0D7FC4((uint64_t)v18, v140, type metadata accessor for PBGeneralMedication);
  v131[0] = *(void *)(v138 + 56);
  v131[1] = v138 + 56;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v131[0])(v35, 0, 1, v139);
  uint64_t v36 = v141;
  sub_22D0D7E10(v35, v141, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  uint64_t v37 = v34
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D0D802C(v36, v37, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
  id v38 = v143;
  id v39 = objc_msgSend(v143, sel_asserter);
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = sub_22D2BCBD0();
    uint64_t v43 = v42;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v44 = swift_retain();
      *(void *)&v24[v26] = sub_22D1823FC(v44);
      swift_release();
    }
    uint64_t v45 = (uint64_t *)(*(void *)&v24[v26]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
    swift_beginAccess();
    uint64_t *v45 = v41;
    v45[1] = v43;
    swift_bridgeObjectRelease();
  }
  id v46 = objc_msgSend(v38, sel_assertionDate);
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v48 = *v144;
    uint64_t v49 = (void *)sub_22D2BBD30();
    id v50 = objc_msgSend(v47, sel_adjustedDateForCalendar_, v49);

    sub_22D2BBC00();
    id v51 = *(id *)(v48 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v52 = (void *)sub_22D2BBBC0();
    id v53 = objc_msgSend(v51, sel_stringFromDate_, v52);

    uint64_t v54 = sub_22D2BCBD0();
    uint64_t v56 = v55;

    (*(void (**)(char *, uint64_t))(v136 + 8))(v7, v137);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v57 = swift_retain();
      *(void *)&v24[v26] = sub_22D1823FC(v57);
      swift_release();
    }
    uint64_t v58 = (uint64_t *)(*(void *)&v24[v26]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
    swift_beginAccess();
    uint64_t *v58 = v54;
    v58[1] = v56;

    swift_bridgeObjectRelease();
    id v38 = v143;
  }
  sub_22D1E5800((unint64_t)objc_msgSend(v38, sel_assertionType), (uint64_t)&v147);
  uint64_t v59 = v147;
  char v60 = v148;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v61 = swift_retain();
    *(void *)&v24[v26] = sub_22D1823FC(v61);
    swift_release();
  }
  uint64_t v62 = *(void *)&v24[v26]
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
  swift_beginAccess();
  *(void *)uint64_t v62 = v59;
  *(unsigned char *)(v62 + 8) = v60;
  id v63 = objc_msgSend(v38, sel_effectiveStartDate);
  if (v63)
  {
    uint64_t v64 = v63;
    uint64_t v65 = *v144;
    uint64_t v66 = (void *)sub_22D2BBD30();
    id v67 = objc_msgSend(v64, sel_adjustedDateForCalendar_, v66);

    sub_22D2BBC00();
    id v68 = *(id *)(v65 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v69 = (void *)sub_22D2BBBC0();
    id v70 = objc_msgSend(v68, sel_stringFromDate_, v69);

    uint64_t v71 = sub_22D2BCBD0();
    uint64_t v73 = v72;

    (*(void (**)(char *, uint64_t))(v136 + 8))(v7, v137);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v74 = swift_retain();
      *(void *)&v24[v26] = sub_22D1823FC(v74);
      swift_release();
    }
    uint64_t v75 = (uint64_t *)(*(void *)&v24[v26]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
    swift_beginAccess();
    *uint64_t v75 = v71;
    v75[1] = v73;

    swift_bridgeObjectRelease();
    id v38 = v143;
  }
  id v76 = objc_msgSend(v38, sel_effectiveEndDate);
  if (v76)
  {
    uint64_t v77 = v76;
    uint64_t v78 = *v144;
    uint64_t v79 = (void *)sub_22D2BBD30();
    id v80 = objc_msgSend(v77, sel_adjustedDateForCalendar_, v79);

    sub_22D2BBC00();
    id v81 = *(id *)(v78 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v82 = (void *)sub_22D2BBBC0();
    id v83 = objc_msgSend(v81, sel_stringFromDate_, v82);

    uint64_t v84 = sub_22D2BCBD0();
    uint64_t v86 = v85;

    (*(void (**)(char *, uint64_t))(v136 + 8))(v7, v137);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v87 = swift_retain();
      *(void *)&v24[v26] = sub_22D1823FC(v87);
      swift_release();
    }
    uint64_t v88 = (uint64_t *)(*(void *)&v24[v26]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
    swift_beginAccess();
    *uint64_t v88 = v84;
    v88[1] = v86;

    swift_bridgeObjectRelease();
    id v38 = v143;
  }
  unsigned __int8 v89 = objc_msgSend(v38, sel_notTaken);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v90 = swift_retain();
    *(void *)&v24[v26] = sub_22D1823FC(v90);
    swift_release();
  }
  uint64_t v91 = (unsigned __int8 *)(*(void *)&v24[v26]
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  *uint64_t v91 = v89;
  id v92 = objc_msgSend(v38, sel_reasonForUse);
  uint64_t v93 = v135;
  uint64_t v94 = v139;
  if (v92)
  {
    uint64_t v95 = v92;
    sub_22D030474(0, (unint64_t *)&qword_26853ED30);
    unint64_t v96 = sub_22D2BCE00();

    MEMORY[0x270FA5388](v97);
    v131[-2] = v144;
    uint64_t v98 = sub_22D29C85C((void (*)(id *))sub_22D0D8178, (uint64_t)&v131[-4], v96, (uint64_t)&v145);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v99 = swift_retain();
      *(void *)&v24[v26] = sub_22D1823FC(v99);
      swift_release();
    }
    uint64_t v100 = (uint64_t *)(*(void *)&v24[v26]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
    swift_beginAccess();
    uint64_t *v100 = v98;
    swift_bridgeObjectRelease();
  }
  id v101 = objc_msgSend(v38, sel_reasonsNotTaken);
  uint64_t v102 = (uint64_t)v142;
  uint64_t v103 = (uint64_t)v132;
  if (v101)
  {
    uint64_t v104 = v101;
    sub_22D030474(0, (unint64_t *)&qword_26853ED30);
    unint64_t v105 = sub_22D2BCE00();

    MEMORY[0x270FA5388](v106);
    v131[-2] = v144;
    uint64_t v107 = sub_22D29C85C((void (*)(id *))sub_22D0D8178, (uint64_t)&v131[-4], v105, (uint64_t)v146);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v108 = swift_retain();
      *(void *)&v24[v26] = sub_22D1823FC(v108);
      swift_release();
    }
    uint64_t v109 = (uint64_t *)(*(void *)&v24[v26]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
    swift_beginAccess();
    uint64_t *v109 = v107;
    swift_bridgeObjectRelease();
    uint64_t v102 = (uint64_t)v142;
  }
  id v110 = objc_msgSend(v38, sel_medicationCodingCollection);
  uint64_t v111 = sub_22D2689EC();

  uint64_t v112 = *(void *)&v24[v26]
       + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D0D7E7C(v112, v103);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v103, 1, v94) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v113 = *(int *)(v94 + 20);
    if (qword_26853D088 != -1) {
      swift_once();
    }
    *(void *)(v102 + v113) = qword_2685403A0;
    swift_retain();
    sub_22D0D811C(v103, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  }
  else
  {
    sub_22D0D7FC4(v103, v102, type metadata accessor for PBGeneralMedication);
  }
  uint64_t v114 = *(int *)(v94 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    uint64_t v115 = swift_retain();
    uint64_t v102 = (uint64_t)v142;
    *(void *)(v102 + v114) = sub_22D18044C(v115);
    swift_release();
  }
  uint64_t v116 = (uint64_t *)(*(void *)(v102 + v114)
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
  swift_beginAccess();
  *uint64_t v116 = v111;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v117 = swift_retain();
    *(void *)&v24[v26] = sub_22D1823FC(v117);
    swift_release();
  }
  uint64_t v118 = *(void *)&v24[v26];
  uint64_t v119 = v140;
  sub_22D0D7FC4(v102, v140, type metadata accessor for PBGeneralMedication);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v131[0])(v119, 0, 1, v94);
  uint64_t v120 = v141;
  sub_22D0D7E10(v119, v141, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  uint64_t v121 = v118
       + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D0D802C(v120, v121, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
  sub_22D081588(v38, v134, v93);
  uint64_t v122 = v133;
  sub_22D0D7EFC((uint64_t)v24, v133, type metadata accessor for PBHKMedicationRecord);
  PBClinicalRecord.medicationRecord.setter(v122);
  uint64_t v123 = sub_22D2B8154();
  uint64_t v125 = v124;
  uint64_t v126 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v127 = (void *)swift_retain();
    uint64_t v128 = sub_22D1B90F4(v127);
    swift_release();
    *(void *)(v93 + v126) = v128;
    swift_release();
  }
  uint64_t v129 = (uint64_t *)(*(void *)(v93 + v126)
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  *uint64_t v129 = v123;
  v129[1] = v125;
  swift_bridgeObjectRelease();
  return sub_22D0D7F64((uint64_t)v24, type metadata accessor for PBHKMedicationRecord);
}

uint64_t sub_22D0D5B5C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v57 = a4;
  uint64_t v55 = a3;
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0D80C8(0, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v50 - v16;
  uint64_t v58 = type metadata accessor for PBHKConcept(0);
  uint64_t v18 = *(void *)(v58 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v58);
  uint64_t v56 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v50 - v21;
  sub_22D2BBFE0();
  uint64_t v23 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if (qword_26853D088 != -1) {
    swift_once();
  }
  *(void *)(a5 + v23) = qword_2685403A0;
  swift_retain();
  uint64_t v59 = v5;
  sub_22D080C14(a1, 1, (uint64_t)v22);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    uint64_t v24 = swift_retain();
    *(void *)(a5 + v23) = sub_22D18044C(v24);
    swift_release();
  }
  uint64_t v25 = *(void *)(a5 + v23);
  sub_22D0D7FC4((uint64_t)v22, (uint64_t)v17, type metadata accessor for PBHKConcept);
  id v53 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v54 = v18 + 56;
  v53(v17, 0, 1, v58);
  sub_22D0D7E10((uint64_t)v17, (uint64_t)v15, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  uint64_t v26 = v25
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  swift_retain();
  sub_22D0D802C((uint64_t)v15, v26, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  swift_endAccess();
  uint64_t result = swift_release();
  if (a2)
  {
    id v50 = v15;
    uint64_t v28 = *(void *)v59;
    id v29 = a2;
    char v30 = (void *)sub_22D2BBD30();
    id v31 = objc_msgSend(v29, sel_adjustedDateForCalendar_, v30);

    sub_22D2BBC00();
    id v32 = *(id *)(v28 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v33 = (void *)sub_22D2BBBC0();
    id v34 = objc_msgSend(v32, sel_stringFromDate_, v33);

    uint64_t v35 = sub_22D2BCBD0();
    uint64_t v37 = v36;

    (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v52);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBGeneralMedication._StorageClass(0);
      swift_allocObject();
      uint64_t v38 = swift_retain();
      *(void *)(a5 + v23) = sub_22D18044C(v38);
      swift_release();
    }
    uint64_t v39 = *(void *)(a5 + v23);
    swift_beginAccess();
    *(void *)(v39 + 16) = v35;
    *(void *)(v39 + 24) = v37;

    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = v50;
  }
  uint64_t v40 = v59;
  uint64_t v41 = (uint64_t)v56;
  if (v55)
  {
    MEMORY[0x270FA5388](result);
    *(&v50 - 2) = v40;
    uint64_t v43 = sub_22D29C904((void (*)(id *))sub_22D0D8098, (uint64_t)(&v50 - 4), v42, (uint64_t)v60);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBGeneralMedication._StorageClass(0);
      swift_allocObject();
      uint64_t v44 = swift_retain();
      *(void *)(a5 + v23) = sub_22D18044C(v44);
      swift_release();
    }
    uint64_t v45 = (uint64_t *)(*(void *)(a5 + v23)
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
    swift_beginAccess();
    uint64_t *v45 = v43;
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (v57)
  {
    id v46 = v57;
    sub_22D080C14(v46, 1, v41);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBGeneralMedication._StorageClass(0);
      swift_allocObject();
      uint64_t v47 = swift_retain();
      *(void *)(a5 + v23) = sub_22D18044C(v47);
      swift_release();
    }
    uint64_t v48 = *(void *)(a5 + v23);
    sub_22D0D7FC4(v41, (uint64_t)v17, type metadata accessor for PBHKConcept);
    v53(v17, 0, 1, v58);
    sub_22D0D7E10((uint64_t)v17, (uint64_t)v15, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    uint64_t v49 = v48
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
    swift_beginAccess();
    swift_retain();
    sub_22D0D802C((uint64_t)v15, v49, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_endAccess();

    return swift_release();
  }
  return result;
}

uint64_t sub_22D0D6214@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v108 = a3;
  uint64_t v116 = a2;
  sub_22D0D80C8(0, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v106 = (uint64_t)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v105 = (uint64_t)&v102 - v9;
  uint64_t v104 = type metadata accessor for PBHKConcept(0);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v102 = (uint64_t)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_22D2BBC30();
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v112 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0D80C8(0, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v111 = (uint64_t)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v102 - v15;
  uint64_t v110 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v17 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v19 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PBHKMedicationOrder(0);
  uint64_t v21 = v20 - 8;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v107 = (uint64_t)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v102 - v24;
  uint64_t v26 = *a1;
  sub_22D2BBFE0();
  uint64_t v27 = *(int *)(v21 + 28);
  if (qword_26853D0C0 != -1) {
    swift_once();
  }
  *(void *)&v25[v27] = qword_268540418;
  swift_retain();
  id v28 = objc_msgSend(v26, sel_medication);
  id v29 = objc_msgSend(v26, sel_earliestDosageDate);
  id v115 = v26;
  id v30 = objc_msgSend(v26, sel_dosages);
  uint64_t v109 = a4;
  if (v30)
  {
    id v31 = v30;
    sub_22D030474(0, &qword_26853F318);
    uint64_t v32 = sub_22D2BCE00();
  }
  else
  {
    uint64_t v32 = 0;
  }
  id v33 = objc_msgSend(v115, sel_status);
  sub_22D0D5B5C(v28, v29, v32, v33, (uint64_t)v19);

  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    uint64_t v34 = swift_retain();
    *(void *)&v25[v27] = sub_22D186D6C(v34);
    swift_release();
  }
  uint64_t v35 = *(void *)&v25[v27];
  sub_22D0D7FC4((uint64_t)v19, (uint64_t)v16, type metadata accessor for PBGeneralMedication);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v16, 0, 1, v110);
  uint64_t v36 = v111;
  sub_22D0D7E10((uint64_t)v16, v111, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  uint64_t v37 = v35
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D0D802C(v36, v37, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
  id v38 = v115;
  id v39 = objc_msgSend(v115, sel_endedDate);
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = *v116;
    unint64_t v42 = (void *)sub_22D2BBD30();
    id v43 = objc_msgSend(v40, sel_adjustedDateForCalendar_, v42);

    uint64_t v44 = v112;
    sub_22D2BBC00();

    id v45 = *(id *)(v41 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    id v46 = (void *)sub_22D2BBBC0();
    id v47 = objc_msgSend(v45, sel_stringFromDate_, v46);

    uint64_t v48 = sub_22D2BCBD0();
    uint64_t v50 = v49;

    (*(void (**)(char *, uint64_t))(v113 + 8))(v44, v114);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      uint64_t v51 = swift_retain();
      *(void *)&v25[v27] = sub_22D186D6C(v51);
      swift_release();
    }
    uint64_t v52 = (uint64_t *)(*(void *)&v25[v27]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
    swift_beginAccess();
    *uint64_t v52 = v48;
    v52[1] = v50;

    swift_bridgeObjectRelease();
    id v38 = v115;
  }
  uint64_t result = (uint64_t)objc_msgSend(v38, sel_numberOfFills);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_36;
  }
  int v54 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    uint64_t v55 = swift_retain();
    *(void *)&v25[v27] = sub_22D186D6C(v55);
    swift_release();
  }
  uint64_t v56 = (_DWORD *)(*(void *)&v25[v27]
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  *uint64_t v56 = v54;
  id v57 = objc_msgSend(v38, sel_prescriber);
  if (v57)
  {
    uint64_t v58 = v57;
    uint64_t v59 = sub_22D2BCBD0();
    uint64_t v61 = v60;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      uint64_t v62 = swift_retain();
      *(void *)&v25[v27] = sub_22D186D6C(v62);
      swift_release();
    }
    id v63 = (uint64_t *)(*(void *)&v25[v27]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
    swift_beginAccess();
    uint64_t *v63 = v59;
    v63[1] = v61;
    swift_bridgeObjectRelease();
  }
  id v64 = objc_msgSend(v38, sel_reason);
  if (v64)
  {
    uint64_t v65 = v64;
    sub_22D030474(0, (unint64_t *)&qword_26853ED30);
    unint64_t v66 = sub_22D2BCE00();

    MEMORY[0x270FA5388](v67);
    *(&v102 - 2) = (uint64_t)v116;
    uint64_t v68 = sub_22D29C85C((void (*)(id *))sub_22D0AC3D0, (uint64_t)(&v102 - 4), v66, (uint64_t)v117);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      uint64_t v69 = swift_retain();
      *(void *)&v25[v27] = sub_22D186D6C(v69);
      swift_release();
    }
    id v70 = (uint64_t *)(*(void *)&v25[v27]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
    swift_beginAccess();
    *id v70 = v68;
    swift_bridgeObjectRelease();
  }
  id v71 = objc_msgSend(v38, sel_reasonEnded);
  if (v71)
  {
    uint64_t v72 = v71;
    uint64_t v73 = v102;
    sub_22D080C14(v71, 1, v102);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      uint64_t v74 = swift_retain();
      *(void *)&v25[v27] = sub_22D186D6C(v74);
      swift_release();
    }
    uint64_t v75 = *(void *)&v25[v27];
    uint64_t v76 = v105;
    sub_22D0D7FC4(v73, v105, type metadata accessor for PBHKConcept);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v76, 0, 1, v104);
    uint64_t v77 = v106;
    sub_22D0D7E10(v76, v106, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    uint64_t v78 = v75
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
    swift_beginAccess();
    swift_retain();
    sub_22D0D802C(v77, v78, (unint64_t *)&qword_26853E848, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_endAccess();

    swift_release();
    id v38 = v115;
  }
  id v79 = objc_msgSend(v38, sel_writtenDate);
  if (v79)
  {
    id v80 = v79;
    uint64_t v81 = *v116;
    uint64_t v82 = (void *)sub_22D2BBD30();
    id v83 = objc_msgSend(v80, sel_adjustedDateForCalendar_, v82);

    uint64_t v84 = v112;
    sub_22D2BBC00();

    id v85 = *(id *)(v81 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v86 = (void *)sub_22D2BBBC0();
    id v87 = objc_msgSend(v85, sel_stringFromDate_, v86);

    uint64_t v88 = sub_22D2BCBD0();
    uint64_t v90 = v89;

    (*(void (**)(char *, uint64_t))(v113 + 8))(v84, v114);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationOrder._StorageClass(0);
      swift_allocObject();
      uint64_t v91 = swift_retain();
      *(void *)&v25[v27] = sub_22D186D6C(v91);
      swift_release();
    }
    id v92 = (uint64_t *)(*(void *)&v25[v27]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
    swift_beginAccess();
    *id v92 = v88;
    v92[1] = v90;

    swift_bridgeObjectRelease();
    id v38 = v115;
  }
  uint64_t v93 = v109;
  sub_22D081588(v38, v108, v109);
  uint64_t v94 = v107;
  sub_22D0D7EFC((uint64_t)v25, v107, type metadata accessor for PBHKMedicationOrder);
  PBClinicalRecord.medicationOrder.setter(v94);
  uint64_t v95 = sub_22D2B8154();
  uint64_t v97 = v96;
  uint64_t v98 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v99 = (void *)swift_retain();
    uint64_t v100 = sub_22D1B90F4(v99);
    swift_release();
    *(void *)(v93 + v98) = v100;
    swift_release();
  }
  id v101 = (uint64_t *)(*(void *)(v93 + v98)
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  *id v101 = v95;
  v101[1] = v97;
  swift_bridgeObjectRelease();
  return sub_22D0D7F64((uint64_t)v25, type metadata accessor for PBHKMedicationOrder);
}

uint64_t sub_22D0D6FB4@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v74 = a3;
  uint64_t v75 = a4;
  id v80 = a2;
  uint64_t v5 = sub_22D2BBC30();
  uint64_t v77 = *(void *)(v5 - 8);
  uint64_t v78 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v76 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0D80C8(0, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v72 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v71 - v10;
  uint64_t v71 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v12 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v73 = (uint64_t)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v71 - v19;
  uint64_t v21 = *a1;
  sub_22D2BBFE0();
  uint64_t v22 = *(int *)(v16 + 28);
  if (qword_26853D0B0 != -1) {
    swift_once();
  }
  *(void *)&v20[v22] = qword_2685403F8;
  swift_retain();
  id v23 = objc_msgSend(v21, sel_medication);
  id v24 = objc_msgSend(v21, sel_earliestDosageDate);
  id v25 = objc_msgSend(v21, sel_dosages);
  if (v25)
  {
    uint64_t v26 = v25;
    sub_22D030474(0, &qword_26853F318);
    uint64_t v27 = sub_22D2BCE00();
  }
  else
  {
    uint64_t v27 = 0;
  }
  id v79 = v21;
  id v28 = objc_msgSend(v21, sel_status, v71);
  sub_22D0D5B5C(v23, v24, v27, v28, (uint64_t)v14);

  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v29 = swift_retain();
    *(void *)&v20[v22] = sub_22D184680(v29);
    swift_release();
  }
  uint64_t v30 = *(void *)&v20[v22];
  sub_22D0D7FC4((uint64_t)v14, (uint64_t)v11, type metadata accessor for PBGeneralMedication);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v71);
  uint64_t v31 = v72;
  sub_22D0D7E10((uint64_t)v11, v72, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  uint64_t v32 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D0D802C(v31, v32, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
  id v33 = objc_msgSend(v79, sel_handOverDate);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *v80;
    uint64_t v36 = (void *)sub_22D2BBD30();
    id v37 = objc_msgSend(v34, sel_adjustedDateForCalendar_, v36);

    id v38 = v76;
    sub_22D2BBC00();

    id v39 = *(id *)(v35 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v40 = (void *)sub_22D2BBBC0();
    id v41 = objc_msgSend(v39, sel_stringFromDate_, v40);

    uint64_t v42 = sub_22D2BCBD0();
    uint64_t v44 = v43;

    (*(void (**)(char *, uint64_t))(v77 + 8))(v38, v78);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v45 = swift_retain();
      *(void *)&v20[v22] = sub_22D184680(v45);
      swift_release();
    }
    id v46 = (uint64_t *)(*(void *)&v20[v22]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
    swift_beginAccess();
    *id v46 = v42;
    v46[1] = v44;

    swift_bridgeObjectRelease();
  }
  id v47 = objc_msgSend(v79, sel_preparationDate);
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = *v80;
    uint64_t v50 = (void *)sub_22D2BBD30();
    id v51 = objc_msgSend(v48, sel_adjustedDateForCalendar_, v50);

    uint64_t v52 = v76;
    sub_22D2BBC00();

    id v53 = *(id *)(v49 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    int v54 = (void *)sub_22D2BBBC0();
    id v55 = objc_msgSend(v53, sel_stringFromDate_, v54);

    uint64_t v56 = sub_22D2BCBD0();
    uint64_t v58 = v57;

    (*(void (**)(char *, uint64_t))(v77 + 8))(v52, v78);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v59 = swift_retain();
      *(void *)&v20[v22] = sub_22D184680(v59);
      swift_release();
    }
    uint64_t v60 = (uint64_t *)(*(void *)&v20[v22]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
    swift_beginAccess();
    *uint64_t v60 = v56;
    v60[1] = v58;

    swift_bridgeObjectRelease();
  }
  uint64_t v61 = v75;
  sub_22D081588(v79, v74, v75);
  uint64_t v62 = v73;
  sub_22D0D7EFC((uint64_t)v20, v73, type metadata accessor for PBHKMedicationDispenseRecord);
  PBClinicalRecord.medicationDispenseRecord.setter(v62);
  uint64_t v63 = sub_22D2B8154();
  uint64_t v65 = v64;
  uint64_t v66 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v67 = (void *)swift_retain();
    uint64_t v68 = sub_22D1B90F4(v67);
    swift_release();
    *(void *)(v61 + v66) = v68;
    swift_release();
  }
  uint64_t v69 = (uint64_t *)(*(void *)(v61 + v66)
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  uint64_t *v69 = v63;
  v69[1] = v65;
  swift_bridgeObjectRelease();
  return sub_22D0D7F64((uint64_t)v20, type metadata accessor for PBHKMedicationDispenseRecord);
}

id sub_22D0D77E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D0D80C8(0, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v50 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (uint64_t)&v46 - v7;
  sub_22D0D80C8(0, &qword_26AEC0F48, MEMORY[0x263F07490]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for PBDateRange(0);
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v49 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2BBFE0();
  uint64_t v17 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if (qword_26853D070 != -1) {
    swift_once();
  }
  *(void *)(a2 + v17) = qword_268540368;
  swift_retain();
  id v18 = objc_msgSend(a1, sel_instruction);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v16;
    uint64_t v21 = sub_22D2BCBD0();
    uint64_t v23 = v22;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBMedicationDosage._StorageClass(0);
      swift_allocObject();
      uint64_t v24 = swift_retain();
      *(void *)(a2 + v17) = sub_22D17ED00(v24);
      swift_release();
    }
    uint64_t v25 = *(void *)(a2 + v17);
    swift_beginAccess();
    *(void *)(v25 + 16) = v21;
    *(void *)(v25 + 24) = v23;
    swift_bridgeObjectRelease();
    uint64_t v16 = v20;
  }
  id result = objc_msgSend(a1, sel_timingPeriod);
  if (result)
  {
    uint64_t v27 = result;
    id v28 = objc_msgSend(result, sel_startDate);
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = (void *)sub_22D2BBD30();
      id v31 = objc_msgSend(v29, sel_adjustedDateForCalendar_, v30);

      sub_22D2BBC00();
      uint64_t v32 = sub_22D2BBC30();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v13, 0, 1, v32);
    }
    else
    {
      uint64_t v33 = sub_22D2BBC30();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v13, 1, 1, v33);
    }
    id v34 = objc_msgSend(v27, sel_endDate);
    if (v34)
    {
      uint64_t v35 = v34;
      uint64_t v36 = (void *)sub_22D2BBD30();
      id v37 = objc_msgSend(v35, sel_adjustedDateForCalendar_, v36);

      sub_22D2BBC00();
      uint64_t v38 = sub_22D2BBC30();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v11, 0, 1, v38);
    }
    else
    {
      uint64_t v39 = sub_22D2BBC30();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v11, 1, 1, v39);
    }
    sub_22D24D984(v13, v11);
    uint64_t v40 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_22D0D811C((uint64_t)v11, &qword_26AEC0F48, MEMORY[0x263F07490]);
    sub_22D0D811C((uint64_t)v13, &qword_26AEC0F48, v40);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBMedicationDosage._StorageClass(0);
      swift_allocObject();
      uint64_t v41 = swift_retain();
      *(void *)(a2 + v17) = sub_22D17ED00(v41);
      swift_release();
    }
    uint64_t v42 = *(void *)(a2 + v17);
    uint64_t v43 = v47;
    sub_22D0D7FC4((uint64_t)v16, v47, type metadata accessor for PBDateRange);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v43, 0, 1, v49);
    uint64_t v44 = v50;
    sub_22D0D7E10(v43, v50, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    uint64_t v45 = v42
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
    swift_beginAccess();
    swift_retain();
    sub_22D0D802C(v44, v45, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    swift_endAccess();

    return (id)swift_release();
  }
  return result;
}

uint64_t sub_22D0D7E10(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D0D80C8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D0D7E7C(uint64_t a1, uint64_t a2)
{
  sub_22D0D80C8(0, &qword_26853F310, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0D7EFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D0D7F64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D0D7FC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D0D802C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D0D80C8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

id sub_22D0D8098@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0D77E4(*a1, a2);
}

void sub_22D0D80C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D0D811C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D0D80C8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id sub_22D0D8178@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0AC3D0(a1, a2);
}

unint64_t sub_22D0D8190()
{
  uint64_t v1 = v0;
  sub_22D0D9964();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22D2BFF40;
  *(void *)(inited + 32) = 0x746E6569746170;
  *(void *)(inited + 40) = 0xE700000000000000;
  uint64_t v3 = v1[1];
  *(void *)(inited + 48) = *v1;
  *(void *)(inited + 56) = v3;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_22D0D33B4(inited);
  uint64_t v5 = v1[5];
  if (v5)
  {
    uint64_t v6 = v1[4];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053A8C(v6, v5, 1734431845, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v1[3];
  if (v8)
  {
    uint64_t v9 = v1[2];
    swift_bridgeObjectRetain();
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053A8C(v9, v8, 0x656372756F736572, 0xEA00000000004449, v10);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v1[9];
  if (v11)
  {
    uint64_t v12 = v1[8];
    swift_bridgeObjectRetain();
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053A8C(v12, v11, 0x44494C44746F6F72, 0xE800000000000000, v13);
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v1[7];
  if (v14)
  {
    uint64_t v15 = v1[6];
    uint64_t v16 = v14;
  }
  else
  {
    uint64_t v16 = 0xE100000000000000;
    uint64_t v15 = 45;
  }
  swift_bridgeObjectRetain();
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_22D053A8C(v15, v16, 0xD000000000000015, 0x800000022D2D57F0, v17);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22D0D8370()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22D0D83A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22D0D83D0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t sub_22D0D8408(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

id sub_22D0D8440()
{
  return *(id *)(v0 + 80);
}

id sub_22D0D8448()
{
  return *(id *)(v0 + 88);
}

id sub_22D0D8450()
{
  return *(id *)(v0 + 96);
}

id sub_22D0D8458()
{
  return *(id *)(v0 + 104);
}

uint64_t sub_22D0D8464(_OWORD *a1, long long *a2)
{
  long long v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  long long v3 = a1[6];
  long long v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  long long v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  long long v6 = *a2;
  long long v7 = a2[1];
  v13[6] = v3;
  v14[0] = v6;
  long long v8 = a2[2];
  long long v9 = a2[3];
  long long v10 = a2[6];
  v14[5] = a2[5];
  v14[6] = v10;
  long long v11 = a2[4];
  v14[3] = v9;
  v14[4] = v11;
  v14[1] = v7;
  v14[2] = v8;
  return sub_22D0D86C8(v13, v14) & 1;
}

unint64_t sub_22D0D84CC()
{
  uint64_t v1 = v0;
  sub_22D0D9964();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22D2BFF40;
  *(void *)(inited + 32) = 0x746E6569746170;
  *(void *)(inited + 40) = 0xE700000000000000;
  uint64_t v3 = v1[1];
  *(void *)(inited + 48) = *v1;
  *(void *)(inited + 56) = v3;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_22D0D33B4(inited);
  uint64_t v5 = v1[5];
  if (v5)
  {
    uint64_t v6 = v1[4];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053A8C(v6, v5, 1734431845, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v1[3];
  if (v8)
  {
    uint64_t v9 = v1[2];
    swift_bridgeObjectRetain();
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053A8C(v9, v8, 0x656372756F736572, 0xEA00000000004449, v10);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v1[7];
  if (v11)
  {
    uint64_t v12 = v1[6];
    uint64_t v13 = v11;
  }
  else
  {
    uint64_t v13 = 0xE100000000000000;
    uint64_t v12 = 45;
  }
  swift_bridgeObjectRetain();
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_22D053A8C(v12, v13, 0xD000000000000015, 0x800000022D2D57F0, v14);
  swift_bridgeObjectRelease();
  return v4;
}

id sub_22D0D8658()
{
  return *(id *)(v0 + 64);
}

id sub_22D0D8660()
{
  return *(id *)(v0 + 72);
}

uint64_t sub_22D0D866C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  long long v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  long long v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  long long v5 = a2[3];
  void v10[2] = a2[2];
  v10[3] = v5;
  long long v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  long long v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_22D0D8868(v9, v10) & 1;
}

uint64_t sub_22D0D86C8(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_22D2BD660() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[3];
  if (v5)
  {
    if (!v6) {
      return 0;
    }
    BOOL v7 = a1[2] == a2[2] && v5 == v6;
    if (!v7 && (sub_22D2BD660() & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  uint64_t v8 = a1[5];
  uint64_t v9 = a2[5];
  if (v8)
  {
    if (!v9 || (a1[4] != a2[4] || v8 != v9) && (sub_22D2BD660() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  uint64_t v10 = a1[7];
  uint64_t v11 = a2[7];
  if (v10)
  {
    if (!v11 || (a1[6] != a2[6] || v10 != v11) && (sub_22D2BD660() & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  uint64_t v12 = a1[9];
  uint64_t v13 = a2[9];
  if (v12)
  {
    if (!v13 || (a1[8] != a2[8] || v12 != v13) && (sub_22D2BD660() & 1) == 0) {
      return 0;
    }
  }
  else if (v13)
  {
    return 0;
  }
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
  if (sub_22D2BD1A0() & 1) != 0 && (sub_22D2BD1A0() & 1) != 0 && (sub_22D2BD1A0()) {
    return sub_22D2BD1A0() & 1;
  }
  return 0;
}

uint64_t sub_22D0D8868(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_22D2BD660() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[3];
  if (v5)
  {
    if (!v6) {
      return 0;
    }
    BOOL v7 = a1[2] == a2[2] && v5 == v6;
    if (!v7 && (sub_22D2BD660() & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  uint64_t v8 = a1[5];
  uint64_t v9 = a2[5];
  if (v8)
  {
    if (!v9 || (a1[4] != a2[4] || v8 != v9) && (sub_22D2BD660() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  uint64_t v10 = a1[7];
  uint64_t v11 = a2[7];
  if (v10)
  {
    if (!v11 || (a1[6] != a2[6] || v10 != v11) && (sub_22D2BD660() & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
  if (sub_22D2BD1A0() & 1) != 0 && (sub_22D2BD1A0() & 1) != 0 && (sub_22D2BD1A0()) {
    return sub_22D2BD1A0() & 1;
  }
  return 0;
}

void *sub_22D0D89CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22D2BD470();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          id v10 = (id)MEMORY[0x230F7AF90](v4 - 4, v7);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v10 = *(id *)(v7 + 8 * v4);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        uint64_t v14 = a3;
        id v15 = objc_msgSend(v10, sel_name, v22);
        uint64_t v16 = sub_22D2BCBD0();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = sub_22D2BD660();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }

        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_22D0D8B74(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_22D2BD470())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F7AF90](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_name);
      uint64_t v8 = sub_22D2BCBD0();
      uint64_t v10 = v9;
      if (v8 == sub_22D2BCBD0() && v10 == v11)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        return v5;
      }
      char v13 = sub_22D2BD660();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_16;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_22D0D8D18(void *a1@<X0>, id a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v10 = (void *)*MEMORY[0x263F45B68];
  id v11 = objc_msgSend(a1, sel_features);
  if (!v11) {
    goto LABEL_8;
  }
  uint64_t v12 = v11;
  sub_22D030474(0, &qword_26853F320);
  unint64_t v13 = sub_22D2BCE00();

  id v14 = v10;
  uint64_t v5 = sub_22D0D8B74(v13);
  swift_bridgeObjectRelease();

  if (!v5)
  {
LABEL_8:
    sub_22D0B0DD0();
    swift_allocError();
    *(void *)uint64_t v28 = v10;
    *(void *)(v28 + 8) = 0;
    *(unsigned char *)(v28 + 16) = 2;
    id v29 = v10;
    swift_willThrow();
    LODWORD(v17) = 0;
LABEL_9:
    int v30 = 0;
    int v31 = 0;
    goto LABEL_10;
  }
  id v37 = a2;
  id v15 = objc_msgSend(v5, sel_interactions);
  sub_22D030474(0, (unint64_t *)&qword_26853F328);
  unint64_t v16 = sub_22D2BCE00();

  id v6 = (id)0xD000000000000015;
  uint64_t v17 = sub_22D0D89CC(v16, 0xD000000000000015, 0x800000022D2D7D20);
  a2 = v4;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    sub_22D0B0DD0();
    swift_allocError();
    *(void *)uint64_t v32 = 0xD000000000000015;
    *(void *)(v32 + 8) = 0x800000022D2D7D20;
    *(unsigned char *)(v32 + 16) = 3;
    swift_willThrow();

    goto LABEL_9;
  }
  uint64_t v36 = a4;
  id v38 = v17;
  id v18 = objc_msgSend(v5, sel_interactions);
  unint64_t v19 = sub_22D2BCE00();

  char v20 = sub_22D0D89CC(v19, 0xD000000000000017, 0x800000022D2D7D40);
  id v6 = v4;
  swift_bridgeObjectRelease();
  if (v20)
  {
    a2 = v20;
    id v21 = objc_msgSend(v5, sel_interactions);
    unint64_t v22 = sub_22D2BCE00();

    id v6 = sub_22D0D89CC(v22, 0xD000000000000017, 0x800000022D2D7D60);
    swift_bridgeObjectRelease();
    if (v6)
    {
      id v6 = v6;
      id v23 = objc_msgSend(v5, sel_interactions);
      unint64_t v24 = sub_22D2BCE00();

      uint64_t v25 = sub_22D0D89CC(v24, 0xD000000000000017, 0x800000022D2D7D80);
      swift_bridgeObjectRelease();
      if (v25)
      {

        swift_bridgeObjectRetain_n();
        id v26 = v38;
        id v27 = a2;

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        *(void *)uint64_t v36 = v37;
        *(void *)(v36 + 8) = a3;
        *(_OWORD *)(v36 + 16) = 0u;
        *(_OWORD *)(v36 + 32) = 0u;
        *(_OWORD *)(v36 + 48) = 0u;
        *(_OWORD *)(v36 + 64) = 0u;
        *(void *)(v36 + 80) = v26;
        *(void *)(v36 + 88) = v27;
        *(void *)(v36 + 96) = v6;
        *(void *)(v36 + 104) = v25;
        return;
      }
      sub_22D0B0DD0();
      swift_allocError();
      *(void *)uint64_t v35 = 0xD000000000000017;
      *(void *)(v35 + 8) = 0x800000022D2D7D80;
      *(unsigned char *)(v35 + 16) = 3;
      swift_willThrow();

      uint64_t v5 = v38;
      LODWORD(v17) = 1;
      int v30 = 1;
      int v31 = 1;
    }
    else
    {
      sub_22D0B0DD0();
      swift_allocError();
      *(void *)uint64_t v34 = 0xD000000000000017;
      *(void *)(v34 + 8) = 0x800000022D2D7D60;
      *(unsigned char *)(v34 + 16) = 3;
      swift_willThrow();

      uint64_t v5 = v38;
      int v31 = 0;
      LODWORD(v17) = 1;
      int v30 = 1;
    }
  }
  else
  {
    sub_22D0B0DD0();
    swift_allocError();
    *(void *)uint64_t v33 = 0xD000000000000017;
    *(void *)(v33 + 8) = 0x800000022D2D7D40;
    *(unsigned char *)(v33 + 16) = 3;
    swift_willThrow();

    uint64_t v5 = v38;
    int v30 = 0;
    int v31 = 0;
    LODWORD(v17) = 1;
  }
LABEL_10:
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v17)
  {

    if (!v30) {
      goto LABEL_12;
    }
  }
  else if (!v30)
  {
LABEL_12:
    if (!v31) {
      return;
    }
    goto LABEL_13;
  }

  if (v31) {
LABEL_13:
  }
}

void destroy for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 88);
}

void *initializeWithCopy for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  id v7 = (void *)a2[8];
  uint64_t v8 = (void *)a2[9];
  a1[8] = v7;
  a1[9] = v8;
  uint64_t v9 = (void *)a2[10];
  uint64_t v10 = (void *)a2[11];
  a1[10] = v9;
  a1[11] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v7;
  id v12 = v8;
  id v13 = v9;
  id v14 = v10;
  return a1;
}

void *assignWithCopy for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[8];
  uint64_t v5 = (void *)a1[8];
  a1[8] = v4;
  id v6 = v4;

  id v7 = (void *)a2[9];
  uint64_t v8 = (void *)a1[9];
  a1[9] = v7;
  id v9 = v7;

  uint64_t v10 = (void *)a2[10];
  id v11 = (void *)a1[10];
  a1[10] = v10;
  id v12 = v10;

  id v13 = (void *)a2[11];
  id v14 = (void *)a1[11];
  a1[11] = v13;
  id v15 = v13;

  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  uint64_t v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  id v9 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator()
{
  return &type metadata for ClinicalSharingDocumentReferenceForDataAvailabilityIndicator;
}

void destroy for ClinicalSharingDocumentReferenceForLookupInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v2 = *(void **)(a1 + 104);
}

void *initializeWithCopy for ClinicalSharingDocumentReferenceForLookupInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = (void *)a2[10];
  id v9 = (void *)a2[11];
  a1[10] = v8;
  a1[11] = v9;
  uint64_t v10 = (void *)a2[12];
  id v11 = (void *)a2[13];
  a1[12] = v10;
  a1[13] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v8;
  id v13 = v9;
  id v14 = v10;
  id v15 = v11;
  return a1;
}

void *assignWithCopy for ClinicalSharingDocumentReferenceForLookupInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[10];
  uint64_t v5 = (void *)a1[10];
  a1[10] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[11];
  uint64_t v8 = (void *)a1[11];
  a1[11] = v7;
  id v9 = v7;

  uint64_t v10 = (void *)a2[12];
  id v11 = (void *)a1[12];
  a1[12] = v10;
  id v12 = v10;

  id v13 = (void *)a2[13];
  id v14 = (void *)a1[13];
  a1[13] = v13;
  id v15 = v13;

  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ClinicalSharingDocumentReferenceForLookupInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  id v9 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  uint64_t v10 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingDocumentReferenceForLookupInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingDocumentReferenceForLookupInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingDocumentReferenceForLookupInfo()
{
  return &type metadata for ClinicalSharingDocumentReferenceForLookupInfo;
}

void sub_22D0D9964()
{
  if (!qword_26853F330)
  {
    sub_22D0D99BC();
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853F330);
    }
  }
}

void sub_22D0D99BC()
{
  if (!qword_26853F338)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853F338);
    }
  }
}

id sub_22D0D9A20@<X0>(uint64_t a1@<X8>)
{
  id result = objc_msgSend(v1, sel_code);
  char v4 = 0;
  char v5 = 1;
  uint64_t v6 = 12;
  switch((unint64_t)result)
  {
    case 0uLL:
      char v4 = 0;
      uint64_t v6 = 1;
      break;
    case 3uLL:
      char v4 = 0;
      uint64_t v6 = 4;
      break;
    case 5uLL:
      char v4 = 0;
      uint64_t v6 = 32;
      break;
    case 7uLL:
      char v4 = 0;
      uint64_t v6 = 7;
      break;
    case 0xAuLL:
      break;
    case 0xFuLL:
      char v4 = 0;
      uint64_t v6 = 30;
      break;
    case 0x10uLL:
      char v4 = 0;
      uint64_t v6 = 27;
      break;
    case 0x11uLL:
      char v4 = 0;
      uint64_t v6 = 28;
      break;
    case 0x39uLL:
      char v4 = 0;
      uint64_t v6 = 83;
      break;
    case 0x3FuLL:
      char v4 = 0;
      uint64_t v6 = 84;
      break;
    case 0x4BuLL:
      char v4 = 0;
      uint64_t v6 = 15;
      break;
    case 0x64uLL:
      char v4 = 0;
      uint64_t v6 = 111;
      break;
    case 0x76uLL:
      char v4 = 0;
      uint64_t v6 = 34;
      break;
    case 0x7CuLL:
      char v4 = 0;
      uint64_t v6 = 19;
      break;
    case 0x7EuLL:
    case 0x7FuLL:
    case 0x80uLL:
      char v4 = 0;
      uint64_t v6 = 103;
      break;
    case 0x81uLL:
      char v4 = 0;
      uint64_t v6 = 102;
      break;
    case 0x83uLL:
      char v4 = 0;
      uint64_t v6 = 101;
      break;
    case 0x89uLL:
      char v4 = 0;
      uint64_t v6 = 35;
      break;
    case 0x8CuLL:
      char v4 = 0;
      uint64_t v6 = 92;
      break;
    case 0x90uLL:
      char v4 = 0;
      uint64_t v6 = 97;
      break;
    case 0x93uLL:
      char v4 = 0;
      uint64_t v6 = 93;
      break;
    case 0x9CuLL:
      char v4 = 0;
      uint64_t v6 = 94;
      break;
    case 0xB6uLL:
      char v4 = 0;
      uint64_t v6 = 119;
      break;
    case 0xB7uLL:
      char v4 = 0;
      uint64_t v6 = 122;
      break;
    case 0xBBuLL:
      char v4 = 0;
      uint64_t v6 = 117;
      break;
    case 0xBCuLL:
      char v4 = 0;
      uint64_t v6 = 118;
      break;
    case 0xC2uLL:
      char v4 = 0;
      uint64_t v6 = 124;
      break;
    case 0xC3uLL:
      char v4 = 0;
      uint64_t v6 = 120;
      break;
    case 0xC4uLL:
      char v4 = 0;
      uint64_t v6 = 121;
      break;
    case 0xF9uLL:
      char v4 = 0;
      uint64_t v6 = 123;
      break;
    case 0xFAuLL:
      char v4 = 0;
      uint64_t v6 = 126;
      break;
    default:
      uint64_t v6 = 0;
      char v5 = 0;
      char v4 = 1;
      break;
  }
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 9) = v4;
  return result;
}

id sub_22D0DA024()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalSharingServer()
{
  return self;
}

void sub_22D0DA0D8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, id))
{
  if (a2)
  {
    swift_getErrorValue();
    id v5 = sub_22D1E4268(v6, v7);
  }
  else
  {
    id v5 = 0;
  }
  a3(a1, v5);
}

void sub_22D0DA388(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, id))
{
  if (a2)
  {
    swift_getErrorValue();
    id v5 = sub_22D1E4268(v6, v7);
  }
  else
  {
    id v5 = 0;
  }
  a3(a1, v5);
}

void sub_22D0DA53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F06EA8];
  sub_22D0DCC44(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v14 - v8;
  sub_22D0DCCA8(a1, (uint64_t)&v14 - v8, (unint64_t *)&qword_26AEC0F28, v6);
  uint64_t v10 = sub_22D2BBAA0();
  uint64_t v11 = *(void *)(v10 - 8);
  id v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    id v12 = (void *)sub_22D2BBA10();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  if (a2) {
    id v13 = (void *)sub_22D2BB9B0();
  }
  else {
    id v13 = 0;
  }
  (*(void (**)(uint64_t, void *, void *))(a3 + 16))(a3, v12, v13);
}

uint64_t sub_22D0DA6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v47 = a1;
  sub_22D071D68();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0DB8C8();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22D2BBC30();
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_22D2BC390();
  __swift_project_value_buffer(v16, (uint64_t)qword_26AEC3C90);
  uint64_t v17 = v2;
  id v18 = sub_22D2BC380();
  os_log_type_t v19 = sub_22D2BD080();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v45 = v7;
    id v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v42 = v22;
    uint64_t v43 = v12;
    *(_DWORD *)id v21 = 136315138;
    v52[0] = v22;
    v40[1] = v21 + 4;
    uint64_t v41 = v21;
    id v23 = v9;
    uint64_t v24 = v6;
    id v25 = *(id *)&v17[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
    id v26 = objc_msgSend(v25, sel_description);
    uint64_t v27 = sub_22D2BCBD0();
    uint64_t v44 = v15;
    unint64_t v29 = v28;

    uint64_t v6 = v24;
    id v9 = v23;

    uint64_t v51 = sub_22D0A4D24(v27, v29, v52);
    id v12 = v43;
    sub_22D2BD220();

    id v15 = v44;
    swift_bridgeObjectRelease();
    os_log_type_t v30 = v19;
    int v31 = v41;
    _os_log_impl(&dword_22CFEE000, v18, v30, "Submitting clinical sharing daily analytics on behalf of %s", v41, 0xCu);
    uint64_t v32 = v42;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v32, -1, -1);
    uint64_t v7 = v45;
    MEMORY[0x230F7BDF0](v31, -1, -1);
  }
  else
  {
  }
  uint64_t v33 = __swift_project_boxed_opaque_existential_1(&v17[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(void *)&v17[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider + 24]);
  sub_22CFF4B00(*v33 + 16, (uint64_t)v52);
  sub_22D2BBC20();
  sub_22D0DEE80(v52, (uint64_t)v12, (uint64_t)v15);
  v52[0] = sub_22D0DF194();
  sub_22D071E04();
  sub_22D0DB95C(&qword_26AEC1D50, (void (*)(uint64_t))sub_22D071E04);
  uint64_t v34 = v46;
  sub_22D2BC780();
  swift_release();
  sub_22D0DB95C((unint64_t *)&unk_26AEC1C90, (void (*)(uint64_t))sub_22D071D68);
  uint64_t v35 = v49;
  uint64_t v36 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v35);
  v52[0] = v36;
  sub_22D0C18EC();
  sub_22D0DB95C((unint64_t *)&qword_26AEC1DD0, (void (*)(uint64_t))sub_22D0C18EC);
  sub_22D2BC750();
  swift_release();
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = v50;
  *(void *)(v37 + 16) = v47;
  *(void *)(v37 + 24) = v38;
  sub_22D0DB95C((unint64_t *)&unk_26AEC2098, (void (*)(uint64_t))sub_22D0DB8C8);
  swift_retain();
  sub_22D2BC790();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_22D2BC5F0();
  swift_endAccess();
  swift_release();
  return sub_22D0DBA94((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
}

uint64_t sub_22D0DAD90(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v61 = a6;
  uint64_t v62 = a3;
  uint64_t v58 = a5;
  uint64_t v55 = a1;
  sub_22D071D68();
  uint64_t v54 = v9;
  uint64_t v59 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v57 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0DB8C8();
  uint64_t v12 = v11;
  uint64_t v60 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v56 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_22D2BBC30();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  MEMORY[0x270FA5388](v17 - 8);
  os_log_type_t v19 = (uint64_t *)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_22D2BC390();
  __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
  id v21 = v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v22 = (char *)v21;
  id v23 = sub_22D2BC380();
  os_log_type_t v24 = sub_22D2BD080();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    int v50 = v25;
    uint64_t v27 = v26;
    uint64_t v49 = swift_slowAlloc();
    v64[0] = v49;
    *(_DWORD *)uint64_t v27 = 136315650;
    id v28 = *(id *)&v22[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
    uint64_t v53 = v12;
    id v29 = v28;
    id v30 = objc_msgSend(v28, sel_description);
    uint64_t v51 = v16;
    id v31 = v30;
    uint64_t v32 = sub_22D2BCBD0();
    unint64_t v52 = a4;
    uint64_t v33 = v32;
    unint64_t v34 = a2;
    unint64_t v36 = v35;

    uint64_t v63 = sub_22D0A4D24(v33, v36, v64);
    sub_22D2BD220();

    a2 = v34;
    uint64_t v37 = v62;
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v38 = v55;
    uint64_t v63 = sub_22D0A4D24(v55, a2, v64);
    sub_22D2BD220();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 22) = 2080;
    a4 = v52;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_22D0A4D24(v37, a4, v64);
    uint64_t v12 = v53;
    uint64_t v16 = v51;
    sub_22D2BD220();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22CFEE000, v23, (os_log_type_t)v50, "Submitting clinical sharing onboarding analytics on behalf of %s: \"%s:%s\"", (uint8_t *)v27, 0x20u);
    uint64_t v39 = v49;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v39, -1, -1);
    MEMORY[0x230F7BDF0](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    uint64_t v38 = v55;
  }
  uint64_t v40 = __swift_project_boxed_opaque_existential_1(&v22[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(void *)&v22[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider + 24]);
  sub_22CFF4B00(*v40 + 16, (uint64_t)v64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22D2BBC20();
  sub_22D223058((uint64_t)v64, v38, a2, v62, a4, (uint64_t)v16, v19);
  v64[0] = sub_22D2232B0();
  sub_22D071E04();
  sub_22D0DB95C(&qword_26AEC1D50, (void (*)(uint64_t))sub_22D071E04);
  uint64_t v41 = v57;
  sub_22D2BC780();
  swift_release();
  sub_22D0DB95C((unint64_t *)&unk_26AEC1C90, (void (*)(uint64_t))sub_22D071D68);
  uint64_t v42 = v54;
  uint64_t v43 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v42);
  v64[0] = v43;
  sub_22D0C18EC();
  sub_22D0DB95C((unint64_t *)&qword_26AEC1DD0, (void (*)(uint64_t))sub_22D0C18EC);
  uint64_t v44 = v56;
  sub_22D2BC750();
  swift_release();
  uint64_t v45 = swift_allocObject();
  uint64_t v46 = v61;
  *(void *)(v45 + 16) = v58;
  *(void *)(v45 + 24) = v46;
  sub_22D0DB95C((unint64_t *)&unk_26AEC2098, (void (*)(uint64_t))sub_22D0DB8C8);
  swift_retain();
  sub_22D2BC790();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v12);
  swift_beginAccess();
  sub_22D2BC5F0();
  swift_endAccess();
  swift_release();
  return sub_22D0DBA94((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
}

void sub_22D0DB4C8(void **a1, void (*a2)(uint64_t, void *), uint64_t a3, const char *a4)
{
  uint64_t v6 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_22D2BC390();
  __swift_project_value_buffer(v7, (uint64_t)qword_26AEC3C90);
  id v8 = v6;
  id v9 = v6;
  uint64_t v10 = sub_22D2BC380();
  os_log_type_t v11 = sub_22D2BD080();
  if (!os_log_type_enabled(v10, v11))
  {

    if (v6) {
      goto LABEL_5;
    }
LABEL_8:
    a2(1, 0);
    return;
  }
  uint64_t v12 = (uint8_t *)swift_slowAlloc();
  uint64_t v13 = swift_slowAlloc();
  uint64_t v22 = v13;
  *(_DWORD *)uint64_t v12 = 136315138;
  id v14 = v6;
  sub_22D0DB9C8();
  uint64_t v15 = sub_22D2BCC30();
  sub_22D0A4D24(v15, v16, &v22);
  sub_22D2BD220();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_22CFEE000, v10, v11, a4, v12, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x230F7BDF0](v13, -1, -1);
  MEMORY[0x230F7BDF0](v12, -1, -1);

  if (!v6) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v22 = (uint64_t)v6;
  id v17 = v6;
  id v18 = v6;
  sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
  uint64_t v19 = sub_22D2BD650();
  if (v19)
  {
    uint64_t v20 = (void *)v19;
  }
  else
  {
    uint64_t v20 = (void *)swift_allocError();
    uint64_t *v21 = v22;
  }
  a2(0, v20);
}

uint64_t sub_22D0DB888()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22D0DB8C0(char a1, uint64_t a2)
{
  sub_22D1FFEE4(a1, a2, *(void *)(v2 + 16));
}

void sub_22D0DB8C8()
{
  if (!qword_26AEC20A8)
  {
    sub_22D0C18EC();
    sub_22D0DB95C((unint64_t *)&qword_26AEC1DD0, (void (*)(uint64_t))sub_22D0C18EC);
    unint64_t v0 = sub_22D2BC400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC20A8);
    }
  }
}

uint64_t sub_22D0DB95C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D0DB9A4(void **a1)
{
  sub_22D0DB4C8(a1, *(void (**)(uint64_t, void *))(v1 + 16), *(void *)(v1 + 24), "Finished submitting clinical sharing onboarding analytics: %s");
}

void sub_22D0DB9C8()
{
  if (!qword_26AEC1D30)
  {
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v0 = sub_22D2BC5B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1D30);
    }
  }
}

uint64_t sub_22D0DBA38()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D0DBA70(void **a1)
{
  sub_22D0DB4C8(a1, *(void (**)(uint64_t, void *))(v1 + 16), *(void *)(v1 + 24), "Finished submitting clinical sharing daily analytics: %s");
}

uint64_t sub_22D0DBA94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_22D0DBAF4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v8 = sub_22D2BBC30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_22D0DCC44(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v35 - v14;
  sub_22D0DCCA8(a3, (uint64_t)&v35 - v14, &qword_26AEC0F48, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    _Block_copy(a5);
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
    uint64_t v42 = 0x2065746164202CLL;
    unint64_t v43 = 0xE700000000000000;
    _Block_copy(a5);
    sub_22D0DB95C(&qword_26853E9A8, MEMORY[0x263F07490]);
    sub_22D2BD630();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    uint64_t v16 = v42;
    unint64_t v17 = v43;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_22D2BC390();
  __swift_project_value_buffer(v18, (uint64_t)qword_26AEC3C90);
  uint64_t v19 = a4;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_22D2BC380();
  int v21 = sub_22D2BD080();
  if (os_log_type_enabled(v20, (os_log_type_t)v21))
  {
    uint64_t v36 = v16;
    int v38 = v21;
    uint64_t v39 = a3;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v42 = v37;
    *(_DWORD *)uint64_t v22 = 136315906;
    uint64_t v23 = sub_22D0BC6C4(&unk_26E05A488, v40);
    unint64_t v25 = v24;
    sub_22D0BC928(0, &qword_26AEC1F20, type metadata accessor for HKClinicalSharingOptions);
    swift_arrayDestroy();
    uint64_t v44 = sub_22D0A4D24(v23, v25, &v42);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    unint64_t v26 = 0xED00006E6F697461;
    uint64_t v27 = 0x7A69726F68747561;
    switch(v41)
    {
      case 1:
        break;
      case 2:
        unint64_t v26 = 0xE800000000000000;
        uint64_t v27 = 0x617461642D77656ELL;
        break;
      case 3:
        unint64_t v26 = 0xEA0000000000646ELL;
        uint64_t v27 = 0x756F72676B636162;
        break;
      case 4:
        unint64_t v26 = 0xE700000000000000;
        uint64_t v27 = 0x676E6974736574;
        break;
      case 5:
        unint64_t v26 = 0xEE00646574616974;
        uint64_t v27 = 0x696E692D72657375;
        break;
      case 6:
        unint64_t v26 = 0x800000022D2D6660;
        uint64_t v27 = 0xD000000000000010;
        break;
      default:
        unint64_t v26 = 0xE700000000000000;
        uint64_t v27 = 0x6E776F6E6B6E75;
        break;
    }
    uint64_t v44 = sub_22D0A4D24(v27, v26, &v42);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_22D0A4D24(v36, v17, &v42);
    sub_22D2BD220();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 32) = 2080;
    id v28 = *(id *)&v19[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
    id v29 = objc_msgSend(v28, sel_description);
    uint64_t v30 = sub_22D2BCBD0();
    unint64_t v32 = v31;

    uint64_t v44 = sub_22D0A4D24(v30, v32, &v42);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v20, (os_log_type_t)v38, "Sharing health data with options %s, reason \"%s\"%s on behalf of %s", (uint8_t *)v22, 0x2Au);
    uint64_t v33 = v37;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v33, -1, -1);
    MEMORY[0x230F7BDF0](v22, -1, -1);

    a3 = v39;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v34 = *(void **)(*__swift_project_boxed_opaque_existential_1(&v19[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(void *)&v19[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider+ 24])+ 56);
  _Block_copy(a5);
  swift_retain();
  sub_22D2A7C5C(v40, v41, a3, v34, (void (**)(void, void, void))a5);
  _Block_release(a5);
  swift_release();
  _Block_release(a5);
}

uint64_t sub_22D0DC170(uint64_t a1, void *a2, uint64_t a3)
{
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22D2BC390();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
  uint64_t v7 = a2;
  uint64_t v8 = sub_22D2BC380();
  os_log_type_t v9 = sub_22D2BD080();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v24 = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v12 = a1 - 1;
    uint64_t v23 = a3;
    uint64_t v22 = v11;
    unint64_t v13 = 0xED00006E6F697461;
    uint64_t v14 = 0x7A69726F68747561;
    switch(v12)
    {
      case 0:
        break;
      case 1:
        unint64_t v13 = 0xE800000000000000;
        uint64_t v14 = 0x617461642D77656ELL;
        break;
      case 2:
        unint64_t v13 = 0xEA0000000000646ELL;
        uint64_t v14 = 0x756F72676B636162;
        break;
      case 3:
        unint64_t v13 = 0xE700000000000000;
        uint64_t v14 = 0x676E6974736574;
        break;
      case 4:
        unint64_t v13 = 0xEE00646574616974;
        uint64_t v14 = 0x696E692D72657375;
        break;
      case 5:
        unint64_t v13 = 0x800000022D2D6660;
        uint64_t v14 = 0xD000000000000010;
        break;
      default:
        unint64_t v13 = 0xE700000000000000;
        uint64_t v14 = 0x6E776F6E6B6E75;
        break;
    }
    sub_22D0A4D24(v14, v13, &v24);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    id v15 = *(id *)&v7[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
    id v16 = objc_msgSend(v15, sel_description);
    uint64_t v17 = sub_22D2BCBD0();
    unint64_t v19 = v18;

    sub_22D0A4D24(v17, v19, &v24);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v8, v9, "Scheduling health data share with reason \"%s\" on behalf of %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v22, -1, -1);
    MEMORY[0x230F7BDF0](v10, -1, -1);

    a3 = v23;
  }
  else
  {
  }
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(&v7[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(void *)&v7[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider + 24]);
  uint64_t v24 = *(void *)(*(void *)(*(void *)(*v20 + 56) + 56) + 136);
  MEMORY[0x270FA5388](v20);
  sub_22D0DCC44(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  swift_retain();
  sub_22D2BBEE0();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a3 + 16))(a3, 1, 0);
}

uint64_t sub_22D0DC590(uint64_t a1, uint64_t a2, char *a3, void (**a4)(void, void, void))
{
  uint64_t v48 = a1;
  sub_22D0DCC44(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = &v44[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v44[-v11];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  uint64_t v14 = *(void **)&a3[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client];
  _Block_copy(a4);
  id v15 = objc_msgSend(v14, sel_process);
  unsigned int v16 = objc_msgSend(v15, sel_hasEntitlement_, *MEMORY[0x263F094B8]);

  if (v16)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_22D2BC390();
    __swift_project_value_buffer(v17, (uint64_t)qword_26AEC3C90);
    unint64_t v18 = a3;
    unint64_t v19 = sub_22D2BC380();
    os_log_type_t v20 = sub_22D2BD080();
    int v21 = v20;
    BOOL v22 = os_log_type_enabled(v19, v20);
    uint64_t v23 = v48;
    if (v22)
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v50 = v46;
      *(_DWORD *)uint64_t v24 = 136315394;
      int v45 = v21;
      uint64_t v25 = sub_22D0BC6C4(&unk_26E05A4C0, v23);
      uint64_t v47 = a2;
      uint64_t v26 = v25;
      unint64_t v28 = v27;
      sub_22D0BC928(0, (unint64_t *)&qword_26853F3C0, type metadata accessor for HKClinicalSharingQueryDiagnosticOptions);
      swift_arrayDestroy();
      uint64_t v49 = sub_22D0A4D24(v26, v28, &v50);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      id v29 = v14;
      id v30 = objc_msgSend(v29, sel_description);
      uint64_t v31 = sub_22D2BCBD0();
      unint64_t v33 = v32;

      a2 = v47;
      uint64_t v23 = v48;
      uint64_t v49 = sub_22D0A4D24(v31, v33, &v50);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v19, (os_log_type_t)v45, "Gathering query diagnostics with options %s on behalf of %s", (uint8_t *)v24, 0x16u);
      uint64_t v34 = v46;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v34, -1, -1);
      MEMORY[0x230F7BDF0](v24, -1, -1);
    }
    else
    {
    }
    __swift_project_boxed_opaque_existential_1(&v18[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider], *(void *)&v18[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider + 24]);
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_22D0DCBB8;
    *(void *)(v42 + 24) = v13;
    swift_retain();
    swift_retain();
    sub_22D2A5054(v23, a2, (uint64_t)sub_22D0DCC30, v42);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v35 = sub_22D2BBAA0();
    uint64_t v36 = *(void *)(v35 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v12, 1, 1, v35);
    uint64_t v37 = self;
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    sub_22D2BD310();
    swift_bridgeObjectRelease();
    uint64_t v50 = 0x20676E697373694DLL;
    unint64_t v51 = 0xE800000000000000;
    sub_22D2BCBD0();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D2BCCB0();
    int v38 = (void *)sub_22D2BCBA0();
    swift_bridgeObjectRelease();
    id v39 = objc_msgSend(v37, sel_hk_error_description_, 4, v38);

    sub_22D0DCCA8((uint64_t)v12, (uint64_t)v10, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
    uint64_t v40 = 0;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v36 + 48))(v10, 1, v35) != 1)
    {
      uint64_t v40 = (void *)sub_22D2BBA10();
      (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v10, v35);
    }
    uint64_t v41 = (void *)sub_22D2BB9B0();
    ((void (**)(void, void *, void *))a4)[2](a4, v40, v41);

    sub_22D0DCBC0((uint64_t)v12, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  }
  return swift_release();
}

void sub_22D0DCBB8(uint64_t a1, uint64_t a2)
{
  sub_22D0DA53C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_22D0DCBC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D0DCC44(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_22D0DCC30(uint64_t a1, uint64_t a2)
{
  sub_22D0DA388(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

void sub_22D0DCC38()
{
  sub_22D1ED56C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(double *)(v0 + 32));
}

void sub_22D0DCC44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D0DCCA8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D0DCC44(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

id sub_22D0DCD3C(void *a1)
{
  uint64_t v2 = (objc_class *)type metadata accessor for HealthRecordsIngestionServiceServer();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC19HealthRecordsDaemon35HealthRecordsIngestionServiceServer_cancellables] = MEMORY[0x263F8EE88];
  *(void *)&v3[OBJC_IVAR____TtC19HealthRecordsDaemon35HealthRecordsIngestionServiceServer_client] = a1;
  v6.receiver = v3;
  v6.super_class = v2;
  id v4 = a1;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_22D0DCDC8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IngestionServiceDaemonPlugin()
{
  return self;
}

uint64_t sub_22D0DCDFC()
{
  sub_22D0DCEB4();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22D2BFF40;
  uint64_t v1 = sub_22D2BCBD0();
  uint64_t v3 = v2;
  id v4 = (objc_class *)type metadata accessor for DefaultDaemonXPCService();
  id v5 = objc_allocWithZone(v4);
  id v6 = sub_22CFF5CCC(v1, v3, 0, 0, (uint64_t)sub_22D0DCD3C, 0);
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 64) = &off_26E05CF18;
  *(void *)(v0 + 32) = v6;
  return v0;
}

void sub_22D0DCEB4()
{
  if (!qword_26AEC1F88)
  {
    sub_22D056BD0();
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1F88);
    }
  }
}

uint64_t sub_22D0DCF0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  v33[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = MEMORY[0x263F8D6C8];
  sub_22D0DD780(0, &qword_26AEC2228, MEMORY[0x263F8D6C8], MEMORY[0x263EFDDE8]);
  uint64_t v5 = v4;
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - v6;
  sub_22D032290(0, &qword_26AEC2230);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v30 - v11;
  sub_22D0DD780(0, &qword_26AEC22C0, v3, MEMORY[0x263EFDEA0]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - v16;
  v33[0] = 0;
  id v18 = objc_msgSend(v2, sel_dateOfBirthComponentsWithError_, v33);
  if (v18)
  {
    unint64_t v19 = v18;
    id v20 = v33[0];
    int v21 = (void *)sub_22D2BBBC0();
    id v22 = objc_msgSend(v19, sel_hk_ageWithCurrentDate_, v21);

    v33[0] = v22;
    uint64_t v23 = MEMORY[0x263F8D6C8];
    sub_22D2BC6B0();
    sub_22CFF49FC();
    sub_22D2BC680();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_22D0DD71C(&qword_26AEC22B8, &qword_26AEC22C0, v23);
    uint64_t v24 = sub_22D2BC720();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    id v25 = v33[0];
    uint64_t v26 = (void *)sub_22D2BB9C0();

    swift_willThrow();
    v33[0] = v26;
    id v27 = v26;
    sub_22CFF49FC();
    uint64_t v28 = MEMORY[0x263F8D6C8];
    sub_22D2BC660();
    sub_22D0DD7F0((unint64_t *)&unk_26853F3D0, &qword_26AEC2228, v28);
    uint64_t v24 = sub_22D2BC720();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v5);
  }
  return v24;
}

uint64_t sub_22D0DD2D8()
{
  uint64_t v1 = v0;
  v32[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = MEMORY[0x263F8D310];
  sub_22D0DD780(0, &qword_26AEC2220, MEMORY[0x263F8D310], MEMORY[0x263EFDDE8]);
  uint64_t v4 = v3;
  uint64_t v31 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v30 - v5;
  sub_22D032290(0, &qword_26AEC1DE8);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v30 - v10;
  sub_22D0DD780(0, &qword_26AEC1FD0, v2, MEMORY[0x263EFDEA0]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v30 - v15;
  v32[0] = 0;
  id v17 = objc_msgSend(v1, sel_biologicalSexWithError_, v32);
  if (v17)
  {
    id v18 = v17;
    id v19 = v32[0];
    id v20 = objc_msgSend(v18, sel_biologicalSex);

    int v21 = (void *)0xE700000000000000;
    uint64_t v22 = 0x74657320746F6ELL;
    switch((unint64_t)v20)
    {
      case 0uLL:
        break;
      case 1uLL:
        int v21 = (void *)0xE600000000000000;
        uint64_t v22 = 0x656C616D6566;
        break;
      case 2uLL:
        int v21 = (void *)0xE400000000000000;
        uint64_t v22 = 1701601645;
        break;
      case 3uLL:
        int v21 = (void *)0xE500000000000000;
        uint64_t v22 = 0x726568746FLL;
        break;
      default:
        int v21 = (void *)0xE200000000000000;
        uint64_t v22 = 24942;
        break;
    }
    v32[0] = (id)v22;
    v32[1] = v21;
    uint64_t v28 = MEMORY[0x263F8D310];
    sub_22D2BC6B0();
    sub_22CFF49FC();
    sub_22D2BC680();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_22D0DD71C(&qword_26AEC1FC8, &qword_26AEC1FD0, v28);
    uint64_t v27 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    id v23 = v32[0];
    uint64_t v24 = (void *)sub_22D2BB9C0();

    swift_willThrow();
    v32[0] = v24;
    id v25 = v24;
    sub_22CFF49FC();
    uint64_t v26 = MEMORY[0x263F8D310];
    sub_22D2BC660();
    sub_22D0DD7F0(&qword_26853F3C8, &qword_26AEC2220, v26);
    uint64_t v27 = sub_22D2BC720();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v4);
  }
  return v27;
}

uint64_t sub_22D0DD71C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D0DD780(255, a2, a3, MEMORY[0x263EFDEA0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D0DD780(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v8 = sub_22CFF49FC();
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_22D0DD7F0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D0DD780(255, a2, a3, MEMORY[0x263EFDDE8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_22D0DD854()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_lock;
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_lock];
  sub_22D0DE988(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  sub_22D2BBEE0();
  MEMORY[0x230F7BDF0](*(void *)&v0[v1], -1, -1);
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ClinicalSharingSyncObserverServer();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_22D0DDA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client), sel_connection);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = a1;
    v13[3] = a2;
    v13[4] = a3;
    v13[5] = a4;
    v13[6] = a5;
    id v19 = sub_22D0DEC2C;
    id v20 = v13;
    *(void *)&long long v17 = MEMORY[0x263EF8330];
    *((void *)&v17 + 1) = 1107296256;
    *(void *)&long long v18 = sub_22D0DE920;
    *((void *)&v18 + 1) = &block_descriptor_11;
    uint64_t v14 = _Block_copy(&v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    id v15 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v14);
    _Block_release(v14);
    sub_22D2BD260();

    swift_unknownObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_22D0926B0((uint64_t)&v17, (uint64_t)v22);
  if (v23)
  {
    sub_22D0DEB94();
    if (swift_dynamicCast()) {
      return v21;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_22CFF5998((uint64_t)v22);
    return 0;
  }
}

uint64_t sub_22D0DDC28()
{
  return swift_release();
}

void sub_22D0DDDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x230F7BEC0](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_22D0DDF30(v2, v3);
  }
}

uint64_t sub_22D0DDE50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable;
  if (*(void *)(a1 + OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable))
  {
    swift_retain();
    sub_22D2BC600();
    swift_release();
  }
  *(void *)(a1 + v4) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_22D0DDEC4(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable;
  if (*(void *)(a1 + OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable))
  {
    swift_retain();
    sub_22D2BC600();
    swift_release();
  }
  *(void *)(a1 + v2) = 0;
  return swift_release();
}

void sub_22D0DDF30(void *a1, char a2)
{
  uint64_t v5 = sub_22D0DDA6C(0xD000000000000015, 0x800000022D2D7F50, 0xD000000000000092, 0x800000022D2D7F70, 63);
  if (v5)
  {
    uint64_t v6 = v5;
    if (!a2)
    {
      uint64_t v20 = qword_26AEC1C58;
      id v21 = a1;
      if (v20 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_22D2BC390();
      __swift_project_value_buffer(v22, (uint64_t)qword_26AEC3C90);
      sub_22D0DE9EC(a1, 0);
      id v23 = v2;
      sub_22D0DE9EC(a1, 0);
      uint64_t v24 = (char *)v23;
      id v25 = sub_22D2BC380();
      os_log_type_t v26 = sub_22D2BD080();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v47 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 138412546;
        loga = v25;
        uint64_t v28 = v6;
        id v29 = *(void **)&v24[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client];
        id v30 = v29;
        sub_22D2BD220();
        *uint64_t v47 = v29;
        uint64_t v6 = v28;

        *(_WORD *)(v27 + 12) = 2112;
        v50[0] = v21;
        id v31 = v21;
        sub_22D2BD220();
        v47[1] = a1;
        sub_22D0DE904(a1, 0);
        sub_22D0DE904(a1, 0);
        id v25 = loga;
        _os_log_impl(&dword_22CFEE000, loga, v26, "Delivering sync did start to %@: %@", (uint8_t *)v27, 0x16u);
        sub_22D0DE988(0, (unint64_t *)&qword_26AEC2288, (uint64_t (*)(uint64_t))sub_22D0B0E78, MEMORY[0x263F8D8F0]);
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v47, -1, -1);
        MEMORY[0x230F7BDF0](v27, -1, -1);
      }
      else
      {

        sub_22D0DE904(a1, 0);
        sub_22D0DE904(a1, 0);
      }

      [v6 client_syncDidStartWithInfo:v21];
      swift_unknownObjectRelease();
      uint64_t v32 = a1;
      unsigned __int8 v33 = 0;
      goto LABEL_27;
    }
    if (a2 == 1)
    {
      if (a1)
      {
        sub_22D0DE9EC(a1, 1u);
        id v7 = a1;
        if (qword_26AEC1C58 != -1) {
          swift_once();
        }
        uint64_t v8 = sub_22D2BC390();
        __swift_project_value_buffer(v8, (uint64_t)qword_26AEC3C90);
        sub_22D0DE9EC(a1, 1u);
        id v9 = v2;
        sub_22D0DE9EC(a1, 1u);
        uint64_t v10 = (char *)v9;
        id v11 = sub_22D2BC380();
        os_log_type_t v12 = sub_22D2BD080();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v14 = (void *)swift_slowAlloc();
          uint64_t v46 = (void *)swift_slowAlloc();
          v50[0] = v46;
          *(_DWORD *)uint64_t v13 = 138412546;
          os_log_t log = v6;
          id v15 = *(void **)&v10[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client];
          id v16 = v15;
          sub_22D2BD220();
          *uint64_t v14 = v15;

          *(_WORD *)(v13 + 12) = 2080;
          id v17 = a1;
          sub_22CFF49FC();
          uint64_t v18 = sub_22D2BCC30();
          sub_22D0A4D24(v18, v19, (uint64_t *)v50);
          uint64_t v6 = log;
          sub_22D2BD220();
          swift_bridgeObjectRelease();
          sub_22D0DE904(a1, 1u);
          sub_22D0DE904(a1, 1u);
          _os_log_impl(&dword_22CFEE000, v11, v12, "Delivering sync did finish to %@: %s", (uint8_t *)v13, 0x16u);
          sub_22D0DE988(0, (unint64_t *)&qword_26AEC2288, (uint64_t (*)(uint64_t))sub_22D0B0E78, MEMORY[0x263F8D8F0]);
          swift_arrayDestroy();
          MEMORY[0x230F7BDF0](v14, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x230F7BDF0](v46, -1, -1);
          MEMORY[0x230F7BDF0](v13, -1, -1);

          sub_22D0DE904(a1, 1u);
        }
        else
        {
          sub_22D0DE904(a1, 1u);

          sub_22D0DE904(a1, 1u);
          sub_22D0DE904(a1, 1u);
        }
        swift_getErrorValue();
        id v41 = v50[2];
        id v42 = v50[3];
        id v43 = a1;
        id v44 = sub_22D1E4268((uint64_t)v41, (uint64_t)v42);
        sub_22D0DE904(a1, 1u);
        int v45 = (void *)sub_22D2BB9B0();
      }
      else
      {
        if (qword_26AEC1C58 != -1) {
          swift_once();
        }
        uint64_t v34 = sub_22D2BC390();
        __swift_project_value_buffer(v34, (uint64_t)qword_26AEC3C90);
        uint64_t v35 = v2;
        uint64_t v36 = sub_22D2BC380();
        os_log_type_t v37 = sub_22D2BD080();
        if (os_log_type_enabled(v36, v37))
        {
          int v38 = (uint8_t *)swift_slowAlloc();
          id v39 = (id *)swift_slowAlloc();
          *(_DWORD *)int v38 = 138412290;
          v50[0] = *(id *)&v35[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client];
          id v40 = v50[0];
          sub_22D2BD220();
          *id v39 = v50[0];

          _os_log_impl(&dword_22CFEE000, v36, v37, "Delivering sync did finish to %@", v38, 0xCu);
          sub_22D0DE988(0, (unint64_t *)&qword_26AEC2288, (uint64_t (*)(uint64_t))sub_22D0B0E78, MEMORY[0x263F8D8F0]);
          swift_arrayDestroy();
          MEMORY[0x230F7BDF0](v39, -1, -1);
          MEMORY[0x230F7BDF0](v38, -1, -1);
        }
        else
        {
        }
        int v45 = 0;
      }
      -[NSObject client_syncDidFinishWithError:](v6, sel_client_syncDidFinishWithError_, v45, v46);
      swift_unknownObjectRelease();

      uint64_t v32 = a1;
      unsigned __int8 v33 = 1;
LABEL_27:
      sub_22D0DE904(v32, v33);
      return;
    }
    swift_unknownObjectRelease();
  }
}

uint64_t type metadata accessor for ClinicalSharingSyncObserverServer()
{
  return self;
}

uint64_t sub_22D0DE8FC()
{
  return sub_22D0DDEC4(*(void *)(v0 + 16));
}

void sub_22D0DE904(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
}
  }

void sub_22D0DE920(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_22D0DE988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_22D0DE9EC(id result, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

void sub_22D0DEA08()
{
  if (!qword_26AEC2F00)
  {
    unint64_t v0 = sub_22D2BC630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2F00);
    }
  }
}

uint64_t sub_22D0DEA70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0DEAB8()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22D0DEAF0(uint64_t a1)
{
  sub_22D0DDDE0(a1, v1);
}

void sub_22D0DEAF8()
{
  if (!qword_26853F470)
  {
    sub_22D0DEA08();
    sub_22D0DEA70(&qword_26853F468, (void (*)(uint64_t))sub_22D0DEA08);
    unint64_t v0 = sub_22D2BC4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853F470);
    }
  }
}

uint64_t sub_22D0DEB8C()
{
  return sub_22D0DDE50(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_22D0DEB94()
{
  unint64_t result = qword_26853F488;
  if (!qword_26853F488)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26853F488);
  }
  return result;
}

uint64_t sub_22D0DEBEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_22D0DEC2C(void *a1)
{
  sub_22D1F7FB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_22D0DEC58(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v18 = sub_22D2BBC90();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (!v7) {
      return v8;
    }
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t result = sub_22D24B7A4(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v19;
    v16[1] = v2;
    unint64_t v17 = a1 & 0xC000000000000001;
    unint64_t v11 = a1;
    while (v7 != v10)
    {
      if (v17) {
        id v12 = (id)MEMORY[0x230F7AF90](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_identifier);
      sub_22D2BBC70();

      uint64_t v19 = v8;
      unint64_t v2 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_22D24B7A4(v15 > 1, v2 + 1, 1);
        uint64_t v8 = v19;
      }
      ++v10;
      *(void *)(v8 + 16) = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v2, v6, v18);
      a1 = v11;
      if (v7 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_22D0DEE80@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v32 = sub_22D2BBC90();
  uint64_t v5 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4B00((uint64_t)a1, (uint64_t)v10);
  unint64_t v11 = &v10[v8[5]];
  uint64_t v12 = sub_22D2BBC30();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  id v14 = (void *)*__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v15 = objc_allocWithZone(MEMORY[0x263F0A470]);
  id v16 = v14;
  unint64_t v17 = (void *)sub_22D2BCBA0();
  id v18 = objc_msgSend(v15, sel_initWithCategory_domainName_healthStore_, 3, v17, v16);

  *(void *)&v10[v8[6]] = v18;
  v10[v8[7]] = HKImproveHealthAndActivityAnalyticsAllowed();
  uint64_t v35 = (uint64_t)v8;
  sub_22D0E4700();
  uint64_t v35 = sub_22D2BCC30();
  uint64_t v36 = v19;
  sub_22D2BCCB0();
  sub_22D2BBC80();
  sub_22D2BBC40();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v32);
  uint64_t v20 = sub_22D07051C(8);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  MEMORY[0x230F7A8B0](v20, v22, v24, v26);
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  uint64_t v27 = v35;
  uint64_t v28 = v36;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v33, v12);
  id v29 = &v10[v8[8]];
  *(void *)id v29 = v27;
  *((void *)v29 + 1) = v28;
  sub_22D0E3550((uint64_t)v10, v34, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_22D0DF194()
{
  uint64_t v1 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = MEMORY[0x263F8D4F8];
  sub_22D0E3EE4(0, &qword_26AEC20F8, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263F8D4F8], (void (*)(void))sub_22D0DFCE8);
  uint64_t v63 = v5;
  uint64_t v64 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v59 - v6;
  sub_22D0DFD64();
  uint64_t v66 = v7;
  uint64_t v67 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0DFFC0(0);
  uint64_t v68 = v9;
  uint64_t v69 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v62 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0E00E8(0);
  uint64_t v71 = v11;
  uint64_t v72 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v65 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0E0150(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v74 = v13;
  uint64_t v75 = v14;
  MEMORY[0x270FA5388](v13);
  id v87 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0DFFF4(0, &qword_26AEC21E8, sub_22D0E0150, (void (*)(void))sub_22D0E01B8);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v76 = v16;
  uint64_t v77 = v17;
  MEMORY[0x270FA5388](v16);
  id v70 = (char *)&v59 - v18;
  sub_22D0E01EC();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v78 = v19;
  uint64_t v79 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v73 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4B00(v0, (uint64_t)&v89);
  uint64_t v22 = swift_allocObject();
  sub_22CFF8C10(&v89, v22 + 16);
  sub_22D0DFE40(0, (unint64_t *)&qword_26AEC1E28, v4, MEMORY[0x263EFDE20]);
  swift_allocObject();
  *(void *)&long long v89 = sub_22D2BC6F0();
  sub_22D0E3160();
  uint64_t v23 = sub_22D2BC720();
  swift_release();
  *(void *)&long long v89 = v23;
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D0DFE40(0, (unint64_t *)&qword_26AEC1DE0, v4, MEMORY[0x263EFDCF0]);
  sub_22D0DFCE8();
  sub_22D2BC780();
  swift_release();
  uint64_t v88 = v0;
  uint64_t v81 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0E31DC(v0, v81);
  uint64_t v25 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v26 = (v25 + 16) & ~v25;
  uint64_t v83 = v26 + v3;
  uint64_t v84 = v25 | 7;
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v26;
  uint64_t v86 = v26;
  id v80 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask;
  sub_22D0E3550((uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  sub_22D2BC5D0();
  sub_22D0DFE40(0, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, v24);
  uint64_t v30 = v29;
  sub_22D0DFF3C();
  unint64_t v82 = sub_22D0DFEC0();
  uint64_t v31 = v61;
  uint64_t v32 = v63;
  uint64_t v85 = v30;
  uint64_t v33 = v60;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v33, v32);
  uint64_t v34 = v88;
  uint64_t v35 = v81;
  sub_22D0E31DC(v88, v81);
  uint64_t v36 = swift_allocObject();
  sub_22D0E3550(v35, v36 + v28, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  sub_22D2BC5D0();
  sub_22D0E00B4();
  os_log_type_t v37 = v62;
  uint64_t v38 = v66;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v31, v38);
  uint64_t v39 = v34;
  uint64_t v40 = v81;
  sub_22D0E31DC(v34, v81);
  uint64_t v41 = swift_allocObject();
  id v42 = v80;
  sub_22D0E3550(v40, v41 + v86, (uint64_t (*)(void))v80);
  sub_22D2BC5D0();
  sub_22D0E011C();
  id v43 = v65;
  uint64_t v44 = v68;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v37, v44);
  sub_22D0E31DC(v39, v40);
  uint64_t v45 = swift_allocObject();
  uint64_t v46 = v86;
  sub_22D0E3550(v40, v45 + v86, (uint64_t (*)(void))v42);
  sub_22D2BC5D0();
  sub_22D0E0184();
  uint64_t v47 = v71;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v47);
  sub_22D0E31DC(v88, v40);
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v80;
  sub_22D0E3550(v40, v48 + v46, (uint64_t (*)(void))v80);
  sub_22D2BC5D0();
  sub_22D0E01B8();
  uint64_t v50 = v70;
  uint64_t v51 = v74;
  unint64_t v52 = v87;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v52, v51);
  sub_22D0E31DC(v88, v40);
  uint64_t v53 = swift_allocObject();
  sub_22D0E3550(v40, v53 + v46, (uint64_t (*)(void))v49);
  sub_22D021C20(0, &qword_26AEC1270);
  sub_22D0E02A8();
  uint64_t v54 = v73;
  uint64_t v55 = v76;
  sub_22D2BC780();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v50, v55);
  sub_22D0E43D4(&qword_26AEC2120, (void (*)(uint64_t))sub_22D0E01EC);
  uint64_t v56 = v78;
  uint64_t v57 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v54, v56);
  return v57;
}

uint64_t type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask()
{
  uint64_t result = qword_26AEC1BB8;
  if (!qword_26AEC1BB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_22D0DFCE8()
{
  unint64_t result = qword_26AEC1DD0;
  if (!qword_26AEC1DD0)
  {
    sub_22D0DFE40(255, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263F8D4F8], MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1DD0);
  }
  return result;
}

void sub_22D0DFD64()
{
  if (!qword_26AEC21A8)
  {
    sub_22D0DFE40(255, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDCF0]);
    sub_22D0E3EE4(255, &qword_26AEC20F8, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263F8D4F8], (void (*)(void))sub_22D0DFCE8);
    sub_22D0DFEC0();
    sub_22D0DFF3C();
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC21A8);
    }
  }
}

void sub_22D0DFE40(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v8 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_22D0DFEC0()
{
  unint64_t result = qword_26AEC2200;
  if (!qword_26AEC2200)
  {
    sub_22D0DFE40(255, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2200);
  }
  return result;
}

unint64_t sub_22D0DFF3C()
{
  unint64_t result = qword_26AEC20F0;
  if (!qword_26AEC20F0)
  {
    sub_22D0E3EE4(255, &qword_26AEC20F8, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263F8D4F8], (void (*)(void))sub_22D0DFCE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC20F0);
  }
  return result;
}

void sub_22D0DFFC0(uint64_t a1)
{
}

void sub_22D0DFFF4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    sub_22D0DFE40(255, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_22D0DFEC0();
    a4();
    unint64_t v7 = sub_22D2BC520();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D0E00B4()
{
  return sub_22D0E43D4(&qword_26AEC21A0, (void (*)(uint64_t))sub_22D0DFD64);
}

void sub_22D0E00E8(uint64_t a1)
{
}

uint64_t sub_22D0E011C()
{
  return sub_22D0E43D4(&qword_26AEC21B0, sub_22D0DFFC0);
}

void sub_22D0E0150(uint64_t a1)
{
}

uint64_t sub_22D0E0184()
{
  return sub_22D0E43D4(&qword_26AEC21C0, sub_22D0E00E8);
}

uint64_t sub_22D0E01B8()
{
  return sub_22D0E43D4(&qword_26AEC21D0, sub_22D0E0150);
}

void sub_22D0E01EC()
{
  if (!qword_26AEC2128)
  {
    sub_22D0DFFF4(255, &qword_26AEC21E8, sub_22D0E0150, (void (*)(void))sub_22D0E01B8);
    sub_22D021C20(255, &qword_26AEC1270);
    sub_22D0E02A8();
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2128);
    }
  }
}

unint64_t sub_22D0E02A8()
{
  unint64_t result = qword_26AEC21E0;
  if (!qword_26AEC21E0)
  {
    sub_22D0DFFF4(255, &qword_26AEC21E8, sub_22D0E0150, (void (*)(void))sub_22D0E01B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC21E0);
  }
  return result;
}

double sub_22D0E0330@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = *a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_22D0E0354@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  sub_22D021DE0();
  uint64_t v63 = v6;
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v61 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0E4268();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v68 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0E3D50(0, &qword_26AEC2178, (void (*)(uint64_t))sub_22D0E4268, (void (*)(void))sub_22D0E4368);
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v67 = (char *)&v57 - v13;
  uint64_t v14 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  uint64_t v64 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v65 = v16;
  uint64_t v66 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v57 - v17;
  long long v19 = a1[1];
  long long v73 = *a1;
  long long v74 = v19;
  long long v20 = a1[3];
  long long v75 = a1[2];
  long long v76 = v20;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_22D2BC390();
  __swift_project_value_buffer(v21, (uint64_t)qword_26AEC3C90);
  sub_22D0E31DC((uint64_t)a2, (uint64_t)v18);
  uint64_t v22 = sub_22D2BC380();
  os_log_type_t v23 = sub_22D2BD050();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v60 = a3;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v58 = a2;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315138;
    v72[0] = v26;
    uint64_t v27 = (uint64_t *)&v18[*(int *)(v14 + 32)];
    uint64_t v59 = v10;
    uint64_t v28 = v9;
    uint64_t v29 = *v27;
    unint64_t v30 = v27[1];
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_22D0A4D24(v29, v30, v72);
    a3 = v60;
    sub_22D2BD220();
    uint64_t v9 = v28;
    uint64_t v10 = v59;
    swift_bridgeObjectRelease();
    sub_22D0E34F4((uint64_t)v18);
    _os_log_impl(&dword_22CFEE000, v22, v23, "%s Retrieving HKClinicalAccount list", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v26, -1, -1);
    uint64_t v31 = v25;
    a2 = v58;
    MEMORY[0x230F7BDF0](v31, -1, -1);
  }
  else
  {
    sub_22D0E34F4((uint64_t)v18);
  }

  uint64_t v32 = (void *)__swift_project_boxed_opaque_existential_1(a2, a2[3])[2];
  v72[3] = (uint64_t)&type metadata for ClinicalSharingAccountStore;
  v72[4] = (uint64_t)&off_26E05DAE8;
  v72[0] = (uint64_t)v32;
  uint64_t v33 = (void *)*__swift_project_boxed_opaque_existential_1(v72, (uint64_t)&type metadata for ClinicalSharingAccountStore);
  uint64_t v34 = (uint64_t)a2;
  *(void *)(swift_allocObject() + 16) = v33;
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDE20];
  sub_22D0E41E0(0, (unint64_t *)&qword_26AEC1E18, MEMORY[0x263EFDE20]);
  sub_22D0E4324((unint64_t *)&qword_26AEC1E10, (unint64_t *)&qword_26AEC1E18, v35);
  id v36 = v32;
  id v37 = v33;
  uint64_t v38 = v61;
  sub_22D2BC700();
  sub_22D0E43D4(&qword_26AEC1E30, (void (*)(uint64_t))sub_22D021DE0);
  uint64_t v39 = v63;
  uint64_t v40 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v39);
  uint64_t v71 = v40;
  uint64_t v41 = (_OWORD *)swift_allocObject();
  long long v42 = v74;
  v41[1] = v73;
  v41[2] = v42;
  long long v43 = v76;
  v41[3] = v75;
  v41[4] = v43;
  sub_22D0E37A0((uint64_t)&v73);
  uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D0E41E0(0, &qword_26AEC1DC8, MEMORY[0x263EFDCF0]);
  sub_22D0E4324((unint64_t *)&qword_26AEC1DC0, &qword_26AEC1DC8, v44);
  uint64_t v45 = v68;
  sub_22D2BC780();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  uint64_t v46 = v66;
  sub_22D0E31DC(v34, v66);
  unint64_t v47 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  unint64_t v48 = (v65 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  sub_22D0E3550(v46, v49 + v47, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  uint64_t v50 = (_OWORD *)(v49 + v48);
  long long v51 = v74;
  _OWORD *v50 = v73;
  v50[1] = v51;
  long long v52 = v76;
  v50[2] = v75;
  v50[3] = v52;
  sub_22D0E37A0((uint64_t)&v73);
  sub_22D0DFE40(0, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDCF0]);
  sub_22D0E4368();
  sub_22D0DFEC0();
  uint64_t v53 = v67;
  sub_22D2BC7A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v45, v9);
  sub_22D0E4678();
  uint64_t v54 = v70;
  uint64_t v55 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v53, v54);
  *a3 = v55;
  return result;
}

uint64_t sub_22D0E0B2C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)a3 = *(unsigned char *)a2;
  *(void *)(a3 + 8) = v3;
  *(void *)(a3 + 16) = v4;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a3 + 40) = v5;
  *(void *)(a3 + 48) = v7;
  *(void *)(a3 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0E0BA8@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v58 = a3;
  sub_22D0E3EE4(0, &qword_26AEC20C8, (unint64_t *)&qword_26AEC1D98, (uint64_t)&type metadata for ClinicalSharingAuthorizations, (void (*)(void))sub_22D019854);
  uint64_t v6 = v5;
  uint64_t v57 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (char *)&v48 - v7;
  sub_22D0E3F74();
  uint64_t v9 = v8;
  uint64_t v54 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v48 - v15;
  long long v17 = a1[1];
  long long v60 = *a1;
  long long v61 = v17;
  long long v18 = a1[3];
  long long v62 = a1[2];
  long long v63 = v18;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_22D2BC390();
  __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
  sub_22D0E31DC((uint64_t)a2, (uint64_t)v16);
  long long v20 = sub_22D2BC380();
  os_log_type_t v21 = sub_22D2BD050();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v51 = v9;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v50 = v6;
    os_log_type_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v49 = v14;
    *(_DWORD *)os_log_type_t v23 = 136315138;
    v65[0] = v24;
    uint64_t v25 = (uint64_t *)&v16[*(int *)(v11 + 32)];
    uint64_t v26 = *v25;
    unint64_t v27 = v25[1];
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_22D0A4D24(v26, v27, v65);
    uint64_t v9 = v51;
    uint64_t v14 = v49;
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D0E34F4((uint64_t)v16);
    _os_log_impl(&dword_22CFEE000, v20, v21, "%s Retrieving ClinicalSharingAuthorizations", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v24, -1, -1);
    uint64_t v28 = v23;
    uint64_t v6 = v50;
    MEMORY[0x230F7BDF0](v28, -1, -1);
  }
  else
  {
    sub_22D0E34F4((uint64_t)v16);
  }

  sub_22D0E3550((uint64_t)&v60 + 8, (uint64_t)&v64, (uint64_t (*)(void))sub_22D0E40D4);
  sub_22D0E3550((uint64_t)&v64, (uint64_t)v65, (uint64_t (*)(void))sub_22D0E40D4);
  unint64_t v29 = v65[0];
  if (v65[0])
  {
    sub_22D0E4188((uint64_t)&v64);
    unint64_t v30 = sub_22D06703C(v29);
    sub_22D0E41B4((uint64_t)&v64);
    uint64_t v31 = sub_22D0DEC58(v30);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
  }
  id v32 = (id)*__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v33 = sub_22D2A8F10(v31);

  swift_bridgeObjectRelease();
  uint64_t v59 = v33;
  uint64_t v34 = (_OWORD *)swift_allocObject();
  long long v35 = v61;
  v34[1] = v60;
  v34[2] = v35;
  long long v36 = v63;
  v34[3] = v62;
  v34[4] = v36;
  sub_22D0E37A0((uint64_t)&v60);
  id v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D0DFE40(0, (unint64_t *)&qword_26AEC1D98, (uint64_t)&type metadata for ClinicalSharingAuthorizations, MEMORY[0x263EFDCF0]);
  sub_22D019854();
  uint64_t v38 = v55;
  sub_22D2BC780();
  swift_release();
  swift_release();
  sub_22D0E31DC((uint64_t)a2, (uint64_t)v14);
  unint64_t v39 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v40 = (v53 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  sub_22D0E3550((uint64_t)v14, v41 + v39, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  long long v42 = (_OWORD *)(v41 + v40);
  long long v43 = v61;
  *long long v42 = v60;
  v42[1] = v43;
  long long v44 = v63;
  v42[2] = v62;
  v42[3] = v44;
  sub_22D0E37A0((uint64_t)&v60);
  sub_22D0DFE40(0, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, v37);
  sub_22D0E4050();
  sub_22D0DFEC0();
  uint64_t v45 = v56;
  sub_22D2BC7A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v6);
  sub_22D0E43D4(&qword_26AEC2150, (void (*)(uint64_t))sub_22D0E3F74);
  uint64_t v46 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v45, v9);
  uint64_t *v58 = v46;
  return result;
}

uint64_t sub_22D0E1248@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)a3 = *(unsigned char *)a2;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v3;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a3 + 40) = v5;
  *(void *)(a3 + 48) = v7;
  *(void *)(a3 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0E12C4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, const char *a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v47 = a4;
  sub_22D0E3B44(0, &qword_26853F4F0, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDDF8]);
  uint64_t v10 = v9;
  uint64_t v51 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (char *)&v43 - v11;
  sub_22D0DFE40(0, &qword_26853F4F8, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDEA0]);
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_22D2BC390();
  __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
  sub_22D0E31DC(a2, (uint64_t)v17);
  id v20 = v18;
  id v21 = v18;
  uint64_t v22 = sub_22D2BC380();
  os_log_type_t v23 = sub_22D2BD050();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v45 = v10;
    uint64_t v25 = v24;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v52 = v44;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v26 = (uint64_t *)&v17[*(int *)(v15 + 32)];
    uint64_t v46 = a5;
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    swift_bridgeObjectRetain();
    *(void *)&long long v53 = sub_22D0A4D24(v27, v28, &v52);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D0E34F4((uint64_t)v17);
    *(_WORD *)(v25 + 12) = 2080;
    *(void *)&long long v53 = v18;
    id v29 = v18;
    id v30 = v18;
    sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
    sub_22D2BD680();
    id v31 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v32 = sub_22D2BCC30();
    unint64_t v34 = v33;

    *(void *)&long long v53 = sub_22D0A4D24(v32, v34, &v52);
    sub_22D2BD220();
    a5 = v46;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v22, v23, v47, (uint8_t *)v25, 0x16u);
    uint64_t v35 = v44;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v35, -1, -1);
    uint64_t v36 = v25;
    uint64_t v10 = v45;
    MEMORY[0x230F7BDF0](v36, -1, -1);
  }
  else
  {
    sub_22D0E34F4((uint64_t)v17);
  }
  long long v37 = a3[1];
  long long v53 = *a3;
  long long v54 = v37;
  long long v38 = a3[3];
  long long v55 = a3[2];
  long long v56 = v38;
  sub_22D0E37A0((uint64_t)a3);
  unint64_t v39 = v48;
  sub_22D2BC6B0();
  sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v10);
  sub_22D0E3804();
  uint64_t v40 = v50;
  uint64_t v41 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v14, v40);
  *a5 = v41;
  return result;
}

uint64_t sub_22D0E17C0@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  long long v61 = a3;
  sub_22D0E3A78();
  uint64_t v56 = v5;
  uint64_t v53 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0E3B90();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v59 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0E3D50(0, &qword_26AEC2148, (void (*)(uint64_t))sub_22D0E3B90, (void (*)(void))sub_22D0E3E0C);
  uint64_t v52 = v11;
  uint64_t v60 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v58 = (char *)&v48 - v12;
  uint64_t v13 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v57 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v15;
  MEMORY[0x270FA5388](v14);
  long long v17 = (char *)&v48 - v16;
  long long v18 = a1[1];
  long long v64 = *a1;
  long long v65 = v18;
  long long v19 = a1[3];
  long long v66 = a1[2];
  long long v67 = v19;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_22D2BC390();
  __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
  sub_22D0E31DC(a2, (uint64_t)v17);
  id v21 = sub_22D2BC380();
  os_log_type_t v22 = sub_22D2BD050();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v48 = a2;
    os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v50 = v8;
    uint64_t v25 = v24;
    *(_DWORD *)os_log_type_t v23 = 136315138;
    uint64_t v63 = v24;
    uint64_t v49 = v9;
    uint64_t v26 = (uint64_t *)&v17[*(int *)(v13 + 32)];
    uint64_t v28 = *v26;
    unint64_t v27 = v26[1];
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_22D0A4D24(v28, v27, &v63);
    uint64_t v9 = v49;
    sub_22D2BD220();
    a2 = v48;
    swift_bridgeObjectRelease();
    sub_22D0E34F4((uint64_t)v17);
    _os_log_impl(&dword_22CFEE000, v21, v22, "%s Retrieving ClinicalSharingSyncHistory", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v29 = v25;
    uint64_t v8 = v50;
    MEMORY[0x230F7BDF0](v29, -1, -1);
    MEMORY[0x230F7BDF0](v23, -1, -1);
  }
  else
  {
    sub_22D0E34F4((uint64_t)v17);
  }

  uint64_t v63 = sub_22D2BD0D0();
  sub_22D0E3C28(0, &qword_26AEC1DF8, &qword_26AEC0F30, MEMORY[0x263F06F78], MEMORY[0x263EFDE20]);
  sub_22D0E3B44(0, (unint64_t *)&qword_26AEC2880, (uint64_t)&type metadata for ClinicalSharingSyncHistory, MEMORY[0x263F8D8F0]);
  sub_22D076DF8();
  id v30 = v51;
  sub_22D2BC780();
  swift_release();
  sub_22D0E43D4(&qword_26AEC2C98, (void (*)(uint64_t))sub_22D0E3A78);
  uint64_t v31 = v56;
  uint64_t v32 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v31);
  uint64_t v63 = v32;
  unint64_t v33 = (_OWORD *)swift_allocObject();
  long long v34 = v65;
  v33[1] = v64;
  id v33[2] = v34;
  long long v35 = v67;
  v33[3] = v66;
  v33[4] = v35;
  sub_22D0E37A0((uint64_t)&v64);
  sub_22D0E3C28(0, &qword_26AEC2E80, (unint64_t *)&qword_26AEC2880, (uint64_t)&type metadata for ClinicalSharingSyncHistory, MEMORY[0x263EFDCF0]);
  sub_22D0E3CCC();
  uint64_t v36 = v59;
  sub_22D2BC780();
  swift_release();
  swift_release();
  uint64_t v37 = v57;
  sub_22D0E31DC(a2, v57);
  unint64_t v38 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v39 = (v55 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  sub_22D0E3550(v37, v40 + v38, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  uint64_t v41 = (_OWORD *)(v40 + v39);
  long long v42 = v65;
  *uint64_t v41 = v64;
  v41[1] = v42;
  long long v43 = v67;
  v41[2] = v66;
  v41[3] = v43;
  sub_22D0E37A0((uint64_t)&v64);
  sub_22D0DFE40(0, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDCF0]);
  sub_22D0E3E0C();
  sub_22D0DFEC0();
  uint64_t v44 = v58;
  sub_22D2BC7A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v36, v8);
  sub_22D0E3E5C();
  uint64_t v45 = v52;
  uint64_t v46 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v44, v45);
  *long long v61 = v46;
  return result;
}

uint64_t sub_22D0E1F58@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  if (!v5) {
    uint64_t v5 = swift_bridgeObjectRetain();
  }
  char v6 = *a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v8 = *((void *)a2 + 2);
  uint64_t v9 = *((void *)a2 + 4);
  char v10 = a2[40];
  uint64_t v11 = *((void *)a2 + 6);
  uint64_t v12 = *((void *)a2 + 7);
  *(unsigned char *)a3 = v6;
  *(void *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = v8;
  *(void *)(a3 + 24) = v5;
  *(void *)(a3 + 32) = v9;
  *(unsigned char *)(a3 + 40) = v10;
  *(void *)(a3 + 48) = v11;
  *(void *)(a3 + 56) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0E1FF4@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v60 = a3;
  sub_22D0E3EE4(0, &qword_26AEC2108, &qword_26AEC2218, MEMORY[0x263F8D6C8], (void (*)(void))sub_22D0E3880);
  uint64_t v6 = v5;
  uint64_t v59 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (char *)&v49 - v7;
  sub_22D0E38FC();
  uint64_t v53 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v55 = v13;
  uint64_t v56 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v49 - v14;
  long long v16 = a1[1];
  long long v63 = *a1;
  long long v64 = v16;
  long long v17 = a1[3];
  long long v65 = a1[2];
  long long v66 = v17;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_22D2BC390();
  __swift_project_value_buffer(v18, (uint64_t)qword_26AEC3C90);
  sub_22D0E31DC((uint64_t)a2, (uint64_t)v15);
  long long v19 = sub_22D2BC380();
  os_log_type_t v20 = sub_22D2BD050();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v50 = a2;
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)id v21 = 136315138;
    uint64_t v62 = v22;
    uint64_t v51 = v6;
    uint64_t v52 = v9;
    os_log_type_t v23 = (uint64_t *)&v15[*(int *)(v11 + 32)];
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    uint64_t v26 = v24;
    a2 = v50;
    uint64_t v61 = sub_22D0A4D24(v26, v25, &v62);
    uint64_t v9 = v52;
    sub_22D2BD220();
    uint64_t v6 = v51;
    swift_bridgeObjectRelease();
    sub_22D0E34F4((uint64_t)v15);
    _os_log_impl(&dword_22CFEE000, v19, v20, "%s Retrieving Age", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v22, -1, -1);
    MEMORY[0x230F7BDF0](v21, -1, -1);
  }
  else
  {
    sub_22D0E34F4((uint64_t)v15);
  }

  unint64_t v27 = (id *)__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v28 = a2;
  uint64_t v29 = (uint64_t)a2 + *(int *)(v11 + 20);
  id v30 = *v27;
  uint64_t v31 = sub_22D0DCF0C(v29);

  uint64_t v62 = v31;
  uint64_t v32 = (_OWORD *)swift_allocObject();
  long long v33 = v64;
  v32[1] = v63;
  v32[2] = v33;
  long long v34 = v66;
  v32[3] = v65;
  id v32[4] = v34;
  sub_22D0E37A0((uint64_t)&v63);
  long long v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D0DFE40(0, &qword_26AEC2218, MEMORY[0x263F8D6C8], MEMORY[0x263EFDCF0]);
  sub_22D0E3880();
  uint64_t v36 = v57;
  sub_22D2BC780();
  swift_release();
  swift_release();
  uint64_t v37 = (uint64_t)v28;
  uint64_t v38 = v56;
  sub_22D0E31DC(v37, v56);
  unint64_t v39 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v40 = (v55 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  sub_22D0E3550(v38, v41 + v39, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  long long v42 = (_OWORD *)(v41 + v40);
  long long v43 = v64;
  *long long v42 = v63;
  v42[1] = v43;
  long long v44 = v66;
  v42[2] = v65;
  v42[3] = v44;
  sub_22D0E37A0((uint64_t)&v63);
  sub_22D0DFE40(0, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, v35);
  sub_22D0E39D8();
  sub_22D0DFEC0();
  uint64_t v45 = v58;
  sub_22D2BC7A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v6);
  sub_22D0E43D4(&qword_26AEC2180, (void (*)(uint64_t))sub_22D0E38FC);
  uint64_t v46 = v53;
  uint64_t v47 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v45, v46);
  *uint64_t v60 = v47;
  return result;
}

uint64_t sub_22D0E25F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)a3 = *(unsigned char *)a2;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v5;
  *(void *)(a3 + 24) = v6;
  *(void *)(a3 + 32) = v3;
  *(unsigned char *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0E266C@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v54 = a3;
  sub_22D0E3EE4(0, &qword_26AEC20D8, (unint64_t *)&qword_26AEC1DA8, MEMORY[0x263F8D310], (void (*)(void))sub_22D0E35B8);
  uint64_t v6 = v5;
  uint64_t v53 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v45 - v7;
  sub_22D0E3634();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v52 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v49 = v14;
  uint64_t v50 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v16 = (char *)&v45 - v15;
  long long v17 = a1[1];
  long long v57 = *a1;
  long long v58 = v17;
  long long v18 = a1[3];
  long long v59 = a1[2];
  long long v60 = v18;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_22D2BC390();
  __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
  sub_22D0E31DC((uint64_t)a2, (uint64_t)v16);
  os_log_type_t v20 = sub_22D2BC380();
  os_log_type_t v21 = sub_22D2BD050();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v47 = v9;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v45 = a2;
    uint64_t v46 = v6;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v56 = v23;
    uint64_t v24 = (uint64_t *)&v16[*(int *)(v12 + 32)];
    uint64_t v26 = *v24;
    unint64_t v25 = v24[1];
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_22D0A4D24(v26, v25, &v56);
    a2 = v45;
    uint64_t v6 = v46;
    sub_22D2BD220();
    uint64_t v9 = v47;
    swift_bridgeObjectRelease();
    sub_22D0E34F4((uint64_t)v16);
    _os_log_impl(&dword_22CFEE000, v20, v21, "%s Retrieving Sex", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v23, -1, -1);
    MEMORY[0x230F7BDF0](v22, -1, -1);
  }
  else
  {
    sub_22D0E34F4((uint64_t)v16);
  }

  id v27 = (id)*__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v28 = sub_22D0DD2D8();

  uint64_t v56 = v28;
  uint64_t v29 = (_OWORD *)swift_allocObject();
  long long v30 = v58;
  v29[1] = v57;
  v29[2] = v30;
  long long v31 = v60;
  v29[3] = v59;
  v29[4] = v31;
  sub_22D0E37A0((uint64_t)&v57);
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D0DFE40(0, (unint64_t *)&qword_26AEC1DA8, MEMORY[0x263F8D310], MEMORY[0x263EFDCF0]);
  sub_22D0E35B8();
  long long v33 = v51;
  sub_22D2BC780();
  swift_release();
  swift_release();
  uint64_t v34 = (uint64_t)a2;
  uint64_t v35 = v50;
  sub_22D0E31DC(v34, v50);
  unint64_t v36 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  unint64_t v37 = (v49 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  sub_22D0E3550(v35, v38 + v36, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask);
  unint64_t v39 = (_OWORD *)(v38 + v37);
  long long v40 = v58;
  *unint64_t v39 = v57;
  v39[1] = v40;
  long long v41 = v60;
  v39[2] = v59;
  v39[3] = v41;
  sub_22D0E37A0((uint64_t)&v57);
  sub_22D0DFE40(0, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, v32);
  sub_22D0E3710();
  sub_22D0DFEC0();
  long long v42 = v52;
  sub_22D2BC7A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v6);
  sub_22D0E43D4(&qword_26AEC2160, (void (*)(uint64_t))sub_22D0E3634);
  uint64_t v43 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v42, v9);
  *uint64_t v54 = v43;
  return result;
}

uint64_t sub_22D0E2C58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 40);
  *(unsigned char *)a3 = *(unsigned char *)a2;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a3 + 40) = v7;
  *(void *)(a3 + 48) = v3;
  *(void *)(a3 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0E2CD0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for ClinicalSharingDailyMetric();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  MEMORY[0x270FA5388](v48);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v49 = *a1;
  uint64_t v15 = *((void *)a1 + 1);
  uint64_t v14 = *((void *)a1 + 2);
  uint64_t v51 = *((void *)a1 + 3);
  uint64_t v52 = v14;
  uint64_t v47 = *((void *)a1 + 4);
  int v46 = a1[40];
  uint64_t v45 = *((void *)a1 + 6);
  uint64_t v50 = *((void *)a1 + 7);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_22D2BC390();
  __swift_project_value_buffer(v16, (uint64_t)qword_26AEC3C90);
  sub_22D0E31DC(a2, (uint64_t)v13);
  long long v17 = sub_22D2BC380();
  os_log_type_t v18 = sub_22D2BD050();
  if (os_log_type_enabled(v17, v18))
  {
    long long v42 = a3;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v43 = v10;
    os_log_type_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v44 = v9;
    uint64_t v40 = v21;
    uint64_t v41 = v15;
    *(_DWORD *)os_log_type_t v20 = 136315138;
    uint64_t v55 = v21;
    uint64_t v38 = v20 + 4;
    os_log_t v39 = v17;
    uint64_t v22 = v48;
    uint64_t v23 = (uint64_t *)&v13[*(int *)(v48 + 32)];
    uint64_t v24 = a2;
    uint64_t v26 = *v23;
    unint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    uint64_t v27 = v26;
    a2 = v24;
    uint64_t v54 = sub_22D0A4D24(v27, v25, &v55);
    uint64_t v15 = v41;
    sub_22D2BD220();
    a3 = v42;
    swift_bridgeObjectRelease();
    sub_22D0E34F4((uint64_t)v13);
    os_log_t v28 = v39;
    _os_log_impl(&dword_22CFEE000, v39, v18, "%s Creating ClinicalSharingDailyMetric", v20, 0xCu);
    uint64_t v29 = v40;
    swift_arrayDestroy();
    uint64_t v9 = v44;
    MEMORY[0x230F7BDF0](v29, -1, -1);
    long long v30 = v20;
    uint64_t v10 = v43;
    MEMORY[0x230F7BDF0](v30, -1, -1);
  }
  else
  {
    sub_22D0E34F4((uint64_t)v13);

    uint64_t v22 = v48;
  }
  long long v31 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v53, a2 + *(int *)(v22 + 20), v9);
  char v32 = *(unsigned char *)(a2 + *(int *)(v22 + 28));
  a3[3] = (uint64_t)v6;
  a3[4] = (uint64_t)&off_26E0604C8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  uint64_t v34 = &v8[v6[12]];
  *(void *)uint64_t v34 = 0xD000000000000026;
  *((void *)v34 + 1) = 0x800000022D2D8070;
  uint64_t v35 = v47;
  *((void *)v8 + 1) = v15;
  *((void *)v8 + 2) = v35;
  v8[24] = v46;
  uint64_t v36 = v50;
  *((void *)v8 + 4) = v45;
  *((void *)v8 + 5) = v36;
  *(void *)uint64_t v8 = v52;
  v8[v6[9]] = v32;
  v8[v6[10]] = v49 & 1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v8[v6[8]], v31, v9);
  *(void *)&v8[v6[11]] = v51;
  sub_22D0E3550((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDailyMetric);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0E3128()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

unint64_t sub_22D0E3160()
{
  unint64_t result = qword_26AEC1E20;
  if (!qword_26AEC1E20)
  {
    sub_22D0DFE40(255, (unint64_t *)&qword_26AEC1E28, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE20]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1E20);
  }
  return result;
}

uint64_t sub_22D0E31DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D0E3244(uint64_t a1)
{
  return sub_22D0E32CC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22D0E0354);
}

uint64_t sub_22D0E3260(uint64_t a1)
{
  return sub_22D0E32CC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22D0E0BA8);
}

uint64_t sub_22D0E327C(uint64_t a1)
{
  return sub_22D0E32CC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22D0E17C0);
}

uint64_t sub_22D0E3298(uint64_t a1)
{
  return sub_22D0E32CC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22D0E1FF4);
}

uint64_t sub_22D0E32B4(uint64_t a1)
{
  return sub_22D0E32CC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22D0E266C);
}

uint64_t sub_22D0E32CC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D0E3474@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_22D0E2CD0(a1, v6, a2);
}

uint64_t sub_22D0E34F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D0E3550(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_22D0E35B8()
{
  unint64_t result = qword_26AEC1DA0;
  if (!qword_26AEC1DA0)
  {
    sub_22D0DFE40(255, (unint64_t *)&qword_26AEC1DA8, MEMORY[0x263F8D310], MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1DA0);
  }
  return result;
}

void sub_22D0E3634()
{
  if (!qword_26AEC2168)
  {
    sub_22D0E3EE4(255, &qword_26AEC20D8, (unint64_t *)&qword_26AEC1DA8, MEMORY[0x263F8D310], (void (*)(void))sub_22D0E35B8);
    sub_22D0DFE40(255, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDCF0]);
    sub_22D0E3710();
    sub_22D0DFEC0();
    unint64_t v0 = sub_22D2BC4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2168);
    }
  }
}

unint64_t sub_22D0E3710()
{
  unint64_t result = qword_26AEC20D0;
  if (!qword_26AEC20D0)
  {
    sub_22D0E3EE4(255, &qword_26AEC20D8, (unint64_t *)&qword_26AEC1DA8, MEMORY[0x263F8D310], (void (*)(void))sub_22D0E35B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC20D0);
  }
  return result;
}

uint64_t sub_22D0E3798@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0E2C58(a1, v2 + 16, a2);
}

uint64_t sub_22D0E37A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_22D0E37F8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0E45D0(a1, "%s Could not retrieve sex %s", a2);
}

unint64_t sub_22D0E3804()
{
  unint64_t result = qword_26853F500;
  if (!qword_26853F500)
  {
    sub_22D0DFE40(255, &qword_26853F4F8, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853F500);
  }
  return result;
}

unint64_t sub_22D0E3880()
{
  unint64_t result = qword_26AEC2210;
  if (!qword_26AEC2210)
  {
    sub_22D0DFE40(255, &qword_26AEC2218, MEMORY[0x263F8D6C8], MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2210);
  }
  return result;
}

void sub_22D0E38FC()
{
  if (!qword_26AEC2188)
  {
    sub_22D0E3EE4(255, &qword_26AEC2108, &qword_26AEC2218, MEMORY[0x263F8D6C8], (void (*)(void))sub_22D0E3880);
    sub_22D0DFE40(255, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDCF0]);
    sub_22D0E39D8();
    sub_22D0DFEC0();
    unint64_t v0 = sub_22D2BC4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2188);
    }
  }
}

unint64_t sub_22D0E39D8()
{
  unint64_t result = qword_26AEC2100;
  if (!qword_26AEC2100)
  {
    sub_22D0E3EE4(255, &qword_26AEC2108, &qword_26AEC2218, MEMORY[0x263F8D6C8], (void (*)(void))sub_22D0E3880);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2100);
  }
  return result;
}

uint64_t sub_22D0E3A60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0E25F8(a1, v2 + 16, a2);
}

uint64_t sub_22D0E3A6C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0E45D0(a1, "%s Could not retrieve age %s", a2);
}

void sub_22D0E3A78()
{
  if (!qword_26AEC2CA0)
  {
    sub_22D0E3C28(255, &qword_26AEC1DF8, &qword_26AEC0F30, MEMORY[0x263F06F78], MEMORY[0x263EFDE20]);
    sub_22D0E3B44(255, (unint64_t *)&qword_26AEC2880, (uint64_t)&type metadata for ClinicalSharingSyncHistory, MEMORY[0x263F8D8F0]);
    sub_22D076DF8();
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2CA0);
    }
  }
}

void sub_22D0E3B44(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_22D0E3B90()
{
  if (!qword_26AEC20B8)
  {
    sub_22D0E3C28(255, &qword_26AEC2E80, (unint64_t *)&qword_26AEC2880, (uint64_t)&type metadata for ClinicalSharingSyncHistory, MEMORY[0x263EFDCF0]);
    sub_22D0E3CCC();
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC20B8);
    }
  }
}

void sub_22D0E3C28(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_22D0E3B44(255, a3, a4, MEMORY[0x263F8D8F0]);
    uint64_t v9 = v8;
    uint64_t v10 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v11 = a5(a1, v9, v10, MEMORY[0x263F8E4E0]);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_22D0E3CCC()
{
  unint64_t result = qword_26AEC2E78;
  if (!qword_26AEC2E78)
  {
    sub_22D0E3C28(255, &qword_26AEC2E80, (unint64_t *)&qword_26AEC2880, (uint64_t)&type metadata for ClinicalSharingSyncHistory, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2E78);
  }
  return result;
}

void sub_22D0E3D50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_22D0DFE40(255, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDCF0]);
    a4();
    sub_22D0DFEC0();
    unint64_t v6 = sub_22D2BC4A0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_22D0E3E0C()
{
  return sub_22D0E43D4(&qword_26AEC20B0, (void (*)(uint64_t))sub_22D0E3B90);
}

uint64_t sub_22D0E3E44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0E1F58(a1, (char *)(v2 + 16), a2);
}

uint64_t sub_22D0E3E50@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0E45D0(a1, "%s Could not retrieve ClinicalSharingSyncHistory %s", a2);
}

unint64_t sub_22D0E3E5C()
{
  unint64_t result = qword_26AEC2140;
  if (!qword_26AEC2140)
  {
    sub_22D0E3D50(255, &qword_26AEC2148, (void (*)(uint64_t))sub_22D0E3B90, (void (*)(void))sub_22D0E3E0C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2140);
  }
  return result;
}

void sub_22D0E3EE4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(void))
{
  if (!*a2)
  {
    sub_22D0DFE40(255, a3, a4, MEMORY[0x263EFDCF0]);
    a5();
    unint64_t v7 = sub_22D2BC450();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_22D0E3F74()
{
  if (!qword_26AEC2158)
  {
    sub_22D0E3EE4(255, &qword_26AEC20C8, (unint64_t *)&qword_26AEC1D98, (uint64_t)&type metadata for ClinicalSharingAuthorizations, (void (*)(void))sub_22D019854);
    sub_22D0DFE40(255, &qword_26AEC2208, (uint64_t)&type metadata for DailyMetricDetailList, MEMORY[0x263EFDCF0]);
    sub_22D0E4050();
    sub_22D0DFEC0();
    unint64_t v0 = sub_22D2BC4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2158);
    }
  }
}

unint64_t sub_22D0E4050()
{
  unint64_t result = qword_26AEC20C0;
  if (!qword_26AEC20C0)
  {
    sub_22D0E3EE4(255, &qword_26AEC20C8, (unint64_t *)&qword_26AEC1D98, (uint64_t)&type metadata for ClinicalSharingAuthorizations, (void (*)(void))sub_22D019854);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC20C0);
  }
  return result;
}

void sub_22D0E40D4(uint64_t a1)
{
}

void sub_22D0E4108(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D0E4170@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0E1248(a1, v2 + 16, a2);
}

uint64_t sub_22D0E417C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0E45D0(a1, "%s Could not retrieve ClinicalSharingAuthorizations %s", a2);
}

uint64_t sub_22D0E4188(uint64_t a1)
{
  return a1;
}

uint64_t sub_22D0E41B4(uint64_t a1)
{
  return a1;
}

void sub_22D0E41E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_22D05BF98();
    uint64_t v7 = v6;
    uint64_t v8 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_22D0E4268()
{
  if (!qword_26AEC20E8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0E41E0(255, &qword_26AEC1DC8, MEMORY[0x263EFDCF0]);
    sub_22D0E4324((unint64_t *)&qword_26AEC1DC0, &qword_26AEC1DC8, v0);
    unint64_t v1 = sub_22D2BC450();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AEC20E8);
    }
  }
}

uint64_t sub_22D0E4324(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D0E41E0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0E4368()
{
  return sub_22D0E43D4(&qword_26AEC20E0, (void (*)(uint64_t))sub_22D0E4268);
}

uint64_t sub_22D0E439C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D0E43D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_20Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_22D0E4470@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0E0B2C(a1, v2 + 16, a2);
}

uint64_t objectdestroy_23Tm()
{
  unint64_t v1 = (int *)(type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 64;
  uint64_t v6 = v0 + v3;
  __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_22D0E45C4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0E45D0(a1, "%s Could not retrieve HKClinicalAccount list %s", a2);
}

uint64_t sub_22D0E45D0@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_22D0E12C4(a1, v3 + v8, (long long *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)), a2, a3);
}

unint64_t sub_22D0E4678()
{
  unint64_t result = qword_26AEC2170;
  if (!qword_26AEC2170)
  {
    sub_22D0E3D50(255, &qword_26AEC2178, (void (*)(uint64_t))sub_22D0E4268, (void (*)(void))sub_22D0E4368);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2170);
  }
  return result;
}

unint64_t sub_22D0E4700()
{
  unint64_t result = qword_26AEC2088;
  if (!qword_26AEC2088)
  {
    type metadata accessor for ClinicalSharingDailyAnalyticsSubmissionTask();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AEC2088);
  }
  return result;
}

uint64_t destroy for DailyMetricDetailList()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DailyMetricDetailList(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DailyMetricDetailList(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DailyMetricDetailList(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DailyMetricDetailList(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DailyMetricDetailList(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyMetricDetailList()
{
  return &type metadata for DailyMetricDetailList;
}

void *sub_22D0E49F0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_22D2BBC30();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = *(void **)((char *)a2 + v12);
    *(void *)((char *)v4 + v12) = v14;
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v15 = a3[8];
    uint64_t v16 = (void *)((char *)v4 + v15);
    long long v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    id v19 = v14;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_22D0E4B34(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_22D0E4BCC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  id v18 = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_22D0E4CB8(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBC30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
  id v13 = v11;

  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v14 = a3[8];
  uint64_t v15 = (uint64_t *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D0E4D90(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_22D0E4E44(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D0E4F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0E4F28);
}

uint64_t sub_22D0E4F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_22D0E4FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0E4FEC);
}

uint64_t sub_22D0E4FEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBC30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D0E5094()
{
  uint64_t result = sub_22D2BBC30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t (*PBVerificationValuePair.w0.modify())()
{
  return nullsub_1;
}

uint64_t PBVerificationValuePair.l.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_22CFF9B64(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t PBVerificationValuePair.l.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22CFF5630(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBVerificationValuePair.l.modify())()
{
  return nullsub_1;
}

uint64_t PBVerificationValuePair.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBVerificationValuePair(0) + 24);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PBVerificationValuePair(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853F620);
}

uint64_t PBVerificationValuePair.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBVerificationValuePair(0) + 24);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBVerificationValuePair.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBVerificationValuePair.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_22D2BBFC0();
  a1[1] = v2;
  a1[2] = sub_22D2BBFC0();
  a1[3] = v3;
  type metadata accessor for PBVerificationValuePair(0);
  return sub_22D2BBFE0();
}

uint64_t (*PBPA.x.modify())()
{
  return nullsub_1;
}

uint64_t PBPA.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0E549C(type metadata accessor for PBPA, a1);
}

uint64_t type metadata accessor for PBPA(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853F630);
}

uint64_t PBPA.unknownFields.setter(uint64_t a1)
{
  return sub_22D0E5554(a1, type metadata accessor for PBPA);
}

uint64_t (*PBPA.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPA.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_22D0E5630((void (*)(void))type metadata accessor for PBPA, a1);
}

uint64_t (*PBPB.y.modify())()
{
  return nullsub_1;
}

uint64_t PBPB.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0E549C(type metadata accessor for PBPB, a1);
}

uint64_t sub_22D0E549C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_22D2BBFF0();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t type metadata accessor for PBPB(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853F640);
}

uint64_t PBPB.unknownFields.setter(uint64_t a1)
{
  return sub_22D0E5554(a1, type metadata accessor for PBPB);
}

uint64_t sub_22D0E5554(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_22D2BBFF0();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBPB.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPB.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_22D0E5630((void (*)(void))type metadata accessor for PBPB, a1);
}

uint64_t sub_22D0E5630@<X0>(void (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_22D2BBFC0();
  a2[1] = v4;
  a1(0);
  return sub_22D2BBFE0();
}

uint64_t PBConfirmationA.t.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_22CFF9B64(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t PBConfirmationA.t.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22CFF5630(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*PBConfirmationA.t.modify())()
{
  return nullsub_1;
}

uint64_t PBConfirmationA.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0E549C(type metadata accessor for PBConfirmationA, a1);
}

uint64_t type metadata accessor for PBConfirmationA(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853F650);
}

uint64_t PBConfirmationA.unknownFields.setter(uint64_t a1)
{
  return sub_22D0E5554(a1, type metadata accessor for PBConfirmationA);
}

uint64_t (*PBConfirmationA.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBConfirmationA.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_22D0E5630((void (*)(void))type metadata accessor for PBConfirmationA, a1);
}

uint64_t (*PBConfirmationB.t.modify())()
{
  return nullsub_1;
}

uint64_t PBConfirmationB.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0E549C(type metadata accessor for PBConfirmationB, a1);
}

uint64_t type metadata accessor for PBConfirmationB(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853F660);
}

uint64_t PBConfirmationB.unknownFields.setter(uint64_t a1)
{
  return sub_22D0E5554(a1, type metadata accessor for PBConfirmationB);
}

uint64_t (*PBConfirmationB.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBConfirmationB.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_22D0E5630((void (*)(void))type metadata accessor for PBConfirmationB, a1);
}

unint64_t static PBVerificationValuePair.protoMessageName.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_22D0E589C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F508);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F508);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  long long v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *long long v6 = 1;
  *(void *)unint64_t v7 = "w0";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "L";
  *((void *)v11 + 1) = 1;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBVerificationValuePair._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CD68, (uint64_t)qword_26853F508, a1);
}

uint64_t PBVerificationValuePair.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_22D2BC110();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBVerificationValuePair.traverse<A>(visitor:)()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_22D2BC260();
      if (!v1)
      {
LABEL_8:
        uint64_t v5 = v0[2];
        unint64_t v6 = v0[3];
        switch(v6 >> 62)
        {
          case 1uLL:
            if ((int)v5 != v5 >> 32) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 2uLL:
            if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 3uLL:
            goto LABEL_15;
          default:
            if ((v6 & 0xFF000000000000) == 0) {
              goto LABEL_15;
            }
LABEL_14:
            uint64_t result = sub_22D2BC260();
            if (!v1)
            {
LABEL_15:
              type metadata accessor for PBVerificationValuePair(0);
              uint64_t result = sub_22D2BBFD0();
            }
            break;
        }
      }
      return result;
  }
}

uint64_t PBVerificationValuePair.hashValue.getter()
{
  return sub_22D0E6BB8((void (*)(void))type metadata accessor for PBVerificationValuePair, &qword_26853F580, (void (*)(uint64_t))type metadata accessor for PBVerificationValuePair);
}

uint64_t sub_22D0E5CC0@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_22D2BBFC0();
  a1[1] = v2;
  a1[2] = sub_22D2BBFC0();
  a1[3] = v3;
  return sub_22D2BBFE0();
}

unint64_t sub_22D0E5D00()
{
  return 0xD000000000000035;
}

uint64_t sub_22D0E5D1C()
{
  return PBVerificationValuePair.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D0E5D34()
{
  return PBVerificationValuePair.traverse<A>(visitor:)();
}

uint64_t sub_22D0E5D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D0E6FF4(&qword_26853F690, (void (*)(uint64_t))type metadata accessor for PBVerificationValuePair);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0E5DC8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CD68, (uint64_t)qword_26853F508, a1);
}

uint64_t sub_22D0E5DEC(uint64_t a1)
{
  uint64_t v2 = sub_22D0E6FF4(&qword_26853F5B0, (void (*)(uint64_t))type metadata accessor for PBVerificationValuePair);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0E5E58()
{
  sub_22D0E6FF4(&qword_26853F5B0, (void (*)(uint64_t))type metadata accessor for PBVerificationValuePair);
  return sub_22D2BC200();
}

unint64_t static PBPA.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_22D0E5EF4(uint64_t a1)
{
  return sub_22D0E6918(a1, qword_26853F520, (uint64_t)"X");
}

uint64_t static PBPA._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CD70, (uint64_t)qword_26853F520, a1);
}

uint64_t PBPA.decodeMessage<A>(decoder:)()
{
  return sub_22D0E6AA4();
}

uint64_t PBPA.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0E6288(a1, a2, a3, (void (*)(void))type metadata accessor for PBPA);
}

uint64_t static PBPA.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D0E703C(a1, a2, type metadata accessor for PBPA) & 1;
}

uint64_t PBPA.hashValue.getter()
{
  return sub_22D0E6BB8((void (*)(void))type metadata accessor for PBPA, &qword_26853F588, (void (*)(uint64_t))type metadata accessor for PBPA);
}

unint64_t sub_22D0E5FEC()
{
  return 0xD000000000000022;
}

uint64_t sub_22D0E6008()
{
  return PBConfirmationA.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D0E6020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPA.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D0E6038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D0E6FF4(&qword_26853F688, (void (*)(uint64_t))type metadata accessor for PBPA);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0E60B4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CD70, (uint64_t)qword_26853F520, a1);
}

uint64_t sub_22D0E60D8(uint64_t a1)
{
  uint64_t v2 = sub_22D0E6FF4(&qword_26853F5C8, (void (*)(uint64_t))type metadata accessor for PBPA);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0E6144()
{
  sub_22D0E6FF4(&qword_26853F5C8, (void (*)(uint64_t))type metadata accessor for PBPA);
  return sub_22D2BC200();
}

uint64_t sub_22D0E61C0(uint64_t a1, uint64_t a2)
{
  return sub_22D0E703C(a1, a2, type metadata accessor for PBPA) & 1;
}

unint64_t static PBPB.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_22D0E620C(uint64_t a1)
{
  return sub_22D0E6918(a1, qword_26853F538, (uint64_t)"Y");
}

uint64_t static PBPB._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CD78, (uint64_t)qword_26853F538, a1);
}

uint64_t PBPB.decodeMessage<A>(decoder:)()
{
  return sub_22D0E6AA4();
}

uint64_t PBPB.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0E6288(a1, a2, a3, (void (*)(void))type metadata accessor for PBPB);
}

uint64_t sub_22D0E6288(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = *v4;
  unint64_t v7 = v4[1];
  switch(v7 >> 62)
  {
    case 1uLL:
      if ((int)v6 != v6 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v7 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_22D2BC260();
      if (!v5)
      {
LABEL_8:
        a4(0);
        return sub_22D2BBFD0();
      }
      return result;
  }
}

uint64_t static PBPB.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D0E703C(a1, a2, type metadata accessor for PBPB) & 1;
}

uint64_t PBPB.hashValue.getter()
{
  return sub_22D0E6BB8((void (*)(void))type metadata accessor for PBPB, &qword_26853F590, (void (*)(uint64_t))type metadata accessor for PBPB);
}

unint64_t sub_22D0E6400()
{
  return 0xD000000000000022;
}

uint64_t sub_22D0E641C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPB.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D0E6434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D0E6FF4(&qword_26853F680, (void (*)(uint64_t))type metadata accessor for PBPB);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0E64B0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CD78, (uint64_t)qword_26853F538, a1);
}

uint64_t sub_22D0E64D4(uint64_t a1)
{
  uint64_t v2 = sub_22D0E6FF4(&qword_26853F5E0, (void (*)(uint64_t))type metadata accessor for PBPB);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0E6540()
{
  sub_22D0E6FF4(&qword_26853F5E0, (void (*)(uint64_t))type metadata accessor for PBPB);
  return sub_22D2BC200();
}

uint64_t sub_22D0E65BC(uint64_t a1, uint64_t a2)
{
  return sub_22D0E703C(a1, a2, type metadata accessor for PBPB) & 1;
}

unint64_t static PBConfirmationA.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D0E6608(uint64_t a1)
{
  return sub_22D0E6918(a1, qword_26853F550, (uint64_t)"T");
}

uint64_t static PBConfirmationA._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CD80, (uint64_t)qword_26853F550, a1);
}

uint64_t PBConfirmationA.decodeMessage<A>(decoder:)()
{
  return sub_22D0E6AA4();
}

uint64_t PBConfirmationA.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0E6288(a1, a2, a3, (void (*)(void))type metadata accessor for PBConfirmationA);
}

uint64_t static PBConfirmationA.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D0E703C(a1, a2, type metadata accessor for PBConfirmationA) & 1;
}

uint64_t PBConfirmationA.hashValue.getter()
{
  return sub_22D0E6BB8((void (*)(void))type metadata accessor for PBConfirmationA, &qword_26853F598, (void (*)(uint64_t))type metadata accessor for PBConfirmationA);
}

unint64_t sub_22D0E66FC()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D0E6718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBConfirmationA.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D0E6730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D0E6FF4(&qword_26853F678, (void (*)(uint64_t))type metadata accessor for PBConfirmationA);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0E67AC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CD80, (uint64_t)qword_26853F550, a1);
}

uint64_t sub_22D0E67D0(uint64_t a1)
{
  uint64_t v2 = sub_22D0E6FF4(&qword_26853F5F8, (void (*)(uint64_t))type metadata accessor for PBConfirmationA);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0E683C()
{
  sub_22D0E6FF4(&qword_26853F5F8, (void (*)(uint64_t))type metadata accessor for PBConfirmationA);
  return sub_22D2BC200();
}

uint64_t sub_22D0E68B8(uint64_t a1, uint64_t a2)
{
  return sub_22D0E703C(a1, a2, type metadata accessor for PBConfirmationA) & 1;
}

unint64_t static PBConfirmationB.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D0E6904(uint64_t a1)
{
  return sub_22D0E6918(a1, qword_26853F568, (uint64_t)"T");
}

uint64_t sub_22D0E6918(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = sub_22D2BC310();
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v7 = v6 - 8;
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_22D2BFF40;
  unint64_t v10 = v9 + v8 + *(int *)(v7 + 56);
  *(void *)(v9 + v8) = 1;
  *(void *)unint64_t v10 = a3;
  *(void *)(v10 + 8) = 1;
  *(unsigned char *)(v10 + 16) = 2;
  uint64_t v11 = *MEMORY[0x263F50718];
  uint64_t v12 = sub_22D2BC2F0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  return sub_22D2BC300();
}

uint64_t static PBConfirmationB._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CD88, (uint64_t)qword_26853F568, a1);
}

uint64_t PBConfirmationB.decodeMessage<A>(decoder:)()
{
  return sub_22D0E6AA4();
}

uint64_t sub_22D0E6AA4()
{
  while (1)
  {
    uint64_t result = sub_22D2BC080();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_22D2BC110();
    }
  }
  return result;
}

uint64_t PBConfirmationB.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0E6288(a1, a2, a3, (void (*)(void))type metadata accessor for PBConfirmationB);
}

uint64_t static PBConfirmationB.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D0E703C(a1, a2, type metadata accessor for PBConfirmationB) & 1;
}

uint64_t PBConfirmationB.hashValue.getter()
{
  return sub_22D0E6BB8((void (*)(void))type metadata accessor for PBConfirmationB, &qword_26853F5A0, (void (*)(uint64_t))type metadata accessor for PBConfirmationB);
}

uint64_t sub_22D0E6BB8(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_22D2BD760();
}

unint64_t sub_22D0E6C40()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D0E6C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBConfirmationB.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D0E6C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D0E6FF4(&qword_26853F670, (void (*)(uint64_t))type metadata accessor for PBConfirmationB);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0E6CF0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CD88, (uint64_t)qword_26853F568, a1);
}

uint64_t sub_22D0E6D14(uint64_t a1)
{
  uint64_t v2 = sub_22D0E6FF4(&qword_26853F610, (void (*)(uint64_t))type metadata accessor for PBConfirmationB);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0E6D80()
{
  sub_22D0E6FF4(&qword_26853F610, (void (*)(uint64_t))type metadata accessor for PBConfirmationB);
  return sub_22D2BC200();
}

uint64_t sub_22D0E6DFC(uint64_t a1, uint64_t a2)
{
  return sub_22D0E703C(a1, a2, type metadata accessor for PBConfirmationB) & 1;
}

uint64_t _s19HealthRecordsDaemon23PBVerificationValuePairV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v16 - v9;
  if ((sub_22D1158DC(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && (sub_22D1158DC(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1) != 0)
  {
    uint64_t v11 = type metadata accessor for PBVerificationValuePair(0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(v11 + 24), v4);
    v12(v8, a2 + *(int *)(v11 + 24), v4);
    sub_22D0E6FF4(&qword_26853DB30, MEMORY[0x263F50560]);
    char v13 = sub_22D2BCB90();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_22D0E6FF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D0E703C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  if (sub_22D1158DC(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)))
  {
    uint64_t v13 = a3(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v14(v12, a1 + *(int *)(v13 + 20), v6);
    v14(v10, a2 + *(int *)(v13 + 20), v6);
    sub_22D0E6FF4(&qword_26853DB30, MEMORY[0x263F50560]);
    char v15 = sub_22D2BCB90();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v10, v6);
    v16(v12, v6);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_22D0E71FC()
{
  return sub_22D0E6FF4(&qword_26853F5A8, (void (*)(uint64_t))type metadata accessor for PBVerificationValuePair);
}

uint64_t sub_22D0E7244()
{
  return sub_22D0E6FF4(&qword_26853F5B0, (void (*)(uint64_t))type metadata accessor for PBVerificationValuePair);
}

uint64_t sub_22D0E728C()
{
  return sub_22D0E6FF4(&qword_26853F580, (void (*)(uint64_t))type metadata accessor for PBVerificationValuePair);
}

uint64_t sub_22D0E72D4()
{
  return sub_22D0E6FF4(&qword_26853F5B8, (void (*)(uint64_t))type metadata accessor for PBVerificationValuePair);
}

uint64_t sub_22D0E731C()
{
  return sub_22D0E6FF4(&qword_26853F5C0, (void (*)(uint64_t))type metadata accessor for PBPA);
}

uint64_t sub_22D0E7364()
{
  return sub_22D0E6FF4(&qword_26853F5C8, (void (*)(uint64_t))type metadata accessor for PBPA);
}

uint64_t sub_22D0E73AC()
{
  return sub_22D0E6FF4(&qword_26853F588, (void (*)(uint64_t))type metadata accessor for PBPA);
}

uint64_t sub_22D0E73F4()
{
  return sub_22D0E6FF4(&qword_26853F5D0, (void (*)(uint64_t))type metadata accessor for PBPA);
}

uint64_t sub_22D0E743C()
{
  return sub_22D0E6FF4(&qword_26853F5D8, (void (*)(uint64_t))type metadata accessor for PBPB);
}

uint64_t sub_22D0E7484()
{
  return sub_22D0E6FF4(&qword_26853F5E0, (void (*)(uint64_t))type metadata accessor for PBPB);
}

uint64_t sub_22D0E74CC()
{
  return sub_22D0E6FF4(&qword_26853F590, (void (*)(uint64_t))type metadata accessor for PBPB);
}

uint64_t sub_22D0E7514()
{
  return sub_22D0E6FF4(&qword_26853F5E8, (void (*)(uint64_t))type metadata accessor for PBPB);
}

uint64_t sub_22D0E755C()
{
  return sub_22D0E6FF4(&qword_26853F5F0, (void (*)(uint64_t))type metadata accessor for PBConfirmationA);
}

uint64_t sub_22D0E75A4()
{
  return sub_22D0E6FF4(&qword_26853F5F8, (void (*)(uint64_t))type metadata accessor for PBConfirmationA);
}

uint64_t sub_22D0E75EC()
{
  return sub_22D0E6FF4(&qword_26853F598, (void (*)(uint64_t))type metadata accessor for PBConfirmationA);
}

uint64_t sub_22D0E7634()
{
  return sub_22D0E6FF4(&qword_26853F600, (void (*)(uint64_t))type metadata accessor for PBConfirmationA);
}

uint64_t sub_22D0E767C()
{
  return sub_22D0E6FF4(&qword_26853F608, (void (*)(uint64_t))type metadata accessor for PBConfirmationB);
}

uint64_t sub_22D0E76C4()
{
  return sub_22D0E6FF4(&qword_26853F610, (void (*)(uint64_t))type metadata accessor for PBConfirmationB);
}

uint64_t sub_22D0E770C()
{
  return sub_22D0E6FF4(&qword_26853F5A0, (void (*)(uint64_t))type metadata accessor for PBConfirmationB);
}

uint64_t sub_22D0E7754()
{
  return sub_22D0E6FF4(&qword_26853F618, (void (*)(uint64_t))type metadata accessor for PBConfirmationB);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBVerificationValuePair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_22CFF9B64(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    sub_22CFF9B64(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_22D2BBFF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for PBVerificationValuePair(uint64_t a1, uint64_t a2)
{
  sub_22CFF5630(*(void *)a1, *(void *)(a1 + 8));
  sub_22CFF5630(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *initializeWithCopy for PBVerificationValuePair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_22CFF9B64(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_22CFF9B64(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t *assignWithCopy for PBVerificationValuePair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_22CFF9B64(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_22CFF5630(v8, v9);
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_22CFF9B64(v10, v11);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_22CFF5630(v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t *assignWithTake for PBVerificationValuePair(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_22CFF5630(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_22CFF5630(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  unint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBVerificationValuePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0E7B38);
}

uint64_t sub_22D0E7B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBVerificationValuePair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0E7C08);
}

void *sub_22D0E7C08(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D0E7CB8()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBPA(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_3Tm);
}

uint64_t storeEnumTagSinglePayload for PBPA(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_4Tm);
}

uint64_t getEnumTagSinglePayload for PBPB(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_3Tm_0);
}

uint64_t storeEnumTagSinglePayload for PBPB(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_4Tm_0);
}

uint64_t getEnumTagSinglePayload for PBConfirmationA(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_3Tm_1);
}

uint64_t storeEnumTagSinglePayload for PBConfirmationA(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_4Tm_1);
}

uint64_t getEnumTagSinglePayload for PBConfirmationB(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0E7E10);
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBConfirmationB(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0E7EE4);
}

void *__swift_store_extra_inhabitant_index_4Tm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D0E7F98()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22D0E8050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D0E8064);
}

uint64_t sub_22D0E8064(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BB6F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_22D0E8114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D0E8128);
}

void *sub_22D0E8128(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BB6F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery()
{
  uint64_t result = qword_26853F698;
  if (!qword_26853F698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D0E821C(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_22D0E8248()
{
  uint64_t v1 = type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery();
  uint64_t v2 = v1 - 8;
  uint64_t v47 = *(void *)(v1 - 8);
  uint64_t v46 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](v1);
  uint64_t v45 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22D2BCF90();
  uint64_t v5 = *(uint64_t (**)())(v4 - 8);
  uint64_t v43 = v4;
  uint64_t v44 = v5;
  MEMORY[0x270FA5388](v4);
  long long v42 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4A54(0, (unint64_t *)&qword_26853D760, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  uint64_t v51 = v7;
  uint64_t v53 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v48 = (char *)&v41 - v8;
  sub_22CFF4A54(0, &qword_26853D788, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  uint64_t v50 = v9;
  uint64_t v52 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v49 = (char *)&v41 - v10;
  uint64_t v11 = sub_22D2BBC30();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(int *)(v2 + 32);
  uint64_t v54 = (void *)v0;
  uint64_t v16 = *(void **)(v0 + v15);
  uint64_t v17 = self;
  id v18 = v16;
  sub_22D2BB6C0();
  id v19 = (void *)sub_22D2BBBC0();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, v11);
  sub_22D2BB690();
  uint64_t v21 = (void *)sub_22D2BBBC0();
  v20(v14, v11);
  id v22 = objc_msgSend(v17, sel_predicateForSamplesWithStartDate_endDate_options_, v19, v21, 0);

  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v18, v22);
  uint64_t v24 = v54;
  sub_22D229C70(0xD000000000000018, 0x800000022D2D81B0, *(void *)((char *)v54 + v15), 5, 1);
  sub_22CFF4B00(*v24 + 16, (uint64_t)v56);
  __swift_project_boxed_opaque_existential_1(v56, v56[3]);
  sub_22CFF4B64();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_22D2BFBE0;
  *(void *)(v25 + 32) = v23;
  uint64_t v55 = v25;
  sub_22D2BCE20();
  id v41 = v23;
  uint64_t v26 = v42;
  sub_22D2BCFA0();
  sub_22CFF4BC0(&qword_26853D790, MEMORY[0x263F44AA8]);
  uint64_t v27 = v43;
  uint64_t v28 = sub_22D2BC720();
  (*((void (**)(char *, uint64_t))v44 + 1))(v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = v28;
  uint64_t v44 = type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery;
  uint64_t v29 = (uint64_t)v24;
  uint64_t v30 = v45;
  sub_22D0E9A40(v29, v45, (uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery);
  unint64_t v31 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v32 = swift_allocObject();
  sub_22D0E9AA8(v30, v32 + v31, (uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_22D0E97F8;
  *(void *)(v33 + 24) = v32;
  sub_22CFF491C();
  type metadata accessor for PBTypedData(0);
  sub_22CFF4BC0(&qword_26853D780, (void (*)(uint64_t))sub_22CFF491C);
  uint64_t v34 = v48;
  sub_22D2BC730();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  sub_22D0E9A40((uint64_t)v54, v30, (uint64_t (*)(void))v44);
  uint64_t v35 = swift_allocObject();
  sub_22D0E9AA8(v30, v35 + v31, (uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  uint64_t v36 = v49;
  uint64_t v37 = v51;
  sub_22D2BC3C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v37);
  sub_22CFF4E3C();
  uint64_t v38 = v50;
  uint64_t v39 = sub_22D2BC720();

  (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v38);
  return v39;
}

uint64_t sub_22D0E8954@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4F94(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v45 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PBCategorySeries(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v42 - v18;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (v36)
    {
LABEL_3:
      uint64_t v43 = v6;
      uint64_t v20 = sub_22D0A950C(a1);
      if (v20)
      {
        unint64_t v21 = v20;
        MEMORY[0x270FA5388](v20);
        uint64_t v41 = v3;
        uint64_t v22 = sub_22D29C70C((void (*)(id *))sub_22D0E9A20, (uint64_t)(&v42 - 4), v21, (uint64_t)v48);
        swift_bridgeObjectRelease();
        sub_22D2BBFE0();
        uint64_t v23 = *(int *)(v14 + 20);
        if (qword_26853CFA8 != -1) {
          swift_once();
        }
        *(void *)&v19[v23] = qword_2685401B0;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for PBCategorySeries._StorageClass(0);
          swift_allocObject();
          uint64_t v24 = swift_retain();
          *(void *)&v19[v23] = sub_22D165828(v24);
          swift_release();
        }
        uint64_t v44 = v17;
        uint64_t v25 = (uint64_t *)(*(void *)&v19[v23]
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
        swift_beginAccess();
        *uint64_t v25 = v22;
        swift_bridgeObjectRelease();
        sub_22D2BBFE0();
        uint64_t v26 = type metadata accessor for PBTypedData(0);
        uint64_t v27 = *(int *)(v26 + 20);
        if (qword_26853CCD0 != -1) {
          swift_once();
        }
        *(void *)(a2 + v27) = qword_26853D990;
        uint64_t v28 = v3 + *(int *)(v43 + 20);
        uint64_t v29 = sub_22D2BB6F0();
        uint64_t v30 = *(void *)(v29 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v11, v28, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v11, 0, 1, v29);
        swift_retain();
        uint64_t v31 = (uint64_t)v45;
        sub_22D22BA04(5, 1, v11);
        sub_22CFF4FF8((uint64_t)v11, &qword_26853D7A0, MEMORY[0x263F062D0]);
        PBTypedData.dateRange.setter(v31);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for PBTypedData._StorageClass(0);
          swift_allocObject();
          uint64_t v32 = swift_retain();
          *(void *)(a2 + v27) = sub_22D0040E0(v32);
          swift_release();
        }
        uint64_t v33 = *(void *)(a2 + v27);
        swift_beginAccess();
        *(void *)(v33 + 16) = 126;
        *(unsigned char *)(v33 + 24) = 1;
        uint64_t v34 = (uint64_t)v44;
        sub_22D0E9A40((uint64_t)v19, (uint64_t)v44, type metadata accessor for PBCategorySeries);
        PBTypedData.categorySeries.setter(v34);
        sub_22CFF4F38((uint64_t)v19);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a2, 0, 1, v26);
      }
      else
      {
        sub_22D0E9A40(v3, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery);
        unint64_t v46 = 0;
        unint64_t v47 = 0xE000000000000000;
        sub_22D2BD310();
        swift_bridgeObjectRelease();
        unint64_t v46 = 0xD000000000000023;
        unint64_t v47 = 0x800000022D2D5980;
        id v39 = *(id *)&v8[*(int *)(v43 + 24)];
        id v40 = objc_msgSend(v39, sel_description);
        sub_22D2BCBD0();

        sub_22D2BCCB0();
        swift_bridgeObjectRelease();
        uint64_t result = sub_22D2BD460();
        __break(1u);
      }
      return result;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v37 = type metadata accessor for PBTypedData(0);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
  return v38(a2, 1, 1, v37);
}

uint64_t sub_22D0E8FF4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22CFF4F94(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (void **)((char *)&v56 - v9);
  sub_22CFF4F94(0, &qword_26853D7B0, type metadata accessor for PBDateRange, v5);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v62 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (uint64_t)&v56 - v13;
  sub_22CFF4F94(0, &qword_26AEC0F48, MEMORY[0x263F07490], v5);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v56 - v18;
  uint64_t v20 = type metadata accessor for PBDateRange(0);
  uint64_t v58 = *(void *)(v20 - 8);
  uint64_t v59 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a1;
  sub_22D2BBFE0();
  uint64_t v24 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if (qword_26853CFD0 != -1) {
    swift_once();
  }
  *(void *)(a3 + v24) = qword_268540208;
  swift_retain();
  id v25 = objc_msgSend(v23, sel_startDate);
  sub_22D2BBC00();

  uint64_t v26 = sub_22D2BBC30();
  uint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v19, 0, 1, v26);
  id v63 = v23;
  id v28 = objc_msgSend(v23, sel_endDate);
  sub_22D2BBC00();

  v27(v17, 0, 1, v26);
  sub_22D24D984(v19, v17);
  uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_22CFF4FF8((uint64_t)v17, &qword_26AEC0F48, MEMORY[0x263F07490]);
  sub_22CFF4FF8((uint64_t)v19, &qword_26AEC0F48, v29);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v30 = swift_retain();
    *(void *)(a3 + v24) = sub_22D1674C4(v30);
    swift_release();
  }
  uint64_t v31 = *(void *)(a3 + v24);
  uint64_t v32 = v61;
  sub_22D0E9AA8((uint64_t)v22, v61, type metadata accessor for PBDateRange);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v32, 0, 1, v59);
  uint64_t v33 = v32;
  uint64_t v34 = v62;
  sub_22CFF50D0(v33, v62, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v35 = v31
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  swift_retain();
  sub_22CFF5150(v34, v35, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
  id v36 = v63;
  uint64_t v37 = (uint64_t)objc_msgSend(v63, sel_value);
  if (v37 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_23;
  }
  int v38 = v37;
  if (v37 > 0x7FFFFFFF)
  {
LABEL_23:
    __break(1u);
    JUMPOUT(0x22D0E97E0);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v39 = swift_retain();
    *(void *)(a3 + v24) = sub_22D1674C4(v39);
    swift_release();
  }
  uint64_t v40 = *(void *)(a3 + v24);
  swift_beginAccess();
  *(_DWORD *)(v40 + 16) = v38;
  uint64_t v41 = (char *)objc_msgSend(v36, sel_value);
  uint64_t v42 = v41 - 1;
  if ((unint64_t)(v41 - 1) >= 4) {
    uint64_t v43 = 0;
  }
  else {
    uint64_t v43 = v41;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v44 = swift_retain();
    *(void *)(a3 + v24) = sub_22D1674C4(v44);
    swift_release();
  }
  uint64_t v45 = *(void *)(a3 + v24);
  unint64_t v46 = v56;
  *uint64_t v56 = v43;
  *((unsigned char *)v46 + 8) = 1;
  uint64_t v47 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
  uint64_t v48 = (uint64_t)v46;
  uint64_t v49 = v57;
  sub_22CFF50D0(v48, v57, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v50 = v45
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_22CFF5150(v49, v50, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  swift_release();
  unint64_t v51 = 0xEA0000000000776FLL;
  uint64_t v52 = 0x4C6C616974696E69;
  switch((unint64_t)v42)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v51 = 0xEE00776F4C797265;
      uint64_t v52 = 0x566C616974696E69;
      break;
    case 2uLL:
      unint64_t v51 = 0xE900000000000077;
      uint64_t v52 = 0x6F4C746165706572;
      break;
    case 3uLL:
      unint64_t v51 = 0xED0000776F4C7972;
      uint64_t v52 = 0x6556746165706572;
      break;
    default:
      unint64_t v51 = 0xE600000000000000;
      uint64_t v52 = 0x746553746F6ELL;
      break;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v53 = swift_retain();
    *(void *)(a3 + v24) = sub_22D1674C4(v53);
    swift_release();
  }
  uint64_t v54 = *(void *)(a3 + v24);
  swift_beginAccess();
  *(void *)(v54 + 24) = v52;
  *(void *)(v54 + 32) = v51;
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D0E97F8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0E8954(a1, a2);
}

uint64_t sub_22D0E986C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t objectdestroyTm_7()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D0E99A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D22A7D8(a1, 0, a2);
}

uint64_t sub_22D0E9A20@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0E8FF4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_22D0E9A40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D0E9AA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D0E9B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_22D2BBFE0();
  uint64_t v20 = *(int *)(type metadata accessor for PBLookupInfo(0) + 20);
  if (qword_26853CD10 != -1) {
    swift_once();
  }
  *(void *)(a9 + v20) = qword_26853E220;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    uint64_t v21 = swift_retain();
    *(void *)(a9 + v20) = sub_22D047BCC(v21);
    swift_release();
  }
  uint64_t v22 = *(void *)(a9 + v20);
  swift_beginAccess();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  swift_bridgeObjectRelease();
  sub_22CFF9B64(a3, a4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    uint64_t v23 = swift_retain();
    *(void *)(a9 + v20) = sub_22D047BCC(v23);
    swift_release();
  }
  uint64_t v24 = *(void *)(a9 + v20);
  swift_beginAccess();
  uint64_t v25 = *(void *)(v24 + 32);
  unint64_t v26 = *(void *)(v24 + 40);
  *(void *)(v24 + 32) = a3;
  *(void *)(v24 + 40) = a4;
  sub_22CFF5630(v25, v26);
  sub_22CFF9B64(a5, a6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)(a9 + v20) = sub_22D047BCC(v27);
    swift_release();
  }
  uint64_t v28 = *(void *)(a9 + v20);
  swift_beginAccess();
  uint64_t v29 = *(void *)(v28 + 48);
  unint64_t v30 = *(void *)(v28 + 56);
  *(void *)(v28 + 48) = a5;
  *(void *)(v28 + 56) = a6;
  sub_22CFF5630(v29, v30);
  id v31 = objc_msgSend(self, sel_currentDeviceName);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = sub_22D2BCBD0();
    unint64_t v35 = v34;
  }
  else
  {
    unint64_t v35 = 0xEE00656369766544;
    uint64_t v33 = 0x206E776F6E6B6E55;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    uint64_t v36 = swift_retain();
    *(void *)(a9 + v20) = sub_22D047BCC(v36);
    swift_release();
  }
  uint64_t v37 = *(void *)(a9 + v20);
  swift_beginAccess();
  *(void *)(v37 + 96) = v33;
  *(void *)(v37 + 104) = v35;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    uint64_t v38 = swift_retain();
    *(void *)(a9 + v20) = sub_22D047BCC(v38);
    swift_release();
  }
  uint64_t v39 = *(void *)(a9 + v20);
  swift_beginAccess();
  *(void *)(v39 + 80) = a7;
  *(void *)(v39 + 88) = a8;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    uint64_t v40 = swift_retain();
    *(void *)(a9 + v20) = sub_22D047BCC(v40);
    swift_release();
  }
  uint64_t v41 = *(void *)(a9 + v20);
  swift_beginAccess();
  *(void *)(v41 + 64) = a10;
  *(void *)(v41 + 72) = a11;
  uint64_t result = swift_bridgeObjectRelease();
  if (a12 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (a12 > 0x7FFFFFFF)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    uint64_t v43 = swift_retain();
    *(void *)(a9 + v20) = sub_22D047BCC(v43);
    swift_release();
  }
  uint64_t v44 = *(void *)(a9 + v20);
  swift_beginAccess();
  *(_DWORD *)(v44 + 112) = a12;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBLookupInfo._StorageClass(0);
    swift_allocObject();
    uint64_t v45 = swift_retain();
    *(void *)(a9 + v20) = sub_22D047BCC(v45);
    swift_release();
  }
  uint64_t v46 = *(void *)(a9 + v20);
  swift_beginAccess();
  *(void *)(v46 + 136) = a13;
  *(void *)(v46 + 144) = a14;
  swift_bridgeObjectRelease();
  sub_22CFF5630(a5, a6);
  return sub_22CFF5630(a3, a4);
}

void sub_22D0E9FDC(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v62 = a2;
  long long v75 = a3;
  sub_22D0EAB04();
  uint64_t v73 = *(void *)(v4 - 8);
  uint64_t v74 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v70 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0EAC74(0, &qword_26AEC1CE0, MEMORY[0x263EFDC20]);
  long long v64 = *(void **)(v6 - 8);
  uint64_t v65 = v6;
  MEMORY[0x270FA5388](v6);
  id v63 = (char *)v59 - v7;
  sub_22D0EAC74(0, &qword_26853F6B0, MEMORY[0x263EFDC78]);
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v68 = v8;
  MEMORY[0x270FA5388](v8);
  long long v66 = (char *)v59 - v9;
  sub_22D0EAC74(0, &qword_26853E9C0, MEMORY[0x263EFDB60]);
  uint64_t v71 = *(void *)(v10 - 8);
  uint64_t v72 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v69 = (char *)v59 - v11;
  sub_22D0EB494(0, (unint64_t *)&qword_26853DF08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263EFDDF8]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v59 - v15;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDEA0];
  sub_22D0913E0(0, (unint64_t *)&qword_26853DF10, MEMORY[0x263EFDEA0]);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v59 - v21;
  uint64_t v23 = *a1;
  v78[0] = v23;
  uint64_t v24 = type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  uint64_t v76 = v24;
  sub_22D2BC6B0();
  sub_22CFF49FC();
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_22D091458((unint64_t *)&qword_26853DF18, (unint64_t *)&qword_26853DF10, v17);
  uint64_t v25 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v26 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
  if (*(void *)(v23 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error))
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_22D2BC390();
    __swift_project_value_buffer(v27, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    uint64_t v28 = sub_22D2BC380();
    os_log_type_t v29 = sub_22D2BD060();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = v25;
      uint64_t v32 = swift_slowAlloc();
      v78[0] = v32;
      *(_DWORD *)uint64_t v30 = 136315394;
      sub_22D2BBC90();
      sub_22D0EB44C((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v33 = sub_22D2BD630();
      id v77 = (id)sub_22D0A4D24(v33, v34, v78);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      id v77 = *(id *)(v23 + v26);
      id v35 = v77;
      sub_22D0EB494(0, &qword_26AEC1FC0, (uint64_t (*)(uint64_t))sub_22CFF49FC, MEMORY[0x263F8D8F0]);
      uint64_t v36 = sub_22D2BCC30();
      id v77 = (id)sub_22D0A4D24(v36, v37, v78);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v28, v29, "ClinicalSharingSyncContext for account %s is in error state, will not be able to update DocumentReference. Error: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      uint64_t v38 = v32;
      uint64_t v25 = v31;
      MEMORY[0x230F7BDF0](v38, -1, -1);
      MEMORY[0x230F7BDF0](v30, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    v78[0] = v25;
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v62;
    *(void *)(v39 + 16) = v62;
    id v60 = v40;
    sub_22D2BC5D0();
    uint64_t v41 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(0, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    uint64_t v62 = (void *)v25;
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v41);
    uint64_t v42 = v63;
    sub_22D2BC830();
    swift_release();
    uint64_t v61 = MEMORY[0x263EFDC28];
    sub_22D0EAC30(&qword_26AEC1CD8, &qword_26AEC1CE0, MEMORY[0x263EFDC20]);
    uint64_t v43 = v65;
    uint64_t v44 = sub_22D2BC720();
    v59[1] = v44;
    uint64_t v45 = (void (*)(char *, uint64_t))v64[1];
    v45(v42, v43);
    v78[0] = v44;
    uint64_t v46 = swift_allocObject();
    uint64_t v47 = v60;
    *(void *)(v46 + 16) = v60;
    *(void *)(v46 + 24) = 3;
    long long v64 = v47;
    sub_22D2BC5D0();
    sub_22D2BC830();
    swift_release();
    uint64_t v48 = sub_22D2BC720();
    v45(v42, v43);
    swift_release();
    v78[0] = v48;
    swift_retain();
    uint64_t v49 = v66;
    sub_22D2BC850();
    swift_release();
    swift_release();
    uint64_t v50 = swift_allocObject();
    unint64_t v51 = v64;
    *(void *)(v50 + 16) = v64;
    id v52 = v51;
    sub_22D2BC5D0();
    sub_22D0EAC30(&qword_26853F6B8, &qword_26853F6B0, MEMORY[0x263EFDC78]);
    uint64_t v53 = v70;
    uint64_t v54 = v68;
    sub_22D2BC830();
    swift_release();
    sub_22D0EB44C(&qword_26853F6C0, (void (*)(uint64_t))sub_22D0EAB04);
    uint64_t v55 = v74;
    uint64_t v56 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v53, v55);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v54);
    v78[0] = v56;
    swift_retain();
    uint64_t v57 = v69;
    sub_22D2BC7A0();
    swift_release();
    swift_release();
    sub_22D0EAC30(&qword_26853E9C8, &qword_26853E9C0, MEMORY[0x263EFDB60]);
    uint64_t v58 = v72;
    uint64_t v25 = sub_22D2BC720();
    swift_release();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v57, v58);
  }
  *long long v75 = v25;
}

void sub_22D0EAB04()
{
  if (!qword_26853F6A8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(255, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    uint64_t v1 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263EFDC78];
    sub_22D0EAC74(255, &qword_26853F6B0, MEMORY[0x263EFDC78]);
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v0);
    sub_22D0EAC30(&qword_26853F6B8, &qword_26853F6B0, v1);
    unint64_t v2 = sub_22D2BC520();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26853F6A8);
    }
  }
}

uint64_t sub_22D0EAC30(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D0EAC74(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D0EAC74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(255, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    v10[0] = v7;
    v10[1] = v7;
    uint64_t v11 = sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v6);
    uint64_t v12 = v11;
    unint64_t v8 = a3(a1, v10);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D0EAD3C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v46 = a3;
  sub_22D0EB494(0, (unint64_t *)&qword_26853DF08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263EFDDF8]);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v37 - v7;
  sub_22D0913E0(0, (unint64_t *)&qword_26853DF10, MEMORY[0x263EFDEA0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = *a1;
  if (objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_clinicalSharingStatus), sel_userStatus) == (id)5)
  {
    uint64_t v43 = v11;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22D2BC390();
    __swift_project_value_buffer(v15, (uint64_t)qword_26AEC3C90);
    id v16 = v14;
    id v17 = v14;
    uint64_t v18 = sub_22D2BC380();
    os_log_type_t v19 = sub_22D2BD060();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      os_log_t v41 = v18;
      uint64_t v21 = swift_slowAlloc();
      int v40 = v20;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v48 = v39;
      uint64_t v42 = v3;
      *(_DWORD *)uint64_t v22 = 136315138;
      unint64_t v37 = v22 + 4;
      uint64_t v38 = v22;
      uint64_t v47 = (uint64_t)v14;
      id v23 = v14;
      id v24 = v14;
      sub_22CFF49FC();
      sub_22D2BD680();
      id v25 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v26 = sub_22D2BCC30();
      uint64_t v27 = v10;
      unint64_t v29 = v28;

      uint64_t v47 = sub_22D0A4D24(v26, v29, &v48);
      sub_22D2BD220();
      uint64_t v10 = v27;
      swift_bridgeObjectRelease();

      os_log_t v30 = v41;
      uint64_t v31 = v38;
      _os_log_impl(&dword_22CFEE000, v41, (os_log_type_t)v40, "ClinicalSharingSyncTask: Error searching for or updating DocumentReference while deleting the account, ignoring. Error: %s", v38, 0xCu);
      uint64_t v32 = v39;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v32, -1, -1);
      MEMORY[0x230F7BDF0](v31, -1, -1);
    }
    else
    {
    }
    uint64_t v47 = a2;
    type metadata accessor for ClinicalSharingSyncContext();
    swift_retain();
    sub_22D2BC6B0();
    sub_22CFF49FC();
    uint64_t v35 = v45;
    sub_22D2BC680();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v35);
    sub_22D091458((unint64_t *)&qword_26853DF18, (unint64_t *)&qword_26853DF10, MEMORY[0x263EFDEA0]);
    uint64_t v36 = sub_22D2BC720();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v13, v10);
    *uint64_t v46 = v36;
  }
  else
  {
    id v33 = v14;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_22D0EB1F8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v18[0] = a3;
  sub_22D0EB494(0, (unint64_t *)&qword_26853DF08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263EFDDF8]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v18 - v8;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDEA0];
  sub_22D0913E0(0, (unint64_t *)&qword_26853DF10, MEMORY[0x263EFDEA0]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v18 - v14;
  sub_22D0BF004(*a1);
  v18[1] = a2;
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_22D2BC6B0();
  sub_22CFF49FC();
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_22D091458((unint64_t *)&qword_26853DF18, (unint64_t *)&qword_26853DF10, v10);
  uint64_t v16 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)v18[0] = v16;
  return result;
}

uint64_t sub_22D0EB44C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D0EB494(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D0EB4F8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D0EB530()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D0EB568@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D02D4F0(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_22D0EB570@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0EAD3C(a1, v2, a2);
}

uint64_t sub_22D0EB58C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0BCB78(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_22D0EB594@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0EB1F8(a1, v2, a2);
}

uint64_t PBDeleteBlob.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0ECC44(type metadata accessor for PBDeleteBlob, &qword_26853CE50, &qword_26853F878, a1);
}

uint64_t type metadata accessor for PBDeleteBlob(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FDB0);
}

uint64_t PBDeleteBlob.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D0F5DA4(a1, a2, type metadata accessor for PBDeleteBlob, (void (*)(void))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D100D3C);
}

uint64_t PBDeleteBlob.revocationAuthorization.setter(uint64_t a1)
{
  sub_22D100F98(0, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBDeleteBlob(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlob._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = (void *)swift_retain();
    *(void *)(v1 + v9) = sub_22D100D3C(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1013CC(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
  uint64_t v12 = type metadata accessor for PBRevocationAuthorization();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1036C8((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v6, v13, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  swift_endAccess();
  return swift_release();
}

uint64_t PBBlobPushResult.resultCode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0F09C0(type metadata accessor for PBBlobPushResult, a1);
}

uint64_t PBPushBlobsRequest.blobs.getter@<X0>(void *a1@<X8>)
{
  sub_22D100F98(0, &qword_26853F978, type metadata accessor for PBBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_22D1012DC(v6, (uint64_t)v5, &qword_26853F978, type metadata accessor for PBBlobs);
  uint64_t v7 = type metadata accessor for PBBlobs(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1013CC((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBBlobs);
  }
  *a1 = MEMORY[0x263F8EE78];
  sub_22D2BBFE0();
  return sub_22D10135C((uint64_t)v5, &qword_26853F978, type metadata accessor for PBBlobs);
}

uint64_t sub_22D0EB9F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_22D100F98(0, &qword_26853F978, type metadata accessor for PBBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_22D1012DC(v7, (uint64_t)v6, &qword_26853F978, type metadata accessor for PBBlobs);
  uint64_t v8 = type metadata accessor for PBBlobs(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1013CC((uint64_t)v6, (uint64_t)a2, type metadata accessor for PBBlobs);
  }
  *a2 = MEMORY[0x263F8EE78];
  sub_22D2BBFE0();
  return sub_22D10135C((uint64_t)v6, &qword_26853F978, type metadata accessor for PBBlobs);
}

uint64_t PBPushBlobsRequest.blobs.setter(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F978, type metadata accessor for PBBlobs, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D0F71BC(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1013CC(a1, (uint64_t)v8, type metadata accessor for PBBlobs);
  uint64_t v12 = type metadata accessor for PBBlobs(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1036C8((uint64_t)v8, (uint64_t)v6, &qword_26853F978, type metadata accessor for PBBlobs);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v6, v13, &qword_26853F978, type metadata accessor for PBBlobs);
  swift_endAccess();
  return swift_release();
}

uint64_t PBBlobs.init()@<X0>(void *a1@<X8>)
{
  return sub_22D0EE03C((void (*)(void))type metadata accessor for PBBlobs, a1);
}

void (*PBPushBlobsRequest.blobs.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D100F98(0, &qword_26853F978, type metadata accessor for PBBlobs, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBBlobs(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_22D1012DC(v10, (uint64_t)v5, &qword_26853F978, type metadata accessor for PBBlobs);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = MEMORY[0x263F8EE78];
    sub_22D2BBFE0();
    sub_22D10135C((uint64_t)v5, &qword_26853F978, type metadata accessor for PBBlobs);
  }
  else
  {
    sub_22D1013CC((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobs);
  }
  return sub_22D0EBFC0;
}

void sub_22D0EBFC0(uint64_t a1, char a2)
{
}

BOOL PBPushBlobsRequest.hasBlobs.getter()
{
  sub_22D100F98(0, &qword_26853F978, type metadata accessor for PBBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_22D1012DC(v4, (uint64_t)v3, &qword_26853F978, type metadata accessor for PBBlobs);
  uint64_t v5 = type metadata accessor for PBBlobs(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D10135C((uint64_t)v3, &qword_26853F978, type metadata accessor for PBBlobs);
  return v6;
}

Swift::Void __swiftcall PBPushBlobsRequest.clearBlobs()()
{
  sub_22D100F98(0, &qword_26853F978, type metadata accessor for PBBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D0F71BC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBBlobs(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F978, type metadata accessor for PBBlobs);
  swift_endAccess();
  swift_release();
}

uint64_t PBPushBlobsRequest.blobAuth.getter@<X0>(void *a1@<X8>)
{
  return sub_22D0F26B8(type metadata accessor for PBPushBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth, a1);
}

uint64_t sub_22D0EC300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(char *))
{
  uint64_t v10 = a5(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v14 - v11;
  sub_22D1037C8(a1, (uint64_t)&v14 - v11, a6);
  return a7(v12);
}

uint64_t PBPushBlobsRequest.blobAuth.setter(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D0F71BC(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1013CC(a1, (uint64_t)v8, type metadata accessor for PBBlobAuth);
  uint64_t v12 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1036C8((uint64_t)v8, (uint64_t)v6, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v6, v13, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return swift_release();
}

uint64_t PBBlobAuth.init()@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = sub_22D2BBFC0();
  a1[2] = v2;
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  type metadata accessor for PBBlobAuth(0);
  return sub_22D2BBFE0();
}

void (*PBPushBlobsRequest.blobAuth.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBBlobAuth(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v10, (uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = MEMORY[0x263F8EE78];
    v9[1] = sub_22D2BBFC0();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D10135C((uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_22D1013CC((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_22D0EC814;
}

void sub_22D0EC814(uint64_t a1, char a2)
{
}

void sub_22D0EC854(uint64_t a1, char a2, void (*a3)(void *), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(*(void *)a1 + 40);
  size_t v8 = *(void **)(*(void *)a1 + 48);
  uint64_t v9 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    sub_22D1037C8(*(void *)(*(void *)a1 + 48), (uint64_t)v7, a4);
    a3(v7);
    sub_22D10107C((uint64_t)v8, a5);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 48));
  }
  free(v8);
  free(v7);
  free(v9);
  free(v6);
}

BOOL PBPushBlobsRequest.hasBlobAuth.getter()
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v4, (uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v5 = type metadata accessor for PBBlobAuth(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D10135C((uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  return v6;
}

Swift::Void __swiftcall PBPushBlobsRequest.clearBlobAuth()()
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D0F71BC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBPushBlobsRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPushBlobsRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0ECC44(type metadata accessor for PBPushBlobsRequest, &qword_26853CDB8, &qword_26853F700, a1);
}

uint64_t sub_22D0ECC44@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(a1(0) + 20);
  if (*a2 != -1) {
    swift_once();
  }
  *(void *)(a4 + v8) = *a3;
  return swift_retain();
}

uint64_t PBBlobAuth.certs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBBlobAuth.certs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*PBBlobAuth.certs.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAuth.sig.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_22CFF9B64(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t PBBlobAuth.sig.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22CFF5630(*(void *)(v2 + 8), *(void *)(v2 + 16));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*PBBlobAuth.sig.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAuth.alg.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBBlobAuth.alg.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*PBBlobAuth.alg.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAuth.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDCF0(type metadata accessor for PBBlobAuth, a1);
}

uint64_t PBBlobAuth.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDD88(a1, type metadata accessor for PBBlobAuth);
}

uint64_t (*PBBlobAuth.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBBlobs.blobs.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobs.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDEC8(type metadata accessor for PBBlobs, a1);
}

uint64_t PBBlobs.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDF60(a1, type metadata accessor for PBBlobs);
}

uint64_t (*PBBlobs.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBBlob.id.getter()
{
  return sub_22D0EE09C(type metadata accessor for PBBlob);
}

uint64_t PBBlob.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D0F5DA4(a1, a2, type metadata accessor for PBBlob, (void (*)(void))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D0F9658);
}

void (*PBBlob.id.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D0ED02C;
}

void sub_22D0ED02C(uint64_t *a1, char a2)
{
}

uint64_t PBBlob.content.getter()
{
  return sub_22D0F3198(type metadata accessor for PBBlob);
}

uint64_t PBBlob.content.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D0F3378(a1, a2, type metadata accessor for PBBlob, (void (*)(void))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D0F9658);
}

void (*PBBlob.content.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 32);
  unint64_t v7 = *(void *)(v5 + 40);
  v3[9] = v6;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D0ED13C;
}

void sub_22D0ED13C(uint64_t *a1, char a2)
{
}

uint64_t PBBlob.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0ED1B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBBlob(0) + 20));
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0ED214(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlob._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(a2 + v4) = sub_22D0F9658(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + v4);
  swift_beginAccess();
  *(void *)(v6 + 48) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlob.attributes.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlob._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = (void *)swift_retain();
    *(void *)(v1 + v3) = sub_22D0F9658(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  swift_beginAccess();
  *(void *)(v5 + 48) = a1;
  return swift_bridgeObjectRelease();
}

void (*PBBlob.attributes.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(void *)(v5 + 48);
  swift_bridgeObjectRetain();
  return sub_22D0ED414;
}

void sub_22D0ED414(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = *(int *)(v2 + 88);
      uint64_t v5 = *(void *)(v2 + 80);
      type metadata accessor for PBBlob._StorageClass(0);
      swift_allocObject();
      uint64_t v6 = (void *)swift_retain();
      *(void *)(v5 + v4) = sub_22D0F9658(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v7 + 48) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = *(int *)(v2 + 88);
      uint64_t v9 = *(void *)(v2 + 80);
      type metadata accessor for PBBlob._StorageClass(0);
      swift_allocObject();
      uint64_t v10 = (void *)swift_retain();
      *(void *)(v9 + v8) = sub_22D0F9658(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v11 + 48) = v3;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBBlob.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EEDD0(type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a1);
}

uint64_t PBBlob.expirationTime.setter(uint64_t a1)
{
  return sub_22D0F6468(a1, type metadata accessor for PBBlob, (void (*)(void))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D0F9658, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

void (*PBBlob.expirationTime.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v3[4] = v6;
  uint64_t v7 = sub_22D2BBFB0();
  v3[5] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  v3[6] = v8;
  size_t v10 = *(void *)(v8 + 64);
  v3[7] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v3[8] = v11;
  uint64_t v12 = *(void *)(v1 + *(int *)(type metadata accessor for PBBlob(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v12, (uint64_t)v6, &qword_26853F998, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7) == 1)
  {
    sub_22D2BBFA0();
    sub_22D10135C((uint64_t)v6, &qword_26853F998, MEMORY[0x263F502F0]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v6, v7);
  }
  return sub_22D0ED7E8;
}

void sub_22D0ED7E8(uint64_t a1, char a2)
{
}

BOOL PBBlob.hasExpirationTime.getter()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for PBBlob(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v5, (uint64_t)v4, &qword_26853F998, v1);
  uint64_t v6 = sub_22D2BBFB0();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_22D10135C((uint64_t)v4, &qword_26853F998, v1);
  return v7;
}

Swift::Void __swiftcall PBBlob.clearExpirationTime()()
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlob._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v0 + v4) = sub_22D0F9658(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = sub_22D2BBFB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F998, MEMORY[0x263F502F0]);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBBlob.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBBlob.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0ECC44(type metadata accessor for PBBlob, &qword_26853CDD8, &qword_26853F750, a1);
}

uint64_t PBBlobAttribute.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBBlobAttribute.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PBBlobAttribute.id.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAttribute.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBBlobAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBBlobAttribute.name.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAttribute.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBBlobAttribute.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PBBlobAttribute.value.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAttribute.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDCF0(type metadata accessor for PBBlobAttribute, a1);
}

uint64_t sub_22D0EDCF0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PBBlobAttribute.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDD88(a1, type metadata accessor for PBBlobAttribute);
}

uint64_t sub_22D0EDD88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBBlobAttribute.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobAttribute.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  type metadata accessor for PBBlobAttribute(0);
  return sub_22D2BBFE0();
}

uint64_t (*PBPushBlobsResponse.results.modify())()
{
  return nullsub_1;
}

uint64_t PBPushBlobsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDEC8(type metadata accessor for PBPushBlobsResponse, a1);
}

uint64_t sub_22D0EDEC8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PBPushBlobsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDF60(a1, type metadata accessor for PBPushBlobsResponse);
}

uint64_t sub_22D0EDF60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBPushBlobsResponse.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPushBlobsResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_22D0EE03C((void (*)(void))type metadata accessor for PBPushBlobsResponse, a1);
}

uint64_t sub_22D0EE03C@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x263F8EE78];
  a1(0);
  return sub_22D2BBFE0();
}

uint64_t PBBlobPushResult.id.getter()
{
  return sub_22D0EE09C(type metadata accessor for PBBlobPushResult);
}

uint64_t sub_22D0EE09C(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_22D0EE100@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  *a3 = *(void *)(v4 + 16);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0EE160(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D0FD8A4(v6, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobPushResult.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D0FD8A4(v6, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobPushResult.id.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D0EE3D4;
}

void sub_22D0EE3D4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBBlobPushResult._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D0FD8A4(v7, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBBlobPushResult._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D0FD8A4(v11, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBBlobPushResult.message.getter()
{
  return sub_22D0F0490(type metadata accessor for PBBlobPushResult);
}

uint64_t sub_22D0EE5CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D0FD8A4(v6, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobPushResult.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D0FD8A4(v6, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobPushResult.message.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D0EE840;
}

void sub_22D0EE840(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBBlobPushResult._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D0FD8A4(v7, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBBlobPushResult._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D0FD8A4(v11, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 32) = v3;
    *(void *)(v12 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t sub_22D0EEA20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D0FD8A4(v6, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 48) = v3;
  *(unsigned char *)(v7 + 56) = v4;
  return result;
}

uint64_t PBBlobPushResult.resultCode.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v1 + v4) = sub_22D0FD8A4(v5, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t result = swift_beginAccess();
  *(void *)(v6 + 48) = v2;
  *(unsigned char *)(v6 + 56) = v3;
  return result;
}

void (*PBBlobPushResult.resultCode.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 56);
  v3[9] = *(void *)(v5 + 48);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D0EEC88;
}

void sub_22D0EEC88(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v8 + v7) = sub_22D0FD8A4(v9, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v10 + 48) = v4;
  *(unsigned char *)(v10 + 56) = v5;
  free((void *)v3);
}

uint64_t PBBlobPushResult.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EEDD0(type metadata accessor for PBBlobPushResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a1);
}

uint64_t sub_22D0EEDD0@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_22D1012DC(v11, (uint64_t)v10, &qword_26853F998, v7);
  uint64_t v12 = sub_22D2BBFB0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a3, v10, v12);
  }
  sub_22D2BBFA0();
  return sub_22D10135C((uint64_t)v10, &qword_26853F998, MEMORY[0x263F502F0]);
}

uint64_t sub_22D0EEF80@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = *(void *)(a1 + *(int *)(a2(0) + 20)) + *a3;
  swift_beginAccess();
  sub_22D1012DC(v12, (uint64_t)v11, &qword_26853F998, v8);
  uint64_t v13 = sub_22D2BBFB0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4, v11, v13);
  }
  sub_22D2BBFA0();
  return sub_22D10135C((uint64_t)v11, &qword_26853F998, MEMORY[0x263F502F0]);
}

uint64_t sub_22D0EF134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7 = sub_22D2BBFB0();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, a1);
  return a5(v9);
}

uint64_t PBBlobPushResult.expirationTime.setter(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  char v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D0FD8A4(v10, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  uint64_t v12 = sub_22D2BBFB0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v8, a1, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D1036C8((uint64_t)v8, (uint64_t)v6, &qword_26853F998, MEMORY[0x263F502F0]);
  uint64_t v15 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v6, v15, &qword_26853F998, v14);
  swift_endAccess();
  return swift_release();
}

void (*PBBlobPushResult.expirationTime.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  char v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v3[4] = v6;
  uint64_t v7 = sub_22D2BBFB0();
  v3[5] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  v3[6] = v8;
  size_t v10 = *(void *)(v8 + 64);
  v3[7] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v3[8] = v11;
  uint64_t v12 = *(void *)(v1 + *(int *)(type metadata accessor for PBBlobPushResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v12, (uint64_t)v6, &qword_26853F998, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7) == 1)
  {
    sub_22D2BBFA0();
    sub_22D10135C((uint64_t)v6, &qword_26853F998, MEMORY[0x263F502F0]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v6, v7);
  }
  return sub_22D0EF670;
}

void sub_22D0EF670(uint64_t a1, char a2)
{
}

void sub_22D0EF688(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(*(void *)a1 + 56);
  char v6 = *(void **)(*(void *)a1 + 64);
  if (a2)
  {
    uint64_t v7 = v4[5];
    uint64_t v8 = v4[6];
    uint64_t v9 = (void *)v4[4];
    (*(void (**)(void, void *, uint64_t))(v8 + 16))(*(void *)(*(void *)a1 + 56), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    uint64_t v9 = (void *)v4[4];
    a3(*(void **)(*(void *)a1 + 64));
  }
  free(v6);
  free(v5);
  free(v9);
  free(v4);
}

BOOL PBBlobPushResult.hasExpirationTime.getter()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for PBBlobPushResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v5, (uint64_t)v4, &qword_26853F998, v1);
  uint64_t v6 = sub_22D2BBFB0();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_22D10135C((uint64_t)v4, &qword_26853F998, v1);
  return v7;
}

Swift::Void __swiftcall PBBlobPushResult.clearExpirationTime()()
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D0FD8A4(v5, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = sub_22D2BBFB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F998, MEMORY[0x263F502F0]);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBBlobPushResult.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobPushResult.ResultCode.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = 1;
  switch(result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      break;
    case 5:
      uint64_t result = 4;
      break;
    case 6:
      uint64_t result = 5;
      break;
    case 7:
      uint64_t result = 6;
      break;
    default:
      char v2 = 0;
      break;
  }
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBBlobPushResult.ResultCode.rawValue.getter()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_22D2C77E0[result];
  }
  return result;
}

uint64_t sub_22D0EFB38()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_22D2C77E0[result];
  }
  return result;
}

uint64_t sub_22D0EFB58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBBlobPushResult.ResultCode.init(rawValue:)(*a1, a2);
}

void sub_22D0EFB60(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8) == 1) {
    uint64_t v2 = qword_22D2C77E0[v2];
  }
  *a1 = v2;
}

uint64_t sub_22D0EFB88(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D10D458();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

BOOL sub_22D0EFBD8(uint64_t a1, uint64_t a2)
{
  return sub_22D0B935C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t PBBlobPushResult.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0ECC44(type metadata accessor for PBBlobPushResult, &qword_26853CDF8, &qword_26853F7A0, a1);
}

void sub_22D0EFC2C()
{
  qword_26853F6C8 = (uint64_t)&unk_26E05A528;
}

uint64_t static PBBlobPushResult.ResultCode.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CD90);
}

uint64_t static PBBlobPushResult.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CD90, &qword_26853F6C8);
}

uint64_t (*static PBBlobPushResult.ResultCode.allCases.modify())()
{
  if (qword_26853CD90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D0EFD10@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CD90, &qword_26853F6C8, a1);
}

uint64_t (*PBPullBlobsRequest.ids.modify())()
{
  return nullsub_1;
}

uint64_t PBPullBlobsRequest.healthInstituteID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBPullBlobsRequest.healthInstituteID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*PBPullBlobsRequest.healthInstituteID.modify())()
{
  return nullsub_1;
}

uint64_t PBPullBlobsRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBPullBlobsRequest(0) + 24);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBPullBlobsRequest.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBPullBlobsRequest(0) + 24);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBPullBlobsRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPullBlobsRequest.init()@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  type metadata accessor for PBPullBlobsRequest(0);
  return sub_22D2BBFE0();
}

uint64_t (*PBPullBlobsResponse.results.modify())()
{
  return nullsub_1;
}

uint64_t PBPullBlobsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDEC8(type metadata accessor for PBPullBlobsResponse, a1);
}

uint64_t PBPullBlobsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDF60(a1, type metadata accessor for PBPullBlobsResponse);
}

uint64_t (*PBPullBlobsResponse.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPullBlobsResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_22D0EE03C((void (*)(void))type metadata accessor for PBPullBlobsResponse, a1);
}

uint64_t PBBlobPullResult.id.getter()
{
  return sub_22D0EE09C(type metadata accessor for PBBlobPullResult);
}

uint64_t sub_22D0F0024(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D0FD8A4(v6, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobPullResult.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D0FD8A4(v6, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobPullResult.id.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D0F0298;
}

void sub_22D0F0298(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBBlobPullResult._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D0FD8A4(v7, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBBlobPullResult._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D0FD8A4(v11, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBBlobPullResult.message.getter()
{
  return sub_22D0F0490(type metadata accessor for PBBlobPullResult);
}

uint64_t sub_22D0F0490(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_22D0F04F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 40);
  *a3 = *(void *)(v4 + 32);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D0F0554(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D0FD8A4(v6, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobPullResult.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D0FD8A4(v6, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobPullResult.message.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D0F07C8;
}

void sub_22D0F07C8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBBlobPullResult._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D0FD8A4(v7, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBBlobPullResult._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D0FD8A4(v11, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 32) = v3;
    *(void *)(v12 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBBlobPullResult.resultCode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0F09C0(type metadata accessor for PBBlobPullResult, a1);
}

uint64_t sub_22D0F09C0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + *(int *)(a1(0) + 20));
  uint64_t result = swift_beginAccess();
  char v6 = *(unsigned char *)(v4 + 56);
  *(void *)a2 = *(void *)(v4 + 48);
  *(unsigned char *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_22D0F0A24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D0FD8A4(v6, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 48) = v3;
  *(unsigned char *)(v7 + 56) = v4;
  return result;
}

uint64_t PBBlobPullResult.resultCode.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v1 + v4) = sub_22D0FD8A4(v5, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t result = swift_beginAccess();
  *(void *)(v6 + 48) = v2;
  *(unsigned char *)(v6 + 56) = v3;
  return result;
}

void (*PBBlobPullResult.resultCode.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 56);
  v3[9] = *(void *)(v5 + 48);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D0F0C8C;
}

void sub_22D0F0C8C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v8 + v7) = sub_22D0FD8A4(v9, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v10 + 48) = v4;
  *(unsigned char *)(v10 + 56) = v5;
  free((void *)v3);
}

uint64_t PBBlobPullResult.blob.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D100F98(0, &qword_26853F9B0, type metadata accessor for PBBlob, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  char v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBBlobPullResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  sub_22D1012DC(v6, (uint64_t)v5, &qword_26853F9B0, type metadata accessor for PBBlob);
  uint64_t v7 = type metadata accessor for PBBlob(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1013CC((uint64_t)v5, a1, type metadata accessor for PBBlob);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853CDD8 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_26853F750;
  swift_retain();
  return sub_22D10135C((uint64_t)v5, &qword_26853F9B0, type metadata accessor for PBBlob);
}

uint64_t sub_22D0F0F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D100F98(0, &qword_26853F9B0, type metadata accessor for PBBlob, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBBlobPullResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  sub_22D1012DC(v7, (uint64_t)v6, &qword_26853F9B0, type metadata accessor for PBBlob);
  uint64_t v8 = type metadata accessor for PBBlob(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1013CC((uint64_t)v6, a2, type metadata accessor for PBBlob);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853CDD8 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_26853F750;
  swift_retain();
  return sub_22D10135C((uint64_t)v6, &qword_26853F9B0, type metadata accessor for PBBlob);
}

uint64_t PBBlobPullResult.blob.setter(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F9B0, type metadata accessor for PBBlob, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D0FD8A4(v10, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1013CC(a1, (uint64_t)v8, type metadata accessor for PBBlob);
  uint64_t v12 = type metadata accessor for PBBlob(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1036C8((uint64_t)v8, (uint64_t)v6, &qword_26853F9B0, type metadata accessor for PBBlob);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v6, v13, &qword_26853F9B0, type metadata accessor for PBBlob);
  swift_endAccess();
  return swift_release();
}

void (*PBBlobPullResult.blob.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D100F98(0, &qword_26853F9B0, type metadata accessor for PBBlob, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBBlob(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBBlobPullResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  sub_22D1012DC(v10, (uint64_t)v5, &qword_26853F9B0, type metadata accessor for PBBlob);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853CDD8 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_26853F750;
    swift_retain();
    sub_22D10135C((uint64_t)v5, &qword_26853F9B0, type metadata accessor for PBBlob);
  }
  else
  {
    sub_22D1013CC((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlob);
  }
  return sub_22D0F15D4;
}

void sub_22D0F15D4(uint64_t a1, char a2)
{
}

BOOL PBBlobPullResult.hasBlob.getter()
{
  sub_22D100F98(0, &qword_26853F9B0, type metadata accessor for PBBlob, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBBlobPullResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  sub_22D1012DC(v4, (uint64_t)v3, &qword_26853F9B0, type metadata accessor for PBBlob);
  uint64_t v5 = type metadata accessor for PBBlob(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D10135C((uint64_t)v3, &qword_26853F9B0, type metadata accessor for PBBlob);
  return v6;
}

Swift::Void __swiftcall PBBlobPullResult.clearBlob()()
{
  sub_22D100F98(0, &qword_26853F9B0, type metadata accessor for PBBlob, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D0FD8A4(v5, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBBlob(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F9B0, type metadata accessor for PBBlob);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBBlobPullResult.unknownFields.modify())()
{
  return nullsub_1;
}

void PBBlobPullResult.ResultCode.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t PBBlobPullResult.ResultCode.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = 1;
  switch(result)
  {
    case 0:
      break;
    case 4:
      uint64_t result = 1;
      break;
    case 5:
      uint64_t result = 2;
      break;
    case 7:
      uint64_t result = 3;
      break;
    default:
      char v2 = 0;
      break;
  }
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBBlobPullResult.ResultCode.rawValue.getter()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_22D2C7818[result];
  }
  return result;
}

uint64_t sub_22D0F1A04()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_22D2C7818[result];
  }
  return result;
}

uint64_t sub_22D0F1A24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBBlobPullResult.ResultCode.init(rawValue:)(*a1, a2);
}

void sub_22D0F1A2C(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8) == 1) {
    uint64_t v2 = qword_22D2C7818[v2];
  }
  *a1 = v2;
}

uint64_t sub_22D0F1A50(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D10D404();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

BOOL sub_22D0F1A9C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (*((unsigned char *)a1 + 8) == 1) {
    uint64_t v2 = qword_22D2C7818[v2];
  }
  uint64_t v3 = *a2;
  if (*((unsigned char *)a2 + 8)) {
    uint64_t v3 = qword_22D2C7818[v3];
  }
  return v2 == v3;
}

uint64_t PBBlobPullResult.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0ECC44(type metadata accessor for PBBlobPullResult, &qword_26853CE20, &qword_26853F808, a1);
}

void sub_22D0F1B0C()
{
  qword_26853F6D0 = (uint64_t)&unk_26E05A5B8;
}

uint64_t static PBBlobPullResult.ResultCode.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CD98);
}

uint64_t static PBBlobPullResult.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CD98, &qword_26853F6D0);
}

uint64_t (*static PBBlobPullResult.ResultCode.allCases.modify())()
{
  if (qword_26853CD98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22D0F1BF0@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CD98, &qword_26853F6D0, a1);
}

uint64_t PBDeleteBlobsRequest.deleteBlobs.getter@<X0>(void *a1@<X8>)
{
  sub_22D100F98(0, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_22D1012DC(v6, (uint64_t)v5, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  uint64_t v7 = type metadata accessor for PBDeleteBlobs(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1013CC((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBDeleteBlobs);
  }
  *a1 = MEMORY[0x263F8EE78];
  sub_22D2BBFE0();
  return sub_22D10135C((uint64_t)v5, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
}

uint64_t sub_22D0F1DB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_22D100F98(0, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_22D1012DC(v7, (uint64_t)v6, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  uint64_t v8 = type metadata accessor for PBDeleteBlobs(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1013CC((uint64_t)v6, (uint64_t)a2, type metadata accessor for PBDeleteBlobs);
  }
  *a2 = MEMORY[0x263F8EE78];
  sub_22D2BBFE0();
  return sub_22D10135C((uint64_t)v6, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
}

uint64_t PBDeleteBlobsRequest.deleteBlobs.setter(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D0FEF20(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1013CC(a1, (uint64_t)v8, type metadata accessor for PBDeleteBlobs);
  uint64_t v12 = type metadata accessor for PBDeleteBlobs(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1036C8((uint64_t)v8, (uint64_t)v6, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v6, v13, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  swift_endAccess();
  return swift_release();
}

uint64_t PBDeleteBlobs.init()@<X0>(void *a1@<X8>)
{
  return sub_22D0EE03C((void (*)(void))type metadata accessor for PBDeleteBlobs, a1);
}

void (*PBDeleteBlobsRequest.deleteBlobs.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D100F98(0, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBDeleteBlobs(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_22D1012DC(v10, (uint64_t)v5, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = MEMORY[0x263F8EE78];
    sub_22D2BBFE0();
    sub_22D10135C((uint64_t)v5, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  }
  else
  {
    sub_22D1013CC((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDeleteBlobs);
  }
  return sub_22D0F2378;
}

void sub_22D0F2378(uint64_t a1, char a2)
{
}

BOOL PBDeleteBlobsRequest.hasDeleteBlobs.getter()
{
  sub_22D100F98(0, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_22D1012DC(v4, (uint64_t)v3, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  uint64_t v5 = type metadata accessor for PBDeleteBlobs(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D10135C((uint64_t)v3, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  return v6;
}

Swift::Void __swiftcall PBDeleteBlobsRequest.clearDeleteBlobs()()
{
  sub_22D100F98(0, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D0FEF20(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBDeleteBlobs(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  swift_endAccess();
  swift_release();
}

uint64_t PBDeleteBlobsRequest.blobAuth.getter@<X0>(void *a1@<X8>)
{
  return sub_22D0F26B8(type metadata accessor for PBDeleteBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth, a1);
}

uint64_t sub_22D0F26B8@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_22D1012DC(v10, (uint64_t)v9, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v11 = type metadata accessor for PBBlobAuth(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1) {
    return sub_22D1013CC((uint64_t)v9, (uint64_t)a3, type metadata accessor for PBBlobAuth);
  }
  *a3 = MEMORY[0x263F8EE78];
  a3[1] = sub_22D2BBFC0();
  a3[2] = v12;
  a3[3] = 0;
  a3[4] = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D10135C((uint64_t)v9, &qword_26853F988, type metadata accessor for PBBlobAuth);
}

uint64_t PBDeleteBlobsRequest.blobAuth.setter(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D0FEF20(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1013CC(a1, (uint64_t)v8, type metadata accessor for PBBlobAuth);
  uint64_t v12 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1036C8((uint64_t)v8, (uint64_t)v6, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v6, v13, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return swift_release();
}

void (*PBDeleteBlobsRequest.blobAuth.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBBlobAuth(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v10, (uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = MEMORY[0x263F8EE78];
    v9[1] = sub_22D2BBFC0();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D10135C((uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_22D1013CC((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_22D0F2C94;
}

void sub_22D0F2C94(uint64_t a1, char a2)
{
}

BOOL PBDeleteBlobsRequest.hasBlobAuth.getter()
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v4, (uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v5 = type metadata accessor for PBBlobAuth(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D10135C((uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  return v6;
}

Swift::Void __swiftcall PBDeleteBlobsRequest.clearBlobAuth()()
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D0FEF20(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBDeleteBlobsRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBDeleteBlobsRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0ECC44(type metadata accessor for PBDeleteBlobsRequest, &qword_26853CE38, &qword_26853F840, a1);
}

uint64_t (*PBDeleteBlobs.deleteBlobs.modify())()
{
  return nullsub_1;
}

uint64_t PBDeleteBlobs.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDEC8(type metadata accessor for PBDeleteBlobs, a1);
}

uint64_t PBDeleteBlobs.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDF60(a1, type metadata accessor for PBDeleteBlobs);
}

uint64_t (*PBDeleteBlobs.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBDeleteBlob.id.getter()
{
  return sub_22D0EE09C(type metadata accessor for PBDeleteBlob);
}

void (*PBDeleteBlob.id.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBDeleteBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D0F3154;
}

void sub_22D0F3154(uint64_t *a1, char a2)
{
}

uint64_t PBDeleteBlob.deletionCommitment.getter()
{
  return sub_22D0F3198(type metadata accessor for PBDeleteBlob);
}

uint64_t sub_22D0F3198(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 32);
  sub_22CFF9B64(v3, *(void *)(v2 + 40));
  return v3;
}

uint64_t sub_22D0F3200@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 32);
  unint64_t v6 = *(void *)(v4 + 40);
  *a3 = v5;
  a3[1] = v6;
  return sub_22CFF9B64(v5, v6);
}

uint64_t sub_22D0F3260(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  uint64_t v12 = *(int *)(a5(0) + 20);
  sub_22CFF9B64(v10, v11);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(a2 + v12) = a7(v13);
    swift_release();
  }
  uint64_t v14 = *(void *)(a2 + v12);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v14 + 32);
  unint64_t v16 = *(void *)(v14 + 40);
  *(void *)(v14 + 32) = v10;
  *(void *)(v14 + 40) = v11;
  return sub_22CFF5630(v15, v16);
}

uint64_t PBDeleteBlob.deletionCommitment.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D0F3378(a1, a2, type metadata accessor for PBDeleteBlob, (void (*)(void))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D100D3C);
}

uint64_t sub_22D0F3378(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a5(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(v5 + v10);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 32);
  unint64_t v14 = *(void *)(v12 + 40);
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  return sub_22CFF5630(v13, v14);
}

void (*PBDeleteBlob.deletionCommitment.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBDeleteBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 32);
  unint64_t v7 = *(void *)(v5 + 40);
  v3[9] = v6;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D0F34D8;
}

void sub_22D0F34D8(uint64_t *a1, char a2)
{
}

void sub_22D0F3504(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  unint64_t v8 = *(void *)(*a1 + 80);
  if (a2)
  {
    sub_22CFF9B64(*(void *)(*a1 + 72), v8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = a4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 32);
    unint64_t v14 = *(void *)(v12 + 40);
    *(void *)(v12 + 32) = v7;
    *(void *)(v12 + 40) = v8;
    sub_22CFF5630(v13, v14);
    uint64_t v15 = *(void *)(v6 + 72);
    unint64_t v16 = *(void *)(v6 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v17 = *(int *)(v6 + 96);
      uint64_t v18 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v19 = swift_retain();
      *(void *)(v18 + v17) = a4(v19);
      swift_release();
    }
    uint64_t v20 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    uint64_t v15 = *(void *)(v20 + 32);
    unint64_t v16 = *(void *)(v20 + 40);
    *(void *)(v20 + 32) = v7;
    *(void *)(v20 + 40) = v8;
  }
  sub_22CFF5630(v15, v16);
  free((void *)v6);
}

uint64_t PBDeleteBlob.revocationAuthorization.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D100F98(0, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBDeleteBlob(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  sub_22D1012DC(v6, (uint64_t)v5, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  uint64_t v7 = type metadata accessor for PBRevocationAuthorization();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1013CC((uint64_t)v5, a1, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
  }
  *(void *)a1 = sub_22D2BBFC0();
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D10135C((uint64_t)v5, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
}

void (*PBDeleteBlob.revocationAuthorization.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D100F98(0, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBRevocationAuthorization();
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBDeleteBlob(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  sub_22D1012DC(v10, (uint64_t)v5, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = sub_22D2BBFC0();
    v9[1] = v11;
    v9[2] = 0;
    *((unsigned char *)v9 + 24) = 1;
    v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    _OWORD v9[6] = 0;
    v9[7] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D10135C((uint64_t)v5, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  }
  else
  {
    sub_22D1013CC((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
  }
  return sub_22D0F3A60;
}

void sub_22D0F3A60(uint64_t a1, char a2)
{
}

BOOL PBDeleteBlob.hasRevocationAuthorization.getter()
{
  sub_22D100F98(0, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBDeleteBlob(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  sub_22D1012DC(v4, (uint64_t)v3, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  uint64_t v5 = type metadata accessor for PBRevocationAuthorization();
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D10135C((uint64_t)v3, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  return v6;
}

Swift::Void __swiftcall PBDeleteBlob.clearRevocationAuthorization()()
{
  sub_22D100F98(0, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBDeleteBlob(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlob._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v0 + v4) = sub_22D100D3C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBRevocationAuthorization();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBDeleteBlob.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBDeleteBlobsResponse.results.modify())()
{
  return nullsub_1;
}

uint64_t PBDeleteBlobsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDEC8(type metadata accessor for PBDeleteBlobsResponse, a1);
}

uint64_t PBDeleteBlobsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDF60(a1, type metadata accessor for PBDeleteBlobsResponse);
}

uint64_t (*PBDeleteBlobsResponse.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBDeleteBlobsResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_22D0EE03C((void (*)(void))type metadata accessor for PBDeleteBlobsResponse, a1);
}

uint64_t (*PBBlobDeleteResult.id.modify())()
{
  return nullsub_1;
}

uint64_t (*PBBlobDeleteResult.message.modify())()
{
  return nullsub_1;
}

void PBBlobDeleteResult.resultCode.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 32);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBBlobDeleteResult.resultCode.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 32) = *(void *)result;
  *(unsigned char *)(v1 + 40) = v2;
  return result;
}

uint64_t (*PBBlobDeleteResult.resultCode.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobDeleteResult.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDCF0(type metadata accessor for PBBlobDeleteResult, a1);
}

uint64_t PBBlobDeleteResult.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDD88(a1, type metadata accessor for PBBlobDeleteResult);
}

uint64_t (*PBBlobDeleteResult.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBBlobDeleteResult.ResultCode.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = 1;
  switch(result)
  {
    case 0:
      break;
    case 2:
      uint64_t result = 1;
      break;
    case 3:
      uint64_t result = 2;
      break;
    case 4:
      uint64_t result = 3;
      break;
    case 5:
      uint64_t result = 4;
      break;
    default:
      char v2 = 0;
      break;
  }
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBBlobDeleteResult.ResultCode.rawValue.getter()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_22D2C7838[result];
  }
  return result;
}

uint64_t sub_22D0F3FF8()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_22D2C7838[result];
  }
  return result;
}

uint64_t sub_22D0F4018@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBBlobDeleteResult.ResultCode.init(rawValue:)(*a1, a2);
}

void sub_22D0F4020(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8) == 1) {
    uint64_t v2 = qword_22D2C7838[v2];
  }
  *a1 = v2;
}

uint64_t sub_22D0F4044(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D108CBC();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

BOOL sub_22D0F4090(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (*((unsigned char *)a1 + 8) == 1) {
    uint64_t v2 = qword_22D2C7838[v2];
  }
  uint64_t v3 = *a2;
  if (*((unsigned char *)a2 + 8)) {
    uint64_t v3 = qword_22D2C7838[v3];
  }
  return v2 == v3;
}

uint64_t PBBlobDeleteResult.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  type metadata accessor for PBBlobDeleteResult(0);
  return sub_22D2BBFE0();
}

void sub_22D0F4114()
{
  qword_26853F6D8 = (uint64_t)&unk_26E05A618;
}

uint64_t static PBBlobDeleteResult.ResultCode.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CDA0);
}

uint64_t static PBBlobDeleteResult.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CDA0, &qword_26853F6D8);
}

uint64_t (*static PBBlobDeleteResult.ResultCode.allCases.modify())()
{
  if (qword_26853CDA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D0F41F8@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CDA0, &qword_26853F6D8, a1);
}

uint64_t PBTouchBlobsRequest.touchBlobs.getter@<X0>(void *a1@<X8>)
{
  sub_22D100F98(0, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_22D1012DC(v6, (uint64_t)v5, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  uint64_t v7 = type metadata accessor for PBTouchBlobs(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1013CC((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBTouchBlobs);
  }
  *a1 = MEMORY[0x263F8EE78];
  sub_22D2BBFE0();
  return sub_22D10135C((uint64_t)v5, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
}

uint64_t sub_22D0F43B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_22D100F98(0, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_22D1012DC(v7, (uint64_t)v6, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  uint64_t v8 = type metadata accessor for PBTouchBlobs(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1013CC((uint64_t)v6, (uint64_t)a2, type metadata accessor for PBTouchBlobs);
  }
  *a2 = MEMORY[0x263F8EE78];
  sub_22D2BBFE0();
  return sub_22D10135C((uint64_t)v6, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
}

uint64_t PBTouchBlobsRequest.touchBlobs.setter(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D103430(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1013CC(a1, (uint64_t)v8, type metadata accessor for PBTouchBlobs);
  uint64_t v12 = type metadata accessor for PBTouchBlobs(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1036C8((uint64_t)v8, (uint64_t)v6, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v6, v13, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  swift_endAccess();
  return swift_release();
}

uint64_t PBTouchBlobs.init()@<X0>(void *a1@<X8>)
{
  return sub_22D0EE03C((void (*)(void))type metadata accessor for PBTouchBlobs, a1);
}

void (*PBTouchBlobsRequest.touchBlobs.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D100F98(0, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBTouchBlobs(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_22D1012DC(v10, (uint64_t)v5, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = MEMORY[0x263F8EE78];
    sub_22D2BBFE0();
    sub_22D10135C((uint64_t)v5, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  }
  else
  {
    sub_22D1013CC((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBTouchBlobs);
  }
  return sub_22D0F4980;
}

void sub_22D0F4980(uint64_t a1, char a2)
{
}

BOOL PBTouchBlobsRequest.hasTouchBlobs.getter()
{
  sub_22D100F98(0, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_22D1012DC(v4, (uint64_t)v3, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  uint64_t v5 = type metadata accessor for PBTouchBlobs(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D10135C((uint64_t)v3, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  return v6;
}

Swift::Void __swiftcall PBTouchBlobsRequest.clearTouchBlobs()()
{
  sub_22D100F98(0, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D103430(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBTouchBlobs(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  swift_endAccess();
  swift_release();
}

uint64_t PBTouchBlobsRequest.blobAuth.getter@<X0>(void *a1@<X8>)
{
  return sub_22D0F26B8(type metadata accessor for PBTouchBlobsRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth, a1);
}

uint64_t PBTouchBlobsRequest.blobAuth.setter(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D103430(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1013CC(a1, (uint64_t)v8, type metadata accessor for PBBlobAuth);
  uint64_t v12 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1036C8((uint64_t)v8, (uint64_t)v6, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v6, v13, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return swift_release();
}

void (*PBTouchBlobsRequest.blobAuth.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBBlobAuth(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v10, (uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = MEMORY[0x263F8EE78];
    v9[1] = sub_22D2BBFC0();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D10135C((uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_22D1013CC((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_22D0F50E0;
}

void sub_22D0F50E0(uint64_t a1, char a2)
{
}

BOOL PBTouchBlobsRequest.hasBlobAuth.getter()
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v4, (uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v5 = type metadata accessor for PBBlobAuth(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D10135C((uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  return v6;
}

Swift::Void __swiftcall PBTouchBlobsRequest.clearBlobAuth()()
{
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBTouchBlobsRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D103430(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBTouchBlobsRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlobsRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0ECC44(type metadata accessor for PBTouchBlobsRequest, &qword_26853CE78, &qword_26853F8E0, a1);
}

uint64_t (*PBTouchBlobs.touchBlobs.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlobs.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDEC8(type metadata accessor for PBTouchBlobs, a1);
}

uint64_t PBTouchBlobs.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDF60(a1, type metadata accessor for PBTouchBlobs);
}

uint64_t (*PBTouchBlobs.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlob.id.getter()
{
  return sub_22D0EE09C(type metadata accessor for PBTouchBlob);
}

uint64_t PBTouchBlob.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D0F5DA4(a1, a2, type metadata accessor for PBTouchBlob, (void (*)(void))type metadata accessor for PBTouchBlob._StorageClass, sub_22D1052E8);
}

void (*PBTouchBlob.id.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBTouchBlob(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D0F55E0;
}

void sub_22D0F55E0(uint64_t *a1, char a2)
{
}

uint64_t PBTouchBlob.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EEDD0(type metadata accessor for PBTouchBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a1);
}

uint64_t PBTouchBlob.expirationTime.setter(uint64_t a1)
{
  return sub_22D0F6468(a1, type metadata accessor for PBTouchBlob, (void (*)(void))type metadata accessor for PBTouchBlob._StorageClass, sub_22D1052E8, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

void (*PBTouchBlob.expirationTime.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v3[4] = v6;
  uint64_t v7 = sub_22D2BBFB0();
  v3[5] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  v3[6] = v8;
  size_t v10 = *(void *)(v8 + 64);
  v3[7] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v3[8] = v11;
  uint64_t v12 = *(void *)(v1 + *(int *)(type metadata accessor for PBTouchBlob(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v12, (uint64_t)v6, &qword_26853F998, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7) == 1)
  {
    sub_22D2BBFA0();
    sub_22D10135C((uint64_t)v6, &qword_26853F998, MEMORY[0x263F502F0]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v6, v7);
  }
  return sub_22D0F5870;
}

void sub_22D0F5870(uint64_t a1, char a2)
{
}

BOOL PBTouchBlob.hasExpirationTime.getter()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for PBTouchBlob(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v5, (uint64_t)v4, &qword_26853F998, v1);
  uint64_t v6 = sub_22D2BBFB0();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_22D10135C((uint64_t)v4, &qword_26853F998, v1);
  return v7;
}

Swift::Void __swiftcall PBTouchBlob.clearExpirationTime()()
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBTouchBlob(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTouchBlob._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1052E8(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = sub_22D2BBFB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F998, MEMORY[0x263F502F0]);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBTouchBlob.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlob.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0ECC44(type metadata accessor for PBTouchBlob, &qword_26853CE90, &qword_26853F918, a1);
}

uint64_t (*PBTouchBlobsResponse.results.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlobsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EDEC8(type metadata accessor for PBTouchBlobsResponse, a1);
}

uint64_t PBTouchBlobsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_22D0EDF60(a1, type metadata accessor for PBTouchBlobsResponse);
}

uint64_t (*PBTouchBlobsResponse.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBTouchBlobsResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_22D0EE03C((void (*)(void))type metadata accessor for PBTouchBlobsResponse, a1);
}

uint64_t PBBlobTouchResult.id.getter()
{
  return sub_22D0EE09C(type metadata accessor for PBBlobTouchResult);
}

uint64_t sub_22D0F5C90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(a2 + v12) = a7(v13);
    swift_release();
  }
  uint64_t v14 = *(void *)(a2 + v12);
  swift_beginAccess();
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t PBBlobTouchResult.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D0F5DA4(a1, a2, type metadata accessor for PBBlobTouchResult, (void (*)(void))type metadata accessor for PBBlobTouchResult._StorageClass, sub_22D106B9C);
}

uint64_t sub_22D0F5DA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a5(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(v5 + v10);
  swift_beginAccess();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBBlobTouchResult.id.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D0F5F08;
}

void sub_22D0F5F08(uint64_t *a1, char a2)
{
}

void sub_22D0F5F34(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  uint64_t v8 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = a4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v12 + 16) = v7;
    *(void *)(v12 + 24) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v6 + 96);
      uint64_t v14 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = a4(v15);
      swift_release();
    }
    uint64_t v16 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v16 + 16) = v7;
    *(void *)(v16 + 24) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBBlobTouchResult.resultCode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 40);
  *(void *)a1 = *(void *)(v3 + 32);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_22D0F6118(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobTouchResult._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D106B9C(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 32) = v3;
  *(unsigned char *)(v7 + 40) = v4;
  return result;
}

uint64_t PBBlobTouchResult.resultCode.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobTouchResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v1 + v4) = sub_22D106B9C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t result = swift_beginAccess();
  *(void *)(v6 + 32) = v2;
  *(unsigned char *)(v6 + 40) = v3;
  return result;
}

void (*PBBlobTouchResult.resultCode.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D0F6310;
}

void sub_22D0F6310(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBBlobTouchResult._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v8 + v7) = sub_22D106B9C(v9);
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v10 + 32) = v4;
  *(unsigned char *)(v10 + 40) = v5;
  free((void *)v3);
}

uint64_t PBBlobTouchResult.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0EEDD0(type metadata accessor for PBBlobTouchResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a1);
}

uint64_t PBBlobTouchResult.expirationTime.setter(uint64_t a1)
{
  return sub_22D0F6468(a1, type metadata accessor for PBBlobTouchResult, (void (*)(void))type metadata accessor for PBBlobTouchResult._StorageClass, sub_22D106B9C, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t sub_22D0F6468(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v18 = swift_retain();
    *(void *)(v5 + v17) = a4(v18);
    swift_release();
  }
  uint64_t v19 = *(void *)(v5 + v17);
  uint64_t v20 = sub_22D2BBFB0();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v16, a1, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
  uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D1036C8((uint64_t)v16, (uint64_t)v14, &qword_26853F998, MEMORY[0x263F502F0]);
  uint64_t v23 = v19 + *a5;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v14, v23, &qword_26853F998, v22);
  swift_endAccess();
  return swift_release();
}

void (*PBBlobTouchResult.expirationTime.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  char v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v3[4] = v6;
  uint64_t v7 = sub_22D2BBFB0();
  v3[5] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  v3[6] = v8;
  size_t v10 = *(void *)(v8 + 64);
  v3[7] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v3[8] = v11;
  uint64_t v12 = *(void *)(v1 + *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v12, (uint64_t)v6, &qword_26853F998, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7) == 1)
  {
    sub_22D2BBFA0();
    sub_22D10135C((uint64_t)v6, &qword_26853F998, MEMORY[0x263F502F0]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v6, v7);
  }
  return sub_22D0F68BC;
}

void sub_22D0F68BC(uint64_t a1, char a2)
{
}

BOOL PBBlobTouchResult.hasExpirationTime.getter()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v5, (uint64_t)v4, &qword_26853F998, v1);
  uint64_t v6 = sub_22D2BBFB0();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_22D10135C((uint64_t)v4, &qword_26853F998, v1);
  return v7;
}

Swift::Void __swiftcall PBBlobTouchResult.clearExpirationTime()()
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobTouchResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D106B9C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = sub_22D2BBFB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_22D103748((uint64_t)v3, v8, &qword_26853F998, MEMORY[0x263F502F0]);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBBlobTouchResult.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t PBBlobTouchResult.ResultCode.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 4;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBBlobTouchResult.ResultCode.rawValue.getter()
{
  return *(void *)v0;
}

unint64_t sub_22D0F6C00@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBBlobTouchResult.ResultCode.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D0F6C08(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D10D3B0();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t PBBlobTouchResult.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D0ECC44(type metadata accessor for PBBlobTouchResult, &qword_26853CEA8, &qword_26853F950, a1);
}

void sub_22D0F6C8C()
{
  qword_26853F6E0 = (uint64_t)&unk_26E05A688;
}

uint64_t static PBBlobTouchResult.ResultCode.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CDA8);
}

uint64_t sub_22D0F6CC4(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PBBlobTouchResult.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CDA8, &qword_26853F6E0);
}

uint64_t sub_22D0F6D44(uint64_t a1, void *a2, void *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PBBlobTouchResult.ResultCode.allCases.modify())()
{
  if (qword_26853CDA8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D0F6E34@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CDA8, &qword_26853F6E0, a1);
}

uint64_t sub_22D0F6E58@<X0>(void *a1@<X2>, void *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

unint64_t static PBPushBlobsRequest.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_22D0F6EDC()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F6E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F6E8);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "blobs";
  *(void *)(v7 + 8) = 5;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  size_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "blob_auth";
  *((void *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBPushBlobsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CDB0, (uint64_t)qword_26853F6E8, a1);
}

uint64_t sub_22D0F70E8()
{
  type metadata accessor for PBPushBlobsRequest._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  uint64_t v2 = type metadata accessor for PBBlobs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  uint64_t v4 = type metadata accessor for PBBlobAuth(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_26853F700 = v0;
  return result;
}

uint64_t sub_22D0F71BC(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - v5;
  sub_22D100F98(0, &qword_26853F978, type metadata accessor for PBBlobs, v3);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  uint64_t v11 = type metadata accessor for PBBlobs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  uint64_t v13 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_22D1012DC(v14, (uint64_t)v9, &qword_26853F978, type metadata accessor for PBBlobs);
  swift_beginAccess();
  sub_22D103748((uint64_t)v9, v10, &qword_26853F978, type metadata accessor for PBBlobs);
  swift_endAccess();
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v15, (uint64_t)v6, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_release();
  swift_beginAccess();
  sub_22D103748((uint64_t)v6, v12, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D0F7454()
{
  return sub_22D0FF1E8(&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs, &qword_26853F978, type metadata accessor for PBBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

uint64_t PBPushBlobsRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D106EC0(a1, a2, a3, type metadata accessor for PBPushBlobsRequest, (void (*)(void))type metadata accessor for PBPushBlobsRequest._StorageClass, sub_22D0F71BC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D0F74EC);
}

uint64_t sub_22D0F74EC()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBBlobs(0);
        sub_22D108C74(&qword_26853EB40, (void (*)(uint64_t))type metadata accessor for PBBlobs);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBBlobAuth(0);
    sub_22D108C74(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
LABEL_5:
    sub_22D2BC1A0();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBPushBlobsRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0F9C60(a1, a2, a3, (void (*)(void))type metadata accessor for PBPushBlobsRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D0F76C8);
}

uint64_t sub_22D0F76C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v29 = a4;
  uint64_t v28 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v25 = type metadata accessor for PBBlobAuth(0);
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v23 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D100F98(0, &qword_26853F978, type metadata accessor for PBBlobs, v5);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for PBBlobs(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_22D1012DC(v18, (uint64_t)v13, &qword_26853F978, type metadata accessor for PBBlobs);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_22D10135C((uint64_t)v13, &qword_26853F978, type metadata accessor for PBBlobs);
  }
  else
  {
    sub_22D1013CC((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBBlobs);
    sub_22D108C74(&qword_26853EB40, (void (*)(uint64_t))type metadata accessor for PBBlobs);
    uint64_t v19 = v26;
    sub_22D2BC2E0();
    uint64_t result = sub_22D10107C((uint64_t)v17, type metadata accessor for PBBlobs);
    if (v19) {
      return result;
    }
  }
  uint64_t v21 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v21, (uint64_t)v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v25) == 1) {
    return sub_22D10135C((uint64_t)v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  uint64_t v22 = v23;
  sub_22D1013CC((uint64_t)v8, v23, type metadata accessor for PBBlobAuth);
  sub_22D108C74(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  sub_22D2BC2E0();
  return sub_22D10107C(v22, type metadata accessor for PBBlobAuth);
}

uint64_t static PBPushBlobsRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBPushBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D0F7BA0) & 1;
}

BOOL sub_22D0F7BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v3 = type metadata accessor for PBBlobAuth(0);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v50 = (uint64_t *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D10D508(0, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (uint64_t)&v49 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v51 = (uint64_t *)((char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = (uint64_t)&v49 - v11;
  uint64_t v12 = type metadata accessor for PBBlobs(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v52 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D10D508(0, &qword_26853FFA8, &qword_26853F978, type metadata accessor for PBBlobs);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v49 - v17;
  sub_22D100F98(0, &qword_26853F978, type metadata accessor for PBBlobs, v7);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v58 = (uint64_t *)((char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v49 - v22;
  uint64_t v24 = a1;
  uint64_t v25 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  sub_22D1012DC(v25, (uint64_t)v23, &qword_26853F978, type metadata accessor for PBBlobs);
  uint64_t v26 = v59;
  uint64_t v27 = v59
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_22D1012DC((uint64_t)v23, (uint64_t)v18, &qword_26853F978, type metadata accessor for PBBlobs);
  sub_22D1012DC(v27, v28, &qword_26853F978, type metadata accessor for PBBlobs);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v29((uint64_t)v18, 1, v12) != 1)
  {
    uint64_t v39 = v24;
    int v40 = v58;
    sub_22D1012DC((uint64_t)v18, (uint64_t)v58, &qword_26853F978, type metadata accessor for PBBlobs);
    if (v29(v28, 1, v12) != 1)
    {
      uint64_t v42 = v52;
      sub_22D1013CC(v28, (uint64_t)v52, type metadata accessor for PBBlobs);
      uint64_t v43 = *v40;
      uint64_t v44 = *v42;
      uint64_t v31 = v39;
      swift_retain();
      swift_retain();
      if (sub_22D10EEC8(v43, v44))
      {
        sub_22D2BBFF0();
        sub_22D108C74(&qword_26853DB30, MEMORY[0x263F50560]);
        char v45 = sub_22D2BCB90();
        sub_22D10107C((uint64_t)v42, type metadata accessor for PBBlobs);
        sub_22D10135C((uint64_t)v23, &qword_26853F978, type metadata accessor for PBBlobs);
        sub_22D10107C((uint64_t)v40, type metadata accessor for PBBlobs);
        sub_22D10135C((uint64_t)v18, &qword_26853F978, type metadata accessor for PBBlobs);
        if (v45) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_22D10107C((uint64_t)v42, type metadata accessor for PBBlobs);
        sub_22D10135C((uint64_t)v23, &qword_26853F978, type metadata accessor for PBBlobs);
        sub_22D10107C((uint64_t)v40, type metadata accessor for PBBlobs);
        sub_22D10135C((uint64_t)v18, &qword_26853F978, type metadata accessor for PBBlobs);
      }
LABEL_10:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_22D10135C((uint64_t)v23, &qword_26853F978, type metadata accessor for PBBlobs);
    sub_22D10107C((uint64_t)v40, type metadata accessor for PBBlobs);
LABEL_9:
    sub_22D10D4AC((uint64_t)v18, &qword_26853FFA8, &qword_26853F978, type metadata accessor for PBBlobs);
    goto LABEL_10;
  }
  swift_retain();
  swift_retain();
  sub_22D10135C((uint64_t)v23, &qword_26853F978, type metadata accessor for PBBlobs);
  unsigned int v30 = v29(v28, 1, v12);
  uint64_t v31 = v24;
  if (v30 != 1) {
    goto LABEL_9;
  }
  sub_22D10135C((uint64_t)v18, &qword_26853F978, type metadata accessor for PBBlobs);
LABEL_4:
  uint64_t v32 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  uint64_t v33 = v54;
  sub_22D1012DC(v32, v54, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v34 = v26
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  uint64_t v35 = v57;
  uint64_t v36 = v57 + *(int *)(v53 + 48);
  sub_22D1012DC(v33, v57, &qword_26853F988, type metadata accessor for PBBlobAuth);
  sub_22D1012DC(v34, v36, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v37 = v56;
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v38(v35, 1, v56) == 1)
  {
    swift_release();
    swift_release();
    sub_22D10135C(v33, &qword_26853F988, type metadata accessor for PBBlobAuth);
    if (v38(v36, 1, v37) == 1)
    {
      sub_22D10135C(v35, &qword_26853F988, type metadata accessor for PBBlobAuth);
      return 1;
    }
    goto LABEL_18;
  }
  uint64_t v46 = v51;
  sub_22D1012DC(v35, (uint64_t)v51, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if (v38(v36, 1, v37) == 1)
  {
    swift_release();
    swift_release();
    sub_22D10135C(v33, &qword_26853F988, type metadata accessor for PBBlobAuth);
    sub_22D10107C((uint64_t)v46, type metadata accessor for PBBlobAuth);
LABEL_18:
    sub_22D10D4AC(v35, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
    return 0;
  }
  uint64_t v47 = v50;
  sub_22D1013CC(v36, (uint64_t)v50, type metadata accessor for PBBlobAuth);
  char v48 = _s19HealthRecordsDaemon10PBBlobAuthV2eeoiySbAC_ACtFZ_0(v46, v47);
  swift_release();
  swift_release();
  sub_22D10107C((uint64_t)v47, type metadata accessor for PBBlobAuth);
  sub_22D10135C(v33, &qword_26853F988, type metadata accessor for PBBlobAuth);
  sub_22D10107C((uint64_t)v46, type metadata accessor for PBBlobAuth);
  sub_22D10135C(v35, &qword_26853F988, type metadata accessor for PBBlobAuth);
  return (v48 & 1) != 0;
}

uint64_t PBPushBlobsRequest.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBPushBlobsRequest, &qword_26853FA00, (void (*)(uint64_t))type metadata accessor for PBPushBlobsRequest);
}

uint64_t sub_22D0F8590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CDB8, &qword_26853F700, a2);
}

unint64_t sub_22D0F85B4()
{
  return 0xD000000000000030;
}

uint64_t sub_22D0F85D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPushBlobsRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D0F85E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPushBlobsRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D0F8600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF48, (void (*)(uint64_t))type metadata accessor for PBPushBlobsRequest);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0F867C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CDB0, (uint64_t)qword_26853F6E8, a1);
}

uint64_t sub_22D0F86A0(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FB88, (void (*)(uint64_t))type metadata accessor for PBPushBlobsRequest);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0F870C()
{
  sub_22D108C74(&qword_26853FB88, (void (*)(uint64_t))type metadata accessor for PBPushBlobsRequest);
  return sub_22D2BC200();
}

uint64_t sub_22D0F8788(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBPushBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D0F7BA0) & 1;
}

unint64_t static PBBlobAuth.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_22D0F87E8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F708);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F708);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "certs";
  *(void *)(v7 + 8) = 5;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "sig";
  *((void *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "alg";
  *(void *)(v12 + 8) = 3;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlobAuth._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CDC0, (uint64_t)qword_26853F708, a1);
}

uint64_t PBBlobAuth.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_22D2BC170();
          break;
        case 2:
          sub_22D2BC110();
          break;
        case 1:
          sub_22D2BC0E0();
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBBlobAuth.traverse<A>(visitor:)()
{
  if (!*(void *)(*v0 + 16) || (uint64_t result = sub_22D2BC250(), !v1))
  {
    uint64_t v3 = v0[1];
    unint64_t v4 = v0[2];
    switch(v4 >> 62)
    {
      case 1uLL:
        if ((int)v3 != v3 >> 32) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 2uLL:
        if (*(void *)(v3 + 16) != *(void *)(v3 + 24)) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 3uLL:
        goto LABEL_10;
      default:
        if ((v4 & 0xFF000000000000) == 0) {
          goto LABEL_10;
        }
LABEL_9:
        uint64_t result = sub_22D2BC260();
        if (!v1)
        {
LABEL_10:
          unint64_t v5 = v0[4];
          uint64_t v6 = HIBYTE(v5) & 0xF;
          if ((v5 & 0x2000000000000000) == 0) {
            uint64_t v6 = v0[3] & 0xFFFFFFFFFFFFLL;
          }
          if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
          {
            type metadata accessor for PBBlobAuth(0);
            uint64_t result = sub_22D2BBFD0();
          }
        }
        break;
    }
  }
  return result;
}

uint64_t PBBlobAuth.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBBlobAuth, &qword_26853FA08, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
}

uint64_t sub_22D0F8C98@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = sub_22D2BBFC0();
  a1[2] = v2;
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  return sub_22D2BBFE0();
}

unint64_t sub_22D0F8CE4()
{
  return 0xD000000000000028;
}

uint64_t sub_22D0F8D08()
{
  return PBBlobAuth.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D0F8D20()
{
  return PBBlobAuth.traverse<A>(visitor:)();
}

uint64_t sub_22D0F8D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF40, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0F8DB4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CDC0, (uint64_t)qword_26853F708, a1);
}

uint64_t sub_22D0F8DD8(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0F8E44()
{
  sub_22D108C74(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  return sub_22D2BC200();
}

unint64_t static PBBlobs.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_22D0F8EE0(uint64_t a1)
{
  return sub_22D1061E8(a1, qword_26853F720, (uint64_t)"blobs", 5, MEMORY[0x263F50718]);
}

uint64_t static PBBlobs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CDC8, (uint64_t)qword_26853F720, a1);
}

uint64_t PBBlobs.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1063F0(a1, a2, a3, (void (*)(void))type metadata accessor for PBBlob, &qword_26853FA10, (void (*)(uint64_t))type metadata accessor for PBBlob);
}

uint64_t PBBlobs.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBBlob(0),
        sub_22D108C74(&qword_26853FA10, (void (*)(uint64_t))type metadata accessor for PBBlob),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBBlobs(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t static PBBlobs.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D10EEC8, type metadata accessor for PBBlobs) & 1;
}

uint64_t PBBlobs.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBBlobs, &qword_26853FA18, (void (*)(uint64_t))type metadata accessor for PBBlobs);
}

unint64_t sub_22D0F90F8()
{
  return 0xD000000000000025;
}

uint64_t sub_22D0F9114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobs.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D0F912C()
{
  return PBBlobs.traverse<A>(visitor:)();
}

uint64_t sub_22D0F9144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF38, (void (*)(uint64_t))type metadata accessor for PBBlobs);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0F91C0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CDC8, (uint64_t)qword_26853F720, a1);
}

uint64_t sub_22D0F91E4(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853EB40, (void (*)(uint64_t))type metadata accessor for PBBlobs);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0F9250()
{
  sub_22D108C74(&qword_26853EB40, (void (*)(uint64_t))type metadata accessor for PBBlobs);
  return sub_22D2BC200();
}

uint64_t sub_22D0F92CC(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D10EEC8, type metadata accessor for PBBlobs) & 1;
}

unint64_t static PBBlob.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_22D0F932C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F738);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F738);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "id";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "content";
  *(void *)(v11 + 8) = 7;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "attributes";
  *((void *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "expiration_time";
  *((void *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlob._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CDD0, (uint64_t)qword_26853F738, a1);
}

uint64_t sub_22D0F95B4()
{
  type metadata accessor for PBBlob._StorageClass(0);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = sub_22D2BBFC0();
  v0[5] = v1;
  v0[6] = MEMORY[0x263F8EE78];
  uint64_t v2 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  uint64_t v3 = sub_22D2BBFB0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  qword_26853F750 = (uint64_t)v0;
  return result;
}

void *sub_22D0F9658(void *a1)
{
  uint64_t v19 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v19 - v4;
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = sub_22D2BBFC0();
  v1[5] = v6;
  v1[6] = MEMORY[0x263F8EE78];
  uint64_t v7 = (uint64_t)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  uint64_t v8 = sub_22D2BBFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  swift_beginAccess();
  v1[2] = v9;
  v1[3] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v11 = a1[4];
  unint64_t v12 = a1[5];
  swift_beginAccess();
  uint64_t v13 = v1[4];
  unint64_t v14 = v1[5];
  v1[4] = v11;
  v1[5] = v12;
  sub_22CFF9B64(v11, v12);
  sub_22CFF5630(v13, v14);
  swift_beginAccess();
  uint64_t v15 = a1[6];
  swift_beginAccess();
  v1[6] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  uint64_t v17 = v19;
  sub_22D1012DC(v16, (uint64_t)v5, &qword_26853F998, v19);
  swift_release();
  swift_beginAccess();
  sub_22D103748((uint64_t)v5, v7, &qword_26853F998, v17);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D0F98F4()
{
  swift_bridgeObjectRelease();
  sub_22CFF5630(*(void *)(v0 + 32), *(void *)(v0 + 40));
  swift_bridgeObjectRelease();
  sub_22D10135C(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, &qword_26853F998, MEMORY[0x263F502F0]);
  return swift_deallocClassInstance();
}

uint64_t PBBlob.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D106EC0(a1, a2, a3, type metadata accessor for PBBlob, (void (*)(void))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D0F9658, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D0F99F4);
}

uint64_t sub_22D0F99F4()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC110();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBBlobAttribute(0);
          sub_22D108C74(&qword_26853FBD8, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          sub_22D2BBFB0();
          sub_22D108C74(&qword_26853FF78, MEMORY[0x263F502F0]);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBBlob.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0F9C60(a1, a2, a3, (void (*)(void))type metadata accessor for PBBlob, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D0F9D00);
}

uint64_t sub_22D0F9C60(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  a4(0);
  uint64_t v10 = swift_retain();
  a5(v10, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v5) {
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t sub_22D0F9D00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_22D2BBFB0();
  uint64_t v21 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v13 = a1[3];
  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v22 = a4;
  if (!v14 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    uint64_t v17 = a1[4];
    unint64_t v16 = a1[5];
    switch(v16 >> 62)
    {
      case 1uLL:
        if ((int)v17 != v17 >> 32) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 2uLL:
        if (*(void *)(v17 + 16) != *(void *)(v17 + 24)) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 3uLL:
        goto LABEL_12;
      default:
        if ((v16 & 0xFF000000000000) == 0) {
          goto LABEL_12;
        }
LABEL_11:
        sub_22CFF9B64(a1[4], a1[5]);
        sub_22D2BC260();
        uint64_t result = sub_22CFF5630(v17, v16);
        if (!v4)
        {
LABEL_12:
          swift_beginAccess();
          if (!*(void *)(a1[6] + 16)
            || (type metadata accessor for PBBlobAttribute(0),
                sub_22D108C74(&qword_26853FBD8, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute), swift_bridgeObjectRetain(), sub_22D2BC2D0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
          {
            uint64_t v18 = (uint64_t)a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
            swift_beginAccess();
            sub_22D1012DC(v18, (uint64_t)v9, &qword_26853F998, MEMORY[0x263F502F0]);
            uint64_t v19 = v21;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v10) == 1)
            {
              uint64_t result = sub_22D10135C((uint64_t)v9, &qword_26853F998, MEMORY[0x263F502F0]);
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v12, v9, v10);
              sub_22D108C74(&qword_26853FF78, MEMORY[0x263F502F0]);
              sub_22D2BC2E0();
              uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v12, v10);
            }
          }
        }
        break;
    }
  }
  return result;
}

uint64_t static PBBlob.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FA164) & 1;
}

BOOL sub_22D0FA164(void *a1, void *a2)
{
  uint64_t v46 = sub_22D2BBFB0();
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D10D508(0, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - v9;
  sub_22D100F98(0, &qword_26853F998, v6, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v42 - v15;
  swift_beginAccess();
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  swift_beginAccess();
  if (v17 == a2[2] && v18 == a2[3] || (v19 = sub_22D2BD660(), BOOL result = 0, (v19 & 1) != 0))
  {
    uint64_t v44 = v14;
    uint64_t v43 = v5;
    swift_beginAccess();
    uint64_t v21 = a1[4];
    unint64_t v22 = a1[5];
    swift_beginAccess();
    uint64_t v24 = a2[4];
    unint64_t v23 = a2[5];
    swift_retain();
    swift_retain();
    sub_22CFF9B64(v21, v22);
    sub_22CFF9B64(v24, v23);
    char v25 = sub_22D1158DC(v21, v22, v24, v23);
    sub_22CFF5630(v24, v23);
    sub_22CFF5630(v21, v22);
    if ((v25 & 1) == 0) {
      goto LABEL_9;
    }
    swift_beginAccess();
    uint64_t v26 = a1[6];
    swift_beginAccess();
    uint64_t v27 = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v28 = sub_22D113078(v26, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28)
    {
      uint64_t v29 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
      swift_beginAccess();
      unsigned int v30 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
      sub_22D1012DC(v29, (uint64_t)v16, &qword_26853F998, MEMORY[0x263F502F0]);
      uint64_t v31 = (uint64_t)a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
      swift_beginAccess();
      uint64_t v32 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_22D1012DC((uint64_t)v16, (uint64_t)v10, &qword_26853F998, v30);
      sub_22D1012DC(v31, v32, &qword_26853F998, v30);
      uint64_t v33 = v45;
      uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
      uint64_t v35 = v46;
      if (v34((uint64_t)v10, 1, v46) == 1)
      {
        swift_release();
        swift_release();
        sub_22D10135C((uint64_t)v16, &qword_26853F998, MEMORY[0x263F502F0]);
        if (v34(v32, 1, v35) == 1)
        {
          sub_22D10135C((uint64_t)v10, &qword_26853F998, MEMORY[0x263F502F0]);
          return 1;
        }
      }
      else
      {
        uint64_t v36 = (uint64_t)v44;
        sub_22D1012DC((uint64_t)v10, (uint64_t)v44, &qword_26853F998, MEMORY[0x263F502F0]);
        if (v34(v32, 1, v35) != 1)
        {
          uint64_t v37 = v36;
          uint64_t v38 = v43;
          (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v43, v32, v35);
          sub_22D108C74(&qword_26853FF70, MEMORY[0x263F502F0]);
          uint64_t v39 = v37;
          LOBYTE(v37) = sub_22D2BCB90();
          swift_release();
          swift_release();
          int v40 = *(void (**)(char *, uint64_t))(v33 + 8);
          v40(v38, v35);
          os_log_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
          sub_22D10135C((uint64_t)v16, &qword_26853F998, MEMORY[0x263F502F0]);
          v40((char *)v39, v35);
          sub_22D10135C((uint64_t)v10, &qword_26853F998, v41);
          return (v37 & 1) != 0;
        }
        swift_release();
        swift_release();
        sub_22D10135C((uint64_t)v16, &qword_26853F998, MEMORY[0x263F502F0]);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v35);
      }
      sub_22D10D4AC((uint64_t)v10, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
    }
    else
    {
LABEL_9:
      swift_release();
      swift_release();
    }
    return 0;
  }
  return result;
}

uint64_t PBBlob.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBBlob, &qword_26853FA20, (void (*)(uint64_t))type metadata accessor for PBBlob);
}

uint64_t sub_22D0FA7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CDD8, &qword_26853F750, a2);
}

unint64_t sub_22D0FA820()
{
  return 0xD000000000000024;
}

uint64_t sub_22D0FA83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlob.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D0FA854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlob.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D0FA86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF30, (void (*)(uint64_t))type metadata accessor for PBBlob);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0FA8E8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CDD0, (uint64_t)qword_26853F738, a1);
}

uint64_t sub_22D0FA90C(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FA10, (void (*)(uint64_t))type metadata accessor for PBBlob);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0FA978()
{
  sub_22D108C74(&qword_26853FA10, (void (*)(uint64_t))type metadata accessor for PBBlob);
  return sub_22D2BC200();
}

unint64_t static PBBlobAttribute.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D0FAA14()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F758);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F758);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "id";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "name";
  *((void *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "value";
  *(void *)(v12 + 8) = 5;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlobAttribute._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CDE0, (uint64_t)qword_26853F758, a1);
}

uint64_t PBBlobAttribute.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2 || result == 1) {
        sub_22D2BC170();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBBlobAttribute.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    unint64_t v5 = v0[3];
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
    {
      unint64_t v7 = v0[5];
      uint64_t v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0) {
        uint64_t v8 = v0[4] & 0xFFFFFFFFFFFFLL;
      }
      if (!v8 || (uint64_t result = sub_22D2BC2B0(), !v1))
      {
        type metadata accessor for PBBlobAttribute(0);
        return sub_22D2BBFD0();
      }
    }
  }
  return result;
}

uint64_t PBBlobAttribute.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBBlobAttribute, &qword_26853FA28, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute);
}

uint64_t sub_22D0FAE68@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  return sub_22D2BBFE0();
}

unint64_t sub_22D0FAE98()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D0FAEB4()
{
  return PBBlobAttribute.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D0FAECC()
{
  return PBBlobAttribute.traverse<A>(visitor:)();
}

uint64_t sub_22D0FAEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF28, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0FAF60@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CDE0, (uint64_t)qword_26853F758, a1);
}

uint64_t sub_22D0FAF84(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FBD8, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0FAFF0()
{
  sub_22D108C74(&qword_26853FBD8, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute);
  return sub_22D2BC200();
}

unint64_t static PBPushBlobsResponse.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_22D0FB08C(uint64_t a1)
{
  return sub_22D1061E8(a1, qword_26853F770, (uint64_t)"results", 7, MEMORY[0x263F50718]);
}

uint64_t static PBPushBlobsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CDE8, (uint64_t)qword_26853F770, a1);
}

uint64_t PBPushBlobsResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1063F0(a1, a2, a3, (void (*)(void))type metadata accessor for PBBlobPushResult, &qword_26853FA30, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult);
}

uint64_t PBPushBlobsResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBBlobPushResult(0),
        sub_22D108C74(&qword_26853FA30, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBPushBlobsResponse(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t static PBPushBlobsResponse.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D110B2C, type metadata accessor for PBPushBlobsResponse) & 1;
}

uint64_t PBPushBlobsResponse.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBPushBlobsResponse, &qword_26853FA38, (void (*)(uint64_t))type metadata accessor for PBPushBlobsResponse);
}

unint64_t sub_22D0FB2A4()
{
  return 0xD000000000000031;
}

uint64_t sub_22D0FB2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPushBlobsResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D0FB2D8()
{
  return PBPushBlobsResponse.traverse<A>(visitor:)();
}

uint64_t sub_22D0FB2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF20, (void (*)(uint64_t))type metadata accessor for PBPushBlobsResponse);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0FB36C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CDE8, (uint64_t)qword_26853F770, a1);
}

uint64_t sub_22D0FB390(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853E998, (void (*)(uint64_t))type metadata accessor for PBPushBlobsResponse);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0FB3FC()
{
  sub_22D108C74(&qword_26853E998, (void (*)(uint64_t))type metadata accessor for PBPushBlobsResponse);
  return sub_22D2BC200();
}

uint64_t sub_22D0FB478(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D110B2C, type metadata accessor for PBPushBlobsResponse) & 1;
}

unint64_t static PBBlobPushResult.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D0FB4D8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F788);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F788);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "id";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 3;
  *(void *)unint64_t v11 = "message";
  *(void *)(v11 + 8) = 7;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 2;
  *(void *)uint64_t v13 = "result_code";
  *((void *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "expiration_time";
  *((void *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlobPushResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CDF0, (uint64_t)qword_26853F788, a1);
}

uint64_t sub_22D0FB764(uint64_t a1)
{
  return sub_22D0FD7F0(a1, (void (*)(void))type metadata accessor for PBBlobPushResult._StorageClass, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0], &qword_26853F7A0);
}

uint64_t sub_22D0FB7A0()
{
  return sub_22D0FDB4C(&OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, &qword_26853F998, MEMORY[0x263F502F0]);
}

uint64_t PBBlobPushResult.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = *(int *)(type metadata accessor for PBBlobPushResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPushResult._StorageClass(0);
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_22D0FD8A4(v2, &qword_26853F998, MEMORY[0x263F502F0], &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, MEMORY[0x263F502F0]);
    swift_release();
  }
  swift_retain();
  sub_22D0FB8CC();
  return swift_release();
}

uint64_t sub_22D0FB8CC()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          sub_22D10D458();
          uint64_t v4 = v3;
          sub_22D2BC0D0();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          sub_22D2BBFB0();
          sub_22D108C74(&qword_26853FF78, MEMORY[0x263F502F0]);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBBlobPushResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0F9C60(a1, a2, a3, (void (*)(void))type metadata accessor for PBBlobPushResult, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D0FBAF0);
}

uint64_t sub_22D0FBAF0(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v17[-v4];
  uint64_t v6 = sub_22D2BBFB0();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  unint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    if (!*(void *)(a1 + 48)
      || (char v12 = *(unsigned char *)(a1 + 56),
          uint64_t v18 = *(void *)(a1 + 48),
          char v19 = v12,
          sub_22D10D458(),
          uint64_t result = sub_22D2BC240(),
          !v1))
    {
      swift_beginAccess();
      unint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0) {
        uint64_t v14 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
      }
      if (!v14 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
      {
        uint64_t v15 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
        swift_beginAccess();
        sub_22D1012DC(v15, (uint64_t)v5, &qword_26853F998, MEMORY[0x263F502F0]);
        uint64_t v16 = v20;
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v5, 1, v6) == 1)
        {
          return sub_22D10135C((uint64_t)v5, &qword_26853F998, MEMORY[0x263F502F0]);
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v8, v5, v6);
          sub_22D108C74(&qword_26853FF78, MEMORY[0x263F502F0]);
          sub_22D2BC2E0();
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v16 + 8))(v8, v6);
        }
      }
    }
  }
  return result;
}

uint64_t static PBBlobPushResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBBlobPushResult, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FBEBC) & 1;
}

BOOL sub_22D0FBEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D10D508(0, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v38 - v10;
  sub_22D100F98(0, &qword_26853F998, v7, MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v38 - v16;
  swift_beginAccess();
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v18 == *(void *)(a2 + 16) && v19 == *(void *)(a2 + 24)
    || (v20 = sub_22D2BD660(), BOOL result = 0, (v20 & 1) != 0))
  {
    if ((swift_beginAccess(),
          uint64_t v22 = *(void *)(a1 + 32),
          uint64_t v23 = *(void *)(a1 + 40),
          swift_beginAccess(),
          v22 == *(void *)(a2 + 32))
      && v23 == *(void *)(a2 + 40)
      || (v24 = sub_22D2BD660(), BOOL result = 0, (v24 & 1) != 0))
    {
      swift_beginAccess();
      uint64_t v25 = *(void *)(a1 + 48);
      int v26 = *(unsigned __int8 *)(a1 + 56);
      swift_beginAccess();
      if (v26 == 1) {
        uint64_t v25 = qword_22D2C77E0[v25];
      }
      uint64_t v27 = *(void *)(a2 + 48);
      if (*(unsigned char *)(a2 + 56))
      {
        switch(v27)
        {
          case 1:
            if (v25 != 1) {
              return 0;
            }
            goto LABEL_14;
          case 2:
            if (v25 != 2) {
              return 0;
            }
            goto LABEL_14;
          case 3:
            if (v25 != 3) {
              return 0;
            }
            goto LABEL_14;
          case 4:
            if (v25 != 5) {
              return 0;
            }
            goto LABEL_14;
          case 5:
            if (v25 != 6) {
              return 0;
            }
            goto LABEL_14;
          case 6:
            if (v25 != 7) {
              return 0;
            }
            goto LABEL_14;
          default:
            if (!v25) {
              goto LABEL_14;
            }
            return 0;
        }
      }
      if (v25 == v27)
      {
LABEL_14:
        uint64_t v39 = v15;
        uint64_t v28 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
        swift_beginAccess();
        uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
        sub_22D1012DC(v28, (uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
        uint64_t v30 = a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
        swift_beginAccess();
        uint64_t v31 = (uint64_t)&v11[*(int *)(v9 + 48)];
        sub_22D1012DC((uint64_t)v17, (uint64_t)v11, &qword_26853F998, v29);
        sub_22D1012DC(v30, v31, &qword_26853F998, v29);
        uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v32((uint64_t)v11, 1, v4) == 1)
        {
          sub_22D10135C((uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
          if (v32(v31, 1, v4) == 1)
          {
            sub_22D10135C((uint64_t)v11, &qword_26853F998, MEMORY[0x263F502F0]);
            return 1;
          }
        }
        else
        {
          uint64_t v33 = (uint64_t)v39;
          sub_22D1012DC((uint64_t)v11, (uint64_t)v39, &qword_26853F998, MEMORY[0x263F502F0]);
          if (v32(v31, 1, v4) != 1)
          {
            uint64_t v34 = v40;
            (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v40, v31, v4);
            sub_22D108C74(&qword_26853FF70, MEMORY[0x263F502F0]);
            char v35 = sub_22D2BCB90();
            uint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
            v36(v34, v4);
            uint64_t v37 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
            sub_22D10135C((uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
            v36((char *)v33, v4);
            sub_22D10135C((uint64_t)v11, &qword_26853F998, v37);
            return (v35 & 1) != 0;
          }
          sub_22D10135C((uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
          (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v33, v4);
        }
        sub_22D10D4AC((uint64_t)v11, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
      }
      return 0;
    }
  }
  return result;
}

uint64_t PBBlobPushResult.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBBlobPushResult, &qword_26853FA40, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult);
}

uint64_t sub_22D0FC540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CDF8, &qword_26853F7A0, a2);
}

unint64_t sub_22D0FC564()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D0FC580()
{
  return PBBlobPushResult.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D0FC598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobPushResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D0FC5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF18, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0FC62C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CDF0, (uint64_t)qword_26853F788, a1);
}

uint64_t sub_22D0FC650(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FA30, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0FC6BC()
{
  sub_22D108C74(&qword_26853FA30, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult);
  return sub_22D2BC200();
}

uint64_t sub_22D0FC738(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBBlobPushResult, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FBEBC) & 1;
}

uint64_t sub_22D0FC77C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F7A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F7A8);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_22D2C0BB0;
  unint64_t v5 = v21 + v4 + *(int *)(v2 + 56);
  *(void *)(v21 + v4) = 0;
  *(void *)unint64_t v5 = "OK";
  *(void *)(v5 + 8) = 2;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_22D2BC2F0();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v21 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v21 + v4 + v3) = 1;
  *(void *)unint64_t v9 = "INVALID_ID";
  *(void *)(v9 + 8) = 10;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v21 + v4 + 2 * v3);
  unint64_t v11 = (char *)v10 + *(int *)(v2 + 56);
  *uint64_t v10 = 2;
  *(void *)unint64_t v11 = "BLOB_SIZE_EXCEEDED";
  *((void *)v11 + 1) = 18;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v21 + v4 + 3 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "BLOB_SIZE_BELOW_MIN";
  *((void *)v13 + 1) = 19;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v21 + v4 + 4 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "SERVER_ERROR";
  *((void *)v15 + 1) = 12;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v21 + v4 + 5 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 6;
  *(void *)uint64_t v17 = "INVALID_EXPIRATION_TIME";
  *((void *)v17 + 1) = 23;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v21 + v4 + 6 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 7;
  *(void *)uint64_t v19 = "INVALID_NODE";
  *((void *)v19 + 1) = 12;
  v19[16] = 2;
  v8();
  return sub_22D2BC300();
}

uint64_t static PBBlobPushResult.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE00, (uint64_t)qword_26853F7A8, a1);
}

uint64_t sub_22D0FCAB0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE00, (uint64_t)qword_26853F7A8, a1);
}

unint64_t static PBPullBlobsRequest.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_22D0FCAF0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F7C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F7C0);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "ids";
  *(void *)(v7 + 8) = 3;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)unint64_t v11 = "health_institute_id";
  *((void *)v11 + 1) = 19;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBPullBlobsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE08, (uint64_t)qword_26853F7C0, a1);
}

uint64_t PBPullBlobsRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_22D2BC170();
      }
      else if (result == 1)
      {
        sub_22D2BC140();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBPullBlobsRequest.traverse<A>(visitor:)()
{
  if (!*(void *)(*v0 + 16) || (uint64_t result = sub_22D2BC290(), !v1))
  {
    unint64_t v3 = v0[2];
    uint64_t v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v4 = v0[1] & 0xFFFFFFFFFFFFLL;
    }
    if (!v4 || (uint64_t result = sub_22D2BC2B0(), !v1))
    {
      type metadata accessor for PBPullBlobsRequest(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t PBPullBlobsRequest.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBPullBlobsRequest, &qword_26853FA48, (void (*)(uint64_t))type metadata accessor for PBPullBlobsRequest);
}

uint64_t sub_22D0FCEBC@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  return sub_22D2BBFE0();
}

unint64_t sub_22D0FCEF0()
{
  return 0xD000000000000030;
}

uint64_t sub_22D0FCF0C()
{
  return PBPullBlobsRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D0FCF24()
{
  return PBPullBlobsRequest.traverse<A>(visitor:)();
}

uint64_t sub_22D0FCF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF10, (void (*)(uint64_t))type metadata accessor for PBPullBlobsRequest);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0FCFB8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE08, (uint64_t)qword_26853F7C0, a1);
}

uint64_t sub_22D0FCFDC(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FC10, (void (*)(uint64_t))type metadata accessor for PBPullBlobsRequest);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0FD048()
{
  sub_22D108C74(&qword_26853FC10, (void (*)(uint64_t))type metadata accessor for PBPullBlobsRequest);
  return sub_22D2BC200();
}

unint64_t static PBPullBlobsResponse.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_22D0FD0E4(uint64_t a1)
{
  return sub_22D1061E8(a1, qword_26853F7D8, (uint64_t)"results", 7, MEMORY[0x263F50718]);
}

uint64_t static PBPullBlobsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE10, (uint64_t)qword_26853F7D8, a1);
}

uint64_t PBPullBlobsResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1063F0(a1, a2, a3, (void (*)(void))type metadata accessor for PBBlobPullResult, &qword_26853FA50, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult);
}

uint64_t PBPullBlobsResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBBlobPullResult(0),
        sub_22D108C74(&qword_26853FA50, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBPullBlobsResponse(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t static PBPullBlobsResponse.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D110B80, type metadata accessor for PBPullBlobsResponse) & 1;
}

uint64_t PBPullBlobsResponse.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBPullBlobsResponse, &qword_26853FA58, (void (*)(uint64_t))type metadata accessor for PBPullBlobsResponse);
}

unint64_t sub_22D0FD2FC()
{
  return 0xD000000000000031;
}

uint64_t sub_22D0FD318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPullBlobsResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D0FD330()
{
  return PBPullBlobsResponse.traverse<A>(visitor:)();
}

uint64_t sub_22D0FD348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF08, (void (*)(uint64_t))type metadata accessor for PBPullBlobsResponse);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0FD3C4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE10, (uint64_t)qword_26853F7D8, a1);
}

uint64_t sub_22D0FD3E8(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FC28, (void (*)(uint64_t))type metadata accessor for PBPullBlobsResponse);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0FD454()
{
  sub_22D108C74(&qword_26853FC28, (void (*)(uint64_t))type metadata accessor for PBPullBlobsResponse);
  return sub_22D2BC200();
}

uint64_t sub_22D0FD4D0(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D110B80, type metadata accessor for PBPullBlobsResponse) & 1;
}

unint64_t static PBBlobPullResult.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D0FD530()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F7F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F7F0);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "id";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 3;
  *(void *)unint64_t v11 = "message";
  *(void *)(v11 + 8) = 7;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 2;
  *(void *)uint64_t v13 = "result_code";
  *((void *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "blob";
  *((void *)v15 + 1) = 4;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlobPullResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE18, (uint64_t)qword_26853F7F0, a1);
}

uint64_t sub_22D0FD7B4(uint64_t a1)
{
  return sub_22D0FD7F0(a1, (void (*)(void))type metadata accessor for PBBlobPullResult._StorageClass, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob, &qword_26853F808);
}

uint64_t sub_22D0FD7F0(uint64_t a1, void (*a2)(void), void *a3, uint64_t (*a4)(void), uint64_t *a5)
{
  a2(0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0xE000000000000000;
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 40) = 0xE000000000000000;
  *(void *)(v8 + 48) = 0;
  *(unsigned char *)(v8 + 56) = 1;
  uint64_t v9 = v8 + *a3;
  uint64_t v10 = a4(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *a5 = v8;
  return result;
}

uint64_t sub_22D0FD8A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), void *a4, uint64_t (*a5)(void))
{
  char v24 = a4;
  int v26 = a3;
  uint64_t v25 = a2;
  sub_22D100F98(0, a2, a3, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v24 - v10;
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0xE000000000000000;
  *(void *)(v5 + 32) = 0;
  *(void *)(v5 + 40) = 0xE000000000000000;
  *(void *)(v5 + 48) = 0;
  *(unsigned char *)(v5 + 56) = 1;
  uint64_t v12 = v5 + *a4;
  uint64_t v13 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v5 + 16) = v14;
  *(void *)(v5 + 24) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v5 + 32) = v17;
  *(void *)(v5 + 40) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v18 = *(void *)(a1 + 48);
  LOBYTE(v17) = *(unsigned char *)(a1 + 56);
  swift_beginAccess();
  *(void *)(v5 + 48) = v18;
  *(unsigned char *)(v5 + 56) = v17;
  uint64_t v19 = a1 + *v24;
  swift_beginAccess();
  uint64_t v20 = v19;
  uint64_t v21 = v25;
  uint64_t v22 = v26;
  sub_22D1012DC(v20, (uint64_t)v11, v25, v26);
  swift_release();
  swift_beginAccess();
  sub_22D103748((uint64_t)v11, v12, v21, v22);
  swift_endAccess();
  return v5;
}

uint64_t sub_22D0FDB24()
{
  return sub_22D0FDB4C(&OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, &qword_26853F9B0, type metadata accessor for PBBlob);
}

uint64_t sub_22D0FDB4C(void *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D10135C(v3 + *a1, a2, a3);
  return swift_deallocClassInstance();
}

uint64_t PBBlobPullResult.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = *(int *)(type metadata accessor for PBBlobPullResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBBlobPullResult._StorageClass(0);
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_22D0FD8A4(v2, &qword_26853F9B0, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob, type metadata accessor for PBBlob);
    swift_release();
  }
  swift_retain();
  sub_22D0FDCE4();
  return swift_release();
}

uint64_t sub_22D0FDCE4()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          sub_22D10D404();
          uint64_t v4 = v3;
          sub_22D2BC0D0();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          type metadata accessor for PBBlob(0);
          sub_22D108C74(&qword_26853FA10, (void (*)(uint64_t))type metadata accessor for PBBlob);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBBlobPullResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0F9C60(a1, a2, a3, (void (*)(void))type metadata accessor for PBBlobPullResult, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D0FDF08);
}

uint64_t sub_22D0FDF08(uint64_t a1)
{
  sub_22D100F98(0, &qword_26853F9B0, type metadata accessor for PBBlob, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v16[-v4];
  uint64_t v6 = type metadata accessor for PBBlob(0);
  uint64_t v19 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  unint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    if (!*(void *)(a1 + 48)
      || (char v12 = *(unsigned char *)(a1 + 56),
          uint64_t v17 = *(void *)(a1 + 48),
          char v18 = v12,
          sub_22D10D404(),
          uint64_t result = sub_22D2BC240(),
          !v1))
    {
      swift_beginAccess();
      unint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0) {
        uint64_t v14 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
      }
      if (!v14 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
      {
        uint64_t v15 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
        swift_beginAccess();
        sub_22D1012DC(v15, (uint64_t)v5, &qword_26853F9B0, type metadata accessor for PBBlob);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v5, 1, v6) == 1)
        {
          return sub_22D10135C((uint64_t)v5, &qword_26853F9B0, type metadata accessor for PBBlob);
        }
        else
        {
          sub_22D1013CC((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBBlob);
          sub_22D108C74(&qword_26853FA10, (void (*)(uint64_t))type metadata accessor for PBBlob);
          sub_22D2BC2E0();
          return sub_22D10107C((uint64_t)v8, type metadata accessor for PBBlob);
        }
      }
    }
  }
  return result;
}

uint64_t static PBBlobPullResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBBlobPullResult, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FE2D4) & 1;
}

BOOL sub_22D0FE2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBBlob(0);
  uint64_t v35 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D10D508(0, &qword_26853FFA0, &qword_26853F9B0, type metadata accessor for PBBlob);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v33 - v9;
  sub_22D100F98(0, &qword_26853F9B0, type metadata accessor for PBBlob, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v33 - v15;
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v17 == *(void *)(a2 + 16) && v18 == *(void *)(a2 + 24)
    || (v19 = sub_22D2BD660(), BOOL result = 0, (v19 & 1) != 0))
  {
    if ((swift_beginAccess(),
          uint64_t v21 = *(void *)(a1 + 32),
          uint64_t v22 = *(void *)(a1 + 40),
          swift_beginAccess(),
          v21 == *(void *)(a2 + 32))
      && v22 == *(void *)(a2 + 40)
      || (v23 = sub_22D2BD660(), BOOL result = 0, (v23 & 1) != 0))
    {
      swift_beginAccess();
      uint64_t v24 = *(void *)(a1 + 48);
      int v25 = *(unsigned __int8 *)(a1 + 56);
      swift_beginAccess();
      if (v25 == 1) {
        uint64_t v24 = qword_22D2C7818[v24];
      }
      uint64_t v26 = *(void *)(a2 + 48);
      if (*(unsigned char *)(a2 + 56))
      {
        switch(v26)
        {
          case 1:
            if (v24 != 4) {
              return 0;
            }
            goto LABEL_20;
          case 2:
            if (v24 != 5) {
              return 0;
            }
            goto LABEL_20;
          case 3:
            if (v24 == 7) {
              goto LABEL_20;
            }
            return 0;
          default:
            if (!v24) {
              goto LABEL_20;
            }
            return 0;
        }
      }
      if (v24 != v26) {
        return 0;
      }
LABEL_20:
      uint64_t v34 = v6;
      uint64_t v27 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
      swift_beginAccess();
      sub_22D1012DC(v27, (uint64_t)v16, &qword_26853F9B0, type metadata accessor for PBBlob);
      uint64_t v28 = a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPullResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blob;
      swift_beginAccess();
      uint64_t v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_22D1012DC((uint64_t)v16, (uint64_t)v10, &qword_26853F9B0, type metadata accessor for PBBlob);
      sub_22D1012DC(v28, v29, &qword_26853F9B0, type metadata accessor for PBBlob);
      uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
      if (v30((uint64_t)v10, 1, v4) == 1)
      {
        sub_22D10135C((uint64_t)v16, &qword_26853F9B0, type metadata accessor for PBBlob);
        if (v30(v29, 1, v4) == 1)
        {
          sub_22D10135C((uint64_t)v10, &qword_26853F9B0, type metadata accessor for PBBlob);
          return 1;
        }
      }
      else
      {
        sub_22D1012DC((uint64_t)v10, (uint64_t)v14, &qword_26853F9B0, type metadata accessor for PBBlob);
        if (v30(v29, 1, v4) != 1)
        {
          uint64_t v31 = (uint64_t)v34;
          sub_22D1013CC(v29, (uint64_t)v34, type metadata accessor for PBBlob);
          char v32 = sub_22D108888((uint64_t)v14, v31, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FA164);
          sub_22D10107C(v31, type metadata accessor for PBBlob);
          sub_22D10135C((uint64_t)v16, &qword_26853F9B0, type metadata accessor for PBBlob);
          sub_22D10107C((uint64_t)v14, type metadata accessor for PBBlob);
          sub_22D10135C((uint64_t)v10, &qword_26853F9B0, type metadata accessor for PBBlob);
          return (v32 & 1) != 0;
        }
        sub_22D10135C((uint64_t)v16, &qword_26853F9B0, type metadata accessor for PBBlob);
        sub_22D10107C((uint64_t)v14, type metadata accessor for PBBlob);
      }
      sub_22D10D4AC((uint64_t)v10, &qword_26853FFA0, &qword_26853F9B0, type metadata accessor for PBBlob);
      return 0;
    }
  }
  return result;
}

uint64_t PBBlobPullResult.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBBlobPullResult, &qword_26853FA60, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult);
}

uint64_t sub_22D0FE90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CE20, &qword_26853F808, a2);
}

unint64_t sub_22D0FE930()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D0FE94C()
{
  return PBBlobPullResult.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D0FE964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobPullResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D0FE97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FF00, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D0FE9F8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE18, (uint64_t)qword_26853F7F0, a1);
}

uint64_t sub_22D0FEA1C(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FA50, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D0FEA88()
{
  sub_22D108C74(&qword_26853FA50, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult);
  return sub_22D2BC200();
}

uint64_t sub_22D0FEB04(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBBlobPullResult, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FE2D4) & 1;
}

uint64_t sub_22D0FEB48()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F810);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F810);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "OK";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 4;
  *(void *)unint64_t v11 = "ID_NOT_FOUND";
  *(void *)(v11 + 8) = 12;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 5;
  *(void *)uint64_t v13 = "SERVER_ERROR";
  *((void *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 7;
  *(void *)uint64_t v15 = "INVALID_NODE";
  *((void *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlobPullResult.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE28, (uint64_t)qword_26853F810, a1);
}

uint64_t sub_22D0FEDD0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE28, (uint64_t)qword_26853F810, a1);
}

unint64_t static PBDeleteBlobsRequest.protoMessageName.getter()
{
  return 0xD000000000000032;
}

uint64_t sub_22D0FEE10(uint64_t a1)
{
  return sub_22D103160(a1, qword_26853F828, (uint64_t)"delete_blobs", 12);
}

uint64_t static PBDeleteBlobsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE30, (uint64_t)qword_26853F828, a1);
}

uint64_t sub_22D0FEE4C()
{
  type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  uint64_t v2 = type metadata accessor for PBDeleteBlobs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  uint64_t v4 = type metadata accessor for PBBlobAuth(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_26853F840 = v0;
  return result;
}

uint64_t sub_22D0FEF20(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v17 - v5;
  sub_22D100F98(0, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, v3);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  uint64_t v11 = type metadata accessor for PBDeleteBlobs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  uint64_t v13 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_22D1012DC(v14, (uint64_t)v9, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  swift_beginAccess();
  sub_22D103748((uint64_t)v9, v10, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  swift_endAccess();
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v15, (uint64_t)v6, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_release();
  swift_beginAccess();
  sub_22D103748((uint64_t)v6, v12, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D0FF1B8()
{
  return sub_22D0FF1E8(&OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

uint64_t sub_22D0FF1E8(void *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), void *a4)
{
  sub_22D10135C(v4 + *a1, a2, a3);
  sub_22D10135C(v4 + *a4, &qword_26853F988, type metadata accessor for PBBlobAuth);
  return swift_deallocClassInstance();
}

uint64_t PBDeleteBlobsRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D106EC0(a1, a2, a3, type metadata accessor for PBDeleteBlobsRequest, (void (*)(void))type metadata accessor for PBDeleteBlobsRequest._StorageClass, sub_22D0FEF20, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D0FF2E4);
}

uint64_t sub_22D0FF2E4()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBDeleteBlobs(0);
        sub_22D108C74(&qword_26853E7B8, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBBlobAuth(0);
    sub_22D108C74(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
LABEL_5:
    sub_22D2BC1A0();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBDeleteBlobsRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0F9C60(a1, a2, a3, (void (*)(void))type metadata accessor for PBDeleteBlobsRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D0FF4C0);
}

uint64_t sub_22D0FF4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v29 = a4;
  uint64_t v28 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v25 = type metadata accessor for PBBlobAuth(0);
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v23 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D100F98(0, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, v5);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for PBDeleteBlobs(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_22D1012DC(v18, (uint64_t)v13, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_22D10135C((uint64_t)v13, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  }
  else
  {
    sub_22D1013CC((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBDeleteBlobs);
    sub_22D108C74(&qword_26853E7B8, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
    uint64_t v19 = v26;
    sub_22D2BC2E0();
    uint64_t result = sub_22D10107C((uint64_t)v17, type metadata accessor for PBDeleteBlobs);
    if (v19) {
      return result;
    }
  }
  uint64_t v21 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v21, (uint64_t)v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v25) == 1) {
    return sub_22D10135C((uint64_t)v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  uint64_t v22 = v23;
  sub_22D1013CC((uint64_t)v8, v23, type metadata accessor for PBBlobAuth);
  sub_22D108C74(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  sub_22D2BC2E0();
  return sub_22D10107C(v22, type metadata accessor for PBBlobAuth);
}

uint64_t static PBDeleteBlobsRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBDeleteBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FF998) & 1;
}

BOOL sub_22D0FF998(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v3 = type metadata accessor for PBBlobAuth(0);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v50 = (uint64_t *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D10D508(0, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (uint64_t)&v49 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v51 = (uint64_t *)((char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = (uint64_t)&v49 - v11;
  uint64_t v12 = type metadata accessor for PBDeleteBlobs(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v52 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D10D508(0, &qword_26853FF98, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v49 - v17;
  sub_22D100F98(0, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs, v7);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v58 = (uint64_t *)((char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v49 - v22;
  uint64_t v24 = a1;
  uint64_t v25 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  sub_22D1012DC(v25, (uint64_t)v23, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  uint64_t v26 = v59;
  uint64_t v27 = v59
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_22D1012DC((uint64_t)v23, (uint64_t)v18, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  sub_22D1012DC(v27, v28, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v29((uint64_t)v18, 1, v12) != 1)
  {
    uint64_t v39 = v24;
    int v40 = v58;
    sub_22D1012DC((uint64_t)v18, (uint64_t)v58, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
    if (v29(v28, 1, v12) != 1)
    {
      uint64_t v42 = v52;
      sub_22D1013CC(v28, (uint64_t)v52, type metadata accessor for PBDeleteBlobs);
      uint64_t v43 = *v40;
      uint64_t v44 = *v42;
      uint64_t v31 = v39;
      swift_retain();
      swift_retain();
      if (sub_22D11191C(v43, v44))
      {
        sub_22D2BBFF0();
        sub_22D108C74(&qword_26853DB30, MEMORY[0x263F50560]);
        char v45 = sub_22D2BCB90();
        sub_22D10107C((uint64_t)v42, type metadata accessor for PBDeleteBlobs);
        sub_22D10135C((uint64_t)v23, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
        sub_22D10107C((uint64_t)v40, type metadata accessor for PBDeleteBlobs);
        sub_22D10135C((uint64_t)v18, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
        if (v45) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_22D10107C((uint64_t)v42, type metadata accessor for PBDeleteBlobs);
        sub_22D10135C((uint64_t)v23, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
        sub_22D10107C((uint64_t)v40, type metadata accessor for PBDeleteBlobs);
        sub_22D10135C((uint64_t)v18, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
      }
LABEL_10:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_22D10135C((uint64_t)v23, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
    sub_22D10107C((uint64_t)v40, type metadata accessor for PBDeleteBlobs);
LABEL_9:
    sub_22D10D4AC((uint64_t)v18, &qword_26853FF98, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
    goto LABEL_10;
  }
  swift_retain();
  swift_retain();
  sub_22D10135C((uint64_t)v23, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
  unsigned int v30 = v29(v28, 1, v12);
  uint64_t v31 = v24;
  if (v30 != 1) {
    goto LABEL_9;
  }
  sub_22D10135C((uint64_t)v18, &qword_26853F9C0, type metadata accessor for PBDeleteBlobs);
LABEL_4:
  uint64_t v32 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  uint64_t v33 = v54;
  sub_22D1012DC(v32, v54, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v34 = v26
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  uint64_t v35 = v57;
  uint64_t v36 = v57 + *(int *)(v53 + 48);
  sub_22D1012DC(v33, v57, &qword_26853F988, type metadata accessor for PBBlobAuth);
  sub_22D1012DC(v34, v36, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v37 = v56;
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v38(v35, 1, v56) == 1)
  {
    swift_release();
    swift_release();
    sub_22D10135C(v33, &qword_26853F988, type metadata accessor for PBBlobAuth);
    if (v38(v36, 1, v37) == 1)
    {
      sub_22D10135C(v35, &qword_26853F988, type metadata accessor for PBBlobAuth);
      return 1;
    }
    goto LABEL_18;
  }
  uint64_t v46 = v51;
  sub_22D1012DC(v35, (uint64_t)v51, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if (v38(v36, 1, v37) == 1)
  {
    swift_release();
    swift_release();
    sub_22D10135C(v33, &qword_26853F988, type metadata accessor for PBBlobAuth);
    sub_22D10107C((uint64_t)v46, type metadata accessor for PBBlobAuth);
LABEL_18:
    sub_22D10D4AC(v35, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
    return 0;
  }
  uint64_t v47 = v50;
  sub_22D1013CC(v36, (uint64_t)v50, type metadata accessor for PBBlobAuth);
  char v48 = _s19HealthRecordsDaemon10PBBlobAuthV2eeoiySbAC_ACtFZ_0(v46, v47);
  swift_release();
  swift_release();
  sub_22D10107C((uint64_t)v47, type metadata accessor for PBBlobAuth);
  sub_22D10135C(v33, &qword_26853F988, type metadata accessor for PBBlobAuth);
  sub_22D10107C((uint64_t)v46, type metadata accessor for PBBlobAuth);
  sub_22D10135C(v35, &qword_26853F988, type metadata accessor for PBBlobAuth);
  return (v48 & 1) != 0;
}

uint64_t PBDeleteBlobsRequest.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBDeleteBlobsRequest, &qword_26853FA68, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsRequest);
}

uint64_t sub_22D100388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CE38, &qword_26853F840, a2);
}

unint64_t sub_22D1003AC()
{
  return 0xD000000000000032;
}

uint64_t sub_22D1003C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlobsRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1003E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlobsRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1003F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FEF8, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsRequest);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D100474@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE30, (uint64_t)qword_26853F828, a1);
}

uint64_t sub_22D100498(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FC50, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsRequest);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D100504()
{
  sub_22D108C74(&qword_26853FC50, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsRequest);
  return sub_22D2BC200();
}

uint64_t sub_22D100580(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBDeleteBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FF998) & 1;
}

unint64_t static PBDeleteBlobs.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_22D1005E0(uint64_t a1)
{
  return sub_22D1061E8(a1, qword_26853F848, (uint64_t)"delete_blobs", 12, MEMORY[0x263F50728]);
}

uint64_t static PBDeleteBlobs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE40, (uint64_t)qword_26853F848, a1);
}

uint64_t PBDeleteBlobs.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1063F0(a1, a2, a3, (void (*)(void))type metadata accessor for PBDeleteBlob, &qword_26853FA70, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob);
}

uint64_t PBDeleteBlobs.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBDeleteBlob(0),
        sub_22D108C74(&qword_26853FA70, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBDeleteBlobs(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t static PBDeleteBlobs.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D11191C, type metadata accessor for PBDeleteBlobs) & 1;
}

uint64_t PBDeleteBlobs.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBDeleteBlobs, &qword_26853FA78, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
}

unint64_t sub_22D1007F8()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_22D100814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlobs.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D10082C()
{
  return PBDeleteBlobs.traverse<A>(visitor:)();
}

uint64_t sub_22D100844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FEF0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1008C0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE40, (uint64_t)qword_26853F848, a1);
}

uint64_t sub_22D1008E4(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853E7B8, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D100950()
{
  sub_22D108C74(&qword_26853E7B8, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
  return sub_22D2BC200();
}

uint64_t sub_22D1009CC(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D11191C, type metadata accessor for PBDeleteBlobs) & 1;
}

unint64_t static PBDeleteBlob.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D100A2C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F860);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F860);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "id";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "deletion_commitment";
  *((void *)v11 + 1) = 19;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "revocation_authorization";
  *(void *)(v12 + 8) = 24;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBDeleteBlob._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE48, (uint64_t)qword_26853F860, a1);
}

uint64_t sub_22D100C84()
{
  type metadata accessor for PBDeleteBlob._StorageClass(0);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = sub_22D2BBFC0();
  v0[5] = v1;
  uint64_t v2 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  uint64_t v3 = type metadata accessor for PBRevocationAuthorization();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  qword_26853F878 = (uint64_t)v0;
  return result;
}

uint64_t type metadata accessor for PBDeleteBlob._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE70);
}

void *sub_22D100D3C(void *a1)
{
  sub_22D100F98(0, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v17[-v4];
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = sub_22D2BBFC0();
  v1[5] = v6;
  uint64_t v7 = (uint64_t)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  uint64_t v8 = type metadata accessor for PBRevocationAuthorization();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  swift_beginAccess();
  v1[2] = v9;
  v1[3] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v11 = a1[4];
  unint64_t v12 = a1[5];
  swift_beginAccess();
  uint64_t v13 = v1[4];
  unint64_t v14 = v1[5];
  v1[4] = v11;
  v1[5] = v12;
  sub_22CFF9B64(v11, v12);
  sub_22CFF5630(v13, v14);
  uint64_t v15 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
  swift_beginAccess();
  sub_22D1012DC(v15, (uint64_t)v5, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  swift_release();
  swift_beginAccess();
  sub_22D103748((uint64_t)v5, v7, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  swift_endAccess();
  return v1;
}

uint64_t type metadata accessor for PBBlobPushResult(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FD70);
}

void sub_22D100F98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for PBBlobs(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FD30);
}

uint64_t type metadata accessor for PBPushBlobsRequest(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FD10);
}

uint64_t type metadata accessor for PBPushBlobsRequest._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE20);
}

uint64_t type metadata accessor for PBBlobAuth(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FD20);
}

uint64_t sub_22D10107C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for PBBlob(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FD40);
}

uint64_t type metadata accessor for PBBlob._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE30);
}

uint64_t type metadata accessor for PBBlobAttribute(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FD50);
}

uint64_t type metadata accessor for PBPushBlobsResponse(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FD60);
}

uint64_t type metadata accessor for PBBlobPushResult._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE40);
}

uint64_t type metadata accessor for PBPullBlobsRequest(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FD80);
}

uint64_t type metadata accessor for PBPullBlobsResponse(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FD90);
}

uint64_t type metadata accessor for PBBlobPullResult(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FDA0);
}

uint64_t type metadata accessor for PBBlobPullResult._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE50);
}

uint64_t type metadata accessor for PBDeleteBlobs(uint64_t a1)
{
  return sub_22D01234C(a1, qword_26AEC1140);
}

uint64_t type metadata accessor for PBDeleteBlobsRequest(uint64_t a1)
{
  return sub_22D01234C(a1, qword_26AEC11D8);
}

uint64_t type metadata accessor for PBDeleteBlobsRequest._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE60);
}

uint64_t type metadata accessor for PBDeleteBlobsResponse(uint64_t a1)
{
  return sub_22D01234C(a1, qword_26AEC1278);
}

uint64_t type metadata accessor for PBBlobDeleteResult(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FDC0);
}

uint64_t type metadata accessor for PBTouchBlobs(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FDE0);
}

uint64_t type metadata accessor for PBTouchBlobsRequest(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FDD0);
}

uint64_t sub_22D1012DC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D100F98(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D10135C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D100F98(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D1013CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PBTouchBlobsRequest._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE80);
}

uint64_t sub_22D101454()
{
  swift_bridgeObjectRelease();
  sub_22CFF5630(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_22D10135C(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  return swift_deallocClassInstance();
}

uint64_t PBDeleteBlob.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D106EC0(a1, a2, a3, type metadata accessor for PBDeleteBlob, (void (*)(void))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D100D3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D10154C);
}

uint64_t sub_22D10154C()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_22D2BC110();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_22D2BC170();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBRevocationAuthorization();
    sub_22D108C74((unint64_t *)&qword_26853E5D0, (void (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
    uint64_t v4 = v3;
    sub_22D2BC1A0();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBDeleteBlob.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0F9C60(a1, a2, a3, (void (*)(void))type metadata accessor for PBDeleteBlob, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D101720);
}

uint64_t sub_22D101720(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D100F98(0, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for PBRevocationAuthorization();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v22 = (uint64_t)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v14 = a1[3];
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v24 = a4;
  uint64_t v23 = a3;
  if (!v15 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    uint64_t v18 = a1[4];
    unint64_t v17 = a1[5];
    switch(v17 >> 62)
    {
      case 1uLL:
        if ((int)v18 != v18 >> 32) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 2uLL:
        if (*(void *)(v18 + 16) != *(void *)(v18 + 24)) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 3uLL:
        goto LABEL_12;
      default:
        if ((v17 & 0xFF000000000000) == 0) {
          goto LABEL_12;
        }
LABEL_11:
        sub_22CFF9B64(a1[4], a1[5]);
        sub_22D2BC260();
        uint64_t result = sub_22CFF5630(v18, v17);
        if (!v4)
        {
LABEL_12:
          uint64_t v19 = (uint64_t)a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
          swift_beginAccess();
          sub_22D1012DC(v19, (uint64_t)v10, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
          {
            uint64_t result = sub_22D10135C((uint64_t)v10, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
          }
          else
          {
            uint64_t v20 = v22;
            sub_22D1013CC((uint64_t)v10, v22, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
            sub_22D108C74((unint64_t *)&qword_26853E5D0, (void (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
            sub_22D2BC2E0();
            uint64_t result = sub_22D10107C(v20, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
          }
        }
        break;
    }
  }
  return result;
}

uint64_t static PBDeleteBlob.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBDeleteBlob, (uint64_t (*)(uint64_t, uint64_t))sub_22D101AF4) & 1;
}

BOOL sub_22D101AF4(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PBRevocationAuthorization();
  uint64_t v37 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D10D508(0, &qword_26853FF90, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v33 - v9;
  sub_22D100F98(0, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v36 = (uint64_t)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v33 - v14;
  swift_beginAccess();
  uint64_t v16 = a1[2];
  uint64_t v17 = a1[3];
  swift_beginAccess();
  if (v16 == a2[2] && v17 == a2[3] || (v18 = sub_22D2BD660(), BOOL result = 0, (v18 & 1) != 0))
  {
    uint64_t v34 = v6;
    uint64_t v35 = v4;
    swift_beginAccess();
    uint64_t v20 = a1[4];
    unint64_t v21 = a1[5];
    swift_beginAccess();
    uint64_t v22 = a2[4];
    unint64_t v23 = a2[5];
    swift_retain();
    swift_retain();
    sub_22CFF9B64(v20, v21);
    sub_22CFF9B64(v22, v23);
    char v24 = sub_22D1158DC(v20, v21, v22, v23);
    sub_22CFF5630(v22, v23);
    sub_22CFF5630(v20, v21);
    if (v24)
    {
      uint64_t v25 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
      swift_beginAccess();
      sub_22D1012DC(v25, (uint64_t)v15, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
      uint64_t v26 = (uint64_t)a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBDeleteBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__revocationAuthorization;
      swift_beginAccess();
      uint64_t v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_22D1012DC((uint64_t)v15, (uint64_t)v10, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
      sub_22D1012DC(v26, v27, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
      uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
      uint64_t v29 = v35;
      if (v28((uint64_t)v10, 1, v35) == 1)
      {
        swift_release();
        swift_release();
        sub_22D10135C((uint64_t)v15, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
        if (v28(v27, 1, v29) == 1)
        {
          sub_22D10135C((uint64_t)v10, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
          return 1;
        }
      }
      else
      {
        uint64_t v30 = v36;
        sub_22D1012DC((uint64_t)v10, v36, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
        if (v28(v27, 1, v29) != 1)
        {
          uint64_t v31 = (uint64_t)v34;
          sub_22D1013CC(v27, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
          char v32 = _s19HealthRecordsDaemon25PBRevocationAuthorizationV2eeoiySbAC_ACtFZ_0(v30, v31);
          swift_release();
          swift_release();
          sub_22D10107C(v31, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
          sub_22D10135C((uint64_t)v15, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
          sub_22D10107C(v30, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
          sub_22D10135C((uint64_t)v10, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
          return (v32 & 1) != 0;
        }
        swift_release();
        swift_release();
        sub_22D10135C((uint64_t)v15, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
        sub_22D10107C(v30, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
      }
      sub_22D10D4AC((uint64_t)v10, &qword_26853FF90, (unint64_t *)&qword_26853E7D8, (uint64_t (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
    }
    else
    {
      swift_release();
      swift_release();
    }
    return 0;
  }
  return result;
}

uint64_t PBDeleteBlob.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBDeleteBlob, &qword_26853FA80, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob);
}

uint64_t sub_22D1020CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CE50, &qword_26853F878, a2);
}

unint64_t sub_22D1020F0()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D10210C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlob.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D102124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlob.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D10213C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FEE8, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1021B8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE48, (uint64_t)qword_26853F860, a1);
}

uint64_t sub_22D1021DC(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FA70, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D102248()
{
  sub_22D108C74(&qword_26853FA70, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob);
  return sub_22D2BC200();
}

uint64_t sub_22D1022C4(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBDeleteBlob, (uint64_t (*)(uint64_t, uint64_t))sub_22D101AF4) & 1;
}

unint64_t static PBDeleteBlobsResponse.protoMessageName.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_22D102324(uint64_t a1)
{
  return sub_22D1061E8(a1, qword_26853F880, (uint64_t)"results", 7, MEMORY[0x263F50718]);
}

uint64_t static PBDeleteBlobsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE58, (uint64_t)qword_26853F880, a1);
}

uint64_t PBDeleteBlobsResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1063F0(a1, a2, a3, (void (*)(void))type metadata accessor for PBBlobDeleteResult, &qword_26853FA88, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult);
}

uint64_t PBDeleteBlobsResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBBlobDeleteResult(0),
        sub_22D108C74(&qword_26853FA88, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBDeleteBlobsResponse(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t static PBDeleteBlobsResponse.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D1107D8, type metadata accessor for PBDeleteBlobsResponse) & 1;
}

uint64_t PBDeleteBlobsResponse.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBDeleteBlobsResponse, &qword_26853FA90, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsResponse);
}

unint64_t sub_22D10253C()
{
  return 0xD000000000000033;
}

uint64_t sub_22D102558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBDeleteBlobsResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D102570()
{
  return PBDeleteBlobsResponse.traverse<A>(visitor:)();
}

uint64_t sub_22D102588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FEE0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsResponse);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D102604@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE58, (uint64_t)qword_26853F880, a1);
}

uint64_t sub_22D102628(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FC88, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsResponse);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D102694()
{
  sub_22D108C74(&qword_26853FC88, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsResponse);
  return sub_22D2BC200();
}

uint64_t sub_22D102710(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D1107D8, type metadata accessor for PBDeleteBlobsResponse) & 1;
}

unint64_t static PBBlobDeleteResult.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_22D102770()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F898);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F898);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "id";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 3;
  *(void *)uint64_t v11 = "message";
  *((void *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 2;
  *(void *)uint64_t v12 = "result_code";
  *(void *)(v12 + 8) = 11;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlobDeleteResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE60, (uint64_t)qword_26853F898, a1);
}

uint64_t PBBlobDeleteResult.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        sub_22D108CBC();
        sub_22D2BC0D0();
      }
      else if (result == 1)
      {
        break;
      }
LABEL_11:
      uint64_t result = sub_22D2BC080();
    }
    sub_22D2BC170();
    goto LABEL_11;
  }
  return result;
}

uint64_t PBBlobDeleteResult.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    if (!v0[4] || (sub_22D108CBC(), uint64_t result = sub_22D2BC240(), !v1))
    {
      unint64_t v5 = v0[3];
      uint64_t v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0) {
        uint64_t v6 = v0[2] & 0xFFFFFFFFFFFFLL;
      }
      if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
      {
        type metadata accessor for PBBlobDeleteResult(0);
        return sub_22D2BBFD0();
      }
    }
  }
  return result;
}

uint64_t PBBlobDeleteResult.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBBlobDeleteResult, &qword_26853FAA0, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult);
}

uint64_t sub_22D102C34@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  return sub_22D2BBFE0();
}

unint64_t sub_22D102C6C()
{
  return 0xD000000000000030;
}

uint64_t sub_22D102C88()
{
  return PBBlobDeleteResult.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D102CA0()
{
  return PBBlobDeleteResult.traverse<A>(visitor:)();
}

uint64_t sub_22D102CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FED8, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D102D34@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE60, (uint64_t)qword_26853F898, a1);
}

uint64_t sub_22D102D58(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FA88, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D102DC4()
{
  sub_22D108C74(&qword_26853FA88, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult);
  return sub_22D2BC200();
}

uint64_t sub_22D102E44()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F8B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F8B0);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2BFF30;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "OK";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "INVALID_BLOB";
  *(void *)(v11 + 8) = 12;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "UNAUTHORIZED_TO_DELETE";
  *((void *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "ID_NOT_FOUND";
  *((void *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  uint64_t v16 = v6 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v6 + 4 * v3) = 5;
  *(void *)uint64_t v16 = "SERVER_ERROR";
  *(void *)(v16 + 8) = 12;
  *(unsigned char *)(v16 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlobDeleteResult.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE68, (uint64_t)qword_26853F8B0, a1);
}

uint64_t sub_22D103108@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE68, (uint64_t)qword_26853F8B0, a1);
}

unint64_t static PBTouchBlobsRequest.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_22D103148(uint64_t a1)
{
  return sub_22D103160(a1, qword_26853F8C8, (uint64_t)"touch_blobs", 11);
}

uint64_t sub_22D103160(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_22D2BC310();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v9 = v8 - 8;
  uint64_t v10 = *(void *)(*(void *)(v8 - 8) + 72);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22D2C0F10;
  uint64_t v13 = (void *)(v12 + v11);
  unint64_t v14 = v12 + v11 + *(int *)(v9 + 56);
  void *v13 = 1;
  *(void *)unint64_t v14 = a3;
  *(void *)(v14 + 8) = a4;
  *(unsigned char *)(v14 + 16) = 2;
  uint64_t v15 = *MEMORY[0x263F50728];
  uint64_t v16 = sub_22D2BC2F0();
  uint64_t v17 = *(void (**)(void))(*(void *)(v16 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v14, v15, v16);
  char v18 = (char *)v13 + v10 + *(int *)(v9 + 56);
  *(void *)((char *)v13 + v10) = 2;
  *(void *)char v18 = "blob_auth";
  *((void *)v18 + 1) = 9;
  v18[16] = 2;
  v17();
  return sub_22D2BC300();
}

uint64_t static PBTouchBlobsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE70, (uint64_t)qword_26853F8C8, a1);
}

uint64_t sub_22D10335C()
{
  type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  uint64_t v2 = type metadata accessor for PBTouchBlobs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  uint64_t v4 = type metadata accessor for PBBlobAuth(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_26853F8E0 = v0;
  return result;
}

uint64_t sub_22D103430(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v17 - v5;
  sub_22D100F98(0, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, v3);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  uint64_t v11 = type metadata accessor for PBTouchBlobs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  uint64_t v13 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_22D1012DC(v14, (uint64_t)v9, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  swift_beginAccess();
  sub_22D103748((uint64_t)v9, v10, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  swift_endAccess();
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v15, (uint64_t)v6, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_release();
  swift_beginAccess();
  sub_22D103748((uint64_t)v6, v12, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D1036C8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D100F98(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D103748(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D100F98(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D1037C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PBTouchBlob(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FDF0);
}

uint64_t type metadata accessor for PBTouchBlob._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE90);
}

uint64_t sub_22D103870()
{
  return sub_22D0FF1E8(&OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth);
}

uint64_t PBTouchBlobsRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D106EC0(a1, a2, a3, type metadata accessor for PBTouchBlobsRequest, (void (*)(void))type metadata accessor for PBTouchBlobsRequest._StorageClass, sub_22D103430, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D103908);
}

uint64_t sub_22D103908()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBTouchBlobs(0);
        sub_22D108C74(&qword_26853FCC8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBBlobAuth(0);
    sub_22D108C74(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
LABEL_5:
    sub_22D2BC1A0();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBTouchBlobsRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0F9C60(a1, a2, a3, (void (*)(void))type metadata accessor for PBTouchBlobsRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D103AE4);
}

uint64_t sub_22D103AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v29 = a4;
  uint64_t v28 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v25 = type metadata accessor for PBBlobAuth(0);
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v23 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D100F98(0, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, v5);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for PBTouchBlobs(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_22D1012DC(v18, (uint64_t)v13, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_22D10135C((uint64_t)v13, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  }
  else
  {
    sub_22D1013CC((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBTouchBlobs);
    sub_22D108C74(&qword_26853FCC8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
    uint64_t v19 = v26;
    sub_22D2BC2E0();
    uint64_t result = sub_22D10107C((uint64_t)v17, type metadata accessor for PBTouchBlobs);
    if (v19) {
      return result;
    }
  }
  uint64_t v21 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D1012DC(v21, (uint64_t)v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v25) == 1) {
    return sub_22D10135C((uint64_t)v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  uint64_t v22 = v23;
  sub_22D1013CC((uint64_t)v8, v23, type metadata accessor for PBBlobAuth);
  sub_22D108C74(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  sub_22D2BC2E0();
  return sub_22D10107C(v22, type metadata accessor for PBBlobAuth);
}

uint64_t static PBTouchBlobsRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBTouchBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D103FBC) & 1;
}

BOOL sub_22D103FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v3 = type metadata accessor for PBBlobAuth(0);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v50 = (uint64_t *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D10D508(0, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (uint64_t)&v49 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D100F98(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v51 = (uint64_t *)((char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = (uint64_t)&v49 - v11;
  uint64_t v12 = type metadata accessor for PBTouchBlobs(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v52 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D10D508(0, &qword_26853FF88, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v49 - v17;
  sub_22D100F98(0, &qword_26853F9D8, type metadata accessor for PBTouchBlobs, v7);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v58 = (uint64_t *)((char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v49 - v22;
  uint64_t v24 = a1;
  uint64_t v25 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  sub_22D1012DC(v25, (uint64_t)v23, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  uint64_t v26 = v59;
  uint64_t v27 = v59
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__touchBlobs;
  swift_beginAccess();
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_22D1012DC((uint64_t)v23, (uint64_t)v18, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  sub_22D1012DC(v27, v28, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v29((uint64_t)v18, 1, v12) != 1)
  {
    uint64_t v39 = v24;
    int v40 = v58;
    sub_22D1012DC((uint64_t)v18, (uint64_t)v58, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
    if (v29(v28, 1, v12) != 1)
    {
      uint64_t v42 = v52;
      sub_22D1013CC(v28, (uint64_t)v52, type metadata accessor for PBTouchBlobs);
      uint64_t v43 = *v40;
      uint64_t v44 = *v42;
      uint64_t v31 = v39;
      swift_retain();
      swift_retain();
      if (sub_22D111970(v43, v44))
      {
        sub_22D2BBFF0();
        sub_22D108C74(&qword_26853DB30, MEMORY[0x263F50560]);
        char v45 = sub_22D2BCB90();
        sub_22D10107C((uint64_t)v42, type metadata accessor for PBTouchBlobs);
        sub_22D10135C((uint64_t)v23, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
        sub_22D10107C((uint64_t)v40, type metadata accessor for PBTouchBlobs);
        sub_22D10135C((uint64_t)v18, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
        if (v45) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_22D10107C((uint64_t)v42, type metadata accessor for PBTouchBlobs);
        sub_22D10135C((uint64_t)v23, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
        sub_22D10107C((uint64_t)v40, type metadata accessor for PBTouchBlobs);
        sub_22D10135C((uint64_t)v18, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
      }
LABEL_10:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_22D10135C((uint64_t)v23, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
    sub_22D10107C((uint64_t)v40, type metadata accessor for PBTouchBlobs);
LABEL_9:
    sub_22D10D4AC((uint64_t)v18, &qword_26853FF88, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
    goto LABEL_10;
  }
  swift_retain();
  swift_retain();
  sub_22D10135C((uint64_t)v23, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
  unsigned int v30 = v29(v28, 1, v12);
  uint64_t v31 = v24;
  if (v30 != 1) {
    goto LABEL_9;
  }
  sub_22D10135C((uint64_t)v18, &qword_26853F9D8, type metadata accessor for PBTouchBlobs);
LABEL_4:
  uint64_t v32 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  uint64_t v33 = v54;
  sub_22D1012DC(v32, v54, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v34 = v26
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBTouchBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  uint64_t v35 = v57;
  uint64_t v36 = v57 + *(int *)(v53 + 48);
  sub_22D1012DC(v33, v57, &qword_26853F988, type metadata accessor for PBBlobAuth);
  sub_22D1012DC(v34, v36, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v37 = v56;
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v38(v35, 1, v56) == 1)
  {
    swift_release();
    swift_release();
    sub_22D10135C(v33, &qword_26853F988, type metadata accessor for PBBlobAuth);
    if (v38(v36, 1, v37) == 1)
    {
      sub_22D10135C(v35, &qword_26853F988, type metadata accessor for PBBlobAuth);
      return 1;
    }
    goto LABEL_18;
  }
  uint64_t v46 = v51;
  sub_22D1012DC(v35, (uint64_t)v51, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if (v38(v36, 1, v37) == 1)
  {
    swift_release();
    swift_release();
    sub_22D10135C(v33, &qword_26853F988, type metadata accessor for PBBlobAuth);
    sub_22D10107C((uint64_t)v46, type metadata accessor for PBBlobAuth);
LABEL_18:
    sub_22D10D4AC(v35, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
    return 0;
  }
  uint64_t v47 = v50;
  sub_22D1013CC(v36, (uint64_t)v50, type metadata accessor for PBBlobAuth);
  char v48 = _s19HealthRecordsDaemon10PBBlobAuthV2eeoiySbAC_ACtFZ_0(v46, v47);
  swift_release();
  swift_release();
  sub_22D10107C((uint64_t)v47, type metadata accessor for PBBlobAuth);
  sub_22D10135C(v33, &qword_26853F988, type metadata accessor for PBBlobAuth);
  sub_22D10107C((uint64_t)v46, type metadata accessor for PBBlobAuth);
  sub_22D10135C(v35, &qword_26853F988, type metadata accessor for PBBlobAuth);
  return (v48 & 1) != 0;
}

uint64_t PBTouchBlobsRequest.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBTouchBlobsRequest, &qword_26853FAA8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsRequest);
}

uint64_t sub_22D1049AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CE78, &qword_26853F8E0, a2);
}

unint64_t sub_22D1049D0()
{
  return 0xD000000000000031;
}

uint64_t sub_22D1049EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlobsRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D104A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlobsRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D104A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FED0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsRequest);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D104A98@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE70, (uint64_t)qword_26853F8C8, a1);
}

uint64_t sub_22D104ABC(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FCB0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsRequest);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D104B28()
{
  sub_22D108C74(&qword_26853FCB0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsRequest);
  return sub_22D2BC200();
}

uint64_t sub_22D104BA4(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBTouchBlobsRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D103FBC) & 1;
}

unint64_t static PBTouchBlobs.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D104C04(uint64_t a1)
{
  return sub_22D1061E8(a1, qword_26853F8E8, (uint64_t)"touch_blobs", 11, MEMORY[0x263F50728]);
}

uint64_t static PBTouchBlobs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE80, (uint64_t)qword_26853F8E8, a1);
}

uint64_t PBTouchBlobs.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1063F0(a1, a2, a3, (void (*)(void))type metadata accessor for PBTouchBlob, &qword_26853FAB0, (void (*)(uint64_t))type metadata accessor for PBTouchBlob);
}

uint64_t PBTouchBlobs.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBTouchBlob(0),
        sub_22D108C74(&qword_26853FAB0, (void (*)(uint64_t))type metadata accessor for PBTouchBlob),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBTouchBlobs(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t static PBTouchBlobs.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D111970, type metadata accessor for PBTouchBlobs) & 1;
}

uint64_t PBTouchBlobs.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBTouchBlobs, &qword_26853FAB8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
}

unint64_t sub_22D104E1C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D104E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlobs.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D104E50()
{
  return PBTouchBlobs.traverse<A>(visitor:)();
}

uint64_t sub_22D104E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FEC8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D104EE4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE80, (uint64_t)qword_26853F8E8, a1);
}

uint64_t sub_22D104F08(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FCC8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D104F74()
{
  sub_22D108C74(&qword_26853FCC8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
  return sub_22D2BC200();
}

uint64_t sub_22D104FF0(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D111970, type metadata accessor for PBTouchBlobs) & 1;
}

unint64_t static PBTouchBlob.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_22D105050()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F900);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F900);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "id";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "expiration_time";
  *((void *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBTouchBlob._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE88, (uint64_t)qword_26853F900, a1);
}

uint64_t sub_22D105258()
{
  type metadata accessor for PBTouchBlob._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  uint64_t v2 = sub_22D2BBFB0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_26853F918 = v0;
  return result;
}

uint64_t sub_22D1052E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v13[-v5];
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  uint64_t v8 = sub_22D2BBFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v9;
  *(void *)(v1 + 24) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v11, (uint64_t)v6, &qword_26853F998, v3);
  swift_release();
  swift_beginAccess();
  sub_22D103748((uint64_t)v6, v7, &qword_26853F998, v3);
  swift_endAccess();
  return v1;
}

uint64_t type metadata accessor for PBTouchBlobsResponse(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE00);
}

uint64_t type metadata accessor for PBBlobTouchResult(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FE10);
}

uint64_t type metadata accessor for PBBlobTouchResult._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_26853FEA0);
}

uint64_t sub_22D10551C()
{
  return sub_22D106DC8(&OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t PBTouchBlob.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D106EC0(a1, a2, a3, type metadata accessor for PBTouchBlob, (void (*)(void))type metadata accessor for PBTouchBlob._StorageClass, sub_22D1052E8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D105590);
}

uint64_t sub_22D105590()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_22D2BC170();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    sub_22D2BBFB0();
    sub_22D108C74(&qword_26853FF78, MEMORY[0x263F502F0]);
    uint64_t v4 = v3;
    sub_22D2BC1A0();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBTouchBlob.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0F9C60(a1, a2, a3, (void (*)(void))type metadata accessor for PBTouchBlob, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D105724);
}

uint64_t sub_22D105724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v19 - v9;
  uint64_t v11 = sub_22D2BBFB0();
  uint64_t v20 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  v19[0] = a3;
  v19[1] = a4;
  if (!v15 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    uint64_t v17 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    sub_22D1012DC(v17, (uint64_t)v10, &qword_26853F998, MEMORY[0x263F502F0]);
    uint64_t v18 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v11) == 1)
    {
      return sub_22D10135C((uint64_t)v10, &qword_26853F998, MEMORY[0x263F502F0]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v13, v10, v11);
      sub_22D108C74(&qword_26853FF78, MEMORY[0x263F502F0]);
      sub_22D2BC2E0();
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v13, v11);
    }
  }
  return result;
}

uint64_t static PBTouchBlob.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBTouchBlob, (uint64_t (*)(uint64_t, uint64_t))sub_22D105A38) & 1;
}

BOOL sub_22D105A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D10D508(0, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - v10;
  sub_22D100F98(0, &qword_26853F998, v7, MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v32 - v16;
  swift_beginAccess();
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v18 == *(void *)(a2 + 16) && v19 == *(void *)(a2 + 24)
    || (v20 = sub_22D2BD660(), BOOL result = 0, (v20 & 1) != 0))
  {
    uint64_t v32 = v15;
    uint64_t v22 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
    sub_22D1012DC(v22, (uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
    uint64_t v24 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    uint64_t v25 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_22D1012DC((uint64_t)v17, (uint64_t)v11, &qword_26853F998, v23);
    sub_22D1012DC(v24, v25, &qword_26853F998, v23);
    uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v26((uint64_t)v11, 1, v4) == 1)
    {
      sub_22D10135C((uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
      if (v26(v25, 1, v4) == 1)
      {
        sub_22D10135C((uint64_t)v11, &qword_26853F998, MEMORY[0x263F502F0]);
        return 1;
      }
    }
    else
    {
      uint64_t v27 = (uint64_t)v32;
      sub_22D1012DC((uint64_t)v11, (uint64_t)v32, &qword_26853F998, MEMORY[0x263F502F0]);
      if (v26(v25, 1, v4) != 1)
      {
        uint64_t v28 = v33;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v25, v4);
        sub_22D108C74(&qword_26853FF70, MEMORY[0x263F502F0]);
        char v29 = sub_22D2BCB90();
        unsigned int v30 = *(void (**)(char *, uint64_t))(v5 + 8);
        v30(v28, v4);
        uint64_t v31 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
        sub_22D10135C((uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
        v30((char *)v27, v4);
        sub_22D10135C((uint64_t)v11, &qword_26853F998, v31);
        return (v29 & 1) != 0;
      }
      sub_22D10135C((uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v27, v4);
    }
    sub_22D10D4AC((uint64_t)v11, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
    return 0;
  }
  return result;
}

uint64_t PBTouchBlob.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBTouchBlob, &qword_26853FAC0, (void (*)(uint64_t))type metadata accessor for PBTouchBlob);
}

uint64_t sub_22D105F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CE90, &qword_26853F918, a2);
}

unint64_t sub_22D105F94()
{
  return 0xD000000000000029;
}

uint64_t sub_22D105FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlob.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D105FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlob.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D105FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FEC0, (void (*)(uint64_t))type metadata accessor for PBTouchBlob);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D10605C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE88, (uint64_t)qword_26853F900, a1);
}

uint64_t sub_22D106080(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FAB0, (void (*)(uint64_t))type metadata accessor for PBTouchBlob);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1060EC()
{
  sub_22D108C74(&qword_26853FAB0, (void (*)(uint64_t))type metadata accessor for PBTouchBlob);
  return sub_22D2BC200();
}

uint64_t sub_22D106168(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBTouchBlob, (uint64_t (*)(uint64_t, uint64_t))sub_22D105A38) & 1;
}

unint64_t static PBTouchBlobsResponse.protoMessageName.getter()
{
  return 0xD000000000000032;
}

uint64_t sub_22D1061C8(uint64_t a1)
{
  return sub_22D1061E8(a1, qword_26853F920, (uint64_t)"results", 7, MEMORY[0x263F50718]);
}

uint64_t sub_22D1061E8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v9 = sub_22D2BC310();
  __swift_allocate_value_buffer(v9, a2);
  __swift_project_value_buffer(v9, (uint64_t)a2);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v11 = v10 - 8;
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_22D2BFF40;
  unint64_t v14 = v13 + v12 + *(int *)(v11 + 56);
  *(void *)(v13 + v12) = 1;
  *(void *)unint64_t v14 = a3;
  *(void *)(v14 + 8) = a4;
  *(unsigned char *)(v14 + 16) = 2;
  uint64_t v15 = *a5;
  uint64_t v16 = sub_22D2BC2F0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  return sub_22D2BC300();
}

uint64_t static PBTouchBlobsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CE98, (uint64_t)qword_26853F920, a1);
}

uint64_t PBTouchBlobsResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1063F0(a1, a2, a3, (void (*)(void))type metadata accessor for PBBlobTouchResult, &qword_26853FAC8, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult);
}

uint64_t sub_22D1063F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t result = sub_22D2BC080();
  if (!v6)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 1)
      {
        a4(0);
        sub_22D108C74(a5, a6);
        sub_22D2BC190();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBTouchBlobsResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBBlobTouchResult(0),
        sub_22D108C74(&qword_26853FAC8, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBTouchBlobsResponse(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t static PBTouchBlobsResponse.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D110AD8, type metadata accessor for PBTouchBlobsResponse) & 1;
}

uint64_t PBTouchBlobsResponse.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBTouchBlobsResponse, &qword_26853FAD0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsResponse);
}

unint64_t sub_22D106674()
{
  return 0xD000000000000032;
}

uint64_t sub_22D106690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTouchBlobsResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1066A8()
{
  return PBTouchBlobsResponse.traverse<A>(visitor:)();
}

uint64_t sub_22D1066C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FEB8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsResponse);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D10673C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CE98, (uint64_t)qword_26853F920, a1);
}

uint64_t sub_22D106760(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FCF0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsResponse);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1067CC()
{
  sub_22D108C74(&qword_26853FCF0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsResponse);
  return sub_22D2BC200();
}

uint64_t sub_22D106848(char *a1, char *a2)
{
  return sub_22D1086C0(a1, a2, sub_22D110AD8, type metadata accessor for PBTouchBlobsResponse) & 1;
}

unint64_t static PBBlobTouchResult.protoMessageName.getter()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_22D1068A8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F938);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F938);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "id";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  char v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "result_code";
  *((void *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "expiration_time";
  *(void *)(v12 + 8) = 15;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlobTouchResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CEA0, (uint64_t)qword_26853F938, a1);
}

uint64_t sub_22D106B00()
{
  type metadata accessor for PBBlobTouchResult._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  uint64_t v2 = sub_22D2BBFB0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_26853F950 = v0;
  return result;
}

uint64_t sub_22D106B9C(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v15[-v5];
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  *(unsigned char *)(v1 + 40) = 1;
  uint64_t v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  uint64_t v8 = sub_22D2BBFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v9;
  *(void *)(v1 + 24) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v11;
  *(unsigned char *)(v1 + 40) = v12;
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D1012DC(v13, (uint64_t)v6, &qword_26853F998, v3);
  swift_release();
  swift_beginAccess();
  sub_22D103748((uint64_t)v6, v7, &qword_26853F998, v3);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D106DBC()
{
  return sub_22D106DC8(&OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime);
}

uint64_t sub_22D106DC8(void *a1)
{
  swift_bridgeObjectRelease();
  sub_22D10135C(v1 + *a1, &qword_26853F998, MEMORY[0x263F502F0]);
  return swift_deallocClassInstance();
}

uint64_t PBBlobTouchResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D106EC0(a1, a2, a3, type metadata accessor for PBBlobTouchResult, (void (*)(void))type metadata accessor for PBBlobTouchResult._StorageClass, sub_22D106B9C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D106FB4);
}

uint64_t sub_22D106EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = *(int *)(a4(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(v7 + v13) = a6(v14);
    swift_release();
  }
  uint64_t v15 = swift_retain();
  a7(v15, a1, a2, a3);
  return swift_release();
}

uint64_t sub_22D106FB4()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        sub_22D10D3B0();
        uint64_t v4 = v3;
        sub_22D2BC0D0();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_22D2BC170();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    sub_22D2BBFB0();
    sub_22D108C74(&qword_26853FF78, MEMORY[0x263F502F0]);
    uint64_t v4 = v3;
    sub_22D2BC1A0();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBBlobTouchResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D0F9C60(a1, a2, a3, (void (*)(void))type metadata accessor for PBBlobTouchResult, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D107198);
}

uint64_t sub_22D107198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22D100F98(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v18 - v7;
  uint64_t v9 = sub_22D2BBFB0();
  v18[0] = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v13 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v20 = a3;
  if (!v13 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v3))
  {
    swift_beginAccess();
    if (!*(void *)(a1 + 32)
      || (char v15 = *(unsigned char *)(a1 + 40),
          v18[1] = *(void *)(a1 + 32),
          char v19 = v15,
          sub_22D10D3B0(),
          uint64_t result = sub_22D2BC240(),
          !v3))
    {
      uint64_t v16 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
      swift_beginAccess();
      sub_22D1012DC(v16, (uint64_t)v8, &qword_26853F998, MEMORY[0x263F502F0]);
      uint64_t v17 = v18[0];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18[0] + 48))(v8, 1, v9) == 1)
      {
        return sub_22D10135C((uint64_t)v8, &qword_26853F998, MEMORY[0x263F502F0]);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v11, v8, v9);
        sub_22D108C74(&qword_26853FF78, MEMORY[0x263F502F0]);
        sub_22D2BC2E0();
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v9);
      }
    }
  }
  return result;
}

uint64_t static PBBlobTouchResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBBlobTouchResult, (uint64_t (*)(uint64_t, uint64_t))sub_22D107514) & 1;
}

BOOL sub_22D107514(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D10D508(0, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v34 - v10;
  sub_22D100F98(0, &qword_26853F998, v7, MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  char v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v34 - v16;
  swift_beginAccess();
  uint64_t v18 = a1[2];
  uint64_t v19 = a1[3];
  swift_beginAccess();
  if (v18 == *(void *)(a2 + 16) && v19 == *(void *)(a2 + 24)
    || (v20 = sub_22D2BD660(), BOOL result = 0, (v20 & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v22 = a1[4];
    swift_beginAccess();
    uint64_t v23 = *(void *)(a2 + 32);
    if (*(unsigned char *)(a2 + 40) == 1)
    {
      switch(v23)
      {
        case 1:
          if (v22 != 1) {
            return 0;
          }
          goto LABEL_15;
        case 2:
          if (v22 != 2) {
            return 0;
          }
          goto LABEL_15;
        case 3:
          if (v22 == 3) {
            goto LABEL_15;
          }
          return 0;
        default:
          if (!v22) {
            goto LABEL_15;
          }
          return 0;
      }
    }
    if (v22 != v23) {
      return 0;
    }
LABEL_15:
    uint64_t v35 = v15;
    uint64_t v24 = (uint64_t)a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
    sub_22D1012DC(v24, (uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
    uint64_t v26 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    uint64_t v27 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_22D1012DC((uint64_t)v17, (uint64_t)v11, &qword_26853F998, v25);
    sub_22D1012DC(v26, v27, &qword_26853F998, v25);
    uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v28((uint64_t)v11, 1, v4) == 1)
    {
      sub_22D10135C((uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
      if (v28(v27, 1, v4) == 1)
      {
        sub_22D10135C((uint64_t)v11, &qword_26853F998, MEMORY[0x263F502F0]);
        return 1;
      }
    }
    else
    {
      uint64_t v29 = (uint64_t)v35;
      sub_22D1012DC((uint64_t)v11, (uint64_t)v35, &qword_26853F998, MEMORY[0x263F502F0]);
      if (v28(v27, 1, v4) != 1)
      {
        unsigned int v30 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v36, v27, v4);
        sub_22D108C74(&qword_26853FF70, MEMORY[0x263F502F0]);
        char v31 = sub_22D2BCB90();
        uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
        v32(v30, v4);
        uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
        sub_22D10135C((uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
        v32((char *)v29, v4);
        sub_22D10135C((uint64_t)v11, &qword_26853F998, v33);
        return (v31 & 1) != 0;
      }
      sub_22D10135C((uint64_t)v17, &qword_26853F998, MEMORY[0x263F502F0]);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    }
    sub_22D10D4AC((uint64_t)v11, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
    return 0;
  }
  return result;
}

uint64_t PBBlobTouchResult.hashValue.getter()
{
  return sub_22D107AE8((void (*)(void))type metadata accessor for PBBlobTouchResult, &qword_26853FAD8, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult);
}

uint64_t sub_22D107AE8(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_22D2BD760();
}

uint64_t sub_22D107B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CEA8, &qword_26853F950, a2);
}

unint64_t sub_22D107B94()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_22D107BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobTouchResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D107BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBBlobTouchResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D107BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D108C74(&qword_26853FEB0, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D107C5C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CEA0, (uint64_t)qword_26853F938, a1);
}

uint64_t sub_22D107C80(uint64_t a1)
{
  uint64_t v2 = sub_22D108C74(&qword_26853FAC8, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D107CEC()
{
  sub_22D108C74(&qword_26853FAC8, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult);
  return sub_22D2BC200();
}

uint64_t sub_22D107D68(uint64_t a1, uint64_t a2)
{
  return sub_22D108888(a1, a2, type metadata accessor for PBBlobTouchResult, (uint64_t (*)(uint64_t, uint64_t))sub_22D107514) & 1;
}

uint64_t sub_22D107DAC()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_26853F958);
  __swift_project_value_buffer(v0, (uint64_t)qword_26853F958);
  sub_22D100F98(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "OK";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "ID_NOT_FOUND";
  *(void *)(v11 + 8) = 12;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 2;
  *(void *)uint64_t v13 = "SERVER_ERROR";
  *((void *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  char v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 3;
  *(void *)char v15 = "INVALID_EXPIRATION_TIME";
  *((void *)v15 + 1) = 23;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBlobTouchResult.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CEB0, (uint64_t)qword_26853F958, a1);
}

uint64_t sub_22D108028@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CEB0, (uint64_t)qword_26853F958, a1);
}

uint64_t _s19HealthRecordsDaemon18PBPullBlobsRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - v9;
  if (sub_22D10F3F8(*(void **)a1, *(void **)a2))
  {
    BOOL v11 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
    if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v13 = type metadata accessor for PBPullBlobsRequest(0);
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v14(v10, a1 + *(int *)(v13 + 24), v4);
      v14(v8, a2 + *(int *)(v13 + 24), v4);
      sub_22D108C74(&qword_26853DB30, MEMORY[0x263F50560]);
      char v12 = sub_22D2BCB90();
      char v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v8, v4);
      v15(v10, v4);
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon18PBBlobDeleteResultV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    BOOL v13 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v13 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      if (*(unsigned char *)(a1 + 40) == 1) {
        uint64_t v14 = qword_22D2C7838[v14];
      }
      uint64_t v15 = *(void *)(a2 + 32);
      if (*(unsigned char *)(a2 + 40))
      {
        switch(v15)
        {
          case 1:
            if (v14 == 2) {
              goto LABEL_18;
            }
            goto LABEL_16;
          case 2:
            if (v14 == 3) {
              goto LABEL_18;
            }
            goto LABEL_16;
          case 3:
            if (v14 == 4) {
              goto LABEL_18;
            }
            goto LABEL_16;
          case 4:
            if (v14 == 5) {
              goto LABEL_18;
            }
            goto LABEL_16;
          default:
            if (v14) {
              goto LABEL_16;
            }
            goto LABEL_18;
        }
      }
      if (v14 == v15)
      {
LABEL_18:
        uint64_t v16 = type metadata accessor for PBBlobDeleteResult(0);
        uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v17(v10, a1 + *(int *)(v16 + 28), v4);
        v17(v8, a2 + *(int *)(v16 + 28), v4);
        sub_22D108C74(&qword_26853DB30, MEMORY[0x263F50560]);
        char v12 = sub_22D2BCB90();
        uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
        v18(v8, v4);
        v18(v10, v4);
      }
      else
      {
LABEL_16:
        char v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon15PBBlobAttributeV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    BOOL v13 = *((void *)a1 + 2) == *((void *)a2 + 2) && *((void *)a1 + 3) == *((void *)a2 + 3);
    if (v13 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      if (*((void *)a1 + 4) == *((void *)a2 + 4) && *((void *)a1 + 5) == *((void *)a2 + 5)
        || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
      {
        uint64_t v14 = type metadata accessor for PBBlobAttribute(0);
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v15(v10, &a1[*(int *)(v14 + 28)], v4);
        v15(v8, &a2[*(int *)(v14 + 28)], v4);
        sub_22D108C74(&qword_26853DB30, MEMORY[0x263F50560]);
        char v12 = sub_22D2BCB90();
        uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
        v16(v8, v4);
        v16(v10, v4);
      }
    }
  }
  return v12 & 1;
}

uint64_t sub_22D1086C0(char *a1, char *a2, uint64_t (*a3)(void, void), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - v13;
  if (a3(*(void *)a1, *(void *)a2))
  {
    uint64_t v15 = a4(0);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v16(v14, &a1[*(int *)(v15 + 20)], v8);
    v16(v12, &a2[*(int *)(v15 + 20)], v8);
    sub_22D108C74(&qword_26853DB30, MEMORY[0x263F50560]);
    char v17 = sub_22D2BCB90();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
    v18(v12, v8);
    v18(v14, v8);
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_22D108888(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = *(int *)(a3(0) + 20);
  uint64_t v16 = *(void *)(a1 + v15);
  uint64_t v17 = *(void *)(a2 + v15);
  if (v16 == v17
    || (swift_retain(), swift_retain(), char v18 = a4(v16, v17), swift_release(), swift_release(), (v18 & 1) != 0))
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v19(v14, a1, v8);
    v19(v12, a2, v8);
    sub_22D108C74(&qword_26853DB30, MEMORY[0x263F50560]);
    char v20 = sub_22D2BCB90();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v12, v8);
    v21(v14, v8);
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t _s19HealthRecordsDaemon10PBBlobAuthV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (sub_22D1126BC(*a1, *a2) & 1) != 0 && (sub_22D1158DC(a1[1], a1[2], a2[1], a2[2]))
  {
    if (a1[3] == a2[3] && a1[4] == a2[4] || (char v11 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v12 = type metadata accessor for PBBlobAuth(0);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v13(v10, (char *)a1 + *(int *)(v12 + 28), v4);
      v13(v8, (char *)a2 + *(int *)(v12 + 28), v4);
      sub_22D108C74(&qword_26853DB30, MEMORY[0x263F50560]);
      char v11 = sub_22D2BCB90();
      uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
      v14(v8, v4);
      v14(v10, v4);
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_22D108C74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22D108CBC()
{
  unint64_t result = qword_26853FA98;
  if (!qword_26853FA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FA98);
  }
  return result;
}

unint64_t sub_22D108D14()
{
  unint64_t result = qword_26853FAE0;
  if (!qword_26853FAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FAE0);
  }
  return result;
}

unint64_t sub_22D108D6C()
{
  unint64_t result = qword_26853FAE8;
  if (!qword_26853FAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FAE8);
  }
  return result;
}

unint64_t sub_22D108DC4()
{
  unint64_t result = qword_26853FAF0;
  if (!qword_26853FAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FAF0);
  }
  return result;
}

uint64_t sub_22D108E18()
{
  return sub_22D108E48(&qword_26853FAF8, &qword_26853FB00);
}

uint64_t sub_22D108E48(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D0254A4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22D108E9C()
{
  unint64_t result = qword_26853FB08;
  if (!qword_26853FB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FB08);
  }
  return result;
}

unint64_t sub_22D108EF4()
{
  unint64_t result = qword_26853FB10;
  if (!qword_26853FB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FB10);
  }
  return result;
}

unint64_t sub_22D108F4C()
{
  unint64_t result = qword_26853FB18;
  if (!qword_26853FB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FB18);
  }
  return result;
}

uint64_t sub_22D108FA0()
{
  return sub_22D108E48(&qword_26853FB20, &qword_26853FB28);
}

unint64_t sub_22D108FD4()
{
  unint64_t result = qword_26853FB30;
  if (!qword_26853FB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FB30);
  }
  return result;
}

unint64_t sub_22D10902C()
{
  unint64_t result = qword_26853FB38;
  if (!qword_26853FB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FB38);
  }
  return result;
}

unint64_t sub_22D109084()
{
  unint64_t result = qword_26853FB40;
  if (!qword_26853FB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FB40);
  }
  return result;
}

uint64_t sub_22D1090D8()
{
  return sub_22D108E48(&qword_26853FB48, &qword_26853FB50);
}

unint64_t sub_22D10910C()
{
  unint64_t result = qword_26853FB58;
  if (!qword_26853FB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FB58);
  }
  return result;
}

unint64_t sub_22D109164()
{
  unint64_t result = qword_26853FB60;
  if (!qword_26853FB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FB60);
  }
  return result;
}

unint64_t sub_22D1091BC()
{
  unint64_t result = qword_26853FB68;
  if (!qword_26853FB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FB68);
  }
  return result;
}

uint64_t sub_22D109210()
{
  return sub_22D108E48(&qword_26853FB70, &qword_26853FB78);
}

uint64_t sub_22D109240()
{
  return sub_22D108C74(&qword_26853FB80, (void (*)(uint64_t))type metadata accessor for PBPushBlobsRequest);
}

uint64_t sub_22D109288()
{
  return sub_22D108C74(&qword_26853FB88, (void (*)(uint64_t))type metadata accessor for PBPushBlobsRequest);
}

uint64_t sub_22D1092D0()
{
  return sub_22D108C74(&qword_26853FA00, (void (*)(uint64_t))type metadata accessor for PBPushBlobsRequest);
}

uint64_t sub_22D109318()
{
  return sub_22D108C74(&qword_26853FB90, (void (*)(uint64_t))type metadata accessor for PBPushBlobsRequest);
}

uint64_t sub_22D109360()
{
  return sub_22D108C74(&qword_26853FB98, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
}

uint64_t sub_22D1093A8()
{
  return sub_22D108C74(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
}

uint64_t sub_22D1093F0()
{
  return sub_22D108C74(&qword_26853FA08, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
}

uint64_t sub_22D109438()
{
  return sub_22D108C74(&qword_26853FBA8, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
}

uint64_t sub_22D109480()
{
  return sub_22D108C74(&qword_26853FBB0, (void (*)(uint64_t))type metadata accessor for PBBlobs);
}

uint64_t sub_22D1094C8()
{
  return sub_22D108C74(&qword_26853EB40, (void (*)(uint64_t))type metadata accessor for PBBlobs);
}

uint64_t sub_22D109510()
{
  return sub_22D108C74(&qword_26853FA18, (void (*)(uint64_t))type metadata accessor for PBBlobs);
}

uint64_t sub_22D109558()
{
  return sub_22D108C74(&qword_26853FBB8, (void (*)(uint64_t))type metadata accessor for PBBlobs);
}

uint64_t sub_22D1095A0()
{
  return sub_22D108C74(&qword_26853FBC0, (void (*)(uint64_t))type metadata accessor for PBBlob);
}

uint64_t sub_22D1095E8()
{
  return sub_22D108C74(&qword_26853FA10, (void (*)(uint64_t))type metadata accessor for PBBlob);
}

uint64_t sub_22D109630()
{
  return sub_22D108C74(&qword_26853FA20, (void (*)(uint64_t))type metadata accessor for PBBlob);
}

uint64_t sub_22D109678()
{
  return sub_22D108C74(&qword_26853FBC8, (void (*)(uint64_t))type metadata accessor for PBBlob);
}

uint64_t sub_22D1096C0()
{
  return sub_22D108C74(&qword_26853FBD0, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute);
}

uint64_t sub_22D109708()
{
  return sub_22D108C74(&qword_26853FBD8, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute);
}

uint64_t sub_22D109750()
{
  return sub_22D108C74(&qword_26853FA28, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute);
}

uint64_t sub_22D109798()
{
  return sub_22D108C74(&qword_26853FBE0, (void (*)(uint64_t))type metadata accessor for PBBlobAttribute);
}

uint64_t sub_22D1097E0()
{
  return sub_22D108C74(&qword_26853FBE8, (void (*)(uint64_t))type metadata accessor for PBPushBlobsResponse);
}

uint64_t sub_22D109828()
{
  return sub_22D108C74(&qword_26853E998, (void (*)(uint64_t))type metadata accessor for PBPushBlobsResponse);
}

uint64_t sub_22D109870()
{
  return sub_22D108C74(&qword_26853FA38, (void (*)(uint64_t))type metadata accessor for PBPushBlobsResponse);
}

uint64_t sub_22D1098B8()
{
  return sub_22D108C74(&qword_26853FBF0, (void (*)(uint64_t))type metadata accessor for PBPushBlobsResponse);
}

uint64_t sub_22D109900()
{
  return sub_22D108C74(&qword_26853FBF8, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult);
}

uint64_t sub_22D109948()
{
  return sub_22D108C74(&qword_26853FA30, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult);
}

uint64_t sub_22D109990()
{
  return sub_22D108C74(&qword_26853FA40, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult);
}

uint64_t sub_22D1099D8()
{
  return sub_22D108C74(&qword_26853FC00, (void (*)(uint64_t))type metadata accessor for PBBlobPushResult);
}

uint64_t sub_22D109A20()
{
  return sub_22D108C74(&qword_26853FC08, (void (*)(uint64_t))type metadata accessor for PBPullBlobsRequest);
}

uint64_t sub_22D109A68()
{
  return sub_22D108C74(&qword_26853FC10, (void (*)(uint64_t))type metadata accessor for PBPullBlobsRequest);
}

uint64_t sub_22D109AB0()
{
  return sub_22D108C74(&qword_26853FA48, (void (*)(uint64_t))type metadata accessor for PBPullBlobsRequest);
}

uint64_t sub_22D109AF8()
{
  return sub_22D108C74(&qword_26853FC18, (void (*)(uint64_t))type metadata accessor for PBPullBlobsRequest);
}

uint64_t sub_22D109B40()
{
  return sub_22D108C74(&qword_26853FC20, (void (*)(uint64_t))type metadata accessor for PBPullBlobsResponse);
}

uint64_t sub_22D109B88()
{
  return sub_22D108C74(&qword_26853FC28, (void (*)(uint64_t))type metadata accessor for PBPullBlobsResponse);
}

uint64_t sub_22D109BD0()
{
  return sub_22D108C74(&qword_26853FA58, (void (*)(uint64_t))type metadata accessor for PBPullBlobsResponse);
}

uint64_t sub_22D109C18()
{
  return sub_22D108C74(&qword_26853FC30, (void (*)(uint64_t))type metadata accessor for PBPullBlobsResponse);
}

uint64_t sub_22D109C60()
{
  return sub_22D108C74(&qword_26853FC38, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult);
}

uint64_t sub_22D109CA8()
{
  return sub_22D108C74(&qword_26853FA50, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult);
}

uint64_t sub_22D109CF0()
{
  return sub_22D108C74(&qword_26853FA60, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult);
}

uint64_t sub_22D109D38()
{
  return sub_22D108C74(&qword_26853FC40, (void (*)(uint64_t))type metadata accessor for PBBlobPullResult);
}

uint64_t sub_22D109D80()
{
  return sub_22D108C74(&qword_26853FC48, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsRequest);
}

uint64_t sub_22D109DC8()
{
  return sub_22D108C74(&qword_26853FC50, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsRequest);
}

uint64_t sub_22D109E10()
{
  return sub_22D108C74(&qword_26853FA68, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsRequest);
}

uint64_t sub_22D109E58()
{
  return sub_22D108C74(&qword_26853FC58, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsRequest);
}

uint64_t sub_22D109EA0()
{
  return sub_22D108C74(&qword_26853FC60, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
}

uint64_t sub_22D109EE8()
{
  return sub_22D108C74(&qword_26853E7B8, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
}

uint64_t sub_22D109F30()
{
  return sub_22D108C74(&qword_26853FA78, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
}

uint64_t sub_22D109F78()
{
  return sub_22D108C74(&qword_26853FC68, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
}

uint64_t sub_22D109FC0()
{
  return sub_22D108C74(&qword_26853FC70, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob);
}

uint64_t sub_22D10A008()
{
  return sub_22D108C74(&qword_26853FA70, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob);
}

uint64_t sub_22D10A050()
{
  return sub_22D108C74(&qword_26853FA80, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob);
}

uint64_t sub_22D10A098()
{
  return sub_22D108C74(&qword_26853FC78, (void (*)(uint64_t))type metadata accessor for PBDeleteBlob);
}

uint64_t sub_22D10A0E0()
{
  return sub_22D108C74(&qword_26853FC80, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsResponse);
}

uint64_t sub_22D10A128()
{
  return sub_22D108C74(&qword_26853FC88, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsResponse);
}

uint64_t sub_22D10A170()
{
  return sub_22D108C74(&qword_26853FA90, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsResponse);
}

uint64_t sub_22D10A1B8()
{
  return sub_22D108C74(&qword_26853FC90, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsResponse);
}

uint64_t sub_22D10A200()
{
  return sub_22D108C74(&qword_26853FC98, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult);
}

uint64_t sub_22D10A248()
{
  return sub_22D108C74(&qword_26853FA88, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult);
}

uint64_t sub_22D10A290()
{
  return sub_22D108C74(&qword_26853FAA0, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult);
}

uint64_t sub_22D10A2D8()
{
  return sub_22D108C74(&qword_26853FCA0, (void (*)(uint64_t))type metadata accessor for PBBlobDeleteResult);
}

uint64_t sub_22D10A320()
{
  return sub_22D108C74(&qword_26853FCA8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsRequest);
}

uint64_t sub_22D10A368()
{
  return sub_22D108C74(&qword_26853FCB0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsRequest);
}

uint64_t sub_22D10A3B0()
{
  return sub_22D108C74(&qword_26853FAA8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsRequest);
}

uint64_t sub_22D10A3F8()
{
  return sub_22D108C74(&qword_26853FCB8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsRequest);
}

uint64_t sub_22D10A440()
{
  return sub_22D108C74(&qword_26853FCC0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
}

uint64_t sub_22D10A488()
{
  return sub_22D108C74(&qword_26853FCC8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
}

uint64_t sub_22D10A4D0()
{
  return sub_22D108C74(&qword_26853FAB8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
}

uint64_t sub_22D10A518()
{
  return sub_22D108C74(&qword_26853FCD0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobs);
}

uint64_t sub_22D10A560()
{
  return sub_22D108C74(&qword_26853FCD8, (void (*)(uint64_t))type metadata accessor for PBTouchBlob);
}

uint64_t sub_22D10A5A8()
{
  return sub_22D108C74(&qword_26853FAB0, (void (*)(uint64_t))type metadata accessor for PBTouchBlob);
}

uint64_t sub_22D10A5F0()
{
  return sub_22D108C74(&qword_26853FAC0, (void (*)(uint64_t))type metadata accessor for PBTouchBlob);
}

uint64_t sub_22D10A638()
{
  return sub_22D108C74(&qword_26853FCE0, (void (*)(uint64_t))type metadata accessor for PBTouchBlob);
}

uint64_t sub_22D10A680()
{
  return sub_22D108C74(&qword_26853FCE8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsResponse);
}

uint64_t sub_22D10A6C8()
{
  return sub_22D108C74(&qword_26853FCF0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsResponse);
}

uint64_t sub_22D10A710()
{
  return sub_22D108C74(&qword_26853FAD0, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsResponse);
}

uint64_t sub_22D10A758()
{
  return sub_22D108C74(&qword_26853FCF8, (void (*)(uint64_t))type metadata accessor for PBTouchBlobsResponse);
}

uint64_t sub_22D10A7A0()
{
  return sub_22D108C74(&qword_26853FD00, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult);
}

uint64_t sub_22D10A7E8()
{
  return sub_22D108C74(&qword_26853FAC8, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult);
}

uint64_t sub_22D10A830()
{
  return sub_22D108C74(&qword_26853FAD8, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult);
}

uint64_t sub_22D10A878()
{
  return sub_22D108C74(&qword_26853FD08, (void (*)(uint64_t))type metadata accessor for PBBlobTouchResult);
}

uint64_t sub_22D10A8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EC300(a1, a2, a3, a4, type metadata accessor for PBBlobs, type metadata accessor for PBBlobs, (uint64_t (*)(char *))PBPushBlobsRequest.blobs.setter);
}

uint64_t sub_22D10A918@<X0>(void *a1@<X8>)
{
  return PBPushBlobsRequest.blobAuth.getter(a1);
}

uint64_t sub_22D10A93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EC300(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBPushBlobsRequest.blobAuth.setter);
}

uint64_t sub_22D10A990@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D0EE100(a1, type metadata accessor for PBBlob, a2);
}

uint64_t sub_22D10A9BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0F5C90(a1, a2, a3, a4, type metadata accessor for PBBlob, (void (*)(void))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D0F9658);
}

uint64_t sub_22D10AA10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0F3200(a1, type metadata accessor for PBBlob, a2);
}

uint64_t sub_22D10AA3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0F3260(a1, a2, a3, a4, type metadata accessor for PBBlob, (void (*)(void))type metadata accessor for PBBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D0F9658);
}

uint64_t sub_22D10AA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0EEF80(a1, type metadata accessor for PBBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a2);
}

uint64_t sub_22D10AACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EF134(a1, a2, a3, a4, (uint64_t (*)(char *))PBBlob.expirationTime.setter);
}

uint64_t sub_22D10AAF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D0EE100(a1, type metadata accessor for PBBlobPushResult, a2);
}

uint64_t sub_22D10AB28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D0F04F4(a1, type metadata accessor for PBBlobPushResult, a2);
}

uint64_t sub_22D10AB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_20Tm(a1, type metadata accessor for PBBlobPushResult, a2);
}

uint64_t sub_22D10AB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0EEF80(a1, type metadata accessor for PBBlobPushResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBBlobPushResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a2);
}

uint64_t sub_22D10ABA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EF134(a1, a2, a3, a4, (uint64_t (*)(char *))PBBlobPushResult.expirationTime.setter);
}

uint64_t sub_22D10ABD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D0EE100(a1, type metadata accessor for PBBlobPullResult, a2);
}

uint64_t sub_22D10AC04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D0F04F4(a1, type metadata accessor for PBBlobPullResult, a2);
}

uint64_t sub_22D10AC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_20Tm(a1, type metadata accessor for PBBlobPullResult, a2);
}

uint64_t keypath_get_20Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  uint64_t result = swift_beginAccess();
  char v6 = *(unsigned char *)(v4 + 56);
  *(void *)a3 = *(void *)(v4 + 48);
  *(unsigned char *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_22D10ACB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EC300(a1, a2, a3, a4, type metadata accessor for PBBlob, type metadata accessor for PBBlob, (uint64_t (*)(char *))PBBlobPullResult.blob.setter);
}

uint64_t sub_22D10AD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EC300(a1, a2, a3, a4, type metadata accessor for PBDeleteBlobs, type metadata accessor for PBDeleteBlobs, (uint64_t (*)(char *))PBDeleteBlobsRequest.deleteBlobs.setter);
}

uint64_t sub_22D10AD64@<X0>(void *a1@<X8>)
{
  return PBDeleteBlobsRequest.blobAuth.getter(a1);
}

uint64_t sub_22D10AD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EC300(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBDeleteBlobsRequest.blobAuth.setter);
}

uint64_t sub_22D10ADDC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D0EE100(a1, type metadata accessor for PBDeleteBlob, a2);
}

uint64_t sub_22D10AE08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0F5C90(a1, a2, a3, a4, type metadata accessor for PBDeleteBlob, (void (*)(void))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D100D3C);
}

uint64_t sub_22D10AE5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D0F3200(a1, type metadata accessor for PBDeleteBlob, a2);
}

uint64_t sub_22D10AE88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0F3260(a1, a2, a3, a4, type metadata accessor for PBDeleteBlob, (void (*)(void))type metadata accessor for PBDeleteBlob._StorageClass, (uint64_t (*)(uint64_t))sub_22D100D3C);
}

uint64_t sub_22D10AEDC@<X0>(uint64_t a1@<X8>)
{
  return PBDeleteBlob.revocationAuthorization.getter(a1);
}

uint64_t sub_22D10AF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EC300(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization, (uint64_t (*)(char *))PBDeleteBlob.revocationAuthorization.setter);
}

uint64_t sub_22D10AF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EC300(a1, a2, a3, a4, type metadata accessor for PBTouchBlobs, type metadata accessor for PBTouchBlobs, (uint64_t (*)(char *))PBTouchBlobsRequest.touchBlobs.setter);
}

uint64_t sub_22D10AFAC@<X0>(void *a1@<X8>)
{
  return PBTouchBlobsRequest.blobAuth.getter(a1);
}

uint64_t sub_22D10AFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EC300(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBTouchBlobsRequest.blobAuth.setter);
}

uint64_t sub_22D10B024@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D0EE100(a1, type metadata accessor for PBTouchBlob, a2);
}

uint64_t sub_22D10B050(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0F5C90(a1, a2, a3, a4, type metadata accessor for PBTouchBlob, (void (*)(void))type metadata accessor for PBTouchBlob._StorageClass, sub_22D1052E8);
}

uint64_t sub_22D10B0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0EEF80(a1, type metadata accessor for PBTouchBlob, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a2);
}

uint64_t sub_22D10B0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EF134(a1, a2, a3, a4, (uint64_t (*)(char *))PBTouchBlob.expirationTime.setter);
}

uint64_t sub_22D10B104@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D0EE100(a1, type metadata accessor for PBBlobTouchResult, a2);
}

uint64_t sub_22D10B130(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0F5C90(a1, a2, a3, a4, type metadata accessor for PBBlobTouchResult, (void (*)(void))type metadata accessor for PBBlobTouchResult._StorageClass, sub_22D106B9C);
}

uint64_t sub_22D10B184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBBlobTouchResult(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 40);
  *(void *)a2 = *(void *)(v3 + 32);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_22D10B1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D0EEF80(a1, type metadata accessor for PBBlobTouchResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBBlobTouchResultP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime, a2);
}

uint64_t sub_22D10B21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D0EF134(a1, a2, a3, a4, (uint64_t (*)(char *))PBBlobTouchResult.expirationTime.setter);
}

uint64_t getEnumTagSinglePayload for PBPushBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_0);
}

uint64_t storeEnumTagSinglePayload for PBPushBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_0);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBBlobAuth(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    unint64_t v9 = a2[2];
    swift_bridgeObjectRetain();
    sub_22CFF9B64(v8, v9);
    a1[1] = v8;
    a1[2] = v9;
    uint64_t v10 = a2[4];
    a1[3] = a2[3];
    a1[4] = v10;
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_22D2BBFF0();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for PBBlobAuth(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_22CFF5630(*(void *)(a1 + 8), *(void *)(a1 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_22D2BBFF0();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for PBBlobAuth(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  unint64_t v7 = a2[2];
  swift_bridgeObjectRetain();
  sub_22CFF9B64(v6, v7);
  a1[1] = v6;
  a1[2] = v7;
  uint64_t v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_22D2BBFF0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  return a1;
}

void *assignWithCopy for PBBlobAuth(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[1];
  unint64_t v7 = a2[2];
  sub_22CFF9B64(v6, v7);
  uint64_t v8 = a1[1];
  unint64_t v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_22CFF5630(v8, v9);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for PBBlobAuth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for PBBlobAuth(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_22CFF5630(v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  a1[3] = *(void *)(a2 + 24);
  a1[4] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_22D2BBFF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBBlobAuth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D10B6EC);
}

uint64_t sub_22D10B6EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBBlobAuth(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D10B7B0);
}

void *sub_22D10B7B0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D10B858()
{
  return sub_22D10CB34();
}

uint64_t getEnumTagSinglePayload for PBBlobs(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm);
}

uint64_t storeEnumTagSinglePayload for PBBlobs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm);
}

uint64_t getEnumTagSinglePayload for PBBlob(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_1);
}

uint64_t storeEnumTagSinglePayload for PBBlob(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_1);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBBlobAttribute(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_22D2BBFF0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for PBBlobAttribute(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for PBBlobAttribute(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_22D2BBFF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

void *assignWithCopy for PBBlobAttribute(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for PBBlobAttribute(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for PBBlobAttribute(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBBlobAttribute(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_66Tm);
}

uint64_t storeEnumTagSinglePayload for PBBlobAttribute(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_67Tm);
}

uint64_t sub_22D10BD88()
{
  return sub_22D10CB34();
}

uint64_t getEnumTagSinglePayload for PBPushBlobsResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_0);
}

uint64_t storeEnumTagSinglePayload for PBPushBlobsResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_0);
}

uint64_t getEnumTagSinglePayload for PBBlobPushResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_2);
}

uint64_t storeEnumTagSinglePayload for PBBlobPushResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_2);
}

ValueMetadata *type metadata accessor for PBBlobPushResult.ResultCode()
{
  return &type metadata for PBBlobPushResult.ResultCode;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBHistogramSeries(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22D2BBFF0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for PBHistogramSeries(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for PBHistogramSeries(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for PBHistogramSeries(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBPullBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for PBHistogramSeries(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPullBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D10C210);
}

uint64_t sub_22D10C210(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBPullBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D10C2D4);
}

void *sub_22D10C2D4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D10C37C()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBPullBlobsResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_1);
}

uint64_t storeEnumTagSinglePayload for PBPullBlobsResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_1);
}

uint64_t getEnumTagSinglePayload for PBBlobPullResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_3);
}

uint64_t storeEnumTagSinglePayload for PBBlobPullResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_3);
}

ValueMetadata *type metadata accessor for PBBlobPullResult.ResultCode()
{
  return &type metadata for PBBlobPullResult.ResultCode;
}

uint64_t getEnumTagSinglePayload for PBDeleteBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_4);
}

uint64_t storeEnumTagSinglePayload for PBDeleteBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_4);
}

uint64_t getEnumTagSinglePayload for PBDeleteBlobs(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_2);
}

uint64_t storeEnumTagSinglePayload for PBDeleteBlobs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_2);
}

uint64_t getEnumTagSinglePayload for PBDeleteBlob(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_5);
}

uint64_t storeEnumTagSinglePayload for PBDeleteBlob(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_5);
}

uint64_t getEnumTagSinglePayload for PBDeleteBlobsResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_3);
}

uint64_t storeEnumTagSinglePayload for PBDeleteBlobsResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_3);
}

void *initializeBufferWithCopyOfBuffer for PBDateRange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (uint64_t)a2 + v7;
    uint64_t v9 = a1 + v7;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v10 = sub_22D2BBFF0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v9, v8, v10);
  }
  return v3;
}

uint64_t destroy for PBDateRange(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v9 = sub_22D2BBFF0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v8, v7, v9);
  return a1;
}

uint64_t assignWithCopy for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBBlobDeleteResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D10C9A8);
}

uint64_t __swift_get_extra_inhabitant_index_66Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBBlobDeleteResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D10CA70);
}

uint64_t __swift_store_extra_inhabitant_index_67Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D10CB1C()
{
  return sub_22D10CB34();
}

uint64_t sub_22D10CB34()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PBBlobDeleteResult.ResultCode()
{
  return &type metadata for PBBlobDeleteResult.ResultCode;
}

uint64_t getEnumTagSinglePayload for PBTouchBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_6);
}

uint64_t storeEnumTagSinglePayload for PBTouchBlobsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_6);
}

uint64_t getEnumTagSinglePayload for PBTouchBlobs(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_4);
}

uint64_t storeEnumTagSinglePayload for PBTouchBlobs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_4);
}

uint64_t getEnumTagSinglePayload for PBTouchBlob(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_7);
}

uint64_t storeEnumTagSinglePayload for PBTouchBlob(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_7);
}

uint64_t getEnumTagSinglePayload for PBTouchBlobsResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D10CC7C);
}

uint64_t __swift_get_extra_inhabitant_index_60Tm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBTouchBlobsResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D10CD44);
}

void *__swift_store_extra_inhabitant_index_61Tm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D10CDF0()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBBlobTouchResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_8);
}

uint64_t storeEnumTagSinglePayload for PBBlobTouchResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_8);
}

ValueMetadata *type metadata accessor for PBBlobTouchResult.ResultCode()
{
  return &type metadata for PBBlobTouchResult.ResultCode;
}

uint64_t sub_22D10CECC()
{
  return type metadata accessor for PBPushBlobsRequest._StorageClass(0);
}

void sub_22D10CED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_22D10CEF4()
{
  return type metadata accessor for PBBlob._StorageClass(0);
}

void sub_22D10CEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_22D10CF30()
{
  return type metadata accessor for PBBlobPushResult._StorageClass(0);
}

void sub_22D10CF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_22D10CF68()
{
  return type metadata accessor for PBBlobPullResult._StorageClass(0);
}

void sub_22D10CF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_22D10CFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t (*a7)(uint64_t))
{
  sub_22D100F98(319, a6, a7, MEMORY[0x263F8D8F0]);
  if (v7 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D10D05C()
{
  return type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
}

void sub_22D10D064(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_22D10D084()
{
  return type metadata accessor for PBDeleteBlob._StorageClass(0);
}

void sub_22D10D08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_22D10D0B4()
{
  return type metadata accessor for PBTouchBlobsRequest._StorageClass(0);
}

void sub_22D10D0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_22D10D0DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  sub_22D100F98(319, a4, a5, MEMORY[0x263F8D8F0]);
  if (v5 <= 0x3F)
  {
    sub_22D100F98(319, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
    if (v6 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D10D1F4()
{
  return type metadata accessor for PBTouchBlob._StorageClass(0);
}

void sub_22D10D1FC()
{
  sub_22D100F98(319, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D10D2C8()
{
  return type metadata accessor for PBBlobTouchResult._StorageClass(0);
}

void sub_22D10D2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_22D10D2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  sub_22D100F98(319, a5, a6, MEMORY[0x263F8D8F0]);
  if (v6 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_22D10D3B0()
{
  unint64_t result = qword_26853FF50;
  if (!qword_26853FF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FF50);
  }
  return result;
}

unint64_t sub_22D10D404()
{
  unint64_t result = qword_26853FF58;
  if (!qword_26853FF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FF58);
  }
  return result;
}

unint64_t sub_22D10D458()
{
  unint64_t result = qword_26853FF60;
  if (!qword_26853FF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853FF60);
  }
  return result;
}

uint64_t sub_22D10D4AC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D10D508(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_22D10D508(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_22D100F98(255, a3, a4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_22D10D5F8(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C78]), sel_initWithHealthStore_, a1);
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = v6;
  v16[3] = &type metadata for ClinicalSharingAccountStore;
  v16[4] = &off_26E05DAE8;
  v16[0] = v6;
  *(void *)&long long v14 = a1;
  sub_22CFF4B00((uint64_t)v16, (uint64_t)v15 + 8);
  id v7 = objc_allocWithZone(MEMORY[0x263F0A220]);
  id v8 = a1;
  id v9 = v6;
  id v10 = v8;
  id v11 = a2;
  *(void *)&v15[0] = objc_msgSend(v7, sel_initWithHealthStore_, v10);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A620]), sel_initWithHealthStore_, v10);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  *((void *)&v14 + 1) = v12;
  *(_OWORD *)(a3 + 40) = v15[0];
  long long v13 = v15[2];
  *(_OWORD *)(a3 + 56) = v15[1];
  *(_OWORD *)(a3 + 72) = v13;
  *(_OWORD *)(a3 + 24) = v14;
}

uint64_t sub_22D10D730(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v5 = (uint64_t)objc_msgSend(a1, sel_BOOLValue);
  }
  else {
    uint64_t v5 = 2;
  }
  return a3(v5, a2);
}

uint64_t destroy for ClinicalSharingDefaultDaemonEnvironment(id *a1)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 6));
}

uint64_t initializeWithCopy for ClinicalSharingDefaultDaemonEnvironment(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  id v7 = *(void **)(a2 + 32);
  id v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v20 = a1 + 48;
  uint64_t v9 = a2 + 48;
  long long v10 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v10;
  uint64_t v11 = v10;
  id v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  id v13 = v3;
  id v14 = v4;
  id v15 = v5;
  id v16 = v6;
  id v17 = v7;
  id v18 = v8;
  v12(v20, v9, v11);
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingDefaultDaemonEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  long long v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  id v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 32);
  id v17 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v18 = v16;

  uint64_t v19 = *(void **)(a2 + 40);
  uint64_t v20 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v19;
  id v21 = v19;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingDefaultDaemonEnvironment(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  id v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  id v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  id v9 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  long long v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingRootNodeInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingRootNodeInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingDefaultDaemonEnvironment()
{
  return &type metadata for ClinicalSharingDefaultDaemonEnvironment;
}

id sub_22D10DBB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for URLSessionCertVerificationDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for URLSessionCertVerificationDelegate()
{
  return self;
}

void sub_22D10DC08(void *a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(a1, sel_protectionSpace);
  id v6 = objc_msgSend(v5, sel_serverTrust);

  if (v6)
  {
    if (HKAcceptAuthenticationChallengeWithTrust())
    {
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_22D2BC390();
      __swift_project_value_buffer(v7, (uint64_t)qword_26AEC3C90);
      id v8 = a2;
      id v9 = sub_22D2BC380();
      os_log_type_t v10 = sub_22D2BD050();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v40 = a3;
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        uint64_t v42 = v12;
        *(_DWORD *)uint64_t v11 = 136315138;
        id v13 = v8;
        id v14 = objc_msgSend(v13, sel_description);
        uint64_t v15 = sub_22D2BCBD0();
        unint64_t v17 = v16;

        uint64_t v18 = v15;
        a3 = v40;
        sub_22D0A4D24(v18, v17, &v42);
        sub_22D2BD220();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22CFEE000, v9, v10, "%s: SecTrustStore verification passed for root cert from FHIR API", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v12, -1, -1);
        MEMORY[0x230F7BDF0](v11, -1, -1);
      }
      else
      {
      }
      (*(void (**)(uint64_t, uint64_t, void))(a3 + 16))(a3, 1, 0);
    }
    else
    {
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_22D2BC390();
      __swift_project_value_buffer(v30, (uint64_t)qword_26AEC3C90);
      id v31 = a2;
      uint64_t v32 = sub_22D2BC380();
      os_log_type_t v33 = sub_22D2BD060();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v42 = v41;
        *(_DWORD *)uint64_t v34 = 136315138;
        id v35 = v31;
        id v36 = objc_msgSend(v35, sel_description);
        uint64_t v37 = sub_22D2BCBD0();
        unint64_t v39 = v38;

        sub_22D0A4D24(v37, v39, &v42);
        sub_22D2BD220();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22CFEE000, v32, v33, "%s: HKAcceptAuthenticationChallengeWithTrust doesn't trust the certificate, cancelling auth challenge", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v41, -1, -1);
        MEMORY[0x230F7BDF0](v34, -1, -1);
      }
      else
      {
      }
      (*(void (**)(uint64_t, uint64_t, void))(a3 + 16))(a3, 2, 0);
    }
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_22D2BC390();
    __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
    id v20 = a2;
    id v21 = sub_22D2BC380();
    os_log_type_t v22 = sub_22D2BD060();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v42 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      id v25 = v20;
      id v26 = objc_msgSend(v25, sel_description);
      uint64_t v27 = sub_22D2BCBD0();
      unint64_t v29 = v28;

      sub_22D0A4D24(v27, v29, &v42);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v21, v22, "%s: Could not retrieve serverTrust from FHIR API connection, cancelling auth challenge", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v24, -1, -1);
      MEMORY[0x230F7BDF0](v23, -1, -1);
    }
    else
    {
    }
    (*(void (**)(uint64_t, uint64_t, void))(a3 + 16))(a3, 2, 0);
  }
}

uint64_t destroy for ClinicalSharingRootNodeInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22CFF5630(*(void *)(a1 + 32), *(void *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ClinicalSharingRootNodeInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[4];
  unint64_t v7 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22CFF9B64(v6, v7);
  a1[4] = v6;
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClinicalSharingRootNodeInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  unint64_t v5 = a2[5];
  sub_22CFF9B64(v4, v5);
  uint64_t v6 = a1[4];
  unint64_t v7 = a1[5];
  a1[4] = v4;
  a1[5] = v5;
  sub_22CFF5630(v6, v7);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClinicalSharingRootNodeInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 32);
  unint64_t v6 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_22CFF5630(v5, v6);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingRootNodeInfo()
{
  return &type metadata for ClinicalSharingRootNodeInfo;
}

uint64_t sub_22D10E450(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  void v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_22D10E44C(v7, v9) & 1;
}

uint64_t sub_22D10E4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC90();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1168D4(0, &qword_26853FFC8, (void (*)(uint64_t))sub_22D078788);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  id v13 = (char *)&v35 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v44 = 0;
  uint64_t v40 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v37 = a1 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v38 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v39 = v43 + 16;
  uint64_t v41 = (void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v43 + 32);
  int64_t v36 = v38 - 1;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v44 << 6);
LABEL_8:
      uint64_t v20 = v40;
      (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v10, *(void *)(v40 + 48) + *(void *)(v43 + 72) * v19, v4);
      uint64_t v21 = *(void *)(*(void *)(v20 + 56) + 8 * v19);
      sub_22D078788();
      uint64_t v23 = v22;
      *(void *)&v10[*(int *)(v22 + 48)] = v21;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    int64_t v24 = v44 + 1;
    if (__OFADD__(v44, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v24 < v38)
    {
      unint64_t v25 = *(void *)(v37 + 8 * v24);
      if (v25) {
        goto LABEL_12;
      }
      int64_t v26 = v44 + 2;
      ++v44;
      if (v24 + 1 < v38)
      {
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (v25) {
          goto LABEL_15;
        }
        int64_t v44 = v24 + 1;
        if (v24 + 2 < v38)
        {
          unint64_t v25 = *(void *)(v37 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_12;
          }
          int64_t v26 = v24 + 3;
          int64_t v44 = v24 + 2;
          if (v24 + 3 < v38) {
            break;
          }
        }
      }
    }
LABEL_26:
    sub_22D078788();
    uint64_t v23 = v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 1, 1, v27);
    unint64_t v17 = 0;
LABEL_27:
    sub_22D116928((uint64_t)v10, (uint64_t)v13, &qword_26853FFC8, (void (*)(uint64_t))sub_22D078788);
    sub_22D078788();
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v13, 1, v23);
    BOOL v29 = v28 == 1;
    if (v28 == 1) {
      return v29;
    }
    uint64_t v30 = *(int *)(v23 + 48);
    (*v42)(v6, v13, v4);
    uint64_t v31 = *(void *)&v13[v30];
    sub_22D04EA20((uint64_t)v6);
    LOBYTE(v30) = v32;
    (*v41)(v6, v4);
    if ((v30 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v33 = swift_bridgeObjectRetain();
    char v34 = sub_22D1E2C20(v33, v31);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v34 & 1) == 0) {
      return v29;
    }
  }
  unint64_t v25 = *(void *)(v37 + 8 * v26);
  if (v25)
  {
LABEL_15:
    int64_t v24 = v26;
LABEL_12:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v19 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v44 = v24;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v38)
    {
      int64_t v44 = v36;
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_22D10E95C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v55 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v48 - v8;
  sub_22D1168D4(0, &qword_26853FFB0, (void (*)(uint64_t))sub_22D115C84);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  id v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v48 - v15;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v54 = a2;
  uint64_t v51 = a1;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v18 = a1 + 64;
  uint64_t v17 = v19;
  uint64_t v20 = 1 << *(unsigned char *)(v18 - 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  int64_t v56 = 0;
  uint64_t v57 = v5 + 16;
  id v52 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v53 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v49 = v18;
  int64_t v50 = (unint64_t)(v20 + 63) >> 6;
  int64_t v48 = v50 - 1;
  while (1)
  {
    if (v22)
    {
      unint64_t v23 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v24 = v23 | (v56 << 6);
      uint64_t v25 = v51;
LABEL_8:
      uint64_t v26 = *(void *)(v25 + 56);
      uint64_t v27 = *(void *)(v25 + 48) + 16 * v24;
      uint64_t v28 = *(void *)v27;
      LOBYTE(v27) = *(unsigned char *)(v27 + 8);
      *(void *)id v13 = v28;
      unsigned __int8 v13[8] = v27;
      uint64_t v29 = v26 + *(void *)(v5 + 72) * v24;
      sub_22D115C84();
      uint64_t v31 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(&v13[*(int *)(v30 + 48)], v29, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 0, 1, v31);
      goto LABEL_32;
    }
    int64_t v32 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v32 < v50)
    {
      unint64_t v33 = *(void *)(v49 + 8 * v32);
      if (v33) {
        goto LABEL_12;
      }
      int64_t v34 = v56 + 2;
      ++v56;
      if (v32 + 1 < v50)
      {
        unint64_t v33 = *(void *)(v49 + 8 * v34);
        if (v33) {
          goto LABEL_16;
        }
        int64_t v56 = v32 + 1;
        if (v32 + 2 < v50)
        {
          unint64_t v33 = *(void *)(v49 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_12;
          }
          int64_t v56 = v32 + 2;
          if (v32 + 3 < v50)
          {
            unint64_t v33 = *(void *)(v49 + 8 * (v32 + 3));
            if (v33)
            {
              v32 += 3;
LABEL_12:
              uint64_t v25 = v51;
LABEL_13:
              unint64_t v22 = (v33 - 1) & v33;
              unint64_t v24 = __clz(__rbit64(v33)) + (v32 << 6);
              int64_t v56 = v32;
              goto LABEL_8;
            }
            int64_t v34 = v32 + 4;
            int64_t v56 = v32 + 3;
            if (v32 + 4 < v50) {
              break;
            }
          }
        }
      }
    }
LABEL_31:
    sub_22D115C84();
    uint64_t v31 = v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v13, 1, 1, v35);
    unint64_t v22 = 0;
LABEL_32:
    sub_22D116928((uint64_t)v13, (uint64_t)v16, &qword_26853FFB0, (void (*)(uint64_t))sub_22D115C84);
    sub_22D115C84();
    int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v16, 1, v31);
    BOOL v37 = v36 == 1;
    if (v36 == 1) {
      return v37;
    }
    int64_t v38 = &v16[*(int *)(v31 + 48)];
    uint64_t v39 = *(void *)v16;
    char v40 = v16[8];
    (*v53)(v9, v38, v4);
    uint64_t v41 = v39;
    uint64_t v42 = v54;
    unint64_t v43 = sub_22D04EAF4(v41, v40);
    if ((v44 & 1) == 0)
    {
      (*v52)(v9, v4);
      return 0;
    }
    char v45 = v55;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v55, *(void *)(v42 + 56) + *(void *)(v5 + 72) * v43, v4);
    sub_22D116994(&qword_26853E3A0, MEMORY[0x263F07490]);
    char v46 = sub_22D2BCB90();
    uint64_t v47 = *(void (**)(char *, uint64_t))(v5 + 8);
    v47(v45, v4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v47)(v9, v4);
    if ((v46 & 1) == 0) {
      return v37;
    }
  }
  unint64_t v33 = *(void *)(v49 + 8 * v34);
  if (v33)
  {
LABEL_16:
    int64_t v32 = v34;
    goto LABEL_12;
  }
  uint64_t v25 = v51;
  while (1)
  {
    int64_t v32 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v32 >= v50)
    {
      int64_t v56 = v48;
      goto LABEL_31;
    }
    unint64_t v33 = *(void *)(v49 + 8 * v32);
    ++v34;
    if (v33) {
      goto LABEL_13;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22D10EEC8(uint64_t a1, uint64_t a2)
{
  return sub_22D10F5B0(a1, a2, type metadata accessor for PBBlob, type metadata accessor for PBBlob, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FA164, type metadata accessor for PBBlob);
}

uint64_t sub_22D10EF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBECGMeasurement(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v37 = 1;
      return v37 & 1;
    }
    uint64_t v12 = 0;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = a2 + v13;
    uint64_t v16 = *(void *)(v8 + 72);
    uint64_t v43 = v16;
    while (1)
    {
      uint64_t v17 = v16 * v12;
      uint64_t v18 = v14;
      sub_22D11661C(v14 + v16 * v12, (uint64_t)v10, type metadata accessor for PBECGMeasurement);
      uint64_t v19 = v15;
      sub_22D11661C(v15 + v17, (uint64_t)v7, type metadata accessor for PBECGMeasurement);
      BOOL v20 = *(void *)v10 == *(void *)v7 && *((void *)v10 + 1) == *((void *)v7 + 1);
      if (!v20 && (sub_22D2BD660() & 1) == 0
        || *((float *)v10 + 4) != *((float *)v7 + 4)
        || (*((void *)v10 + 3) != *((void *)v7 + 3) || *((void *)v10 + 4) != *((void *)v7 + 4))
        && (sub_22D2BD660() & 1) == 0)
      {
        break;
      }
      if ((*((void *)v10 + 5) != *((void *)v7 + 5) || *((void *)v10 + 6) != *((void *)v7 + 6))
        && (sub_22D2BD660() & 1) == 0)
      {
        break;
      }
      if ((*((void *)v10 + 7) != *((void *)v7 + 7) || *((void *)v10 + 8) != *((void *)v7 + 8))
        && (sub_22D2BD660() & 1) == 0)
      {
        break;
      }
      if ((*((void *)v10 + 9) != *((void *)v7 + 9) || *((void *)v10 + 10) != *((void *)v7 + 10))
        && (sub_22D2BD660() & 1) == 0)
      {
        break;
      }
      uint64_t v21 = (void *)*((void *)v10 + 11);
      unint64_t v22 = (void *)*((void *)v7 + 11);
      uint64_t v23 = v21[2];
      if (v23 != v22[2]) {
        break;
      }
      if (v23 && v21 != v22)
      {
        if ((v21[4] != v22[4] || v21[5] != v22[5]) && (sub_22D2BD660() & 1) == 0) {
          break;
        }
        uint64_t v24 = v23 - 1;
        if (v24)
        {
          int64_t v38 = v22 + 7;
          uint64_t v39 = v21 + 7;
          do
          {
            BOOL v40 = *(v39 - 1) == *(v38 - 1) && *v39 == *v38;
            if (!v40 && (sub_22D2BD660() & 1) == 0) {
              goto LABEL_73;
            }
            v38 += 2;
            v39 += 2;
          }
          while (--v24);
        }
      }
      uint64_t v25 = *((void *)v10 + 12);
      uint64_t v26 = *((void *)v7 + 12);
      uint64_t v27 = *(void *)(v25 + 16);
      if (v27 != *(void *)(v26 + 16)) {
        break;
      }
      if (v27) {
        BOOL v28 = v25 == v26;
      }
      else {
        BOOL v28 = 1;
      }
      if (!v28)
      {
        if (*(float *)(v25 + 32) != *(float *)(v26 + 32)) {
          break;
        }
        uint64_t v31 = (float *)(v25 + 36);
        int64_t v32 = (float *)(v26 + 36);
        uint64_t v33 = v27 - 1;
        while (v33)
        {
          float v34 = *v31++;
          float v35 = v34;
          float v36 = *v32++;
          --v33;
          if (v35 != v36) {
            goto LABEL_73;
          }
        }
      }
      if (*((float *)v10 + 26) != *((float *)v7 + 26)) {
        break;
      }
      uint64_t v29 = *((void *)v10 + 14);
      if (v10[120] == 1) {
        uint64_t v29 = qword_22D2C7948[v29];
      }
      uint64_t v30 = *((void *)v7 + 14);
      if (v7[120])
      {
        switch(v30)
        {
          case 1:
            if (v29 != 1) {
              goto LABEL_73;
            }
            goto LABEL_49;
          case 2:
            if (v29 != 2) {
              goto LABEL_73;
            }
            goto LABEL_49;
          case 3:
            if (v29 != 3) {
              goto LABEL_73;
            }
            goto LABEL_49;
          case 4:
            if (v29 != 4) {
              goto LABEL_73;
            }
            goto LABEL_49;
          case 5:
            if (v29 != 5) {
              goto LABEL_73;
            }
            goto LABEL_49;
          case 6:
            if (v29 != 6) {
              goto LABEL_73;
            }
            goto LABEL_49;
          case 7:
            if (v29 != 100) {
              goto LABEL_73;
            }
            goto LABEL_49;
          default:
            if (v29) {
              goto LABEL_73;
            }
            goto LABEL_49;
        }
      }
      if (v29 != v30) {
        break;
      }
LABEL_49:
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      char v37 = sub_22D2BCB90();
      sub_22D116874((uint64_t)v7, type metadata accessor for PBECGMeasurement);
      sub_22D116874((uint64_t)v10, type metadata accessor for PBECGMeasurement);
      if (v37)
      {
        ++v12;
        uint64_t v14 = v18;
        uint64_t v15 = v19;
        uint64_t v16 = v43;
        if (v12 != v11) {
          continue;
        }
      }
      return v37 & 1;
    }
LABEL_73:
    sub_22D116874((uint64_t)v7, type metadata accessor for PBECGMeasurement);
    sub_22D116874((uint64_t)v10, type metadata accessor for PBECGMeasurement);
  }
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_22D10F3F8(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_22D2BD660(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_22D2BD660() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_22D10F4C0(uint64_t a1, uint64_t a2)
{
  return sub_22D110398(a1, a2, MEMORY[0x263F07490], &qword_26853E3A0, MEMORY[0x263F07490], MEMORY[0x263F074B0]);
}

uint64_t sub_22D10F508(uint64_t a1, uint64_t a2)
{
  return sub_22D11310C(a1, a2, type metadata accessor for PBMedicationTrackingDoseEvent, type metadata accessor for PBMedicationTrackingDoseEvent, (uint64_t (*)(char *, char *))static PBMedicationTrackingDoseEvent.== infix(_:_:), type metadata accessor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_22D10F55C(uint64_t a1, uint64_t a2)
{
  return sub_22D10F5B0(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t (*)(uint64_t, uint64_t))sub_22D1B02E4, type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D10F5B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t), uint64_t (*a6)(void))
{
  uint64_t v24 = a5;
  uint64_t v25 = a3(0);
  uint64_t v10 = MEMORY[0x270FA5388](v25);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v26 = a2;
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == v26) {
      return 1;
    }
    unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v23 = *(void *)(v13 + 72);
    while (1)
    {
      sub_22D11661C(a1 + v17, (uint64_t)v15, a4);
      sub_22D11661C(v26 + v17, (uint64_t)v12, a4);
      uint64_t v18 = *(int *)(v25 + 20);
      uint64_t v19 = *(void *)&v15[v18];
      uint64_t v20 = *(void *)&v12[v18];
      if (v19 != v20)
      {
        swift_retain();
        swift_retain();
        char v21 = v24(v19, v20);
        swift_release();
        swift_release();
        if ((v21 & 1) == 0) {
          break;
        }
      }
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      if ((sub_22D2BCB90() & 1) == 0) {
        break;
      }
      sub_22D116874((uint64_t)v12, a6);
      sub_22D116874((uint64_t)v15, a6);
      v17 += v23;
      if (!--v16) {
        return 1;
      }
    }
    sub_22D116874((uint64_t)v12, a6);
    sub_22D116874((uint64_t)v15, a6);
  }
  return 0;
}

uint64_t sub_22D10F7F8(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    long long v3 = (unint64_t *)(a2 + 56);
    uint64_t v4 = (unint64_t *)(a1 + 56);
    while (1)
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      uint64_t v8 = *(v3 - 1);
      unint64_t v7 = *v3;
      BOOL v9 = *(v4 - 3) == *(v3 - 3) && *(v4 - 2) == *(v3 - 2);
      if (!v9 && (sub_22D2BD660() & 1) == 0) {
        return 0;
      }
      uint64_t v10 = 0;
      switch(v6 >> 62)
      {
        case 1uLL:
          LODWORD(v10) = HIDWORD(v5) - v5;
          if (__OFSUB__(HIDWORD(v5), v5))
          {
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
          }
          uint64_t v10 = (int)v10;
LABEL_17:
          unint64_t v14 = v7 >> 62;
          switch(v7 >> 62)
          {
            case 1uLL:
              LODWORD(v15) = HIDWORD(v8) - v8;
              if (__OFSUB__(HIDWORD(v8), v8)) {
                goto LABEL_126;
              }
              uint64_t v15 = (int)v15;
LABEL_22:
              if (v10 != v15) {
                return 0;
              }
              if (v10 < 1) {
                goto LABEL_6;
              }
              break;
            case 2uLL:
              uint64_t v17 = *(void *)(v8 + 16);
              uint64_t v16 = *(void *)(v8 + 24);
              BOOL v13 = __OFSUB__(v16, v17);
              uint64_t v15 = v16 - v17;
              if (!v13) {
                goto LABEL_22;
              }
              goto LABEL_127;
            case 3uLL:
              if (!v10) {
                goto LABEL_6;
              }
              return 0;
            default:
              uint64_t v15 = BYTE6(v7);
              goto LABEL_22;
          }
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v5 + 16);
          uint64_t v11 = *(void *)(v5 + 24);
          BOOL v13 = __OFSUB__(v11, v12);
          uint64_t v10 = v11 - v12;
          if (!v13) {
            goto LABEL_17;
          }
          goto LABEL_125;
        case 3uLL:
          goto LABEL_17;
        default:
          uint64_t v10 = BYTE6(v6);
          goto LABEL_17;
      }
      switch(v6 >> 62)
      {
        case 1uLL:
          if ((int)v5 > v5 >> 32) {
            goto LABEL_128;
          }
          swift_bridgeObjectRetain();
          sub_22CFF9B64(v5, v6);
          swift_bridgeObjectRetain();
          sub_22CFF9B64(v8, v7);
          unint64_t v77 = v6;
          sub_22CFF9B64(v5, v6);
          uint64_t v23 = sub_22D2BB7C0();
          if (v23)
          {
            uint64_t v24 = v23;
            uint64_t v25 = sub_22D2BB7F0();
            if (__OFSUB__((int)v5, v25)) {
              goto LABEL_130;
            }
            long long v75 = (void *)(v24 + (int)v5 - v25);
          }
          else
          {
            long long v75 = 0;
          }
          sub_22D2BB7E0();
          unint64_t v6 = v77;
          if (!v14)
          {
            __s1[0] = v8;
            LOWORD(__s1[1]) = v7;
            BYTE2(__s1[1]) = BYTE2(v7);
            BYTE3(__s1[1]) = BYTE3(v7);
            BYTE4(__s1[1]) = BYTE4(v7);
            BYTE5(__s1[1]) = BYTE5(v7);
            if (!v75) {
              goto LABEL_158;
            }
            int v39 = memcmp(v75, __s1, BYTE6(v7));
            goto LABEL_109;
          }
          if (v14 == 1)
          {
            if (v8 >> 32 < (int)v8) {
              goto LABEL_139;
            }
            swift_retain();
            BOOL v40 = (char *)sub_22D2BB7C0();
            if (v40)
            {
              uint64_t v41 = sub_22D2BB7F0();
              if (__OFSUB__((int)v8, v41)) {
                goto LABEL_146;
              }
              v40 += (int)v8 - v41;
            }
            unint64_t v6 = v77;
            uint64_t v42 = sub_22D2BB7E0();
            if (v42 >= (v8 >> 32) - (int)v8) {
              size_t v43 = (v8 >> 32) - (int)v8;
            }
            else {
              size_t v43 = v42;
            }
            if (!v75) {
              goto LABEL_151;
            }
            if (!v40) {
              goto LABEL_152;
            }
            int v39 = memcmp(v75, v40, v43);
            sub_22CFF5630(v8, v7);
LABEL_109:
            sub_22CFF5630(v5, v6);
            swift_bridgeObjectRelease();
LABEL_110:
            sub_22CFF5630(v8, v7);
            swift_bridgeObjectRelease();
            sub_22CFF5630(v5, v6);
            if (v39) {
              return 0;
            }
            goto LABEL_6;
          }
          uint64_t v65 = *(void *)(v8 + 16);
          uint64_t v64 = *(void *)(v8 + 24);
          swift_retain();
          swift_retain();
          long long v66 = (char *)sub_22D2BB7C0();
          if (v66)
          {
            uint64_t v67 = sub_22D2BB7F0();
            if (__OFSUB__(v65, v67)) {
              goto LABEL_145;
            }
            v66 += v65 - v67;
          }
          BOOL v13 = __OFSUB__(v64, v65);
          int64_t v68 = v64 - v65;
          if (v13) {
            goto LABEL_140;
          }
          uint64_t v69 = sub_22D2BB7E0();
          if (v69 >= v68) {
            size_t v70 = v68;
          }
          else {
            size_t v70 = v69;
          }
          if (!v75) {
            goto LABEL_159;
          }
          if (!v66) {
            goto LABEL_160;
          }
          int v71 = memcmp(v75, v66, v70);
          swift_release();
          swift_release();
          sub_22CFF5630(v5, v77);
          swift_bridgeObjectRelease();
          sub_22CFF5630(v8, v7);
          swift_bridgeObjectRelease();
          sub_22CFF5630(v5, v77);
          if (v71) {
            return 0;
          }
LABEL_6:
          v3 += 4;
          v4 += 4;
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v73 = *(void *)(v5 + 16);
          swift_bridgeObjectRetain();
          unint64_t v78 = v6;
          sub_22CFF9B64(v5, v6);
          swift_bridgeObjectRetain();
          sub_22CFF9B64(v8, v7);
          swift_retain();
          swift_retain();
          uint64_t v26 = sub_22D2BB7C0();
          uint64_t v74 = v5;
          if (v26)
          {
            uint64_t v27 = v26;
            uint64_t v28 = sub_22D2BB7F0();
            if (__OFSUB__(v73, v28)) {
              goto LABEL_129;
            }
            uint64_t v29 = (const void *)(v27 + v73 - v28);
          }
          else
          {
            uint64_t v29 = 0;
          }
          sub_22D2BB7E0();
          if (v14)
          {
            if (v14 == 1)
            {
              if (v8 >> 32 < (int)v8) {
                goto LABEL_133;
              }
              swift_retain();
              float v35 = (char *)sub_22D2BB7C0();
              if (v35)
              {
                uint64_t v36 = sub_22D2BB7F0();
                if (__OFSUB__((int)v8, v36)) {
                  goto LABEL_144;
                }
                v35 += (int)v8 - v36;
              }
              uint64_t v37 = sub_22D2BB7E0();
              if (v37 >= (v8 >> 32) - (int)v8) {
                size_t v38 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v38 = v37;
              }
              if (!v29) {
                goto LABEL_149;
              }
              if (!v35) {
                goto LABEL_150;
              }
              int v39 = memcmp(v29, v35, v38);
              sub_22CFF5630(v8, v7);
              swift_bridgeObjectRelease();
              swift_release();
              uint64_t v5 = v74;
              swift_release();
              goto LABEL_110;
            }
            uint64_t v56 = *(void *)(v8 + 16);
            uint64_t v57 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v58 = (char *)sub_22D2BB7C0();
            if (v58)
            {
              uint64_t v59 = sub_22D2BB7F0();
              if (__OFSUB__(v56, v59)) {
                goto LABEL_143;
              }
              v58 += v56 - v59;
            }
            BOOL v13 = __OFSUB__(v57, v56);
            int64_t v60 = v57 - v56;
            if (v13) {
              goto LABEL_138;
            }
            uint64_t v61 = sub_22D2BB7E0();
            if (v61 >= v60) {
              size_t v62 = v60;
            }
            else {
              size_t v62 = v61;
            }
            if (!v29) {
              goto LABEL_156;
            }
            if (!v58) {
              goto LABEL_157;
            }
            int v63 = memcmp(v29, v58, v62);
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            sub_22CFF5630(v8, v7);
            swift_bridgeObjectRelease();
            sub_22CFF5630(v74, v78);
            if (v63) {
              return 0;
            }
          }
          else
          {
            __s1[0] = v8;
            LODWORD(__s1[1]) = v7;
            WORD2(__s1[1]) = WORD2(v7);
            if (!v29) {
              goto LABEL_155;
            }
            int v55 = memcmp(v29, __s1, BYTE6(v7));
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            sub_22CFF5630(v8, v7);
            swift_bridgeObjectRelease();
            sub_22CFF5630(v74, v6);
            if (v55) {
              return 0;
            }
          }
          goto LABEL_6;
        case 3uLL:
          memset(__s1, 0, 14);
          if (!v14) {
            goto LABEL_49;
          }
          unint64_t v76 = v6;
          if (v14 == 1)
          {
            uint64_t v18 = (v8 >> 32) - (int)v8;
            if (v8 >> 32 < (int)v8) {
              goto LABEL_132;
            }
            swift_bridgeObjectRetain();
            sub_22CFF9B64(v5, v6);
            swift_bridgeObjectRetain();
            sub_22CFF9B64(v8, v7);
            sub_22CFF9B64(v8, v7);
            uint64_t v30 = sub_22D2BB7C0();
            if (!v30) {
              goto LABEL_148;
            }
            uint64_t v20 = v30;
            uint64_t v31 = sub_22D2BB7F0();
            uint64_t v22 = (int)v8 - v31;
            if (__OFSUB__((int)v8, v31)) {
              goto LABEL_137;
            }
LABEL_44:
            uint64_t v32 = sub_22D2BB7E0();
            if (v32 >= v18) {
              size_t v33 = v18;
            }
            else {
              size_t v33 = v32;
            }
            int v34 = memcmp(__s1, (const void *)(v20 + v22), v33);
            sub_22CFF5630(v8, v7);
            swift_bridgeObjectRelease();
            sub_22CFF5630(v8, v7);
            swift_bridgeObjectRelease();
            sub_22CFF5630(v5, v76);
            if (v34) {
              return 0;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(v8 + 16);
            uint64_t v51 = *(void *)(v8 + 24);
            swift_bridgeObjectRetain();
            sub_22CFF9B64(v5, v6);
            swift_bridgeObjectRetain();
            sub_22CFF9B64(v8, v7);
            swift_retain();
            swift_retain();
            char v46 = (char *)sub_22D2BB7C0();
            if (v46)
            {
              uint64_t v52 = sub_22D2BB7F0();
              if (__OFSUB__(v50, v52)) {
                goto LABEL_142;
              }
              v46 += v50 - v52;
            }
            BOOL v13 = __OFSUB__(v51, v50);
            int64_t v48 = v51 - v50;
            if (v13) {
              goto LABEL_135;
            }
            uint64_t v49 = sub_22D2BB7E0();
            if (!v46) {
              goto LABEL_154;
            }
LABEL_88:
            if (v49 >= v48) {
              size_t v53 = v48;
            }
            else {
              size_t v53 = v49;
            }
            int v54 = memcmp(__s1, v46, v53);
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            sub_22CFF5630(v8, v7);
            swift_bridgeObjectRelease();
            sub_22CFF5630(v5, v76);
            if (v54) {
              return 0;
            }
          }
          goto LABEL_6;
        default:
          __s1[0] = v5;
          LOWORD(__s1[1]) = v6;
          BYTE2(__s1[1]) = BYTE2(v6);
          BYTE3(__s1[1]) = BYTE3(v6);
          BYTE4(__s1[1]) = BYTE4(v6);
          BYTE5(__s1[1]) = BYTE5(v6);
          if (!v14)
          {
LABEL_49:
            uint64_t __s2 = v8;
            __int16 v80 = v7;
            char v81 = BYTE2(v7);
            char v82 = BYTE3(v7);
            char v83 = BYTE4(v7);
            char v84 = BYTE5(v7);
            if (memcmp(__s1, &__s2, BYTE6(v7))) {
              return 0;
            }
            goto LABEL_6;
          }
          unint64_t v76 = v6;
          if (v14 == 1)
          {
            uint64_t v18 = (v8 >> 32) - (int)v8;
            if (v8 >> 32 < (int)v8) {
              goto LABEL_131;
            }
            swift_bridgeObjectRetain();
            sub_22CFF9B64(v5, v6);
            swift_bridgeObjectRetain();
            sub_22CFF9B64(v8, v7);
            sub_22CFF9B64(v8, v7);
            uint64_t v19 = sub_22D2BB7C0();
            if (!v19)
            {
              sub_22D2BB7E0();
              __break(1u);
LABEL_148:
              sub_22D2BB7E0();
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
              JUMPOUT(0x22D110320);
            }
            uint64_t v20 = v19;
            uint64_t v21 = sub_22D2BB7F0();
            uint64_t v22 = (int)v8 - v21;
            if (__OFSUB__((int)v8, v21)) {
              goto LABEL_136;
            }
            goto LABEL_44;
          }
          uint64_t v44 = *(void *)(v8 + 16);
          uint64_t v45 = *(void *)(v8 + 24);
          swift_bridgeObjectRetain();
          sub_22CFF9B64(v5, v6);
          swift_bridgeObjectRetain();
          sub_22CFF9B64(v8, v7);
          swift_retain();
          swift_retain();
          char v46 = (char *)sub_22D2BB7C0();
          if (v46)
          {
            uint64_t v47 = sub_22D2BB7F0();
            if (__OFSUB__(v44, v47)) {
              goto LABEL_141;
            }
            v46 += v44 - v47;
          }
          BOOL v13 = __OFSUB__(v45, v44);
          int64_t v48 = v45 - v44;
          if (v13) {
            goto LABEL_134;
          }
          uint64_t v49 = sub_22D2BB7E0();
          if (!v46) {
            goto LABEL_153;
          }
          goto LABEL_88;
      }
    }
  }
  return 1;
}

uint64_t sub_22D110350(uint64_t a1, uint64_t a2)
{
  return sub_22D110398(a1, a2, MEMORY[0x263F062D0], &qword_26853E3A8, MEMORY[0x263F062D0], MEMORY[0x263F062F0]);
}

uint64_t sub_22D110398(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v10 = a3(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v24 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      uint64_t v18 = v12 + 16;
      int v34 = v19;
      float v35 = v13;
      uint64_t v30 = *(void *)(v18 + 56);
      uint64_t v31 = a2;
      uint64_t v36 = v18;
      uint64_t v32 = a1;
      size_t v33 = (void (**)(char *, uint64_t))(v18 - 8);
      uint64_t v20 = v16 - 1;
      do
      {
        uint64_t v21 = v34;
        v34(v15, a1 + v17, v10);
        uint64_t v22 = v15;
        uint64_t v23 = v35;
        v21(v35, a2 + v17, v10);
        sub_22D116994(a4, a5);
        char v24 = sub_22D2BCB90();
        uint64_t v25 = *v33;
        uint64_t v26 = v23;
        uint64_t v15 = v22;
        (*v33)(v26, v10);
        v25(v22, v10);
        BOOL v28 = v20-- != 0;
        if ((v24 & 1) == 0) {
          break;
        }
        v17 += v30;
        a2 = v31;
        a1 = v32;
      }
      while (v28);
    }
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_22D1105B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBMedicationTracking(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    while (1)
    {
      sub_22D11661C(a1 + v12, (uint64_t)v10, type metadata accessor for PBMedicationTracking);
      sub_22D11661C(a2 + v12, (uint64_t)v7, type metadata accessor for PBMedicationTracking);
      uint64_t v14 = *(int *)(v4 + 20);
      uint64_t v15 = *(void *)&v10[v14];
      uint64_t v16 = *(void **)&v7[v14];
      if ((void *)v15 != v16 && (sub_22D1AC174(v15, v16) & 1) == 0) {
        break;
      }
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      if ((sub_22D2BCB90() & 1) == 0) {
        break;
      }
      sub_22D116874((uint64_t)v7, type metadata accessor for PBMedicationTracking);
      sub_22D116874((uint64_t)v10, type metadata accessor for PBMedicationTracking);
      v12 += v13;
      if (!--v11) {
        return 1;
      }
    }
    sub_22D116874((uint64_t)v7, type metadata accessor for PBMedicationTracking);
    sub_22D116874((uint64_t)v10, type metadata accessor for PBMedicationTracking);
  }
  return 0;
}

uint64_t sub_22D1107D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBBlobDeleteResult(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = *(void *)(v8 + 72);
    while (1)
    {
      sub_22D11661C(a1 + v12, (uint64_t)v10, type metadata accessor for PBBlobDeleteResult);
      sub_22D11661C(a2 + v12, (uint64_t)v7, type metadata accessor for PBBlobDeleteResult);
      BOOL v13 = *(void *)v10 == *(void *)v7 && *((void *)v10 + 1) == *((void *)v7 + 1);
      if (!v13 && (sub_22D2BD660() & 1) == 0) {
        break;
      }
      BOOL v14 = *((void *)v10 + 2) == *((void *)v7 + 2) && *((void *)v10 + 3) == *((void *)v7 + 3);
      if (!v14 && (sub_22D2BD660() & 1) == 0) {
        break;
      }
      uint64_t v15 = *((void *)v10 + 4);
      if (v10[40] == 1) {
        uint64_t v15 = qword_22D2C7988[v15];
      }
      uint64_t v16 = *((void *)v7 + 4);
      if (v7[40])
      {
        switch(v16)
        {
          case 1:
            if (v15 != 2) {
              goto LABEL_32;
            }
            goto LABEL_22;
          case 2:
            if (v15 != 3) {
              goto LABEL_32;
            }
            goto LABEL_22;
          case 3:
            if (v15 != 4) {
              goto LABEL_32;
            }
            goto LABEL_22;
          case 4:
            if (v15 != 5) {
              goto LABEL_32;
            }
            goto LABEL_22;
          default:
            if (v15) {
              goto LABEL_32;
            }
            goto LABEL_22;
        }
      }
      if (v15 != v16) {
        break;
      }
LABEL_22:
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      if ((sub_22D2BCB90() & 1) == 0) {
        break;
      }
      sub_22D116874((uint64_t)v7, type metadata accessor for PBBlobDeleteResult);
      sub_22D116874((uint64_t)v10, type metadata accessor for PBBlobDeleteResult);
      v12 += v19;
      if (!--v11) {
        return 1;
      }
    }
LABEL_32:
    sub_22D116874((uint64_t)v7, type metadata accessor for PBBlobDeleteResult);
    sub_22D116874((uint64_t)v10, type metadata accessor for PBBlobDeleteResult);
    return 0;
  }
  return 1;
}

uint64_t sub_22D110AD8(uint64_t a1, uint64_t a2)
{
  return sub_22D10F5B0(a1, a2, type metadata accessor for PBBlobTouchResult, type metadata accessor for PBBlobTouchResult, (uint64_t (*)(uint64_t, uint64_t))sub_22D107514, type metadata accessor for PBBlobTouchResult);
}

uint64_t sub_22D110B2C(uint64_t a1, uint64_t a2)
{
  return sub_22D10F5B0(a1, a2, type metadata accessor for PBBlobPushResult, type metadata accessor for PBBlobPushResult, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FBEBC, type metadata accessor for PBBlobPushResult);
}

uint64_t sub_22D110B80(uint64_t a1, uint64_t a2)
{
  return sub_22D10F5B0(a1, a2, type metadata accessor for PBBlobPullResult, type metadata accessor for PBBlobPullResult, (uint64_t (*)(uint64_t, uint64_t))sub_22D0FE2D4, type metadata accessor for PBBlobPullResult);
}

uint64_t sub_22D110BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = type metadata accessor for PBBucket(0);
  uint64_t v4 = *(void *)(v44 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v44);
  unint64_t v7 = (double *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (double *)((char *)&v33 - v8);
  uint64_t v10 = type metadata accessor for PBHistogramSeries.Value(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  BOOL v13 = (uint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v17 = (uint64_t *)((char *)&v33 - v16);
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v18 || a1 == a2) {
    return 1;
  }
  uint64_t v38 = *(void *)(a1 + 16);
  uint64_t v39 = v14;
  uint64_t v34 = v4;
  uint64_t v19 = 0;
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(v15 + 72);
  uint64_t v42 = v13;
  size_t v43 = (uint64_t *)((char *)&v33 - v16);
  uint64_t v36 = a2 + v20;
  uint64_t v37 = a1 + v20;
  uint64_t v35 = v23;
  while (1)
  {
    uint64_t v40 = v19;
    uint64_t v24 = v23 * v19;
    sub_22D11661C(v21 + v24, (uint64_t)v17, type metadata accessor for PBHistogramSeries.Value);
    sub_22D11661C(v22 + v24, (uint64_t)v13, type metadata accessor for PBHistogramSeries.Value);
    BOOL v25 = *v17 == *v13 && v17[1] == v13[1];
    if (!v25 && (sub_22D2BD660() & 1) == 0
      || (v26 = v43[2], uint64_t v27 = v13[2], v28 = *(void *)(v26 + 16), v28 != *(void *)(v27 + 16)))
    {
LABEL_28:
      sub_22D116874((uint64_t)v13, type metadata accessor for PBHistogramSeries.Value);
      sub_22D116874((uint64_t)v43, type metadata accessor for PBHistogramSeries.Value);
      return 0;
    }
    if (v28 && v26 != v27) {
      break;
    }
LABEL_20:
    if ((v43[3] != v13[3] || v43[4] != v13[4]) && (sub_22D2BD660() & 1) == 0) {
      goto LABEL_28;
    }
    sub_22D2BBFF0();
    sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
    BOOL v13 = v42;
    if ((sub_22D2BCB90() & 1) == 0) {
      goto LABEL_28;
    }
    uint64_t v19 = v40 + 1;
    sub_22D116874((uint64_t)v13, type metadata accessor for PBHistogramSeries.Value);
    unint64_t v17 = v43;
    sub_22D116874((uint64_t)v43, type metadata accessor for PBHistogramSeries.Value);
    uint64_t result = 1;
    uint64_t v21 = v37;
    uint64_t v23 = v35;
    uint64_t v22 = v36;
    if (v19 == v38) {
      return result;
    }
  }
  unint64_t v29 = 0;
  unint64_t v30 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v41 = *(void *)(v34 + 72);
  while (1)
  {
    uint64_t result = sub_22D11661C(v26 + v30, (uint64_t)v9, type metadata accessor for PBBucket);
    if (v29 >= *(void *)(v27 + 16)) {
      break;
    }
    sub_22D11661C(v27 + v30, (uint64_t)v7, type metadata accessor for PBBucket);
    if (*v9 != *v7 || v9[1] != v7[1] || *((_DWORD *)v9 + 4) != *((_DWORD *)v7 + 4))
    {
      sub_22D116874((uint64_t)v7, type metadata accessor for PBBucket);
      sub_22D116874((uint64_t)v9, type metadata accessor for PBBucket);
      goto LABEL_28;
    }
    sub_22D2BBFF0();
    sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
    BOOL v13 = v42;
    char v32 = sub_22D2BCB90();
    sub_22D116874((uint64_t)v7, type metadata accessor for PBBucket);
    sub_22D116874((uint64_t)v9, type metadata accessor for PBBucket);
    if ((v32 & 1) == 0) {
      goto LABEL_28;
    }
    ++v29;
    v30 += v41;
    if (v28 == v29) {
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22D1110B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBBucket(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v7 = (double *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (double *)((char *)&v18 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_16:
    char v14 = 0;
    return v14 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_22D11661C(a1 + v12, (uint64_t)v10, type metadata accessor for PBBucket);
      sub_22D11661C(a2 + v12, (uint64_t)v7, type metadata accessor for PBBucket);
      if (*v10 != *v7 || v10[1] != v7[1] || *((_DWORD *)v10 + 4) != *((_DWORD *)v7 + 4)) {
        break;
      }
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      char v14 = sub_22D2BCB90();
      sub_22D116874((uint64_t)v7, type metadata accessor for PBBucket);
      sub_22D116874((uint64_t)v10, type metadata accessor for PBBucket);
      BOOL v16 = v13-- != 0;
      if (v14)
      {
        v12 += v19;
        if (v16) {
          continue;
        }
      }
      return v14 & 1;
    }
    sub_22D116874((uint64_t)v7, type metadata accessor for PBBucket);
    sub_22D116874((uint64_t)v10, type metadata accessor for PBBucket);
    goto LABEL_16;
  }
  char v14 = 1;
  return v14 & 1;
}

BOOL sub_22D111320(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  long long v3 = (float *)(a1 + 36);
  uint64_t v4 = (float *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    float v7 = *v3++;
    float v8 = v7;
    float v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_22D11138C(uint64_t a1, uint64_t a2)
{
  return sub_22D11245C(a1, a2, type metadata accessor for PBCycleTracking.Event, type metadata accessor for PBCycleTracking.Event, (uint64_t (*)(uint64_t, uint64_t))sub_22D1A1F1C, type metadata accessor for PBCycleTracking.Event);
}

uint64_t sub_22D1113E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBSleepSummary.Schedule(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  float v7 = (unsigned __int8 *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (unsigned __int8 *)&v18 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_22:
    char v14 = 0;
    return v14 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_22D11661C(a1 + v12, (uint64_t)v10, type metadata accessor for PBSleepSummary.Schedule);
      sub_22D11661C(a2 + v12, (uint64_t)v7, type metadata accessor for PBSleepSummary.Schedule);
      if (*v10 != *v7
        || v10[1] != v7[1]
        || v10[2] != v7[2]
        || v10[3] != v7[3]
        || v10[4] != v7[4]
        || v10[5] != v7[5]
        || v10[6] != v7[6]
        || *((_DWORD *)v10 + 2) != *((_DWORD *)v7 + 2)
        || *((_DWORD *)v10 + 3) != *((_DWORD *)v7 + 3))
      {
        break;
      }
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      char v14 = sub_22D2BCB90();
      sub_22D116874((uint64_t)v7, type metadata accessor for PBSleepSummary.Schedule);
      sub_22D116874((uint64_t)v10, type metadata accessor for PBSleepSummary.Schedule);
      BOOL v16 = v13-- != 0;
      if (v14)
      {
        v12 += v19;
        if (v16) {
          continue;
        }
      }
      return v14 & 1;
    }
    sub_22D116874((uint64_t)v7, type metadata accessor for PBSleepSummary.Schedule);
    sub_22D116874((uint64_t)v10, type metadata accessor for PBSleepSummary.Schedule);
    goto LABEL_22;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_22D1116A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBSleepSeries.Value(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  float v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = *(void *)(v8 + 72);
    while (1)
    {
      sub_22D11661C(a1 + v12, (uint64_t)v10, type metadata accessor for PBSleepSeries.Value);
      sub_22D11661C(a2 + v12, (uint64_t)v7, type metadata accessor for PBSleepSeries.Value);
      BOOL v13 = *(void *)v10 == *(void *)v7 && *((void *)v10 + 1) == *((void *)v7 + 1);
      if (!v13 && (sub_22D2BD660() & 1) == 0) {
        break;
      }
      if (*((_DWORD *)v10 + 4) != *((_DWORD *)v7 + 4)) {
        break;
      }
      if (*((_DWORD *)v10 + 5) != *((_DWORD *)v7 + 5)) {
        break;
      }
      if (*((_DWORD *)v10 + 6) != *((_DWORD *)v7 + 6)) {
        break;
      }
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      if ((sub_22D2BCB90() & 1) == 0) {
        break;
      }
      sub_22D116874((uint64_t)v7, type metadata accessor for PBSleepSeries.Value);
      sub_22D116874((uint64_t)v10, type metadata accessor for PBSleepSeries.Value);
      v12 += v16;
      if (!--v11) {
        return 1;
      }
    }
    sub_22D116874((uint64_t)v7, type metadata accessor for PBSleepSeries.Value);
    sub_22D116874((uint64_t)v10, type metadata accessor for PBSleepSeries.Value);
  }
  return 0;
}

uint64_t sub_22D11191C(uint64_t a1, uint64_t a2)
{
  return sub_22D10F5B0(a1, a2, type metadata accessor for PBDeleteBlob, type metadata accessor for PBDeleteBlob, (uint64_t (*)(uint64_t, uint64_t))sub_22D101AF4, type metadata accessor for PBDeleteBlob);
}

uint64_t sub_22D111970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFB0();
  uint64_t v54 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v7 = (void (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D1167B4(0, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v47 - v9;
  sub_22D1168D4(0, &qword_26853F998, v7);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  char v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = type metadata accessor for PBTouchBlob(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v24 = (char *)&v47 - v23;
  uint64_t v25 = *(void *)(a1 + 16);
  if (v25 != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v59 = v16;
  uint64_t v60 = v21;
  uint64_t v51 = v14;
  if (!v25 || a1 == a2) {
    return 1;
  }
  uint64_t v57 = v10;
  unint64_t v26 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  size_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  int64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v54 + 32);
  uint64_t v55 = *(void *)(v22 + 72);
  uint64_t v50 = (void (**)(uint64_t, uint64_t))(v54 + 8);
  uint64_t v52 = a2;
  uint64_t v56 = a1;
  uint64_t v49 = v6;
  size_t v62 = (char *)&v47 - v23;
  int v63 = v20;
  uint64_t v61 = v4;
  while (1)
  {
    sub_22D11661C(a1 + v26, (uint64_t)v24, type metadata accessor for PBTouchBlob);
    sub_22D11661C(a2 + v26, (uint64_t)v20, type metadata accessor for PBTouchBlob);
    uint64_t v27 = *(int *)(v60 + 20);
    uint64_t v28 = *(void *)&v24[v27];
    uint64_t v29 = *(void *)&v20[v27];
    if (v28 == v29) {
      goto LABEL_17;
    }
    swift_beginAccess();
    uint64_t v30 = *(void *)(v28 + 16);
    uint64_t v31 = *(void *)(v28 + 24);
    swift_beginAccess();
    BOOL v32 = v30 == *(void *)(v29 + 16) && v31 == *(void *)(v29 + 24);
    if (!v32 && (sub_22D2BD660() & 1) == 0) {
      goto LABEL_23;
    }
    uint64_t v33 = v28
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    uint64_t v34 = (void (*)(uint64_t))MEMORY[0x263F502F0];
    uint64_t v35 = (uint64_t)v59;
    sub_22D116684(v33, (uint64_t)v59, &qword_26853F998, MEMORY[0x263F502F0]);
    uint64_t v36 = v29
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTouchBlobP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__expirationTime;
    swift_beginAccess();
    uint64_t v37 = (uint64_t)v57;
    uint64_t v38 = (uint64_t)&v57[*(int *)(v58 + 48)];
    sub_22D116684(v35, (uint64_t)v57, &qword_26853F998, v34);
    uint64_t v39 = v36;
    uint64_t v40 = v61;
    sub_22D116684(v39, v38, &qword_26853F998, v34);
    uint64_t v41 = *v53;
    if ((*v53)(v37, 1, v40) == 1)
    {
      swift_retain();
      swift_retain();
      sub_22D1166F0(v35, &qword_26853F998, MEMORY[0x263F502F0]);
      if (v41(v38, 1, v40) != 1) {
        goto LABEL_21;
      }
      sub_22D1166F0((uint64_t)v57, &qword_26853F998, MEMORY[0x263F502F0]);
      goto LABEL_16;
    }
    uint64_t v42 = (uint64_t)v51;
    sub_22D116684(v37, (uint64_t)v51, &qword_26853F998, MEMORY[0x263F502F0]);
    if (v41(v38, 1, v40) == 1) {
      break;
    }
    size_t v43 = v49;
    (*v48)(v49, v38, v40);
    sub_22D116994(&qword_26853FF70, MEMORY[0x263F502F0]);
    swift_retain();
    swift_retain();
    LODWORD(v54) = sub_22D2BCB90();
    uint64_t v44 = *v50;
    (*v50)((uint64_t)v43, v61);
    uint64_t v45 = (void (*)(uint64_t))MEMORY[0x263F502F0];
    sub_22D1166F0((uint64_t)v59, &qword_26853F998, MEMORY[0x263F502F0]);
    v44(v42, v61);
    sub_22D1166F0(v37, &qword_26853F998, v45);
    if ((v54 & 1) == 0) {
      goto LABEL_22;
    }
LABEL_16:
    swift_release();
    swift_release();
    a2 = v52;
LABEL_17:
    sub_22D2BBFF0();
    sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
    if ((sub_22D2BCB90() & 1) == 0) {
      goto LABEL_23;
    }
    unint64_t v20 = v63;
    sub_22D116874((uint64_t)v63, type metadata accessor for PBTouchBlob);
    uint64_t v24 = v62;
    sub_22D116874((uint64_t)v62, type metadata accessor for PBTouchBlob);
    a1 = v56;
    v26 += v55;
    if (!--v25) {
      return 1;
    }
  }
  swift_retain();
  swift_retain();
  sub_22D1166F0((uint64_t)v59, &qword_26853F998, MEMORY[0x263F502F0]);
  (*v50)(v42, v40);
LABEL_21:
  sub_22D116818((uint64_t)v57, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
LABEL_22:
  swift_release();
  swift_release();
LABEL_23:
  sub_22D116874((uint64_t)v63, type metadata accessor for PBTouchBlob);
  sub_22D116874((uint64_t)v62, type metadata accessor for PBTouchBlob);
  return 0;
}

uint64_t sub_22D1120FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBDataTypeShared(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  float v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v21 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v17 = 1;
      return v17 & 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v22 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_22D11661C(a1 + v12, (uint64_t)v10, type metadata accessor for PBDataTypeShared);
      sub_22D11661C(a2 + v12, (uint64_t)v7, type metadata accessor for PBDataTypeShared);
      BOOL v14 = *v10 == *(void *)v7 && v10[1] == *((void *)v7 + 1);
      if (!v14 && (sub_22D2BD660() & 1) == 0) {
        break;
      }
      uint64_t v15 = v10[2];
      uint64_t v16 = *((void *)v7 + 2);
      if (v7[24] == 1)
      {
        switch(v16)
        {
          case 1:
            if (v15 != 1) {
              goto LABEL_34;
            }
            goto LABEL_15;
          case 2:
            if (v15 != 2) {
              goto LABEL_34;
            }
            goto LABEL_15;
          case 3:
            if (v15 != 3) {
              goto LABEL_34;
            }
            goto LABEL_15;
          case 4:
            if (v15 != 4) {
              goto LABEL_34;
            }
            goto LABEL_15;
          case 5:
            if (v15 != 5) {
              goto LABEL_34;
            }
            goto LABEL_15;
          case 6:
            if (v15 != 6) {
              goto LABEL_34;
            }
            goto LABEL_15;
          case 7:
            if (v15 != 7) {
              goto LABEL_34;
            }
            goto LABEL_15;
          default:
            if (v15) {
              goto LABEL_34;
            }
            goto LABEL_15;
        }
      }
      if (v15 != v16) {
        break;
      }
LABEL_15:
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      char v17 = sub_22D2BCB90();
      sub_22D116874((uint64_t)v7, type metadata accessor for PBDataTypeShared);
      sub_22D116874((uint64_t)v10, type metadata accessor for PBDataTypeShared);
      BOOL v19 = v13-- != 0;
      if (v17)
      {
        v12 += v22;
        if (v19) {
          continue;
        }
      }
      return v17 & 1;
    }
LABEL_34:
    sub_22D116874((uint64_t)v7, type metadata accessor for PBDataTypeShared);
    sub_22D116874((uint64_t)v10, type metadata accessor for PBDataTypeShared);
  }
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_22D112408(uint64_t a1, uint64_t a2)
{
  return sub_22D11245C(a1, a2, type metadata accessor for PBReference, type metadata accessor for PBReference, (uint64_t (*)(uint64_t, uint64_t))sub_22D00EA38, type metadata accessor for PBReference);
}

uint64_t sub_22D11245C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t), uint64_t (*a6)(void))
{
  uint64_t v28 = a5;
  uint64_t v30 = a3(0);
  uint64_t v10 = MEMORY[0x270FA5388](v30);
  unint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v31 = a1;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 != *(void *)(a2 + 16))
  {
LABEL_15:
    char v24 = 0;
    return v24 & 1;
  }
  if (v16)
  {
    uint64_t v17 = a2;
    if (v31 != a2)
    {
      unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v29 = *(void *)(v13 + 72);
      uint64_t v19 = v16 - 1;
      while (1)
      {
        sub_22D11661C(v31 + v18, (uint64_t)v15, a4);
        sub_22D11661C(v17 + v18, (uint64_t)v12, a4);
        uint64_t v20 = *(int *)(v30 + 20);
        uint64_t v21 = *(void *)&v15[v20];
        uint64_t v22 = *(void *)&v12[v20];
        if (v21 != v22)
        {
          swift_retain();
          swift_retain();
          char v23 = v28(v21, v22);
          swift_release();
          swift_release();
          if ((v23 & 1) == 0) {
            break;
          }
        }
        sub_22D2BBFF0();
        sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
        char v24 = sub_22D2BCB90();
        sub_22D116874((uint64_t)v12, a6);
        sub_22D116874((uint64_t)v15, a6);
        BOOL v26 = v19-- != 0;
        if (v24)
        {
          v18 += v29;
          if (v26) {
            continue;
          }
        }
        return v24 & 1;
      }
      sub_22D116874((uint64_t)v12, a6);
      sub_22D116874((uint64_t)v15, a6);
      goto LABEL_15;
    }
  }
  char v24 = 1;
  return v24 & 1;
}

uint64_t sub_22D1126BC(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    long long v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v5 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      unint64_t v9 = *v3 >> 62;
      v3 += 2;
      v4 += 2;
      uint64_t v10 = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
          }
          uint64_t v10 = HIDWORD(v6) - (int)v6;
LABEL_13:
          sub_22CFF9B64(v6, v5);
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v6 + 16);
          uint64_t v11 = *(void *)(v6 + 24);
          uint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_13;
          }
          goto LABEL_124;
        case 3uLL:
          break;
        default:
          uint64_t v10 = BYTE6(v5);
          break;
      }
      unint64_t v13 = v7 >> 62;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v14) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8)) {
            goto LABEL_125;
          }
          uint64_t v14 = (int)v14;
LABEL_19:
          if (v10 != v14) {
            goto LABEL_121;
          }
          if (v10 < 1)
          {
LABEL_6:
            sub_22CFF5630(v6, v5);
          }
          else
          {
            switch((int)v9)
            {
              case 1:
                unint64_t v76 = v3;
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_127;
                }
                sub_22CFF9B64(v8, v7);
                char v23 = (char *)sub_22D2BB7C0();
                if (!v23) {
                  goto LABEL_33;
                }
                uint64_t v24 = sub_22D2BB7F0();
                if (__OFSUB__((int)v6, v24)) {
                  goto LABEL_129;
                }
                v23 += (int)v6 - v24;
LABEL_33:
                sub_22D2BB7E0();
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v23) {
                    goto LABEL_157;
                  }
                  size_t v41 = BYTE6(v7);
                  uint64_t v40 = __s1;
                  uint64_t v39 = v23;
LABEL_103:
                  int v29 = memcmp(v39, v40, v41);
                  goto LABEL_104;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_138;
                  }
                  swift_retain();
                  uint64_t v25 = (char *)sub_22D2BB7C0();
                  if (v25)
                  {
                    uint64_t v26 = sub_22D2BB7F0();
                    if (__OFSUB__((int)v8, v26)) {
                      goto LABEL_145;
                    }
                    v25 += (int)v8 - v26;
                  }
                  uint64_t v27 = sub_22D2BB7E0();
                  if (v27 >= (v8 >> 32) - (int)v8) {
                    size_t v28 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v28 = v27;
                  }
                  if (!v23) {
                    goto LABEL_147;
                  }
                  if (!v25) {
                    goto LABEL_148;
                  }
                  int v29 = memcmp(v23, v25, v28);
                  sub_22CFF5630(v8, v7);
                  goto LABEL_72;
                }
                uint64_t v67 = *(void *)(v8 + 16);
                uint64_t v74 = *(char **)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v68 = sub_22D2BB7C0();
                if (v68)
                {
                  uint64_t v69 = sub_22D2BB7F0();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_144;
                  }
                  v68 += v67 - v69;
                }
                if (__OFSUB__(v74, v67)) {
                  goto LABEL_139;
                }
                uint64_t v70 = sub_22D2BB7E0();
                if (v70 >= (uint64_t)&v74[-v67]) {
                  int v71 = &v74[-v67];
                }
                else {
                  int v71 = (char *)v70;
                }
                uint64_t v56 = v23;
                long long v3 = v76;
                if (!v23) {
                  goto LABEL_158;
                }
                if (!v68) {
                  goto LABEL_159;
                }
                size_t v55 = (size_t)v71;
                uint64_t v57 = (const void *)v68;
LABEL_116:
                int v58 = memcmp(v56, v57, v55);
                swift_release();
                goto LABEL_117;
              case 2:
                unint64_t v77 = v3;
                uint64_t v30 = *(void *)(v6 + 16);
                sub_22CFF9B64(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_22D2BB7C0();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_22D2BB7F0();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_128;
                  }
                  uint64_t v73 = (void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                sub_22D2BB7E0();
                long long v3 = v77;
                if (v13)
                {
                  if (v13 == 1)
                  {
                    if (v8 >> 32 < (int)v8) {
                      goto LABEL_134;
                    }
                    swift_retain();
                    uint64_t v42 = (char *)sub_22D2BB7C0();
                    if (v42)
                    {
                      uint64_t v43 = sub_22D2BB7F0();
                      if (__OFSUB__((int)v8, v43)) {
                        goto LABEL_143;
                      }
                      v42 += (int)v8 - v43;
                    }
                    uint64_t v44 = sub_22D2BB7E0();
                    if (v44 >= (v8 >> 32) - (int)v8) {
                      size_t v45 = (v8 >> 32) - (int)v8;
                    }
                    else {
                      size_t v45 = v44;
                    }
                    if (!v73) {
                      goto LABEL_150;
                    }
                    long long v3 = v77;
                    if (!v42) {
                      goto LABEL_151;
                    }
                    int v29 = memcmp(v73, v42, v45);
                    sub_22CFF5630(v8, v7);
                    swift_release();
                    swift_release();
LABEL_72:
                    sub_22CFF5630(v8, v7);
LABEL_104:
                    sub_22CFF5630(v6, v5);
                    if (v29) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v60 = *(void *)(v8 + 16);
                    uint64_t v59 = *(void *)(v8 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v61 = (char *)sub_22D2BB7C0();
                    if (v61)
                    {
                      uint64_t v62 = sub_22D2BB7F0();
                      if (__OFSUB__(v60, v62)) {
                        goto LABEL_142;
                      }
                      v61 += v60 - v62;
                    }
                    BOOL v17 = __OFSUB__(v59, v60);
                    int64_t v63 = v59 - v60;
                    if (v17) {
                      goto LABEL_137;
                    }
                    uint64_t v64 = sub_22D2BB7E0();
                    if (v64 >= v63) {
                      size_t v65 = v63;
                    }
                    else {
                      size_t v65 = v64;
                    }
                    long long v3 = v77;
                    if (!v73) {
                      goto LABEL_155;
                    }
                    if (!v61) {
                      goto LABEL_156;
                    }
                    int v66 = memcmp(v73, v61, v65);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_22CFF5630(v8, v7);
                    sub_22CFF5630(v6, v5);
                    if (v66) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v73) {
                    goto LABEL_154;
                  }
                  int v58 = memcmp(v73, __s1, BYTE6(v7));
                  swift_release();
LABEL_117:
                  swift_release();
                  sub_22CFF5630(v8, v7);
                  sub_22CFF5630(v6, v5);
                  if (v58) {
                    return 0;
                  }
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_58;
                }
                long long v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_131;
                  }
                  sub_22CFF9B64(v8, v7);
                  uint64_t v34 = sub_22D2BB7C0();
                  if (!v34) {
                    goto LABEL_149;
                  }
                  uint64_t v20 = v34;
                  uint64_t v35 = sub_22D2BB7F0();
                  uint64_t v22 = (int)v8 - v35;
                  if (__OFSUB__((int)v8, v35)) {
                    goto LABEL_133;
                  }
LABEL_53:
                  uint64_t v36 = sub_22D2BB7E0();
                  if (v36 >= v18) {
                    size_t v37 = v18;
                  }
                  else {
                    size_t v37 = v36;
                  }
                  int v38 = memcmp(__s1, (const void *)(v20 + v22), v37);
                  sub_22CFF5630(v8, v7);
                  sub_22CFF5630(v6, v5);
                  long long v3 = v75;
                  if (v38) {
                    return 0;
                  }
                  break;
                }
                uint64_t v52 = *(void *)(v8 + 16);
                uint64_t v53 = *(void *)(v8 + 24);
                sub_22CFF9B64(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_22D2BB7C0();
                if (v48)
                {
                  uint64_t v54 = sub_22D2BB7F0();
                  if (__OFSUB__(v52, v54)) {
                    goto LABEL_141;
                  }
                  v48 += v52 - v54;
                }
                BOOL v17 = __OFSUB__(v53, v52);
                int64_t v50 = v53 - v52;
                if (v17) {
                  goto LABEL_136;
                }
                uint64_t v51 = sub_22D2BB7E0();
                long long v3 = v75;
                if (!v48) {
                  goto LABEL_153;
                }
LABEL_84:
                if (v51 >= v50) {
                  size_t v55 = v50;
                }
                else {
                  size_t v55 = v51;
                }
                uint64_t v56 = __s1;
                uint64_t v57 = (const void *)v48;
                goto LABEL_116;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v13)
                {
LABEL_58:
                  uint64_t v78 = v8;
                  __int16 v79 = v7;
                  char v80 = BYTE2(v7);
                  char v81 = BYTE3(v7);
                  char v82 = BYTE4(v7);
                  char v83 = BYTE5(v7);
                  sub_22CFF9B64(v8, v7);
                  uint64_t v39 = __s1;
                  uint64_t v40 = &v78;
                  size_t v41 = BYTE6(v7);
                  goto LABEL_103;
                }
                long long v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_130;
                  }
                  sub_22CFF9B64(v8, v7);
                  uint64_t v19 = sub_22D2BB7C0();
                  if (!v19)
                  {
                    sub_22D2BB7E0();
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    sub_22D2BB7E0();
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
                    JUMPOUT(0x22D112FF4);
                  }
                  uint64_t v20 = v19;
                  uint64_t v21 = sub_22D2BB7F0();
                  uint64_t v22 = (int)v8 - v21;
                  if (__OFSUB__((int)v8, v21)) {
                    goto LABEL_132;
                  }
                  goto LABEL_53;
                }
                uint64_t v46 = *(void *)(v8 + 16);
                uint64_t v47 = *(void *)(v8 + 24);
                sub_22CFF9B64(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_22D2BB7C0();
                if (v48)
                {
                  uint64_t v49 = sub_22D2BB7F0();
                  if (__OFSUB__(v46, v49)) {
                    goto LABEL_140;
                  }
                  v48 += v46 - v49;
                }
                BOOL v17 = __OFSUB__(v47, v46);
                int64_t v50 = v47 - v46;
                if (v17) {
                  goto LABEL_135;
                }
                uint64_t v51 = sub_22D2BB7E0();
                long long v3 = v75;
                if (!v48) {
                  goto LABEL_152;
                }
                goto LABEL_84;
            }
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v16 = *(void *)(v8 + 16);
          uint64_t v15 = *(void *)(v8 + 24);
          BOOL v17 = __OFSUB__(v15, v16);
          uint64_t v14 = v15 - v16;
          if (!v17) {
            goto LABEL_19;
          }
          goto LABEL_126;
        case 3uLL:
          if (!v10) {
            goto LABEL_6;
          }
          sub_22CFF9B64(v8, v7);
LABEL_121:
          sub_22CFF5630(v6, v5);
          return 0;
        default:
          uint64_t v14 = BYTE6(v7);
          goto LABEL_19;
      }
    }
  }
  return 1;
}

uint64_t sub_22D113024(uint64_t a1, uint64_t a2)
{
  return sub_22D11245C(a1, a2, type metadata accessor for PBClinicalRecord, type metadata accessor for PBClinicalRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D171D2C, type metadata accessor for PBClinicalRecord);
}

uint64_t sub_22D113078(uint64_t a1, uint64_t a2)
{
  return sub_22D11520C(a1, a2, type metadata accessor for PBBlobAttribute, type metadata accessor for PBBlobAttribute, type metadata accessor for PBBlobAttribute);
}

uint64_t sub_22D1130B8(uint64_t a1, uint64_t a2)
{
  return sub_22D11310C(a1, a2, type metadata accessor for PBTimeSeries.Value, type metadata accessor for PBTimeSeries.Value, (uint64_t (*)(char *, char *))_s19HealthRecordsDaemon12PBTimeSeriesV5ValueV2eeoiySbAE_AEtFZ_0, type metadata accessor for PBTimeSeries.Value);
}

uint64_t sub_22D11310C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  uint64_t v11 = a3(0) - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  BOOL v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v28 = a2;
      uint64_t v19 = a5;
      unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v22 = v18 - 1;
      do
      {
        sub_22D11661C(a1 + v20, (uint64_t)v17, a4);
        sub_22D11661C(v28 + v20, (uint64_t)v14, a4);
        char v23 = v19(v17, v14);
        sub_22D116874((uint64_t)v14, a6);
        sub_22D116874((uint64_t)v17, a6);
        BOOL v25 = v22-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v20 += v21;
      }
      while (v25);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_22D1132A8(uint64_t a1, uint64_t a2)
{
  return sub_22D11245C(a1, a2, type metadata accessor for PBCategorySeries.Event, type metadata accessor for PBCategorySeries.Event, (uint64_t (*)(uint64_t, uint64_t))sub_22D169278, type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_22D1132FC(uint64_t a1, uint64_t a2)
{
  return sub_22D11245C(a1, a2, type metadata accessor for PBHKAllergyReaction, type metadata accessor for PBHKAllergyReaction, (uint64_t (*)(uint64_t, uint64_t))sub_22D177950, type metadata accessor for PBHKAllergyReaction);
}

uint64_t sub_22D113350(uint64_t a1, uint64_t a2)
{
  return sub_22D11245C(a1, a2, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D1133A4(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = type metadata accessor for PBDateRange(0);
  uint64_t v4 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v47 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1167B4(0, &qword_26853DB28, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  uint64_t v50 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v56 = (uint64_t)&v43 - v7;
  sub_22D1168D4(0, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v57 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v53 = type metadata accessor for PBMedicationDosage(0);
  uint64_t v13 = MEMORY[0x270FA5388](v53);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v54 = a2;
  uint64_t v55 = a1;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19 != *(void *)(a2 + 16)) {
    goto LABEL_52;
  }
  if (!v19 || v55 == v54)
  {
    char v39 = 1;
    return v39 & 1;
  }
  uint64_t v48 = v12;
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v49 = *(void *)(v16 + 72);
  size_t v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v21 = v19 - 1;
  uint64_t v44 = v15;
  uint64_t v46 = (char *)&v43 - v17;
  while (1)
  {
    sub_22D11661C(v55 + v20, (uint64_t)v18, type metadata accessor for PBMedicationDosage);
    sub_22D11661C(v54 + v20, (uint64_t)v15, type metadata accessor for PBMedicationDosage);
    uint64_t v22 = *(int *)(v53 + 20);
    uint64_t v23 = *(void *)&v18[v22];
    uint64_t v24 = *(void *)&v15[v22];
    if (v23 != v24) {
      break;
    }
LABEL_28:
    sub_22D2BBFF0();
    sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
    char v39 = sub_22D2BCB90();
    sub_22D116874((uint64_t)v15, type metadata accessor for PBMedicationDosage);
    sub_22D116874((uint64_t)v18, type metadata accessor for PBMedicationDosage);
    BOOL v41 = v21-- != 0;
    if (v39)
    {
      v20 += v49;
      if (v41) {
        continue;
      }
    }
    return v39 & 1;
  }
  swift_beginAccess();
  uint64_t v25 = *(void *)(v23 + 16);
  uint64_t v26 = *(void *)(v23 + 24);
  swift_beginAccess();
  BOOL v27 = v25 == *(void *)(v24 + 16) && v26 == *(void *)(v24 + 24);
  if (!v27 && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_51;
  }
  uint64_t v52 = v21;
  uint64_t v28 = v23
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  uint64_t v29 = (uint64_t)v48;
  sub_22D116684(v28, (uint64_t)v48, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  uint64_t v30 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  uint64_t v31 = v56;
  uint64_t v32 = v56 + *(int *)(v50 + 48);
  sub_22D116684(v29, v56, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  sub_22D116684(v30, v32, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  uint64_t v33 = *v45;
  uint64_t v34 = v51;
  if ((*v45)(v31, 1, v51) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1166F0(v29, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    if (v33(v32, 1, v34) != 1) {
      goto LABEL_48;
    }
    sub_22D1166F0(v56, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    uint64_t v15 = v44;
    goto LABEL_27;
  }
  sub_22D116684(v56, (uint64_t)v57, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  if (v33(v32, 1, v34) != 1)
  {
    uint64_t v35 = v47;
    sub_22D11674C(v32, v47, type metadata accessor for PBDateRange);
    if ((*v57 != *(void *)v35 || v57[1] != *(void *)(v35 + 8)) && (sub_22D2BD660() & 1) == 0
      || (v57[2] != *(void *)(v35 + 16) || v57[3] != *(void *)(v35 + 24)) && (sub_22D2BD660() & 1) == 0)
    {
      goto LABEL_45;
    }
    uint64_t v36 = v57[4];
    uint64_t v37 = *(void *)(v35 + 32);
    if (*(unsigned char *)(v35 + 40) == 1)
    {
      switch(v37)
      {
        case 1:
          if (v36 != 1) {
            goto LABEL_45;
          }
          goto LABEL_26;
        case 2:
          if (v36 != 2) {
            goto LABEL_45;
          }
          goto LABEL_26;
        case 3:
          if (v36 != 3) {
            goto LABEL_45;
          }
          goto LABEL_26;
        case 4:
          if (v36 != 4) {
            goto LABEL_45;
          }
          goto LABEL_26;
        case 5:
          if (v36 != 5) {
            goto LABEL_45;
          }
          goto LABEL_26;
        case 6:
          if (v36 != 6) {
            goto LABEL_45;
          }
          goto LABEL_26;
        default:
          if (v36) {
            goto LABEL_45;
          }
          goto LABEL_26;
      }
    }
    if (v36 != v37)
    {
LABEL_45:
      swift_retain();
      swift_retain();
      sub_22D116874(v35, type metadata accessor for PBDateRange);
      sub_22D1166F0((uint64_t)v48, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
      sub_22D116874((uint64_t)v57, type metadata accessor for PBDateRange);
      sub_22D1166F0(v56, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
      goto LABEL_49;
    }
LABEL_26:
    sub_22D2BBFF0();
    sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
    swift_retain();
    swift_retain();
    char v38 = sub_22D2BCB90();
    sub_22D116874(v35, type metadata accessor for PBDateRange);
    sub_22D1166F0((uint64_t)v48, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    sub_22D116874((uint64_t)v57, type metadata accessor for PBDateRange);
    sub_22D1166F0(v56, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    uint64_t v15 = v44;
    if ((v38 & 1) == 0) {
      goto LABEL_50;
    }
LABEL_27:
    swift_release();
    swift_release();
    uint64_t v18 = v46;
    uint64_t v21 = v52;
    goto LABEL_28;
  }
  swift_retain();
  swift_retain();
  sub_22D1166F0((uint64_t)v48, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  sub_22D116874((uint64_t)v57, type metadata accessor for PBDateRange);
LABEL_48:
  sub_22D116818(v56, &qword_26853DB28, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
LABEL_49:
  uint64_t v15 = v44;
LABEL_50:
  swift_release();
  swift_release();
LABEL_51:
  sub_22D116874((uint64_t)v15, type metadata accessor for PBMedicationDosage);
  sub_22D116874((uint64_t)v46, type metadata accessor for PBMedicationDosage);
LABEL_52:
  char v39 = 0;
  return v39 & 1;
}

uint64_t sub_22D113CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = type metadata accessor for PBHKInspectableValueCollection(0);
  uint64_t v69 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1167B4(0, &qword_26853FFC0, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v55 - v8;
  sub_22D1168D4(0, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = type metadata accessor for PBHKReferenceRange(0);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v23 = (char *)&v55 - v22;
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24 != *(void *)(a2 + 16)) {
    goto LABEL_31;
  }
  uint64_t v63 = v7;
  uint64_t v56 = v9;
  if (!v24 || a1 == a2)
  {
    char v51 = 1;
    return v51 & 1;
  }
  uint64_t v68 = v20;
  size_t v65 = v15;
  uint64_t v59 = v13;
  int v58 = v5;
  unint64_t v25 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v66 = *(void *)(v21 + 72);
  uint64_t v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  uint64_t v26 = v24 - 1;
  uint64_t v27 = (uint64_t)v56;
  uint64_t v57 = a2;
  uint64_t v67 = a1;
  uint64_t v61 = v19;
  uint64_t v60 = (char *)&v55 - v22;
  while (1)
  {
    sub_22D11661C(a1 + v25, (uint64_t)v23, type metadata accessor for PBHKReferenceRange);
    sub_22D11661C(a2 + v25, (uint64_t)v19, type metadata accessor for PBHKReferenceRange);
    uint64_t v28 = *(int *)(v68 + 20);
    uint64_t v29 = *(void *)&v23[v28];
    uint64_t v30 = *(void *)&v19[v28];
    if (v29 != v30) {
      break;
    }
LABEL_19:
    sub_22D2BBFF0();
    sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
    char v51 = sub_22D2BCB90();
    sub_22D116874((uint64_t)v19, type metadata accessor for PBHKReferenceRange);
    sub_22D116874((uint64_t)v23, type metadata accessor for PBHKReferenceRange);
    BOOL v53 = v26-- != 0;
    if (v51)
    {
      a1 = v67;
      v25 += v66;
      if (v53) {
        continue;
      }
    }
    return v51 & 1;
  }
  swift_beginAccess();
  uint64_t v31 = *(void *)(v29 + 16);
  uint64_t v32 = *(void *)(v29 + 24);
  swift_beginAccess();
  BOOL v33 = v31 == *(void *)(v30 + 16) && v32 == *(void *)(v30 + 24);
  if (!v33 && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_30;
  }
  uint64_t v69 = v26;
  uint64_t v34 = v29
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  uint64_t v35 = (uint64_t)v65;
  sub_22D116684(v34, (uint64_t)v65, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v36 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  uint64_t v37 = v27 + *(int *)(v63 + 48);
  sub_22D116684(v35, v27, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  sub_22D116684(v36, v37, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  char v38 = *v62;
  uint64_t v39 = v64;
  if ((*v62)(v27, 1, v64) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1166F0(v35, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    unsigned int v40 = v38(v37, 1, v39);
    uint64_t v19 = v61;
    uint64_t v23 = v60;
    if (v40 != 1) {
      goto LABEL_27;
    }
    sub_22D1166F0(v27, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    goto LABEL_18;
  }
  uint64_t v41 = v27;
  uint64_t v42 = (uint64_t)v59;
  sub_22D116684(v41, (uint64_t)v59, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  if (v38(v37, 1, v39) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1166F0((uint64_t)v65, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    sub_22D116874(v42, type metadata accessor for PBHKInspectableValueCollection);
    uint64_t v27 = (uint64_t)v56;
    uint64_t v19 = v61;
    uint64_t v23 = v60;
LABEL_27:
    sub_22D116818(v27, &qword_26853FFC0, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    goto LABEL_29;
  }
  uint64_t v43 = (uint64_t)v58;
  sub_22D11674C(v37, (uint64_t)v58, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v44 = *(int *)(v39 + 20);
  uint64_t v45 = *(void *)(v42 + v44);
  uint64_t v46 = *(void *)(v43 + v44);
  swift_retain();
  swift_retain();
  uint64_t v19 = v61;
  uint64_t v23 = v60;
  if (v45 == v46
    || (swift_retain(), swift_retain(), char v47 = sub_22D190168(v45, v46), swift_release(), swift_release(), (v47 & 1) != 0))
  {
    sub_22D2BBFF0();
    sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
    uint64_t v48 = (uint64_t)v59;
    uint64_t v49 = (uint64_t)v58;
    char v50 = sub_22D2BCB90();
    sub_22D116874(v49, type metadata accessor for PBHKInspectableValueCollection);
    sub_22D1166F0((uint64_t)v65, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    sub_22D116874(v48, type metadata accessor for PBHKInspectableValueCollection);
    uint64_t v27 = (uint64_t)v56;
    sub_22D1166F0((uint64_t)v56, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    if ((v50 & 1) == 0) {
      goto LABEL_29;
    }
LABEL_18:
    swift_release();
    swift_release();
    a2 = v57;
    uint64_t v26 = v69;
    goto LABEL_19;
  }
  sub_22D116874((uint64_t)v58, type metadata accessor for PBHKInspectableValueCollection);
  sub_22D1166F0((uint64_t)v65, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  sub_22D116874((uint64_t)v59, type metadata accessor for PBHKInspectableValueCollection);
  sub_22D1166F0((uint64_t)v56, &qword_26853E880, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
LABEL_29:
  swift_release();
  swift_release();
LABEL_30:
  sub_22D116874((uint64_t)v19, type metadata accessor for PBHKReferenceRange);
  sub_22D116874((uint64_t)v23, type metadata accessor for PBHKReferenceRange);
LABEL_31:
  char v51 = 0;
  return v51 & 1;
}

uint64_t sub_22D114534(uint64_t a1, uint64_t a2)
{
  return sub_22D11245C(a1, a2, type metadata accessor for PBHKInspectableValue, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_22D193848, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D114588(uint64_t a1, uint64_t a2)
{
  return sub_22D11245C(a1, a2, type metadata accessor for PBHKCodedValue, type metadata accessor for PBHKCodedValue, sub_22D1963F8, type metadata accessor for PBHKCodedValue);
}

uint64_t sub_22D1145DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBFHIRIdentifier(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v20 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_23:
    char v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v21 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_22D11661C(a1 + v12, (uint64_t)v10, type metadata accessor for PBFHIRIdentifier);
      sub_22D11661C(a2 + v12, (uint64_t)v7, type metadata accessor for PBFHIRIdentifier);
      BOOL v14 = *v10 == *v7 && v10[1] == v7[1];
      if (!v14 && (sub_22D2BD660() & 1) == 0) {
        break;
      }
      BOOL v15 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v15 && (sub_22D2BD660() & 1) == 0) {
        break;
      }
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      char v16 = sub_22D2BCB90();
      sub_22D116874((uint64_t)v7, type metadata accessor for PBFHIRIdentifier);
      sub_22D116874((uint64_t)v10, type metadata accessor for PBFHIRIdentifier);
      BOOL v18 = v13-- != 0;
      if (v16)
      {
        v12 += v21;
        if (v18) {
          continue;
        }
      }
      return v16 & 1;
    }
    sub_22D116874((uint64_t)v7, type metadata accessor for PBFHIRIdentifier);
    sub_22D116874((uint64_t)v10, type metadata accessor for PBFHIRIdentifier);
    goto LABEL_23;
  }
  char v16 = 1;
  return v16 & 1;
}

uint64_t sub_22D114854(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = type metadata accessor for PBCycleTracking.Event(0);
  uint64_t v4 = *(void *)(v50 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v50);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = type metadata accessor for PBCycleTracking.Cycle(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v52 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v51 = (uint64_t)&v41 - v14;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15 != *(void *)(a2 + 16))
  {
LABEL_32:
    char v40 = 0;
    return v40 & 1;
  }
  if (!v15 || a1 == a2)
  {
    char v40 = 1;
    return v40 & 1;
  }
  uint64_t v16 = 0;
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(v13 + 72);
  uint64_t v46 = *(void *)(a1 + 16);
  uint64_t v47 = v10;
  uint64_t v44 = a2 + v17;
  uint64_t v45 = a1 + v17;
  uint64_t v42 = v4;
  uint64_t v43 = v20;
  while (1)
  {
    uint64_t v48 = v16;
    uint64_t v21 = v20 * v16;
    uint64_t v22 = (void *)v51;
    sub_22D11661C(v18 + v20 * v16, v51, type metadata accessor for PBCycleTracking.Cycle);
    uint64_t v23 = v19 + v21;
    uint64_t v24 = (void *)v52;
    sub_22D11661C(v23, v52, type metadata accessor for PBCycleTracking.Cycle);
    BOOL v25 = *v22 == *v24 && v22[1] == v24[1];
    if (!v25 && (sub_22D2BD660() & 1) == 0
      || (*(void *)(v51 + 16) == *(void *)(v52 + 16)
        ? (BOOL v26 = *(void *)(v51 + 24) == *(void *)(v52 + 24))
        : (BOOL v26 = 0),
          !v26 && (sub_22D2BD660() & 1) == 0
       || (uint64_t v27 = *(void *)(v51 + 32),
           uint64_t v28 = *(void *)(v52 + 32),
           uint64_t v29 = *(void *)(v27 + 16),
           v29 != *(void *)(v28 + 16))))
    {
LABEL_31:
      sub_22D116874(v52, type metadata accessor for PBCycleTracking.Cycle);
      sub_22D116874(v51, type metadata accessor for PBCycleTracking.Cycle);
      goto LABEL_32;
    }
    if (v29 && v27 != v28) {
      break;
    }
LABEL_24:
    if (*(_DWORD *)(v51 + 40) != *(_DWORD *)(v52 + 40) || *(_DWORD *)(v51 + 44) != *(_DWORD *)(v52 + 44)) {
      goto LABEL_31;
    }
    uint64_t v39 = v51;
    uint64_t v38 = v52;
    sub_22D2BBFF0();
    sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
    char v40 = sub_22D2BCB90();
    sub_22D116874(v38, type metadata accessor for PBCycleTracking.Cycle);
    sub_22D116874(v39, type metadata accessor for PBCycleTracking.Cycle);
    if (v40)
    {
      uint64_t v16 = v48 + 1;
      uint64_t v18 = v45;
      uint64_t v20 = v43;
      uint64_t v19 = v44;
      if (v48 + 1 != v46) {
        continue;
      }
    }
    return v40 & 1;
  }
  unint64_t v30 = 0;
  unint64_t v31 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v49 = *(void *)(v42 + 72);
  while (1)
  {
    uint64_t result = sub_22D11661C(v27 + v31, (uint64_t)v9, type metadata accessor for PBCycleTracking.Event);
    if (v30 >= *(void *)(v28 + 16)) {
      break;
    }
    sub_22D11661C(v28 + v31, (uint64_t)v7, type metadata accessor for PBCycleTracking.Event);
    uint64_t v33 = *(int *)(v50 + 20);
    uint64_t v34 = *(void **)&v9[v33];
    uint64_t v35 = *(void *)&v7[v33];
    if (v34 != (void *)v35)
    {
      swift_retain();
      swift_retain();
      char v36 = sub_22D1A1F1C(v34, v35);
      swift_release();
      swift_release();
      if ((v36 & 1) == 0)
      {
        sub_22D116874((uint64_t)v7, type metadata accessor for PBCycleTracking.Event);
        sub_22D116874((uint64_t)v9, type metadata accessor for PBCycleTracking.Event);
        goto LABEL_31;
      }
    }
    sub_22D2BBFF0();
    sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
    char v37 = sub_22D2BCB90();
    sub_22D116874((uint64_t)v7, type metadata accessor for PBCycleTracking.Event);
    sub_22D116874((uint64_t)v9, type metadata accessor for PBCycleTracking.Event);
    if ((v37 & 1) == 0) {
      goto LABEL_31;
    }
    ++v30;
    v31 += v49;
    if (v29 == v30) {
      goto LABEL_24;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22D114D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    long long v3 = (uint64_t *)(a1 + 32);
    for (uint64_t i = (unsigned char *)(a2 + 40); ; i += 16)
    {
      uint64_t v6 = *v3;
      v3 += 2;
      uint64_t v5 = v6;
      uint64_t v7 = *((void *)i - 1);
      if (*i == 1)
      {
        switch(v7)
        {
          case 7:
            if (v5 != 7) {
              return 0;
            }
            goto LABEL_6;
          case 8:
            if (v5 != 8) {
              return 0;
            }
            goto LABEL_6;
          case 9:
            if (v5 != 9) {
              return 0;
            }
            goto LABEL_6;
          case 10:
            if (v5 != 10) {
              return 0;
            }
            goto LABEL_6;
          case 11:
            if (v5 != 11) {
              return 0;
            }
            goto LABEL_6;
          case 12:
            if (v5 != 12) {
              return 0;
            }
            goto LABEL_6;
          case 13:
            if (v5 != 13) {
              return 0;
            }
            goto LABEL_6;
          case 14:
            if (v5 != 14) {
              return 0;
            }
            goto LABEL_6;
          case 15:
            if (v5 != 15) {
              return 0;
            }
            goto LABEL_6;
          case 16:
            if (v5 != 16) {
              return 0;
            }
            goto LABEL_6;
          case 17:
            if (v5 != 17) {
              return 0;
            }
            goto LABEL_6;
          case 18:
            if (v5 != 18) {
              return 0;
            }
            goto LABEL_6;
          case 19:
            if (v5 != 19) {
              return 0;
            }
            goto LABEL_6;
          case 20:
            if (v5 != 20) {
              return 0;
            }
            goto LABEL_6;
          case 21:
            if (v5 != 21) {
              return 0;
            }
            goto LABEL_6;
          case 22:
            if (v5 != 22) {
              return 0;
            }
            goto LABEL_6;
          default:
            break;
        }
      }
      if (v5 != v7) {
        break;
      }
LABEL_6:
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_22D114F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_22:
    char v14 = 0;
    return v14 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_22D11661C(a1 + v12, (uint64_t)v10, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      sub_22D11661C(a2 + v12, (uint64_t)v7, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      if (*(_DWORD *)v10 != *(_DWORD *)v7
        || *((_DWORD *)v10 + 1) != *((_DWORD *)v7 + 1)
        || *((_DWORD *)v10 + 2) != *((_DWORD *)v7 + 2)
        || *((_DWORD *)v10 + 3) != *((_DWORD *)v7 + 3)
        || *((_DWORD *)v10 + 4) != *((_DWORD *)v7 + 4)
        || *((_DWORD *)v10 + 5) != *((_DWORD *)v7 + 5))
      {
        break;
      }
      if ((*((void *)v10 + 3) != *((void *)v7 + 3) || *((void *)v10 + 4) != *((void *)v7 + 4))
        && (sub_22D2BD660() & 1) == 0)
      {
        break;
      }
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      char v14 = sub_22D2BCB90();
      sub_22D116874((uint64_t)v7, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      sub_22D116874((uint64_t)v10, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      BOOL v16 = v13-- != 0;
      if (v14)
      {
        v12 += v19;
        if (v16) {
          continue;
        }
      }
      return v14 & 1;
    }
    sub_22D116874((uint64_t)v7, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
    sub_22D116874((uint64_t)v10, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
    goto LABEL_22;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_22D1151CC(uint64_t a1, uint64_t a2)
{
  return sub_22D11520C(a1, a2, type metadata accessor for PBPatientMeta.CHRMeta, type metadata accessor for PBPatientMeta.CHRMeta, type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t sub_22D11520C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v26 = a3(0);
  uint64_t v9 = MEMORY[0x270FA5388](v26);
  uint64_t v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  char v14 = (uint64_t *)((char *)&v24 - v13);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v27 = a2;
  if (v15 != *(void *)(a2 + 16))
  {
LABEL_26:
    char v20 = 0;
    return v20 & 1;
  }
  if (v15 && a1 != v27)
  {
    unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v25 = *(void *)(v12 + 72);
    uint64_t v17 = v15 - 1;
    while (1)
    {
      sub_22D11661C(a1 + v16, (uint64_t)v14, a4);
      sub_22D11661C(v27 + v16, (uint64_t)v11, a4);
      BOOL v18 = *v14 == *v11 && v14[1] == v11[1];
      if (!v18 && (sub_22D2BD660() & 1) == 0) {
        break;
      }
      BOOL v19 = v14[2] == v11[2] && v14[3] == v11[3];
      if (!v19 && (sub_22D2BD660() & 1) == 0 || (v14[4] != v11[4] || v14[5] != v11[5]) && (sub_22D2BD660() & 1) == 0) {
        break;
      }
      sub_22D2BBFF0();
      sub_22D116994(&qword_26853DB30, MEMORY[0x263F50560]);
      char v20 = sub_22D2BCB90();
      sub_22D116874((uint64_t)v11, a5);
      sub_22D116874((uint64_t)v14, a5);
      BOOL v22 = v17-- != 0;
      if (v20)
      {
        v16 += v25;
        if (v22) {
          continue;
        }
      }
      return v20 & 1;
    }
    sub_22D116874((uint64_t)v11, a5);
    sub_22D116874((uint64_t)v14, a5);
    goto LABEL_26;
  }
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_22D115484(uint64_t a1, uint64_t a2)
{
  return sub_22D11245C(a1, a2, type metadata accessor for PBHKMedicationScheduleIntervalData, type metadata accessor for PBHKMedicationScheduleIntervalData, sub_22D1B2C20, type metadata accessor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_22D1154D8@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_22CFF9B64(a2, a3);
      uint64_t v10 = (char *)sub_22D2BB7C0();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_22D2BB7F0();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_22D2BB7E0();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x22D11573CLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_22CFF5630(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_22D2BB7C0();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_22D2BB7F0();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_22D2BB7E0();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_22D11574C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_22D1154D8((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_22D115824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_22D2BB7C0();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_22D2BB7F0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_22D2BB7E0();
  sub_22D1154D8(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_22D1158DC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x22D115B44);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_22CFF9B64(a3, a4);
                  sub_22CFF9B64(a1, a2);
                  char v17 = sub_22D115824((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_22CFF5630(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_22CFF9B64(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_22D115824(v21, v22, v20, a3, a4);
                  sub_22CFF5630(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_22CFF9B64(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_22CFF9B64(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_22D11574C(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_22CFF5630(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_22D115B74(uint64_t *a1, uint64_t *a2)
{
  if ((sub_22D10F7F8(*a1, *a2) & 1) == 0 || (sub_22D10F7F8(a1[1], a2[1]) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a2[4];
  unint64_t v7 = a2[5];
  if ((a1[2] != a2[2] || a1[3] != a2[3]) && (sub_22D2BD660() & 1) == 0) {
    return 0;
  }
  if ((sub_22D1158DC(v4, v5, v6, v7) & 1) == 0
    || (a1[6] != a2[6] || a1[7] != a2[7]) && (sub_22D2BD660() & 1) == 0
    || (a1[8] != a2[8] || a1[9] != a2[9]) && (sub_22D2BD660() & 1) == 0)
  {
    return 0;
  }
  uint64_t v8 = a1[10];
  uint64_t v9 = a2[10];
  return sub_22D10E95C(v8, v9);
}

void sub_22D115C84()
{
  if (!qword_26853FFB8)
  {
    sub_22D2BBC30();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853FFB8);
    }
  }
}

uint64_t sub_22D115CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v95 = a7;
  unint64_t v96 = a8;
  uint64_t v110 = type metadata accessor for ClinicalSharingDataNodeInfo();
  uint64_t v102 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v109 = (uint64_t)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for PBLookupInfo(0);
  MEMORY[0x270FA5388](v94);
  uint64_t v98 = (uint64_t)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for ClinicalSharingCategoryNodeInfo();
  uint64_t v25 = *(void *)(v112 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v112);
  uint64_t v103 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = a1;
  uint64_t v111 = (uint64_t)&v88 - v29;
  int64_t v30 = *(void *)(a1 + 16);
  uint64_t v97 = a3;
  unint64_t v92 = a5;
  uint64_t v91 = a4;
  long long v89 = a9;
  uint64_t v99 = a2;
  uint64_t v100 = a6;
  uint64_t v101 = v28;
  if (v30)
  {
    uint64_t v113 = MEMORY[0x263F8EE78];
    uint64_t v31 = v28;
    sub_22D24B9CC(0, v30, 0);
    uint64_t v32 = v31 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v108 = *(void *)(v25 + 72);
    uint64_t v33 = v113;
    uint64_t v105 = v32;
    do
    {
      uint64_t v34 = v111;
      sub_22D11661C(v32, v111, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
      uint64_t v35 = (uint64_t *)(v34 + *(int *)(v112 + 24));
      uint64_t v36 = *v35;
      uint64_t v37 = v35[1];
      uint64_t v38 = v35[2];
      unint64_t v39 = v35[3];
      swift_bridgeObjectRetain();
      sub_22CFF9B64(v38, v39);
      sub_22D116874(v34, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22D24B9CC(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = v113;
      }
      unint64_t v41 = *(void *)(v33 + 16);
      unint64_t v40 = *(void *)(v33 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_22D24B9CC(v40 > 1, v41 + 1, 1);
        uint64_t v33 = v113;
      }
      *(void *)(v33 + 16) = v41 + 1;
      uint64_t v42 = (void *)(v33 + 32 * v41);
      v42[4] = v36;
      v42[5] = v37;
      v42[6] = v38;
      v42[7] = v39;
      v32 += v108;
      --v30;
    }
    while (v30);
    uint64_t v43 = *(void *)(v101 + 16);
    uint64_t v113 = MEMORY[0x263F8EE78];
    uint64_t v104 = v43;
    if (v43)
    {
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v45 = 0;
      uint64_t v46 = (uint64_t)v103;
      uint64_t v90 = v33;
      while (1)
      {
        uint64_t v47 = v45 + 1;
        if (__OFADD__(v45, 1)) {
          break;
        }
        sub_22D11661C(v105 + v108 * v45, v46, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
        uint64_t v48 = *(void *)v46;
        int64_t v49 = *(void *)(*(void *)v46 + 16);
        if (v49)
        {
          uint64_t v107 = v47;
          uint64_t v115 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_22D24B9CC(0, v49, 0);
          uint64_t v50 = *(unsigned __int8 *)(v102 + 80);
          uint64_t v106 = v48;
          uint64_t v51 = v48 + ((v50 + 32) & ~v50);
          uint64_t v111 = *(void *)(v102 + 72);
          uint64_t v52 = v115;
          do
          {
            uint64_t v53 = v109;
            sub_22D11661C(v51, v109, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo);
            uint64_t v54 = (uint64_t *)(v53 + *(int *)(v110 + 24));
            uint64_t v55 = v54[1];
            uint64_t v112 = *v54;
            uint64_t v57 = v54[2];
            unint64_t v56 = v54[3];
            swift_bridgeObjectRetain();
            sub_22CFF9B64(v57, v56);
            sub_22D116874(v53, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_22D24B9CC(0, *(void *)(v52 + 16) + 1, 1);
              uint64_t v52 = v115;
            }
            unint64_t v59 = *(void *)(v52 + 16);
            unint64_t v58 = *(void *)(v52 + 24);
            if (v59 >= v58 >> 1)
            {
              sub_22D24B9CC(v58 > 1, v59 + 1, 1);
              uint64_t v52 = v115;
            }
            *(void *)(v52 + 16) = v59 + 1;
            uint64_t v60 = (void *)(v52 + 32 * v59);
            v60[4] = v112;
            v60[5] = v55;
            v60[6] = v57;
            v60[7] = v56;
            v51 += v111;
            --v49;
          }
          while (v49);
          swift_bridgeObjectRelease();
          uint64_t v46 = (uint64_t)v103;
          uint64_t v47 = v107;
        }
        else
        {
          uint64_t v52 = MEMORY[0x263F8EE78];
        }
        sub_22D116874(v46, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
        uint64_t result = sub_22D23E858(v52);
        uint64_t v45 = v47;
        if (v47 == v104)
        {
          swift_bridgeObjectRelease();
          uint64_t v61 = v113;
          uint64_t v62 = v93;
          goto LABEL_24;
        }
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v33 = MEMORY[0x263F8EE78];
  }
  uint64_t v62 = v93;
  uint64_t v90 = v33;
  swift_bridgeObjectRetain();
  uint64_t v61 = MEMORY[0x263F8EE78];
LABEL_24:
  uint64_t v109 = a14;
  uint64_t v110 = a16;
  uint64_t v111 = a10;
  uint64_t v112 = a11;
  uint64_t v108 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v63 = v97;
  swift_bridgeObjectRetain();
  sub_22D2BC920();
  uint64_t v64 = v113;
  unint64_t v65 = v114;
  swift_bridgeObjectRetain();
  uint64_t v66 = v95;
  unint64_t v67 = v96;
  sub_22CFF9B64(v95, v96);
  uint64_t v87 = v110;
  uint64_t v86 = v109;
  uint64_t v110 = a13;
  uint64_t v109 = a12;
  uint64_t v68 = v98;
  sub_22D0E9B10(v99, v63, v64, v65, v66, v67, v111, v112, v98, a12, a13, v86, a15, v87);
  sub_22D116994((unint64_t *)&qword_26853E268, (void (*)(uint64_t))type metadata accessor for PBLookupInfo);
  uint64_t v69 = sub_22D2BC1E0();
  if (v62)
  {
    swift_bridgeObjectRelease();
    sub_22CFF5630(v66, v67);
    sub_22CFF5630(v91, v92);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_22D2BC940();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v100, v71);
    sub_22D116874(v68, type metadata accessor for PBLookupInfo);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v72 = v69;
    unint64_t v73 = v70;
    uint64_t v74 = sub_22D2BBB10();
    uint64_t v111 = v75;
    uint64_t v112 = v74;
    sub_22CFF5630(v72, v73);
    swift_bridgeObjectRetain();
    uint64_t v76 = v91;
    unint64_t v77 = v92;
    sub_22CFF9B64(v91, v92);
    swift_bridgeObjectRetain();
    sub_22CFF9B64(v76, v77);
    uint64_t v78 = sub_22D0B027C(v101);
    swift_bridgeObjectRelease();
    sub_22CFF5630(v66, v67);
    sub_22CFF5630(v76, v77);
    uint64_t v79 = sub_22D2BC940();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v100, v79);
    sub_22D116874(v98, type metadata accessor for PBLookupInfo);
    uint64_t v80 = v90;
    swift_bridgeObjectRetain();
    uint64_t v81 = v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22CFF9B64(v76, v77);
    uint64_t v82 = v110;
    swift_bridgeObjectRetain();
    uint64_t v83 = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_22CFF5630(v76, v77);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_22CFF5630(v76, v77);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v84 = v111;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v85 = v89;
    void *v89 = v80;
    v85[1] = v81;
    v85[2] = v99;
    v85[3] = v63;
    v85[4] = v76;
    v85[5] = v77;
    v85[6] = v112;
    v85[7] = v84;
    v85[8] = v109;
    v85[9] = v82;
    v85[10] = v83;
  }
  return result;
}

uint64_t sub_22D11661C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D116684(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D1168D4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D1166F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D1168D4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D11674C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22D1167B4(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_22D1168D4(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_22D116818(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D1167B4(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_22D116874(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_22D1168D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D116928(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D1168D4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D116994(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PBCategorySeries.Event.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBCategorySeries.Event, &qword_26853CFD0, &qword_268540208, a1);
}

uint64_t type metadata accessor for PBCategorySeries.Event(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541808);
}

uint64_t PBCategorySeries.Event.recordedTime.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1674C4(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  uint64_t v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

uint64_t PBCategorySeries.Event.raw.setter(int a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_22D1674C4(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v5 + 16) = a1;
  return result;
}

uint64_t PBCategorySeries.Event.value.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D12E680(a1, a2, type metadata accessor for PBCategorySeries.Event, (void (*)(void))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_22D1674C4);
}

uint64_t PBCategorySeries.Event.steadinessClassification.setter(uint64_t *a1)
{
  return sub_22D11F100(a1);
}

uint64_t PBCategorySeries.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBCategorySeries, &qword_26853CFA8, &qword_2685401B0, a1);
}

uint64_t sub_22D116D6C@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(a1(0) + 20);
  if (*a2 != -1) {
    swift_once();
  }
  *(void *)(a4 + v8) = *a3;
  return swift_retain();
}

uint64_t PBCategorySeries.events.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBCategorySeries, (void (*)(void))type metadata accessor for PBCategorySeries._StorageClass, sub_22D165828, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
}

uint64_t PBDateRange.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  type metadata accessor for PBDateRange(0);
  return sub_22D2BBFE0();
}

uint64_t PBTimeSeries.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBTimeSeries, &qword_26853CF38, &qword_268540090, a1);
}

uint64_t PBWorkout.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBWorkout, &qword_26853CFE8, &qword_268540240, a1);
}

uint64_t PBCharacteristics.init()@<X0>(void *a1@<X8>)
{
  return sub_22D119868((void (*)(void))type metadata accessor for PBCharacteristics, a1);
}

uint64_t PBAllClinicalRecords.init()@<X0>(void *a1@<X8>)
{
  return sub_22D116F40((void (*)(void))type metadata accessor for PBAllClinicalRecords, a1);
}

uint64_t PBECGs.init()@<X0>(void *a1@<X8>)
{
  return sub_22D116F40((void (*)(void))type metadata accessor for PBECGs, a1);
}

uint64_t sub_22D116F40@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x263F8EE78];
  a1(0);
  return sub_22D2BBFE0();
}

uint64_t PBCycleTracking.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBCycleTracking, &qword_26853D158, &qword_268540560, a1);
}

uint64_t PBECGMeasurement.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 88) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 96) = v2;
  *(_DWORD *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 120) = 1;
  type metadata accessor for PBECGMeasurement(0);
  return sub_22D2BBFE0();
}

uint64_t PBActivitySummarySeries.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBActivitySummarySeries, &qword_26853D1E0, &qword_2685406B8, a1);
}

uint64_t PBPatientMeta.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBPatientMeta, &qword_26853D200, &qword_268540700, a1);
}

uint64_t PBSleepSummary.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x263F8EE78];
  *(_DWORD *)(a1 + 8) = 0;
  type metadata accessor for PBSleepSummary(0);
  return sub_22D2BBFE0();
}

uint64_t PBSleepSeries.init()@<X0>(void *a1@<X8>)
{
  return sub_22D116F40((void (*)(void))type metadata accessor for PBSleepSeries, a1);
}

uint64_t PBHistogramSeries.init()@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  type metadata accessor for PBHistogramSeries(0);
  return sub_22D2BBFE0();
}

uint64_t PBMedicationTrackings.init()@<X0>(void *a1@<X8>)
{
  return sub_22D116F40((void (*)(void))type metadata accessor for PBMedicationTrackings, a1);
}

uint64_t PBMedicationTrackingDoseEvents.init()@<X0>(void *a1@<X8>)
{
  return sub_22D116F40((void (*)(void))type metadata accessor for PBMedicationTrackingDoseEvents, a1);
}

uint64_t PBMedicationTrackingSchedules.init()@<X0>(void *a1@<X8>)
{
  return sub_22D116F40((void (*)(void))type metadata accessor for PBMedicationTrackingSchedules, a1);
}

uint64_t PBActiveMedications.init()@<X0>(void *a1@<X8>)
{
  return sub_22D116F40((void (*)(void))type metadata accessor for PBActiveMedications, a1);
}

uint64_t static PBTimeSeries.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBTimeSeries, sub_22D160C7C) & 1;
}

uint64_t static PBCategorySeries.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCategorySeries, sub_22D1661BC) & 1;
}

uint64_t static PBWorkout.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBWorkout, (uint64_t (*)(uint64_t, uint64_t))sub_22D16B1B0) & 1;
}

uint64_t static PBCharacteristics.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B7720(a1, a2, type metadata accessor for PBCharacteristics) & 1;
}

uint64_t static PBAllClinicalRecords.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D113024, type metadata accessor for PBAllClinicalRecords) & 1;
}

uint64_t static PBECGs.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D10EF1C, type metadata accessor for PBECGs) & 1;
}

uint64_t static PBCycleTracking.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCycleTracking, sub_22D19EA28) & 1;
}

uint64_t static PBActivitySummarySeries.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBActivitySummarySeries, sub_22D1A5A24) & 1;
}

uint64_t static PBPatientMeta.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBPatientMeta, sub_22D1A8014) & 1;
}

uint64_t static PBSleepSeries.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D1116A8, type metadata accessor for PBSleepSeries) & 1;
}

uint64_t static PBMedicationTrackings.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D1105B0, type metadata accessor for PBMedicationTrackings) & 1;
}

uint64_t static PBMedicationTrackingDoseEvents.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D10F508, type metadata accessor for PBMedicationTrackingDoseEvents) & 1;
}

uint64_t static PBMedicationTrackingSchedules.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D10F55C, type metadata accessor for PBMedicationTrackingSchedules) & 1;
}

uint64_t static PBActiveMedications.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, (uint64_t (*)(void, void))sub_22D10F3F8, type metadata accessor for PBActiveMedications) & 1;
}

uint64_t PBECGMeta.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 88) = v2;
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 112) = 1;
  type metadata accessor for PBECGMeta(0);
  return sub_22D2BBFE0();
}

uint64_t PBCategorySeries.Event.source.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBCategorySeries.Event, (void (*)(void))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_22D1674C4, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t PBCategorySeries.Event.heartRateEventThreshold.setter(uint64_t a1, uint64_t a2)
{
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (uint64_t *)((char *)&v17 - v9);
  uint64_t v11 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v2 + v11) = sub_22D1674C4(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v11);
  *uint64_t v10 = a1;
  v10[1] = a2;
  uint64_t v14 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_22D1D0910((uint64_t)v10, (uint64_t)v8, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v8, v15, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

uint64_t PBTimeSeries.unit.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBTimeSeries, (void (*)(void))type metadata accessor for PBTimeSeries._StorageClass, sub_22D160258, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
}

uint64_t sub_22D117858(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t), void *a6)
{
  uint64_t v12 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(v6 + v12) = a5(v13);
    swift_release();
  }
  uint64_t v14 = (void *)(*(void *)(v6 + v12) + *a6);
  swift_beginAccess();
  *uint64_t v14 = a1;
  v14[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBTimeSeries.values.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBTimeSeries, (void (*)(void))type metadata accessor for PBTimeSeries._StorageClass, sub_22D160258, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
}

uint64_t sub_22D117980(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a4(v11);
    swift_release();
  }
  uint64_t v12 = (void *)(*(void *)(v5 + v10) + *a5);
  swift_beginAccess();
  *uint64_t v12 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t PBTimeSeries.Value.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = v2;
  *(void *)(a1 + 128) = 0;
  *(_WORD *)(a1 + 136) = 256;
  type metadata accessor for PBTimeSeries.Value(0);
  return sub_22D2BBFE0();
}

uint64_t PBTimeSeries.Value.glucoseMealTime.setter(uint64_t result)
{
  unsigned __int8 v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 128) = *(void *)result;
  *(_WORD *)(v1 + 136) = v2;
  return result;
}

uint64_t PBTimeSeries.values.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBTimeSeries);
}

uint64_t PBCategorySeries.events.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBCategorySeries);
}

uint64_t sub_22D117B24(void (*a1)(void))
{
  return swift_bridgeObjectRetain();
}

uint64_t PBCategorySeries.Event.recordedTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D117BC8(type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime, a1);
}

uint64_t PBWorkout.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D117BC8(type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, a1);
}

uint64_t sub_22D117BC8@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v11 = type metadata accessor for PBDateRange(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1) {
    return sub_22D1D06E8((uint64_t)v9, a3, type metadata accessor for PBDateRange);
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0xE000000000000000;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0xE000000000000000;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
}

uint64_t PBClinicalRecord.medicalRecord.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D122C58(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, a1);
}

uint64_t PBClinicalRecord.allergyRecord.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload()) {
      return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKAllergyRecord);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if (qword_26853D030 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402E8;
  return swift_retain();
}

uint64_t PBClinicalRecord.conditionRecord.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConditionRecord);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if (qword_26853D050 != -1) {
    swift_once();
  }
  *(void *)(a1 + v9) = qword_268540328;
  return swift_retain();
}

uint64_t PBClinicalRecord.vaccinationRecord.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKVaccinationRecord);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if (qword_26853D060 != -1) {
    swift_once();
  }
  *(void *)(a1 + v9) = qword_268540348;
  return swift_retain();
}

uint64_t PBClinicalRecord.medicationDispenseRecord.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3) {
      return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKMedicationDispenseRecord);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if (qword_26853D0B0 != -1) {
    swift_once();
  }
  *(void *)(a1 + v9) = qword_2685403F8;
  return swift_retain();
}

uint64_t PBClinicalRecord.medicationOrder.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4) {
      return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKMedicationOrder);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if (qword_26853D0C0 != -1) {
    swift_once();
  }
  *(void *)(a1 + v9) = qword_268540418;
  return swift_retain();
}

uint64_t PBClinicalRecord.diagnosticTestResult.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5) {
      return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKDiagnosticTestResult);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if (qword_26853D0D0 != -1) {
    swift_once();
  }
  *(void *)(a1 + v9) = qword_268540438;
  return swift_retain();
}

uint64_t PBClinicalRecord.diagnosticTestReport.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6) {
      return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKDiagnosticTestReport);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if (qword_26853D130 != -1) {
    swift_once();
  }
  *(void *)(a1 + v9) = qword_268540508;
  return swift_retain();
}

uint64_t PBClinicalRecord.accountOwner.getter@<X0>(void *a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7) {
      return sub_22D1D06E8((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBHKAccountOwner);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  type metadata accessor for PBHKAccountOwner(0);
  return sub_22D2BBFE0();
}

uint64_t PBClinicalRecord.procedureRecord.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8) {
      return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKProcedureRecord);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if (qword_26853D148 != -1) {
    swift_once();
  }
  *(void *)(a1 + v9) = qword_268540540;
  return swift_retain();
}

uint64_t PBClinicalRecord.medicationRecord.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9) {
      return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKMedicationRecord);
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  if (qword_26853D098 != -1) {
    swift_once();
  }
  *(void *)(a1 + v9) = qword_2685403C0;
  return swift_retain();
}

uint64_t PBHKAllergyRecord.recordedDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t PBHKConditionRecord.recordedDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t sub_22D11923C(uint64_t (*a1)(void), void *a2)
{
  uint64_t v3 = (uint64_t *)(*(void *)(v2 + *(int *)(a1(0) + 20)) + *a2);
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t PBHKVaccinationRecord.administrationDate.getter()
{
  return sub_22D126A90(type metadata accessor for PBHKVaccinationRecord);
}

uint64_t PBHKMedicationDispenseRecord.handOverDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
}

uint64_t PBHKMedicationOrder.writtenDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
}

uint64_t PBHKDiagnosticTestResult.issueDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t PBHKDiagnosticTestReport.issueDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t PBHKProcedureRecord.executionEndDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
}

uint64_t PBHKMedicationRecord.assertionDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
}

uint64_t PBActivitySummarySeries.activitySummaries.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBActivitySummarySeries);
}

uint64_t PBMedicationTracking.lastDosageEventDate.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 208);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PBPatientMeta.shareTimezone.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D11996C(a1, a2, type metadata accessor for PBPatientMeta, (void (*)(void))type metadata accessor for PBPatientMeta._StorageClass, sub_22D1A7000);
}

uint64_t PBPatientMeta.hasWatch_p.setter(char a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_22D1A7000(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 16) = a1 & 1;
  return result;
}

uint64_t PBPatientMeta.dob.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBPatientMeta, (void (*)(void))type metadata accessor for PBPatientMeta._StorageClass, sub_22D1A7000, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
}

uint64_t PBPatientMeta.sex.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D119BEC(a1, a2, type metadata accessor for PBPatientMeta, (void (*)(void))type metadata accessor for PBPatientMeta._StorageClass, sub_22D1A7000);
}

uint64_t PBPatientMeta.HumanName.init()@<X0>(void *a1@<X8>)
{
  return sub_22D11BF38((void (*)(void))type metadata accessor for PBPatientMeta.HumanName, a1);
}

uint64_t PBPatientMeta.name.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1A7000(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBPatientMeta.HumanName);
  uint64_t v12 = type metadata accessor for PBPatientMeta.HumanName(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  swift_endAccess();
  return swift_release();
}

uint64_t PBPatientMeta.chrMeta.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_22D1A7000(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  swift_beginAccess();
  *(void *)(v5 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t PBPatientMeta.CHRMeta.init()@<X0>(void *a1@<X8>)
{
  return sub_22D119868((void (*)(void))type metadata accessor for PBPatientMeta.CHRMeta, a1);
}

uint64_t sub_22D119868@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = 0;
  a2[5] = 0xE000000000000000;
  a1(0);
  return sub_22D2BBFE0();
}

uint64_t PBMedicationTrackingSchedule.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBMedicationTrackingSchedule, &qword_26853D290, &qword_268540878, a1);
}

uint64_t PBMedicationTrackingSchedule.scheduleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D1516CC(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_22D1AF328);
}

uint64_t PBMedicationTrackingSchedule.medicationSemanticIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D11996C(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_22D1AF328);
}

uint64_t sub_22D11996C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a5(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(v5 + v10);
  swift_beginAccess();
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AF328(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 96) = a1;
  *(void *)(v7 + 104) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.frequencyType.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v1 + v4) = sub_22D1AF328(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t result = swift_beginAccess();
  *(void *)(v6 + 120) = v2;
  *(unsigned char *)(v6 + 128) = v3;
  return result;
}

uint64_t PBMedicationTrackingSchedule.createdUtcOffset.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D119BEC(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_22D1AF328);
}

uint64_t sub_22D119BEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a5(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(v5 + v10);
  swift_beginAccess();
  *(void *)(v12 + 48) = a1;
  *(void *)(v12 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.startDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AF328(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.endDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AF328(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 80) = a1;
  *(void *)(v7 + 88) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKMedicationScheduleIntervalData.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKMedicationScheduleIntervalData, &qword_26853D2B8, &qword_2685408E0, a1);
}

uint64_t PBHKMedicationScheduleIntervalData.daysOfWeek.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1B211C(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  uint64_t v12 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationScheduleIntervalData.cycleIndex.setter(int a1)
{
  return sub_22D11A104(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_22D1B211C, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
}

uint64_t PBHKMedicationScheduleIntervalData.cycleIntervalDays.setter(int a1)
{
  return sub_22D11A104(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_22D1B211C, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
}

uint64_t sub_22D11A104(int a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a4(v11);
    swift_release();
  }
  uint64_t v12 = (_DWORD *)(*(void *)(v5 + v10) + *a5);
  uint64_t result = swift_beginAccess();
  *uint64_t v12 = a1;
  return result;
}

uint64_t PBHKMedicationScheduleIntervalData.dose.setter(int a1)
{
  return sub_22D11A104(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_22D1B211C, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
}

uint64_t PBHKMedicationScheduleIntervalData.startTime.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_22D1B211C, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
}

uint64_t PBMedicationTrackingSchedule.timeIntervals.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_22D1AF328(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  swift_beginAccess();
  *(void *)(v5 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTrackingSchedule.unrecognized.setter(char a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_22D1AF328(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 129) = a1 & 1;
  return result;
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.init()@<X0>(void *a1@<X8>)
{
  return sub_22D1222B0((void (*)(void))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, a1);
}

uint64_t PBMedicationTrackingSchedule.compatibilityVersionRange.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1AF328(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  uint64_t v12 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValueCollection.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKInspectableValueCollection, &qword_26853D0F8, &qword_268540490, a1);
}

uint64_t PBHKInspectableValueCollection.type.setter(uint64_t *a1)
{
  return sub_22D11AD94(a1, type metadata accessor for PBHKInspectableValueCollection, (void (*)(void))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_22D18F1A0);
}

uint64_t PBHKInspectableValueCollection.value.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D18F1A0(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValue);
  uint64_t v12 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValueCollection.min.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D18F1A0(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValue);
  uint64_t v12 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValueCollection.max.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D18F1A0(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValue);
  uint64_t v12 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValueCollection.inspectableValues.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKInspectableValueCollection, (void (*)(void))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_22D18F1A0, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
}

uint64_t PBHKInspectableValueCollection.unitString.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKInspectableValueCollection, (void (*)(void))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_22D18F1A0, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t PBHKInspectableValue.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKInspectableValue, &qword_26853D108, &qword_2685404B0, a1);
}

uint64_t PBHKInspectableValue.valueType.setter(uint64_t *a1)
{
  return sub_22D11AD94(a1, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804);
}

uint64_t sub_22D11AD94(uint64_t *a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = *a1;
  char v8 = *((unsigned char *)a1 + 8);
  uint64_t v9 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v4 + v9) = a4(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v4 + v9);
  uint64_t result = swift_beginAccess();
  *(void *)(v11 + 16) = v7;
  *(unsigned char *)(v11 + 24) = v8;
  return result;
}

uint64_t PBHKInspectableValue.stringValue.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D11996C(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804);
}

uint64_t PBHKInspectableValue.codedQuantity.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E860, type metadata accessor for PBHKCodedQuantity, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D191804(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKCodedQuantity);
  uint64_t v12 = type metadata accessor for PBHKCodedQuantity(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.ratioValue.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E858, type metadata accessor for PBHKRatioValue, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D191804(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKRatioValue);
  uint64_t v12 = type metadata accessor for PBHKRatioValue(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.medicalDateString.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
}

uint64_t PBHKInspectableValue.medicalDateIntervalString.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D191804(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  uint64_t v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.dateFromDateComponents.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
}

uint64_t PBHKInspectableValue.codedValueCollectionValues.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
}

uint64_t PBHKInspectableValue.medicalCodingsDisplayStrings.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
}

uint64_t PBHKInspectableValue.concept.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D191804(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.dataAbsentReasonCodingsDisplayStrings.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
}

uint64_t PBHKInspectableValue.dataAbsentReasonConcept.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D191804(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKInspectableValue.unitString.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t PBHKCodedQuantity.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  type metadata accessor for PBHKCodedQuantity(0);
  return sub_22D2BBFE0();
}

uint64_t PBHKConcept.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKConcept, &qword_26853D020, &qword_2685402C8, a1);
}

uint64_t PBHKConcept.preferredName.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D126B34(a1, a2, type metadata accessor for PBHKConcept, (void (*)(void))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B8D74);
}

uint64_t PBHKConcept.localizedPreferredName.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D126D20(a1, a2, type metadata accessor for PBHKConcept, (void (*)(void))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B8D74);
}

uint64_t PBHKConcept.rawIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = (void *)swift_retain();
    char v8 = sub_22D1B8D74(v7);
    swift_release();
    *(void *)(v3 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = *(void *)(v3 + v6);
  swift_beginAccess();
  *(void *)(v9 + 48) = a1;
  *(void *)(v9 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKConcept.isInMemory.setter(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    uint64_t v6 = sub_22D1B8D74(v5);
    swift_release();
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = (unsigned char *)(*(void *)(v2 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
  uint64_t result = swift_beginAccess();
  *uint64_t v7 = a1 & 1;
  return result;
}

uint64_t PBHKConcept.groupBy.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = type metadata accessor for PBHKConcept(0);
  uint64_t v11 = *(int *)(v10 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = (void *)swift_retain();
    uint64_t v13 = sub_22D1B8D74(v12);
    swift_release();
    *(void *)(v2 + v11) = v13;
    swift_release();
  }
  uint64_t v14 = *(void *)(v2 + v11);
  sub_22D1D06E8(a1, (uint64_t)v9, type metadata accessor for PBHKConcept);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  sub_22D1D0910((uint64_t)v9, (uint64_t)v7, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v15 = v14
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v7, v15, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKRatioValue.init()@<X0>(void *a1@<X8>)
{
  return sub_22D11BF38((void (*)(void))type metadata accessor for PBHKRatioValue, a1);
}

uint64_t sub_22D11BF38@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a1(0);
  return sub_22D2BBFE0();
}

uint64_t PBHKReferenceRange.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKReferenceRange, &qword_26853D0E0, &qword_268540458, a1);
}

uint64_t PBHKReferenceRange.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D18D824(v6, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKReferenceRange.valueRange.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D18D824(v10, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v12 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKCodedValue.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKCodedValue, &qword_26853D118, &qword_2685404D0, a1);
}

uint64_t PBHKCodedValue.concept.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKCodedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D195800(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKCodedValue.value.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKCodedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D195800(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValue);
  uint64_t v12 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKCodedValue.referenceRanges.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKCodedValue, (void (*)(void))type metadata accessor for PBHKCodedValue._StorageClass, sub_22D195800, &OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t PBClinicalRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBClinicalRecord, &qword_26853D000, &qword_268540278, a1);
}

uint64_t PBClinicalRecord.primaryConcept.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v11 = (void *)swift_retain();
    uint64_t v12 = sub_22D1B90F4(v11);
    swift_release();
    *(void *)(v2 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_22D1D06E8(a1, (uint64_t)v9, type metadata accessor for PBHKConcept);
  uint64_t v14 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_22D1D0910((uint64_t)v9, (uint64_t)v7, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v7, v15, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBClinicalRecord.source.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D11C9E4(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t PBClinicalRecord.gatewayID.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D11C9E4(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
}

uint64_t sub_22D11C9E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = (void *)swift_retain();
    uint64_t v10 = sub_22D1B90F4(v9);
    swift_release();
    *(void *)(v5 + v8) = v10;
    swift_release();
  }
  uint64_t v11 = (void *)(*(void *)(v5 + v8) + *a3);
  swift_beginAccess();
  *uint64_t v11 = a1;
  v11[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBClinicalRecord.medicalRecordOriginType.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = (void *)swift_retain();
    uint64_t v7 = sub_22D1B90F4(v6);
    swift_release();
    *(void *)(v2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v2 + v5)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v8 = v3;
  *(unsigned char *)(v8 + 8) = v4;
  return result;
}

uint64_t PBSleepSeries.Value.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  type metadata accessor for PBSleepSeries.Value(0);
  return sub_22D2BBFE0();
}

uint64_t PBHKDiagnosticTestResult.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKDiagnosticTestResult, &qword_26853D0D0, &qword_268540438, a1);
}

uint64_t PBHKDiagnosticTestResult.bodySite.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D189928(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKDiagnosticTestResult.category.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
}

uint64_t PBHKDiagnosticTestResult.comments.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
}

uint64_t PBHKDiagnosticTestResult.diagnosticTest.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D189928(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKDiagnosticTestResult.effectiveEndDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t PBHKDiagnosticTestResult.effectiveStartDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t PBHKDiagnosticTestResult.interpretation.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
}

uint64_t PBHKDiagnosticTestResult.issueDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t PBHKDiagnosticTestResult.method.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D189928(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKDiagnosticTestResult.performers.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

uint64_t PBHKDiagnosticTestResult.value.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D189928(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v12 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKDiagnosticTestResult.referenceRanges.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t PBClinicalRecord.diagnosticTestResult.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKDiagnosticTestResult);
}

uint64_t PBClinicalRecord.iosDerivedDisplayName.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D11C9E4(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
}

uint64_t PBHistogramSeries.Value.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x263F8EE78];
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  type metadata accessor for PBHistogramSeries.Value(0);
  return sub_22D2BBFE0();
}

uint64_t PBBucket.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  return sub_22D2BBFE0();
}

uint64_t PBHKMedicationRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKMedicationRecord, &qword_26853D098, &qword_2685403C0, a1);
}

uint64_t PBHKMedicationRecord.generalMedication.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1823FC(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBGeneralMedication);
  uint64_t v12 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationRecord.asserter.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

uint64_t PBHKMedicationRecord.assertionDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
}

uint64_t PBHKMedicationRecord.asserterType.setter(uint64_t *a1)
{
  return sub_22D152734(a1, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
}

uint64_t PBHKMedicationRecord.effectiveStartDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t PBHKMedicationRecord.effectiveEndDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t PBHKMedicationRecord.notTaken.setter(char a1)
{
  return sub_22D134558(a1, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
}

uint64_t PBHKMedicationRecord.reasonForUse.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
}

uint64_t PBHKMedicationRecord.reasonsNotTaken.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
}

uint64_t PBHKMedicationRecord.generalMedication.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v7 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBGeneralMedication);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D088 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685403A0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
}

uint64_t PBGeneralMedication.rxNormCodeSet.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBGeneralMedication, (void (*)(void))type metadata accessor for PBGeneralMedication._StorageClass, sub_22D18044C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
}

uint64_t PBClinicalRecord.medicationRecord.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKMedicationRecord);
}

uint64_t sub_22D11DDCC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v13 = (void *)swift_retain();
    uint64_t v14 = sub_22D1B90F4(v13);
    swift_release();
    *(void *)(v4 + v12) = v14;
    swift_release();
  }
  uint64_t v15 = *(void *)(v4 + v12);
  sub_22D1D06E8(a1, (uint64_t)v11, a2);
  uint64_t v16 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 0, 1, v16);
  sub_22D1D0910((uint64_t)v11, (uint64_t)v9, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v17 = v15
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v9, v17, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationOrder.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKMedicationOrder, &qword_26853D0C0, &qword_268540418, a1);
}

uint64_t PBHKMedicationOrder.generalMedication.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D186D6C(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBGeneralMedication);
  uint64_t v12 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationOrder.endedDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
}

uint64_t PBHKMedicationOrder.numberOfFills.setter(int a1)
{
  return sub_22D11A104(a1, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
}

uint64_t PBHKMedicationOrder.prescriber.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
}

uint64_t PBHKMedicationOrder.reason.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
}

uint64_t PBHKMedicationOrder.reasonEnded.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D186D6C(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationOrder.writtenDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
}

uint64_t PBClinicalRecord.medicationOrder.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKMedicationOrder);
}

uint64_t PBHKMedicationDispenseRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKMedicationDispenseRecord, &qword_26853D0B0, &qword_2685403F8, a1);
}

uint64_t PBHKMedicationDispenseRecord.generalMedication.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D184680(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBGeneralMedication);
  uint64_t v12 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  return swift_release();
}

uint64_t PBHKMedicationDispenseRecord.handOverDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(void))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_22D184680, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
}

uint64_t PBHKMedicationDispenseRecord.preparationDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(void))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_22D184680, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
}

uint64_t PBClinicalRecord.medicationDispenseRecord.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKMedicationDispenseRecord);
}

uint64_t PBGeneralMedication.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBGeneralMedication, &qword_26853D088, &qword_2685403A0, a1);
}

uint64_t PBGeneralMedication.medication.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D18044C(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBGeneralMedication.earliestDosageDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D1516CC(a1, a2, type metadata accessor for PBGeneralMedication, (void (*)(void))type metadata accessor for PBGeneralMedication._StorageClass, sub_22D18044C);
}

uint64_t PBGeneralMedication.dosages.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBGeneralMedication, (void (*)(void))type metadata accessor for PBGeneralMedication._StorageClass, sub_22D18044C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
}

uint64_t PBGeneralMedication.status.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D18044C(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

uint64_t PBMedicationDosage.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBMedicationDosage, &qword_26853D070, &qword_268540368, a1);
}

uint64_t PBMedicationDosage.instruction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D18D824(v6, &qword_26853D7B0, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationDosage.timingPeriod.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D18D824(v10, &qword_26853D7B0, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  uint64_t v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

uint64_t PBCategorySeries.Event.steadinessEvent.setter(uint64_t *a1)
{
  return sub_22D11F100(a1);
}

uint64_t sub_22D11F100(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *a1;
  char v11 = *((unsigned char *)a1 + 8);
  uint64_t v12 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(v2 + v12) = sub_22D1674C4(v13);
    swift_release();
  }
  uint64_t v14 = *(void *)(v2 + v12);
  *(void *)uint64_t v9 = v10;
  v9[8] = v11;
  uint64_t v15 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
  sub_22D1D0910((uint64_t)v9, (uint64_t)v7, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v16 = v14
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v7, v16, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_22D11F320(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D0590();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D11F36C()
{
  qword_26853FFD0 = (uint64_t)&unk_26E05A6E8;
}

uint64_t static PBInspectableValueCollectionType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CEB8);
}

uint64_t static PBInspectableValueCollectionType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CEB8, &qword_26853FFD0);
}

uint64_t (*static PBInspectableValueCollectionType.allCases.modify())()
{
  if (qword_26853CEB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D11F450@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CEB8, &qword_26853FFD0, a1);
}

uint64_t sub_22D11F478(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D053C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D11F4C4()
{
  qword_26853FFD8 = (uint64_t)&unk_26E05A758;
}

uint64_t static PBInspectableValueType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CEC0);
}

uint64_t static PBInspectableValueType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CEC0, &qword_26853FFD8);
}

uint64_t (*static PBInspectableValueType.allCases.modify())()
{
  if (qword_26853CEC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D11F5A8@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CEC0, &qword_26853FFD8, a1);
}

uint64_t PBDateRange.startTime.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBDateRange.startTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PBDateRange.startTime.modify())()
{
  return nullsub_1;
}

uint64_t PBDateRange.endTime.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBDateRange.endTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBDateRange.endTime.modify())()
{
  return nullsub_1;
}

void PBDateRange.granularity.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 32);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBDateRange.granularity.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 32) = *(void *)result;
  *(unsigned char *)(v1 + 40) = v2;
  return result;
}

uint64_t (*PBDateRange.granularity.modify())()
{
  return nullsub_1;
}

uint64_t PBDateRange.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D120BB8(type metadata accessor for PBDateRange, a1);
}

uint64_t PBDateRange.unknownFields.setter(uint64_t a1)
{
  return sub_22D120C50(a1, type metadata accessor for PBDateRange);
}

uint64_t (*PBDateRange.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D117BC8(type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, a1);
}

uint64_t PBTimeSeries.dateRange.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTimeSeries._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D160258(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  uint64_t v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

void (*PBTimeSeries.dateRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBDateRange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBTimeSeries(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_22D11FBD8;
}

void sub_22D11FBD8(uint64_t a1, char a2)
{
}

BOOL PBTimeSeries.hasDateRange.getter()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBTimeSeries(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v5 = type metadata accessor for PBDateRange(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  return v6;
}

Swift::Void __swiftcall PBTimeSeries.clearDateRange()()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTimeSeries._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D160258(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBTimeSeries.dataSource.getter()
{
  return sub_22D11923C(type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t PBTimeSeries.dataSource.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBTimeSeries, (void (*)(void))type metadata accessor for PBTimeSeries._StorageClass, sub_22D160258, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

void (*PBTimeSeries.dataSource.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D11FFFC;
}

void sub_22D11FFFC(uint64_t *a1, char a2)
{
}

uint64_t PBTimeSeries.unit.getter()
{
  return sub_22D11923C(type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
}

uint64_t sub_22D120050@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X4>, void *a4@<X8>)
{
  uint64_t v5 = (void *)(*(void *)(a1 + *(int *)(a2(0) + 20)) + *a3);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  *a4 = *v5;
  a4[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D1200C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t), void *a8)
{
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v14 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v15 = swift_retain();
    *(void *)(a2 + v14) = a7(v15);
    swift_release();
  }
  uint64_t v16 = (void *)(*(void *)(a2 + v14) + *a8);
  swift_beginAccess();
  *uint64_t v16 = v13;
  v16[1] = v12;
  return swift_bridgeObjectRelease();
}

void (*PBTimeSeries.unit.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D120240;
}

void sub_22D120240(uint64_t *a1, char a2)
{
}

void sub_22D120274(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = *(void *)(*a1 + 72);
  uint64_t v10 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v11 = *(int *)(v8 + 96);
      uint64_t v12 = *(void *)(v8 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + v11) = a4(v13);
      swift_release();
    }
    uint64_t v14 = (void *)(*(void *)(*(void *)(v8 + 88) + *(int *)(v8 + 96)) + *a5);
    swift_beginAccess();
    *uint64_t v14 = v9;
    v14[1] = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v15 = *(int *)(v8 + 96);
      uint64_t v16 = *(void *)(v8 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v17 = swift_retain();
      *(void *)(v16 + v15) = a4(v17);
      swift_release();
    }
    uint64_t v18 = (void *)(*(void *)(*(void *)(v8 + 88) + *(int *)(v8 + 96)) + *a5);
    swift_beginAccess();
    void *v18 = v9;
    v18[1] = v10;
  }
  swift_bridgeObjectRelease();
  free((void *)v8);
}

void (*PBTimeSeries.values.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBTimeSeries(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D1204AC;
}

void sub_22D1204AC(uint64_t *a1, char a2)
{
}

uint64_t (*PBTimeSeries.unknownFields.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.minFloat.getter()
{
  return *(float *)v0;
}

void PBTimeSeries.Value.minFloat.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*PBTimeSeries.Value.minFloat.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.maxFloat.getter()
{
  return *(float *)(v0 + 4);
}

void PBTimeSeries.Value.maxFloat.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*PBTimeSeries.Value.maxFloat.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.meanFloat.getter()
{
  return *(float *)(v0 + 8);
}

void PBTimeSeries.Value.meanFloat.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*PBTimeSeries.Value.meanFloat.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.sumFloat.getter()
{
  return *(float *)(v0 + 12);
}

void PBTimeSeries.Value.sumFloat.setter(float a1)
{
  *(float *)(v1 + 12) = a1;
}

uint64_t (*PBTimeSeries.Value.sumFloat.modify())()
{
  return nullsub_1;
}

float PBTimeSeries.Value.rawFloat.getter()
{
  return *(float *)(v0 + 16);
}

void PBTimeSeries.Value.rawFloat.setter(float a1)
{
  *(float *)(v1 + 16) = a1;
}

uint64_t (*PBTimeSeries.Value.rawFloat.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.recordedTime.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBTimeSeries.Value.recordedTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*PBTimeSeries.Value.recordedTime.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.measureCount.getter()
{
  return *(unsigned int *)(v0 + 40);
}

uint64_t PBTimeSeries.Value.measureCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*PBTimeSeries.Value.measureCount.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.unit.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBTimeSeries.Value.unit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*PBTimeSeries.Value.unit.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.dataSource.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBTimeSeries.Value.dataSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*PBTimeSeries.Value.dataSource.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.min.getter()
{
  return *(double *)(v0 + 80);
}

void PBTimeSeries.Value.min.setter(double a1)
{
  *(double *)(v1 + 80) = a1;
}

uint64_t (*PBTimeSeries.Value.min.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.max.getter()
{
  return *(double *)(v0 + 88);
}

void PBTimeSeries.Value.max.setter(double a1)
{
  *(double *)(v1 + 88) = a1;
}

uint64_t (*PBTimeSeries.Value.max.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.mean.getter()
{
  return *(double *)(v0 + 96);
}

void PBTimeSeries.Value.mean.setter(double a1)
{
  *(double *)(v1 + 96) = a1;
}

uint64_t (*PBTimeSeries.Value.mean.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.sum.getter()
{
  return *(double *)(v0 + 104);
}

void PBTimeSeries.Value.sum.setter(double a1)
{
  *(double *)(v1 + 104) = a1;
}

uint64_t (*PBTimeSeries.Value.sum.modify())()
{
  return nullsub_1;
}

double PBTimeSeries.Value.raw.getter()
{
  return *(double *)(v0 + 112);
}

void PBTimeSeries.Value.raw.setter(double a1)
{
  *(double *)(v1 + 112) = a1;
}

uint64_t (*PBTimeSeries.Value.raw.modify())()
{
  return nullsub_1;
}

uint64_t PBTimeSeries.Value.dataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBTimeSeries.Value.dataSources.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = a1;
  return result;
}

uint64_t (*PBTimeSeries.Value.dataSources.modify())()
{
  return nullsub_1;
}

void PBTimeSeries.Value.additionalData.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 136);
  char v3 = *(unsigned char *)(v1 + 137);
  *(void *)a1 = *(void *)(v1 + 128);
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
}

uint64_t PBTimeSeries.Value.additionalData.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  char v3 = *(unsigned char *)(result + 9);
  *(void *)(v1 + 128) = *(void *)result;
  *(unsigned char *)(v1 + 136) = v2;
  *(unsigned char *)(v1 + 137) = v3;
  return result;
}

uint64_t (*PBTimeSeries.Value.additionalData.modify())()
{
  return nullsub_1;
}

void PBTimeSeries.Value.glucoseMealTime.getter(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 137))
  {
    uint64_t v2 = 0;
    char v3 = 1;
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 128);
    char v3 = *(unsigned char *)(v1 + 136) & 1;
  }
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
}

uint64_t (*PBTimeSeries.Value.glucoseMealTime.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 16) = v1;
  if (*(unsigned char *)(v1 + 137))
  {
    uint64_t v2 = 0;
    char v3 = 1;
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 128);
    char v3 = *(unsigned char *)(v1 + 136) & 1;
  }
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return sub_22D1209D4;
}

uint64_t sub_22D1209D4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  unsigned __int8 v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 128) = *(void *)result;
  *(_WORD *)(v1 + 136) = v2;
  return result;
}

uint64_t PBTimeSeries.Value.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBTimeSeries.Value(0) + 80);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBTimeSeries.Value.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBTimeSeries.Value(0) + 80);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBTimeSeries.Value.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBBucket.start.modify())()
{
  return nullsub_1;
}

double PBBucket.end.getter()
{
  return *(double *)(v0 + 8);
}

void PBBucket.end.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*PBBucket.end.modify())()
{
  return nullsub_1;
}

uint64_t (*PBBucket.value.modify())()
{
  return nullsub_1;
}

uint64_t PBBucket.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D120BB8(type metadata accessor for PBBucket, a1);
}

uint64_t sub_22D120BB8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PBBucket.unknownFields.setter(uint64_t a1)
{
  return sub_22D120C50(a1, type metadata accessor for PBBucket);
}

uint64_t sub_22D120C50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBBucket.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHistogramSeries.values.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHistogramSeries.unit.modify())()
{
  return nullsub_1;
}

uint64_t PBHistogramSeries.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBHistogramSeries, a1);
}

uint64_t PBHistogramSeries.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBHistogramSeries);
}

uint64_t (*PBHistogramSeries.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHistogramSeries.Value.recordedTime.modify())()
{
  return nullsub_1;
}

uint64_t PBHistogramSeries.Value.buckets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBHistogramSeries.Value.buckets.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PBHistogramSeries.Value.buckets.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHistogramSeries.Value.identifier.modify())()
{
  return nullsub_1;
}

uint64_t PBHistogramSeries.Value.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D120BB8(type metadata accessor for PBHistogramSeries.Value, a1);
}

uint64_t PBHistogramSeries.Value.unknownFields.setter(uint64_t a1)
{
  return sub_22D120C50(a1, type metadata accessor for PBHistogramSeries.Value);
}

uint64_t (*PBHistogramSeries.Value.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBSleepSeries.values.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D12691C(type metadata accessor for PBSleepSeries, a1);
}

uint64_t PBSleepSeries.unknownFields.setter(uint64_t a1)
{
  return sub_22D1269B4(a1, type metadata accessor for PBSleepSeries);
}

uint64_t (*PBSleepSeries.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBSleepSeries.Value.recordedTime.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.Value.meanAsleep.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t PBSleepSeries.Value.meanAsleep.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*PBSleepSeries.Value.meanAsleep.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.Value.meanInBed.getter()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t PBSleepSeries.Value.meanInBed.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*PBSleepSeries.Value.meanInBed.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.Value.meanTimeToSleep.getter()
{
  return *(unsigned int *)(v0 + 24);
}

uint64_t PBSleepSeries.Value.meanTimeToSleep.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*PBSleepSeries.Value.meanTimeToSleep.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSeries.Value.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBSleepSeries.Value.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBSleepSeries.Value(0) + 32);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBSleepSeries.Value.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBSleepSummary.schedule.modify())()
{
  return nullsub_1;
}

uint64_t (*PBSleepSummary.sleepGoal.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBSleepSummary, a1);
}

uint64_t sub_22D1211B0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PBSleepSummary.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBSleepSummary);
}

uint64_t sub_22D121248(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBSleepSummary.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.sunday.getter()
{
  return *v0;
}

uint64_t PBSleepSummary.Schedule.sunday.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.sunday.modify())()
{
  return nullsub_1;
}

uint64_t (*PBSleepSummary.Schedule.monday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.tuesday.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t PBSleepSummary.Schedule.tuesday.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.tuesday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.wednesday.getter()
{
  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t PBSleepSummary.Schedule.wednesday.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.wednesday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.thursday.getter()
{
  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t PBSleepSummary.Schedule.thursday.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.thursday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.friday.getter()
{
  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t PBSleepSummary.Schedule.friday.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.friday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.saturday.getter()
{
  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t PBSleepSummary.Schedule.saturday.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 6) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.saturday.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.bedtime.getter()
{
  return *(unsigned int *)(v0 + 8);
}

uint64_t PBSleepSummary.Schedule.bedtime.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.bedtime.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.awake.getter()
{
  return *(unsigned int *)(v0 + 12);
}

uint64_t PBSleepSummary.Schedule.awake.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 12) = result;
  return result;
}

uint64_t (*PBSleepSummary.Schedule.awake.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1538C8(type metadata accessor for PBSleepSummary.Schedule, a1);
}

uint64_t PBSleepSummary.Schedule.unknownFields.setter(uint64_t a1)
{
  return sub_22D153960(a1, type metadata accessor for PBSleepSummary.Schedule);
}

uint64_t (*PBSleepSummary.Schedule.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBSleepSummary.Schedule.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0;
  type metadata accessor for PBSleepSummary.Schedule(0);
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 3) = 0;
  return sub_22D2BBFE0();
}

uint64_t PBCategorySeries.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D117BC8(type metadata accessor for PBCategorySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, a1);
}

uint64_t PBCategorySeries.dateRange.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBCategorySeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D165828(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  uint64_t v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

void (*PBCategorySeries.dateRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBDateRange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_22D1219A0;
}

void sub_22D1219A0(uint64_t a1, char a2)
{
}

BOOL PBCategorySeries.hasDateRange.getter()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBCategorySeries(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v5 = type metadata accessor for PBDateRange(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  return v6;
}

Swift::Void __swiftcall PBCategorySeries.clearDateRange()()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBCategorySeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D165828(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBCategorySeries.dataSource.getter()
{
  return sub_22D11923C(type metadata accessor for PBCategorySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t PBCategorySeries.dataSource.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBCategorySeries, (void (*)(void))type metadata accessor for PBCategorySeries._StorageClass, sub_22D165828, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

void (*PBCategorySeries.dataSource.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCategorySeries(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D121DC4;
}

void sub_22D121DC4(uint64_t *a1, char a2)
{
}

uint64_t sub_22D121DF8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X4>, void *a4@<X8>)
{
  uint64_t v5 = (void *)(*(void *)(a1 + *(int *)(a2(0) + 20)) + *a3);
  swift_beginAccess();
  *a4 = *v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D121E6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t), void *a8)
{
  uint64_t v12 = *a1;
  uint64_t v13 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(a2 + v13) = a7(v14);
    swift_release();
  }
  uint64_t v15 = (void *)(*(void *)(a2 + v13) + *a8);
  swift_beginAccess();
  *uint64_t v15 = v12;
  return swift_bridgeObjectRelease();
}

void (*PBCategorySeries.events.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCategorySeries(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D121FE8;
}

void sub_22D121FE8(uint64_t *a1, char a2)
{
}

void sub_22D12201C(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = *(void *)(*a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = *(int *)(v8 + 88);
      uint64_t v11 = *(void *)(v8 + 80);
      a3(0);
      swift_allocObject();
      uint64_t v12 = swift_retain();
      *(void *)(v11 + v10) = a4(v12);
      swift_release();
    }
    uint64_t v13 = (void *)(*(void *)(*(void *)(v8 + 80) + *(int *)(v8 + 88)) + *a5);
    swift_beginAccess();
    void *v13 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v14 = *(int *)(v8 + 88);
      uint64_t v15 = *(void *)(v8 + 80);
      a3(0);
      swift_allocObject();
      uint64_t v16 = swift_retain();
      *(void *)(v15 + v14) = a4(v16);
      swift_release();
    }
    uint64_t v17 = (void *)(*(void *)(*(void *)(v8 + 80) + *(int *)(v8 + 88)) + *a5);
    swift_beginAccess();
    *uint64_t v17 = v9;
  }
  swift_bridgeObjectRelease();
  free((void *)v8);
}

uint64_t (*PBCategorySeries.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCategorySeries.Range.min.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCategorySeries.Range.max.modify())()
{
  return nullsub_1;
}

uint64_t PBCategorySeries.Range.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBCategorySeries.Range, a1);
}

uint64_t PBCategorySeries.Range.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBCategorySeries.Range);
}

uint64_t (*PBCategorySeries.Range.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBCategorySeries.Range.init()@<X0>(void *a1@<X8>)
{
  return sub_22D1222B0((void (*)(void))type metadata accessor for PBCategorySeries.Range, a1);
}

uint64_t sub_22D1222B0@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a1(0);
  return sub_22D2BBFE0();
}

uint64_t PBCategorySeries.Event.raw.getter()
{
  return sub_22D124CF4(type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_22D122308(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + v4) = sub_22D1674C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v6 + 16) = v3;
  return result;
}

void (*PBCategorySeries.Event.raw.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 16);
  return sub_22D12243C;
}

void sub_22D12243C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v7 + v6) = sub_22D1674C4(v8);
    swift_release();
  }
LABEL_4:
  uint64_t v9 = (_DWORD *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84)) + 16);
  swift_beginAccess();
  *uint64_t v9 = v4;
  free((void *)v3);
}

uint64_t PBCategorySeries.Event.value.getter()
{
  return sub_22D12E4A8(type metadata accessor for PBCategorySeries.Event);
}

void (*PBCategorySeries.Event.value.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 32);
  v3[9] = *(void *)(v5 + 24);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1225D0;
}

void sub_22D1225D0(uint64_t *a1, char a2)
{
}

void (*PBCategorySeries.Event.recordedTime.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBDateRange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_22D12280C;
}

void sub_22D12280C(uint64_t a1, char a2)
{
}

BOOL PBCategorySeries.Event.hasRecordedTime.getter()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v5 = type metadata accessor for PBDateRange(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  return v6;
}

Swift::Void __swiftcall PBCategorySeries.Event.clearRecordedTime()()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1674C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBCategorySeries.Event.source.getter()
{
  return sub_22D11923C(type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

void (*PBCategorySeries.Event.source.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D122BE8;
}

void sub_22D122BE8(uint64_t *a1, char a2)
{
}

uint64_t PBCategorySeries.Event.additionalData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D122C58(type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, a1);
}

uint64_t sub_22D122C58@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, unint64_t *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(v5 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  return sub_22D1B9E60(v9, a5, a3, a4);
}

uint64_t sub_22D122CE4(uint64_t a1, uint64_t a2)
{
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  sub_22D1B9E60(a1, (uint64_t)&v11 - v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(a2 + v7) = sub_22D1674C4(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(a2 + v7)
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v9, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

uint64_t PBCategorySeries.Event.additionalData.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_22D1674C4(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3)
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C(a1, v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

void (*PBCategorySeries.Event.additionalData.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  v3[10] = malloc(v5);
  uint64_t v6 = malloc(v5);
  v3[11] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  *((_DWORD *)v3 + 24) = v7;
  uint64_t v8 = *(void *)(v1 + v7)
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v8, (uint64_t)v6, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  return sub_22D123070;
}

void sub_22D123070(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    sub_22D1B9E60(*(void *)(v2 + 88), *(void *)(v2 + 80), &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v3 = *(int *)(v2 + 96);
      uint64_t v4 = *(void *)(v2 + 72);
      type metadata accessor for PBCategorySeries.Event._StorageClass(0);
      swift_allocObject();
      uint64_t v5 = swift_retain();
      *(void *)(v4 + v3) = sub_22D1674C4(v5);
      swift_release();
    }
    uint64_t v7 = *(void **)(v2 + 80);
    uint64_t v6 = *(void **)(v2 + 88);
    uint64_t v8 = *(void *)(*(void *)(v2 + 72) + *(int *)(v2 + 96))
       + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
    swift_beginAccess();
    swift_retain();
    sub_22D1B9D9C((uint64_t)v7, v8, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    swift_endAccess();
    swift_release();
    sub_22D1D08A0((uint64_t)v6, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 72);
      type metadata accessor for PBCategorySeries.Event._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1674C4(v11);
      swift_release();
    }
    uint64_t v7 = *(void **)(v2 + 80);
    uint64_t v6 = *(void **)(v2 + 88);
    uint64_t v12 = *(void *)(*(void *)(v2 + 72) + *(int *)(v2 + 96))
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
    swift_beginAccess();
    swift_retain();
    sub_22D1B9D9C((uint64_t)v6, v12, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    swift_endAccess();
    swift_release();
  }
  free(v6);
  free(v7);
  free((void *)v2);
}

uint64_t PBCategorySeries.Event.range.getter@<X0>(void *a1@<X8>)
{
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_5:
    *a1 = 0;
    type metadata accessor for PBCategorySeries.Range(0);
    return sub_22D2BBFE0();
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_5;
  }
  return sub_22D1D06E8((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBCategorySeries.Range);
}

uint64_t PBCategorySeries.Event.range.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1674C4(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBCategorySeries.Range);
  uint64_t v12 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  swift_endAccess();
  return swift_release();
}

void (*PBCategorySeries.Event.range.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  size_t v6 = *(void *)(*(void *)(type metadata accessor for PBCategorySeries.Range(0) - 8) + 64);
  v3[5] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[6] = v7;
  uint64_t v8 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v8, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v9 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBCategorySeries.Range);
      return sub_22D1238AC;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  *uint64_t v7 = 0;
  sub_22D2BBFE0();
  return sub_22D1238AC;
}

void sub_22D1238AC(uint64_t a1, char a2)
{
}

uint64_t PBCategorySeries.Event.heartRateEventThreshold.getter()
{
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v5 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_22D1D08A0((uint64_t)v3, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return *(void *)v3;
    }
    sub_22D1B9750((uint64_t)v3, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  }
  return 0;
}

void (*PBCategorySeries.Event.heartRateEventThreshold.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v5 = (uint64_t *)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  uint64_t v8 = *v5;
  unint64_t v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_22D123C48;
}

void sub_22D123C48(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 48);
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    swift_bridgeObjectRetain();
    PBCategorySeries.Event.heartRateEventThreshold.setter(v3, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    PBCategorySeries.Event.heartRateEventThreshold.setter(*(void *)(*(void *)a1 + 24), v5);
  }
  free(v4);
  free(v2);
}

uint64_t PBCategorySeries.Event.sleepAnalysis.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    uint64_t result = sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    uint64_t v9 = 0;
    char v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 2)
  {
    uint64_t result = sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)v5;
  char v10 = v5[8];
LABEL_7:
  *(void *)a1 = v9;
  *(unsigned char *)(a1 + 8) = v10;
  return result;
}

uint64_t PBCategorySeries.Event.sleepAnalysis.setter(uint64_t *a1)
{
  return sub_22D11F100(a1);
}

void (*PBCategorySeries.Event.sleepAnalysis.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    uint64_t v8 = 0;
    char v9 = 1;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)v5;
  char v9 = v5[8];
LABEL_7:
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v9;
  return sub_22D124058;
}

void sub_22D124058(uint64_t a1, uint64_t a2)
{
}

uint64_t PBCategorySeries.Event.cycleFactor.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    uint64_t result = sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    uint64_t v9 = 0;
    char v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 3)
  {
    uint64_t result = sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)v5;
  char v10 = v5[8];
LABEL_7:
  *(void *)a1 = v9;
  *(unsigned char *)(a1 + 8) = v10;
  return result;
}

uint64_t PBCategorySeries.Event.cycleFactor.setter(uint64_t *a1)
{
  return sub_22D11F100(a1);
}

void (*PBCategorySeries.Event.cycleFactor.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    uint64_t v8 = 0;
    char v9 = 1;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)v5;
  char v9 = v5[8];
LABEL_7:
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v9;
  return sub_22D1243F4;
}

void sub_22D1243F4(uint64_t a1, uint64_t a2)
{
}

uint64_t PBCategorySeries.Event.steadinessEvent.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    uint64_t result = sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    uint64_t v9 = 0;
    char v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 4)
  {
    uint64_t result = sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)v5;
  char v10 = v5[8];
LABEL_7:
  *(void *)a1 = v9;
  *(unsigned char *)(a1 + 8) = v10;
  return result;
}

void (*PBCategorySeries.Event.steadinessEvent.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    uint64_t v8 = 0;
    char v9 = 1;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)v5;
  char v9 = v5[8];
LABEL_7:
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v9;
  return sub_22D124788;
}

void sub_22D124788(uint64_t a1, uint64_t a2)
{
}

uint64_t PBCategorySeries.Event.steadinessClassification.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    uint64_t result = sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    uint64_t v9 = 0;
    char v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 5)
  {
    uint64_t result = sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)v5;
  char v10 = v5[8];
LABEL_7:
  *(void *)a1 = v9;
  *(unsigned char *)(a1 + 8) = v10;
  return result;
}

void (*PBCategorySeries.Event.steadinessClassification.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v7 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_6:
    uint64_t v8 = 0;
    char v9 = 1;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)v5;
  char v9 = v5[8];
LABEL_7:
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v9;
  return sub_22D124B1C;
}

void sub_22D124B1C(uint64_t a1, uint64_t a2)
{
}

void sub_22D124B34(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *))
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 32);
  uint64_t v5 = *(void **)(*(void *)a1 + 48);
  uint64_t v6 = *(void *)(*(void *)a1 + 24);
  char v7 = v4;
  a3(&v6);
  free(v5);
  free(v3);
}

uint64_t (*PBCategorySeries.Event.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t static PBCategorySeries.Range.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B6AEC(a1, a2, type metadata accessor for PBCategorySeries.Range) & 1;
}

uint64_t (*PBCharacteristics.bloodType.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCharacteristics.biologicalSex.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCharacteristics.dataOfBirth.modify())()
{
  return nullsub_1;
}

uint64_t PBCharacteristics.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D120BB8(type metadata accessor for PBCharacteristics, a1);
}

uint64_t PBCharacteristics.unknownFields.setter(uint64_t a1)
{
  return sub_22D120C50(a1, type metadata accessor for PBCharacteristics);
}

uint64_t (*PBCharacteristics.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBWorkout.totalEnergyBurned.getter()
{
  return sub_22D124CF4(type metadata accessor for PBWorkout);
}

uint64_t sub_22D124CF4(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v2 + 16);
}

uint64_t sub_22D124D48(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_22D1B9810(v5);
    swift_release();
    *(void *)(a2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 16) = v3;
  return result;
}

uint64_t PBWorkout.totalEnergyBurned.setter(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_22D1B9810(v5);
    swift_release();
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 16) = a1;
  return result;
}

void (*PBWorkout.totalEnergyBurned.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 16);
  return sub_22D124F30;
}

void sub_22D124F30(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_22D1B9810(v8);
    swift_release();
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  char v10 = (_DWORD *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84)) + 16);
  swift_beginAccess();
  *char v10 = v4;
  free((void *)v3);
}

uint64_t PBWorkout.totalDistance.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 20);
}

uint64_t sub_22D12506C(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_22D1B9810(v5);
    swift_release();
    *(void *)(a2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 20) = v3;
  return result;
}

uint64_t PBWorkout.totalDistance.setter(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_22D1B9810(v5);
    swift_release();
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 20) = a1;
  return result;
}

void (*PBWorkout.totalDistance.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 20);
  return sub_22D125254;
}

void sub_22D125254(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_22D1B9810(v8);
    swift_release();
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  char v10 = (_DWORD *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84)) + 20);
  swift_beginAccess();
  *char v10 = v4;
  free((void *)v3);
}

uint64_t PBWorkout.activityType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 32);
  *(void *)a1 = *(void *)(v3 + 24);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_22D1253A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_22D1B9810(v6);
    swift_release();
    *(void *)(a2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v8 + 24) = v3;
  *(unsigned char *)(v8 + 32) = v4;
  return result;
}

uint64_t PBWorkout.activityType.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_22D1B9810(v6);
    swift_release();
    *(void *)(v2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v8 + 24) = v3;
  *(unsigned char *)(v8 + 32) = v4;
  return result;
}

void (*PBWorkout.activityType.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 32);
  v3[9] = *(void *)(v5 + 24);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D1255A0;
}

void sub_22D1255A0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = sub_22D1B9810(v9);
    swift_release();
    *(void *)(v8 + v7) = v10;
    swift_release();
  }
LABEL_4:
  uint64_t v11 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v11 + 24) = v4;
  *(unsigned char *)(v11 + 32) = v5;
  free((void *)v3);
}

uint64_t PBWorkout.totalFlightsClimbed.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 36);
}

uint64_t sub_22D1256E0(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_22D1B9810(v5);
    swift_release();
    *(void *)(a2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 36) = v3;
  return result;
}

uint64_t PBWorkout.totalFlightsClimbed.setter(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_22D1B9810(v5);
    swift_release();
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 36) = a1;
  return result;
}

void (*PBWorkout.totalFlightsClimbed.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 36);
  return sub_22D1258C8;
}

void sub_22D1258C8(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_22D1B9810(v8);
    swift_release();
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (_DWORD *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84)) + 36);
  swift_beginAccess();
  *uint64_t v10 = v4;
  free((void *)v3);
}

uint64_t PBWorkout.duration.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 40);
}

uint64_t sub_22D125A04(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_22D1B9810(v5);
    swift_release();
    *(void *)(a2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 40) = v3;
  return result;
}

uint64_t PBWorkout.duration.setter(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_22D1B9810(v5);
    swift_release();
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 40) = a1;
  return result;
}

void (*PBWorkout.duration.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 40);
  return sub_22D125BEC;
}

void sub_22D125BEC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_22D1B9810(v8);
    swift_release();
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (_DWORD *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84)) + 40);
  swift_beginAccess();
  *uint64_t v10 = v4;
  free((void *)v3);
}

uint64_t PBWorkout.dateRange.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    uint64_t v12 = sub_22D1B9810(v11);
    swift_release();
    *(void *)(v2 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_22D1D06E8(a1, (uint64_t)v9, type metadata accessor for PBDateRange);
  uint64_t v14 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_22D1D0910((uint64_t)v9, (uint64_t)v7, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v7, v15, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

void (*PBWorkout.dateRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBDateRange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBWorkout(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_22D1260FC;
}

void sub_22D1260FC(uint64_t a1, char a2)
{
}

BOOL PBWorkout.hasDateRange.getter()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBWorkout(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v5 = type metadata accessor for PBDateRange(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  return v6;
}

Swift::Void __swiftcall PBWorkout.clearDateRange()()
{
  uint64_t v1 = v0;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - v3;
  uint64_t v5 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_22D1B9810(v6);
    swift_release();
    *(void *)(v1 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v4, v10, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBWorkout.totalSwimmingStrokeCount.getter()
{
  return sub_22D12650C(type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
}

uint64_t PBWorkout.totalSwimmingStrokeCount.setter(int a1)
{
  return sub_22D126634(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
}

void (*PBWorkout.totalSwimmingStrokeCount.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = (_DWORD *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_22D1264E0;
}

void sub_22D1264E0(uint64_t *a1, char a2)
{
}

uint64_t PBWorkout.averageHeartRate.getter()
{
  return sub_22D12650C(type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
}

uint64_t sub_22D12650C(uint64_t (*a1)(void), void *a2)
{
  uint64_t v3 = (unsigned int *)(*(void *)(v2 + *(int *)(a1(0) + 20)) + *a2);
  swift_beginAccess();
  return *v3;
}

uint64_t sub_22D12656C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  int v7 = *a1;
  uint64_t v8 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = sub_22D1B9810(v9);
    swift_release();
    *(void *)(a2 + v8) = v10;
    swift_release();
  }
  uint64_t v11 = (_DWORD *)(*(void *)(a2 + v8) + *a5);
  uint64_t result = swift_beginAccess();
  *uint64_t v11 = v7;
  return result;
}

uint64_t PBWorkout.averageHeartRate.setter(int a1)
{
  return sub_22D126634(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
}

uint64_t sub_22D126634(int a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_22D1B9810(v7);
    swift_release();
    *(void *)(v4 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = (_DWORD *)(*(void *)(v4 + v6) + *a2);
  uint64_t result = swift_beginAccess();
  *uint64_t v9 = a1;
  return result;
}

void (*PBWorkout.averageHeartRate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBWorkout(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = (_DWORD *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_22D126784;
}

void sub_22D126784(uint64_t *a1, char a2)
{
}

void sub_22D126790(uint64_t *a1, char a2, void *a3)
{
  uint64_t v5 = *a1;
  int v6 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v8 = *(int *)(v5 + 84);
    uint64_t v9 = *(void *)(v5 + 72);
    type metadata accessor for PBWorkout._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    uint64_t v11 = sub_22D1B9810(v10);
    swift_release();
    *(void *)(v9 + v8) = v11;
    swift_release();
  }
LABEL_4:
  uint64_t v12 = (_DWORD *)(*(void *)(*(void *)(v5 + 72) + *(int *)(v5 + 84)) + *a3);
  swift_beginAccess();
  *uint64_t v12 = v6;
  free((void *)v5);
}

uint64_t (*PBWorkout.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBAllClinicalRecords.records.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBAllClinicalRecords.records.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*PBAllClinicalRecords.records.modify())()
{
  return nullsub_1;
}

uint64_t PBAllClinicalRecords.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D12691C(type metadata accessor for PBAllClinicalRecords, a1);
}

uint64_t sub_22D12691C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_22D2BBFF0();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PBAllClinicalRecords.unknownFields.setter(uint64_t a1)
{
  return sub_22D1269B4(a1, type metadata accessor for PBAllClinicalRecords);
}

uint64_t sub_22D1269B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_22D2BBFF0();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBAllClinicalRecords.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBClinicalRecord.clinicalTypeIdentifier.getter()
{
  return sub_22D126A90(type metadata accessor for PBClinicalRecord);
}

uint64_t sub_22D126A90(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t PBClinicalRecord.clinicalTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D126B34(a1, a2, type metadata accessor for PBClinicalRecord, (void (*)(void))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B90F4);
}

uint64_t sub_22D126B34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v11 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    uint64_t v13 = a5(v12);
    swift_release();
    *(void *)(v8 + v11) = v13;
    swift_release();
  }
  uint64_t v14 = *(void *)(v8 + v11);
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBClinicalRecord.clinicalTypeIdentifier.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D126C9C;
}

void sub_22D126C9C(uint64_t *a1, char a2)
{
}

uint64_t PBClinicalRecord.fhirResource.getter()
{
  return sub_22D12A9FC(type metadata accessor for PBClinicalRecord);
}

uint64_t PBClinicalRecord.fhirResource.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D126D20(a1, a2, type metadata accessor for PBClinicalRecord, (void (*)(void))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B90F4);
}

uint64_t sub_22D126D20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v11 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    uint64_t v13 = a5(v12);
    swift_release();
    *(void *)(v8 + v11) = v13;
    swift_release();
  }
  uint64_t v14 = *(void *)(v8 + v11);
  swift_beginAccess();
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBClinicalRecord.fhirResource.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D126E88;
}

void sub_22D126E88(uint64_t *a1, char a2)
{
}

uint64_t PBClinicalRecord.primaryConcept.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D127084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBClinicalRecord.primaryConcept.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D127490;
}

void sub_22D127490(uint64_t a1, char a2)
{
}

BOOL PBClinicalRecord.hasPrimaryConcept.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBClinicalRecord.clearPrimaryConcept()()
{
  uint64_t v1 = v0;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - v3;
  uint64_t v5 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    BOOL v6 = (void *)swift_retain();
    uint64_t v7 = sub_22D1B90F4(v6);
    swift_release();
    *(void *)(v1 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v4, v10, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t sub_22D1277B4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X4>, unint64_t *a4@<X5>, uint64_t (*a5)(uint64_t)@<X6>, uint64_t a6@<X8>)
{
  uint64_t v9 = *(void *)(a1 + *(int *)(a2(0) + 20)) + *a3;
  swift_beginAccess();
  return sub_22D1B9E60(v9, a6, a4, a5);
}

uint64_t sub_22D127840(uint64_t a1, uint64_t a2)
{
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  BOOL v6 = (char *)&v12 - v5;
  sub_22D1B9E60(a1, (uint64_t)&v12 - v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v7 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = (void *)swift_retain();
    uint64_t v9 = sub_22D1B90F4(v8);
    swift_release();
    *(void *)(a2 + v7) = v9;
    swift_release();
  }
  uint64_t v10 = *(void *)(a2 + v7)
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v10, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  swift_endAccess();
  return swift_release();
}

uint64_t PBClinicalRecord.medicalRecord.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    BOOL v6 = sub_22D1B90F4(v5);
    swift_release();
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C(a1, v7, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  swift_endAccess();
  return swift_release();
}

void (*PBClinicalRecord.medicalRecord.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  v3[10] = malloc(v5);
  BOOL v6 = malloc(v5);
  v3[11] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v7;
  uint64_t v8 = *(void *)(v1 + v7)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v8, (uint64_t)v6, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  return sub_22D127BD4;
}

void sub_22D127BD4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    sub_22D1B9E60(*(void *)(v2 + 88), *(void *)(v2 + 80), &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v3 = *(int *)(v2 + 96);
      uint64_t v4 = *(void *)(v2 + 72);
      type metadata accessor for PBClinicalRecord._StorageClass(0);
      swift_allocObject();
      size_t v5 = (void *)swift_retain();
      BOOL v6 = sub_22D1B90F4(v5);
      swift_release();
      *(void *)(v4 + v3) = v6;
      swift_release();
    }
    uint64_t v8 = *(void **)(v2 + 80);
    uint64_t v7 = *(void **)(v2 + 88);
    uint64_t v9 = *(void *)(*(void *)(v2 + 72) + *(int *)(v2 + 96))
       + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
    swift_beginAccess();
    swift_retain();
    sub_22D1B9D9C((uint64_t)v8, v9, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    swift_endAccess();
    swift_release();
    sub_22D1D08A0((uint64_t)v7, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = *(int *)(v2 + 96);
      uint64_t v11 = *(void *)(v2 + 72);
      type metadata accessor for PBClinicalRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v12 = (void *)swift_retain();
      uint64_t v13 = sub_22D1B90F4(v12);
      swift_release();
      *(void *)(v11 + v10) = v13;
      swift_release();
    }
    uint64_t v8 = *(void **)(v2 + 80);
    uint64_t v7 = *(void **)(v2 + 88);
    uint64_t v14 = *(void *)(*(void *)(v2 + 72) + *(int *)(v2 + 96))
        + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
    swift_beginAccess();
    swift_retain();
    sub_22D1B9D9C((uint64_t)v7, v14, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    swift_endAccess();
    swift_release();
  }
  free(v7);
  free(v8);
  free((void *)v2);
}

uint64_t PBClinicalRecord.allergyRecord.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKAllergyRecord);
}

uint64_t PBHKAllergyRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKAllergyRecord, &qword_26853D030, &qword_2685402E8, a1);
}

void (*PBClinicalRecord.allergyRecord.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKAllergyRecord(0);
  size_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  uint64_t v8 = (char *)malloc(v7);
  v3[6] = v8;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKAllergyRecord);
      return sub_22D1280BC;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v11 = *(int *)(v6 + 20);
  if (qword_26853D030 != -1) {
    swift_once();
  }
  *(void *)&v8[v11] = qword_2685402E8;
  swift_retain();
  return sub_22D1280BC;
}

void sub_22D1280BC(uint64_t a1, char a2)
{
}

uint64_t PBClinicalRecord.conditionRecord.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKConditionRecord);
}

uint64_t PBHKConditionRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKConditionRecord, &qword_26853D050, &qword_268540328, a1);
}

void (*PBClinicalRecord.conditionRecord.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConditionRecord(0);
  size_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  uint64_t v8 = (char *)malloc(v7);
  v3[6] = v8;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKConditionRecord);
      return sub_22D1283AC;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v11 = *(int *)(v6 + 20);
  if (qword_26853D050 != -1) {
    swift_once();
  }
  *(void *)&v8[v11] = qword_268540328;
  swift_retain();
  return sub_22D1283AC;
}

void sub_22D1283AC(uint64_t a1, char a2)
{
}

uint64_t PBClinicalRecord.vaccinationRecord.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKVaccinationRecord);
}

uint64_t PBHKVaccinationRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKVaccinationRecord, &qword_26853D060, &qword_268540348, a1);
}

void (*PBClinicalRecord.vaccinationRecord.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKVaccinationRecord(0);
  size_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  uint64_t v8 = (char *)malloc(v7);
  v3[6] = v8;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKVaccinationRecord);
      return sub_22D12869C;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v11 = *(int *)(v6 + 20);
  if (qword_26853D060 != -1) {
    swift_once();
  }
  *(void *)&v8[v11] = qword_268540348;
  swift_retain();
  return sub_22D12869C;
}

void sub_22D12869C(uint64_t a1, char a2)
{
}

void (*PBClinicalRecord.medicationDispenseRecord.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  size_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  uint64_t v8 = (char *)malloc(v7);
  v3[6] = v8;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKMedicationDispenseRecord);
      return sub_22D128938;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v11 = *(int *)(v6 + 20);
  if (qword_26853D0B0 != -1) {
    swift_once();
  }
  *(void *)&v8[v11] = qword_2685403F8;
  swift_retain();
  return sub_22D128938;
}

void sub_22D128938(uint64_t a1, char a2)
{
}

void (*PBClinicalRecord.medicationOrder.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKMedicationOrder(0);
  size_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  uint64_t v8 = (char *)malloc(v7);
  v3[6] = v8;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKMedicationOrder);
      return sub_22D128BD4;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v11 = *(int *)(v6 + 20);
  if (qword_26853D0C0 != -1) {
    swift_once();
  }
  *(void *)&v8[v11] = qword_268540418;
  swift_retain();
  return sub_22D128BD4;
}

void sub_22D128BD4(uint64_t a1, char a2)
{
}

void (*PBClinicalRecord.diagnosticTestResult.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKDiagnosticTestResult(0);
  size_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  uint64_t v8 = (char *)malloc(v7);
  v3[6] = v8;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKDiagnosticTestResult);
      return sub_22D128E70;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v11 = *(int *)(v6 + 20);
  if (qword_26853D0D0 != -1) {
    swift_once();
  }
  *(void *)&v8[v11] = qword_268540438;
  swift_retain();
  return sub_22D128E70;
}

void sub_22D128E70(uint64_t a1, char a2)
{
}

uint64_t PBClinicalRecord.diagnosticTestReport.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t PBHKDiagnosticTestReport.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKDiagnosticTestReport, &qword_26853D130, &qword_268540508, a1);
}

void (*PBClinicalRecord.diagnosticTestReport.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKDiagnosticTestReport(0);
  size_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  uint64_t v8 = (char *)malloc(v7);
  v3[6] = v8;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKDiagnosticTestReport);
      return sub_22D129160;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v11 = *(int *)(v6 + 20);
  if (qword_26853D130 != -1) {
    swift_once();
  }
  *(void *)&v8[v11] = qword_268540508;
  swift_retain();
  return sub_22D129160;
}

void sub_22D129160(uint64_t a1, char a2)
{
}

uint64_t PBClinicalRecord.accountOwner.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKAccountOwner);
}

uint64_t PBHKAccountOwner.init()@<X0>(void *a1@<X8>)
{
  return sub_22D11BF38((void (*)(void))type metadata accessor for PBHKAccountOwner, a1);
}

void (*PBClinicalRecord.accountOwner.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  size_t v6 = *(void *)(*(void *)(type metadata accessor for PBHKAccountOwner(0) - 8) + 64);
  v3[5] = malloc(v6);
  size_t v7 = malloc(v6);
  v3[6] = v7;
  uint64_t v8 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v8, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v9 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
LABEL_6:
    *size_t v7 = 0;
    v7[1] = 0xE000000000000000;
    v7[2] = 0;
    void v7[3] = 0xE000000000000000;
    sub_22D2BBFE0();
    return sub_22D1293FC;
  }
  if (swift_getEnumCaseMultiPayload() != 7)
  {
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    goto LABEL_6;
  }
  sub_22D1D06E8((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBHKAccountOwner);
  return sub_22D1293FC;
}

void sub_22D1293FC(uint64_t a1, char a2)
{
}

uint64_t PBClinicalRecord.procedureRecord.setter(uint64_t a1)
{
  return sub_22D11DDCC(a1, type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKProcedureRecord, &qword_26853D148, &qword_268540540, a1);
}

void (*PBClinicalRecord.procedureRecord.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKProcedureRecord(0);
  size_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  uint64_t v8 = (char *)malloc(v7);
  v3[6] = v8;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKProcedureRecord);
      return sub_22D1296EC;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v11 = *(int *)(v6 + 20);
  if (qword_26853D148 != -1) {
    swift_once();
  }
  *(void *)&v8[v11] = qword_268540540;
  swift_retain();
  return sub_22D1296EC;
}

void sub_22D1296EC(uint64_t a1, char a2)
{
}

void (*PBClinicalRecord.medicationRecord.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  size_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKMedicationRecord(0);
  size_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  v3[5] = malloc(v7);
  uint64_t v8 = (char *)malloc(v7);
  v3[6] = v8;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for PBClinicalRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v10 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v5, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBHKMedicationRecord);
      return sub_22D129988;
    }
    sub_22D1B9750((uint64_t)v5, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  }
  sub_22D2BBFE0();
  uint64_t v11 = *(int *)(v6 + 20);
  if (qword_26853D098 != -1) {
    swift_once();
  }
  *(void *)&v8[v11] = qword_2685403C0;
  swift_retain();
  return sub_22D129988;
}

void sub_22D129988(uint64_t a1, char a2)
{
}

uint64_t PBClinicalRecord.source.getter()
{
  return sub_22D11923C(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

void (*PBClinicalRecord.source.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  size_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D129A84;
}

void sub_22D129A84(uint64_t *a1, char a2)
{
}

uint64_t PBClinicalRecord.gatewayID.getter()
{
  return sub_22D11923C(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
}

uint64_t sub_22D129AB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = (void *)swift_retain();
    uint64_t v11 = sub_22D1B90F4(v10);
    swift_release();
    *(void *)(a2 + v9) = v11;
    swift_release();
  }
  uint64_t v12 = (void *)(*(void *)(a2 + v9) + *a5);
  swift_beginAccess();
  *uint64_t v12 = v8;
  v12[1] = v7;
  return swift_bridgeObjectRelease();
}

void (*PBClinicalRecord.gatewayID.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  size_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D129C20;
}

void sub_22D129C20(uint64_t *a1, char a2)
{
}

void sub_22D129C2C(uint64_t *a1, char a2, void *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 72);
  uint64_t v6 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = *(int *)(v4 + 96);
      uint64_t v8 = *(void *)(v4 + 88);
      type metadata accessor for PBClinicalRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v9 = (void *)swift_retain();
      uint64_t v10 = sub_22D1B90F4(v9);
      swift_release();
      *(void *)(v8 + v7) = v10;
      swift_release();
    }
    uint64_t v11 = (void *)(*(void *)(*(void *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    *uint64_t v11 = v5;
    v11[1] = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v12 = *(int *)(v4 + 96);
      uint64_t v13 = *(void *)(v4 + 88);
      type metadata accessor for PBClinicalRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v14 = (void *)swift_retain();
      uint64_t v15 = sub_22D1B90F4(v14);
      swift_release();
      *(void *)(v13 + v12) = v15;
      swift_release();
    }
    uint64_t v16 = (void *)(*(void *)(*(void *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    *uint64_t v16 = v5;
    v16[1] = v6;
  }
  swift_bridgeObjectRelease();
  free((void *)v4);
}

uint64_t PBClinicalRecord.iosDerivedDisplayName.getter()
{
  return sub_22D11923C(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
}

void (*PBClinicalRecord.iosDerivedDisplayName.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D129E7C;
}

void sub_22D129E7C(uint64_t *a1, char a2)
{
}

uint64_t PBClinicalRecord.medicalRecordOriginType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1399D0(type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType, a1);
}

uint64_t sub_22D129EA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = (void *)swift_retain();
    uint64_t v7 = sub_22D1B90F4(v6);
    swift_release();
    *(void *)(a2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(a2 + v5)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v8 = v3;
  *(unsigned char *)(v8 + 8) = v4;
  return result;
}

void (*PBClinicalRecord.medicalRecordOriginType.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 8);
  v3[9] = *(void *)v5;
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D12A008;
}

void sub_22D12A008(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = (void *)swift_retain();
    uint64_t v10 = sub_22D1B90F4(v9);
    swift_release();
    *(void *)(v8 + v7) = v10;
    swift_release();
  }
LABEL_4:
  uint64_t v11 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  swift_beginAccess();
  *(void *)uint64_t v11 = v4;
  *(unsigned char *)(v11 + 8) = v5;
  free((void *)v3);
}

uint64_t (*PBClinicalRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t static PBHKAllergyRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKAllergyRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D175D94) & 1;
}

uint64_t static PBHKConditionRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKConditionRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D179E44) & 1;
}

uint64_t static PBHKVaccinationRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKVaccinationRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D17D540) & 1;
}

uint64_t static PBHKMedicationDispenseRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKMedicationDispenseRecord, sub_22D185610) & 1;
}

uint64_t static PBHKMedicationOrder.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKMedicationOrder, sub_22D1880DC) & 1;
}

uint64_t static PBHKDiagnosticTestResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, sub_22D18B938) & 1;
}

uint64_t static PBHKDiagnosticTestReport.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t (*)(uint64_t, uint64_t))sub_22D198D5C) & 1;
}

uint64_t static PBHKAccountOwner.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B7530(a1, a2, type metadata accessor for PBHKAccountOwner) & 1;
}

uint64_t static PBHKProcedureRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKProcedureRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D19C100) & 1;
}

uint64_t static PBHKMedicationRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKMedicationRecord, sub_22D18340C) & 1;
}

unint64_t PBClinicalRecord.MedicalRecordOriginType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D12A3E4@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void *sub_22D12A3FC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result >= 3uLL;
  *(void *)a2 = *result;
  char v3 = !v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_22D12A418(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D04E8();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D12A464()
{
  qword_26853FFE0 = (uint64_t)&unk_26E05A848;
}

uint64_t static PBClinicalRecord.MedicalRecordOriginType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CEC8);
}

uint64_t static PBClinicalRecord.MedicalRecordOriginType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CEC8, &qword_26853FFE0);
}

uint64_t (*static PBClinicalRecord.MedicalRecordOriginType.allCases.modify())()
{
  if (qword_26853CEC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D12A548@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CEC8, &qword_26853FFE0, a1);
}

uint64_t (*PBFHIRIdentifier.resourceType.modify())()
{
  return nullsub_1;
}

uint64_t (*PBFHIRIdentifier.identifier.modify())()
{
  return nullsub_1;
}

uint64_t PBFHIRIdentifier.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBFHIRIdentifier, a1);
}

uint64_t PBFHIRIdentifier.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBFHIRIdentifier);
}

uint64_t (*PBFHIRIdentifier.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBFHIRIdentifier.init()@<X0>(void *a1@<X8>)
{
  return sub_22D11BF38((void (*)(void))type metadata accessor for PBFHIRIdentifier, a1);
}

uint64_t PBHKConcept.preferredName.getter()
{
  return sub_22D126A90(type metadata accessor for PBHKConcept);
}

uint64_t sub_22D12A654@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  *a3 = *(void *)(v4 + 16);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D12A6B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    uint64_t v14 = a7(v13);
    swift_release();
    *(void *)(a2 + v12) = v14;
    swift_release();
  }
  uint64_t v15 = *(void *)(a2 + v12);
  swift_beginAccess();
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = v10;
  return swift_bridgeObjectRelease();
}

void (*PBHKConcept.preferredName.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12A820;
}

void sub_22D12A820(uint64_t *a1, char a2)
{
}

void sub_22D12A84C(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  uint64_t v8 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      uint64_t v12 = a4(v11);
      swift_release();
      *(void *)(v10 + v9) = v12;
      swift_release();
    }
    uint64_t v13 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v13 + 16) = v7;
    *(void *)(v13 + 24) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v14 = *(int *)(v6 + 96);
      uint64_t v15 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v16 = swift_retain();
      uint64_t v17 = a4(v16);
      swift_release();
      *(void *)(v15 + v14) = v17;
      swift_release();
    }
    uint64_t v18 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v18 + 16) = v7;
    *(void *)(v18 + 24) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKConcept.localizedPreferredName.getter()
{
  return sub_22D12A9FC(type metadata accessor for PBHKConcept);
}

uint64_t sub_22D12A9FC(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_22D12AA60@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 40);
  *a3 = *(void *)(v4 + 32);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D12AAC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    uint64_t v14 = a7(v13);
    swift_release();
    *(void *)(a2 + v12) = v14;
    swift_release();
  }
  uint64_t v15 = *(void *)(a2 + v12);
  swift_beginAccess();
  *(void *)(v15 + 32) = v11;
  *(void *)(v15 + 40) = v10;
  return swift_bridgeObjectRelease();
}

void (*PBHKConcept.localizedPreferredName.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12AC2C;
}

void sub_22D12AC2C(uint64_t *a1, char a2)
{
}

void sub_22D12AC58(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  uint64_t v8 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      uint64_t v12 = a4(v11);
      swift_release();
      *(void *)(v10 + v9) = v12;
      swift_release();
    }
    uint64_t v13 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v13 + 32) = v7;
    *(void *)(v13 + 40) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v14 = *(int *)(v6 + 96);
      uint64_t v15 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v16 = swift_retain();
      uint64_t v17 = a4(v16);
      swift_release();
      *(void *)(v15 + v14) = v17;
      swift_release();
    }
    uint64_t v18 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v18 + 32) = v7;
    *(void *)(v18 + 40) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKConcept.rawIdentifier.getter()
{
  return sub_22D1454AC(type metadata accessor for PBHKConcept);
}

uint64_t sub_22D12AE08(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = (void *)swift_retain();
    uint64_t v7 = sub_22D1B8D74(v6);
    swift_release();
    *(void *)(a2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v8 + 48) = v4;
  *(void *)(v8 + 56) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBHKConcept.rawIdentifier.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 56);
  v3[9] = *(void *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12AF58;
}

void sub_22D12AF58(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBHKConcept._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = (void *)swift_retain();
      uint64_t v8 = sub_22D1B8D74(v7);
      swift_release();
      *(void *)(v6 + v5) = v8;
      swift_release();
    }
    uint64_t v9 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v9 + 48) = v3;
    *(void *)(v9 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = *(int *)(v2 + 96);
      uint64_t v11 = *(void *)(v2 + 88);
      type metadata accessor for PBHKConcept._StorageClass(0);
      swift_allocObject();
      uint64_t v12 = (void *)swift_retain();
      uint64_t v13 = sub_22D1B8D74(v12);
      swift_release();
      *(void *)(v11 + v10) = v13;
      swift_release();
    }
    uint64_t v14 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v14 + 48) = v3;
    *(void *)(v14 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBHKConcept.groupBy.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v1 + *(int *)(v6 + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v6 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D12B298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  uint64_t v8 = *(void *)(a1 + *(int *)(v7 + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  sub_22D1B9E60(v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBHKConcept.groupBy.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(v6 + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D12B694;
}

void sub_22D12B694(uint64_t a1, char a2)
{
}

BOOL PBHKConcept.hasGroupBy.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = type metadata accessor for PBHKConcept(0);
  uint64_t v5 = *(void *)(v0 + *(int *)(v4 + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  sub_22D1B9E60(v5, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKConcept.clearGroupBy()()
{
  uint64_t v1 = v0;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - v3;
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  uint64_t v6 = *(int *)(v5 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = (void *)swift_retain();
    uint64_t v8 = sub_22D1B8D74(v7);
    swift_release();
    *(void *)(v1 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = *(void *)(v1 + v6);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v10 = v9
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v4, v10, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConcept.isInMemory.getter()
{
  return sub_22D1344B0(type metadata accessor for PBHKConcept, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
}

uint64_t sub_22D12B9D8(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    uint64_t v6 = sub_22D1B8D74(v5);
    swift_release();
    *(void *)(a2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = (unsigned char *)(*(void *)(a2 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
  uint64_t result = swift_beginAccess();
  *uint64_t v7 = v3;
  return result;
}

void (*PBHKConcept.isInMemory.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConcept(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_22D12BB28;
}

void sub_22D12BB28(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBHKConcept._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = (void *)swift_retain();
    uint64_t v9 = sub_22D1B8D74(v8);
    swift_release();
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80))
                + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory);
  swift_beginAccess();
  *uint64_t v10 = v4;
  free((void *)v3);
}

uint64_t (*PBHKConcept.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKAllergyRecord.allergy.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D12BE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKAllergyRecord.allergy.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D174AF8(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKAllergyRecord.allergy.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D12C42C;
}

void sub_22D12C42C(uint64_t a1, char a2)
{
}

BOOL PBHKAllergyRecord.hasAllergy.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKAllergyRecord.clearAllergy()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D174AF8(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKAllergyRecord.asserter.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

uint64_t PBHKAllergyRecord.asserter.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

void (*PBHKAllergyRecord.asserter.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12C850;
}

void sub_22D12C850(uint64_t *a1, char a2)
{
}

uint64_t PBHKAllergyRecord.criticality.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D12CA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKAllergyRecord.criticality.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D174AF8(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKAllergyRecord.criticality.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D12D06C;
}

void sub_22D12D06C(uint64_t a1, char a2)
{
}

BOOL PBHKAllergyRecord.hasCriticality.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKAllergyRecord.clearCriticality()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D174AF8(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKAllergyRecord.lastOccurrenceDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
}

uint64_t PBHKAllergyRecord.lastOccurrenceDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
}

void (*PBHKAllergyRecord.lastOccurrenceDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12D490;
}

void sub_22D12D490(uint64_t *a1, char a2)
{
}

uint64_t PBHKAllergyRecord.onsetDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
}

uint64_t PBHKAllergyRecord.onsetDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
}

void (*PBHKAllergyRecord.onsetDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12D5C8;
}

void sub_22D12D5C8(uint64_t *a1, char a2)
{
}

uint64_t PBHKAllergyRecord.reactions.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKAllergyRecord);
}

uint64_t PBHKAllergyRecord.reactions.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
}

void (*PBHKAllergyRecord.reactions.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D12D700;
}

void sub_22D12D700(uint64_t *a1, char a2)
{
}

uint64_t PBHKAllergyRecord.recordedDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

void (*PBHKAllergyRecord.recordedDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12D818;
}

void sub_22D12D818(uint64_t *a1, char a2)
{
}

uint64_t PBHKAllergyRecord.status.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D12DA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKAllergyRecord.status.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D174AF8(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKAllergyRecord.status.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D12E034;
}

void sub_22D12E034(uint64_t a1, char a2)
{
}

BOOL PBHKAllergyRecord.hasStatus.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKAllergyRecord.clearStatus()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D174AF8(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKAllergyRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKAllergyReaction.manifestations.getter()
{
  return sub_22D14B4D4((void (*)(void))type metadata accessor for PBHKAllergyReaction);
}

uint64_t PBHKAllergyReaction.manifestations.setter(uint64_t a1)
{
  return sub_22D14B698(a1, type metadata accessor for PBHKAllergyReaction, (void (*)(void))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_22D177070);
}

void (*PBHKAllergyReaction.manifestations.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  return sub_22D12E464;
}

void sub_22D12E464(uint64_t *a1, char a2)
{
}

uint64_t PBHKAllergyReaction.onsetDate.getter()
{
  return sub_22D12E4A8(type metadata accessor for PBHKAllergyReaction);
}

uint64_t sub_22D12E4A8(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_22D12E50C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 32);
  *a3 = *(void *)(v4 + 24);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D12E56C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(a2 + v12) = a7(v13);
    swift_release();
  }
  uint64_t v14 = *(void *)(a2 + v12);
  swift_beginAccess();
  *(void *)(v14 + 24) = v11;
  *(void *)(v14 + 32) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKAllergyReaction.onsetDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D12E680(a1, a2, type metadata accessor for PBHKAllergyReaction, (void (*)(void))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_22D177070);
}

uint64_t sub_22D12E680(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a5(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(v5 + v10);
  swift_beginAccess();
  *(void *)(v12 + 24) = a1;
  *(void *)(v12 + 32) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBHKAllergyReaction.onsetDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 32);
  v3[9] = *(void *)(v5 + 24);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12E7E4;
}

void sub_22D12E7E4(uint64_t *a1, char a2)
{
}

void sub_22D12E810(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  uint64_t v8 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = a4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v12 + 24) = v7;
    *(void *)(v12 + 32) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v6 + 96);
      uint64_t v14 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = a4(v15);
      swift_release();
    }
    uint64_t v16 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v16 + 24) = v7;
    *(void *)(v16 + 32) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKAllergyReaction.severity.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D12EB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKAllergyReaction.severity.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyReaction._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = (void *)swift_retain();
    *(void *)(v1 + v9) = sub_22D177070(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKAllergyReaction.severity.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D12F180;
}

void sub_22D12F180(uint64_t a1, char a2)
{
}

BOOL PBHKAllergyReaction.hasSeverity.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKAllergyReaction.clearSeverity()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKAllergyReaction(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKAllergyReaction._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v0 + v4) = sub_22D177070(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKAllergyReaction.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKAllergyReaction.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBHKAllergyReaction, &qword_26853D040, &qword_268540308, a1);
}

uint64_t PBHKConditionRecord.abatementStringValue.getter()
{
  return sub_22D126A90(type metadata accessor for PBHKConditionRecord);
}

uint64_t PBHKConditionRecord.abatementStringValue.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D1516CC(a1, a2, type metadata accessor for PBHKConditionRecord, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D178720);
}

void (*PBHKConditionRecord.abatementStringValue.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12F5E8;
}

void sub_22D12F5E8(uint64_t *a1, char a2)
{
}

uint64_t PBHKConditionRecord.asserter.getter()
{
  return sub_22D12A9FC(type metadata accessor for PBHKConditionRecord);
}

uint64_t PBHKConditionRecord.asserter.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D11996C(a1, a2, type metadata accessor for PBHKConditionRecord, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D178720);
}

void (*PBHKConditionRecord.asserter.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D12F6FC;
}

void sub_22D12F6FC(uint64_t *a1, char a2)
{
}

uint64_t PBHKConditionRecord.bodySites.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D12F778@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20));
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D12F7D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(a2 + v4) = sub_22D178720(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + v4);
  swift_beginAccess();
  *(void *)(v6 + 48) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKConditionRecord.bodySites.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = (void *)swift_retain();
    *(void *)(v1 + v3) = sub_22D178720(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  swift_beginAccess();
  *(void *)(v5 + 48) = a1;
  return swift_bridgeObjectRelease();
}

void (*PBHKConditionRecord.bodySites.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(void *)(v5 + 48);
  swift_bridgeObjectRetain();
  return sub_22D12F9D4;
}

void sub_22D12F9D4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = *(int *)(v2 + 88);
      uint64_t v5 = *(void *)(v2 + 80);
      type metadata accessor for PBHKConditionRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v6 = (void *)swift_retain();
      *(void *)(v5 + v4) = sub_22D178720(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v7 + 48) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = *(int *)(v2 + 88);
      uint64_t v9 = *(void *)(v2 + 80);
      type metadata accessor for PBHKConditionRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v10 = (void *)swift_retain();
      *(void *)(v9 + v8) = sub_22D178720(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v11 + 48) = v3;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBHKConditionRecord.category.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D12FD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.category.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = (void *)swift_retain();
    *(void *)(v1 + v9) = sub_22D178720(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.category.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D13032C;
}

void sub_22D13032C(uint64_t a1, char a2)
{
}

BOOL PBHKConditionRecord.hasCategory.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKConditionRecord.clearCategory()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v0 + v4) = sub_22D178720(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConditionRecord.clinicalStatus.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D13081C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.clinicalStatus.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = (void *)swift_retain();
    *(void *)(v1 + v9) = sub_22D178720(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.clinicalStatus.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D130E34;
}

void sub_22D130E34(uint64_t a1, char a2)
{
}

BOOL PBHKConditionRecord.hasClinicalStatus.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKConditionRecord.clearClinicalStatus()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v0 + v4) = sub_22D178720(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConditionRecord.condition.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D131324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.condition.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = (void *)swift_retain();
    *(void *)(v1 + v9) = sub_22D178720(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.condition.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D13193C;
}

void sub_22D13193C(uint64_t a1, char a2)
{
}

BOOL PBHKConditionRecord.hasCondition.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKConditionRecord.clearCondition()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v0 + v4) = sub_22D178720(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConditionRecord.onsetStringValue.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
}

uint64_t PBHKConditionRecord.onsetStringValue.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKConditionRecord, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D178720, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
}

void (*PBHKConditionRecord.onsetStringValue.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D131D60;
}

void sub_22D131D60(uint64_t *a1, char a2)
{
}

uint64_t PBHKConditionRecord.recordedDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKConditionRecord, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D178720, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

void (*PBHKConditionRecord.recordedDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D131E78;
}

void sub_22D131E78(uint64_t *a1, char a2)
{
}

uint64_t PBHKConditionRecord.severity.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D13207C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.severity.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = (void *)swift_retain();
    *(void *)(v1 + v9) = sub_22D178720(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.severity.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D132694;
}

void sub_22D132694(uint64_t a1, char a2)
{
}

BOOL PBHKConditionRecord.hasSeverity.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKConditionRecord.clearSeverity()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v0 + v4) = sub_22D178720(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKConditionRecord.verificationStatus.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D132B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKConditionRecord.verificationStatus.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = (void *)swift_retain();
    *(void *)(v1 + v9) = sub_22D178720(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKConditionRecord.verificationStatus.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D13319C;
}

void sub_22D13319C(uint64_t a1, char a2)
{
}

BOOL PBHKConditionRecord.hasVerificationStatus.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKConditionRecord.clearVerificationStatus()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKConditionRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKConditionRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v0 + v4) = sub_22D178720(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKConditionRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKVaccinationRecord.administrationDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D1516CC(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54);
}

void (*PBHKVaccinationRecord.administrationDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1335B4;
}

void sub_22D1335B4(uint64_t *a1, char a2)
{
}

uint64_t PBHKVaccinationRecord.bodySite.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D1337B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKVaccinationRecord.bodySite.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D17BB54(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKVaccinationRecord.bodySite.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D133DC8;
}

void sub_22D133DC8(uint64_t a1, char a2)
{
}

BOOL PBHKVaccinationRecord.hasBodySite.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKVaccinationRecord.clearBodySite()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D17BB54(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKVaccinationRecord.doseNumber.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
}

uint64_t PBHKVaccinationRecord.doseNumber.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
}

void (*PBHKVaccinationRecord.doseNumber.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1341EC;
}

void sub_22D1341EC(uint64_t *a1, char a2)
{
}

uint64_t PBHKVaccinationRecord.doseQuantity.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
}

uint64_t PBHKVaccinationRecord.doseQuantity.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
}

void (*PBHKVaccinationRecord.doseQuantity.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D134324;
}

void sub_22D134324(uint64_t *a1, char a2)
{
}

uint64_t PBHKVaccinationRecord.expirationDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
}

uint64_t PBHKVaccinationRecord.expirationDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
}

void (*PBHKVaccinationRecord.expirationDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13445C;
}

void sub_22D13445C(uint64_t *a1, char a2)
{
}

uint64_t PBHKVaccinationRecord.notGiven.getter()
{
  return sub_22D1344B0(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
}

uint64_t sub_22D1344B0(uint64_t (*a1)(void), void *a2)
{
  uint64_t v3 = (unsigned __int8 *)(*(void *)(v2 + *(int *)(a1(0) + 20)) + *a2);
  swift_beginAccess();
  return *v3;
}

uint64_t PBHKVaccinationRecord.notGiven.setter(char a1)
{
  return sub_22D134558(a1, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
}

uint64_t sub_22D134558(char a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a4(v11);
    swift_release();
  }
  uint64_t v12 = (unsigned char *)(*(void *)(v5 + v10) + *a5);
  uint64_t result = swift_beginAccess();
  *uint64_t v12 = a1 & 1;
  return result;
}

void (*PBHKVaccinationRecord.notGiven.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_22D1346C4;
}

void sub_22D1346C4(uint64_t *a1, char a2)
{
}

uint64_t PBHKVaccinationRecord.patientReported.getter()
{
  return sub_22D1344B0(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
}

uint64_t sub_22D134718(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t), void *a8)
{
  char v12 = *a1;
  uint64_t v13 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(a2 + v13) = a7(v14);
    swift_release();
  }
  uint64_t v15 = (unsigned char *)(*(void *)(a2 + v13) + *a8);
  uint64_t result = swift_beginAccess();
  *uint64_t v15 = v12;
  return result;
}

uint64_t PBHKVaccinationRecord.patientReported.setter(char a1)
{
  return sub_22D134558(a1, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
}

void (*PBHKVaccinationRecord.patientReported.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_22D1348C4;
}

void sub_22D1348C4(uint64_t *a1, char a2)
{
}

void sub_22D1348F8(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v9 = *a1;
  char v10 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v12 = *(int *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    a3(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(v13 + v12) = a4(v14);
    swift_release();
  }
LABEL_4:
  uint64_t v15 = (unsigned char *)(*(void *)(*(void *)(v9 + 72) + *(int *)(v9 + 80)) + *a5);
  swift_beginAccess();
  *uint64_t v15 = v10;
  free((void *)v9);
}

uint64_t PBHKVaccinationRecord.performer.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
}

uint64_t PBHKVaccinationRecord.performer.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
}

void (*PBHKVaccinationRecord.performer.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D134B00;
}

void sub_22D134B00(uint64_t *a1, char a2)
{
}

uint64_t PBHKVaccinationRecord.reaction.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
}

uint64_t PBHKVaccinationRecord.reaction.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
}

void (*PBHKVaccinationRecord.reaction.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D134C38;
}

void sub_22D134C38(uint64_t *a1, char a2)
{
}

uint64_t PBHKVaccinationRecord.reasons.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKVaccinationRecord);
}

uint64_t PBHKVaccinationRecord.reasons.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
}

void (*PBHKVaccinationRecord.reasons.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D134D70;
}

void sub_22D134D70(uint64_t *a1, char a2)
{
}

uint64_t PBHKVaccinationRecord.reasonsNotGiven.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKVaccinationRecord);
}

uint64_t PBHKVaccinationRecord.reasonsNotGiven.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
}

void (*PBHKVaccinationRecord.reasonsNotGiven.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D134EA8;
}

void sub_22D134EA8(uint64_t *a1, char a2)
{
}

uint64_t PBHKVaccinationRecord.route.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D1350AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKVaccinationRecord.route.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D17BB54(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKVaccinationRecord.route.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D1356C4;
}

void sub_22D1356C4(uint64_t a1, char a2)
{
}

BOOL PBHKVaccinationRecord.hasRoute.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKVaccinationRecord.clearRoute()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D17BB54(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKVaccinationRecord.status.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D135BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKVaccinationRecord.status.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D17BB54(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKVaccinationRecord.status.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D1361CC;
}

void sub_22D1361CC(uint64_t a1, char a2)
{
}

BOOL PBHKVaccinationRecord.hasStatus.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKVaccinationRecord.clearStatus()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D17BB54(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKVaccinationRecord.vaccination.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D1366BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKVaccinationRecord.vaccination.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D17BB54(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKVaccinationRecord.vaccination.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D136CD4;
}

void sub_22D136CD4(uint64_t a1, char a2)
{
}

BOOL PBHKVaccinationRecord.hasVaccination.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKVaccinationRecord.clearVaccination()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKVaccinationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D17BB54(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKVaccinationRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationDosage.instruction.getter()
{
  return sub_22D126A90(type metadata accessor for PBMedicationDosage);
}

uint64_t sub_22D137034(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D18D824(v6, &qword_26853D7B0, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationDosage.instruction.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1371B8;
}

void sub_22D1371B8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationDosage._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D18D824(v7, &qword_26853D7B0, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationDosage._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D18D824(v11, &qword_26853D7B0, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationDosage.timingPeriod.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D117BC8(type metadata accessor for PBMedicationDosage, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, a1);
}

void (*PBMedicationDosage.timingPeriod.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBDateRange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBMedicationDosage(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_22D1375C8;
}

void sub_22D1375C8(uint64_t a1, char a2)
{
}

BOOL PBMedicationDosage.hasTimingPeriod.getter()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationDosage(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v5 = type metadata accessor for PBDateRange(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  return v6;
}

Swift::Void __swiftcall PBMedicationDosage.clearTimingPeriod()()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D18D824(v5, &qword_26853D7B0, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBMedicationDosage.unknownFields.modify())()
{
  return nullsub_1;
}

double PBQuantity.value.getter()
{
  return *(double *)v0;
}

void PBQuantity.value.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*PBQuantity.value.modify())()
{
  return nullsub_1;
}

uint64_t PBQuantity.unitString.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBQuantity.unitString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*PBQuantity.unitString.modify())()
{
  return nullsub_1;
}

uint64_t PBQuantity.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBQuantity, a1);
}

uint64_t PBQuantity.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBQuantity);
}

uint64_t (*PBQuantity.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBQuantity.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  type metadata accessor for PBQuantity(0);
  return sub_22D2BBFE0();
}

uint64_t PBGeneralMedication.earliestDosageDate.getter()
{
  return sub_22D126A90(type metadata accessor for PBGeneralMedication);
}

void (*PBGeneralMedication.earliestDosageDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D137B60;
}

void sub_22D137B60(uint64_t *a1, char a2)
{
}

uint64_t PBGeneralMedication.medication.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D137D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBGeneralMedication.medication.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D138168;
}

void sub_22D138168(uint64_t a1, char a2)
{
}

BOOL PBGeneralMedication.hasMedication.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBGeneralMedication.clearMedication()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D18044C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBGeneralMedication.status.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D138658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBGeneralMedication.status.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D138A64;
}

void sub_22D138A64(uint64_t a1, char a2)
{
}

BOOL PBGeneralMedication.hasStatus.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBGeneralMedication(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBGeneralMedication.clearStatus()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBGeneralMedication._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D18044C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBGeneralMedication.dosages.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBGeneralMedication);
}

void (*PBGeneralMedication.dosages.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D138E40;
}

void sub_22D138E40(uint64_t *a1, char a2)
{
}

uint64_t PBGeneralMedication.localizedPreferredName.getter()
{
  return sub_22D11923C(type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
}

uint64_t PBGeneralMedication.localizedPreferredName.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBGeneralMedication, (void (*)(void))type metadata accessor for PBGeneralMedication._StorageClass, sub_22D18044C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
}

void (*PBGeneralMedication.localizedPreferredName.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D138F78;
}

void sub_22D138F78(uint64_t *a1, char a2)
{
}

uint64_t PBGeneralMedication.rxNormCodeSet.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBGeneralMedication);
}

void (*PBGeneralMedication.rxNormCodeSet.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBGeneralMedication(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D139068;
}

void sub_22D139068(uint64_t *a1, char a2)
{
}

uint64_t (*PBGeneralMedication.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_22D1390C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v8 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBGeneralMedication);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D088 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685403A0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853F310, type metadata accessor for PBGeneralMedication);
}

void (*PBHKMedicationRecord.generalMedication.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D088 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685403A0;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBGeneralMedication);
  }
  return sub_22D1394D0;
}

void sub_22D1394D0(uint64_t a1, char a2)
{
}

BOOL PBHKMedicationRecord.hasGeneralMedication.getter()
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v5 = type metadata accessor for PBGeneralMedication(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  return v6;
}

Swift::Void __swiftcall PBHKMedicationRecord.clearGeneralMedication()()
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1823FC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationRecord.asserter.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

void (*PBHKMedicationRecord.asserter.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1398AC;
}

void sub_22D1398AC(uint64_t *a1, char a2)
{
}

void (*PBHKMedicationRecord.assertionDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13997C;
}

void sub_22D13997C(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationRecord.asserterType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1399D0(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType, a1);
}

uint64_t sub_22D1399D0@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  uint64_t result = swift_beginAccess();
  char v7 = *(unsigned char *)(v5 + 8);
  *(void *)a3 = *(void *)v5;
  *(unsigned char *)(a3 + 8) = v7;
  return result;
}

uint64_t sub_22D139A48@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + *(int *)(a2(0) + 20)) + *a3;
  uint64_t result = swift_beginAccess();
  char v7 = *(unsigned char *)(v5 + 8);
  *(void *)a4 = *(void *)v5;
  *(unsigned char *)(a4 + 8) = v7;
  return result;
}

void (*PBHKMedicationRecord.asserterType.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 8);
  v3[9] = *(void *)v5;
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D139B5C;
}

void sub_22D139B5C(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationRecord.effectiveStartDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

void (*PBHKMedicationRecord.effectiveStartDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D139C4C;
}

void sub_22D139C4C(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationRecord.effectiveEndDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

void (*PBHKMedicationRecord.effectiveEndDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D139D3C;
}

void sub_22D139D3C(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationRecord.notTaken.getter()
{
  return sub_22D1344B0(type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
}

void (*PBHKMedicationRecord.notTaken.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_22D139E24;
}

void sub_22D139E24(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationRecord.reasonForUse.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKMedicationRecord);
}

void (*PBHKMedicationRecord.reasonForUse.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D139F14;
}

void sub_22D139F14(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationRecord.reasonsNotTaken.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKMedicationRecord);
}

void (*PBHKMedicationRecord.reasonsNotTaken.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D13A004;
}

void sub_22D13A004(uint64_t *a1, char a2)
{
}

uint64_t (*PBHKMedicationRecord.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t PBHKMedicationRecord.HKClinicalReferencedActorType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 7;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D13A07C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBHKMedicationRecord.HKClinicalReferencedActorType.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D13A084(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D0494();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

BOOL sub_22D13A0D0(uint64_t a1, uint64_t *a2)
{
  return sub_22D0BC5B8(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_22D13A0EC()
{
  qword_26853FFE8 = (uint64_t)&unk_26E05A898;
}

uint64_t static PBHKMedicationRecord.HKClinicalReferencedActorType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CED0);
}

uint64_t static PBHKMedicationRecord.HKClinicalReferencedActorType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CED0, &qword_26853FFE8);
}

uint64_t (*static PBHKMedicationRecord.HKClinicalReferencedActorType.allCases.modify())()
{
  if (qword_26853CED0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D13A1D0@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CED0, &qword_26853FFE8, a1);
}

uint64_t PBHKMedicationDispenseRecord.generalMedication.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v7 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBGeneralMedication);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D088 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685403A0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
}

uint64_t sub_22D13A3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v8 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBGeneralMedication);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D088 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685403A0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853F310, type metadata accessor for PBGeneralMedication);
}

void (*PBHKMedicationDispenseRecord.generalMedication.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D088 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685403A0;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBGeneralMedication);
  }
  return sub_22D13A7D0;
}

void sub_22D13A7D0(uint64_t a1, char a2)
{
}

BOOL PBHKMedicationDispenseRecord.hasGeneralMedication.getter()
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v5 = type metadata accessor for PBGeneralMedication(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  return v6;
}

Swift::Void __swiftcall PBHKMedicationDispenseRecord.clearGeneralMedication()()
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D184680(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationDispenseRecord.daySupplyQuantity.getter@<X0>(void *a1@<X8>)
{
  return sub_22D13B3F8(&OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity, a1);
}

uint64_t PBHKMedicationDispenseRecord.daySupplyQuantity.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D184680(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBQuantity);
  uint64_t v12 = type metadata accessor for PBQuantity(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_268540CC0, type metadata accessor for PBQuantity);
  swift_endAccess();
  return swift_release();
}

void (*PBHKMedicationDispenseRecord.daySupplyQuantity.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBQuantity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_268540CC0, type metadata accessor for PBQuantity);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0;
    v9[2] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_268540CC0, type metadata accessor for PBQuantity);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBQuantity);
  }
  return sub_22D13AF0C;
}

void sub_22D13AF0C(uint64_t a1, char a2)
{
}

BOOL PBHKMedicationDispenseRecord.hasDaySupplyQuantity.getter()
{
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v5 = type metadata accessor for PBQuantity(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_268540CC0, type metadata accessor for PBQuantity);
  return v6;
}

Swift::Void __swiftcall PBHKMedicationDispenseRecord.clearDaySupplyQuantity()()
{
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D184680(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBQuantity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_268540CC0, type metadata accessor for PBQuantity);
  swift_endAccess();
  swift_release();
}

void (*PBHKMedicationDispenseRecord.handOverDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13B2C8;
}

void sub_22D13B2C8(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationDispenseRecord.preparationDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
}

void (*PBHKMedicationDispenseRecord.preparationDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13B3B8;
}

void sub_22D13B3B8(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationDispenseRecord.quantityDispensed.getter@<X0>(void *a1@<X8>)
{
  return sub_22D13B3F8(&OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed, a1);
}

uint64_t sub_22D13B3F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(v2 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20)) + *a1;
  swift_beginAccess();
  sub_22D1B9E60(v8, (uint64_t)v7, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v9 = type metadata accessor for PBQuantity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9) != 1) {
    return sub_22D1D06E8((uint64_t)v7, (uint64_t)a2, type metadata accessor for PBQuantity);
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v7, &qword_268540CC0, type metadata accessor for PBQuantity);
}

uint64_t sub_22D13B594@<X0>(uint64_t a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20)) + *a2;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v8, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v10 = type metadata accessor for PBQuantity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_22D1D06E8((uint64_t)v8, (uint64_t)a3, type metadata accessor for PBQuantity);
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v8, &qword_268540CC0, type metadata accessor for PBQuantity);
}

uint64_t PBHKMedicationDispenseRecord.quantityDispensed.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D184680(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBQuantity);
  uint64_t v12 = type metadata accessor for PBQuantity(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_268540CC0, type metadata accessor for PBQuantity);
  swift_endAccess();
  return swift_release();
}

void (*PBHKMedicationDispenseRecord.quantityDispensed.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBQuantity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_268540CC0, type metadata accessor for PBQuantity);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0;
    v9[2] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_268540CC0, type metadata accessor for PBQuantity);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBQuantity);
  }
  return sub_22D13BB44;
}

void sub_22D13BB44(uint64_t a1, char a2)
{
}

BOOL PBHKMedicationDispenseRecord.hasQuantityDispensed.getter()
{
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v5 = type metadata accessor for PBQuantity(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_268540CC0, type metadata accessor for PBQuantity);
  return v6;
}

Swift::Void __swiftcall PBHKMedicationDispenseRecord.clearQuantityDispensed()()
{
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationDispenseRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D184680(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBQuantity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_268540CC0, type metadata accessor for PBQuantity);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKMedicationDispenseRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationOrder.generalMedication.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v7 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBGeneralMedication);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D088 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685403A0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
}

uint64_t sub_22D13C05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v8 = type metadata accessor for PBGeneralMedication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBGeneralMedication);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D088 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685403A0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853F310, type metadata accessor for PBGeneralMedication);
}

void (*PBHKMedicationOrder.generalMedication.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D088 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685403A0;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBGeneralMedication);
  }
  return sub_22D13C468;
}

void sub_22D13C468(uint64_t a1, char a2)
{
}

BOOL PBHKMedicationOrder.hasGeneralMedication.getter()
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v5 = type metadata accessor for PBGeneralMedication(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  return v6;
}

Swift::Void __swiftcall PBHKMedicationOrder.clearGeneralMedication()()
{
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D186D6C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationOrder.endedDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
}

void (*PBHKMedicationOrder.endedDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13C844;
}

void sub_22D13C844(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationOrder.numberOfFills.getter()
{
  return sub_22D12650C(type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
}

void (*PBHKMedicationOrder.numberOfFills.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = (_DWORD *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_22D13C92C;
}

void sub_22D13C92C(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationOrder.prescriber.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
}

void (*PBHKMedicationOrder.prescriber.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13CA1C;
}

void sub_22D13CA1C(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationOrder.reason.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKMedicationOrder);
}

void (*PBHKMedicationOrder.reason.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D13CB0C;
}

void sub_22D13CB0C(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationOrder.reasonEnded.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D13CD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBHKMedicationOrder.reasonEnded.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D13D11C;
}

void sub_22D13D11C(uint64_t a1, char a2)
{
}

BOOL PBHKMedicationOrder.hasReasonEnded.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKMedicationOrder.clearReasonEnded()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D186D6C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationOrder.statusReason.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D13D60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKMedicationOrder.statusReason.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D186D6C(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKMedicationOrder.statusReason.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D13DC24;
}

void sub_22D13DC24(uint64_t a1, char a2)
{
}

BOOL PBHKMedicationOrder.hasStatusReason.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKMedicationOrder.clearStatusReason()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationOrder._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D186D6C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

void (*PBHKMedicationOrder.writtenDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationOrder(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13DFE0;
}

void sub_22D13DFE0(uint64_t *a1, char a2)
{
}

uint64_t (*PBHKMedicationOrder.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKDiagnosticTestResult.bodySite.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D13E20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBHKDiagnosticTestResult.bodySite.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D13E618;
}

void sub_22D13E618(uint64_t a1, char a2)
{
}

BOOL PBHKDiagnosticTestResult.hasBodySite.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearBodySite()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D189928(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.category.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
}

void (*PBHKDiagnosticTestResult.category.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13E9F4;
}

void sub_22D13E9F4(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestResult.comments.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
}

void (*PBHKDiagnosticTestResult.comments.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13EAE4;
}

void sub_22D13EAE4(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestResult.diagnosticTest.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D13ECE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBHKDiagnosticTestResult.diagnosticTest.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D13F0F4;
}

void sub_22D13F0F4(uint64_t a1, char a2)
{
}

BOOL PBHKDiagnosticTestResult.hasDiagnosticTest.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearDiagnosticTest()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D189928(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.effectiveEndDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

void (*PBHKDiagnosticTestResult.effectiveEndDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13F4D0;
}

void sub_22D13F4D0(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestResult.effectiveStartDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

void (*PBHKDiagnosticTestResult.effectiveStartDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D13F5C0;
}

void sub_22D13F5C0(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestResult.interpretationDeprecated.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D13F7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKDiagnosticTestResult.interpretationDeprecated.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D189928(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKDiagnosticTestResult.interpretationDeprecated.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D13FDDC;
}

void sub_22D13FDDC(uint64_t a1, char a2)
{
}

BOOL PBHKDiagnosticTestResult.hasInterpretationDeprecated.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearInterpretationDeprecated()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D189928(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

void (*PBHKDiagnosticTestResult.issueDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D140198;
}

void sub_22D140198(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestResult.method.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D14039C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBHKDiagnosticTestResult.method.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D1407A8;
}

void sub_22D1407A8(uint64_t a1, char a2)
{
}

BOOL PBHKDiagnosticTestResult.hasMethod.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearMethod()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D189928(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.performers.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKDiagnosticTestResult);
}

void (*PBHKDiagnosticTestResult.performers.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D140B84;
}

void sub_22D140B84(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestResult.referenceRanges.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKDiagnosticTestResult);
}

void (*PBHKDiagnosticTestResult.referenceRanges.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D140C74;
}

void sub_22D140C74(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestResult.status.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D140E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKDiagnosticTestResult.status.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D189928(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKDiagnosticTestResult.status.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D141490;
}

void sub_22D141490(uint64_t a1, char a2)
{
}

BOOL PBHKDiagnosticTestResult.hasStatus.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearStatus()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D189928(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.likelyDisplayString.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
}

uint64_t PBHKDiagnosticTestResult.likelyDisplayString.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
}

void (*PBHKDiagnosticTestResult.likelyDisplayString.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1418B4;
}

void sub_22D1418B4(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestResult.value.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v7 = type metadata accessor for PBHKInspectableValueCollection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValueCollection);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D0F8 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_268540490;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_22D141AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v8 = type metadata accessor for PBHKInspectableValueCollection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValueCollection);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D0F8 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_268540490;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
}

void (*PBHKDiagnosticTestResult.value.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKInspectableValueCollection(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D0F8 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_268540490;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValueCollection);
  }
  return sub_22D141EC4;
}

void sub_22D141EC4(uint64_t a1, char a2)
{
}

BOOL PBHKDiagnosticTestResult.hasValue.getter()
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v5 = type metadata accessor for PBHKInspectableValueCollection(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  return v6;
}

Swift::Void __swiftcall PBHKDiagnosticTestResult.clearValue()()
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D189928(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestResult.interpretation.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKDiagnosticTestResult);
}

void (*PBHKDiagnosticTestResult.interpretation.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestResult(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D1422A0;
}

void sub_22D1422A0(uint64_t *a1, char a2)
{
}

uint64_t (*PBHKDiagnosticTestResult.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKReferenceRange.identifier.getter()
{
  return sub_22D126A90(type metadata accessor for PBHKReferenceRange);
}

uint64_t sub_22D142314(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D18D824(v6, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBHKReferenceRange.identifier.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D142498;
}

void sub_22D142498(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBHKReferenceRange._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D18D824(v7, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBHKReferenceRange._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D18D824(v11, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBHKReferenceRange.valueRange.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v7 = type metadata accessor for PBHKInspectableValueCollection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValueCollection);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D0F8 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_268540490;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_22D142848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v8 = type metadata accessor for PBHKInspectableValueCollection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValueCollection);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D0F8 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_268540490;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
}

void (*PBHKReferenceRange.valueRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKInspectableValueCollection(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D0F8 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_268540490;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValueCollection);
  }
  return sub_22D142C54;
}

void sub_22D142C54(uint64_t a1, char a2)
{
}

BOOL PBHKReferenceRange.hasValueRange.getter()
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v5 = type metadata accessor for PBHKInspectableValueCollection(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  return v6;
}

Swift::Void __swiftcall PBHKReferenceRange.clearValueRange()()
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D18D824(v5, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKReferenceRange.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKRatioValue.numerator.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKRatioValue.denominator.modify())()
{
  return nullsub_1;
}

uint64_t PBHKRatioValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBHKRatioValue, a1);
}

uint64_t PBHKRatioValue.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBHKRatioValue);
}

uint64_t (*PBHKRatioValue.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKInspectableValueCollection.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D144E74(type metadata accessor for PBHKInspectableValueCollection, a1);
}

void (*PBHKInspectableValueCollection.type.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D143134;
}

void sub_22D143134(uint64_t *a1, char a2)
{
}

uint64_t PBHKInspectableValueCollection.value.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v7 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValue);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D108 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685404B0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D143330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v8 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValue);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D108 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685404B0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValueCollection.value.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D108 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685404B0;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValue);
  }
  return sub_22D14373C;
}

void sub_22D14373C(uint64_t a1, char a2)
{
}

BOOL PBHKInspectableValueCollection.hasValue.getter()
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v5 = type metadata accessor for PBHKInspectableValue(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  return v6;
}

Swift::Void __swiftcall PBHKInspectableValueCollection.clearValue()()
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D18F1A0(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValueCollection.min.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v7 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValue);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D108 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685404B0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D143C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v8 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValue);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D108 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685404B0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValueCollection.min.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D108 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685404B0;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValue);
  }
  return sub_22D144038;
}

void sub_22D144038(uint64_t a1, char a2)
{
}

BOOL PBHKInspectableValueCollection.hasMin.getter()
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v5 = type metadata accessor for PBHKInspectableValue(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  return v6;
}

Swift::Void __swiftcall PBHKInspectableValueCollection.clearMin()()
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D18F1A0(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValueCollection.max.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v7 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValue);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D108 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685404B0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D144528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v8 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValue);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D108 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685404B0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValueCollection.max.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D108 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685404B0;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValue);
  }
  return sub_22D144934;
}

void sub_22D144934(uint64_t a1, char a2)
{
}

BOOL PBHKInspectableValueCollection.hasMax.getter()
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v5 = type metadata accessor for PBHKInspectableValue(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  return v6;
}

Swift::Void __swiftcall PBHKInspectableValueCollection.clearMax()()
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D18F1A0(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValueCollection.inspectableValues.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKInspectableValueCollection);
}

void (*PBHKInspectableValueCollection.inspectableValues.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D144D10;
}

void sub_22D144D10(uint64_t *a1, char a2)
{
}

uint64_t PBHKInspectableValueCollection.unitString.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

void (*PBHKInspectableValueCollection.unitString.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValueCollection(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D144E00;
}

void sub_22D144E00(uint64_t *a1, char a2)
{
}

uint64_t (*PBHKInspectableValueCollection.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKInspectableValue.valueType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D144E74(type metadata accessor for PBHKInspectableValue, a1);
}

uint64_t sub_22D144E74@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + *(int *)(a1(0) + 20));
  uint64_t result = swift_beginAccess();
  char v6 = *(unsigned char *)(v4 + 24);
  *(void *)a2 = *(void *)(v4 + 16);
  *(unsigned char *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_22D144ED8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  char v11 = *((unsigned char *)a1 + 8);
  uint64_t v12 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(a2 + v12) = a7(v13);
    swift_release();
  }
  uint64_t v14 = *(void *)(a2 + v12);
  uint64_t result = swift_beginAccess();
  *(void *)(v14 + 16) = v10;
  *(unsigned char *)(v14 + 24) = v11;
  return result;
}

void (*PBHKInspectableValue.valueType.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D145034;
}

void sub_22D145034(uint64_t *a1, char a2)
{
}

void sub_22D145060(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(*a1 + 72);
  char v9 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v11 = *(int *)(v7 + 84);
    uint64_t v12 = *(void *)(v7 + 88);
    a3(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(v12 + v11) = a4(v13);
    swift_release();
  }
LABEL_4:
  uint64_t v14 = *(void *)(*(void *)(v7 + 88) + *(int *)(v7 + 84));
  swift_beginAccess();
  *(void *)(v14 + 16) = v8;
  *(unsigned char *)(v14 + 24) = v9;
  free((void *)v7);
}

uint64_t PBHKInspectableValue.stringValue.getter()
{
  return sub_22D12A9FC(type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D14517C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(a2 + v12) = a7(v13);
    swift_release();
  }
  uint64_t v14 = *(void *)(a2 + v12);
  swift_beginAccess();
  *(void *)(v14 + 32) = v11;
  *(void *)(v14 + 40) = v10;
  return swift_bridgeObjectRelease();
}

void (*PBHKInspectableValue.stringValue.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1452E0;
}

void sub_22D1452E0(uint64_t *a1, char a2)
{
}

void sub_22D14530C(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  uint64_t v8 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = a4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v12 + 32) = v7;
    *(void *)(v12 + 40) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v6 + 96);
      uint64_t v14 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = a4(v15);
      swift_release();
    }
    uint64_t v16 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v16 + 32) = v7;
    *(void *)(v16 + 40) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKInspectableValue.codedQuantityRawValue.getter()
{
  return sub_22D1454AC(type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D1454AC(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_22D145510@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 56);
  *a3 = *(void *)(v4 + 48);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t PBHKInspectableValue.codedQuantityRawValue.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D119BEC(a1, a2, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804);
}

void (*PBHKInspectableValue.codedQuantityRawValue.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 56);
  v3[9] = *(void *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D145640;
}

void sub_22D145640(uint64_t *a1, char a2)
{
}

uint64_t PBHKInspectableValue.ratioValue.getter@<X0>(void *a1@<X8>)
{
  sub_22D167880(0, &qword_26853E858, type metadata accessor for PBHKRatioValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  uint64_t v7 = type metadata accessor for PBHKRatioValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBHKRatioValue);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E858, type metadata accessor for PBHKRatioValue);
}

uint64_t sub_22D145808@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_22D167880(0, &qword_26853E858, type metadata accessor for PBHKRatioValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  uint64_t v8 = type metadata accessor for PBHKRatioValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, (uint64_t)a2, type metadata accessor for PBHKRatioValue);
  }
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853E858, type metadata accessor for PBHKRatioValue);
}

void (*PBHKInspectableValue.ratioValue.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E858, type metadata accessor for PBHKRatioValue, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKRatioValue(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKRatioValue);
  }
  return sub_22D145BAC;
}

void sub_22D145BAC(uint64_t a1, char a2)
{
}

BOOL PBHKInspectableValue.hasRatioValue.getter()
{
  sub_22D167880(0, &qword_26853E858, type metadata accessor for PBHKRatioValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  uint64_t v5 = type metadata accessor for PBHKRatioValue(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  return v6;
}

Swift::Void __swiftcall PBHKInspectableValue.clearRatioValue()()
{
  sub_22D167880(0, &qword_26853E858, type metadata accessor for PBHKRatioValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D191804(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKRatioValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValue.medicalDateString.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
}

void (*PBHKInspectableValue.medicalDateString.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D145F88;
}

void sub_22D145F88(uint64_t *a1, char a2)
{
}

uint64_t PBHKInspectableValue.medicalDateIntervalString.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D117BC8(type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString, a1);
}

void (*PBHKInspectableValue.medicalDateIntervalString.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBDateRange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_22D1461EC;
}

void sub_22D1461EC(uint64_t a1, char a2)
{
}

BOOL PBHKInspectableValue.hasMedicalDateIntervalString.getter()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v5 = type metadata accessor for PBDateRange(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  return v6;
}

Swift::Void __swiftcall PBHKInspectableValue.clearMedicalDateIntervalString()()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D191804(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValue.dateFromDateComponents.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
}

void (*PBHKInspectableValue.dateFromDateComponents.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1465C8;
}

void sub_22D1465C8(uint64_t *a1, char a2)
{
}

uint64_t PBHKInspectableValue.medicalCodingsDisplayStrings.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValue.medicalCodingsDisplayStrings.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D1466B8;
}

void sub_22D1466B8(uint64_t *a1, char a2)
{
}

uint64_t PBHKInspectableValue.dataAbsentReasonCodingsDisplayStrings.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValue.dataAbsentReasonCodingsDisplayStrings.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D1467A8;
}

void sub_22D1467A8(uint64_t *a1, char a2)
{
}

uint64_t PBHKInspectableValue.codedValueCollectionValues.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKInspectableValue);
}

void (*PBHKInspectableValue.codedValueCollectionValues.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D146898;
}

void sub_22D146898(uint64_t *a1, char a2)
{
}

uint64_t PBHKInspectableValue.concept.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D146A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBHKInspectableValue.concept.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D146EA8;
}

void sub_22D146EA8(uint64_t a1, char a2)
{
}

BOOL PBHKInspectableValue.hasConcept.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKInspectableValue.clearConcept()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D191804(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValue.dataAbsentReasonConcept.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D147398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBHKInspectableValue.dataAbsentReasonConcept.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D1477A4;
}

void sub_22D1477A4(uint64_t a1, char a2)
{
}

BOOL PBHKInspectableValue.hasDataAbsentReasonConcept.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKInspectableValue.clearDataAbsentReasonConcept()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D191804(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKInspectableValue.unitString.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

void (*PBHKInspectableValue.unitString.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D147B80;
}

void sub_22D147B80(uint64_t *a1, char a2)
{
}

uint64_t PBHKInspectableValue.codedQuantity.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E860, type metadata accessor for PBHKCodedQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  uint64_t v7 = type metadata accessor for PBHKCodedQuantity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKCodedQuantity);
  }
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
}

void (*PBHKInspectableValue.codedQuantity.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E860, type metadata accessor for PBHKCodedQuantity, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKCodedQuantity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    *((_DWORD *)v9 + 8) = 0;
    _OWORD v9[5] = 0;
    _OWORD v9[6] = 0xE000000000000000;
    v9[7] = 0;
    v9[8] = 0xE000000000000000;
    v9[9] = 0;
    v9[10] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKCodedQuantity);
  }
  return sub_22D147F74;
}

void sub_22D147F74(uint64_t a1, char a2)
{
}

BOOL PBHKInspectableValue.hasCodedQuantity.getter()
{
  sub_22D167880(0, &qword_26853E860, type metadata accessor for PBHKCodedQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  uint64_t v5 = type metadata accessor for PBHKCodedQuantity(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  return v6;
}

Swift::Void __swiftcall PBHKInspectableValue.clearCodedQuantity()()
{
  sub_22D167880(0, &qword_26853E860, type metadata accessor for PBHKCodedQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKInspectableValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKInspectableValue._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D191804(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKCodedQuantity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKInspectableValue.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKCodedValue.concept.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D14848C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

void (*PBHKCodedValue.concept.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D148898;
}

void sub_22D148898(uint64_t a1, char a2)
{
}

BOOL PBHKCodedValue.hasConcept.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKCodedValue.clearConcept()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKCodedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D195800(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKCodedValue.value.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v7 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKInspectableValue);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D108 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685404B0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D148D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v8 = type metadata accessor for PBHKInspectableValue(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKInspectableValue);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D108 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685404B0;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
}

void (*PBHKCodedValue.value.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D108 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685404B0;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKInspectableValue);
  }
  return sub_22D149194;
}

void sub_22D149194(uint64_t a1, char a2)
{
}

BOOL PBHKCodedValue.hasValue.getter()
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKCodedValue(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v5 = type metadata accessor for PBHKInspectableValue(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  return v6;
}

Swift::Void __swiftcall PBHKCodedValue.clearValue()()
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKCodedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D195800(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKCodedValue.referenceRanges.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKCodedValue);
}

void (*PBHKCodedValue.referenceRanges.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKCodedValue(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D149570;
}

void sub_22D149570(uint64_t *a1, char a2)
{
}

uint64_t (*PBHKCodedValue.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.localizedValue.modify())()
{
  return nullsub_1;
}

float PBHKCodedQuantity.doubleValue.getter()
{
  return *(float *)(v0 + 32);
}

void PBHKCodedQuantity.doubleValue.setter(float a1)
{
  *(float *)(v1 + 32) = a1;
}

uint64_t (*PBHKCodedQuantity.doubleValue.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.comparatorDisplayString.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.unitDisplayString.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKCodedQuantity.codedQuantityDisplayString.modify())()
{
  return nullsub_1;
}

uint64_t PBHKCodedQuantity.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBHKCodedQuantity(0) + 40);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBHKCodedQuantity.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBHKCodedQuantity(0) + 40);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBHKCodedQuantity.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKDiagnosticTestReport.diagnosticTest.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D1499A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKDiagnosticTestReport.diagnosticTest.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D197DBC(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKDiagnosticTestReport.diagnosticTest.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D149FBC;
}

void sub_22D149FBC(uint64_t a1, char a2)
{
}

BOOL PBHKDiagnosticTestReport.hasDiagnosticTest.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKDiagnosticTestReport.clearDiagnosticTest()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D197DBC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKDiagnosticTestReport.effectiveEndDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t PBHKDiagnosticTestReport.effectiveEndDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

void (*PBHKDiagnosticTestReport.effectiveEndDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D14A3E0;
}

void sub_22D14A3E0(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestReport.effectiveStartDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t PBHKDiagnosticTestReport.effectiveStartDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

void (*PBHKDiagnosticTestReport.effectiveStartDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D14A518;
}

void sub_22D14A518(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestReport.issueDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

void (*PBHKDiagnosticTestReport.issueDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D14A630;
}

void sub_22D14A630(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestReport.panelName.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
}

uint64_t PBHKDiagnosticTestReport.panelName.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
}

void (*PBHKDiagnosticTestReport.panelName.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D14A768;
}

void sub_22D14A768(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestReport.results.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t PBHKDiagnosticTestReport.results.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
}

void (*PBHKDiagnosticTestReport.results.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D14A8A0;
}

void sub_22D14A8A0(uint64_t *a1, char a2)
{
}

uint64_t PBHKDiagnosticTestReport.status.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D14AAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKDiagnosticTestReport.status.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D197DBC(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKDiagnosticTestReport.status.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D14B0BC;
}

void sub_22D14B0BC(uint64_t a1, char a2)
{
}

BOOL PBHKDiagnosticTestReport.hasStatus.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKDiagnosticTestReport.clearStatus()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKDiagnosticTestReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D197DBC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKDiagnosticTestReport.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKAccountOwner.birthDate.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKAccountOwner.name.modify())()
{
  return nullsub_1;
}

uint64_t PBHKAccountOwner.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBHKAccountOwner, a1);
}

uint64_t PBHKAccountOwner.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBHKAccountOwner);
}

uint64_t (*PBHKAccountOwner.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKProcedureRecord.bodySites.getter()
{
  return sub_22D14B4D4((void (*)(void))type metadata accessor for PBHKProcedureRecord);
}

uint64_t sub_22D14B4D4(void (*a1)(void))
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D14B52C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  *a3 = *(void *)(v4 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D14B58C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  uint64_t v11 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(a2 + v11) = a7(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(a2 + v11);
  swift_beginAccess();
  *(void *)(v13 + 16) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t PBHKProcedureRecord.bodySites.setter(uint64_t a1)
{
  return sub_22D14B698(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588);
}

uint64_t sub_22D14B698(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v8 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v4 + v8) = a4(v9);
    swift_release();
  }
  uint64_t v10 = *(void *)(v4 + v8);
  swift_beginAccess();
  *(void *)(v10 + 16) = a1;
  return swift_bridgeObjectRelease();
}

void (*PBHKProcedureRecord.bodySites.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  return sub_22D14B7F0;
}

void sub_22D14B7F0(uint64_t *a1, char a2)
{
}

void sub_22D14B81C(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = *(int *)(v6 + 88);
      uint64_t v9 = *(void *)(v6 + 80);
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + v8) = a4(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(*(void *)(v6 + 80) + *(int *)(v6 + 88));
    swift_beginAccess();
    *(void *)(v11 + 16) = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v12 = *(int *)(v6 + 88);
      uint64_t v13 = *(void *)(v6 + 80);
      a3(0);
      swift_allocObject();
      uint64_t v14 = swift_retain();
      *(void *)(v13 + v12) = a4(v14);
      swift_release();
    }
    uint64_t v15 = *(void *)(*(void *)(v6 + 80) + *(int *)(v6 + 88));
    swift_beginAccess();
    *(void *)(v15 + 16) = v7;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBHKProcedureRecord.category.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D14BB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.category.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D19A588(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.category.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D14C184;
}

void sub_22D14C184(uint64_t a1, char a2)
{
}

BOOL PBHKProcedureRecord.hasCategory.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKProcedureRecord.clearCategory()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D19A588(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKProcedureRecord.complications.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.complications.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
}

void (*PBHKProcedureRecord.complications.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D14C5A8;
}

void sub_22D14C5A8(uint64_t *a1, char a2)
{
}

uint64_t PBHKProcedureRecord.executionEndDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
}

void (*PBHKProcedureRecord.executionEndDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D14C6C0;
}

void sub_22D14C6C0(uint64_t *a1, char a2)
{
}

uint64_t PBHKProcedureRecord.executionStartDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
}

uint64_t PBHKProcedureRecord.executionStartDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
}

void (*PBHKProcedureRecord.executionStartDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D14C7F8;
}

void sub_22D14C7F8(uint64_t *a1, char a2)
{
}

uint64_t PBHKProcedureRecord.followUps.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.followUps.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
}

void (*PBHKProcedureRecord.followUps.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D14C930;
}

void sub_22D14C930(uint64_t *a1, char a2)
{
}

uint64_t PBHKProcedureRecord.notPerformed.getter()
{
  return sub_22D1344B0(type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
}

uint64_t PBHKProcedureRecord.notPerformed.setter(char a1)
{
  return sub_22D134558(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
}

void (*PBHKProcedureRecord.notPerformed.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_22D14CA60;
}

void sub_22D14CA60(uint64_t *a1, char a2)
{
}

uint64_t PBHKProcedureRecord.outcome.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D14CC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.outcome.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D19A588(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.outcome.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D14D27C;
}

void sub_22D14D27C(uint64_t a1, char a2)
{
}

BOOL PBHKProcedureRecord.hasOutcome.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKProcedureRecord.clearOutcome()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D19A588(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKProcedureRecord.performers.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.performers.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

void (*PBHKProcedureRecord.performers.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D14D6A0;
}

void sub_22D14D6A0(uint64_t *a1, char a2)
{
}

uint64_t PBHKProcedureRecord.procedure.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D14D8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.procedure.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D19A588(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.procedure.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D14DEBC;
}

void sub_22D14DEBC(uint64_t a1, char a2)
{
}

BOOL PBHKProcedureRecord.hasProcedure.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKProcedureRecord.clearProcedure()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D19A588(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKProcedureRecord.reason.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D14E3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.reason.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D19A588(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.reason.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D14E9C4;
}

void sub_22D14E9C4(uint64_t a1, char a2)
{
}

BOOL PBHKProcedureRecord.hasReason.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKProcedureRecord.clearReason()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D19A588(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKProcedureRecord.reasonsNotPerformed.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBHKProcedureRecord);
}

uint64_t PBHKProcedureRecord.reasonsNotPerformed.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
}

void (*PBHKProcedureRecord.reasonsNotPerformed.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D14EDE8;
}

void sub_22D14EDE8(uint64_t *a1, char a2)
{
}

uint64_t PBHKProcedureRecord.status.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, a1, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D14EFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, a2, type metadata accessor for PBHKConcept);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D020 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685402C8;
  swift_retain();
  return sub_22D1D08A0((uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
}

uint64_t PBHKProcedureRecord.status.setter(uint64_t a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D19A588(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBHKConcept);
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return swift_release();
}

void (*PBHKProcedureRecord.status.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D020 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685402C8;
    swift_retain();
    sub_22D1D08A0((uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKConcept);
  }
  return sub_22D14F604;
}

void sub_22D14F604(uint64_t a1, char a2)
{
}

BOOL PBHKProcedureRecord.hasStatus.getter()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v6;
}

Swift::Void __swiftcall PBHKProcedureRecord.clearStatus()()
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKProcedureRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKProcedureRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D19A588(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBHKProcedureRecord.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.cycles.getter()
{
  return sub_22D14B4D4((void (*)(void))type metadata accessor for PBCycleTracking);
}

uint64_t PBCycleTracking.cycles.setter(uint64_t a1)
{
  return sub_22D14B698(a1, type metadata accessor for PBCycleTracking, (void (*)(void))type metadata accessor for PBCycleTracking._StorageClass, sub_22D19DCBC);
}

void (*PBCycleTracking.cycles.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  return sub_22D14FA34;
}

void sub_22D14FA34(uint64_t *a1, char a2)
{
}

uint64_t PBCycleTracking.typicalCycleLengthDays.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 24);
}

uint64_t sub_22D14FAAC(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + v4) = sub_22D19DCBC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v6 + 24) = v3;
  return result;
}

uint64_t PBCycleTracking.typicalCycleLengthDays.setter(int a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_22D19DCBC(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v5 + 24) = a1;
  return result;
}

void (*PBCycleTracking.typicalCycleLengthDays.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 24);
  return sub_22D14FC8C;
}

void sub_22D14FC8C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v7 + v6) = sub_22D19DCBC(v8);
    swift_release();
  }
LABEL_4:
  uint64_t v9 = (_DWORD *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84)) + 24);
  swift_beginAccess();
  *uint64_t v9 = v4;
  free((void *)v3);
}

uint64_t PBCycleTracking.typicalCycleLengthRange.getter@<X0>(void *a1@<X8>)
{
  return sub_22D1507D8(&OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange, a1);
}

uint64_t PBCycleTracking.typicalCycleLengthRange.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D19DCBC(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBCycleTracking.Range);
  uint64_t v12 = type metadata accessor for PBCycleTracking.Range(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  return swift_release();
}

uint64_t PBCycleTracking.Range.init()@<X0>(void *a1@<X8>)
{
  return sub_22D1222B0((void (*)(void))type metadata accessor for PBCycleTracking.Range, a1);
}

void (*PBCycleTracking.typicalCycleLengthRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBCycleTracking.Range(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBCycleTracking.Range);
  }
  return sub_22D1501A4;
}

void sub_22D1501A4(uint64_t a1, char a2)
{
}

BOOL PBCycleTracking.hasTypicalCycleLengthRange.getter()
{
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v5 = type metadata accessor for PBCycleTracking.Range(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  return v6;
}

Swift::Void __swiftcall PBCycleTracking.clearTypicalCycleLengthRange()()
{
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D19DCBC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBCycleTracking.Range(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  swift_release();
}

uint64_t PBCycleTracking.typicalPeriodLengthDays.getter()
{
  return sub_22D12650C(type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
}

uint64_t sub_22D1504E4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t), void *a8)
{
  int v12 = *a1;
  uint64_t v13 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(a2 + v13) = a7(v14);
    swift_release();
  }
  uint64_t v15 = (_DWORD *)(*(void *)(a2 + v13) + *a8);
  uint64_t result = swift_beginAccess();
  *uint64_t v15 = v12;
  return result;
}

uint64_t PBCycleTracking.typicalPeriodLengthDays.setter(int a1)
{
  return sub_22D11A104(a1, type metadata accessor for PBCycleTracking, (void (*)(void))type metadata accessor for PBCycleTracking._StorageClass, sub_22D19DCBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
}

void (*PBCycleTracking.typicalPeriodLengthDays.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = (_DWORD *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_22D150690;
}

void sub_22D150690(uint64_t *a1, char a2)
{
}

void sub_22D1506C4(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v9 = *a1;
  int v10 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v12 = *(int *)(v9 + 84);
    uint64_t v13 = *(void *)(v9 + 72);
    a3(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(v13 + v12) = a4(v14);
    swift_release();
  }
LABEL_4:
  uint64_t v15 = (_DWORD *)(*(void *)(*(void *)(v9 + 72) + *(int *)(v9 + 84)) + *a5);
  swift_beginAccess();
  *uint64_t v15 = v10;
  free((void *)v9);
}

uint64_t PBCycleTracking.typicalPeriodLengthRange.getter@<X0>(void *a1@<X8>)
{
  return sub_22D1507D8(&OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange, a1);
}

uint64_t sub_22D1507D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(v2 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20)) + *a1;
  swift_beginAccess();
  sub_22D1B9E60(v8, (uint64_t)v7, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v9 = type metadata accessor for PBCycleTracking.Range(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9) != 1) {
    return sub_22D1D06E8((uint64_t)v7, (uint64_t)a2, type metadata accessor for PBCycleTracking.Range);
  }
  *a2 = 0;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v7, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
}

uint64_t sub_22D15096C@<X0>(uint64_t a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = *(void *)(a1 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20)) + *a2;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v8, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v10 = type metadata accessor for PBCycleTracking.Range(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_22D1D06E8((uint64_t)v8, (uint64_t)a3, type metadata accessor for PBCycleTracking.Range);
  }
  *a3 = 0;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v8, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
}

uint64_t PBCycleTracking.typicalPeriodLengthRange.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D19DCBC(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBCycleTracking.Range);
  uint64_t v12 = type metadata accessor for PBCycleTracking.Range(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  return swift_release();
}

void (*PBCycleTracking.typicalPeriodLengthRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBCycleTracking.Range(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBCycleTracking.Range);
  }
  return sub_22D150F0C;
}

void sub_22D150F0C(uint64_t a1, char a2)
{
}

BOOL PBCycleTracking.hasTypicalPeriodLengthRange.getter()
{
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v5 = type metadata accessor for PBCycleTracking.Range(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  return v6;
}

Swift::Void __swiftcall PBCycleTracking.clearTypicalPeriodLengthRange()()
{
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D19DCBC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBCycleTracking.Range(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  swift_endAccess();
  swift_release();
}

uint64_t PBCycleTracking.lastMenstrualPeriodDate.getter()
{
  return sub_22D11923C(type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
}

uint64_t PBCycleTracking.lastMenstrualPeriodDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D117858(a1, a2, type metadata accessor for PBCycleTracking, (void (*)(void))type metadata accessor for PBCycleTracking._StorageClass, sub_22D19DCBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
}

void (*PBCycleTracking.lastMenstrualPeriodDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D151330;
}

void sub_22D151330(uint64_t *a1, char a2)
{
}

uint64_t (*PBCycleTracking.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_22D151390(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D0440();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void PBCycleTracking.OvulationTestResult.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t PBCycleTracking.OvulationTestResult.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 5;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBCycleTracking.OvulationTestResult.rawValue.getter()
{
  return *(void *)v0;
}

unint64_t sub_22D15140C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBCycleTracking.OvulationTestResult.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D151414(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D03EC();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

unint64_t PBCycleTracking.CervicalMucusQuality.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 6;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D151478@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBCycleTracking.CervicalMucusQuality.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D151480(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D0398();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t PBCycleTracking.Range.min.getter()
{
  return *v0;
}

uint64_t PBCycleTracking.Range.min.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*PBCycleTracking.Range.min.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Range.max.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t PBCycleTracking.Range.max.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*PBCycleTracking.Range.max.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Range.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBCycleTracking.Range, a1);
}

uint64_t PBCycleTracking.Range.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBCycleTracking.Range);
}

uint64_t (*PBCycleTracking.Range.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCycleTracking.SexualActivity.hadSex.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCycleTracking.SexualActivity.protectionUsed.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.SexualActivity.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBCycleTracking.SexualActivity, a1);
}

uint64_t PBCycleTracking.SexualActivity.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t (*PBCycleTracking.SexualActivity.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.SexualActivity.init()@<X0>(_WORD *a1@<X8>)
{
  return sub_22D1557F0((void (*)(void))type metadata accessor for PBCycleTracking.SexualActivity, a1);
}

uint64_t PBCycleTracking.Event.date.getter()
{
  return sub_22D126A90(type metadata accessor for PBCycleTracking.Event);
}

uint64_t PBCycleTracking.Event.date.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D1516CC(a1, a2, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150);
}

uint64_t sub_22D1516CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a5(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(v5 + v10);
  swift_beginAccess();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBCycleTracking.Event.date.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D151830;
}

void sub_22D151830(uint64_t *a1, char a2)
{
}

uint64_t PBCycleTracking.Event.flow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 40);
  *(void *)a1 = *(void *)(v3 + 32);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_22D1518B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1A1150(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 32) = v3;
  *(unsigned char *)(v7 + 40) = v4;
  return result;
}

uint64_t PBCycleTracking.Event.flow.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v1 + v4) = sub_22D1A1150(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t result = swift_beginAccess();
  *(void *)(v6 + 32) = v2;
  *(unsigned char *)(v6 + 40) = v3;
  return result;
}

void (*PBCycleTracking.Event.flow.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D151AB0;
}

void sub_22D151AB0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v8 + v7) = sub_22D1A1150(v9);
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v10 + 32) = v4;
  *(unsigned char *)(v10 + 40) = v5;
  free((void *)v3);
}

uint64_t PBCycleTracking.Event.sexualActivity.getter@<X0>(_WORD *a1@<X8>)
{
  sub_22D167880(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  char v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  uint64_t v7 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBCycleTracking.SexualActivity);
  }
  *a1 = 0;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v5, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t sub_22D151D34@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  sub_22D167880(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  uint64_t v8 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, (uint64_t)a2, type metadata accessor for PBCycleTracking.SexualActivity);
  }
  *a2 = 0;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v6, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t PBCycleTracking.Event.sexualActivity.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1A1150(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBCycleTracking.SexualActivity);
  uint64_t v12 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  swift_endAccess();
  return swift_release();
}

void (*PBCycleTracking.Event.sexualActivity.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20))
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBCycleTracking.SexualActivity);
  }
  return sub_22D1522D4;
}

void sub_22D1522D4(uint64_t a1, char a2)
{
}

BOOL PBCycleTracking.Event.hasSexualActivity.getter()
{
  sub_22D167880(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  uint64_t v5 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  return v6;
}

Swift::Void __swiftcall PBCycleTracking.Event.clearSexualActivity()()
{
  sub_22D167880(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1A1150(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  swift_endAccess();
  swift_release();
}

uint64_t PBCycleTracking.Event.cervicalMucusQuality.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1399D0(type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality, a1);
}

uint64_t sub_22D152614(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t), void *a8)
{
  uint64_t v12 = *a1;
  char v13 = *((unsigned char *)a1 + 8);
  uint64_t v14 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v15 = swift_retain();
    *(void *)(a2 + v14) = a7(v15);
    swift_release();
  }
  uint64_t v16 = *(void *)(a2 + v14) + *a8;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v16 = v12;
  *(unsigned char *)(v16 + 8) = v13;
  return result;
}

uint64_t PBCycleTracking.Event.cervicalMucusQuality.setter(uint64_t *a1)
{
  return sub_22D152734(a1, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
}

uint64_t sub_22D152734(uint64_t *a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v9 = *a1;
  char v10 = *((unsigned char *)a1 + 8);
  uint64_t v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v5 + v11) = a4(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v5 + v11) + *a5;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v13 = v9;
  *(unsigned char *)(v13 + 8) = v10;
  return result;
}

void (*PBCycleTracking.Event.cervicalMucusQuality.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 8);
  v3[9] = *(void *)v5;
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D1528AC;
}

void sub_22D1528AC(uint64_t *a1, char a2)
{
}

void sub_22D1528E0(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 72);
  char v11 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v13 = *(int *)(v9 + 84);
    uint64_t v14 = *(void *)(v9 + 88);
    a3(0);
    swift_allocObject();
    uint64_t v15 = swift_retain();
    *(void *)(v14 + v13) = a4(v15);
    swift_release();
  }
LABEL_4:
  uint64_t v16 = *(void *)(*(void *)(v9 + 88) + *(int *)(v9 + 84)) + *a5;
  swift_beginAccess();
  *(void *)uint64_t v16 = v10;
  *(unsigned char *)(v16 + 8) = v11;
  free((void *)v9);
}

float PBCycleTracking.Event.basalBodyTemperature.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20))
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_22D152A48(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + v4) = sub_22D1A1150(v5);
    swift_release();
  }
  char v6 = (_DWORD *)(*(void *)(a2 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  uint64_t result = swift_beginAccess();
  *char v6 = v3;
  return result;
}

uint64_t PBCycleTracking.Event.basalBodyTemperature.setter(float a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_22D1A1150(v4);
    swift_release();
  }
  uint64_t v5 = (float *)(*(void *)(v1 + v3)
               + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  uint64_t result = swift_beginAccess();
  *uint64_t v5 = a1;
  return result;
}

void (*PBCycleTracking.Event.basalBodyTemperature.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = (_DWORD *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_22D152C4C;
}

void sub_22D152C4C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBCycleTracking.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v7 + v6) = sub_22D1A1150(v8);
    swift_release();
  }
LABEL_4:
  uint64_t v9 = (_DWORD *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84))
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  swift_beginAccess();
  *uint64_t v9 = v4;
  free((void *)v3);
}

uint64_t PBCycleTracking.Event.hadSpotting.getter()
{
  return sub_22D1344B0(type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
}

uint64_t PBCycleTracking.Event.hadSpotting.setter(char a1)
{
  return sub_22D134558(a1, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
}

void (*PBCycleTracking.Event.hadSpotting.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_22D152E3C;
}

void sub_22D152E3C(uint64_t *a1, char a2)
{
}

uint64_t PBCycleTracking.Event.symptoms.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBCycleTracking.Event);
}

uint64_t PBCycleTracking.Event.symptoms.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
}

void (*PBCycleTracking.Event.symptoms.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D152F74;
}

void sub_22D152F74(uint64_t *a1, char a2)
{
}

uint64_t PBCycleTracking.Event.enumSymptoms.getter()
{
  return sub_22D117B24((void (*)(void))type metadata accessor for PBCycleTracking.Event);
}

uint64_t PBCycleTracking.Event.enumSymptoms.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
}

void (*PBCycleTracking.Event.enumSymptoms.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D1530AC;
}

void sub_22D1530AC(uint64_t *a1, char a2)
{
}

uint64_t (*PBCycleTracking.Event.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Event.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBCycleTracking.Event, &qword_26853D1A8, &qword_268540628, a1);
}

uint64_t (*PBCycleTracking.Cycle.start.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCycleTracking.Cycle.end.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Cycle.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBCycleTracking.Cycle.events.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*PBCycleTracking.Cycle.events.modify())()
{
  return nullsub_1;
}

uint64_t (*PBCycleTracking.Cycle.cycleLength.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Cycle.periodLength.getter()
{
  return *(unsigned int *)(v0 + 44);
}

uint64_t PBCycleTracking.Cycle.periodLength.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 44) = result;
  return result;
}

uint64_t (*PBCycleTracking.Cycle.periodLength.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Cycle.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBCycleTracking.Cycle(0) + 36);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBCycleTracking.Cycle.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBCycleTracking.Cycle(0) + 36);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBCycleTracking.Cycle.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBCycleTracking.Cycle.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = MEMORY[0x263F8EE78];
  a1[5] = 0;
  type metadata accessor for PBCycleTracking.Cycle(0);
  return sub_22D2BBFE0();
}

void sub_22D1533A8()
{
  qword_26853FFF0 = (uint64_t)&unk_26E05A928;
}

uint64_t static PBCycleTracking.Flow.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CED8);
}

uint64_t static PBCycleTracking.Flow.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CED8, &qword_26853FFF0);
}

uint64_t (*static PBCycleTracking.Flow.allCases.modify())()
{
  if (qword_26853CED8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D15348C@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CED8, &qword_26853FFF0, a1);
}

void sub_22D1534B0()
{
  qword_26853FFF8 = (uint64_t)&unk_26E05A9A8;
}

uint64_t static PBCycleTracking.OvulationTestResult.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CEE0);
}

uint64_t static PBCycleTracking.OvulationTestResult.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CEE0, &qword_26853FFF8);
}

uint64_t (*static PBCycleTracking.OvulationTestResult.allCases.modify())()
{
  if (qword_26853CEE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22D153594@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CEE0, &qword_26853FFF8, a1);
}

void sub_22D1535B8()
{
  qword_268540000 = (uint64_t)&unk_26E05AA18;
}

uint64_t static PBCycleTracking.CervicalMucusQuality.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CEE8);
}

uint64_t static PBCycleTracking.CervicalMucusQuality.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CEE8, &qword_268540000);
}

uint64_t (*static PBCycleTracking.CervicalMucusQuality.allCases.modify())()
{
  if (qword_26853CEE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D15369C@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CEE8, &qword_268540000, a1);
}

uint64_t (*PBECGs.ecgs.modify())()
{
  return nullsub_1;
}

uint64_t PBECGs.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D12691C(type metadata accessor for PBECGs, a1);
}

uint64_t PBECGs.unknownFields.setter(uint64_t a1)
{
  return sub_22D1269B4(a1, type metadata accessor for PBECGs);
}

uint64_t (*PBECGs.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.time.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.sampleRate.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.device.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.classification.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.lead.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.unit.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeta.symptoms.modify())()
{
  return nullsub_1;
}

float PBECGMeta.averageHeartRate.getter()
{
  return *(float *)(v0 + 96);
}

void PBECGMeta.averageHeartRate.setter(float a1)
{
  *(float *)(v1 + 96) = a1;
}

uint64_t (*PBECGMeta.averageHeartRate.modify())()
{
  return nullsub_1;
}

void PBECGMeta.hkClassification.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 112);
  *(void *)a1 = *(void *)(v1 + 104);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBECGMeta.hkClassification.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 104) = *(void *)result;
  *(unsigned char *)(v1 + 112) = v2;
  return result;
}

uint64_t (*PBECGMeta.hkClassification.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeta.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1538C8(type metadata accessor for PBECGMeta, a1);
}

uint64_t sub_22D1538C8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 52);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PBECGMeta.unknownFields.setter(uint64_t a1)
{
  return sub_22D153960(a1, type metadata accessor for PBECGMeta);
}

uint64_t sub_22D153960(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 52);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBECGMeta.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeasurement.time.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeasurement.sampleRate.modify())()
{
  return nullsub_1;
}

uint64_t (*PBECGMeasurement.device.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.classification.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBECGMeasurement.classification.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*PBECGMeasurement.classification.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.lead.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBECGMeasurement.lead.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*PBECGMeasurement.lead.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.unit.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBECGMeasurement.unit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*PBECGMeasurement.unit.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.symptoms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBECGMeasurement.symptoms.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*PBECGMeasurement.symptoms.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.values.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBECGMeasurement.values.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*PBECGMeasurement.values.modify())()
{
  return nullsub_1;
}

float PBECGMeasurement.averageHeartRate.getter()
{
  return *(float *)(v0 + 104);
}

void PBECGMeasurement.averageHeartRate.setter(float a1)
{
  *(float *)(v1 + 104) = a1;
}

uint64_t (*PBECGMeasurement.averageHeartRate.modify())()
{
  return nullsub_1;
}

void PBECGMeasurement.hkClassification.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 112);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBECGMeasurement.hkClassification.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 112) = *(void *)result;
  *(unsigned char *)(v1 + 120) = v2;
  return result;
}

uint64_t (*PBECGMeasurement.hkClassification.modify())()
{
  return nullsub_1;
}

uint64_t PBECGMeasurement.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBECGMeasurement(0) + 56);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBECGMeasurement.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBECGMeasurement(0) + 56);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBECGMeasurement.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D117BC8(type metadata accessor for PBActivitySummarySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, a1);
}

uint64_t PBActivitySummarySeries.dateRange.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBActivitySummarySeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBActivitySummarySeries._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1A5250(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBDateRange);
  uint64_t v12 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  return swift_release();
}

void (*PBActivitySummarySeries.dateRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBDateRange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBActivitySummarySeries(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBDateRange);
  }
  return sub_22D1542B0;
}

void sub_22D1542B0(uint64_t a1, char a2)
{
}

BOOL PBActivitySummarySeries.hasDateRange.getter()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBActivitySummarySeries(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v5 = type metadata accessor for PBDateRange(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853D7B0, type metadata accessor for PBDateRange);
  return v6;
}

Swift::Void __swiftcall PBActivitySummarySeries.clearDateRange()()
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBActivitySummarySeries(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBActivitySummarySeries._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1A5250(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  swift_release();
}

uint64_t PBActivitySummarySeries.activitySummaries.setter(uint64_t a1)
{
  return sub_22D117980(a1, type metadata accessor for PBActivitySummarySeries, (void (*)(void))type metadata accessor for PBActivitySummarySeries._StorageClass, sub_22D1A5250, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
}

void (*PBActivitySummarySeries.activitySummaries.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBActivitySummarySeries(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_22D1546B4;
}

void sub_22D1546B4(uint64_t *a1, char a2)
{
}