uint64_t (*PBActivitySummarySeries.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.ActivitySummary.activeCalories.getter()
{
  return *v0;
}

uint64_t PBActivitySummarySeries.ActivitySummary.activeCalories.setter(uint64_t result)
{
  _DWORD *v1 = result;
  return result;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.activeCalories.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.activeCalorieGoal.modify())()
{
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.ActivitySummary.moveMinutes.getter()
{
  return *(unsigned int *)(v0 + 8);
}

uint64_t PBActivitySummarySeries.ActivitySummary.moveMinutes.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.moveMinutes.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.moveMinuteGoal.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.standHours.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.standHoursGoal.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.recordedTime.modify())()
{
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.ActivitySummary.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D15EF24(type metadata accessor for PBActivitySummarySeries.ActivitySummary, a1);
}

uint64_t PBActivitySummarySeries.ActivitySummary.unknownFields.setter(uint64_t a1)
{
  return sub_22D15EFBC(a1, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t (*PBActivitySummarySeries.ActivitySummary.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBActivitySummarySeries.ActivitySummary.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0xE000000000000000;
  type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
  return sub_22D2BBFE0();
}

uint64_t PBPatientMeta.hasWatch_p.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_22D154918(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + v4) = sub_22D1A7000(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 16) = v3;
  return result;
}

void (*PBPatientMeta.hasWatch_p.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *(unsigned char *)(v5 + 16);
  return sub_22D154A4C;
}

void sub_22D154A4C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v7 + v6) = sub_22D1A7000(v8);
    swift_release();
  }
LABEL_4:
  v9 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 16);
  swift_beginAccess();
  unsigned char *v9 = v4;
  free((void *)v3);
}

uint64_t PBPatientMeta.chrMeta.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D154B84@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20));
  swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D154BE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + v4) = sub_22D1A7000(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + v4);
  swift_beginAccess();
  *(void *)(v6 + 24) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBPatientMeta.chrMeta.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(void *)(v5 + 24);
  swift_bridgeObjectRetain();
  return sub_22D154D2C;
}

void sub_22D154D2C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = *(int *)(v2 + 88);
      uint64_t v5 = *(void *)(v2 + 80);
      type metadata accessor for PBPatientMeta._StorageClass(0);
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + v4) = sub_22D1A7000(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v7 + 24) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = *(int *)(v2 + 88);
      uint64_t v9 = *(void *)(v2 + 80);
      type metadata accessor for PBPatientMeta._StorageClass(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + v8) = sub_22D1A7000(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v11 + 24) = v3;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBPatientMeta.shareTimezone.getter()
{
  return sub_22D12A9FC(type metadata accessor for PBPatientMeta);
}

void (*PBPatientMeta.shareTimezone.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D154F44;
}

void sub_22D154F44(uint64_t *a1, char a2)
{
}

uint64_t PBPatientMeta.sex.getter()
{
  return sub_22D1454AC(type metadata accessor for PBPatientMeta);
}

uint64_t sub_22D154F88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(a2 + v12) = a7(v13);
    swift_release();
  }
  uint64_t v14 = *(void *)(a2 + v12);
  swift_beginAccess();
  *(void *)(v14 + 48) = v11;
  *(void *)(v14 + 56) = v10;
  return swift_bridgeObjectRelease();
}

void (*PBPatientMeta.sex.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 56);
  v3[9] = *(void *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1550EC;
}

void sub_22D1550EC(uint64_t *a1, char a2)
{
}

void sub_22D155118(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  uint64_t v8 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = a4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v12 + 48) = v7;
    *(void *)(v12 + 56) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v6 + 96);
      uint64_t v14 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = a4(v15);
      swift_release();
    }
    uint64_t v16 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v16 + 48) = v7;
    *(void *)(v16 + 56) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBPatientMeta.heartRateMeds.getter@<X0>(_WORD *a1@<X8>)
{
  sub_22D167880(0, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  uint64_t v7 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBPatientMeta.HeartRateMeds);
  }
  *a1 = 0;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v5, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_22D155434@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  sub_22D167880(0, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  uint64_t v8 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, (uint64_t)a2, type metadata accessor for PBPatientMeta.HeartRateMeds);
  }
  *a2 = 0;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v6, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t PBPatientMeta.heartRateMeds.setter(uint64_t a1)
{
  sub_22D167880(0, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1A7000(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1D06E8(a1, (uint64_t)v8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  uint64_t v12 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1D0910((uint64_t)v8, (uint64_t)v6, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v6, v13, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  swift_endAccess();
  return swift_release();
}

uint64_t PBPatientMeta.HeartRateMeds.init()@<X0>(_WORD *a1@<X8>)
{
  return sub_22D1557F0((void (*)(void))type metadata accessor for PBPatientMeta.HeartRateMeds, a1);
}

uint64_t sub_22D1557F0@<X0>(void (*a1)(void)@<X0>, _WORD *a2@<X8>)
{
  *a2 = 0;
  a1(0);
  return sub_22D2BBFE0();
}

void (*PBPatientMeta.heartRateMeds.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _WORD *v9 = 0;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPatientMeta.HeartRateMeds);
  }
  return sub_22D155A2C;
}

void sub_22D155A2C(uint64_t a1, char a2)
{
}

BOOL PBPatientMeta.hasHeartRateMeds.getter()
{
  sub_22D167880(0, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  uint64_t v5 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  return v6;
}

Swift::Void __swiftcall PBPatientMeta.clearHeartRateMeds()()
{
  sub_22D167880(0, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1A7000(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  swift_endAccess();
  swift_release();
}

uint64_t PBPatientMeta.name.getter@<X0>(void *a1@<X8>)
{
  sub_22D167880(0, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  uint64_t v7 = type metadata accessor for PBPatientMeta.HumanName(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBPatientMeta.HumanName);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t sub_22D155EE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_22D167880(0, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  uint64_t v8 = type metadata accessor for PBPatientMeta.HumanName(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, (uint64_t)a2, type metadata accessor for PBPatientMeta.HumanName);
  }
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
}

void (*PBPatientMeta.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBPatientMeta.HumanName(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPatientMeta.HumanName);
  }
  return sub_22D15628C;
}

void sub_22D15628C(uint64_t a1, char a2)
{
}

BOOL PBPatientMeta.hasName.getter()
{
  sub_22D167880(0, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  uint64_t v5 = type metadata accessor for PBPatientMeta.HumanName(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  return v6;
}

Swift::Void __swiftcall PBPatientMeta.clearName()()
{
  sub_22D167880(0, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPatientMeta._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1A7000(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBPatientMeta.HumanName(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  swift_endAccess();
  swift_release();
}

uint64_t PBPatientMeta.dob.getter()
{
  return sub_22D11923C(type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
}

void (*PBPatientMeta.dob.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBPatientMeta(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D156668;
}

void sub_22D156668(uint64_t *a1, char a2)
{
}

uint64_t (*PBPatientMeta.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBPatientMeta.CHRMeta.name.modify())()
{
  return nullsub_1;
}

uint64_t (*PBPatientMeta.CHRMeta.lastSyncTime.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.CHRMeta.gatewayID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBPatientMeta.CHRMeta.gatewayID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PBPatientMeta.CHRMeta.gatewayID.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.CHRMeta.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D120BB8(type metadata accessor for PBPatientMeta.CHRMeta, a1);
}

uint64_t PBPatientMeta.CHRMeta.unknownFields.setter(uint64_t a1)
{
  return sub_22D120C50(a1, type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t (*PBPatientMeta.CHRMeta.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.HeartRateMeds.calciumChannelBlockers.getter()
{
  return *v0;
}

uint64_t PBPatientMeta.HeartRateMeds.calciumChannelBlockers.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*PBPatientMeta.HeartRateMeds.calciumChannelBlockers.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.HeartRateMeds.betaBlockers.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t PBPatientMeta.HeartRateMeds.betaBlockers.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*PBPatientMeta.HeartRateMeds.betaBlockers.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.HeartRateMeds.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBPatientMeta.HeartRateMeds, a1);
}

uint64_t PBPatientMeta.HeartRateMeds.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t (*PBPatientMeta.HeartRateMeds.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBPatientMeta.HumanName.firstName.modify())()
{
  return nullsub_1;
}

uint64_t (*PBPatientMeta.HumanName.lastName.modify())()
{
  return nullsub_1;
}

uint64_t PBPatientMeta.HumanName.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBPatientMeta.HumanName, a1);
}

uint64_t PBPatientMeta.HumanName.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t (*PBPatientMeta.HumanName.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBActiveMedications.uuids.modify())()
{
  return nullsub_1;
}

uint64_t PBActiveMedications.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D12691C(type metadata accessor for PBActiveMedications, a1);
}

uint64_t PBActiveMedications.unknownFields.setter(uint64_t a1)
{
  return sub_22D1269B4(a1, type metadata accessor for PBActiveMedications);
}

uint64_t (*PBActiveMedications.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTracking.medicationSemanticIdentifier.getter()
{
  return sub_22D126A90(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D156A44(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.medicationSemanticIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.medicationSemanticIdentifier.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D156C48;
}

void sub_22D156C48(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyPreferredName.getter()
{
  return sub_22D12A9FC(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D156DD0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyPreferredName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyPreferredName.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D156FD4;
}

void sub_22D156FD4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 32) = v3;
    *(void *)(v12 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyBrandName.getter()
{
  return sub_22D1454AC(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D15715C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyBrandName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 48) = a1;
  *(void *)(v7 + 56) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyBrandName.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 56);
  v3[9] = *(void *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D157360;
}

void sub_22D157360(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 48) = v3;
    *(void *)(v8 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 48) = v3;
    *(void *)(v12 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyGenericName.getter()
{
  return sub_22D15C3E4(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D1574E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 64) = v4;
  *(void *)(v7 + 72) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyGenericName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyGenericName.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 72);
  v3[9] = *(void *)(v5 + 64);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1576EC;
}

void sub_22D1576EC(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 64) = v3;
    *(void *)(v8 + 72) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 64) = v3;
    *(void *)(v12 + 72) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.specificRxNormCode.getter()
{
  return sub_22D15C77C(type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D157874(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 80) = v4;
  *(void *)(v7 + 88) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.specificRxNormCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 80) = a1;
  *(void *)(v7 + 88) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.specificRxNormCode.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 88);
  v3[9] = *(void *)(v5 + 80);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D157A78;
}

void sub_22D157A78(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 80) = v3;
    *(void *)(v8 + 88) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 80) = v3;
    *(void *)(v12 + 88) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.freeTextMedicationForm.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 104);
  *(void *)a1 = *(void *)(v3 + 96);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_22D157C44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 96) = v3;
  *(unsigned char *)(v7 + 104) = v4;
  return result;
}

uint64_t PBMedicationTracking.freeTextMedicationForm.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v1 + v4) = sub_22D1AADD4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t result = swift_beginAccess();
  *(void *)(v6 + 96) = v2;
  *(unsigned char *)(v6 + 104) = v3;
  return result;
}

void (*PBMedicationTracking.freeTextMedicationForm.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 104);
  v3[9] = *(void *)(v5 + 96);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D157E3C;
}

void sub_22D157E3C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v8 + v7) = sub_22D1AADD4(v9);
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v10 + 96) = v4;
  *(unsigned char *)(v10 + 104) = v5;
  free((void *)v3);
}

uint64_t PBMedicationTracking.freeTextQuantifiedStrength.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D157F88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 120);
  *a2 = *(void *)(v3 + 112);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D157FE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 112) = v4;
  *(void *)(v7 + 120) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.freeTextQuantifiedStrength.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 112) = a1;
  *(void *)(v7 + 120) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.freeTextQuantifiedStrength.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 120);
  v3[9] = *(void *)(v5 + 112);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1581E8;
}

void sub_22D1581E8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 112) = v3;
    *(void *)(v8 + 120) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 112) = v3;
    *(void *)(v12 + 120) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyBasicDoseForms.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 128);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D1583B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 136);
  *a2 = *(void *)(v3 + 128);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D158410(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 128) = v4;
  *(void *)(v7 + 136) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyBasicDoseForms.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 128) = a1;
  *(void *)(v7 + 136) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyBasicDoseForms.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 136);
  v3[9] = *(void *)(v5 + 128);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D158614;
}

void sub_22D158614(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 128) = v3;
    *(void *)(v8 + 136) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 128) = v3;
    *(void *)(v12 + 136) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyLoggingUnitSingular.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 144);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D1587E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 152);
  *a2 = *(void *)(v3 + 144);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15883C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 144) = v4;
  *(void *)(v7 + 152) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyLoggingUnitSingular.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 144) = a1;
  *(void *)(v7 + 152) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyLoggingUnitSingular.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 152);
  v3[9] = *(void *)(v5 + 144);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D158A40;
}

void sub_22D158A40(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 144) = v3;
    *(void *)(v8 + 152) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 144) = v3;
    *(void *)(v12 + 152) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.localizedOntologyLoggingUnitPlural.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 160);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D158C0C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 168);
  *a2 = *(void *)(v3 + 160);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D158C68(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 160) = v4;
  *(void *)(v7 + 168) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.localizedOntologyLoggingUnitPlural.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 160) = a1;
  *(void *)(v7 + 168) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.localizedOntologyLoggingUnitPlural.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 168);
  v3[9] = *(void *)(v5 + 160);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D158E6C;
}

void sub_22D158E6C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 160) = v3;
    *(void *)(v8 + 168) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 160) = v3;
    *(void *)(v12 + 168) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.unlocalizedQuantifiedUnitStrengthPreferredDisplayString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 176);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D159038@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 184);
  *a2 = *(void *)(v3 + 176);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D159094(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 176) = v4;
  *(void *)(v7 + 184) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.unlocalizedQuantifiedUnitStrengthPreferredDisplayString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 176) = a1;
  *(void *)(v7 + 184) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.unlocalizedQuantifiedUnitStrengthPreferredDisplayString.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 184);
  v3[9] = *(void *)(v5 + 176);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D159298;
}

void sub_22D159298(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 176) = v3;
    *(void *)(v8 + 184) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 176) = v3;
    *(void *)(v12 + 184) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.dateAdded.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 192);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D159464@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 200);
  *a2 = *(void *)(v3 + 192);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D1594C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 192) = v4;
  *(void *)(v7 + 200) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.dateAdded.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 192) = a1;
  *(void *)(v7 + 200) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.dateAdded.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 200);
  v3[9] = *(void *)(v5 + 192);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1596C4;
}

void sub_22D1596C4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 192) = v3;
    *(void *)(v8 + 200) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 192) = v3;
    *(void *)(v12 + 200) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t sub_22D159834@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 216);
  *a2 = *(void *)(v3 + 208);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D159890(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 208) = v4;
  *(void *)(v7 + 216) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.lastDosageEventDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 208) = a1;
  *(void *)(v7 + 216) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.lastDosageEventDate.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 216);
  v3[9] = *(void *)(v5 + 208);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D159A94;
}

void sub_22D159A94(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 208) = v3;
    *(void *)(v8 + 216) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 208) = v3;
    *(void *)(v12 + 216) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.genericRxNormCode.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 224);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D159C60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 232);
  *a2 = *(void *)(v3 + 224);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D159CBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 224) = v4;
  *(void *)(v7 + 232) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.genericRxNormCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 224) = a1;
  *(void *)(v7 + 232) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.genericRxNormCode.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 232);
  v3[9] = *(void *)(v5 + 224);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D159EC0;
}

void sub_22D159EC0(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 224) = v3;
    *(void *)(v8 + 232) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 224) = v3;
    *(void *)(v12 + 232) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 240);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D15A08C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 248);
  *a2 = *(void *)(v3 + 240);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15A0E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 240) = v4;
  *(void *)(v7 + 248) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.uuid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 240) = a1;
  *(void *)(v7 + 248) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.uuid.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 248);
  v3[9] = *(void *)(v5 + 240);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15A2EC;
}

void sub_22D15A2EC(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 240) = v3;
    *(void *)(v8 + 248) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 240) = v3;
    *(void *)(v12 + 248) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.freeTextMedicationLoggingUnit.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 264);
  *(void *)a1 = *(void *)(v3 + 256);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_22D15A4C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 256) = v3;
  *(unsigned char *)(v7 + 264) = v4;
  return result;
}

uint64_t PBMedicationTracking.freeTextMedicationLoggingUnit.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v1 + v4) = sub_22D1AADD4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t result = swift_beginAccess();
  *(void *)(v6 + 256) = v2;
  *(unsigned char *)(v6 + 264) = v3;
  return result;
}

void (*PBMedicationTracking.freeTextMedicationLoggingUnit.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 264);
  v3[9] = *(void *)(v5 + 256);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D15A6C0;
}

void sub_22D15A6C0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v8 + v7) = sub_22D1AADD4(v9);
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v10 + 256) = v4;
  *(unsigned char *)(v10 + 264) = v5;
  free((void *)v3);
}

uint64_t PBMedicationTracking.freeTextMedicationName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 272);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D15A80C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 280);
  *a2 = *(void *)(v3 + 272);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15A868(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 272) = v4;
  *(void *)(v7 + 280) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.freeTextMedicationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 272) = a1;
  *(void *)(v7 + 280) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.freeTextMedicationName.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 280);
  v3[9] = *(void *)(v5 + 272);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15AA6C;
}

void sub_22D15AA6C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 272) = v3;
    *(void *)(v8 + 280) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 272) = v3;
    *(void *)(v12 + 280) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.grouperID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 288);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D15AC38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 296);
  *a2 = *(void *)(v3 + 288);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15AC94(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 288) = v4;
  *(void *)(v7 + 296) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.grouperID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 288) = a1;
  *(void *)(v7 + 296) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.grouperID.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 296);
  v3[9] = *(void *)(v5 + 288);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15AE98;
}

void sub_22D15AE98(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 288) = v3;
    *(void *)(v8 + 296) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 288) = v3;
    *(void *)(v12 + 296) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTracking.freeTextQuantifiedStrengthUnit.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 304);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D15B064@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 312);
  *a2 = *(void *)(v3 + 304);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15B0C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 304) = v4;
  *(void *)(v7 + 312) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBMedicationTracking.freeTextQuantifiedStrengthUnit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1AADD4(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 304) = a1;
  *(void *)(v7 + 312) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTracking.freeTextQuantifiedStrengthUnit.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 312);
  v3[9] = *(void *)(v5 + 304);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15B2C4;
}

void sub_22D15B2C4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AADD4(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 304) = v3;
    *(void *)(v8 + 312) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AADD4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 304) = v3;
    *(void *)(v12 + 312) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t (*PBMedicationTracking.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t PBMedicationTracking.MedicationFreeTextForm.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 0x12;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D15B47C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBMedicationTracking.MedicationFreeTextForm.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D15B484@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBCycleTracking.OvulationTestResult.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22D15B4AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D0344();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

unint64_t PBMedicationTracking.MedicationFreeTextLoggingUnit.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 0xD;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D15B510@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBMedicationTracking.MedicationFreeTextLoggingUnit.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D15B518(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D02F0();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t PBMedicationTracking.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D116D6C(type metadata accessor for PBMedicationTracking, &qword_26853D248, &qword_2685407B0, a1);
}

void sub_22D15B59C()
{
  qword_268540008 = (uint64_t)&unk_26E05AA98;
}

uint64_t static PBMedicationTracking.MedicationFreeTextForm.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CEF0);
}

uint64_t static PBMedicationTracking.MedicationFreeTextForm.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CEF0, &qword_268540008);
}

uint64_t (*static PBMedicationTracking.MedicationFreeTextForm.allCases.modify())()
{
  if (qword_26853CEF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D15B680@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CEF0, &qword_268540008, a1);
}

void sub_22D15B6A4()
{
  qword_268540010 = (uint64_t)&unk_26E05ABD8;
}

uint64_t static PBMedicationTracking.MedicationFreeTextLoggingUnit.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CEF8);
}

uint64_t static PBMedicationTracking.MedicationFreeTextLoggingUnit.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CEF8, &qword_268540010);
}

uint64_t (*static PBMedicationTracking.MedicationFreeTextLoggingUnit.allCases.modify())()
{
  if (qword_26853CEF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D15B788@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CEF8, &qword_268540010, a1);
}

uint64_t (*PBMedicationTrackings.medicationTracking.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackings.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D12691C(type metadata accessor for PBMedicationTrackings, a1);
}

uint64_t PBMedicationTrackings.unknownFields.setter(uint64_t a1)
{
  return sub_22D1269B4(a1, type metadata accessor for PBMedicationTrackings);
}

uint64_t (*PBMedicationTrackings.unknownFields.modify())()
{
  return nullsub_1;
}

void PBMedicationTrackingDoseEvent.logOrigin.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBMedicationTrackingDoseEvent.logOrigin.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)uint64_t v1 = *(void *)result;
  *(unsigned char *)(v1 + 8) = v2;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.logOrigin.modify())()
{
  return nullsub_1;
}

void PBMedicationTrackingDoseEvent.status.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBMedicationTrackingDoseEvent.status.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 16) = *(void *)result;
  *(unsigned char *)(v1 + 24) = v2;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.status.modify())()
{
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingDoseEvent.scheduleItemIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingDoseEvent.medicationSemanticIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvent.scheduledDoseQuantity.getter()
{
  return *(unsigned int *)(v0 + 64);
}

uint64_t PBMedicationTrackingDoseEvent.scheduledDoseQuantity.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.scheduledDoseQuantity.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvent.doseQuantity.getter()
{
  return *(unsigned int *)(v0 + 68);
}

uint64_t PBMedicationTrackingDoseEvent.doseQuantity.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 68) = result;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.doseQuantity.modify())()
{
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingDoseEvent.scheduledDate.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvent.logDate.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBMedicationTrackingDoseEvent.logDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*PBMedicationTrackingDoseEvent.logDate.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvent.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBMedicationTrackingDoseEvent(0) + 48);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBMedicationTrackingDoseEvent.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBMedicationTrackingDoseEvent(0) + 48);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBMedicationTrackingDoseEvent.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_22D15BB54(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1BA078();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_22D15BBA0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1BA024();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t PBMedicationTrackingDoseEvent.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0xE000000000000000;
  type metadata accessor for PBMedicationTrackingDoseEvent(0);
  return sub_22D2BBFE0();
}

void sub_22D15BC4C()
{
  qword_268540018 = (uint64_t)&unk_26E05ACC8;
}

uint64_t static PBMedicationTrackingDoseEvent.LogOrigin.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CF00);
}

uint64_t static PBMedicationTrackingDoseEvent.LogOrigin.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CF00, &qword_268540018);
}

uint64_t (*static PBMedicationTrackingDoseEvent.LogOrigin.allCases.modify())()
{
  if (qword_26853CF00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D15BD30@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CF00, &qword_268540018, a1);
}

void sub_22D15BD54()
{
  qword_268540020 = (uint64_t)&unk_26E05AD18;
}

uint64_t static PBMedicationTrackingDoseEvent.Status.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CF08);
}

uint64_t static PBMedicationTrackingDoseEvent.Status.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CF08, &qword_268540020);
}

uint64_t (*static PBMedicationTrackingDoseEvent.Status.allCases.modify())()
{
  if (qword_26853CF08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D15BE38@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CF08, &qword_268540020, a1);
}

uint64_t (*PBMedicationTrackingDoseEvents.medicationTrackingDoseEvent.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingDoseEvents.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D12691C(type metadata accessor for PBMedicationTrackingDoseEvents, a1);
}

uint64_t PBMedicationTrackingDoseEvents.unknownFields.setter(uint64_t a1)
{
  return sub_22D1269B4(a1, type metadata accessor for PBMedicationTrackingDoseEvents);
}

uint64_t (*PBMedicationTrackingDoseEvents.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingSchedule.scheduleIdentifier.getter()
{
  return sub_22D126A90(type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D15BF0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = *(int *)(a5(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(a2 + v12) = a7(v13);
    swift_release();
  }
  uint64_t v14 = *(void *)(a2 + v12);
  swift_beginAccess();
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v10;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTrackingSchedule.scheduleIdentifier.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15C070;
}

void sub_22D15C070(uint64_t *a1, char a2)
{
}

void sub_22D15C09C(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  uint64_t v8 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = a4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v12 + 16) = v7;
    *(void *)(v12 + 24) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v6 + 96);
      uint64_t v14 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = a4(v15);
      swift_release();
    }
    uint64_t v16 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v16 + 16) = v7;
    *(void *)(v16 + 24) = v8;
  }
  swift_bridgeObjectRelease();
  free((void *)v6);
}

uint64_t PBMedicationTrackingSchedule.medicationSemanticIdentifier.getter()
{
  return sub_22D12A9FC(type metadata accessor for PBMedicationTrackingSchedule);
}

void (*PBMedicationTrackingSchedule.medicationSemanticIdentifier.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15C2CC;
}

void sub_22D15C2CC(uint64_t *a1, char a2)
{
}

uint64_t PBMedicationTrackingSchedule.createdUtcOffset.getter()
{
  return sub_22D1454AC(type metadata accessor for PBMedicationTrackingSchedule);
}

void (*PBMedicationTrackingSchedule.createdUtcOffset.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 56);
  v3[9] = *(void *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15C3A0;
}

void sub_22D15C3A0(uint64_t *a1, char a2)
{
}

uint64_t PBMedicationTrackingSchedule.startDateTime.getter()
{
  return sub_22D15C3E4(type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D15C3E4(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 64);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_22D15C448@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 72);
  *a3 = *(void *)(v4 + 64);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15C4A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AF328(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 64) = v4;
  *(void *)(v7 + 72) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTrackingSchedule.startDateTime.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 72);
  v3[9] = *(void *)(v5 + 64);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15C5F4;
}

void sub_22D15C5F4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AF328(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 64) = v3;
    *(void *)(v8 + 72) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AF328(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 64) = v3;
    *(void *)(v12 + 72) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTrackingSchedule.endDateTime.getter()
{
  return sub_22D15C77C(type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D15C77C(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 80);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_22D15C7E0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 88);
  *a3 = *(void *)(v4 + 80);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15C840(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AF328(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 80) = v4;
  *(void *)(v7 + 88) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTrackingSchedule.endDateTime.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 88);
  v3[9] = *(void *)(v5 + 80);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15C98C;
}

void sub_22D15C98C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AF328(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 80) = v3;
    *(void *)(v8 + 88) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AF328(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 80) = v3;
    *(void *)(v12 + 88) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTrackingSchedule.notes.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 96);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D15CB58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 104);
  *a2 = *(void *)(v3 + 96);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15CBB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AF328(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 96) = v4;
  *(void *)(v7 + 104) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTrackingSchedule.notes.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 104);
  v3[9] = *(void *)(v5 + 96);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15CD00;
}

void sub_22D15CD00(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1AF328(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 96) = v3;
    *(void *)(v8 + 104) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1AF328(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 96) = v3;
    *(void *)(v12 + 104) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTrackingSchedule.timeIntervals.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15CEC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  swift_beginAccess();
  *a2 = *(void *)(v3 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D15CF1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + v4) = sub_22D1AF328(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + v4);
  swift_beginAccess();
  *(void *)(v6 + 112) = v3;
  return swift_bridgeObjectRelease();
}

void (*PBMedicationTrackingSchedule.timeIntervals.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(void *)(v5 + 112);
  swift_bridgeObjectRetain();
  return sub_22D15D068;
}

void sub_22D15D068(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = *(int *)(v2 + 88);
      uint64_t v5 = *(void *)(v2 + 80);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + v4) = sub_22D1AF328(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v7 + 112) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = *(int *)(v2 + 88);
      uint64_t v9 = *(void *)(v2 + 80);
      type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + v8) = sub_22D1AF328(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v11 + 112) = v3;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBMedicationTrackingSchedule.frequencyType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 128);
  *(void *)a1 = *(void *)(v3 + 120);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_22D15D234(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1AF328(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 120) = v3;
  *(unsigned char *)(v7 + 128) = v4;
  return result;
}

void (*PBMedicationTrackingSchedule.frequencyType.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 128);
  v3[9] = *(void *)(v5 + 120);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D15D378;
}

void sub_22D15D378(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v8 + v7) = sub_22D1AF328(v9);
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v10 + 120) = v4;
  *(unsigned char *)(v10 + 128) = v5;
  free((void *)v3);
}

uint64_t PBMedicationTrackingSchedule.unrecognized.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 129);
}

uint64_t sub_22D15D4B4(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + v4) = sub_22D1AF328(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 129) = v3;
  return result;
}

void (*PBMedicationTrackingSchedule.unrecognized.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *(unsigned char *)(v5 + 129);
  return sub_22D15D5E8;
}

void sub_22D15D5E8(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v7 + v6) = sub_22D1AF328(v8);
    swift_release();
  }
LABEL_4:
  uint64_t v9 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 129);
  swift_beginAccess();
  unsigned char *v9 = v4;
  free((void *)v3);
}

uint64_t PBMedicationTrackingSchedule.compatibilityVersionRange.getter@<X0>(void *a1@<X8>)
{
  sub_22D167880(0, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  uint64_t v7 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  }
  *a1 = 0;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t sub_22D15D864@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_22D167880(0, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  sub_22D1B9E60(v7, (uint64_t)v6, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  uint64_t v8 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D1D06E8((uint64_t)v6, (uint64_t)a2, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  }
  *a2 = 0;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v6, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

void (*PBMedicationTrackingSchedule.compatibilityVersionRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  }
  return sub_22D15DBF8;
}

void sub_22D15DBF8(uint64_t a1, char a2)
{
}

BOOL PBMedicationTrackingSchedule.hasCompatibilityVersionRange.getter()
{
  sub_22D167880(0, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  uint64_t v5 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  return v6;
}

Swift::Void __swiftcall PBMedicationTrackingSchedule.clearCompatibilityVersionRange()()
{
  sub_22D167880(0, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1AF328(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBMedicationTrackingSchedule.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_22D15DF40(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D029C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D15DF8C()
{
  qword_268540028 = (uint64_t)&unk_26E05ADA8;
}

uint64_t static PBMedicationTrackingSchedule.HKFrequencyType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853CF10);
}

uint64_t static PBMedicationTrackingSchedule.HKFrequencyType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853CF10, &qword_268540028);
}

uint64_t (*static PBMedicationTrackingSchedule.HKFrequencyType.allCases.modify())()
{
  if (qword_26853CF10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D15E070@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853CF10, &qword_268540028, a1);
}

uint64_t (*PBMedicationTrackingScheduleCompatibilityVersionRange.minimumCompatibilityVersion.modify())()
{
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingScheduleCompatibilityVersionRange.originCompatibilityVersion.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1211B0(type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, a1);
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.unknownFields.setter(uint64_t a1)
{
  return sub_22D121248(a1, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t (*PBMedicationTrackingScheduleCompatibilityVersionRange.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBMedicationTrackingSchedules.medicationTrackingSchedule.modify())()
{
  return nullsub_1;
}

uint64_t PBMedicationTrackingSchedules.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D12691C(type metadata accessor for PBMedicationTrackingSchedules, a1);
}

uint64_t PBMedicationTrackingSchedules.unknownFields.setter(uint64_t a1)
{
  return sub_22D1269B4(a1, type metadata accessor for PBMedicationTrackingSchedules);
}

uint64_t (*PBMedicationTrackingSchedules.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.daysOfWeek.getter@<X0>(_DWORD *a1@<X8>)
{
  sub_22D167880(0, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_22D1B9E60(v6, (uint64_t)v5, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  uint64_t v7 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1D06E8((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  }
  *(_DWORD *)((char *)a1 + 3) = 0;
  *a1 = 0;
  sub_22D2BBFE0();
  return sub_22D1D08A0((uint64_t)v5, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_22D15E37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(char *))
{
  uint64_t v10 = a5(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v14 - v11;
  sub_22D1D0A4C(a1, (uint64_t)&v14 - v11, a6);
  return a7(v12);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.init()@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  *(_DWORD *)((char *)a1 + 3) = 0;
  return sub_22D2BBFE0();
}

void (*PBHKMedicationScheduleIntervalData.daysOfWeek.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D167880(0, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_DWORD *)((char *)v9 + 3) = 0;
    _DWORD *v9 = 0;
    sub_22D2BBFE0();
    sub_22D1D08A0((uint64_t)v5, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  }
  return sub_22D15E65C;
}

void sub_22D15E65C(uint64_t a1, char a2)
{
}

void sub_22D15E69C(uint64_t a1, char a2, void (*a3)(void *), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(*(void *)a1 + 40);
  size_t v8 = *(void **)(*(void *)a1 + 48);
  uint64_t v9 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    sub_22D1D0A4C(*(void *)(*(void *)a1 + 48), (uint64_t)v7, a4);
    a3(v7);
    sub_22D1B9750((uint64_t)v8, a5);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 48));
  }
  free(v8);
  free(v7);
  free(v9);
  free(v6);
}

BOOL PBHKMedicationScheduleIntervalData.hasDaysOfWeek.getter()
{
  sub_22D167880(0, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_22D1B9E60(v4, (uint64_t)v3, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  uint64_t v5 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1D08A0((uint64_t)v3, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  return v6;
}

Swift::Void __swiftcall PBHKMedicationScheduleIntervalData.clearDaysOfWeek()()
{
  sub_22D167880(0, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1B211C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  swift_retain();
  sub_22D1B9D9C((uint64_t)v3, v8, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_endAccess();
  swift_release();
}

uint64_t PBHKMedicationScheduleIntervalData.cycleIndex.getter()
{
  return sub_22D12650C(type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
}

void (*PBHKMedicationScheduleIntervalData.cycleIndex.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = (_DWORD *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_22D15EAE0;
}

void sub_22D15EAE0(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationScheduleIntervalData.cycleIntervalDays.getter()
{
  return sub_22D12650C(type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
}

void (*PBHKMedicationScheduleIntervalData.cycleIntervalDays.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = (_DWORD *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_22D15EBC8;
}

void sub_22D15EBC8(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationScheduleIntervalData.dose.getter()
{
  return sub_22D12650C(type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
}

void (*PBHKMedicationScheduleIntervalData.dose.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = (_DWORD *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *v5;
  return sub_22D15ECB0;
}

void sub_22D15ECB0(uint64_t *a1, char a2)
{
}

uint64_t PBHKMedicationScheduleIntervalData.startTime.getter()
{
  return sub_22D11923C(type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
}

void (*PBHKMedicationScheduleIntervalData.startTime.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBHKMedicationScheduleIntervalData(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D15EDA0;
}

void sub_22D15EDA0(uint64_t *a1, char a2)
{
}

uint64_t (*PBHKMedicationScheduleIntervalData.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.sunday.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.monday.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.tuesday.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.tuesday.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.tuesday.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.wednesday.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.thursday.getter()
{
  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.thursday.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.thursday.modify())()
{
  return nullsub_1;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.friday.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.saturday.getter()
{
  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.saturday.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 6) = result;
  return result;
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.saturday.modify())()
{
  return nullsub_1;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D15EF24(type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, a1);
}

uint64_t sub_22D15EF24@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 44);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.unknownFields.setter(uint64_t a1)
{
  return sub_22D15EFBC(a1, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_22D15EFBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 44);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_22D15F080()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540030);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540030);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2BFF30;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "NONE";
  *(void *)(v7 + 8) = 4;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "SINGLE";
  *(void *)(v11 + 8) = 6;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 2;
  *(void *)uint64_t v13 = "RANGE";
  *((void *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 3;
  *(void *)uint64_t v15 = "LIST";
  *((void *)v15 + 1) = 4;
  v15[16] = 2;
  v10();
  uint64_t v16 = v6 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v6 + 4 * v3) = 4;
  *(void *)uint64_t v16 = "TAGGED_LIST";
  *(void *)(v16 + 8) = 11;
  *(unsigned char *)(v16 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBInspectableValueCollectionType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF18, (uint64_t)qword_268540030, a1);
}

uint64_t sub_22D15F348@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF18, (uint64_t)qword_268540030, a1);
}

uint64_t sub_22D15F36C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540048);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540048);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_22D2C3FB0;
  unint64_t v5 = v33 + v4;
  unint64_t v6 = v33 + v4 + *(int *)(v2 + 56);
  *(void *)(v33 + v4) = 0;
  *(void *)unint64_t v6 = "NOT_SPECIFIED";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v33 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "RATIO";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v33 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *unint64_t v11 = 2;
  *(void *)uint64_t v12 = "MEDICAL_DATE";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v33 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "MEDICAL_DATE_INTERVAL";
  *((void *)v14 + 1) = 21;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v33 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "DATE_COMPONENTS";
  *((void *)v16 + 1) = 15;
  v16[16] = 2;
  v9();
  v17 = (void *)(v33 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)v18 = "NULL";
  *((void *)v18 + 1) = 4;
  v18[16] = 2;
  v9();
  v19 = (void *)(v33 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)v20 = "CODED_QUANTITY";
  *((void *)v20 + 1) = 14;
  v20[16] = 2;
  v9();
  v21 = (void *)(v33 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)v22 = "MEDICAL_CODINGS";
  *((void *)v22 + 1) = 15;
  v22[16] = 2;
  v9();
  uint64_t v23 = v33 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "CODED_VALUE_COLLECTION";
  *(void *)(v23 + 8) = 22;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  v24 = (void *)(v33 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)v25 = "DATA_ABSENT_REASON_CODINGS";
  *((void *)v25 + 1) = 26;
  v25[16] = 2;
  v9();
  v26 = (void *)(v33 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 10;
  *(void *)v27 = "STRING";
  *((void *)v27 + 1) = 6;
  v27[16] = 2;
  v9();
  v28 = (void *)(v33 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 11;
  *(void *)v29 = "INTEGER";
  *((void *)v29 + 1) = 7;
  v29[16] = 2;
  v9();
  v30 = (void *)(v33 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 12;
  *(void *)v31 = "BOOLEAN";
  *((void *)v31 + 1) = 7;
  v31[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBInspectableValueType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF20, (uint64_t)qword_268540048, a1);
}

uint64_t sub_22D15F80C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF20, (uint64_t)qword_268540048, a1);
}

unint64_t static PBDateRange.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_22D15F84C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540060);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540060);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 1;
  *(void *)unint64_t v7 = "start_time";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)unint64_t v11 = "end_time";
  *((void *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "granularity";
  *(void *)(v12 + 8) = 11;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBDateRange._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF28, (uint64_t)qword_268540060, a1);
}

uint64_t PBDateRange.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_22D1B9EE0();
        sub_22D2BC0D0();
      }
      else if (result == 2 || result == 1)
      {
        sub_22D2BC170();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBDateRange.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    unint64_t v5 = v0[3];
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
    {
      if (!v0[4] || (sub_22D1B9EE0(), uint64_t result = sub_22D2BC240(), !v1))
      {
        type metadata accessor for PBDateRange(0);
        return sub_22D2BBFD0();
      }
    }
  }
  return result;
}

uint64_t PBDateRange.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBDateRange, &qword_268540E00, (void (*)(uint64_t))type metadata accessor for PBDateRange);
}

unint64_t sub_22D15FD14()
{
  return 0xD000000000000024;
}

uint64_t sub_22D15FD30()
{
  return PBDateRange.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D15FD48()
{
  return PBDateRange.traverse<A>(visitor:)();
}

uint64_t sub_22D15FD60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541F08, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D15FDDC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF28, (uint64_t)qword_268540060, a1);
}

uint64_t sub_22D15FE00(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D15FE6C()
{
  sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  return sub_22D2BC200();
}

unint64_t static PBTimeSeries.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_22D15FF08()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540078);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540078);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "date_range";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 3;
  *(void *)unint64_t v11 = "data_source";
  *(void *)(v11 + 8) = 11;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "unit";
  *((void *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "values";
  *((void *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBTimeSeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF30, (uint64_t)qword_268540078, a1);
}

uint64_t sub_22D160198()
{
  type metadata accessor for PBTimeSeries._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  uint64_t v2 = type metadata accessor for PBDateRange(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  uint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  *uint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values) = MEMORY[0x263F8EE78];
  qword_268540090 = v0;
  return result;
}

uint64_t sub_22D160258(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v21[-v4];
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  unint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values) = MEMORY[0x263F8EE78];
  uint64_t v11 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v11, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v5, v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  uint64_t v12 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  swift_beginAccess();
  *uint64_t v8 = v14;
  v8[1] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  swift_beginAccess();
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  swift_beginAccess();
  void *v9 = v17;
  v9[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  swift_beginAccess();
  uint64_t v19 = *v18;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *unint64_t v10 = v19;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22D1604F8()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBTimeSeries.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBTimeSeries, (void (*)(void))type metadata accessor for PBTimeSeries._StorageClass, sub_22D160258, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D160618);
}

uint64_t sub_22D160618()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBDateRange(0);
          sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 3:
        case 4:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          type metadata accessor for PBTimeSeries.Value(0);
          sub_22D1B9F34(&qword_268541268, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
          uint64_t v4 = v3;
          sub_22D2BC190();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBTimeSeries.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBTimeSeries, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D160890);
}

uint64_t sub_22D160890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v26[15] = a4;
  v26[0] = a3;
  v26[1] = a2;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v26 - v8;
  uint64_t v10 = type metadata accessor for PBDateRange(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v9, (uint64_t)v13, type metadata accessor for PBDateRange);
    sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750((uint64_t)v13, type metadata accessor for PBDateRange);
    if (v4) {
      return result;
    }
  }
  uint64_t v17 = (uint64_t *)(v14
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  uint64_t v18 = *v17;
  unint64_t v19 = v17[1];
  uint64_t v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v20 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (!v20 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v5))
  {
    v21 = (uint64_t *)(v14
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
    swift_beginAccess();
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    uint64_t v24 = HIBYTE(v23) & 0xF;
    if ((v23 & 0x2000000000000000) == 0) {
      uint64_t v24 = v22 & 0xFFFFFFFFFFFFLL;
    }
    if (!v24 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v5))
    {
      uint64_t v25 = v14
          + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values;
      uint64_t result = swift_beginAccess();
      if (*(void *)(*(void *)v25 + 16))
      {
        type metadata accessor for PBTimeSeries.Value(0);
        sub_22D1B9F34(&qword_268541268, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
        swift_bridgeObjectRetain();
        sub_22D2BC2D0();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_22D160C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v3 = type metadata accessor for PBDateRange(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  v38 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v38 - v8;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  v39 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v16 = v40;
  uint64_t v17 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_22D1B9E60((uint64_t)v14, (uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
  sub_22D1B9E60(v17, v18, &qword_26853D7B0, type metadata accessor for PBDateRange);
  unint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    uint64_t v21 = (uint64_t)v38;
    uint64_t v20 = a1;
    uint64_t v22 = v39;
    sub_22D1B9E60((uint64_t)v9, (uint64_t)v39, &qword_26853D7B0, type metadata accessor for PBDateRange);
    if (v19(v18, 1, v3) != 1)
    {
      sub_22D1D06E8(v18, v21, type metadata accessor for PBDateRange);
      swift_retain();
      swift_retain();
      char v23 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v22, v21);
      sub_22D1B9750(v21, type metadata accessor for PBDateRange);
      sub_22D1D08A0((uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
      sub_22D1B9750((uint64_t)v22, type metadata accessor for PBDateRange);
      sub_22D1D08A0((uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
      if (v23) {
        goto LABEL_8;
      }
LABEL_15:
      swift_release();
      swift_release();
      char v36 = 0;
      return v36 & 1;
    }
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
    sub_22D1B9750((uint64_t)v22, type metadata accessor for PBDateRange);
LABEL_6:
    sub_22D1D05E4((uint64_t)v9, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
    goto LABEL_15;
  }
  swift_retain();
  swift_retain();
  sub_22D1D08A0((uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v20 = a1;
  if (v19(v18, 1, v3) != 1) {
    goto LABEL_6;
  }
  sub_22D1D08A0((uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
LABEL_8:
  uint64_t v24 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  v27 = (void *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  if ((v25 != *v27 || v26 != v27[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_15;
  }
  v28 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  swift_beginAccess();
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  v31 = (void *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
  swift_beginAccess();
  if ((v29 != *v31 || v30 != v31[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_15;
  }
  v32 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  swift_beginAccess();
  uint64_t v33 = *v32;
  v34 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
  swift_beginAccess();
  uint64_t v35 = *v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v36 = sub_22D1130B8(v33, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v36 & 1;
}

uint64_t PBTimeSeries.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBTimeSeries, &qword_268540E08, (void (*)(uint64_t))type metadata accessor for PBTimeSeries);
}

uint64_t sub_22D1612BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CF38, &qword_268540090, a2);
}

unint64_t sub_22D1612E0()
{
  return 0xD000000000000025;
}

uint64_t sub_22D1612FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTimeSeries.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D161314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBTimeSeries.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D16132C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541F00, (void (*)(uint64_t))type metadata accessor for PBTimeSeries);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1613A8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF30, (uint64_t)qword_268540078, a1);
}

uint64_t sub_22D1613CC(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBF0, (void (*)(uint64_t))type metadata accessor for PBTimeSeries);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D161438()
{
  sub_22D1B9F34(&qword_26853DBF0, (void (*)(uint64_t))type metadata accessor for PBTimeSeries);
  return sub_22D2BC200();
}

uint64_t sub_22D1614B8()
{
  uint64_t result = sub_22D2BCCB0();
  qword_268540098 = 0xD000000000000025;
  unk_2685400A0 = 0x800000022D2D8CA0;
  return result;
}

uint64_t static PBTimeSeries.Value.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853CF40, &qword_268540098);
}

uint64_t sub_22D161548()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685400A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685400A8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_22D2C79B0;
  unint64_t v5 = v39 + v4;
  unint64_t v6 = v39 + v4 + *(int *)(v2 + 56);
  *(void *)(v39 + v4) = 1;
  *(void *)unint64_t v6 = "min_float";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "max_float";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "mean_float";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "sum_float";
  *((void *)v14 + 1) = 9;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "raw_float";
  *((void *)v16 + 1) = 9;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "recorded_time";
  *((void *)v18 + 1) = 13;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "measure_count";
  *((void *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "unit";
  *((void *)v22 + 1) = 4;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "data_source";
  *(void *)(v23 + 8) = 11;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v5 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)uint64_t v25 = "min";
  *((void *)v25 + 1) = 3;
  v25[16] = 2;
  v9();
  uint64_t v26 = (void *)(v5 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 11;
  *(void *)v27 = "max";
  *((void *)v27 + 1) = 3;
  v27[16] = 2;
  v9();
  v28 = (void *)(v5 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 12;
  *(void *)uint64_t v29 = "mean";
  *((void *)v29 + 1) = 4;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v5 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 13;
  *(void *)v31 = "sum";
  *((void *)v31 + 1) = 3;
  v31[16] = 2;
  v9();
  v32 = (void *)(v5 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 14;
  *(void *)uint64_t v33 = "raw";
  *((void *)v33 + 1) = 3;
  v33[16] = 2;
  v9();
  v34 = (void *)(v5 + 14 * v3);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 16;
  *(void *)uint64_t v35 = "data_sources";
  *((void *)v35 + 1) = 12;
  v35[16] = 2;
  v9();
  char v36 = (void *)(v5 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v2 + 56);
  *char v36 = 17;
  *(void *)v37 = "glucose_meal_time";
  *((void *)v37 + 1) = 17;
  v37[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBTimeSeries.Value._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF48, (uint64_t)qword_2685400A8, a1);
}

uint64_t PBTimeSeries.Value.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v4 = v1;
  if (!v1)
  {
    while ((v3 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          uint64_t v5 = v4;
          sub_22D2BC120();
          goto LABEL_9;
        case 6:
        case 8:
        case 9:
          uint64_t v5 = v4;
          sub_22D2BC170();
          goto LABEL_9;
        case 7:
          uint64_t v5 = v4;
          sub_22D2BC130();
          goto LABEL_9;
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
          uint64_t v5 = v4;
          sub_22D2BC150();
          goto LABEL_9;
        case 16:
          uint64_t v5 = v4;
          sub_22D2BC140();
LABEL_9:
          uint64_t v4 = v5;
          break;
        case 17:
          if ((*(unsigned char *)(v0 + 137) & 1) == 0) {
            sub_22D2BC090();
          }
          sub_22D1B9F7C();
          sub_22D2BC0C0();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBTimeSeries.Value.traverse<A>(visitor:)()
{
  if (*(float *)v0 == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
  {
    if (*(float *)(v0 + 4) == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
    {
      if (*(float *)(v0 + 8) == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
      {
        if (*(float *)(v0 + 12) == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
        {
          if (*(float *)(v0 + 16) == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
          {
            unint64_t v2 = *(void *)(v0 + 32);
            uint64_t v3 = HIBYTE(v2) & 0xF;
            if ((v2 & 0x2000000000000000) == 0) {
              uint64_t v3 = *(void *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
            }
            if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
            {
              if (!*(_DWORD *)(v0 + 40) || (uint64_t result = sub_22D2BC280(), !v1))
              {
                unint64_t v5 = *(void *)(v0 + 56);
                uint64_t v6 = HIBYTE(v5) & 0xF;
                if ((v5 & 0x2000000000000000) == 0) {
                  uint64_t v6 = *(void *)(v0 + 48) & 0xFFFFFFFFFFFFLL;
                }
                if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
                {
                  unint64_t v7 = *(void *)(v0 + 72);
                  uint64_t v8 = HIBYTE(v7) & 0xF;
                  if ((v7 & 0x2000000000000000) == 0) {
                    uint64_t v8 = *(void *)(v0 + 64) & 0xFFFFFFFFFFFFLL;
                  }
                  if (!v8 || (uint64_t result = sub_22D2BC2B0(), !v1))
                  {
                    if (*(double *)(v0 + 80) == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
                    {
                      if (*(double *)(v0 + 88) == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
                      {
                        if (*(double *)(v0 + 96) == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
                        {
                          if (*(double *)(v0 + 104) == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
                          {
                            if (*(double *)(v0 + 112) == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
                            {
                              if (!*(void *)(*(void *)(v0 + 120) + 16) || (uint64_t result = sub_22D2BC290(), !v1))
                              {
                                if ((*(unsigned char *)(v0 + 137) & 1) != 0 || (sub_22D1B9F7C(), uint64_t result = sub_22D2BC240(), !v1))
                                {
                                  type metadata accessor for PBTimeSeries.Value(0);
                                  return sub_22D2BBFD0();
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBTimeSeries.Value.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBTimeSeries.Value, &qword_268540E18, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
}

uint64_t sub_22D162134(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853CF40, &qword_268540098);
}

uint64_t sub_22D16215C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 80);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_22D1621CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 80);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_22D16223C())()
{
  return nullsub_1;
}

uint64_t sub_22D162260()
{
  return PBTimeSeries.Value.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D162278()
{
  return PBTimeSeries.Value.traverse<A>(visitor:)();
}

uint64_t sub_22D162290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EF8, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D16230C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF48, (uint64_t)qword_2685400A8, a1);
}

uint64_t sub_22D162330(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541268, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D16239C()
{
  sub_22D1B9F34(&qword_268541268, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
  return sub_22D2BC200();
}

unint64_t static PBBucket.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_22D162438()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685400C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685400C0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "start";
  *(void *)(v7 + 8) = 5;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "end";
  *((void *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "value";
  *(void *)(v12 + 8) = 5;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBBucket._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF50, (uint64_t)qword_2685400C0, a1);
}

uint64_t PBBucket.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_22D2BC130();
      }
      else if (result == 2 || result == 1)
      {
        sub_22D2BC150();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBBucket.traverse<A>(visitor:)()
{
  if (*(double *)v0 == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
  {
    if (*(double *)(v0 + 8) == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
    {
      if (!*(_DWORD *)(v0 + 16) || (uint64_t result = sub_22D2BC280(), !v1))
      {
        type metadata accessor for PBBucket(0);
        return sub_22D2BBFD0();
      }
    }
  }
  return result;
}

uint64_t PBBucket.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBBucket, &qword_268540E20, (void (*)(uint64_t))type metadata accessor for PBBucket);
}

uint64_t sub_22D162878@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  return sub_22D2BBFE0();
}

unint64_t sub_22D1628A0()
{
  return 0xD000000000000021;
}

uint64_t sub_22D1628BC()
{
  return PBBucket.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1628D4()
{
  return PBBucket.traverse<A>(visitor:)();
}

uint64_t sub_22D1628EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EF0, (void (*)(uint64_t))type metadata accessor for PBBucket);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D162968@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF50, (uint64_t)qword_2685400C0, a1);
}

uint64_t sub_22D16298C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268540E38, (void (*)(uint64_t))type metadata accessor for PBBucket);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1629F8()
{
  sub_22D1B9F34(&qword_268540E38, (void (*)(uint64_t))type metadata accessor for PBBucket);
  return sub_22D2BC200();
}

unint64_t static PBHistogramSeries.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D162A94()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685400D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685400D8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "values";
  *(void *)(v7 + 8) = 6;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "unit";
  *((void *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHistogramSeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF58, (uint64_t)qword_2685400D8, a1);
}

uint64_t PBHistogramSeries.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_22D2BC170();
      }
      else if (result == 1)
      {
        type metadata accessor for PBHistogramSeries.Value(0);
        sub_22D1B9F34(&qword_268540E28, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value);
        sub_22D2BC190();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHistogramSeries.traverse<A>(visitor:)()
{
  if (!*(void *)(*v0 + 16)
    || (type metadata accessor for PBHistogramSeries.Value(0),
        sub_22D1B9F34(&qword_268540E28, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value), uint64_t result = sub_22D2BC2D0(), !v1))
  {
    unint64_t v3 = v0[2];
    uint64_t v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v4 = v0[1] & 0xFFFFFFFFFFFFLL;
    }
    if (!v4 || (uint64_t result = sub_22D2BC2B0(), !v1))
    {
      type metadata accessor for PBHistogramSeries(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t PBHistogramSeries.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHistogramSeries, &qword_268540E30, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries);
}

unint64_t sub_22D162F20()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D162F44()
{
  return PBHistogramSeries.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D162F5C()
{
  return PBHistogramSeries.traverse<A>(visitor:)();
}

uint64_t sub_22D162F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EE8, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D162FF0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF58, (uint64_t)qword_2685400D8, a1);
}

uint64_t sub_22D163014(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DB90, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D163080()
{
  sub_22D1B9F34(&qword_26853DB90, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries);
  return sub_22D2BC200();
}

uint64_t sub_22D163100()
{
  uint64_t result = sub_22D2BCCB0();
  qword_2685400F0 = 0xD00000000000002ALL;
  *(void *)algn_2685400F8 = 0x800000022D2D8D00;
  return result;
}

uint64_t static PBHistogramSeries.Value.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853CF60, &qword_2685400F0);
}

uint64_t sub_22D163190()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540100);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540100);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "recorded_time";
  *(void *)(v7 + 8) = 13;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "buckets";
  *((void *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "identifier";
  *(void *)(v12 + 8) = 10;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHistogramSeries.Value._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF68, (uint64_t)qword_268540100, a1);
}

uint64_t PBHistogramSeries.Value.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        type metadata accessor for PBBucket(0);
        sub_22D1B9F34(&qword_268540E38, (void (*)(uint64_t))type metadata accessor for PBBucket);
        sub_22D2BC190();
      }
      else if (result == 1)
      {
        break;
      }
LABEL_11:
      uint64_t result = sub_22D2BC080();
    }
    sub_22D2BC170();
    goto LABEL_11;
  }
  return result;
}

uint64_t PBHistogramSeries.Value.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    if (!*(void *)(v0[2] + 16)
      || (type metadata accessor for PBBucket(0),
          sub_22D1B9F34(&qword_268540E38, (void (*)(uint64_t))type metadata accessor for PBBucket),
          uint64_t result = sub_22D2BC2D0(),
          !v1))
    {
      unint64_t v5 = v0[4];
      uint64_t v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0) {
        uint64_t v6 = v0[3] & 0xFFFFFFFFFFFFLL;
      }
      if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
      {
        type metadata accessor for PBHistogramSeries.Value(0);
        return sub_22D2BBFD0();
      }
    }
  }
  return result;
}

uint64_t PBHistogramSeries.Value.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHistogramSeries.Value, &qword_268540E40, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value);
}

uint64_t sub_22D1636CC(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853CF60, &qword_2685400F0);
}

uint64_t sub_22D1636F4()
{
  return PBHistogramSeries.Value.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D16370C()
{
  return PBHistogramSeries.Value.traverse<A>(visitor:)();
}

uint64_t sub_22D163724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EE0, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1637A0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF68, (uint64_t)qword_268540100, a1);
}

uint64_t sub_22D1637C4(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268540E28, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D163830()
{
  sub_22D1B9F34(&qword_268540E28, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value);
  return sub_22D2BC200();
}

unint64_t static PBSleepSeries.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_22D1638CC(uint64_t a1)
{
  return sub_22D1B170C(a1, qword_268540118, (uint64_t)"values", 6, MEMORY[0x263F50718]);
}

uint64_t static PBSleepSeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF70, (uint64_t)qword_268540118, a1);
}

uint64_t PBSleepSeries.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B1914(a1, a2, a3, (void (*)(void))type metadata accessor for PBSleepSeries.Value, &qword_268540E48, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
}

uint64_t PBSleepSeries.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBSleepSeries.Value(0),
        sub_22D1B9F34(&qword_268540E48, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBSleepSeries(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t PBSleepSeries.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBSleepSeries, &qword_268540E50, (void (*)(uint64_t))type metadata accessor for PBSleepSeries);
}

unint64_t sub_22D163AA0()
{
  return 0xD000000000000026;
}

uint64_t sub_22D163ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBSleepSeries.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D163AD4()
{
  return PBSleepSeries.traverse<A>(visitor:)();
}

uint64_t sub_22D163AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541ED8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D163B68@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF70, (uint64_t)qword_268540118, a1);
}

uint64_t sub_22D163B8C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DB98, (void (*)(uint64_t))type metadata accessor for PBSleepSeries);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D163BF8()
{
  sub_22D1B9F34(&qword_26853DB98, (void (*)(uint64_t))type metadata accessor for PBSleepSeries);
  return sub_22D2BC200();
}

uint64_t sub_22D163C74(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D1116A8, type metadata accessor for PBSleepSeries) & 1;
}

uint64_t sub_22D163CB8()
{
  uint64_t result = sub_22D2BCCB0();
  qword_268540130 = 0xD000000000000026;
  *(void *)algn_268540138 = 0x800000022D2D8D30;
  return result;
}

uint64_t static PBSleepSeries.Value.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853CF78, &qword_268540130);
}

uint64_t sub_22D163D48()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540140);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540140);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "recorded_time";
  *(void *)(v7 + 8) = 13;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "mean_asleep";
  *(void *)(v11 + 8) = 11;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "mean_in_bed";
  *((void *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "mean_time_to_sleep";
  *((void *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBSleepSeries.Value._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF80, (uint64_t)qword_268540140, a1);
}

uint64_t PBSleepSeries.Value.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_22D2BC170();
          break;
        case 2:
        case 3:
        case 4:
          sub_22D2BC180();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBSleepSeries.Value.traverse<A>(visitor:)()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    if (!*(_DWORD *)(v0 + 16) || (uint64_t result = sub_22D2BC2C0(), !v1))
    {
      if (!*(_DWORD *)(v0 + 20) || (uint64_t result = sub_22D2BC2C0(), !v1))
      {
        if (!*(_DWORD *)(v0 + 24) || (uint64_t result = sub_22D2BC2C0(), !v1))
        {
          type metadata accessor for PBSleepSeries.Value(0);
          return sub_22D2BBFD0();
        }
      }
    }
  }
  return result;
}

uint64_t PBSleepSeries.Value.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBSleepSeries.Value, &qword_268540E58, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
}

uint64_t sub_22D164220@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  return sub_22D2BBFE0();
}

uint64_t sub_22D164250(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853CF78, &qword_268540130);
}

uint64_t sub_22D164278()
{
  return PBSleepSeries.Value.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D164290()
{
  return PBSleepSeries.Value.traverse<A>(visitor:)();
}

uint64_t sub_22D1642A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541ED0, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D164324@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF80, (uint64_t)qword_268540140, a1);
}

uint64_t sub_22D164348(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268540E48, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1643B4()
{
  sub_22D1B9F34(&qword_268540E48, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
  return sub_22D2BC200();
}

unint64_t static PBSleepSummary.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_22D164450()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540158);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540158);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 1;
  *(void *)unint64_t v7 = "schedule";
  *(void *)(v7 + 8) = 8;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)unint64_t v11 = "sleep_goal";
  *((void *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBSleepSummary._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF88, (uint64_t)qword_268540158, a1);
}

uint64_t PBSleepSummary.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_22D2BC120();
      }
      else if (result == 1)
      {
        type metadata accessor for PBSleepSummary.Schedule(0);
        sub_22D1B9F34(&qword_268540E60, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
        sub_22D2BC190();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBSleepSummary.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBSleepSummary.Schedule(0),
        sub_22D1B9F34(&qword_268540E60, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule), uint64_t result = sub_22D2BC2D0(), !v1))
  {
    if (v0[2] == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
    {
      type metadata accessor for PBSleepSummary(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t PBSleepSummary.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBSleepSummary, &qword_268540E68, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
}

uint64_t sub_22D1648D8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x263F8EE78];
  *(_DWORD *)(a1 + 8) = 0;
  return sub_22D2BBFE0();
}

unint64_t sub_22D164908()
{
  return 0xD000000000000027;
}

uint64_t sub_22D164924()
{
  return PBSleepSummary.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D16493C()
{
  return PBSleepSummary.traverse<A>(visitor:)();
}

uint64_t sub_22D164954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EC8, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1649D0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF88, (uint64_t)qword_268540158, a1);
}

uint64_t sub_22D1649F4(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBA0, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D164A60()
{
  sub_22D1B9F34(&qword_26853DBA0, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
  return sub_22D2BC200();
}

uint64_t sub_22D164AE0()
{
  uint64_t result = sub_22D2BCCB0();
  qword_268540170 = 0xD000000000000027;
  *(void *)algn_268540178 = 0x800000022D2D8D60;
  return result;
}

uint64_t static PBSleepSummary.Schedule.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853CF90, &qword_268540170);
}

uint64_t sub_22D164B78()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540180);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540180);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_22D2C79C0;
  unint64_t v5 = v25 + v4;
  unint64_t v6 = v25 + v4 + *(int *)(v2 + 56);
  *(void *)(v25 + v4) = 1;
  *(void *)unint64_t v6 = "sunday";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "monday";
  *(void *)(v10 + 8) = 6;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *unint64_t v11 = 3;
  *(void *)uint64_t v12 = "tuesday";
  *((void *)v12 + 1) = 7;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "wednesday";
  *((void *)v14 + 1) = 9;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "thursday";
  *((void *)v16 + 1) = 8;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "friday";
  *((void *)v18 + 1) = 6;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "saturday";
  *((void *)v20 + 1) = 8;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "bedtime";
  *((void *)v22 + 1) = 7;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "awake";
  *(void *)(v23 + 8) = 5;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBSleepSummary.Schedule._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CF98, (uint64_t)qword_268540180, a1);
}

uint64_t PBSleepSummary.Schedule.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
          sub_22D2BC0B0();
          break;
        case 8:
        case 9:
          sub_22D2BC180();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBSleepSummary.Schedule.traverse<A>(visitor:)()
{
  if (*(unsigned char *)v0 != 1 || (uint64_t result = sub_22D2BC230(), !v1))
  {
    if (*(unsigned char *)(v0 + 1) != 1 || (uint64_t result = sub_22D2BC230(), !v1))
    {
      if (*(unsigned char *)(v0 + 2) != 1 || (uint64_t result = sub_22D2BC230(), !v1))
      {
        if (*(unsigned char *)(v0 + 3) != 1 || (uint64_t result = sub_22D2BC230(), !v1))
        {
          if (*(unsigned char *)(v0 + 4) != 1 || (uint64_t result = sub_22D2BC230(), !v1))
          {
            if (*(unsigned char *)(v0 + 5) != 1 || (uint64_t result = sub_22D2BC230(), !v1))
            {
              if (*(unsigned char *)(v0 + 6) != 1 || (uint64_t result = sub_22D2BC230(), !v1))
              {
                if (!*(_DWORD *)(v0 + 8) || (uint64_t result = sub_22D2BC2C0(), !v1))
                {
                  if (!*(_DWORD *)(v0 + 12) || (uint64_t result = sub_22D2BC2C0(), !v1))
                  {
                    type metadata accessor for PBSleepSummary.Schedule(0);
                    return sub_22D2BBFD0();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBSleepSummary.Schedule.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBSleepSummary.Schedule, &qword_268540E70, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
}

uint64_t sub_22D1652C8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 3) = 0;
  return sub_22D2BBFE0();
}

uint64_t sub_22D1652F4(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853CF90, &qword_268540170);
}

uint64_t (*sub_22D165324())()
{
  return nullsub_1;
}

uint64_t sub_22D165348()
{
  return PBSleepSummary.Schedule.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D165360()
{
  return PBSleepSummary.Schedule.traverse<A>(visitor:)();
}

uint64_t sub_22D165378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EC0, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1653F4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CF98, (uint64_t)qword_268540180, a1);
}

uint64_t sub_22D165418(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268540E60, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D165484()
{
  sub_22D1B9F34(&qword_268540E60, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
  return sub_22D2BC200();
}

unint64_t static PBCategorySeries.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_22D165520()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540198);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540198);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 1;
  *(void *)unint64_t v7 = "date_range";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)unint64_t v11 = "data_source";
  *((void *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "events";
  *(void *)(v12 + 8) = 6;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBCategorySeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CFA0, (uint64_t)qword_268540198, a1);
}

uint64_t sub_22D165778()
{
  type metadata accessor for PBCategorySeries._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  uint64_t v2 = type metadata accessor for PBDateRange(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events) = MEMORY[0x263F8EE78];
  qword_2685401B0 = v0;
  return result;
}

uint64_t sub_22D165828(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - v4;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events) = MEMORY[0x263F8EE78];
  uint64_t v10 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v10, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v5, v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  unint64_t v11 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  swift_beginAccess();
  *uint64_t v8 = v13;
  v8[1] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
  swift_beginAccess();
  uint64_t v15 = *v14;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  void *v9 = v15;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22D165A64()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBCategorySeries.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBCategorySeries, (void (*)(void))type metadata accessor for PBCategorySeries._StorageClass, sub_22D165828, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D165B70);
}

uint64_t sub_22D165B70()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_22D2BC170();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBDateRange(0);
        sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
        uint64_t v4 = v3;
        sub_22D2BC1A0();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBCategorySeries.Event(0);
    sub_22D1B9F34(&qword_268541318, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
    uint64_t v4 = v3;
    sub_22D2BC190();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBCategorySeries.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBCategorySeries, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D165E3C);
}

uint64_t sub_22D165D9C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  a4(0);
  uint64_t v10 = swift_retain();
  a5(v10, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v5) {
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t sub_22D165E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v22[13] = a4;
  v22[1] = a3;
  v22[2] = a2;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = type metadata accessor for PBDateRange(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v9, (uint64_t)v13, type metadata accessor for PBDateRange);
    sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750((uint64_t)v13, type metadata accessor for PBDateRange);
    if (v4) {
      return result;
    }
  }
  uint64_t v17 = (uint64_t *)(v14
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  uint64_t v18 = *v17;
  unint64_t v19 = v17[1];
  uint64_t v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v20 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (!v20 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v5))
  {
    uint64_t v21 = v14
        + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events;
    uint64_t result = swift_beginAccess();
    if (*(void *)(*(void *)v21 + 16))
    {
      type metadata accessor for PBCategorySeries.Event(0);
      sub_22D1B9F34(&qword_268541318, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
      swift_bridgeObjectRetain();
      sub_22D2BC2D0();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22D1661BC(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v3 = type metadata accessor for PBDateRange(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  v34 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - v8;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v35 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v16 = v36;
  uint64_t v17 = v36
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_22D1B9E60((uint64_t)v14, (uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
  sub_22D1B9E60(v17, v18, &qword_26853D7B0, type metadata accessor for PBDateRange);
  unint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    uint64_t v20 = a1;
    uint64_t v22 = (uint64_t)v34;
    uint64_t v21 = v35;
    sub_22D1B9E60((uint64_t)v9, (uint64_t)v35, &qword_26853D7B0, type metadata accessor for PBDateRange);
    if (v19(v18, 1, v3) != 1)
    {
      sub_22D1D06E8(v18, v22, type metadata accessor for PBDateRange);
      swift_retain();
      swift_retain();
      char v24 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v21, v22);
      sub_22D1B9750(v22, type metadata accessor for PBDateRange);
      sub_22D1D08A0((uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
      sub_22D1B9750((uint64_t)v21, type metadata accessor for PBDateRange);
      sub_22D1D08A0((uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
      if ((v24 & 1) == 0) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
    sub_22D1B9750((uint64_t)v21, type metadata accessor for PBDateRange);
LABEL_6:
    sub_22D1D05E4((uint64_t)v9, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
    goto LABEL_7;
  }
  swift_retain();
  swift_retain();
  sub_22D1D08A0((uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v20 = a1;
  if (v19(v18, 1, v3) != 1) {
    goto LABEL_6;
  }
  sub_22D1D08A0((uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
LABEL_9:
  uint64_t v25 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  uint64_t v26 = *v25;
  uint64_t v27 = v25[1];
  v28 = (void *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
  swift_beginAccess();
  if (v26 == *v28 && v27 == v28[1] || (sub_22D2BD660() & 1) != 0)
  {
    uint64_t v29 = (uint64_t *)(v20
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
    swift_beginAccess();
    uint64_t v30 = *v29;
    v31 = (uint64_t *)(v16
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
    swift_beginAccess();
    uint64_t v32 = *v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v23 = sub_22D1132A8(v30, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return v23 & 1;
  }
LABEL_7:
  swift_release();
  swift_release();
  char v23 = 0;
  return v23 & 1;
}

uint64_t PBCategorySeries.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBCategorySeries, &qword_268540E78, (void (*)(uint64_t))type metadata accessor for PBCategorySeries);
}

uint64_t sub_22D166774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CFA8, &qword_2685401B0, a2);
}

unint64_t sub_22D166798()
{
  return 0xD000000000000029;
}

uint64_t sub_22D1667B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1667CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1667E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EB8, (void (*)(uint64_t))type metadata accessor for PBCategorySeries);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D166860@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CFA0, (uint64_t)qword_268540198, a1);
}

uint64_t sub_22D166884(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBE8, (void (*)(uint64_t))type metadata accessor for PBCategorySeries);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1668F0()
{
  sub_22D1B9F34(&qword_26853DBE8, (void (*)(uint64_t))type metadata accessor for PBCategorySeries);
  return sub_22D2BC200();
}

uint64_t sub_22D16696C(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCategorySeries, sub_22D1661BC) & 1;
}

uint64_t sub_22D1669B0()
{
  uint64_t result = sub_22D2BCCB0();
  qword_2685401B8 = 0xD000000000000029;
  unk_2685401C0 = 0x800000022D2D8D90;
  return result;
}

uint64_t static PBCategorySeries.Range.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853CFB0, &qword_2685401B8);
}

uint64_t sub_22D166A40()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685401C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685401C8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "min";
  *(void *)(v7 + 8) = 3;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "max";
  *((void *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBCategorySeries.Range._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CFB8, (uint64_t)qword_2685401C8, a1);
}

uint64_t PBCategorySeries.Range.decodeMessage<A>(decoder:)()
{
  return sub_22D1B13AC();
}

uint64_t PBCategorySeries.Range.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1A0368(a1, a2, a3, (void (*)(void))type metadata accessor for PBCategorySeries.Range);
}

uint64_t PBCategorySeries.Range.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBCategorySeries.Range, &qword_268540E80, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
}

uint64_t sub_22D166CD0(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853CFB0, &qword_2685401B8);
}

uint64_t sub_22D166CF8()
{
  return PBCycleTracking.Range.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D166D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.Range.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D166D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EB0, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D166DA4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CFB8, (uint64_t)qword_2685401C8, a1);
}

uint64_t sub_22D166DC8(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541300, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D166E34()
{
  sub_22D1B9F34(&qword_268541300, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
  return sub_22D2BC200();
}

uint64_t sub_22D166EB0(char *a1, char *a2)
{
  return sub_22D1B6AEC(a1, a2, type metadata accessor for PBCategorySeries.Range) & 1;
}

uint64_t sub_22D166EE0()
{
  uint64_t result = sub_22D2BCCB0();
  qword_2685401E0 = 0xD000000000000029;
  *(void *)algn_2685401E8 = 0x800000022D2D8D90;
  return result;
}

uint64_t static PBCategorySeries.Event.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853CFC0, &qword_2685401E0);
}

uint64_t sub_22D166F70()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685401F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685401F0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_22D2C0F20;
  unint64_t v5 = v27 + v4;
  unint64_t v6 = v27 + v4 + *(int *)(v2 + 56);
  *(void *)(v27 + v4) = 1;
  *(void *)unint64_t v6 = "raw";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v27 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "value";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v27 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "recorded_time";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v27 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 11;
  *(void *)uint64_t v14 = "source";
  *((void *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v27 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "range";
  *((void *)v16 + 1) = 5;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v27 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)uint64_t v18 = "heart_rate_event_threshold";
  *((void *)v18 + 1) = 26;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v27 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)uint64_t v20 = "sleep_analysis";
  *((void *)v20 + 1) = 14;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v27 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)uint64_t v22 = "cycleFactor";
  *((void *)v22 + 1) = 11;
  v22[16] = 2;
  v9();
  uint64_t v23 = v27 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "steadiness_event";
  *(void *)(v23 + 8) = 16;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  char v24 = (void *)(v27 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)uint64_t v25 = "steadiness_classification";
  *((void *)v25 + 1) = 25;
  v25[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBCategorySeries.Event._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CFC8, (uint64_t)qword_2685401F0, a1);
}

uint64_t sub_22D16738C()
{
  type metadata accessor for PBCategorySeries.Event._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(_DWORD *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0xE000000000000000;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  uint64_t v2 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)(v0
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  *uint64_t v3 = 0;
  v3[1] = 0xE000000000000000;
  uint64_t v4 = v0
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  uint64_t v5 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  qword_268540208 = v0;
  return result;
}

uint64_t type metadata accessor for PBDateRange(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541748);
}

uint64_t type metadata accessor for PBCategorySeries.Event._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B78);
}

uint64_t sub_22D1674C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v27 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388]();
  uint64_t v26 = (uint64_t)&v24 - v5;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, v4);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v24 - v6;
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0xE000000000000000;
  uint64_t v8 = v1
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  uint64_t v9 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  unint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  *unint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  uint64_t v11 = v1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  uint64_t v25 = v1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  uint64_t v12 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  swift_beginAccess();
  LODWORD(v11) = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v11;
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  swift_beginAccess();
  *(void *)(v1 + 24) = v13;
  *(void *)(v1 + 32) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v7, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v7, v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  uint64_t v16 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  swift_beginAccess();
  *unint64_t v10 = v18;
  v10[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  swift_beginAccess();
  uint64_t v20 = v26;
  uint64_t v21 = v27;
  sub_22D1B9E60(v19, v26, &qword_26853D7A8, v27);
  swift_release();
  uint64_t v22 = v25;
  swift_beginAccess();
  sub_22D1B9D9C(v20, v22, &qword_26853D7A8, v21);
  swift_endAccess();
  return v2;
}

void sub_22D167880(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541818);
}

uint64_t type metadata accessor for PBCategorySeries(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685417E8);
}

uint64_t type metadata accessor for PBCategorySeries._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B68);
}

uint64_t type metadata accessor for PBTimeSeries(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541758);
}

uint64_t type metadata accessor for PBWorkout(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541838);
}

uint64_t sub_22D167984()
{
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  return swift_deallocClassInstance();
}

uint64_t PBCategorySeries.Event.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBCategorySeries.Event, (void (*)(void))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_22D1674C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D167AB4);
}

uint64_t sub_22D167AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v108 = a4;
  uint64_t v96 = type metadata accessor for PBCategorySeries.Range(0);
  uint64_t v104 = *(void *)(v96 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v96);
  uint64_t v89 = (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v88 = (uint64_t)&v79 - v9;
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v90 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v93 = (uint64_t)&v79 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v102 = (char *)&v79 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v92 = (uint64_t)&v79 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v91 = (uint64_t)&v79 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v98 = (uint64_t)&v79 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v94 = (char *)&v79 - v25;
  MEMORY[0x270FA5388](v24);
  v101 = (char *)&v79 - v26;
  uint64_t v103 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  uint64_t v99 = *(void *)(v103 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v103);
  uint64_t v29 = (char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v31 = (char *)&v79 - v30;
  sub_22D167880(0, &qword_268542028, type metadata accessor for PBCategorySeries.Range, v10);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  v97 = (char *)&v79 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v79 - v35;
  uint64_t v37 = OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source;
  uint64_t v38 = a1;
  uint64_t v39 = a1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
  uint64_t v40 = OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
  swift_beginAccess();
  uint64_t v41 = v105;
  uint64_t v105 = a3;
  uint64_t result = sub_22D2BC080();
  if (!v41)
  {
    v80 = v31;
    v79 = v29;
    uint64_t v85 = v38 + v37;
    uint64_t v84 = v38 + v40;
    uint64_t v83 = v38 + 24;
    uint64_t v82 = v38 + 16;
    v100 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
    v95 = (void (**)(void *, void, uint64_t, uint64_t))(v99 + 56);
    v86 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56);
    v81 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
    uint64_t v44 = (uint64_t)v102;
    v45 = v94;
    v87 = v36;
    uint64_t v46 = (uint64_t)v97;
    uint64_t v47 = (uint64_t)v101;
    uint64_t v48 = v39;
    uint64_t v99 = v39;
    uint64_t v104 = a2;
    while (1)
    {
      if (v43) {
        return result;
      }
      switch(result)
      {
        case 1:
          swift_beginAccess();
          sub_22D2BC130();
          goto LABEL_33;
        case 2:
          swift_beginAccess();
          sub_22D2BC170();
          goto LABEL_33;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBDateRange(0);
          sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
          sub_22D2BC1A0();
          goto LABEL_33;
        case 4:
          uint64_t v50 = v48;
          v51 = *v86;
          uint64_t v52 = (uint64_t)v87;
          (*v86)(v87, 1, 1, v96);
          sub_22D1B9E60(v50, v47, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          if ((*v100)(v47, 1, v103) == 1)
          {
            sub_22D1D08A0(v47, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            uint64_t v44 = (uint64_t)v102;
LABEL_23:
            uint64_t v48 = v99;
            uint64_t v60 = v96;
            goto LABEL_24;
          }
          uint64_t v58 = (uint64_t)v80;
          sub_22D1D06E8(v47, (uint64_t)v80, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          sub_22D2BC090();
          uint64_t v59 = (uint64_t)v79;
          sub_22D1D06E8(v58, (uint64_t)v79, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          if (swift_getEnumCaseMultiPayload())
          {
            sub_22D1B9750(v59, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            uint64_t v44 = (uint64_t)v102;
            uint64_t v46 = (uint64_t)v97;
            goto LABEL_23;
          }
          sub_22D1D08A0(v52, &qword_268542028, type metadata accessor for PBCategorySeries.Range);
          uint64_t v78 = v88;
          sub_22D1D06E8(v59, v88, type metadata accessor for PBCategorySeries.Range);
          sub_22D1D06E8(v78, v52, type metadata accessor for PBCategorySeries.Range);
          uint64_t v60 = v96;
          v51((char *)v52, 0, 1, v96);
          uint64_t v44 = (uint64_t)v102;
          uint64_t v46 = (uint64_t)v97;
          uint64_t v48 = v99;
LABEL_24:
          sub_22D1B9F34(&qword_268541300, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
          uint64_t v61 = (uint64_t)v87;
          sub_22D2BC1A0();
          sub_22D1D0910(v61, v46, &qword_268542028, type metadata accessor for PBCategorySeries.Range);
          if ((*v81)(v46, 1, v60) == 1)
          {
            sub_22D1D08A0(v46, &qword_268542028, type metadata accessor for PBCategorySeries.Range);
          }
          else
          {
            uint64_t v75 = v89;
            sub_22D1D06E8(v46, v89, type metadata accessor for PBCategorySeries.Range);
            sub_22D1D06E8(v75, (uint64_t)v45, type metadata accessor for PBCategorySeries.Range);
            uint64_t v76 = v103;
            swift_storeEnumTagMultiPayload();
            (*v95)(v45, 0, 1, v76);
            uint64_t v77 = v98;
            sub_22D1D0910((uint64_t)v45, v98, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            swift_beginAccess();
            sub_22D1B9D9C(v77, v48, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            swift_endAccess();
          }
          uint64_t v47 = (uint64_t)v101;
LABEL_6:
          uint64_t result = sub_22D2BC080();
          break;
        case 5:
          uint64_t v53 = v91;
          sub_22D1B9E60(v48, v91, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          (*v100)(v53, 1, v103);
          sub_22D1D08A0(v53, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          uint64_t v44 = (uint64_t)v102;
          uint64_t v48 = v99;
          uint64_t v106 = 0;
          uint64_t v107 = 0;
          sub_22D2BC160();
          uint64_t v62 = v107;
          if (!v107) {
            goto LABEL_5;
          }
          void *v45 = v106;
          v45[1] = v62;
          uint64_t v63 = v103;
          goto LABEL_4;
        case 6:
          uint64_t v54 = v103;
          uint64_t v55 = v92;
          sub_22D1B9E60(v48, v92, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          (*v100)(v55, 1, v54);
          sub_22D1D08A0(v55, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          uint64_t v47 = (uint64_t)v101;
          uint64_t v44 = (uint64_t)v102;
          uint64_t v46 = (uint64_t)v97;
          uint64_t v48 = v99;
          uint64_t v106 = 0;
          LOWORD(v107) = 256;
          sub_22D1D084C();
          sub_22D2BC0C0();
          if ((v107 & 0x100) != 0) {
            goto LABEL_6;
          }
          char v64 = v107;
          void *v45 = v106;
          *((unsigned char *)v45 + 8) = v64 & 1;
          uint64_t v65 = v103;
          goto LABEL_32;
        case 7:
          sub_22D1B9E60(v48, v44, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          (*v100)(v44, 1, v103);
          sub_22D1D08A0(v44, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          uint64_t v44 = (uint64_t)v102;
          uint64_t v48 = v99;
          uint64_t v106 = 0;
          LOWORD(v107) = 256;
          sub_22D1D07F8();
          sub_22D2BC0C0();
          if ((v107 & 0x100) != 0) {
            goto LABEL_6;
          }
          char v66 = v107;
          void *v45 = v106;
          *((unsigned char *)v45 + 8) = v66 & 1;
          uint64_t v65 = v103;
LABEL_32:
          swift_storeEnumTagMultiPayload();
          (*v95)(v45, 0, 1, v65);
          uint64_t v67 = (uint64_t)v45;
          v68 = v45;
          uint64_t v69 = v44;
          uint64_t v70 = v47;
          uint64_t v71 = v98;
          sub_22D1D0910(v67, v98, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          swift_beginAccess();
          uint64_t v72 = v71;
          uint64_t v47 = v70;
          uint64_t v44 = v69;
          v45 = v68;
          sub_22D1B9D9C(v72, v48, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
LABEL_33:
          swift_endAccess();
          goto LABEL_6;
        case 8:
          uint64_t v56 = v93;
          sub_22D1B9E60(v48, v93, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          (*v100)(v56, 1, v103);
          sub_22D1D08A0(v56, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          uint64_t v44 = (uint64_t)v102;
          uint64_t v48 = v99;
          uint64_t v106 = 0;
          LOWORD(v107) = 256;
          sub_22D1D07A4();
          sub_22D2BC0C0();
          if ((v107 & 0x100) != 0) {
            goto LABEL_5;
          }
          char v73 = v107;
          void *v45 = v106;
          *((unsigned char *)v45 + 8) = v73 & 1;
          uint64_t v63 = v103;
          goto LABEL_4;
        case 9:
          uint64_t v57 = v90;
          sub_22D1B9E60(v48, v90, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          (*v100)(v57, 1, v103);
          sub_22D1D08A0(v57, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          uint64_t v44 = (uint64_t)v102;
          uint64_t v48 = v99;
          uint64_t v106 = 0;
          LOWORD(v107) = 256;
          sub_22D1D0750();
          sub_22D2BC0C0();
          if ((v107 & 0x100) != 0) {
            goto LABEL_5;
          }
          char v74 = v107;
          void *v45 = v106;
          *((unsigned char *)v45 + 8) = v74 & 1;
          uint64_t v63 = v103;
LABEL_4:
          swift_storeEnumTagMultiPayload();
          (*v95)(v45, 0, 1, v63);
          uint64_t v49 = v98;
          sub_22D1D0910((uint64_t)v45, v98, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          swift_beginAccess();
          sub_22D1B9D9C(v49, v48, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          swift_endAccess();
LABEL_5:
          uint64_t v47 = (uint64_t)v101;
          goto LABEL_6;
        case 11:
          swift_beginAccess();
          sub_22D2BC170();
          goto LABEL_33;
        default:
          goto LABEL_6;
      }
    }
  }
  return result;
}

uint64_t PBCategorySeries.Event.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBCategorySeries.Event, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D168B90);
}

uint64_t sub_22D168B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = type metadata accessor for PBCategorySeries.Range(0);
  MEMORY[0x270FA5388](v33);
  uint64_t v34 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v35 = (uint64_t)&v33 - v9;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, v7);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = type metadata accessor for PBDateRange(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (!*(_DWORD *)(a1 + 16) || (uint64_t result = sub_22D2BC280(), !v3))
  {
    uint64_t v38 = a3;
    swift_beginAccess();
    unint64_t v18 = *(void *)(a1 + 32);
    uint64_t v19 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0) {
      uint64_t v19 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFLL;
    }
    if (v19)
    {
      swift_bridgeObjectRetain();
      sub_22D2BC2B0();
      if (v3) {
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = a1
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
    swift_beginAccess();
    sub_22D1B9E60(v20, (uint64_t)v12, &qword_26853D7B0, type metadata accessor for PBDateRange);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_22D1D08A0((uint64_t)v12, &qword_26853D7B0, type metadata accessor for PBDateRange);
    }
    else
    {
      sub_22D1D06E8((uint64_t)v12, (uint64_t)v16, type metadata accessor for PBDateRange);
      sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
      sub_22D2BC2E0();
      uint64_t result = sub_22D1B9750((uint64_t)v16, type metadata accessor for PBDateRange);
      if (v3) {
        return result;
      }
    }
    uint64_t v21 = a1
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
    swift_beginAccess();
    uint64_t v22 = v35;
    sub_22D1B9E60(v21, v35, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    uint64_t v23 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23) != 1)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_22D2BC2B0();
          uint64_t result = swift_bridgeObjectRelease();
          if (!v3) {
            break;
          }
          return result;
        case 2u:
          char v25 = *(unsigned char *)(v22 + 8);
          uint64_t v36 = *(void *)v22;
          char v37 = v25;
          sub_22D1D084C();
          goto LABEL_21;
        case 3u:
          char v26 = *(unsigned char *)(v22 + 8);
          uint64_t v36 = *(void *)v22;
          char v37 = v26;
          sub_22D1D07F8();
          goto LABEL_21;
        case 4u:
          char v27 = *(unsigned char *)(v22 + 8);
          uint64_t v36 = *(void *)v22;
          char v37 = v27;
          sub_22D1D07A4();
          goto LABEL_21;
        case 5u:
          char v28 = *(unsigned char *)(v22 + 8);
          uint64_t v36 = *(void *)v22;
          char v37 = v28;
          sub_22D1D0750();
LABEL_21:
          uint64_t result = sub_22D2BC240();
          if (!v3) {
            break;
          }
          return result;
        default:
          uint64_t v24 = v34;
          sub_22D1D06E8(v22, v34, type metadata accessor for PBCategorySeries.Range);
          sub_22D1B9F34(&qword_268541300, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
          sub_22D2BC2E0();
          uint64_t result = sub_22D1B9750(v24, type metadata accessor for PBCategorySeries.Range);
          if (!v3) {
            break;
          }
          return result;
      }
    }
    uint64_t v29 = (uint64_t *)(a1
                    + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
    uint64_t result = swift_beginAccess();
    uint64_t v31 = *v29;
    unint64_t v30 = v29[1];
    uint64_t v32 = HIBYTE(v30) & 0xF;
    if ((v30 & 0x2000000000000000) == 0) {
      uint64_t v32 = v31 & 0xFFFFFFFFFFFFLL;
    }
    if (v32)
    {
      swift_bridgeObjectRetain();
      sub_22D2BC2B0();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t static PBCategorySeries.Event.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCategorySeries.Event, (uint64_t (*)(uint64_t, uint64_t))sub_22D169278) & 1;
}

BOOL sub_22D169278(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v54 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268542000, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v57 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v51 - v6;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v58 = (uint64_t)&v51 - v12;
  uint64_t v13 = type metadata accessor for PBDateRange(0);
  uint64_t v61 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v51 - v17;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, v8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v51 - v23;
  swift_beginAccess();
  int v25 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  if (v25 != *(_DWORD *)(a2 + 16)) {
    return 0;
  }
  uint64_t v52 = v7;
  swift_beginAccess();
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v27 = *(void *)(a1 + 32);
  swift_beginAccess();
  if (v26 == *(void *)(a2 + 24) && v27 == *(void *)(a2 + 32)
    || (v28 = sub_22D2BD660(), BOOL result = 0, (v28 & 1) != 0))
  {
    uint64_t v53 = a2;
    uint64_t v30 = a1
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
    swift_beginAccess();
    sub_22D1B9E60(v30, (uint64_t)v24, &qword_26853D7B0, type metadata accessor for PBDateRange);
    uint64_t v31 = v53
        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
    swift_beginAccess();
    uint64_t v32 = (uint64_t)&v18[*(int *)(v16 + 48)];
    sub_22D1B9E60((uint64_t)v24, (uint64_t)v18, &qword_26853D7B0, type metadata accessor for PBDateRange);
    sub_22D1B9E60(v31, v32, &qword_26853D7B0, type metadata accessor for PBDateRange);
    uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
    if (v33((uint64_t)v18, 1, v13) == 1)
    {
      swift_retain();
      swift_retain();
      sub_22D1D08A0((uint64_t)v24, &qword_26853D7B0, type metadata accessor for PBDateRange);
      if (v33(v32, 1, v13) == 1)
      {
        sub_22D1D08A0((uint64_t)v18, &qword_26853D7B0, type metadata accessor for PBDateRange);
LABEL_12:
        uint64_t v36 = (uint64_t *)(a1
                        + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
        swift_beginAccess();
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        uint64_t v39 = v53;
        uint64_t v40 = (void *)(v53
                       + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
        swift_beginAccess();
        if (v37 == *v40 && v38 == v40[1] || (sub_22D2BD660() & 1) != 0)
        {
          uint64_t v41 = a1
              + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
          swift_beginAccess();
          uint64_t v42 = v58;
          sub_22D1B9E60(v41, v58, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          uint64_t v43 = v39
              + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData;
          swift_beginAccess();
          uint64_t v44 = (uint64_t)v52;
          uint64_t v45 = (uint64_t)&v52[*(int *)(v57 + 48)];
          sub_22D1B9E60(v42, (uint64_t)v52, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          sub_22D1B9E60(v43, v45, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
          uint64_t v47 = v60;
          if (v46(v44, 1, v60) == 1)
          {
            swift_release();
            swift_release();
            sub_22D1D08A0(v42, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            if (v46(v45, 1, v47) == 1)
            {
              sub_22D1D08A0(v44, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              return 1;
            }
          }
          else
          {
            uint64_t v48 = v55;
            sub_22D1B9E60(v44, v55, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            if (v46(v45, 1, v47) != 1)
            {
              uint64_t v49 = v54;
              sub_22D1D06E8(v45, v54, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              BOOL v50 = _s19HealthRecordsDaemon16PBCategorySeriesV5EventV20OneOf_AdditionalDataO2eeoiySbAG_AGtFZ_0(v48, v49);
              swift_release();
              swift_release();
              sub_22D1B9750(v49, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              sub_22D1D08A0(v42, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              sub_22D1B9750(v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              sub_22D1D08A0(v44, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
              return v50;
            }
            swift_release();
            swift_release();
            sub_22D1D08A0(v42, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
            sub_22D1B9750(v48, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          }
          sub_22D1D05E4(v44, &qword_268542000, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
          return 0;
        }
LABEL_18:
        swift_release();
        swift_release();
        return 0;
      }
    }
    else
    {
      sub_22D1B9E60((uint64_t)v18, (uint64_t)v22, &qword_26853D7B0, type metadata accessor for PBDateRange);
      if (v33(v32, 1, v13) != 1)
      {
        uint64_t v34 = v56;
        sub_22D1D06E8(v32, v56, type metadata accessor for PBDateRange);
        swift_retain();
        swift_retain();
        char v35 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v22, v34);
        sub_22D1B9750(v34, type metadata accessor for PBDateRange);
        sub_22D1D08A0((uint64_t)v24, &qword_26853D7B0, type metadata accessor for PBDateRange);
        sub_22D1B9750((uint64_t)v22, type metadata accessor for PBDateRange);
        sub_22D1D08A0((uint64_t)v18, &qword_26853D7B0, type metadata accessor for PBDateRange);
        if ((v35 & 1) == 0) {
          goto LABEL_18;
        }
        goto LABEL_12;
      }
      swift_retain();
      swift_retain();
      sub_22D1D08A0((uint64_t)v24, &qword_26853D7B0, type metadata accessor for PBDateRange);
      sub_22D1B9750((uint64_t)v22, type metadata accessor for PBDateRange);
    }
    sub_22D1D05E4((uint64_t)v18, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
    goto LABEL_18;
  }
  return result;
}

uint64_t PBCategorySeries.Event.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBCategorySeries.Event, &qword_268540E88, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_22D169D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CFD0, &qword_268540208, a2);
}

uint64_t sub_22D169D24(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853CFC0, &qword_2685401E0);
}

uint64_t sub_22D169D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.Event.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D169D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCategorySeries.Event.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D169D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EA8, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D169DF8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CFC8, (uint64_t)qword_2685401F0, a1);
}

uint64_t sub_22D169E1C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541318, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D169E88()
{
  sub_22D1B9F34(&qword_268541318, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
  return sub_22D2BC200();
}

uint64_t sub_22D169F04(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCategorySeries.Event, (uint64_t (*)(uint64_t, uint64_t))sub_22D169278) & 1;
}

unint64_t static PBCharacteristics.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D169F64()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540210);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540210);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "blood_type";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "biological_sex";
  *((void *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "data_of_birth";
  *(void *)(v12 + 8) = 13;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBCharacteristics._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CFD8, (uint64_t)qword_268540210, a1);
}

uint64_t PBCharacteristics.decodeMessage<A>(decoder:)()
{
  return sub_22D1A91D8();
}

uint64_t PBCharacteristics.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1A92AC(a1, a2, a3, (void (*)(void))type metadata accessor for PBCharacteristics);
}

uint64_t PBCharacteristics.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBCharacteristics, &qword_268540E90, (void (*)(uint64_t))type metadata accessor for PBCharacteristics);
}

unint64_t sub_22D16A244()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D16A260()
{
  return PBPatientMeta.CHRMeta.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D16A278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCharacteristics.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D16A290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541EA0, (void (*)(uint64_t))type metadata accessor for PBCharacteristics);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D16A30C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CFD8, (uint64_t)qword_268540210, a1);
}

uint64_t sub_22D16A330(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBD8, (void (*)(uint64_t))type metadata accessor for PBCharacteristics);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D16A39C()
{
  sub_22D1B9F34(&qword_26853DBD8, (void (*)(uint64_t))type metadata accessor for PBCharacteristics);
  return sub_22D2BC200();
}

uint64_t sub_22D16A418(char *a1, char *a2)
{
  return sub_22D1B7720(a1, a2, type metadata accessor for PBCharacteristics) & 1;
}

unint64_t static PBWorkout.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_22D16A464()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540228);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540228);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C39B0;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "total_energy_burned";
  *(void *)(v7 + 8) = 19;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "total_distance";
  *(void *)(v11 + 8) = 14;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "activity_type";
  *((void *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "total_flights_climbed";
  *((void *)v15 + 1) = 21;
  v15[16] = 2;
  v10();
  uint64_t v16 = (void *)(v6 + 4 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 5;
  *(void *)uint64_t v17 = "duration";
  *((void *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  unint64_t v18 = (void *)(v6 + 5 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 6;
  *(void *)uint64_t v19 = "date_range";
  *((void *)v19 + 1) = 10;
  v19[16] = 2;
  v10();
  uint64_t v20 = (void *)(v6 + 6 * v3);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 56);
  void *v20 = 7;
  *(void *)uint64_t v21 = "total_swimming_stroke_count";
  *((void *)v21 + 1) = 27;
  v21[16] = 2;
  v10();
  uint64_t v22 = (void *)(v6 + 7 * v3);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 56);
  void *v22 = 8;
  *(void *)uint64_t v23 = "average_heart_rate";
  *((void *)v23 + 1) = 18;
  v23[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBWorkout._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CFE0, (uint64_t)qword_268540228, a1);
}

uint64_t sub_22D16A7F8()
{
  type metadata accessor for PBWorkout._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  *(_DWORD *)(v0 + 36) = 0;
  *(_DWORD *)(v0 + 40) = 0;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  uint64_t v2 = type metadata accessor for PBDateRange(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount) = 0;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate) = 0;
  qword_268540240 = v0;
  return result;
}

uint64_t type metadata accessor for PBCharacteristics(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541828);
}

uint64_t type metadata accessor for PBAllClinicalRecords(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541848);
}

uint64_t type metadata accessor for PBECGs(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A28);
}

uint64_t type metadata accessor for PBCycleTracking(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685419D8);
}

uint64_t sub_22D16A928()
{
  sub_22D1D08A0(v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, &qword_26853D7B0, type metadata accessor for PBDateRange);
  return swift_deallocClassInstance();
}

uint64_t PBWorkout.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D16C750(a1, a2, a3, type metadata accessor for PBWorkout, (void (*)(void))type metadata accessor for PBWorkout._StorageClass, sub_22D1B9810, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D16AA10);
}

uint64_t sub_22D16AA10()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC180();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          sub_22D1D0694();
          uint64_t v4 = v3;
          sub_22D2BC0D0();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBDateRange(0);
          sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 7:
        case 8:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC180();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBWorkout.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBWorkout, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D16ACF8);
}

uint64_t sub_22D16ACF8(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v22 - v4;
  uint64_t v6 = type metadata accessor for PBDateRange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  int v10 = *(_DWORD *)(a1 + 16);
  uint64_t v27 = v7;
  if (!v10 || (uint64_t result = sub_22D2BC2C0(), !v1))
  {
    swift_beginAccess();
    if (!*(_DWORD *)(a1 + 20) || (uint64_t result = sub_22D2BC2C0(), !v1))
    {
      uint64_t v23 = v5;
      uint64_t v12 = v9;
      uint64_t v24 = v6;
      uint64_t v13 = swift_beginAccess();
      uint64_t v14 = *(void *)(a1 + 24);
      char v15 = *(unsigned char *)(a1 + 32);
      uint64_t v25 = v14;
      char v26 = v15;
      if (PBActivityType.rawValue.getter(v13))
      {
        uint64_t v25 = v14;
        char v26 = v15;
        sub_22D1D0694();
        uint64_t result = sub_22D2BC240();
        uint64_t v16 = v24;
        uint64_t v17 = (uint64_t)v12;
        uint64_t v18 = (uint64_t)v23;
        if (v1) {
          return result;
        }
      }
      else
      {
        uint64_t v16 = v24;
        uint64_t v17 = (uint64_t)v12;
        uint64_t v18 = (uint64_t)v23;
      }
      swift_beginAccess();
      if (!*(_DWORD *)(a1 + 36) || (uint64_t result = sub_22D2BC2C0(), !v1))
      {
        swift_beginAccess();
        if (!*(_DWORD *)(a1 + 40) || (uint64_t result = sub_22D2BC2C0(), !v1))
        {
          uint64_t v19 = a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
          swift_beginAccess();
          sub_22D1B9E60(v19, v18, &qword_26853D7B0, type metadata accessor for PBDateRange);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v18, 1, v16) == 1)
          {
            sub_22D1D08A0(v18, &qword_26853D7B0, type metadata accessor for PBDateRange);
          }
          else
          {
            sub_22D1D06E8(v18, v17, type metadata accessor for PBDateRange);
            sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
            sub_22D2BC2E0();
            uint64_t result = sub_22D1B9750(v17, type metadata accessor for PBDateRange);
            if (v1) {
              return result;
            }
          }
          uint64_t v20 = (_DWORD *)(a1
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
          swift_beginAccess();
          if (!*v20 || (uint64_t result = sub_22D2BC2C0(), !v1))
          {
            uint64_t v21 = (unsigned int *)(a1
                                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
            swift_beginAccess();
            uint64_t result = *v21;
            if (result) {
              return sub_22D2BC2C0();
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_22D16B1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBDateRange(0);
  uint64_t v52 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  int v10 = (char *)&v46 - v9;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v46 - v15;
  swift_beginAccess();
  int v17 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  if (v17 != *(_DWORD *)(a2 + 16)) {
    return 0;
  }
  BOOL v50 = v14;
  uint64_t v51 = v16;
  uint64_t v49 = v6;
  swift_beginAccess();
  int v18 = *(_DWORD *)(a1 + 20);
  swift_beginAccess();
  if (v18 != *(_DWORD *)(a2 + 20)) {
    return 0;
  }
  uint64_t v48 = v10;
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 24);
  char v20 = *(unsigned char *)(a1 + 32);
  uint64_t v21 = swift_beginAccess();
  uint64_t v22 = *(void *)(a2 + 24);
  char v23 = *(unsigned char *)(a2 + 32);
  uint64_t v55 = v19;
  char v56 = v20;
  uint64_t v53 = v22;
  char v54 = v23;
  uint64_t v24 = PBActivityType.rawValue.getter(v21);
  if (v24 != PBActivityType.rawValue.getter(v24)) {
    return 0;
  }
  swift_beginAccess();
  int v25 = *(_DWORD *)(a1 + 36);
  swift_beginAccess();
  if (v25 != *(_DWORD *)(a2 + 36)) {
    return 0;
  }
  swift_beginAccess();
  int v26 = *(_DWORD *)(a1 + 40);
  swift_beginAccess();
  if (v26 != *(_DWORD *)(a2 + 40)) {
    return 0;
  }
  uint64_t v27 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  uint64_t v28 = (uint64_t)v51;
  sub_22D1B9E60(v27, (uint64_t)v51, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v29 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  uint64_t v30 = (uint64_t)v48;
  uint64_t v31 = (uint64_t)&v48[*(int *)(v8 + 48)];
  sub_22D1B9E60(v28, (uint64_t)v48, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v47 = v31;
  sub_22D1B9E60(v29, v31, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  uint64_t v33 = v4;
  if (v32(v30, 1, v4) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0(v28, &qword_26853D7B0, type metadata accessor for PBDateRange);
    if (v32(v47, 1, v4) == 1)
    {
      sub_22D1D08A0(v30, &qword_26853D7B0, type metadata accessor for PBDateRange);
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  uint64_t v34 = v28;
  char v35 = v50;
  sub_22D1B9E60(v30, (uint64_t)v50, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v36 = v47;
  if (v32(v47, 1, v33) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0(v34, &qword_26853D7B0, type metadata accessor for PBDateRange);
    sub_22D1B9750((uint64_t)v35, type metadata accessor for PBDateRange);
LABEL_11:
    sub_22D1D05E4(v30, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
    goto LABEL_15;
  }
  uint64_t v37 = (uint64_t)v49;
  sub_22D1D06E8(v36, (uint64_t)v49, type metadata accessor for PBDateRange);
  swift_retain();
  swift_retain();
  char v38 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v35, v37);
  sub_22D1B9750(v37, type metadata accessor for PBDateRange);
  sub_22D1D08A0(v34, &qword_26853D7B0, type metadata accessor for PBDateRange);
  sub_22D1B9750((uint64_t)v35, type metadata accessor for PBDateRange);
  sub_22D1D08A0(v30, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if (v38)
  {
LABEL_13:
    uint64_t v39 = (int *)(a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
    swift_beginAccess();
    int v40 = *v39;
    uint64_t v41 = (_DWORD *)(a2
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
    swift_beginAccess();
    if (v40 == *v41)
    {
      uint64_t v42 = (int *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
      swift_beginAccess();
      int v43 = *v42;
      swift_release();
      uint64_t v44 = (_DWORD *)(a2
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
      swift_beginAccess();
      LODWORD(v44) = *v44;
      swift_release();
      return v43 == v44;
    }
  }
LABEL_15:
  swift_release();
  swift_release();
  return 0;
}

uint64_t PBWorkout.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBWorkout, &qword_268540E98, (void (*)(uint64_t))type metadata accessor for PBWorkout);
}

uint64_t sub_22D16B8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853CFE8, &qword_268540240, a2);
}

unint64_t sub_22D16B8C8()
{
  return 0xD000000000000022;
}

uint64_t sub_22D16B8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBWorkout.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D16B8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBWorkout.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D16B914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E98, (void (*)(uint64_t))type metadata accessor for PBWorkout);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D16B990@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CFE0, (uint64_t)qword_268540228, a1);
}

uint64_t sub_22D16B9B4(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBE0, (void (*)(uint64_t))type metadata accessor for PBWorkout);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D16BA20()
{
  sub_22D1B9F34(&qword_26853DBE0, (void (*)(uint64_t))type metadata accessor for PBWorkout);
  return sub_22D2BC200();
}

uint64_t sub_22D16BA9C(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBWorkout, (uint64_t (*)(uint64_t, uint64_t))sub_22D16B1B0) & 1;
}

unint64_t static PBAllClinicalRecords.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D16BAFC(uint64_t a1)
{
  return sub_22D1B170C(a1, qword_268540248, (uint64_t)"records", 7, MEMORY[0x263F50718]);
}

uint64_t static PBAllClinicalRecords._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CFF0, (uint64_t)qword_268540248, a1);
}

uint64_t PBAllClinicalRecords.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B1914(a1, a2, a3, (void (*)(void))type metadata accessor for PBClinicalRecord, &qword_268540EA0, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord);
}

uint64_t PBAllClinicalRecords.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBClinicalRecord(0),
        sub_22D1B9F34(&qword_268540EA0, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBAllClinicalRecords(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t PBAllClinicalRecords.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBAllClinicalRecords, &qword_268540EA8, (void (*)(uint64_t))type metadata accessor for PBAllClinicalRecords);
}

unint64_t sub_22D16BCD0()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D16BCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBAllClinicalRecords.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D16BD04()
{
  return PBAllClinicalRecords.traverse<A>(visitor:)();
}

uint64_t sub_22D16BD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E90, (void (*)(uint64_t))type metadata accessor for PBAllClinicalRecords);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D16BD98@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CFF0, (uint64_t)qword_268540248, a1);
}

uint64_t sub_22D16BDBC(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBD0, (void (*)(uint64_t))type metadata accessor for PBAllClinicalRecords);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D16BE28()
{
  sub_22D1B9F34(&qword_26853DBD0, (void (*)(uint64_t))type metadata accessor for PBAllClinicalRecords);
  return sub_22D2BC200();
}

uint64_t sub_22D16BEA4(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D113024, type metadata accessor for PBAllClinicalRecords) & 1;
}

unint64_t static PBClinicalRecord.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_22D16BF04()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540260);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540260);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_22D2C79D0;
  unint64_t v5 = v40 + v4;
  unint64_t v6 = v40 + v4 + *(int *)(v2 + 56);
  *(void *)(v40 + v4) = 1;
  *(void *)unint64_t v6 = "clinical_type_identifier";
  *(void *)(v6 + 8) = 24;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "fhir_resource";
  *(void *)(v10 + 8) = 13;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "primary_concept";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "allergy_record";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "condition_record";
  *((void *)v16 + 1) = 16;
  v16[16] = 2;
  v9();
  int v17 = (void *)(v5 + 5 * v3);
  int v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)int v18 = "vaccination_record";
  *((void *)v18 + 1) = 18;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  char v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)char v20 = "medication_dispense_record";
  *((void *)v20 + 1) = 26;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "medication_order";
  *((void *)v22 + 1) = 16;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 10;
  *(void *)uint64_t v23 = "diagnostic_test_result";
  *(void *)(v23 + 8) = 22;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v5 + 9 * v3);
  int v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 11;
  *(void *)int v25 = "diagnostic_test_report";
  *((void *)v25 + 1) = 22;
  v25[16] = 2;
  v9();
  int v26 = (void *)(v5 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 12;
  *(void *)uint64_t v27 = "account_owner";
  *((void *)v27 + 1) = 13;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v5 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 13;
  *(void *)uint64_t v29 = "procedure_record";
  *((void *)v29 + 1) = 16;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v5 + 12 * v3);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 16;
  *(void *)uint64_t v31 = "medication_record";
  *((void *)v31 + 1) = 17;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v5 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 14;
  *(void *)uint64_t v33 = "source";
  *((void *)v33 + 1) = 6;
  v33[16] = 2;
  v9();
  uint64_t v34 = (void *)(v5 + 14 * v3);
  char v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 17;
  *(void *)char v35 = "gateway_id";
  *((void *)v35 + 1) = 10;
  v35[16] = 2;
  v9();
  uint64_t v36 = (void *)(v5 + 15 * v3);
  uint64_t v37 = (char *)v36 + *(int *)(v2 + 56);
  *uint64_t v36 = 18;
  *(void *)uint64_t v37 = "ios_derived_display_name";
  *((void *)v37 + 1) = 24;
  v37[16] = 2;
  v9();
  uint64_t v38 = v5 + 16 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 16 * v3) = 19;
  *(void *)uint64_t v38 = "medical_record_origin_type";
  *(void *)(v38 + 8) = 26;
  *(unsigned char *)(v38 + 16) = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBClinicalRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853CFF8, (uint64_t)qword_268540260, a1);
}

uint64_t sub_22D16C4C0()
{
  type metadata accessor for PBClinicalRecord._StorageClass(0);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  uint64_t v4 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  unint64_t v6 = (void *)((char *)v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  *unint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  uint64_t v7 = (void *)((char *)v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  uint64_t v8 = (void *)((char *)v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  uint64_t v9 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  qword_268540278 = (uint64_t)v0;
  return result;
}

uint64_t sub_22D16C5F0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBClinicalRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D16C750(a1, a2, a3, type metadata accessor for PBClinicalRecord, (void (*)(void))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B90F4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D16C854);
}

uint64_t sub_22D16C750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = v7;
  uint64_t v14 = *(int *)(a4(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v15 = swift_retain();
    uint64_t v16 = a6(v15);
    swift_release();
    *(void *)(v10 + v14) = v16;
    swift_release();
  }
  uint64_t v17 = swift_retain();
  a7(v17, a1, a2, a3);
  return swift_release();
}

uint64_t sub_22D16C854(unsigned int (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v453 = a4;
  v449 = a1;
  uint64_t v450 = a3;
  uint64_t v452 = a2;
  uint64_t v441 = type metadata accessor for PBHKMedicationRecord(0);
  v431 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v441 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v441);
  uint64_t v376 = (uint64_t)&v338 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v366 = (uint64_t)&v338 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_268541FA8, type metadata accessor for PBHKMedicationRecord, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v391 = (uint64_t)&v338 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v442 = (uint64_t)&v338 - v11;
  uint64_t v432 = type metadata accessor for PBHKProcedureRecord(0);
  v430 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v432);
  uint64_t v374 = (uint64_t)&v338 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v364 = (uint64_t)&v338 - v14;
  sub_22D167880(0, &qword_268541FB0, type metadata accessor for PBHKProcedureRecord, v7);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v395 = (uint64_t)&v338 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v443 = (uint64_t)&v338 - v18;
  uint64_t v440 = type metadata accessor for PBHKAccountOwner(0);
  v429 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v440 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v440);
  uint64_t v375 = (uint64_t)&v338 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v365 = (uint64_t)&v338 - v21;
  sub_22D167880(0, &qword_268541FB8, type metadata accessor for PBHKAccountOwner, v7);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  v399 = (char *)&v338 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v415 = (uint64_t)&v338 - v25;
  uint64_t v433 = type metadata accessor for PBHKDiagnosticTestReport(0);
  v428 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v433 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v433);
  uint64_t v367 = (uint64_t)&v338 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v363 = (uint64_t)&v338 - v28;
  sub_22D167880(0, &qword_268541FC0, type metadata accessor for PBHKDiagnosticTestReport, v7);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v396 = (uint64_t)&v338 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  v444 = (char *)&v338 - v32;
  uint64_t v439 = type metadata accessor for PBHKDiagnosticTestResult(0);
  v427 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v439 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v439);
  uint64_t v373 = (uint64_t)&v338 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v362 = (uint64_t)&v338 - v35;
  sub_22D167880(0, &qword_268541FC8, type metadata accessor for PBHKDiagnosticTestResult, v7);
  uint64_t v37 = MEMORY[0x270FA5388](v36 - 8);
  v398 = (char *)&v338 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v414 = (uint64_t)&v338 - v39;
  uint64_t v438 = type metadata accessor for PBHKMedicationOrder(0);
  v426 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v438 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v438);
  uint64_t v372 = (uint64_t)&v338 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v361 = (uint64_t)&v338 - v42;
  sub_22D167880(0, &qword_268541FD0, type metadata accessor for PBHKMedicationOrder, v7);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  uint64_t v394 = (uint64_t)&v338 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  uint64_t v410 = (uint64_t)&v338 - v46;
  uint64_t v437 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  v425 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v437 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v437);
  uint64_t v371 = (uint64_t)&v338 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  uint64_t v360 = (uint64_t)&v338 - v49;
  sub_22D167880(0, &qword_268541FD8, type metadata accessor for PBHKMedicationDispenseRecord, v7);
  uint64_t v51 = MEMORY[0x270FA5388](v50 - 8);
  uint64_t v393 = (uint64_t)&v338 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  uint64_t v413 = (uint64_t)&v338 - v53;
  uint64_t v436 = type metadata accessor for PBHKVaccinationRecord(0);
  v424 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v436 - 8);
  uint64_t v54 = MEMORY[0x270FA5388](v436);
  uint64_t v370 = (uint64_t)&v338 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v54);
  uint64_t v359 = (uint64_t)&v338 - v56;
  sub_22D167880(0, &qword_268541FE0, type metadata accessor for PBHKVaccinationRecord, v7);
  uint64_t v58 = MEMORY[0x270FA5388](v57 - 8);
  uint64_t v392 = (uint64_t)&v338 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v58);
  uint64_t v412 = (uint64_t)&v338 - v60;
  uint64_t v435 = type metadata accessor for PBHKConditionRecord(0);
  v423 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v435 - 8);
  uint64_t v61 = MEMORY[0x270FA5388](v435);
  uint64_t v369 = (uint64_t)&v338 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v61);
  uint64_t v358 = (uint64_t)&v338 - v63;
  sub_22D167880(0, &qword_268541FE8, type metadata accessor for PBHKConditionRecord, v7);
  uint64_t v65 = MEMORY[0x270FA5388](v64 - 8);
  v397 = (char *)&v338 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v65);
  uint64_t v411 = (uint64_t)&v338 - v67;
  uint64_t v434 = type metadata accessor for PBHKAllergyRecord(0);
  v422 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v434 - 8);
  uint64_t v68 = MEMORY[0x270FA5388](v434);
  uint64_t v368 = (uint64_t)&v338 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v68);
  uint64_t v357 = (uint64_t)&v338 - v70;
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, v7);
  uint64_t v72 = MEMORY[0x270FA5388](v71 - 8);
  uint64_t v409 = (uint64_t)&v338 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  uint64_t v408 = (uint64_t)&v338 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  uint64_t v407 = (uint64_t)&v338 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  uint64_t v406 = (uint64_t)&v338 - v79;
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  uint64_t v405 = (uint64_t)&v338 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  uint64_t v404 = (uint64_t)&v338 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  uint64_t v403 = (uint64_t)&v338 - v85;
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  uint64_t v402 = (uint64_t)&v338 - v87;
  uint64_t v88 = MEMORY[0x270FA5388](v86);
  uint64_t v401 = (uint64_t)&v338 - v89;
  uint64_t v90 = MEMORY[0x270FA5388](v88);
  uint64_t v446 = (uint64_t)&v338 - v91;
  uint64_t v92 = MEMORY[0x270FA5388](v90);
  uint64_t v445 = (uint64_t)&v338 - v93;
  MEMORY[0x270FA5388](v92);
  uint64_t v400 = (uint64_t)&v338 - v94;
  uint64_t v451 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  v421 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v451 - 8);
  uint64_t v95 = MEMORY[0x270FA5388](v451);
  uint64_t v383 = (uint64_t)&v338 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = MEMORY[0x270FA5388](v95);
  uint64_t v389 = (uint64_t)&v338 - v98;
  uint64_t v99 = MEMORY[0x270FA5388](v97);
  uint64_t v382 = (uint64_t)&v338 - v100;
  uint64_t v101 = MEMORY[0x270FA5388](v99);
  uint64_t v388 = (uint64_t)&v338 - v102;
  uint64_t v103 = MEMORY[0x270FA5388](v101);
  uint64_t v381 = (uint64_t)&v338 - v104;
  uint64_t v105 = MEMORY[0x270FA5388](v103);
  uint64_t v387 = (uint64_t)&v338 - v106;
  uint64_t v107 = MEMORY[0x270FA5388](v105);
  uint64_t v380 = (uint64_t)&v338 - v108;
  uint64_t v109 = MEMORY[0x270FA5388](v107);
  uint64_t v386 = (uint64_t)&v338 - v110;
  uint64_t v111 = MEMORY[0x270FA5388](v109);
  uint64_t v379 = (uint64_t)&v338 - v112;
  uint64_t v113 = MEMORY[0x270FA5388](v111);
  uint64_t v385 = (uint64_t)&v338 - v114;
  uint64_t v115 = MEMORY[0x270FA5388](v113);
  uint64_t v378 = (uint64_t)&v338 - v116;
  uint64_t v117 = MEMORY[0x270FA5388](v115);
  uint64_t v384 = (uint64_t)&v338 - v118;
  uint64_t v119 = MEMORY[0x270FA5388](v117);
  v121 = (char *)&v338 - v120;
  uint64_t v122 = MEMORY[0x270FA5388](v119);
  v124 = (char *)&v338 - v123;
  uint64_t v125 = MEMORY[0x270FA5388](v122);
  v127 = (char *)&v338 - v126;
  uint64_t v128 = MEMORY[0x270FA5388](v125);
  v130 = (char *)&v338 - v129;
  uint64_t v131 = MEMORY[0x270FA5388](v128);
  uint64_t v377 = (uint64_t)&v338 - v132;
  uint64_t v133 = MEMORY[0x270FA5388](v131);
  v135 = (char *)&v338 - v134;
  uint64_t v136 = MEMORY[0x270FA5388](v133);
  v138 = (char *)&v338 - v137;
  MEMORY[0x270FA5388](v136);
  v140 = (char *)&v338 - v139;
  sub_22D167880(0, &qword_268541FF0, type metadata accessor for PBHKAllergyRecord, v7);
  uint64_t v142 = MEMORY[0x270FA5388](v141 - 8);
  uint64_t v390 = (uint64_t)&v338 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v142);
  v145 = (char *)&v338 - v144;
  v420 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  uint64_t v419 = OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName;
  uint64_t v418 = OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID;
  uint64_t v417 = OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source;
  uint64_t v416 = OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  uint64_t v448 = (uint64_t)v449
       + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  v146 = v447;
  uint64_t result = sub_22D2BC080();
  if (!v146)
  {
    v356 = v145;
    v341 = v140;
    v338 = v138;
    v342 = v135;
    v343 = v130;
    v339 = v127;
    v344 = v124;
    v340 = v121;
    v355 = (char *)v420 + (void)v449;
    v419 += (uint64_t)v449;
    v418 += (uint64_t)v449;
    v417 += (uint64_t)v449;
    v416 += (uint64_t)v449;
    v354 = v449 + 4;
    v353 = v449 + 2;
    v420 = v431 + 7;
    v449 = v421 + 6;
    v352 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v431 + 6);
    v447 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v421 + 7);
    v431 = v430 + 7;
    v421 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v430 + 6);
    v430 = v429 + 7;
    v351 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v429 + 6);
    v429 = v428 + 7;
    v350 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v428 + 6);
    v428 = v427 + 7;
    v349 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v427 + 6);
    v427 = v426 + 7;
    v348 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v426 + 6);
    v426 = v425 + 7;
    v347 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v425 + 6);
    v425 = v424 + 7;
    v346 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v424 + 6);
    v424 = v423 + 7;
    v345 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v423 + 6);
    v423 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v422 + 7);
    v422 += 6;
    v149 = &qword_268541FF0;
    v150 = &qword_268541FD8;
    uint64_t v151 = (uint64_t)v444;
    uint64_t v152 = v448;
    while (1)
    {
      if (v148) {
        return result;
      }
      switch(result)
      {
        case 1:
          swift_beginAccess();
          sub_22D2BC170();
          swift_endAccess();
          goto LABEL_6;
        case 2:
        case 14:
        case 17:
        case 18:
          swift_beginAccess();
          sub_22D2BC170();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC1A0();
          goto LABEL_5;
        case 4:
          v153 = *v423;
          (*v423)((uint64_t)v356, 1, 1, v434);
          uint64_t v154 = v400;
          sub_22D1B9E60(v152, v400, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v154, 1, v451) == 1)
          {
            sub_22D1D08A0(v154, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
LABEL_34:
            uint64_t v189 = (uint64_t)v356;
            goto LABEL_35;
          }
          uint64_t v187 = (uint64_t)v341;
          sub_22D1D06E8(v154, (uint64_t)v341, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          sub_22D2BC090();
          uint64_t v188 = (uint64_t)v338;
          sub_22D1D06E8(v187, (uint64_t)v338, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if (swift_getEnumCaseMultiPayload())
          {
            sub_22D1B9750(v188, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            goto LABEL_34;
          }
          uint64_t v189 = (uint64_t)v356;
          sub_22D1D08A0((uint64_t)v356, v149, type metadata accessor for PBHKAllergyRecord);
          uint64_t v336 = v188;
          uint64_t v337 = v357;
          sub_22D1D06E8(v336, v357, type metadata accessor for PBHKAllergyRecord);
          sub_22D1D06E8(v337, v189, type metadata accessor for PBHKAllergyRecord);
          v153(v189, 0, 1, v434);
LABEL_35:
          sub_22D1B9F34(&qword_2685413A0, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
          uint64_t v190 = v434;
          sub_22D2BC1A0();
          uint64_t v191 = v189;
          uint64_t v192 = v390;
          sub_22D1D0910(v191, v390, v149, type metadata accessor for PBHKAllergyRecord);
          if ((*v422)(v192, 1, v190) == 1)
          {
            sub_22D1D08A0(v192, v149, type metadata accessor for PBHKAllergyRecord);
            uint64_t v152 = v448;
          }
          else
          {
            uint64_t v256 = v368;
            sub_22D1D06E8(v192, v368, type metadata accessor for PBHKAllergyRecord);
            uint64_t v257 = v256;
            uint64_t v258 = v445;
            sub_22D1D06E8(v257, v445, type metadata accessor for PBHKAllergyRecord);
            uint64_t v259 = v451;
            swift_storeEnumTagMultiPayload();
            (*v447)(v258, 0, 1, v259);
            uint64_t v260 = v258;
            uint64_t v261 = v446;
            sub_22D1D0910(v260, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            uint64_t v152 = v448;
            swift_beginAccess();
            sub_22D1B9D9C(v261, v152, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
LABEL_5:
            swift_endAccess();
          }
LABEL_6:
          uint64_t result = sub_22D2BC080();
          break;
        case 5:
          v155 = *v424;
          uint64_t v156 = v411;
          (*v424)(v411, 1, 1, v435);
          uint64_t v157 = v401;
          sub_22D1B9E60(v152, v401, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v157, 1, v451) == 1)
          {
            uint64_t v158 = v157;
            uint64_t v159 = (uint64_t)v397;
            sub_22D1D08A0(v158, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          else
          {
            uint64_t v193 = v157;
            uint64_t v194 = (uint64_t)v342;
            sub_22D1D06E8(v193, (uint64_t)v342, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D2BC090();
            uint64_t v195 = v194;
            uint64_t v159 = (uint64_t)v397;
            uint64_t v196 = v377;
            sub_22D1D06E8(v195, v377, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v156 = v411;
            if (EnumCaseMultiPayload == 1)
            {
              sub_22D1D08A0(v411, &qword_268541FE8, type metadata accessor for PBHKConditionRecord);
              uint64_t v198 = v358;
              sub_22D1D06E8(v196, v358, type metadata accessor for PBHKConditionRecord);
              uint64_t v199 = v198;
              uint64_t v156 = v411;
              sub_22D1D06E8(v199, v411, type metadata accessor for PBHKConditionRecord);
              v155(v156, 0, 1, v435);
            }
            else
            {
              sub_22D1B9750(v196, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            }
          }
          v149 = &qword_268541FF0;
          sub_22D1B9F34(&qword_2685413D0, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
          uint64_t v262 = v435;
          sub_22D2BC1A0();
          sub_22D1D0910(v156, v159, &qword_268541FE8, type metadata accessor for PBHKConditionRecord);
          if ((*v345)(v159, 1, v262) == 1)
          {
            sub_22D1D08A0(v159, &qword_268541FE8, type metadata accessor for PBHKConditionRecord);
          }
          else
          {
            uint64_t v263 = v369;
            sub_22D1D06E8(v159, v369, type metadata accessor for PBHKConditionRecord);
            uint64_t v264 = v263;
            uint64_t v265 = v445;
            sub_22D1D06E8(v264, v445, type metadata accessor for PBHKConditionRecord);
            uint64_t v266 = v451;
            swift_storeEnumTagMultiPayload();
            (*v447)(v265, 0, 1, v266);
            uint64_t v267 = v265;
            uint64_t v268 = v446;
            sub_22D1D0910(v267, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_beginAccess();
            sub_22D1B9D9C(v268, v152, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_endAccess();
          }
          v150 = &qword_268541FD8;
          uint64_t v151 = (uint64_t)v444;
          goto LABEL_6;
        case 6:
          v160 = *v425;
          uint64_t v161 = v412;
          (*v425)(v412, 1, 1, v436);
          uint64_t v162 = v402;
          sub_22D1B9E60(v152, v402, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v162, 1, v451) == 1)
          {
            sub_22D1D08A0(v162, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          else
          {
            uint64_t v200 = v162;
            uint64_t v201 = (uint64_t)v343;
            sub_22D1D06E8(v200, (uint64_t)v343, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D2BC090();
            uint64_t v202 = v201;
            uint64_t v203 = (uint64_t)v339;
            sub_22D1D06E8(v202, (uint64_t)v339, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            int v204 = swift_getEnumCaseMultiPayload();
            uint64_t v161 = v412;
            if (v204 == 2)
            {
              sub_22D1D08A0(v412, &qword_268541FE0, type metadata accessor for PBHKVaccinationRecord);
              uint64_t v205 = v359;
              sub_22D1D06E8(v203, v359, type metadata accessor for PBHKVaccinationRecord);
              uint64_t v206 = v205;
              uint64_t v161 = v412;
              sub_22D1D06E8(v206, v412, type metadata accessor for PBHKVaccinationRecord);
              v160(v161, 0, 1, v436);
            }
            else
            {
              sub_22D1B9750(v203, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            }
          }
          v149 = &qword_268541FF0;
          sub_22D1B9F34(&qword_2685413E8, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
          uint64_t v269 = v436;
          sub_22D2BC1A0();
          uint64_t v270 = v392;
          sub_22D1D0910(v161, v392, &qword_268541FE0, type metadata accessor for PBHKVaccinationRecord);
          if ((*v346)(v270, 1, v269) == 1)
          {
            sub_22D1D08A0(v270, &qword_268541FE0, type metadata accessor for PBHKVaccinationRecord);
          }
          else
          {
            uint64_t v271 = v370;
            sub_22D1D06E8(v270, v370, type metadata accessor for PBHKVaccinationRecord);
            uint64_t v272 = v271;
            uint64_t v273 = v445;
            sub_22D1D06E8(v272, v445, type metadata accessor for PBHKVaccinationRecord);
            uint64_t v274 = v451;
            swift_storeEnumTagMultiPayload();
            (*v447)(v273, 0, 1, v274);
            uint64_t v275 = v273;
            uint64_t v276 = v446;
            sub_22D1D0910(v275, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_beginAccess();
            sub_22D1B9D9C(v276, v152, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_endAccess();
          }
          goto LABEL_90;
        case 7:
          v163 = *v426;
          uint64_t v164 = v413;
          (*v426)(v413, 1, 1, v437);
          uint64_t v165 = v403;
          sub_22D1B9E60(v152, v403, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v165, 1, v451) == 1)
          {
            sub_22D1D08A0(v165, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          else
          {
            uint64_t v207 = v151;
            uint64_t v208 = (uint64_t)v344;
            sub_22D1D06E8(v165, (uint64_t)v344, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D2BC090();
            uint64_t v209 = v208;
            uint64_t v210 = (uint64_t)v340;
            sub_22D1D06E8(v209, (uint64_t)v340, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            int v211 = swift_getEnumCaseMultiPayload();
            uint64_t v164 = v413;
            if (v211 == 3)
            {
              sub_22D1D08A0(v413, &qword_268541FD8, type metadata accessor for PBHKMedicationDispenseRecord);
              uint64_t v212 = v360;
              sub_22D1D06E8(v210, v360, type metadata accessor for PBHKMedicationDispenseRecord);
              uint64_t v213 = v212;
              uint64_t v164 = v413;
              sub_22D1D06E8(v213, v413, type metadata accessor for PBHKMedicationDispenseRecord);
              v163(v164, 0, 1, v437);
            }
            else
            {
              sub_22D1B9750(v210, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            }
            uint64_t v151 = v207;
          }
          sub_22D1B9F34(&qword_268541460, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
          uint64_t v277 = v437;
          sub_22D2BC1A0();
          uint64_t v278 = v393;
          v150 = &qword_268541FD8;
          sub_22D1D0910(v164, v393, &qword_268541FD8, type metadata accessor for PBHKMedicationDispenseRecord);
          if ((*v347)(v278, 1, v277) == 1)
          {
            sub_22D1D08A0(v278, &qword_268541FD8, type metadata accessor for PBHKMedicationDispenseRecord);
          }
          else
          {
            uint64_t v279 = v371;
            sub_22D1D06E8(v278, v371, type metadata accessor for PBHKMedicationDispenseRecord);
            uint64_t v280 = v279;
            uint64_t v281 = v445;
            sub_22D1D06E8(v280, v445, type metadata accessor for PBHKMedicationDispenseRecord);
            uint64_t v282 = v451;
            swift_storeEnumTagMultiPayload();
            (*v447)(v281, 0, 1, v282);
            uint64_t v283 = v281;
            uint64_t v284 = v446;
            sub_22D1D0910(v283, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_beginAccess();
            sub_22D1B9D9C(v284, v152, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_endAccess();
          }
          goto LABEL_98;
        case 8:
          v166 = *v427;
          uint64_t v167 = v410;
          (*v427)(v410, 1, 1, v438);
          uint64_t v168 = v152;
          uint64_t v169 = v404;
          sub_22D1B9E60(v168, v404, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v169, 1, v451) == 1)
          {
            sub_22D1D08A0(v169, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          else
          {
            v214 = v150;
            uint64_t v215 = v151;
            uint64_t v216 = v384;
            sub_22D1D06E8(v169, v384, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D2BC090();
            uint64_t v217 = v216;
            uint64_t v218 = v378;
            sub_22D1D06E8(v217, v378, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            int v219 = swift_getEnumCaseMultiPayload();
            uint64_t v167 = v410;
            if (v219 == 4)
            {
              sub_22D1D08A0(v410, &qword_268541FD0, type metadata accessor for PBHKMedicationOrder);
              uint64_t v220 = v218;
              uint64_t v221 = v361;
              sub_22D1D06E8(v220, v361, type metadata accessor for PBHKMedicationOrder);
              sub_22D1D06E8(v221, v167, type metadata accessor for PBHKMedicationOrder);
              v166(v167, 0, 1, v438);
            }
            else
            {
              sub_22D1B9750(v218, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            }
            uint64_t v151 = v215;
            v150 = v214;
            v149 = &qword_268541FF0;
          }
          sub_22D1B9F34(&qword_268541478, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
          uint64_t v285 = v438;
          sub_22D2BC1A0();
          uint64_t v286 = v394;
          sub_22D1D0910(v167, v394, &qword_268541FD0, type metadata accessor for PBHKMedicationOrder);
          if ((*v348)(v286, 1, v285) == 1)
          {
            sub_22D1D08A0(v286, &qword_268541FD0, type metadata accessor for PBHKMedicationOrder);
            uint64_t v152 = v448;
          }
          else
          {
            uint64_t v287 = v372;
            sub_22D1D06E8(v286, v372, type metadata accessor for PBHKMedicationOrder);
            uint64_t v288 = v287;
            uint64_t v289 = v445;
            sub_22D1D06E8(v288, v445, type metadata accessor for PBHKMedicationOrder);
            uint64_t v290 = v451;
            swift_storeEnumTagMultiPayload();
            (*v447)(v289, 0, 1, v290);
            uint64_t v291 = v289;
            uint64_t v292 = v446;
            sub_22D1D0910(v291, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            uint64_t v152 = v448;
            swift_beginAccess();
            sub_22D1B9D9C(v292, v152, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_endAccess();
          }
          goto LABEL_6;
        case 10:
          v170 = *v428;
          uint64_t v171 = v414;
          (*v428)(v414, 1, 1, v439);
          uint64_t v172 = v405;
          sub_22D1B9E60(v152, v405, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v172, 1, v451) == 1)
          {
            uint64_t v173 = (uint64_t)v398;
            sub_22D1D08A0(v172, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          else
          {
            uint64_t v222 = v172;
            uint64_t v223 = v385;
            sub_22D1D06E8(v222, v385, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D2BC090();
            uint64_t v173 = (uint64_t)v398;
            uint64_t v224 = v223;
            uint64_t v225 = v379;
            sub_22D1D06E8(v224, v379, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            int v226 = swift_getEnumCaseMultiPayload();
            uint64_t v171 = v414;
            if (v226 == 5)
            {
              sub_22D1D08A0(v414, &qword_268541FC8, type metadata accessor for PBHKDiagnosticTestResult);
              uint64_t v227 = v362;
              sub_22D1D06E8(v225, v362, type metadata accessor for PBHKDiagnosticTestResult);
              uint64_t v228 = v227;
              uint64_t v171 = v414;
              sub_22D1D06E8(v228, v414, type metadata accessor for PBHKDiagnosticTestResult);
              v170(v171, 0, 1, v439);
            }
            else
            {
              sub_22D1B9750(v225, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            }
          }
          sub_22D1B9F34(&qword_268541490, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
          uint64_t v293 = v439;
          sub_22D2BC1A0();
          sub_22D1D0910(v171, v173, &qword_268541FC8, type metadata accessor for PBHKDiagnosticTestResult);
          if ((*v349)(v173, 1, v293) == 1)
          {
            v294 = type metadata accessor for PBHKDiagnosticTestResult;
            uint64_t v295 = v173;
            v296 = &qword_268541FC8;
            goto LABEL_87;
          }
          uint64_t v297 = v373;
          sub_22D1D06E8(v173, v373, type metadata accessor for PBHKDiagnosticTestResult);
          uint64_t v298 = v297;
          uint64_t v299 = v445;
          sub_22D1D06E8(v298, v445, type metadata accessor for PBHKDiagnosticTestResult);
          uint64_t v300 = v451;
          swift_storeEnumTagMultiPayload();
          (*v447)(v299, 0, 1, v300);
          uint64_t v301 = v299;
          uint64_t v302 = v446;
          sub_22D1D0910(v301, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          uint64_t v303 = v448;
          swift_beginAccess();
          sub_22D1B9D9C(v302, v303, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          swift_endAccess();
          uint64_t v152 = v303;
          goto LABEL_89;
        case 11:
          v174 = v150;
          v175 = *v429;
          (*v429)(v151, 1, 1, v433);
          uint64_t v176 = v406;
          sub_22D1B9E60(v152, v406, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v176, 1, v451) == 1)
          {
            sub_22D1D08A0(v176, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          else
          {
            uint64_t v229 = v151;
            uint64_t v230 = v386;
            sub_22D1D06E8(v176, v386, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D2BC090();
            uint64_t v231 = v380;
            sub_22D1D06E8(v230, v380, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            if (swift_getEnumCaseMultiPayload() == 6)
            {
              uint64_t v151 = v229;
              sub_22D1D08A0(v229, &qword_268541FC0, type metadata accessor for PBHKDiagnosticTestReport);
              uint64_t v232 = v231;
              uint64_t v233 = v363;
              sub_22D1D06E8(v232, v363, type metadata accessor for PBHKDiagnosticTestReport);
              sub_22D1D06E8(v233, v229, type metadata accessor for PBHKDiagnosticTestReport);
              uint64_t v234 = v229;
              uint64_t v235 = v433;
              v175(v234, 0, 1, v433);
              goto LABEL_81;
            }
            sub_22D1B9750(v231, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            uint64_t v151 = v229;
          }
          uint64_t v235 = v433;
LABEL_81:
          sub_22D1B9F34(&qword_268541538, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
          sub_22D2BC1A0();
          uint64_t v304 = v396;
          sub_22D1D0910(v151, v396, &qword_268541FC0, type metadata accessor for PBHKDiagnosticTestReport);
          if ((*v350)(v304, 1, v235) == 1)
          {
            sub_22D1D08A0(v304, &qword_268541FC0, type metadata accessor for PBHKDiagnosticTestReport);
          }
          else
          {
            uint64_t v305 = v304;
            uint64_t v306 = v367;
            sub_22D1D06E8(v305, v367, type metadata accessor for PBHKDiagnosticTestReport);
            uint64_t v307 = v306;
            uint64_t v308 = v445;
            sub_22D1D06E8(v307, v445, type metadata accessor for PBHKDiagnosticTestReport);
            uint64_t v309 = v451;
            swift_storeEnumTagMultiPayload();
            (*v447)(v308, 0, 1, v309);
            uint64_t v310 = v308;
            uint64_t v311 = v446;
            sub_22D1D0910(v310, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_beginAccess();
            sub_22D1B9D9C(v311, v152, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_endAccess();
          }
          goto LABEL_97;
        case 12:
          v177 = *v430;
          uint64_t v178 = v415;
          (*v430)(v415, 1, 1, v440);
          uint64_t v179 = v407;
          sub_22D1B9E60(v152, v407, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v179, 1, v451) == 1)
          {
            uint64_t v180 = (uint64_t)v399;
            sub_22D1D08A0(v179, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          else
          {
            uint64_t v236 = v179;
            uint64_t v237 = v387;
            sub_22D1D06E8(v236, v387, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D2BC090();
            uint64_t v180 = (uint64_t)v399;
            uint64_t v238 = v237;
            uint64_t v239 = v381;
            sub_22D1D06E8(v238, v381, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            int v240 = swift_getEnumCaseMultiPayload();
            uint64_t v178 = v415;
            if (v240 == 7)
            {
              sub_22D1D08A0(v415, &qword_268541FB8, type metadata accessor for PBHKAccountOwner);
              uint64_t v241 = v365;
              sub_22D1D06E8(v239, v365, type metadata accessor for PBHKAccountOwner);
              uint64_t v242 = v241;
              uint64_t v178 = v415;
              sub_22D1D06E8(v242, v415, type metadata accessor for PBHKAccountOwner);
              v177(v178, 0, 1, v440);
            }
            else
            {
              sub_22D1B9750(v239, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            }
          }
          sub_22D1B9F34(&qword_268541550, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
          uint64_t v312 = v440;
          sub_22D2BC1A0();
          sub_22D1D0910(v178, v180, &qword_268541FB8, type metadata accessor for PBHKAccountOwner);
          if ((*v351)(v180, 1, v312) == 1)
          {
            v294 = type metadata accessor for PBHKAccountOwner;
            uint64_t v295 = v180;
            v296 = &qword_268541FB8;
LABEL_87:
            sub_22D1D08A0(v295, v296, v294);
            uint64_t v152 = v448;
          }
          else
          {
            uint64_t v313 = v375;
            sub_22D1D06E8(v180, v375, type metadata accessor for PBHKAccountOwner);
            uint64_t v314 = v313;
            uint64_t v315 = v445;
            sub_22D1D06E8(v314, v445, type metadata accessor for PBHKAccountOwner);
            uint64_t v316 = v451;
            swift_storeEnumTagMultiPayload();
            (*v447)(v315, 0, 1, v316);
            uint64_t v317 = v315;
            uint64_t v318 = v446;
            sub_22D1D0910(v317, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            uint64_t v152 = v448;
            swift_beginAccess();
            sub_22D1B9D9C(v318, v152, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_endAccess();
          }
LABEL_89:
          v149 = &qword_268541FF0;
LABEL_90:
          v150 = &qword_268541FD8;
          goto LABEL_6;
        case 13:
          v181 = *v431;
          (*v431)(v443, 1, 1, v432);
          uint64_t v182 = v408;
          sub_22D1B9E60(v152, v408, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v182, 1, v451) == 1)
          {
            v174 = v150;
            uint64_t v183 = v151;
            sub_22D1D08A0(v182, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          else
          {
            uint64_t v243 = v388;
            sub_22D1D06E8(v182, v388, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D2BC090();
            v174 = v150;
            uint64_t v183 = v151;
            uint64_t v244 = v382;
            sub_22D1D06E8(v243, v382, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            if (swift_getEnumCaseMultiPayload() == 8)
            {
              uint64_t v245 = v443;
              sub_22D1D08A0(v443, &qword_268541FB0, type metadata accessor for PBHKProcedureRecord);
              uint64_t v246 = v244;
              uint64_t v247 = v364;
              sub_22D1D06E8(v246, v364, type metadata accessor for PBHKProcedureRecord);
              sub_22D1D06E8(v247, v245, type metadata accessor for PBHKProcedureRecord);
              uint64_t v248 = v432;
              v181(v245, 0, 1, v432);
              goto LABEL_93;
            }
            sub_22D1B9750(v244, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          uint64_t v248 = v432;
LABEL_93:
          sub_22D1B9F34(&qword_268541568, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
          uint64_t v319 = v443;
          sub_22D2BC1A0();
          uint64_t v320 = v319;
          uint64_t v321 = v395;
          sub_22D1D0910(v320, v395, &qword_268541FB0, type metadata accessor for PBHKProcedureRecord);
          if ((*v421)(v321, 1, v248) == 1)
          {
            sub_22D1D08A0(v321, &qword_268541FB0, type metadata accessor for PBHKProcedureRecord);
          }
          else
          {
            uint64_t v322 = v321;
            uint64_t v323 = v374;
            sub_22D1D06E8(v322, v374, type metadata accessor for PBHKProcedureRecord);
            uint64_t v324 = v323;
            uint64_t v325 = v445;
            sub_22D1D06E8(v324, v445, type metadata accessor for PBHKProcedureRecord);
            uint64_t v326 = v451;
            swift_storeEnumTagMultiPayload();
            (*v447)(v325, 0, 1, v326);
            uint64_t v327 = v325;
            uint64_t v328 = v446;
            sub_22D1D0910(v327, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_beginAccess();
            sub_22D1B9D9C(v328, v152, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_endAccess();
          }
          uint64_t v151 = v183;
LABEL_97:
          v150 = v174;
LABEL_98:
          v149 = &qword_268541FF0;
          goto LABEL_6;
        case 16:
          v184 = *v420;
          (*v420)(v442, 1, 1, v441);
          uint64_t v185 = v409;
          sub_22D1B9E60(v152, v409, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          if ((*v449)(v185, 1, v451) == 1)
          {
            sub_22D1D08A0(v185, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            uint64_t v186 = v442;
          }
          else
          {
            v249 = v150;
            v250 = v149;
            uint64_t v251 = v151;
            uint64_t v252 = v389;
            sub_22D1D06E8(v185, v389, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D2BC090();
            uint64_t v253 = v383;
            sub_22D1D06E8(v252, v383, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            if (swift_getEnumCaseMultiPayload() == 9)
            {
              sub_22D1D08A0(v442, &qword_268541FA8, type metadata accessor for PBHKMedicationRecord);
              uint64_t v254 = v366;
              sub_22D1D06E8(v253, v366, type metadata accessor for PBHKMedicationRecord);
              uint64_t v255 = v254;
              uint64_t v152 = v448;
              uint64_t v151 = v251;
              v149 = &qword_268541FF0;
              uint64_t v186 = v442;
              v150 = &qword_268541FD8;
              sub_22D1D06E8(v255, v442, type metadata accessor for PBHKMedicationRecord);
              v184(v186, 0, 1, v441);
            }
            else
            {
              sub_22D1B9750(v253, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              uint64_t v186 = v442;
              uint64_t v151 = v251;
              v149 = v250;
              v150 = v249;
            }
          }
          sub_22D1B9F34(&qword_268541448, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
          uint64_t v329 = v441;
          sub_22D2BC1A0();
          uint64_t v330 = v391;
          sub_22D1D0910(v186, v391, &qword_268541FA8, type metadata accessor for PBHKMedicationRecord);
          if ((*v352)(v330, 1, v329) == 1)
          {
            sub_22D1D08A0(v330, &qword_268541FA8, type metadata accessor for PBHKMedicationRecord);
          }
          else
          {
            uint64_t v331 = v376;
            sub_22D1D06E8(v330, v376, type metadata accessor for PBHKMedicationRecord);
            uint64_t v332 = v445;
            sub_22D1D06E8(v331, v445, type metadata accessor for PBHKMedicationRecord);
            uint64_t v333 = v451;
            swift_storeEnumTagMultiPayload();
            (*v447)(v332, 0, 1, v333);
            uint64_t v334 = v332;
            uint64_t v335 = v446;
            sub_22D1D0910(v334, v446, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_beginAccess();
            sub_22D1B9D9C(v335, v152, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            swift_endAccess();
          }
          goto LABEL_6;
        case 19:
          swift_beginAccess();
          sub_22D1D04E8();
          sub_22D2BC0D0();
          goto LABEL_5;
        default:
          goto LABEL_6;
      }
    }
  }
  return result;
}

uint64_t PBClinicalRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBClinicalRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1709EC);
}

uint64_t sub_22D1709EC(uint64_t a1)
{
  uint64_t v79 = type metadata accessor for PBHKMedicationRecord(0);
  MEMORY[0x270FA5388](v79);
  uint64_t v80 = (uint64_t)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for PBHKProcedureRecord(0);
  MEMORY[0x270FA5388](v78);
  uint64_t v89 = (uint64_t)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for PBHKAccountOwner(0);
  MEMORY[0x270FA5388](v77);
  uint64_t v88 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for PBHKDiagnosticTestReport(0);
  MEMORY[0x270FA5388](v76);
  uint64_t v87 = (uint64_t)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for PBHKDiagnosticTestResult(0);
  MEMORY[0x270FA5388](v75);
  uint64_t v86 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for PBHKMedicationOrder(0);
  MEMORY[0x270FA5388](v74);
  uint64_t v85 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  MEMORY[0x270FA5388](v73);
  uint64_t v84 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for PBHKVaccinationRecord(0);
  MEMORY[0x270FA5388](v72);
  uint64_t v83 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for PBHKConditionRecord(0);
  MEMORY[0x270FA5388](v71);
  uint64_t v82 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for PBHKAllergyRecord(0);
  MEMORY[0x270FA5388](v69);
  uint64_t v70 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v81 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v90 = (uint64_t)&v68 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v91 = (uint64_t)&v68 - v18;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v12);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v68 - v20;
  uint64_t v22 = type metadata accessor for PBHKConcept(0);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v27 = *(void *)(a1 + 16);
  unint64_t v26 = *(void *)(a1 + 24);
  uint64_t v95 = a1;
  uint64_t v28 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v28 = v27 & 0xFFFFFFFFFFFFLL;
  }
  if (v28)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = v92;
    sub_22D2BC2B0();
    uint64_t v30 = v29;
    if (v29) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = v92;
  }
  uint64_t v31 = v95;
  swift_beginAccess();
  uint64_t v33 = *(void *)(v31 + 32);
  unint64_t v32 = *(void *)(v31 + 40);
  uint64_t v34 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0) {
    uint64_t v34 = v33 & 0xFFFFFFFFFFFFLL;
  }
  if (v34)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v30) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = v95
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  sub_22D1B9E60(v36, (uint64_t)v21, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_22D1D08A0((uint64_t)v21, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v37 = v30;
  }
  else
  {
    sub_22D1D06E8((uint64_t)v21, (uint64_t)v25, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    uint64_t v37 = v30;
    if (v30) {
      return sub_22D1B9750((uint64_t)v25, type metadata accessor for PBHKConcept);
    }
    sub_22D1B9750((uint64_t)v25, type metadata accessor for PBHKConcept);
  }
  uint64_t v38 = v95
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  uint64_t v39 = v91;
  sub_22D1B9E60(v38, v91, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v40 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  uint64_t v43 = v41 + 48;
  int v44 = v42(v39, 1, v40);
  uint64_t v92 = v40;
  if (v44 != 1)
  {
    uint64_t v68 = v43;
    sub_22D1B9E60(v39, v90, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v46 = v82;
        sub_22D1D06E8(v90, v82, type metadata accessor for PBHKConditionRecord);
        sub_22D1B9F34(&qword_2685413D0, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
        sub_22D2BC2E0();
        if (v37)
        {
          uint64_t v47 = type metadata accessor for PBHKConditionRecord;
          goto LABEL_39;
        }
        uint64_t v50 = type metadata accessor for PBHKConditionRecord;
        goto LABEL_50;
      case 2u:
        uint64_t v46 = v83;
        sub_22D1D06E8(v90, v83, type metadata accessor for PBHKVaccinationRecord);
        sub_22D1B9F34(&qword_2685413E8, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
        sub_22D2BC2E0();
        if (v37)
        {
          uint64_t v47 = type metadata accessor for PBHKVaccinationRecord;
          goto LABEL_39;
        }
        uint64_t v50 = type metadata accessor for PBHKVaccinationRecord;
        goto LABEL_50;
      case 3u:
        uint64_t v46 = v84;
        sub_22D1D06E8(v90, v84, type metadata accessor for PBHKMedicationDispenseRecord);
        sub_22D1B9F34(&qword_268541460, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
        sub_22D2BC2E0();
        if (v37)
        {
          uint64_t v47 = type metadata accessor for PBHKMedicationDispenseRecord;
          goto LABEL_39;
        }
        uint64_t v50 = type metadata accessor for PBHKMedicationDispenseRecord;
        goto LABEL_50;
      case 4u:
        uint64_t v46 = v85;
        sub_22D1D06E8(v90, v85, type metadata accessor for PBHKMedicationOrder);
        sub_22D1B9F34(&qword_268541478, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
        sub_22D2BC2E0();
        if (v37)
        {
          uint64_t v47 = type metadata accessor for PBHKMedicationOrder;
          goto LABEL_39;
        }
        uint64_t v50 = type metadata accessor for PBHKMedicationOrder;
        goto LABEL_50;
      case 5u:
        uint64_t v46 = v86;
        sub_22D1D06E8(v90, v86, type metadata accessor for PBHKDiagnosticTestResult);
        sub_22D1B9F34(&qword_268541490, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
        sub_22D2BC2E0();
        if (v37)
        {
          uint64_t v47 = type metadata accessor for PBHKDiagnosticTestResult;
          goto LABEL_39;
        }
        uint64_t v50 = type metadata accessor for PBHKDiagnosticTestResult;
        goto LABEL_50;
      case 6u:
        uint64_t v46 = v87;
        sub_22D1D06E8(v90, v87, type metadata accessor for PBHKDiagnosticTestReport);
        sub_22D1B9F34(&qword_268541538, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
        sub_22D2BC2E0();
        if (v37)
        {
          uint64_t v47 = type metadata accessor for PBHKDiagnosticTestReport;
          goto LABEL_39;
        }
        uint64_t v50 = type metadata accessor for PBHKDiagnosticTestReport;
        goto LABEL_50;
      case 7u:
        uint64_t v46 = v88;
        sub_22D1D06E8(v90, v88, type metadata accessor for PBHKAccountOwner);
        sub_22D1B9F34(&qword_268541550, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
        sub_22D2BC2E0();
        if (v37)
        {
          uint64_t v47 = type metadata accessor for PBHKAccountOwner;
          goto LABEL_39;
        }
        uint64_t v50 = type metadata accessor for PBHKAccountOwner;
        goto LABEL_50;
      case 8u:
        uint64_t v46 = v89;
        sub_22D1D06E8(v90, v89, type metadata accessor for PBHKProcedureRecord);
        sub_22D1B9F34(&qword_268541568, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
        sub_22D2BC2E0();
        if (v37)
        {
          uint64_t v47 = type metadata accessor for PBHKProcedureRecord;
LABEL_39:
          sub_22D1B9750(v46, v47);
          return sub_22D1D08A0(v39, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
        }
        uint64_t v50 = type metadata accessor for PBHKProcedureRecord;
LABEL_50:
        uint64_t v48 = v50;
        uint64_t v49 = v46;
LABEL_51:
        sub_22D1B9750(v49, v48);
        break;
      case 9u:
        uint64_t v48 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord;
        uint64_t v49 = v90;
        goto LABEL_51;
      default:
        uint64_t v45 = v70;
        sub_22D1D06E8(v90, v70, type metadata accessor for PBHKAllergyRecord);
        sub_22D1B9F34(&qword_2685413A0, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
        sub_22D2BC2E0();
        sub_22D1B9750(v45, type metadata accessor for PBHKAllergyRecord);
        if (!v37) {
          break;
        }
        return sub_22D1D08A0(v39, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    }
  }
  sub_22D1D08A0(v39, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v51 = (uint64_t *)(v95
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  uint64_t v53 = *v51;
  unint64_t v52 = v51[1];
  uint64_t v54 = HIBYTE(v52) & 0xF;
  if ((v52 & 0x2000000000000000) == 0) {
    uint64_t v54 = v53 & 0xFFFFFFFFFFFFLL;
  }
  if (!v54 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v37))
  {
    uint64_t v55 = v81;
    sub_22D1B9E60(v38, v81, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    if (v42(v55, 1, v92) == 1)
    {
      sub_22D1D08A0(v55, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    }
    else if (swift_getEnumCaseMultiPayload() == 9)
    {
      uint64_t v56 = v55;
      uint64_t v57 = v80;
      sub_22D1D06E8(v56, v80, type metadata accessor for PBHKMedicationRecord);
      sub_22D1B9F34(&qword_268541448, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
      sub_22D2BC2E0();
      uint64_t result = sub_22D1B9750(v57, type metadata accessor for PBHKMedicationRecord);
      if (v37) {
        return result;
      }
    }
    else
    {
      sub_22D1B9750(v55, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    }
    uint64_t v58 = (uint64_t *)(v95
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
    swift_beginAccess();
    uint64_t v60 = *v58;
    unint64_t v59 = v58[1];
    uint64_t v61 = HIBYTE(v59) & 0xF;
    if ((v59 & 0x2000000000000000) == 0) {
      uint64_t v61 = v60 & 0xFFFFFFFFFFFFLL;
    }
    if (!v61 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v37))
    {
      uint64_t v62 = (uint64_t *)(v95
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
      swift_beginAccess();
      uint64_t v64 = *v62;
      unint64_t v63 = v62[1];
      uint64_t v65 = HIBYTE(v63) & 0xF;
      if ((v63 & 0x2000000000000000) == 0) {
        uint64_t v65 = v64 & 0xFFFFFFFFFFFFLL;
      }
      if (!v65 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v37))
      {
        uint64_t v66 = (uint64_t *)(v95
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType);
        uint64_t result = swift_beginAccess();
        if (*v66)
        {
          char v67 = *((unsigned char *)v66 + 8);
          uint64_t v93 = *v66;
          char v94 = v67;
          sub_22D1D04E8();
          return sub_22D2BC240();
        }
      }
    }
  }
  return result;
}

uint64_t static PBClinicalRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBClinicalRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D171D2C) & 1;
}

uint64_t sub_22D171D2C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v75 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v69 = (uint64_t)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541FA0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v72 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v76 = (uint64_t)&v68 - v7;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v70 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v73 = (uint64_t)&v68 - v12;
  uint64_t v13 = type metadata accessor for PBHKConcept(0);
  uint64_t v79 = *(void *)(v13 - 8);
  uint64_t v80 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v71 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v68 - v17;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v77 = (uint64_t)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v68 - v22;
  swift_beginAccess();
  uint64_t v25 = a1[2];
  uint64_t v24 = a1[3];
  unint64_t v26 = a1;
  swift_beginAccess();
  if (v25 == a2[2] && v24 == a2[3] || (v27 = sub_22D2BD660(), uint64_t result = 0, (v27 & 1) != 0))
  {
    if ((swift_beginAccess(), uint64_t v29 = a1[4], v30 = a1[5], swift_beginAccess(), v29 == a2[4]) && v30 == a2[5]
      || (v31 = sub_22D2BD660(), uint64_t result = 0, (v31 & 1) != 0))
    {
      uint64_t v78 = a2;
      uint64_t v32 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
      swift_beginAccess();
      sub_22D1B9E60(v32, (uint64_t)v23, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      uint64_t v33 = v78;
      uint64_t v34 = (uint64_t)v78
          + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
      swift_beginAccess();
      uint64_t v35 = (uint64_t)&v18[*(int *)(v16 + 48)];
      sub_22D1B9E60((uint64_t)v23, (uint64_t)v18, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      sub_22D1B9E60(v34, v35, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      uint64_t v36 = v80;
      uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
      if (v37((uint64_t)v18, 1, v80) == 1)
      {
        swift_retain();
        swift_retain();
        sub_22D1D08A0((uint64_t)v23, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        uint64_t v38 = a1;
        if (v37(v35, 1, v36) == 1)
        {
          sub_22D1D08A0((uint64_t)v18, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v39 = v77;
        sub_22D1B9E60((uint64_t)v18, v77, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        if (v37(v35, 1, v36) != 1)
        {
          uint64_t v40 = v71;
          sub_22D1D06E8(v35, v71, type metadata accessor for PBHKConcept);
          uint64_t v38 = v26;
          swift_retain();
          swift_retain();
          char v41 = sub_22D1B8590(v39, v40, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
          sub_22D1B9750(v40, type metadata accessor for PBHKConcept);
          sub_22D1D08A0((uint64_t)v23, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          sub_22D1B9750(v39, type metadata accessor for PBHKConcept);
          sub_22D1D08A0((uint64_t)v18, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          if ((v41 & 1) == 0) {
            goto LABEL_21;
          }
LABEL_14:
          uint64_t v42 = (uint64_t)v38
              + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
          swift_beginAccess();
          uint64_t v43 = v73;
          sub_22D1B9E60(v42, v73, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          uint64_t v44 = (uint64_t)v33
              + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
          swift_beginAccess();
          uint64_t v45 = v76;
          uint64_t v46 = v76 + *(int *)(v72 + 48);
          sub_22D1B9E60(v43, v76, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          sub_22D1B9E60(v44, v46, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          uint64_t v47 = v75;
          uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
          if (v48(v45, 1, v75) == 1)
          {
            sub_22D1D08A0(v43, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            if (v48(v46, 1, v47) == 1)
            {
              sub_22D1D08A0(v45, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
LABEL_25:
              unint64_t v52 = (void *)((char *)v38
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
              swift_beginAccess();
              uint64_t v53 = *v52;
              uint64_t v54 = v52[1];
              uint64_t v55 = (void *)((char *)v78
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
              swift_beginAccess();
              if (v53 == *v55 && v54 == v55[1] || (sub_22D2BD660() & 1) != 0)
              {
                if ((uint64_t v56 = (void *)((char *)v38
                                     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID),
                      swift_beginAccess(),
                      uint64_t v57 = *v56,
                      uint64_t v58 = v56[1],
                      unint64_t v59 = (void *)((char *)v78
                                     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID),
                      swift_beginAccess(),
                      v57 == *v59)
                  && v58 == v59[1]
                  || (sub_22D2BD660() & 1) != 0)
                {
                  if ((uint64_t v60 = (void *)((char *)v38
                                       + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName),
                        swift_beginAccess(),
                        uint64_t v61 = *v60,
                        uint64_t v62 = v60[1],
                        unint64_t v63 = (void *)((char *)v78
                                       + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName),
                        swift_beginAccess(),
                        v61 == *v63)
                    && v62 == v63[1]
                    || (sub_22D2BD660() & 1) != 0)
                  {
                    uint64_t v64 = (void *)((char *)v38
                                   + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType);
                    swift_beginAccess();
                    uint64_t v65 = *v64;
                    swift_release();
                    uint64_t v66 = (char *)v78
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
                    swift_beginAccess();
                    uint64_t v67 = *(void *)v66;
                    LODWORD(v66) = v66[8];
                    swift_release();
                    if (v66 == 1)
                    {
                      if (v67)
                      {
                        if (v67 == 1)
                        {
                          if (v65 == 1) {
                            return 1;
                          }
                        }
                        else if (v65 == 2)
                        {
                          return 1;
                        }
                      }
                      else if (!v65)
                      {
                        return 1;
                      }
                    }
                    else if (v65 == v67)
                    {
                      return 1;
                    }
                    return 0;
                  }
                }
              }
LABEL_21:
              swift_release();
              swift_release();
              return 0;
            }
          }
          else
          {
            uint64_t v49 = v70;
            sub_22D1B9E60(v45, v70, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            if (v48(v46, 1, v47) != 1)
            {
              uint64_t v50 = v69;
              sub_22D1D06E8(v46, v69, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              char v51 = _s19HealthRecordsDaemon16PBClinicalRecordV013OneOf_MedicalE0O2eeoiySbAE_AEtFZ_0(v49, v50);
              sub_22D1B9750(v50, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              sub_22D1D08A0(v43, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              sub_22D1B9750(v49, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              sub_22D1D08A0(v45, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
              if ((v51 & 1) == 0) {
                goto LABEL_21;
              }
              goto LABEL_25;
            }
            sub_22D1D08A0(v43, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
            sub_22D1B9750(v49, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          }
          sub_22D1D05E4(v45, &qword_268541FA0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          goto LABEL_21;
        }
        swift_retain();
        swift_retain();
        sub_22D1D08A0((uint64_t)v23, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        sub_22D1B9750(v39, type metadata accessor for PBHKConcept);
      }
      sub_22D1D05E4((uint64_t)v18, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_21;
    }
  }
  return result;
}

uint64_t PBClinicalRecord.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBClinicalRecord, &qword_268540EB0, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord);
}

uint64_t sub_22D172900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D000, &qword_268540278, a2);
}

unint64_t sub_22D172924()
{
  return 0xD000000000000029;
}

uint64_t sub_22D172940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBClinicalRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D172958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBClinicalRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D172970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E88, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1729EC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853CFF8, (uint64_t)qword_268540260, a1);
}

uint64_t sub_22D172A10(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268540EA0, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D172A7C()
{
  sub_22D1B9F34(&qword_268540EA0, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord);
  return sub_22D2BC200();
}

uint64_t sub_22D172AF8(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBClinicalRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D171D2C) & 1;
}

uint64_t sub_22D172B3C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540280);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540280);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 0;
  *(void *)unint64_t v7 = "ORIGIN_NOT_SET";
  *(void *)(v7 + 8) = 14;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 1;
  *(void *)uint64_t v11 = "FHIR_RESOURCE";
  *((void *)v11 + 1) = 13;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 2;
  *(void *)uint64_t v12 = "SIGNED_CLINICAL_DATA";
  *(void *)(v12 + 8) = 20;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBClinicalRecord.MedicalRecordOriginType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D008, (uint64_t)qword_268540280, a1);
}

uint64_t sub_22D172D88@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D008, (uint64_t)qword_268540280, a1);
}

unint64_t static PBFHIRIdentifier.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_22D172DC8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540298);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540298);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "resource_type";
  *(void *)(v7 + 8) = 13;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "identifier";
  *((void *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBFHIRIdentifier._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D010, (uint64_t)qword_268540298, a1);
}

uint64_t PBFHIRIdentifier.decodeMessage<A>(decoder:)()
{
  return sub_22D1A9FF8();
}

uint64_t PBFHIRIdentifier.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D18EA08(a1, a2, a3, (void (*)(void))type metadata accessor for PBFHIRIdentifier);
}

uint64_t static PBFHIRIdentifier.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B7530(a1, a2, type metadata accessor for PBFHIRIdentifier) & 1;
}

uint64_t PBFHIRIdentifier.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBFHIRIdentifier, &qword_268540EB8, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier);
}

unint64_t sub_22D173094()
{
  return 0xD000000000000029;
}

uint64_t sub_22D1730B0()
{
  return PBPatientMeta.HumanName.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1730C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBFHIRIdentifier.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1730E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E80, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D17315C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D010, (uint64_t)qword_268540298, a1);
}

uint64_t sub_22D173180(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541370, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1731EC()
{
  sub_22D1B9F34(&qword_268541370, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier);
  return sub_22D2BC200();
}

uint64_t sub_22D173268(char *a1, char *a2)
{
  return sub_22D1B7530(a1, a2, type metadata accessor for PBFHIRIdentifier) & 1;
}

unint64_t static PBHKConcept.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_22D1732B4()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685402B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685402B0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2BFF30;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "preferred_name";
  *(void *)(v7 + 8) = 14;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "localized_preferred_name";
  *(void *)(v11 + 8) = 24;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "raw_identifier";
  *((void *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "group_by";
  *((void *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  uint64_t v16 = v6 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v6 + 4 * v3) = 5;
  *(void *)uint64_t v16 = "is_in_memory";
  *(void *)(v16 + 8) = 12;
  *(unsigned char *)(v16 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHKConcept._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D018, (uint64_t)qword_2685402B0, a1);
}

uint64_t sub_22D173584()
{
  type metadata accessor for PBHKConcept._StorageClass(0);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  v0[6] = 0;
  v0[7] = 0xE000000000000000;
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *((unsigned char *)v0
  + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory) = 0;
  qword_2685402C8 = (uint64_t)v0;
  return result;
}

uint64_t sub_22D173628()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return swift_deallocClassInstance();
}

uint64_t PBHKConcept.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D16C750(a1, a2, a3, type metadata accessor for PBHKConcept, (void (*)(void))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B8D74, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D173728);
}

uint64_t sub_22D173728()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC0B0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKConcept.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKConcept, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D173970);
}

uint64_t sub_22D173970(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = type metadata accessor for PBHKConcept(0);
  v22[0] = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v13 = a1[3];
  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  v22[17] = a4;
  if (!v14 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    unint64_t v16 = a1[5];
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = a1[4] & 0xFFFFFFFFFFFFLL;
    }
    if (!v17 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
    {
      swift_beginAccess();
      unint64_t v18 = a1[7];
      uint64_t v19 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0) {
        uint64_t v19 = a1[6] & 0xFFFFFFFFFFFFLL;
      }
      if (!v19 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
      {
        uint64_t v20 = (uint64_t)a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
        swift_beginAccess();
        sub_22D1B9E60(v20, (uint64_t)v9, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22[0] + 48))(v9, 1, v10) == 1)
        {
          sub_22D1D08A0((uint64_t)v9, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        }
        else
        {
          sub_22D1D06E8((uint64_t)v9, (uint64_t)v12, type metadata accessor for PBHKConcept);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC2E0();
          uint64_t result = sub_22D1B9750((uint64_t)v12, type metadata accessor for PBHKConcept);
          if (v4) {
            return result;
          }
        }
        uint64_t v21 = (char *)a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
        uint64_t result = swift_beginAccess();
        if (*v21 == 1) {
          return sub_22D2BC230();
        }
      }
    }
  }
  return result;
}

uint64_t static PBHKConcept.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94) & 1;
}

uint64_t sub_22D173D94(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PBHKConcept(0);
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v37 - v9;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v37 - v15;
  swift_beginAccess();
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  swift_beginAccess();
  if (v17 == a2[2] && v18 == a2[3] || (char v19 = sub_22D2BD660(), v20 = 0, (v19 & 1) != 0))
  {
    if ((swift_beginAccess(), v21 = a1[4], uint64_t v22 = a1[5], swift_beginAccess(), v21 == a2[4]) && v22 == a2[5]
      || (char v23 = sub_22D2BD660(), v20 = 0, (v23 & 1) != 0))
    {
      if ((swift_beginAccess(), uint64_t v24 = a1[6], v25 = a1[7], swift_beginAccess(), v24 == a2[6]) && v25 == a2[7]
        || (v26 = sub_22D2BD660(), char v20 = 0, (v26 & 1) != 0))
      {
        uint64_t v38 = v14;
        uint64_t v37 = v6;
        uint64_t v27 = (uint64_t)a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
        swift_beginAccess();
        sub_22D1B9E60(v27, (uint64_t)v16, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        uint64_t v28 = (uint64_t)a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
        swift_beginAccess();
        uint64_t v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_22D1B9E60((uint64_t)v16, (uint64_t)v10, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        sub_22D1B9E60(v28, v29, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
        if (v30((uint64_t)v10, 1, v4) == 1)
        {
          swift_retain();
          swift_retain();
          sub_22D1D08A0((uint64_t)v16, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          if (v30(v29, 1, v4) == 1)
          {
            sub_22D1D08A0((uint64_t)v10, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_18:
            uint64_t v34 = (char *)a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
            swift_beginAccess();
            LOBYTE(v34) = *v34;
            swift_release();
            uint64_t v35 = (char *)a2
                + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
            swift_beginAccess();
            LOBYTE(v35) = *v35;
            swift_release();
            char v20 = v34 ^ v35 ^ 1;
            return v20 & 1;
          }
        }
        else
        {
          uint64_t v31 = (uint64_t)v38;
          sub_22D1B9E60((uint64_t)v10, (uint64_t)v38, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          if (v30(v29, 1, v4) != 1)
          {
            uint64_t v32 = (uint64_t)v37;
            sub_22D1D06E8(v29, (uint64_t)v37, type metadata accessor for PBHKConcept);
            swift_retain();
            swift_retain();
            char v33 = sub_22D1B8590(v31, v32, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
            sub_22D1B9750(v32, type metadata accessor for PBHKConcept);
            sub_22D1D08A0((uint64_t)v16, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            sub_22D1B9750(v31, type metadata accessor for PBHKConcept);
            sub_22D1D08A0((uint64_t)v10, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            if (v33) {
              goto LABEL_18;
            }
            goto LABEL_16;
          }
          swift_retain();
          swift_retain();
          sub_22D1D08A0((uint64_t)v16, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          sub_22D1B9750(v31, type metadata accessor for PBHKConcept);
        }
        sub_22D1D05E4((uint64_t)v10, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_16:
        swift_release();
        swift_release();
        char v20 = 0;
      }
    }
  }
  return v20 & 1;
}

uint64_t PBHKConcept.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKConcept, &qword_268540EC0, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
}

uint64_t sub_22D174414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D020, &qword_2685402C8, a2);
}

unint64_t sub_22D174438()
{
  return 0xD000000000000024;
}

uint64_t sub_22D174454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKConcept.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D17446C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKConcept.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D174484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E78, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D174500@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D018, (uint64_t)qword_2685402B0, a1);
}

uint64_t sub_22D174524(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D174590()
{
  sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
  return sub_22D2BC200();
}

unint64_t static PBHKAllergyRecord.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D17462C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685402D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685402D0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_22D2C39B0;
  unint64_t v5 = v24 + v4;
  unint64_t v6 = v24 + v4 + *(int *)(v2 + 56);
  *(void *)(v24 + v4) = 1;
  *(void *)unint64_t v6 = "allergy";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "asserter";
  *(void *)(v10 + 8) = 8;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "criticality";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "last_occurrence_date";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  unint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)unint64_t v16 = "onset_date";
  *((void *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "reactions";
  *((void *)v18 + 1) = 9;
  v18[16] = 2;
  v9();
  char v19 = (void *)(v5 + 6 * v3);
  char v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)char v20 = "recorded_date";
  *((void *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "status";
  *((void *)v22 + 1) = 6;
  v22[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBHKAllergyRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D028, (uint64_t)qword_2685402D0, a1);
}

uint64_t sub_22D1749BC()
{
  type metadata accessor for PBHKAllergyRecord._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality, 1, 1, v2);
  unint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  *unint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  unint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  *unint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions) = MEMORY[0x263F8EE78];
  uint64_t v7 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  qword_2685402E8 = v0;
  return result;
}

uint64_t sub_22D174AF8(uint64_t a1)
{
  uint64_t v39 = a1;
  uint64_t v40 = type metadata accessor for PBHKConcept;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v38 = (uint64_t)&v37 - v3;
  uint64_t v4 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  unint64_t v6 = *(void (**)(void))(*(void *)(v5 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6)(v4, 1, 1, v5);
  uint64_t v7 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  uint64_t v41 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  v6();
  uint64_t v45 = v1;
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  uint64_t v43 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions) = MEMORY[0x263F8EE78];
  unint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  uint64_t v44 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  *unint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  uint64_t v42 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v6();
  uint64_t v11 = v39;
  uint64_t v12 = v39
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  uint64_t v13 = v38;
  uint64_t v14 = v40;
  sub_22D1B9E60(v12, v38, (unint64_t *)&qword_26853E848, v40);
  swift_beginAccess();
  sub_22D1B9D9C(v13, v4, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  uint64_t v15 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  swift_beginAccess();
  *uint64_t v7 = v16;
  v7[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  sub_22D1B9E60(v18, v13, (unint64_t *)&qword_26853E848, v14);
  uint64_t v19 = v41;
  swift_beginAccess();
  uint64_t v20 = v13;
  sub_22D1B9D9C(v13, v19, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  uint64_t v21 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  swift_beginAccess();
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  swift_beginAccess();
  *uint64_t v8 = v22;
  v8[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  swift_beginAccess();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  swift_beginAccess();
  void *v9 = v25;
  v9[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  swift_beginAccess();
  uint64_t v28 = *v27;
  uint64_t v29 = v43;
  swift_beginAccess();
  void *v29 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  char v33 = v44;
  swift_beginAccess();
  *char v33 = v31;
  v33[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v34, v20, (unint64_t *)&qword_26853E848, v14);
  swift_release();
  uint64_t v35 = v42;
  swift_beginAccess();
  sub_22D1B9D9C(v20, v35, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  return v45;
}

uint64_t sub_22D174FC4()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v0;
}

uint64_t sub_22D1750B0()
{
  return sub_22D1AF83C(sub_22D174FC4);
}

uint64_t PBHKAllergyRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D175130);
}

uint64_t sub_22D175130()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 2:
        case 4:
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBHKAllergyReaction(0);
          sub_22D1B9F34(&qword_2685413B8, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 8:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKAllergyRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKAllergyRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D175548);
}

uint64_t sub_22D175548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a4;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v54 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v56 = (uint64_t)&v53 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v53 - v10;
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v53 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v55 = (uint64_t)&v53 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t v60 = a1;
  uint64_t v20 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_22D1B9E60(v20, (uint64_t)v11, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v57 = v13 + 48;
  if (v21(v11, 1, v12) == 1)
  {
    uint64_t v22 = v12;
    sub_22D1D08A0((uint64_t)v11, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v23 = v58;
  }
  else
  {
    sub_22D1D06E8((uint64_t)v11, (uint64_t)v19, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    uint64_t v22 = v12;
    uint64_t v24 = v58;
    sub_22D2BC2E0();
    uint64_t v23 = v24;
    uint64_t result = sub_22D1B9750((uint64_t)v19, type metadata accessor for PBHKConcept);
    if (v24) {
      return result;
    }
  }
  uint64_t v26 = (uint64_t *)(v60
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  uint64_t v27 = *v26;
  unint64_t v28 = v26[1];
  uint64_t v29 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0) {
    uint64_t v29 = v27 & 0xFFFFFFFFFFFFLL;
  }
  if (!v29 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v23))
  {
    uint64_t v30 = v60
        + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
    swift_beginAccess();
    uint64_t v31 = v30;
    uint64_t v32 = v56;
    sub_22D1B9E60(v31, v56, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v21((char *)v32, 1, v22) == 1)
    {
      uint64_t v33 = v22;
      sub_22D1D08A0(v32, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    }
    else
    {
      uint64_t v34 = v32;
      uint64_t v35 = v55;
      sub_22D1D06E8(v34, v55, type metadata accessor for PBHKConcept);
      sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
      uint64_t v33 = v22;
      sub_22D2BC2E0();
      uint64_t result = sub_22D1B9750(v35, type metadata accessor for PBHKConcept);
      if (v23) {
        return result;
      }
    }
    uint64_t v36 = (uint64_t *)(v60
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
    swift_beginAccess();
    uint64_t v37 = *v36;
    unint64_t v38 = v36[1];
    uint64_t v39 = HIBYTE(v38) & 0xF;
    if ((v38 & 0x2000000000000000) == 0) {
      uint64_t v39 = v37 & 0xFFFFFFFFFFFFLL;
    }
    if (!v39 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v23))
    {
      uint64_t v40 = (uint64_t *)(v60
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
      swift_beginAccess();
      uint64_t v41 = *v40;
      unint64_t v42 = v40[1];
      uint64_t v43 = HIBYTE(v42) & 0xF;
      if ((v42 & 0x2000000000000000) == 0) {
        uint64_t v43 = v41 & 0xFFFFFFFFFFFFLL;
      }
      if (!v43 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v23))
      {
        uint64_t v44 = v60
            + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions;
        swift_beginAccess();
        if (!*(void *)(*(void *)v44 + 16)
          || (type metadata accessor for PBHKAllergyReaction(0),
              sub_22D1B9F34(&qword_2685413B8, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction), swift_bridgeObjectRetain(), sub_22D2BC2D0(), uint64_t result = swift_bridgeObjectRelease(), !v23))
        {
          uint64_t v45 = (uint64_t *)(v60
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
          swift_beginAccess();
          uint64_t v46 = *v45;
          unint64_t v47 = v45[1];
          uint64_t v48 = HIBYTE(v47) & 0xF;
          if ((v47 & 0x2000000000000000) == 0) {
            uint64_t v48 = v46 & 0xFFFFFFFFFFFFLL;
          }
          if (!v48 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v23))
          {
            uint64_t v49 = v60
                + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
            swift_beginAccess();
            uint64_t v50 = v54;
            sub_22D1B9E60(v49, v54, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            if (v21((char *)v50, 1, v33) == 1)
            {
              return sub_22D1D08A0(v50, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            }
            else
            {
              uint64_t v51 = v50;
              uint64_t v52 = v53;
              sub_22D1D06E8(v51, v53, type metadata accessor for PBHKConcept);
              sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
              sub_22D2BC2E0();
              return sub_22D1B9750(v52, type metadata accessor for PBHKConcept);
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_22D175D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBHKConcept(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v99 = v4;
  uint64_t v100 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v96 = (uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v91 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v94 = (uint64_t)&v88 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v88 - v13;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v90 = (uint64_t)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v92 = (uint64_t)&v88 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v93 = (uint64_t)&v88 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v97 = (uint64_t)&v88 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v98 = (uint64_t)&v88 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v88 - v26;
  uint64_t v28 = a1;
  uint64_t v29 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  sub_22D1B9E60(v29, (uint64_t)v27, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v30 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__allergy;
  swift_beginAccess();
  uint64_t v95 = v8;
  uint64_t v31 = (uint64_t)&v14[*(int *)(v8 + 48)];
  sub_22D1B9E60((uint64_t)v27, (uint64_t)v14, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v32 = v30;
  uint64_t v33 = v99;
  uint64_t v34 = v100;
  sub_22D1B9E60(v32, v31, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  uint64_t v36 = v34 + 48;
  uint64_t v35 = v37;
  if (v37((uint64_t)v14, 1, v33) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v27, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    unsigned int v38 = v35(v31, 1, v33);
    uint64_t v39 = a2;
    uint64_t v40 = v28;
    if (v38 == 1)
    {
      uint64_t v89 = v35;
      uint64_t v100 = v36;
      sub_22D1D08A0((uint64_t)v14, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_8;
    }
LABEL_6:
    sub_22D1D05E4((uint64_t)v14, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    goto LABEL_32;
  }
  uint64_t v40 = v28;
  uint64_t v41 = v98;
  sub_22D1B9E60((uint64_t)v14, v98, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v35(v31, 1, v33) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v27, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v41, type metadata accessor for PBHKConcept);
    goto LABEL_6;
  }
  uint64_t v89 = v35;
  uint64_t v100 = v36;
  uint64_t v42 = v96;
  sub_22D1D06E8(v31, v96, type metadata accessor for PBHKConcept);
  swift_retain();
  swift_retain();
  char v43 = sub_22D1B8590(v41, v42, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v42, type metadata accessor for PBHKConcept);
  sub_22D1D08A0((uint64_t)v27, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v41, type metadata accessor for PBHKConcept);
  uint64_t v39 = a2;
  sub_22D1D08A0((uint64_t)v14, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((v43 & 1) == 0) {
    goto LABEL_32;
  }
LABEL_8:
  uint64_t v44 = (uint64_t *)(v40
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  uint64_t v45 = *v44;
  uint64_t v46 = v44[1];
  unint64_t v47 = (void *)(v39
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  uint64_t v48 = v40;
  if ((v45 != *v47 || v46 != v47[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v49 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  uint64_t v50 = v97;
  sub_22D1B9E60(v49, v97, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v51 = v39
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__criticality;
  swift_beginAccess();
  uint64_t v52 = v94;
  uint64_t v53 = v94 + *(int *)(v95 + 48);
  sub_22D1B9E60(v50, v94, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9E60(v51, v53, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v54 = v99;
  uint64_t v55 = v100;
  uint64_t v56 = v89;
  if (v89(v52, 1, v99) != 1)
  {
    uint64_t v57 = v93;
    sub_22D1B9E60(v52, v93, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v56(v53, 1, v54) == 1)
    {
      sub_22D1D08A0(v97, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      sub_22D1B9750(v57, type metadata accessor for PBHKConcept);
      goto LABEL_17;
    }
    uint64_t v100 = v55;
    uint64_t v58 = v96;
    sub_22D1D06E8(v53, v96, type metadata accessor for PBHKConcept);
    char v59 = sub_22D1B8590(v57, v58, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
    sub_22D1B9750(v58, type metadata accessor for PBHKConcept);
    sub_22D1D08A0(v97, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v57, type metadata accessor for PBHKConcept);
    sub_22D1D08A0(v52, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v59) {
      goto LABEL_19;
    }
LABEL_32:
    swift_release();
    swift_release();
    return 0;
  }
  sub_22D1D08A0(v50, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v56(v53, 1, v54) != 1)
  {
LABEL_17:
    sub_22D1D05E4(v52, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    goto LABEL_32;
  }
  uint64_t v100 = v55;
  sub_22D1D08A0(v52, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_19:
  uint64_t v60 = (uint64_t *)(v48
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  swift_beginAccess();
  uint64_t v61 = *v60;
  uint64_t v62 = v60[1];
  unint64_t v63 = (void *)(v39
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
  swift_beginAccess();
  if ((v61 != *v63 || v62 != v63[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v64 = (uint64_t *)(v48
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  swift_beginAccess();
  uint64_t v65 = *v64;
  uint64_t v66 = v64[1];
  uint64_t v67 = (void *)(v39
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
  swift_beginAccess();
  if ((v65 != *v67 || v66 != v67[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v68 = (uint64_t *)(v48
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  swift_beginAccess();
  uint64_t v69 = *v68;
  uint64_t v70 = (uint64_t *)(v39
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
  swift_beginAccess();
  uint64_t v71 = *v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v72 = sub_22D1132FC(v69, v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v72 & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v73 = (uint64_t *)(v48
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  uint64_t v74 = *v73;
  uint64_t v75 = v73[1];
  uint64_t v76 = (void *)(v39
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  if ((v74 != *v76 || v75 != v76[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v77 = v48
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  uint64_t v78 = v92;
  sub_22D1B9E60(v77, v92, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v79 = v39
      + OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  uint64_t v80 = v91;
  uint64_t v81 = v91 + *(int *)(v95 + 48);
  sub_22D1B9E60(v78, v91, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9E60(v79, v81, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v82 = v99;
  uint64_t v83 = v89;
  if (v89(v80, 1, v99) == 1)
  {
    swift_release();
    swift_release();
    sub_22D1D08A0(v78, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v83(v81, 1, v82) == 1)
    {
      sub_22D1D08A0(v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      return 1;
    }
    goto LABEL_37;
  }
  uint64_t v85 = v90;
  sub_22D1B9E60(v80, v90, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v83(v81, 1, v82) == 1)
  {
    swift_release();
    swift_release();
    sub_22D1D08A0(v92, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v85, type metadata accessor for PBHKConcept);
LABEL_37:
    sub_22D1D05E4(v80, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    return 0;
  }
  uint64_t v86 = v96;
  sub_22D1D06E8(v81, v96, type metadata accessor for PBHKConcept);
  char v87 = sub_22D1B8590(v85, v86, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  swift_release();
  swift_release();
  sub_22D1B9750(v86, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v92, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v85, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return (v87 & 1) != 0;
}

uint64_t PBHKAllergyRecord.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKAllergyRecord, &qword_268540EC8, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
}

uint64_t sub_22D176B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D030, &qword_2685402E8, a2);
}

unint64_t sub_22D176B88()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D176BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAllergyRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D176BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAllergyRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D176BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E70, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D176C50@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D028, (uint64_t)qword_2685402D0, a1);
}

uint64_t sub_22D176C74(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685413A0, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D176CE0()
{
  sub_22D1B9F34(&qword_2685413A0, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
  return sub_22D2BC200();
}

unint64_t static PBHKAllergyReaction.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D176D7C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685402F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685402F0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "manifestations";
  *(void *)(v7 + 8) = 14;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "onset_date";
  *((void *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "severity";
  *(void *)(v12 + 8) = 8;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHKAllergyReaction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D038, (uint64_t)qword_2685402F0, a1);
}

uint64_t sub_22D176FD4()
{
  type metadata accessor for PBHKAllergyReaction._StorageClass(0);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = MEMORY[0x263F8EE78];
  v0[3] = 0;
  v0[4] = 0xE000000000000000;
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_268540308 = (uint64_t)v0;
  return result;
}

void *sub_22D177070(void *a1)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v13[-v4];
  v1[2] = MEMORY[0x263F8EE78];
  v1[3] = 0;
  v1[4] = 0xE000000000000000;
  uint64_t v6 = (uint64_t)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  uint64_t v8 = a1[2];
  swift_beginAccess();
  v1[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v10 = a1[3];
  uint64_t v9 = a1[4];
  swift_beginAccess();
  v1[3] = v10;
  v1[4] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  sub_22D1B9E60(v11, (uint64_t)v5, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_release();
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v5, v6, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D177298()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return swift_deallocClassInstance();
}

uint64_t PBHKAllergyReaction.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKAllergyReaction, (void (*)(void))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_22D177070, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D177390);
}

uint64_t sub_22D177390()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_22D2BC170();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBHKConcept(0);
        sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
        uint64_t v4 = v3;
        sub_22D2BC190();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBHKConcept(0);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    uint64_t v4 = v3;
    sub_22D2BC1A0();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBHKAllergyReaction.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKAllergyReaction, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1775A8);
}

uint64_t sub_22D1775A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = type metadata accessor for PBHKConcept(0);
  uint64_t v20 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1[2] + 16);
  uint64_t v22 = a4;
  uint64_t v21 = a3;
  if (!v14
    || (sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept),
        swift_bridgeObjectRetain(),
        sub_22D2BC2D0(),
        uint64_t result = swift_bridgeObjectRelease(),
        !v4))
  {
    swift_beginAccess();
    unint64_t v16 = a1[4];
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = a1[3] & 0xFFFFFFFFFFFFLL;
    }
    if (!v17 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
    {
      uint64_t v18 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
      swift_beginAccess();
      sub_22D1B9E60(v18, (uint64_t)v10, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v11) == 1)
      {
        return sub_22D1D08A0((uint64_t)v10, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      }
      else
      {
        sub_22D1D06E8((uint64_t)v10, (uint64_t)v13, type metadata accessor for PBHKConcept);
        sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
        sub_22D2BC2E0();
        return sub_22D1B9750((uint64_t)v13, type metadata accessor for PBHKConcept);
      }
    }
  }
  return result;
}

uint64_t static PBHKAllergyReaction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKAllergyReaction, (uint64_t (*)(uint64_t, uint64_t))sub_22D177950) & 1;
}

uint64_t sub_22D177950(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PBHKConcept(0);
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v30 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - v8;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v29 - v14;
  swift_beginAccess();
  uint64_t v16 = a1[2];
  swift_beginAccess();
  uint64_t v17 = a2[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v18 = sub_22D113350(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0
    && ((swift_beginAccess(), uint64_t v19 = a1[3], v20 = a1[4], swift_beginAccess(), v19 == a2[3]) && v20 == a2[4]
     || (sub_22D2BD660() & 1) != 0))
  {
    uint64_t v29 = v13;
    uint64_t v21 = (uint64_t)a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
    swift_beginAccess();
    sub_22D1B9E60(v21, (uint64_t)v15, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v22 = (uint64_t)a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKAllergyReactionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
    swift_beginAccess();
    uint64_t v23 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_22D1B9E60((uint64_t)v15, (uint64_t)v9, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9E60(v22, v23, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
    if (v24((uint64_t)v9, 1, v4) == 1)
    {
      swift_release();
      swift_release();
      sub_22D1D08A0((uint64_t)v15, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if (v24(v23, 1, v4) == 1)
      {
        sub_22D1D08A0((uint64_t)v9, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        return 1;
      }
      goto LABEL_11;
    }
    uint64_t v25 = (uint64_t)v29;
    sub_22D1B9E60((uint64_t)v9, (uint64_t)v29, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v24(v23, 1, v4) == 1)
    {
      swift_release();
      swift_release();
      sub_22D1D08A0((uint64_t)v15, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      sub_22D1B9750(v25, type metadata accessor for PBHKConcept);
LABEL_11:
      sub_22D1D05E4((uint64_t)v9, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      return 0;
    }
    uint64_t v27 = v30;
    sub_22D1D06E8(v23, v30, type metadata accessor for PBHKConcept);
    char v28 = sub_22D1B8590(v25, v27, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
    swift_release();
    swift_release();
    sub_22D1B9750(v27, type metadata accessor for PBHKConcept);
    sub_22D1D08A0((uint64_t)v15, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v25, type metadata accessor for PBHKConcept);
    sub_22D1D08A0((uint64_t)v9, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v28) {
      return 1;
    }
  }
  else
  {
    swift_release();
    swift_release();
  }
  return 0;
}

uint64_t PBHKAllergyReaction.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKAllergyReaction, &qword_268540ED0, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction);
}

uint64_t sub_22D177F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D040, &qword_268540308, a2);
}

unint64_t sub_22D177F44()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D177F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAllergyReaction.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D177F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAllergyReaction.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D177F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E68, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D17800C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D038, (uint64_t)qword_2685402F0, a1);
}

uint64_t sub_22D178030(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685413B8, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D17809C()
{
  sub_22D1B9F34(&qword_2685413B8, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction);
  return sub_22D2BC200();
}

uint64_t sub_22D178118(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKAllergyReaction, (uint64_t (*)(uint64_t, uint64_t))sub_22D177950) & 1;
}

unint64_t static PBHKConditionRecord.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D178178()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540310);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540310);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_22D2C0F20;
  unint64_t v5 = v27 + v4;
  unint64_t v6 = v27 + v4 + *(int *)(v2 + 56);
  *(void *)(v27 + v4) = 1;
  *(void *)unint64_t v6 = "abatement_string_value";
  *(void *)(v6 + 8) = 22;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "asserter";
  *(void *)(v10 + 8) = 8;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "body_sites";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "category";
  *((void *)v14 + 1) = 8;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "clinical_status";
  *((void *)v16 + 1) = 15;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  char v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)char v18 = "condition";
  *((void *)v18 + 1) = 9;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "onset_string_value";
  *((void *)v20 + 1) = 18;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "recorded_date";
  *((void *)v22 + 1) = 13;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "severity";
  *(void *)(v23 + 8) = 8;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v5 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)uint64_t v25 = "verification_status";
  *((void *)v25 + 1) = 19;
  v25[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBHKConditionRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D048, (uint64_t)qword_268540310, a1);
}

uint64_t sub_22D1785A4(uint64_t a1)
{
  return sub_22D17B984(a1, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(void))sub_22D1785D8, &qword_268540328);
}

char *sub_22D1785D8()
{
  *((void *)v0 + 2) = 0;
  *((void *)v0 + 3) = 0xE000000000000000;
  *((void *)v0 + 4) = 0;
  *((void *)v0 + 5) = 0xE000000000000000;
  *((void *)v0 + 6) = MEMORY[0x263F8EE78];
  uint64_t v1 = &v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category];
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  uint64_t v3 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(&v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus], 1, 1, v2);
  v3(&v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition], 1, 1, v2);
  unint64_t v4 = &v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue];
  *(void *)unint64_t v4 = 0;
  *((void *)v4 + 1) = 0xE000000000000000;
  unint64_t v5 = &v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate];
  *(void *)unint64_t v5 = 0;
  *((void *)v5 + 1) = 0xE000000000000000;
  v3(&v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity], 1, 1, v2);
  v3(&v0[OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus], 1, 1, v2);
  return v0;
}

void *sub_22D178720(void *a1)
{
  uint64_t v2 = v1;
  char v43 = type metadata accessor for PBHKConcept;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v41 = (uint64_t)&v40 - v5;
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = 0;
  v1[5] = 0xE000000000000000;
  v1[6] = MEMORY[0x263F8EE78];
  unint64_t v6 = (char *)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  uint64_t v40 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v8)(v6, 1, 1, v7);
  uint64_t v42 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  v8();
  uint64_t v44 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  v8();
  uint64_t v9 = (void *)((char *)v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
  uint64_t v45 = v9;
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  unint64_t v10 = (void *)((char *)v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  uint64_t v46 = v10;
  *unint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  unint64_t v47 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  v8();
  uint64_t v48 = (char *)v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  v8();
  swift_beginAccess();
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  swift_beginAccess();
  v1[2] = v11;
  v1[3] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v14 = a1[4];
  uint64_t v13 = a1[5];
  swift_beginAccess();
  v2[4] = v14;
  v2[5] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v15 = a1[6];
  swift_beginAccess();
  v2[6] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (char *)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  uint64_t v17 = (uint64_t)v16;
  uint64_t v18 = v41;
  uint64_t v19 = v43;
  sub_22D1B9E60(v17, v41, (unint64_t *)&qword_26853E848, v43);
  uint64_t v20 = (uint64_t)v40;
  swift_beginAccess();
  uint64_t v21 = v19;
  sub_22D1B9D9C(v18, v20, (unint64_t *)&qword_26853E848, v19);
  swift_endAccess();
  uint64_t v22 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  sub_22D1B9E60(v22, v18, (unint64_t *)&qword_26853E848, v21);
  uint64_t v23 = (uint64_t)v42;
  swift_beginAccess();
  sub_22D1B9D9C(v18, v23, (unint64_t *)&qword_26853E848, v21);
  swift_endAccess();
  uint64_t v24 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  sub_22D1B9E60(v24, v18, (unint64_t *)&qword_26853E848, v21);
  uint64_t v25 = (uint64_t)v44;
  swift_beginAccess();
  sub_22D1B9D9C(v18, v25, (unint64_t *)&qword_26853E848, v21);
  swift_endAccess();
  uint64_t v26 = (void *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
  swift_beginAccess();
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  uint64_t v29 = v45;
  swift_beginAccess();
  void *v29 = v28;
  v29[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
  swift_beginAccess();
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  uint64_t v33 = v46;
  swift_beginAccess();
  *uint64_t v33 = v32;
  v33[1] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
  swift_beginAccess();
  uint64_t v35 = v21;
  sub_22D1B9E60(v34, v18, (unint64_t *)&qword_26853E848, v21);
  uint64_t v36 = (uint64_t)v47;
  swift_beginAccess();
  sub_22D1B9D9C(v18, v36, (unint64_t *)&qword_26853E848, v35);
  swift_endAccess();
  uint64_t v37 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
  swift_beginAccess();
  sub_22D1B9E60(v37, v18, (unint64_t *)&qword_26853E848, v35);
  swift_release();
  uint64_t v38 = (uint64_t)v48;
  swift_beginAccess();
  sub_22D1B9D9C(v18, v38, (unint64_t *)&qword_26853E848, v35);
  swift_endAccess();
  return v2;
}

uint64_t sub_22D178CE0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v0;
}

uint64_t sub_22D178DDC()
{
  return sub_22D1AF83C(sub_22D178CE0);
}

uint64_t PBHKConditionRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKConditionRecord, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D178720, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D178E5C);
}

uint64_t sub_22D178E5C()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 4:
        case 5:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 6:
        case 9:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC1A0();
          goto LABEL_13;
        case 7:
        case 8:
          swift_beginAccess();
          sub_22D2BC170();
LABEL_13:
          swift_endAccess();
          break;
        case 10:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC1A0();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKConditionRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKConditionRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D179330);
}

uint64_t sub_22D179330(void *a1)
{
  uint64_t v2 = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v63 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v64 = (uint64_t)&v60 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v67 = (uint64_t)&v60 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v60 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v60 - v14;
  uint64_t v68 = type metadata accessor for PBHKConcept(0);
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v68);
  uint64_t v61 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v62 = (uint64_t)&v60 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v65 = (uint64_t)&v60 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v66 = (uint64_t)&v60 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v60 - v24;
  swift_beginAccess();
  unint64_t v26 = a1[3];
  uint64_t v27 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v27 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  if (v27)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v28 = a1[5];
  uint64_t v29 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0) {
    uint64_t v29 = a1[4] & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (!v1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  swift_beginAccess();
  if (*(void *)(a1[6] + 16))
  {
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_bridgeObjectRetain();
    sub_22D2BC2D0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v31, (uint64_t)v15, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  v69 += 48;
  uint64_t v60 = v32;
  if (v32(v15, 1, v68) == 1)
  {
    sub_22D1D08A0((uint64_t)v15, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v15, (uint64_t)v25, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750((uint64_t)v25, type metadata accessor for PBHKConcept);
    if (v1) {
      return result;
    }
  }
  uint64_t v33 = (char *)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
  swift_beginAccess();
  uint64_t v34 = (uint64_t)v33;
  uint64_t v35 = v68;
  sub_22D1B9E60(v34, (uint64_t)v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v60(v13, 1, v35) == 1)
  {
    sub_22D1D08A0((uint64_t)v13, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    uint64_t v36 = v66;
    sub_22D1D06E8((uint64_t)v13, v66, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750(v36, type metadata accessor for PBHKConcept);
    if (v1) {
      return result;
    }
  }
  uint64_t v37 = (char *)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
  swift_beginAccess();
  uint64_t v38 = (uint64_t)v37;
  uint64_t v39 = v67;
  sub_22D1B9E60(v38, v67, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v60((char *)v39, 1, v35) == 1)
  {
    sub_22D1D08A0(v39, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    uint64_t v40 = v39;
    uint64_t v41 = v65;
    sub_22D1D06E8(v40, v65, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750(v41, type metadata accessor for PBHKConcept);
    if (v1) {
      return result;
    }
  }
  uint64_t v42 = (void *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
  swift_beginAccess();
  uint64_t v43 = *v42;
  unint64_t v44 = v42[1];
  uint64_t v45 = HIBYTE(v44) & 0xF;
  if ((v44 & 0x2000000000000000) == 0) {
    uint64_t v45 = v43 & 0xFFFFFFFFFFFFLL;
  }
  if (!v45 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    uint64_t v46 = (void *)((char *)a1
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
    swift_beginAccess();
    uint64_t v47 = *v46;
    unint64_t v48 = v46[1];
    uint64_t v49 = HIBYTE(v48) & 0xF;
    if ((v48 & 0x2000000000000000) == 0) {
      uint64_t v49 = v47 & 0xFFFFFFFFFFFFLL;
    }
    if (!v49 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      uint64_t v50 = (char *)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
      swift_beginAccess();
      uint64_t v51 = (uint64_t)v50;
      uint64_t v52 = v64;
      sub_22D1B9E60(v51, v64, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if (v60((char *)v52, 1, v35) == 1)
      {
        sub_22D1D08A0(v52, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      }
      else
      {
        uint64_t v53 = v52;
        uint64_t v54 = v62;
        sub_22D1D06E8(v53, v62, type metadata accessor for PBHKConcept);
        sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
        sub_22D2BC2E0();
        uint64_t result = sub_22D1B9750(v54, type metadata accessor for PBHKConcept);
        if (v2) {
          return result;
        }
      }
      uint64_t v55 = (char *)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
      swift_beginAccess();
      uint64_t v56 = (uint64_t)v55;
      uint64_t v57 = v63;
      sub_22D1B9E60(v56, v63, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if (v60((char *)v57, 1, v35) == 1)
      {
        return sub_22D1D08A0(v57, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      }
      else
      {
        uint64_t v58 = v57;
        uint64_t v59 = v61;
        sub_22D1D06E8(v58, v61, type metadata accessor for PBHKConcept);
        sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
        sub_22D2BC2E0();
        return sub_22D1B9750(v59, type metadata accessor for PBHKConcept);
      }
    }
  }
  return result;
}

BOOL sub_22D179E44(void *a1, void *a2)
{
  uint64_t v129 = type metadata accessor for PBHKConcept(0);
  uint64_t v131 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v5 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v130 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v121 = (uint64_t)&v115 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v124 = (uint64_t)&v115 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v127 = (uint64_t)&v115 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v115 - v16;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v118 = (uint64_t)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v120 = (uint64_t)&v115 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v119 = (uint64_t)&v115 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v122 = (uint64_t)&v115 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v123 = (uint64_t)&v115 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v126 = (uint64_t)&v115 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v125 = (uint64_t)&v115 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v128 = (uint64_t)&v115 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v115 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v115 - v38;
  swift_beginAccess();
  uint64_t v41 = a1[2];
  uint64_t v40 = a1[3];
  swift_beginAccess();
  if (v41 == a2[2] && v40 == a2[3] || (v42 = sub_22D2BD660(), BOOL result = 0, (v42 & 1) != 0))
  {
    if ((swift_beginAccess(), uint64_t v44 = a1[4], v45 = a1[5], swift_beginAccess(), v44 == a2[4]) && v45 == a2[5]
      || (v46 = sub_22D2BD660(), BOOL result = 0, (v46 & 1) != 0))
    {
      uint64_t v117 = v5;
      swift_beginAccess();
      uint64_t v47 = a1[6];
      swift_beginAccess();
      uint64_t v48 = a2[6];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v49 = sub_22D113350(v47, v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v49 & 1) == 0) {
        goto LABEL_30;
      }
      uint64_t v115 = v9;
      uint64_t v50 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
      swift_beginAccess();
      sub_22D1B9E60(v50, (uint64_t)v39, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      uint64_t v51 = (uint64_t)a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
      swift_beginAccess();
      uint64_t v52 = (uint64_t)&v17[*(int *)(v130 + 48)];
      sub_22D1B9E60((uint64_t)v39, (uint64_t)v17, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      sub_22D1B9E60(v51, v52, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      uint64_t v53 = v131 + 48;
      uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
      uint64_t v55 = v129;
      unsigned int v56 = v54(v17, 1, v129);
      uint64_t v131 = v53;
      uint64_t v116 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v54;
      if (v56 == 1)
      {
        sub_22D1D08A0((uint64_t)v39, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        if (v54((char *)v52, 1, v55) == 1)
        {
          sub_22D1D08A0((uint64_t)v17, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_15:
          uint64_t v61 = (uint64_t)a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
          swift_beginAccess();
          uint64_t v62 = v55;
          uint64_t v63 = v128;
          sub_22D1B9E60(v61, v128, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          uint64_t v64 = (char *)a2
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__clinicalStatus;
          swift_beginAccess();
          uint64_t v65 = v127;
          uint64_t v66 = v127 + *(int *)(v130 + 48);
          sub_22D1B9E60(v63, v127, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          uint64_t v67 = (uint64_t)v64;
          uint64_t v68 = v65;
          sub_22D1B9E60(v67, v66, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          uint64_t v69 = v65;
          uint64_t v70 = v116;
          if (v116(v69, 1, v62) == 1)
          {
            sub_22D1D08A0(v63, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            if (v70(v66, 1, v62) == 1)
            {
              uint64_t v71 = v62;
              sub_22D1D08A0(v68, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_22:
              uint64_t v77 = (uint64_t)a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
              swift_beginAccess();
              uint64_t v78 = v126;
              sub_22D1B9E60(v77, v126, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              uint64_t v79 = (uint64_t)a2
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__condition;
              swift_beginAccess();
              uint64_t v80 = v124;
              uint64_t v81 = v124 + *(int *)(v130 + 48);
              sub_22D1B9E60(v78, v124, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              sub_22D1B9E60(v79, v81, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              uint64_t v82 = v116;
              if (v116(v80, 1, v71) == 1)
              {
                sub_22D1D08A0(v78, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                if (v82(v81, 1, v71) != 1)
                {
LABEL_28:
                  uint64_t v59 = v80;
                  goto LABEL_29;
                }
                sub_22D1D08A0(v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              }
              else
              {
                uint64_t v83 = v123;
                sub_22D1B9E60(v80, v123, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                unsigned int v84 = v82(v81, 1, v71);
                uint64_t v85 = (uint64_t)v117;
                if (v84 == 1)
                {
                  uint64_t v86 = v126;
LABEL_27:
                  sub_22D1D08A0(v86, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  sub_22D1B9750(v83, type metadata accessor for PBHKConcept);
                  goto LABEL_28;
                }
                sub_22D1D06E8(v81, (uint64_t)v117, type metadata accessor for PBHKConcept);
                char v87 = sub_22D1B8590(v83, v85, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
                sub_22D1B9750(v85, type metadata accessor for PBHKConcept);
                sub_22D1D08A0(v126, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                sub_22D1B9750(v83, type metadata accessor for PBHKConcept);
                sub_22D1D08A0(v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                if ((v87 & 1) == 0) {
                  goto LABEL_30;
                }
              }
              uint64_t v88 = (void *)((char *)a1
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
              swift_beginAccess();
              uint64_t v89 = *v88;
              uint64_t v90 = v88[1];
              uint64_t v91 = (void *)((char *)a2
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
              swift_beginAccess();
              if ((v89 != *v91 || v90 != v91[1]) && (sub_22D2BD660() & 1) == 0) {
                goto LABEL_30;
              }
              uint64_t v92 = (void *)((char *)a1
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
              swift_beginAccess();
              uint64_t v93 = *v92;
              uint64_t v94 = v92[1];
              uint64_t v95 = (void *)((char *)a2
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
              swift_beginAccess();
              if ((v93 != *v95 || v94 != v95[1]) && (sub_22D2BD660() & 1) == 0) {
                goto LABEL_30;
              }
              uint64_t v96 = (uint64_t)a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
              swift_beginAccess();
              uint64_t v97 = v122;
              sub_22D1B9E60(v96, v122, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              uint64_t v98 = (uint64_t)a2
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__severity;
              swift_beginAccess();
              uint64_t v80 = v121;
              uint64_t v99 = v121 + *(int *)(v130 + 48);
              sub_22D1B9E60(v97, v121, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              sub_22D1B9E60(v98, v99, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              uint64_t v100 = v116;
              if (v116(v80, 1, v71) == 1)
              {
                sub_22D1D08A0(v97, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                if (v100(v99, 1, v71) == 1)
                {
                  sub_22D1D08A0(v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_46:
                  uint64_t v105 = (char *)a1
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
                  swift_beginAccess();
                  uint64_t v106 = (uint64_t)v105;
                  uint64_t v107 = v120;
                  sub_22D1B9E60(v106, v120, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  uint64_t v108 = (uint64_t)a2
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__verificationStatus;
                  swift_beginAccess();
                  uint64_t v109 = (uint64_t)v115;
                  uint64_t v110 = (uint64_t)&v115[*(int *)(v130 + 48)];
                  sub_22D1B9E60(v107, (uint64_t)v115, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  sub_22D1B9E60(v108, v110, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  uint64_t v111 = v116;
                  if (v116(v109, 1, v71) == 1)
                  {
                    swift_release();
                    swift_release();
                    sub_22D1D08A0(v107, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                    if (v111(v110, 1, v71) == 1)
                    {
                      sub_22D1D08A0(v109, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                      return 1;
                    }
                  }
                  else
                  {
                    uint64_t v112 = v118;
                    sub_22D1B9E60(v109, v118, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                    if (v111(v110, 1, v71) != 1)
                    {
                      uint64_t v113 = (uint64_t)v117;
                      sub_22D1D06E8(v110, (uint64_t)v117, type metadata accessor for PBHKConcept);
                      char v114 = sub_22D1B8590(v112, v113, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
                      swift_release();
                      swift_release();
                      sub_22D1B9750(v113, type metadata accessor for PBHKConcept);
                      sub_22D1D08A0(v120, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                      sub_22D1B9750(v112, type metadata accessor for PBHKConcept);
                      sub_22D1D08A0(v109, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                      return (v114 & 1) != 0;
                    }
                    swift_release();
                    swift_release();
                    sub_22D1D08A0(v120, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                    sub_22D1B9750(v112, type metadata accessor for PBHKConcept);
                  }
                  sub_22D1D05E4(v109, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  return 0;
                }
                goto LABEL_28;
              }
              uint64_t v101 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v100;
              uint64_t v83 = v119;
              sub_22D1B9E60(v80, v119, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              int v102 = v101(v99, 1, v71);
              uint64_t v103 = (uint64_t)v117;
              if (v102 == 1)
              {
                uint64_t v86 = v122;
                goto LABEL_27;
              }
              sub_22D1D06E8(v99, (uint64_t)v117, type metadata accessor for PBHKConcept);
              char v104 = sub_22D1B8590(v83, v103, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
              sub_22D1B9750(v103, type metadata accessor for PBHKConcept);
              sub_22D1D08A0(v122, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              sub_22D1B9750(v83, type metadata accessor for PBHKConcept);
              sub_22D1D08A0(v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              if (v104) {
                goto LABEL_46;
              }
LABEL_30:
              swift_release();
              swift_release();
              return 0;
            }
          }
          else
          {
            uint64_t v72 = v125;
            sub_22D1B9E60(v68, v125, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            unsigned int v73 = v70(v66, 1, v62);
            uint64_t v74 = (uint64_t)v117;
            if (v73 != 1)
            {
              sub_22D1D06E8(v66, (uint64_t)v117, type metadata accessor for PBHKConcept);
              uint64_t v75 = v68;
              char v76 = sub_22D1B8590(v72, v74, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
              sub_22D1B9750(v74, type metadata accessor for PBHKConcept);
              sub_22D1D08A0(v128, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              sub_22D1B9750(v72, type metadata accessor for PBHKConcept);
              sub_22D1D08A0(v75, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              uint64_t v71 = v62;
              if ((v76 & 1) == 0) {
                goto LABEL_30;
              }
              goto LABEL_22;
            }
            sub_22D1D08A0(v128, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            sub_22D1B9750(v72, type metadata accessor for PBHKConcept);
          }
          uint64_t v59 = v68;
LABEL_29:
          sub_22D1D05E4(v59, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          goto LABEL_30;
        }
      }
      else
      {
        sub_22D1B9E60((uint64_t)v17, (uint64_t)v37, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        unsigned int v57 = v54((char *)v52, 1, v55);
        uint64_t v58 = (uint64_t)v117;
        if (v57 != 1)
        {
          sub_22D1D06E8(v52, (uint64_t)v117, type metadata accessor for PBHKConcept);
          char v60 = sub_22D1B8590((uint64_t)v37, v58, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
          sub_22D1B9750(v58, type metadata accessor for PBHKConcept);
          sub_22D1D08A0((uint64_t)v39, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          sub_22D1B9750((uint64_t)v37, type metadata accessor for PBHKConcept);
          uint64_t v55 = v129;
          sub_22D1D08A0((uint64_t)v17, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          if ((v60 & 1) == 0) {
            goto LABEL_30;
          }
          goto LABEL_15;
        }
        sub_22D1D08A0((uint64_t)v39, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        sub_22D1B9750((uint64_t)v37, type metadata accessor for PBHKConcept);
      }
      uint64_t v59 = (uint64_t)v17;
      goto LABEL_29;
    }
  }
  return result;
}

uint64_t PBHKConditionRecord.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKConditionRecord, &qword_268540ED8, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
}

uint64_t sub_22D17B1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D050, &qword_268540328, a2);
}

unint64_t sub_22D17B204()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D17B220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKConditionRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D17B238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKConditionRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D17B250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E60, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D17B2CC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D048, (uint64_t)qword_268540310, a1);
}

uint64_t sub_22D17B2F0(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685413D0, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D17B35C()
{
  sub_22D1B9F34(&qword_2685413D0, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
  return sub_22D2BC200();
}

uint64_t sub_22D17B3D8(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKConditionRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D179E44) & 1;
}

unint64_t static PBHKVaccinationRecord.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D17B438()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540330);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540330);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_22D2C79E0;
  unint64_t v5 = v35 + v4;
  unint64_t v6 = v35 + v4 + *(int *)(v2 + 56);
  *(void *)(v35 + v4) = 1;
  *(void *)unint64_t v6 = "administration_date";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v35 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "body_site";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v35 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "dose_number";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v35 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "dose_quantity";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v35 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "expiration_date";
  *((void *)v16 + 1) = 15;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v35 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "not_given";
  *((void *)v18 + 1) = 9;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v35 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "patient_reported";
  *((void *)v20 + 1) = 16;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v35 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "performer";
  *((void *)v22 + 1) = 9;
  v22[16] = 2;
  v9();
  uint64_t v23 = v35 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "reaction";
  *(void *)(v23 + 8) = 8;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v35 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)uint64_t v25 = "reasons";
  *((void *)v25 + 1) = 7;
  v25[16] = 2;
  v9();
  uint64_t v26 = (void *)(v35 + v4 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 11;
  *(void *)uint64_t v27 = "reasons_not_given";
  *((void *)v27 + 1) = 17;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v35 + v4 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 12;
  *(void *)uint64_t v29 = "route";
  *((void *)v29 + 1) = 5;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v35 + v4 + 12 * v3);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 13;
  *(void *)uint64_t v31 = "status";
  *((void *)v31 + 1) = 6;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v35 + v4 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 14;
  *(void *)uint64_t v33 = "vaccination";
  *((void *)v33 + 1) = 11;
  v33[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBHKVaccinationRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D058, (uint64_t)qword_268540330, a1);
}

uint64_t sub_22D17B950(uint64_t a1)
{
  return sub_22D17B984(a1, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17B9D8, &qword_268540348);
}

uint64_t sub_22D17B984(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_22D17B9D8()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  unint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  *unint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  unint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  *unint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported) = 0;
  uint64_t v7 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  uint64_t v8 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons) = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven) = v9;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route, 1, 1, v2);
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination, 1, 1, v2);
  return v0;
}

uint64_t sub_22D17BB54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v61 = type metadata accessor for PBHKConcept;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v72 = (uint64_t)&v59 - v5;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  uint64_t v60 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(v6, 1, 1, v7);
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  unint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  *unint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  uint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  uint64_t v62 = v11;
  *uint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  uint64_t v63 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
  *uint64_t v63 = 0;
  uint64_t v64 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
  *uint64_t v64 = 0;
  uint64_t v12 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
  uint64_t v65 = v12;
  *uint64_t v12 = 0;
  v12[1] = 0xE000000000000000;
  uint64_t v13 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
  uint64_t v66 = v13;
  *uint64_t v13 = 0;
  v13[1] = 0xE000000000000000;
  uint64_t v67 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
  uint64_t v14 = MEMORY[0x263F8EE78];
  *uint64_t v67 = MEMORY[0x263F8EE78];
  uint64_t v15 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
  *uint64_t v15 = v14;
  uint64_t v68 = v15;
  uint64_t v69 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  v8();
  uint64_t v70 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v8();
  uint64_t v71 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  v8();
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v17;
  *(void *)(v1 + 24) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  uint64_t v19 = v18;
  uint64_t v20 = v72;
  uint64_t v21 = v61;
  sub_22D1B9E60(v19, v72, (unint64_t *)&qword_26853E848, v61);
  uint64_t v22 = v60;
  swift_beginAccess();
  sub_22D1B9D9C(v20, v22, (unint64_t *)&qword_26853E848, v21);
  swift_endAccess();
  uint64_t v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  swift_beginAccess();
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  swift_beginAccess();
  void *v9 = v25;
  v9[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  swift_beginAccess();
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  swift_beginAccess();
  *unint64_t v10 = v28;
  v10[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  swift_beginAccess();
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  uint64_t v32 = v62;
  swift_beginAccess();
  void *v32 = v31;
  v32[1] = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
  swift_beginAccess();
  LOBYTE(v33) = *v33;
  uint64_t v34 = v63;
  swift_beginAccess();
  unsigned char *v34 = (_BYTE)v33;
  uint64_t v35 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
  swift_beginAccess();
  LOBYTE(v35) = *v35;
  uint64_t v36 = v64;
  swift_beginAccess();
  *uint64_t v36 = (_BYTE)v35;
  uint64_t v37 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
  swift_beginAccess();
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  uint64_t v40 = v65;
  swift_beginAccess();
  *uint64_t v40 = v39;
  v40[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
  swift_beginAccess();
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  uint64_t v44 = v66;
  swift_beginAccess();
  *uint64_t v44 = v43;
  v44[1] = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
  swift_beginAccess();
  uint64_t v46 = *v45;
  uint64_t v47 = v67;
  swift_beginAccess();
  *uint64_t v47 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
  swift_beginAccess();
  uint64_t v49 = *v48;
  uint64_t v50 = v68;
  swift_beginAccess();
  *uint64_t v50 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
  swift_beginAccess();
  uint64_t v52 = v72;
  sub_22D1B9E60(v51, v72, (unint64_t *)&qword_26853E848, v21);
  uint64_t v53 = v69;
  swift_beginAccess();
  sub_22D1B9D9C(v52, v53, (unint64_t *)&qword_26853E848, v21);
  swift_endAccess();
  uint64_t v54 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v54, v52, (unint64_t *)&qword_26853E848, v21);
  uint64_t v55 = v70;
  swift_beginAccess();
  sub_22D1B9D9C(v52, v55, (unint64_t *)&qword_26853E848, v21);
  swift_endAccess();
  uint64_t v56 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  sub_22D1B9E60(v56, v52, (unint64_t *)&qword_26853E848, v21);
  swift_release();
  uint64_t v57 = v71;
  swift_beginAccess();
  sub_22D1B9D9C(v52, v57, (unint64_t *)&qword_26853E848, v21);
  swift_endAccess();
  return v2;
}

uint64_t sub_22D17C270()
{
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v0;
}

uint64_t sub_22D17C3A0()
{
  return sub_22D1AF83C(sub_22D17C270);
}

uint64_t PBHKVaccinationRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D17C420);
}

uint64_t sub_22D17C420()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 6:
        case 7:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC0B0();
          goto LABEL_5;
        case 8:
        case 9:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 10:
        case 11:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 12:
        case 13:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 14:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC1A0();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKVaccinationRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKVaccinationRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D17C9A8);
}

uint64_t sub_22D17C9A8(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v69 = (uint64_t)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v72 = (char *)v66 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v71 = (char *)v66 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v66 - v11;
  uint64_t v73 = type metadata accessor for PBHKConcept(0);
  uint64_t v13 = *(void *)(v73 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v73);
  uint64_t v67 = (uint64_t)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v68 = (uint64_t)v66 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v70 = (uint64_t)v66 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v66 - v20;
  swift_beginAccess();
  uint64_t v74 = a1;
  uint64_t v22 = *(void *)(a1 + 16);
  unint64_t v23 = *(void *)(a1 + 24);
  uint64_t v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v24 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (v24)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v2) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = v74
      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v26, (uint64_t)v12, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  v66[0] = *(void *)(v13 + 48);
  v66[1] = v13 + 48;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v66[0])(v12, 1, v73) == 1)
  {
    sub_22D1D08A0((uint64_t)v12, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v27 = v74;
    uint64_t v28 = v2;
  }
  else
  {
    sub_22D1D06E8((uint64_t)v12, (uint64_t)v21, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    uint64_t v28 = v2;
    if (v2) {
      return sub_22D1B9750((uint64_t)v21, type metadata accessor for PBHKConcept);
    }
    sub_22D1B9750((uint64_t)v21, type metadata accessor for PBHKConcept);
    uint64_t v27 = v74;
  }
  uint64_t v30 = (uint64_t)v71;
  uint64_t v29 = (uint64_t)v72;
  uint64_t v31 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
  swift_beginAccess();
  uint64_t v32 = *v31;
  unint64_t v33 = v31[1];
  uint64_t v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0) {
    uint64_t v34 = v32 & 0xFFFFFFFFFFFFLL;
  }
  if (v34)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v28) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
  swift_beginAccess();
  uint64_t v36 = *v35;
  unint64_t v37 = v35[1];
  uint64_t v38 = HIBYTE(v37) & 0xF;
  if ((v37 & 0x2000000000000000) == 0) {
    uint64_t v38 = v36 & 0xFFFFFFFFFFFFLL;
  }
  if (v38)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (!v28)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_22:
  uint64_t v39 = (uint64_t *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
  swift_beginAccess();
  uint64_t v40 = *v39;
  unint64_t v41 = v39[1];
  uint64_t v42 = HIBYTE(v41) & 0xF;
  if ((v41 & 0x2000000000000000) == 0) {
    uint64_t v42 = v40 & 0xFFFFFFFFFFFFLL;
  }
  if (v42)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v28) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = (unsigned char *)(v27
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
  swift_beginAccess();
  if (*v43 != 1 || (uint64_t result = sub_22D2BC230(), !v28))
  {
    uint64_t v44 = (unsigned char *)(v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
    swift_beginAccess();
    if (*v44 != 1 || (uint64_t result = sub_22D2BC230(), !v28))
    {
      uint64_t v45 = (uint64_t *)(v27
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
      swift_beginAccess();
      uint64_t v46 = *v45;
      unint64_t v47 = v45[1];
      uint64_t v48 = HIBYTE(v47) & 0xF;
      if ((v47 & 0x2000000000000000) == 0) {
        uint64_t v48 = v46 & 0xFFFFFFFFFFFFLL;
      }
      if (!v48 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v28))
      {
        uint64_t v49 = (uint64_t *)(v27
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
        swift_beginAccess();
        uint64_t v50 = *v49;
        unint64_t v51 = v49[1];
        uint64_t v52 = HIBYTE(v51) & 0xF;
        if ((v51 & 0x2000000000000000) == 0) {
          uint64_t v52 = v50 & 0xFFFFFFFFFFFFLL;
        }
        if (!v52 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v28))
        {
          uint64_t v53 = v27
              + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons;
          swift_beginAccess();
          if (!*(void *)(*(void *)v53 + 16)
            || (sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept),
                swift_bridgeObjectRetain(),
                sub_22D2BC2D0(),
                uint64_t result = swift_bridgeObjectRelease(),
                !v28))
          {
            uint64_t v54 = v27
                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven;
            swift_beginAccess();
            if (!*(void *)(*(void *)v54 + 16)
              || (sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept),
                  swift_bridgeObjectRetain(),
                  sub_22D2BC2D0(),
                  uint64_t result = swift_bridgeObjectRelease(),
                  !v28))
            {
              uint64_t v55 = v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
              swift_beginAccess();
              sub_22D1B9E60(v55, v30, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v66[0])(v30, 1, v73) == 1)
              {
                sub_22D1D08A0(v30, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              }
              else
              {
                uint64_t v56 = v30;
                uint64_t v57 = v70;
                sub_22D1D06E8(v56, v70, type metadata accessor for PBHKConcept);
                sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
                sub_22D2BC2E0();
                uint64_t result = sub_22D1B9750(v57, type metadata accessor for PBHKConcept);
                if (v28) {
                  return result;
                }
              }
              uint64_t v58 = v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
              swift_beginAccess();
              sub_22D1B9E60(v58, v29, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v66[0])(v29, 1, v73) == 1)
              {
                sub_22D1D08A0(v29, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              }
              else
              {
                uint64_t v59 = v29;
                uint64_t v60 = v68;
                sub_22D1D06E8(v59, v68, type metadata accessor for PBHKConcept);
                sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
                sub_22D2BC2E0();
                uint64_t result = sub_22D1B9750(v60, type metadata accessor for PBHKConcept);
                if (v28) {
                  return result;
                }
              }
              uint64_t v61 = v27
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
              swift_beginAccess();
              uint64_t v62 = v61;
              uint64_t v63 = v69;
              sub_22D1B9E60(v62, v69, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v66[0])(v63, 1, v73) == 1)
              {
                return sub_22D1D08A0(v63, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              }
              else
              {
                uint64_t v64 = v63;
                uint64_t v65 = v67;
                sub_22D1D06E8(v64, v67, type metadata accessor for PBHKConcept);
                sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
                sub_22D2BC2E0();
                return sub_22D1B9750(v65, type metadata accessor for PBHKConcept);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_22D17D540(uint64_t a1, uint64_t a2)
{
  uint64_t v140 = type metadata accessor for PBHKConcept(0);
  uint64_t v142 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140);
  uint64_t v137 = (uint64_t)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v139 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v132 = (uint64_t)&v126 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v135 = (uint64_t)&v126 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v126 - v13;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v126 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v131 = (uint64_t)&v126 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v134 = (uint64_t)&v126 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v133 = (uint64_t)&v126 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v136 = (uint64_t)&v126 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v138 = (uint64_t)&v126 - v31;
  MEMORY[0x270FA5388](v30);
  unint64_t v33 = (char *)&v126 - v32;
  swift_beginAccess();
  uint64_t v34 = *(void *)(a1 + 16);
  uint64_t v35 = *(void *)(a1 + 24);
  uint64_t v141 = a1;
  swift_beginAccess();
  if (v34 == *(void *)(a2 + 16) && v35 == *(void *)(a2 + 24)
    || (v36 = sub_22D2BD660(), BOOL result = 0, (v36 & 1) != 0))
  {
    uint64_t v129 = v8;
    uint64_t v130 = v21;
    uint64_t v128 = v18;
    uint64_t v38 = v141;
    uint64_t v39 = v141
        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
    swift_beginAccess();
    sub_22D1B9E60(v39, (uint64_t)v33, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v40 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
    swift_beginAccess();
    uint64_t v41 = (uint64_t)&v14[*(int *)(v139 + 48)];
    sub_22D1B9E60((uint64_t)v33, (uint64_t)v14, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9E60(v40, v41, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v42 = v142 + 48;
    uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
    uint64_t v44 = v140;
    if (v43((uint64_t)v14, 1, v140) == 1)
    {
      swift_retain();
      swift_retain();
      sub_22D1D08A0((uint64_t)v33, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      unsigned int v45 = v43(v41, 1, v44);
      uint64_t v46 = a2;
      uint64_t v47 = v38;
      if (v45 == 1)
      {
        uint64_t v127 = v43;
        uint64_t v142 = v42;
        sub_22D1D08A0((uint64_t)v14, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v48 = v138;
      sub_22D1B9E60((uint64_t)v14, v138, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if (v43(v41, 1, v44) != 1)
      {
        uint64_t v127 = v43;
        uint64_t v142 = v42;
        uint64_t v50 = v41;
        uint64_t v51 = v137;
        sub_22D1D06E8(v50, v137, type metadata accessor for PBHKConcept);
        uint64_t v52 = v141;
        swift_retain();
        swift_retain();
        char v53 = sub_22D1B8590(v48, v51, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
        sub_22D1B9750(v51, type metadata accessor for PBHKConcept);
        sub_22D1D08A0((uint64_t)v33, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        sub_22D1B9750(v48, type metadata accessor for PBHKConcept);
        uint64_t v44 = v140;
        uint64_t v46 = a2;
        uint64_t v47 = v52;
        sub_22D1D08A0((uint64_t)v14, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        if ((v53 & 1) == 0) {
          goto LABEL_11;
        }
LABEL_15:
        uint64_t v54 = (uint64_t *)(v47
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
        swift_beginAccess();
        uint64_t v55 = *v54;
        uint64_t v56 = v54[1];
        uint64_t v57 = (void *)(v46
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
        swift_beginAccess();
        if ((v55 != *v57 || v56 != v57[1]) && (sub_22D2BD660() & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v58 = (uint64_t *)(v47
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
        swift_beginAccess();
        uint64_t v59 = *v58;
        uint64_t v60 = v58[1];
        uint64_t v61 = (void *)(v46
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
        swift_beginAccess();
        if ((v59 != *v61 || v60 != v61[1]) && (sub_22D2BD660() & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v62 = (uint64_t *)(v47
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
        swift_beginAccess();
        uint64_t v63 = *v62;
        uint64_t v64 = v62[1];
        uint64_t v65 = (void *)(v46
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
        swift_beginAccess();
        if ((v63 != *v65 || v64 != v65[1]) && (sub_22D2BD660() & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v66 = (unsigned __int8 *)(v47
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
        swift_beginAccess();
        int v67 = *v66;
        uint64_t v68 = (unsigned __int8 *)(v46
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
        swift_beginAccess();
        if (v67 != *v68) {
          goto LABEL_11;
        }
        uint64_t v69 = (unsigned __int8 *)(v47
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
        swift_beginAccess();
        int v70 = *v69;
        uint64_t v71 = (unsigned __int8 *)(v46
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
        swift_beginAccess();
        if (v70 != *v71) {
          goto LABEL_11;
        }
        uint64_t v72 = (uint64_t *)(v47
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
        swift_beginAccess();
        uint64_t v73 = *v72;
        uint64_t v74 = v72[1];
        uint64_t v75 = (void *)(v46
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
        swift_beginAccess();
        if ((v73 != *v75 || v74 != v75[1]) && (sub_22D2BD660() & 1) == 0) {
          goto LABEL_11;
        }
        char v76 = (uint64_t *)(v47
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
        swift_beginAccess();
        uint64_t v77 = *v76;
        uint64_t v78 = v76[1];
        uint64_t v79 = (void *)(v46
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
        swift_beginAccess();
        if ((v77 != *v79 || v78 != v79[1]) && (sub_22D2BD660() & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v80 = (uint64_t *)(v47
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
        swift_beginAccess();
        uint64_t v81 = *v80;
        uint64_t v82 = (uint64_t *)(v46
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
        swift_beginAccess();
        uint64_t v83 = *v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v84 = sub_22D113350(v81, v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v84 & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v85 = (uint64_t *)(v47
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
        swift_beginAccess();
        uint64_t v86 = *v85;
        char v87 = (uint64_t *)(v46
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
        swift_beginAccess();
        uint64_t v88 = *v87;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v89 = sub_22D113350(v86, v88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v89 & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v90 = v47
            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
        swift_beginAccess();
        uint64_t v91 = v136;
        sub_22D1B9E60(v90, v136, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        uint64_t v92 = v46
            + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
        swift_beginAccess();
        uint64_t v93 = v135;
        uint64_t v94 = v135 + *(int *)(v139 + 48);
        sub_22D1B9E60(v91, v135, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        uint64_t v95 = v93;
        sub_22D1B9E60(v92, v94, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        uint64_t v96 = v93;
        uint64_t v97 = v142;
        uint64_t v98 = v127;
        if (v127(v96, 1, v44) == 1)
        {
          sub_22D1D08A0(v91, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          unsigned int v99 = v98(v94, 1, v44);
          uint64_t v100 = v134;
          if (v99 == 1)
          {
            uint64_t v127 = v98;
            uint64_t v142 = v97;
            sub_22D1D08A0(v95, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_41:
            uint64_t v105 = v47
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
            swift_beginAccess();
            sub_22D1B9E60(v105, v100, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            uint64_t v106 = v46
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
            swift_beginAccess();
            uint64_t v107 = v100;
            uint64_t v108 = v132;
            uint64_t v109 = v132 + *(int *)(v139 + 48);
            sub_22D1B9E60(v107, v132, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            sub_22D1B9E60(v106, v109, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            uint64_t v110 = v127;
            if (v127(v108, 1, v44) == 1)
            {
              sub_22D1D08A0(v107, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              if (v110(v109, 1, v44) == 1)
              {
                uint64_t v127 = v110;
                sub_22D1D08A0(v108, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_48:
                uint64_t v114 = v47
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
                swift_beginAccess();
                uint64_t v115 = v114;
                uint64_t v116 = (uint64_t)v130;
                sub_22D1B9E60(v115, (uint64_t)v130, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                uint64_t v117 = v46
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
                swift_beginAccess();
                uint64_t v118 = (uint64_t)v129;
                uint64_t v119 = (uint64_t)&v129[*(int *)(v139 + 48)];
                sub_22D1B9E60(v116, (uint64_t)v129, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                uint64_t v141 = v119;
                sub_22D1B9E60(v117, v119, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                uint64_t v120 = v127;
                if (v127(v118, 1, v44) == 1)
                {
                  swift_release();
                  swift_release();
                  sub_22D1D08A0(v116, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  if (v120(v141, 1, v44) == 1)
                  {
                    sub_22D1D08A0(v118, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                    return 1;
                  }
                }
                else
                {
                  uint64_t v121 = (uint64_t)v128;
                  sub_22D1B9E60(v118, (uint64_t)v128, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  uint64_t v122 = v141;
                  if (v120(v141, 1, v44) != 1)
                  {
                    uint64_t v123 = v121;
                    uint64_t v124 = v137;
                    sub_22D1D06E8(v122, v137, type metadata accessor for PBHKConcept);
                    char v125 = sub_22D1B8590(v123, v124, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
                    swift_release();
                    swift_release();
                    sub_22D1B9750(v124, type metadata accessor for PBHKConcept);
                    sub_22D1D08A0((uint64_t)v130, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                    sub_22D1B9750(v123, type metadata accessor for PBHKConcept);
                    sub_22D1D08A0(v118, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                    return (v125 & 1) != 0;
                  }
                  swift_release();
                  swift_release();
                  sub_22D1D08A0((uint64_t)v130, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  sub_22D1B9750(v121, type metadata accessor for PBHKConcept);
                }
                sub_22D1D05E4(v118, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                return 0;
              }
            }
            else
            {
              uint64_t v111 = v131;
              sub_22D1B9E60(v108, v131, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              if (v110(v109, 1, v44) != 1)
              {
                uint64_t v127 = v110;
                uint64_t v112 = v137;
                sub_22D1D06E8(v109, v137, type metadata accessor for PBHKConcept);
                char v113 = sub_22D1B8590(v111, v112, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
                sub_22D1B9750(v112, type metadata accessor for PBHKConcept);
                sub_22D1D08A0(v134, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                sub_22D1B9750(v111, type metadata accessor for PBHKConcept);
                sub_22D1D08A0(v108, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                if (v113) {
                  goto LABEL_48;
                }
LABEL_11:
                swift_release();
                swift_release();
                return 0;
              }
              sub_22D1D08A0(v134, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              sub_22D1B9750(v111, type metadata accessor for PBHKConcept);
            }
            uint64_t v49 = v108;
LABEL_10:
            sub_22D1D05E4(v49, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t v101 = v133;
          sub_22D1B9E60(v95, v133, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          unsigned int v102 = v98(v94, 1, v44);
          uint64_t v100 = v134;
          if (v102 != 1)
          {
            uint64_t v127 = v98;
            uint64_t v142 = v97;
            uint64_t v103 = v137;
            sub_22D1D06E8(v94, v137, type metadata accessor for PBHKConcept);
            char v104 = sub_22D1B8590(v101, v103, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
            sub_22D1B9750(v103, type metadata accessor for PBHKConcept);
            sub_22D1D08A0(v136, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            sub_22D1B9750(v101, type metadata accessor for PBHKConcept);
            sub_22D1D08A0(v135, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            if ((v104 & 1) == 0) {
              goto LABEL_11;
            }
            goto LABEL_41;
          }
          sub_22D1D08A0(v136, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          sub_22D1B9750(v101, type metadata accessor for PBHKConcept);
        }
        uint64_t v49 = v95;
        goto LABEL_10;
      }
      swift_retain();
      swift_retain();
      sub_22D1D08A0((uint64_t)v33, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      sub_22D1B9750(v48, type metadata accessor for PBHKConcept);
    }
    uint64_t v49 = (uint64_t)v14;
    goto LABEL_10;
  }
  return result;
}

uint64_t PBHKVaccinationRecord.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKVaccinationRecord, &qword_268540EE0, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
}

uint64_t sub_22D17E868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D060, &qword_268540348, a2);
}

unint64_t sub_22D17E88C()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D17E8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKVaccinationRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D17E8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKVaccinationRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D17E8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E58, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D17E954@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D058, (uint64_t)qword_268540330, a1);
}

uint64_t sub_22D17E978(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685413E8, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D17E9E4()
{
  sub_22D1B9F34(&qword_2685413E8, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
  return sub_22D2BC200();
}

uint64_t sub_22D17EA60(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKVaccinationRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D17D540) & 1;
}

unint64_t static PBMedicationDosage.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_22D17EAC0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540350);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540350);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "instruction";
  *(void *)(v7 + 8) = 11;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "timingPeriod";
  *((void *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBMedicationDosage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D068, (uint64_t)qword_268540350, a1);
}

uint64_t sub_22D17ECC4(uint64_t a1)
{
  return sub_22D18D744(a1, (void (*)(void))type metadata accessor for PBMedicationDosage._StorageClass, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange, &qword_268540368);
}

uint64_t sub_22D17ED00(uint64_t a1)
{
  return sub_22D18D824(a1, &qword_26853D7B0, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange);
}

uint64_t sub_22D17ED3C()
{
  return sub_22D18DA10(&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, &qword_26853D7B0, type metadata accessor for PBDateRange);
}

uint64_t PBMedicationDosage.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = *(int *)(type metadata accessor for PBMedicationDosage(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationDosage._StorageClass(0);
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_22D18D824(v2, &qword_26853D7B0, type metadata accessor for PBDateRange, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod, type metadata accessor for PBDateRange);
    swift_release();
  }
  swift_retain();
  sub_22D17EE68();
  return swift_release();
}

uint64_t sub_22D17EE68()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_22D2BC170();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBDateRange(0);
    sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    uint64_t v4 = v3;
    sub_22D2BC1A0();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBMedicationDosage.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBMedicationDosage, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D17EFFC);
}

uint64_t sub_22D17EFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v19 = type metadata accessor for PBDateRange(0);
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  v18[0] = a3;
  v18[1] = a4;
  if (!v15 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    uint64_t v17 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
    swift_beginAccess();
    sub_22D1B9E60(v17, (uint64_t)v10, &qword_26853D7B0, type metadata accessor for PBDateRange);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v19) == 1)
    {
      return sub_22D1D08A0((uint64_t)v10, &qword_26853D7B0, type metadata accessor for PBDateRange);
    }
    else
    {
      sub_22D1D06E8((uint64_t)v10, (uint64_t)v13, type metadata accessor for PBDateRange);
      sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
      sub_22D2BC2E0();
      return sub_22D1B9750((uint64_t)v13, type metadata accessor for PBDateRange);
    }
  }
  return result;
}

uint64_t static PBMedicationDosage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBMedicationDosage, (uint64_t (*)(uint64_t, uint64_t))sub_22D17F310) & 1;
}

BOOL sub_22D17F310(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBDateRange(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v29 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - v9;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v28 - v15;
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v17 == *(void *)(a2 + 16) && v18 == *(void *)(a2 + 24)
    || (v19 = sub_22D2BD660(), BOOL result = 0, (v19 & 1) != 0))
  {
    uint64_t v28 = v14;
    uint64_t v21 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
    swift_beginAccess();
    sub_22D1B9E60(v21, (uint64_t)v16, &qword_26853D7B0, type metadata accessor for PBDateRange);
    uint64_t v22 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBMedicationDosageP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__timingPeriod;
    swift_beginAccess();
    uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_22D1B9E60((uint64_t)v16, (uint64_t)v10, &qword_26853D7B0, type metadata accessor for PBDateRange);
    sub_22D1B9E60(v22, v23, &qword_26853D7B0, type metadata accessor for PBDateRange);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v24((uint64_t)v10, 1, v4) == 1)
    {
      sub_22D1D08A0((uint64_t)v16, &qword_26853D7B0, type metadata accessor for PBDateRange);
      if (v24(v23, 1, v4) == 1)
      {
        sub_22D1D08A0((uint64_t)v10, &qword_26853D7B0, type metadata accessor for PBDateRange);
        return 1;
      }
    }
    else
    {
      uint64_t v25 = v28;
      sub_22D1B9E60((uint64_t)v10, (uint64_t)v28, &qword_26853D7B0, type metadata accessor for PBDateRange);
      if (v24(v23, 1, v4) != 1)
      {
        uint64_t v26 = v29;
        sub_22D1D06E8(v23, v29, type metadata accessor for PBDateRange);
        char v27 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v25, v26);
        sub_22D1B9750(v26, type metadata accessor for PBDateRange);
        sub_22D1D08A0((uint64_t)v16, &qword_26853D7B0, type metadata accessor for PBDateRange);
        sub_22D1B9750((uint64_t)v25, type metadata accessor for PBDateRange);
        sub_22D1D08A0((uint64_t)v10, &qword_26853D7B0, type metadata accessor for PBDateRange);
        return (v27 & 1) != 0;
      }
      sub_22D1D08A0((uint64_t)v16, &qword_26853D7B0, type metadata accessor for PBDateRange);
      sub_22D1B9750((uint64_t)v25, type metadata accessor for PBDateRange);
    }
    sub_22D1D05E4((uint64_t)v10, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
    return 0;
  }
  return result;
}

uint64_t PBMedicationDosage.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBMedicationDosage, &qword_268540EE8, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage);
}

uint64_t sub_22D17F808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D070, &qword_268540368, a2);
}

unint64_t sub_22D17F82C()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_22D17F848()
{
  return PBMedicationDosage.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D17F860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationDosage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D17F878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E50, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D17F8F4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D068, (uint64_t)qword_268540350, a1);
}

uint64_t sub_22D17F918(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541400, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D17F984()
{
  sub_22D1B9F34(&qword_268541400, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage);
  return sub_22D2BC200();
}

uint64_t sub_22D17FA00(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBMedicationDosage, (uint64_t (*)(uint64_t, uint64_t))sub_22D17F310) & 1;
}

unint64_t static PBQuantity.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_22D17FA60()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540370);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540370);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "value";
  *(void *)(v7 + 8) = 5;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "unitString";
  *((void *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBQuantity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D078, (uint64_t)qword_268540370, a1);
}

uint64_t PBQuantity.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_22D2BC170();
      }
      else if (result == 1)
      {
        sub_22D2BC150();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBQuantity.traverse<A>(visitor:)()
{
  if (*(double *)v0 == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
  {
    unint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v4 = *(void *)(v0 + 8) & 0xFFFFFFFFFFFFLL;
    }
    if (!v4 || (uint64_t result = sub_22D2BC2B0(), !v1))
    {
      type metadata accessor for PBQuantity(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t PBQuantity.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBQuantity, &qword_268540EF0, (void (*)(uint64_t))type metadata accessor for PBQuantity);
}

uint64_t sub_22D17FE24@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  return sub_22D2BBFE0();
}

unint64_t sub_22D17FE50()
{
  return 0xD000000000000023;
}

uint64_t sub_22D17FE6C()
{
  return PBQuantity.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D17FE84()
{
  return PBQuantity.traverse<A>(visitor:)();
}

uint64_t sub_22D17FE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E48, (void (*)(uint64_t))type metadata accessor for PBQuantity);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D17FF18@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D078, (uint64_t)qword_268540370, a1);
}

uint64_t sub_22D17FF3C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541418, (void (*)(uint64_t))type metadata accessor for PBQuantity);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D17FFA8()
{
  sub_22D1B9F34(&qword_268541418, (void (*)(uint64_t))type metadata accessor for PBQuantity);
  return sub_22D2BC200();
}

unint64_t static PBGeneralMedication.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D180044()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540388);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540388);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_22D2C79F0;
  unint64_t v5 = v20 + v4;
  unint64_t v6 = v20 + v4 + *(int *)(v2 + 56);
  *(void *)(v20 + v4) = 1;
  *(void *)unint64_t v6 = "earliest_dosage_date";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "medication";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "status";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  unint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)unint64_t v14 = "dosages";
  *((void *)v14 + 1) = 7;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "localized_preferred_name";
  *((void *)v16 + 1) = 24;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "rx_norm_code_set";
  *((void *)v18 + 1) = 16;
  v18[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBGeneralMedication._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D080, (uint64_t)qword_268540388, a1);
}

uint64_t sub_22D180354()
{
  type metadata accessor for PBGeneralMedication._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages) = MEMORY[0x263F8EE78];
  unint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
  *unint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet) = v5;
  qword_2685403A0 = v0;
  return result;
}

uint64_t sub_22D18044C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = type metadata accessor for PBHKConcept;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v28 - v5;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  uint64_t v28 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v9();
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
  *uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v12 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
  *uint64_t v12 = 0;
  v12[1] = 0xE000000000000000;
  uint64_t v30 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
  void *v30 = v10;
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v14;
  *(void *)(v1 + 24) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  uint64_t v16 = v29;
  sub_22D1B9E60(v15, (uint64_t)v6, (unint64_t *)&qword_26853E848, v29);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v6, v7, (unint64_t *)&qword_26853E848, v16);
  swift_endAccess();
  uint64_t v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v17, (uint64_t)v6, (unint64_t *)&qword_26853E848, v16);
  uint64_t v18 = v28;
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v6, v18, (unint64_t *)&qword_26853E848, v16);
  swift_endAccess();
  char v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
  swift_beginAccess();
  uint64_t v20 = *v19;
  swift_beginAccess();
  *uint64_t v11 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
  swift_beginAccess();
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  swift_beginAccess();
  *uint64_t v12 = v23;
  v12[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
  swift_beginAccess();
  uint64_t v25 = *v24;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v26 = v30;
  swift_beginAccess();
  void *v26 = v25;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_22D180800()
{
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBGeneralMedication.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBGeneralMedication, (void (*)(void))type metadata accessor for PBGeneralMedication._StorageClass, sub_22D18044C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D180954);
}

uint64_t sub_22D180954()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 2:
        case 3:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          type metadata accessor for PBMedicationDosage(0);
          sub_22D1B9F34(&qword_268541400, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage);
          uint64_t v4 = v3;
          sub_22D2BC190();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_22D2BC140();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBGeneralMedication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBGeneralMedication, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D180C9C);
}

uint64_t sub_22D180C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for PBHKConcept(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v39 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v40 = (uint64_t)&v39 - v17;
  swift_beginAccess();
  uint64_t v18 = a1;
  uint64_t v19 = *(void *)(a1 + 16);
  unint64_t v20 = *(void *)(a1 + 24);
  uint64_t v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v21 = v19 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v42 = a4;
  if (v21)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = v5;
    if (v5) {
      return result;
    }
  }
  else
  {
    uint64_t v23 = v5;
  }
  uint64_t v24 = v18
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
  swift_beginAccess();
  sub_22D1B9E60(v24, (uint64_t)v12, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    sub_22D1D08A0((uint64_t)v12, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    uint64_t v26 = (uint64_t)v12;
    uint64_t v27 = v40;
    sub_22D1D06E8(v26, v40, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750(v27, type metadata accessor for PBHKConcept);
    if (v23) {
      return result;
    }
  }
  uint64_t v28 = v18
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  uint64_t v29 = v28;
  uint64_t v30 = v41;
  sub_22D1B9E60(v29, v41, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v25((char *)v30, 1, v13) == 1)
  {
    sub_22D1D08A0(v30, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    uint64_t v31 = v30;
    uint64_t v32 = v39;
    sub_22D1D06E8(v31, v39, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750(v32, type metadata accessor for PBHKConcept);
    if (v23) {
      return result;
    }
  }
  uint64_t v33 = v18
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages;
  swift_beginAccess();
  if (!*(void *)(*(void *)v33 + 16)
    || (type metadata accessor for PBMedicationDosage(0),
        sub_22D1B9F34(&qword_268541400, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage),
        swift_bridgeObjectRetain(),
        sub_22D2BC2D0(),
        uint64_t result = swift_bridgeObjectRelease(),
        !v23))
  {
    uint64_t v34 = (uint64_t *)(v18
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
    swift_beginAccess();
    uint64_t v36 = *v34;
    unint64_t v35 = v34[1];
    uint64_t v37 = HIBYTE(v35) & 0xF;
    if ((v35 & 0x2000000000000000) == 0) {
      uint64_t v37 = v36 & 0xFFFFFFFFFFFFLL;
    }
    if (!v37 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v23))
    {
      uint64_t v38 = v18
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet;
      uint64_t result = swift_beginAccess();
      if (*(void *)(*(void *)v38 + 16))
      {
        swift_bridgeObjectRetain();
        sub_22D2BC290();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t static PBGeneralMedication.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBGeneralMedication, sub_22D1812B4) & 1;
}

uint64_t sub_22D1812B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBHKConcept(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  uint64_t v74 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v70 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v72 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v66 - v11;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v69 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v71 = (uint64_t)&v66 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v66 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v66 - v21;
  swift_beginAccess();
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v23 == *(void *)(a2 + 16) && v24 == *(void *)(a2 + 24) || (char v25 = 0, (sub_22D2BD660() & 1) != 0))
  {
    int v67 = v10;
    uint64_t v68 = v20;
    uint64_t v26 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
    swift_beginAccess();
    uint64_t v27 = a1;
    uint64_t v28 = a2;
    sub_22D1B9E60(v26, (uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v29 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medication;
    swift_beginAccess();
    uint64_t v30 = (uint64_t)&v12[*(int *)(v72 + 48)];
    sub_22D1B9E60((uint64_t)v22, (uint64_t)v12, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9E60(v29, v30, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v31 = v73;
    uint64_t v33 = v74 + 48;
    uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
    if (v32((uint64_t)v12, 1, v73) == 1)
    {
      swift_retain();
      swift_retain();
      sub_22D1D08A0((uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      unsigned int v34 = v32(v30, 1, v31);
      uint64_t v35 = v28;
      if (v34 == 1)
      {
        uint64_t v66 = v32;
        uint64_t v74 = v33;
        sub_22D1D08A0((uint64_t)v12, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        uint64_t v36 = v27;
LABEL_11:
        uint64_t v43 = v36
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
        swift_beginAccess();
        uint64_t v44 = v71;
        sub_22D1B9E60(v43, v71, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        uint64_t v45 = v35
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
        swift_beginAccess();
        uint64_t v46 = (uint64_t)v67;
        uint64_t v47 = (uint64_t)&v67[*(int *)(v72 + 48)];
        sub_22D1B9E60(v44, (uint64_t)v67, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        sub_22D1B9E60(v45, v47, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        uint64_t v48 = v73;
        uint64_t v49 = v66;
        if (v66(v46, 1, v73) == 1)
        {
          sub_22D1D08A0(v44, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          if (v49(v47, 1, v48) == 1)
          {
            sub_22D1D08A0(v46, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            goto LABEL_18;
          }
          goto LABEL_16;
        }
        uint64_t v50 = v69;
        sub_22D1B9E60(v46, v69, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        if (v49(v47, 1, v48) == 1)
        {
          sub_22D1D08A0(v44, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          sub_22D1B9750(v50, type metadata accessor for PBHKConcept);
LABEL_16:
          sub_22D1D05E4(v46, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          goto LABEL_23;
        }
        uint64_t v51 = v70;
        sub_22D1D06E8(v47, v70, type metadata accessor for PBHKConcept);
        char v52 = sub_22D1B8590(v50, v51, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
        sub_22D1B9750(v51, type metadata accessor for PBHKConcept);
        sub_22D1D08A0(v44, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        sub_22D1B9750(v50, type metadata accessor for PBHKConcept);
        sub_22D1D08A0(v46, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        if (v52)
        {
LABEL_18:
          char v53 = (uint64_t *)(v36
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
          swift_beginAccess();
          uint64_t v54 = *v53;
          uint64_t v55 = (uint64_t *)(v35
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
          swift_beginAccess();
          uint64_t v56 = *v55;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v57 = sub_22D1133A4(v54, v56);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v57)
          {
            uint64_t v58 = (uint64_t *)(v36
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
            swift_beginAccess();
            uint64_t v59 = *v58;
            uint64_t v60 = v58[1];
            uint64_t v61 = (void *)(v35
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
            swift_beginAccess();
            if (v59 == *v61 && v60 == v61[1] || (char v25 = 0, (sub_22D2BD660() & 1) != 0))
            {
              uint64_t v62 = (void **)(v36
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
              swift_beginAccess();
              uint64_t v63 = *v62;
              uint64_t v64 = (void **)(v35
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
              swift_beginAccess();
              char v25 = sub_22D10F3F8(v63, *v64);
            }
            goto LABEL_24;
          }
        }
LABEL_23:
        char v25 = 0;
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v37 = v27;
      uint64_t v38 = (uint64_t)v68;
      sub_22D1B9E60((uint64_t)v12, (uint64_t)v68, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if (v32(v30, 1, v31) != 1)
      {
        uint64_t v66 = v32;
        uint64_t v74 = v33;
        uint64_t v39 = v70;
        sub_22D1D06E8(v30, v70, type metadata accessor for PBHKConcept);
        uint64_t v40 = v38;
        uint64_t v41 = v37;
        swift_retain();
        swift_retain();
        char v42 = sub_22D1B8590(v40, v39, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
        sub_22D1B9750(v39, type metadata accessor for PBHKConcept);
        sub_22D1D08A0((uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        sub_22D1B9750(v40, type metadata accessor for PBHKConcept);
        uint64_t v35 = v28;
        uint64_t v36 = v41;
        sub_22D1D08A0((uint64_t)v12, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        if ((v42 & 1) == 0) {
          goto LABEL_23;
        }
        goto LABEL_11;
      }
      swift_retain();
      swift_retain();
      sub_22D1D08A0((uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      sub_22D1B9750(v38, type metadata accessor for PBHKConcept);
    }
    sub_22D1D05E4((uint64_t)v12, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    char v25 = 0;
LABEL_24:
    swift_release();
    swift_release();
  }
  return v25 & 1;
}

uint64_t PBGeneralMedication.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBGeneralMedication, &qword_268540EF8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
}

uint64_t sub_22D181CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D088, &qword_2685403A0, a2);
}

unint64_t sub_22D181CEC()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D181D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBGeneralMedication.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D181D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBGeneralMedication.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D181D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E40, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D181DB4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D080, (uint64_t)qword_268540388, a1);
}

uint64_t sub_22D181DD8(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541430, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D181E44()
{
  sub_22D1B9F34(&qword_268541430, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
  return sub_22D2BC200();
}

uint64_t sub_22D181EC0(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBGeneralMedication, sub_22D1812B4) & 1;
}

unint64_t static PBHKMedicationRecord.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D181F20()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685403A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685403A8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_22D2C79C0;
  unint64_t v5 = v25 + v4;
  unint64_t v6 = v25 + v4 + *(int *)(v2 + 56);
  *(void *)(v25 + v4) = 1;
  *(void *)unint64_t v6 = "general_medication";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "asserter";
  *(void *)(v10 + 8) = 8;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "assertion_date";
  *((void *)v12 + 1) = 14;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "asserter_type";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "effective_start_date";
  *((void *)v16 + 1) = 20;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "effective_end_date";
  *((void *)v18 + 1) = 18;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  unint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)unint64_t v20 = "not_taken";
  *((void *)v20 + 1) = 9;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "reason_for_use";
  *((void *)v22 + 1) = 14;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "reasons_not_taken";
  *(void *)(v23 + 8) = 17;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBHKMedicationRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D090, (uint64_t)qword_2685403A8, a1);
}

uint64_t sub_22D1822E4()
{
  type metadata accessor for PBHKMedicationRecord._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  uint64_t v2 = type metadata accessor for PBGeneralMedication(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  unint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  *unint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  uint64_t v6 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  uint64_t v7 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  uint64_t v8 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken) = 0;
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse) = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken) = v9;
  qword_2685403C0 = v0;
  return result;
}

uint64_t sub_22D1823FC(uint64_t a1)
{
  uint64_t v41 = type metadata accessor for PBGeneralMedication;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v41 - v4;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  uint64_t v7 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v46 = v1;
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *uint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  uint64_t v12 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *uint64_t v12 = 0;
  v12[1] = 0xE000000000000000;
  char v42 = v12;
  uint64_t v43 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  *uint64_t v43 = 0;
  uint64_t v44 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse) = MEMORY[0x263F8EE78];
  uint64_t v45 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken) = v13;
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  uint64_t v15 = a1;
  swift_beginAccess();
  uint64_t v16 = v41;
  sub_22D1B9E60(v14, (uint64_t)v5, &qword_26853F310, v41);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v5, v6, &qword_26853F310, v16);
  swift_endAccess();
  uint64_t v17 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  swift_beginAccess();
  *uint64_t v8 = v19;
  v8[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v20 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  swift_beginAccess();
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  swift_beginAccess();
  void *v9 = v22;
  v9[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
  swift_beginAccess();
  uint64_t v24 = *v23;
  LOBYTE(v23) = *((unsigned char *)v23 + 8);
  swift_beginAccess();
  *(void *)uint64_t v10 = v24;
  *(unsigned char *)(v10 + 8) = (_BYTE)v23;
  uint64_t v25 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  swift_beginAccess();
  *uint64_t v11 = v27;
  v11[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  uint64_t v31 = v42;
  swift_beginAccess();
  void *v31 = v30;
  v31[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = (unsigned char *)(v15
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  LOBYTE(v32) = *v32;
  uint64_t v33 = v43;
  swift_beginAccess();
  *uint64_t v33 = (_BYTE)v32;
  unsigned int v34 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  swift_beginAccess();
  uint64_t v35 = *v34;
  uint64_t v36 = v44;
  swift_beginAccess();
  *uint64_t v36 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  swift_beginAccess();
  uint64_t v38 = *v37;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v39 = v45;
  swift_beginAccess();
  void *v39 = v38;
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_22D182898()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKMedicationRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1829F0);
}

uint64_t sub_22D1829F0()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBGeneralMedication(0);
          sub_22D1B9F34(&qword_268541430, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 2:
        case 3:
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          sub_22D1D0494();
          uint64_t v4 = v3;
          sub_22D2BC0D0();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC0B0();
          goto LABEL_5;
        case 8:
        case 9:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC190();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKMedicationRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKMedicationRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D182DD4);
}

uint64_t sub_22D182DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a4;
  v38[1] = a3;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v38 - v6;
  uint64_t v8 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1;
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v13, (uint64_t)v7, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_22D1D08A0((uint64_t)v7, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    uint64_t v14 = v38[0];
  }
  else
  {
    sub_22D1D06E8((uint64_t)v7, (uint64_t)v11, type metadata accessor for PBGeneralMedication);
    sub_22D1B9F34(&qword_268541430, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
    uint64_t v15 = v38[0];
    sub_22D2BC2E0();
    uint64_t v14 = v15;
    uint64_t result = sub_22D1B9750((uint64_t)v11, type metadata accessor for PBGeneralMedication);
    if (v15) {
      return result;
    }
  }
  uint64_t v17 = (uint64_t *)(v12
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  uint64_t v19 = *v17;
  unint64_t v18 = v17[1];
  uint64_t v20 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v20 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (!v20 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v14))
  {
    uint64_t v21 = (uint64_t *)(v12
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
    swift_beginAccess();
    uint64_t v23 = *v21;
    unint64_t v22 = v21[1];
    uint64_t v24 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0) {
      uint64_t v24 = v23 & 0xFFFFFFFFFFFFLL;
    }
    if (!v24 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v14))
    {
      uint64_t v25 = v12
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType;
      swift_beginAccess();
      if (!*(void *)v25
        || (char v26 = *(unsigned char *)(v25 + 8),
            v38[14] = *(void *)v25,
            char v39 = v26,
            sub_22D1D0494(),
            uint64_t result = sub_22D2BC240(),
            !v14))
      {
        uint64_t v27 = (uint64_t *)(v12
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
        swift_beginAccess();
        uint64_t v29 = *v27;
        unint64_t v28 = v27[1];
        uint64_t v30 = HIBYTE(v28) & 0xF;
        if ((v28 & 0x2000000000000000) == 0) {
          uint64_t v30 = v29 & 0xFFFFFFFFFFFFLL;
        }
        if (!v30 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v14))
        {
          uint64_t v31 = (uint64_t *)(v12
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
          swift_beginAccess();
          uint64_t v33 = *v31;
          unint64_t v32 = v31[1];
          uint64_t v34 = HIBYTE(v32) & 0xF;
          if ((v32 & 0x2000000000000000) == 0) {
            uint64_t v34 = v33 & 0xFFFFFFFFFFFFLL;
          }
          if (!v34 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v14))
          {
            uint64_t v35 = (unsigned char *)(v12
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
            swift_beginAccess();
            if (*v35 != 1 || (uint64_t result = sub_22D2BC230(), !v14))
            {
              uint64_t v36 = v12
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse;
              swift_beginAccess();
              if (!*(void *)(*(void *)v36 + 16)
                || (type metadata accessor for PBHKConcept(0),
                    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept), swift_bridgeObjectRetain(), sub_22D2BC2D0(), uint64_t result = swift_bridgeObjectRelease(), !v14))
              {
                uint64_t v37 = v12
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken;
                uint64_t result = swift_beginAccess();
                if (*(void *)(*(void *)v37 + 16))
                {
                  type metadata accessor for PBHKConcept(0);
                  sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
                  swift_bridgeObjectRetain();
                  sub_22D2BC2D0();
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22D18340C(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a2;
  uint64_t v3 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v61 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268542030, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v60 - v8;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v62 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v63 = a1;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v14, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v16 = v64;
  uint64_t v17 = v64
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_22D1B9E60((uint64_t)v14, (uint64_t)v9, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  sub_22D1B9E60(v17, v18, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v20 = v3;
  if (v19((uint64_t)v9, 1, v3) == 1)
  {
    uint64_t v21 = v63;
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v14, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    if (v19(v18, 1, v20) == 1)
    {
      sub_22D1D08A0((uint64_t)v9, &qword_26853F310, type metadata accessor for PBGeneralMedication);
      goto LABEL_8;
    }
LABEL_6:
    sub_22D1D05E4((uint64_t)v9, &qword_268542030, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    goto LABEL_39;
  }
  uint64_t v22 = (uint64_t)v61;
  uint64_t v21 = v63;
  sub_22D1B9E60((uint64_t)v9, v62, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if (v19(v18, 1, v20) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v14, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    sub_22D1B9750(v62, type metadata accessor for PBGeneralMedication);
    goto LABEL_6;
  }
  uint64_t v23 = v22;
  sub_22D1D06E8(v18, v22, type metadata accessor for PBGeneralMedication);
  swift_retain();
  swift_retain();
  uint64_t v24 = v62;
  char v25 = sub_22D1B8590(v62, v23, type metadata accessor for PBGeneralMedication, sub_22D1812B4);
  sub_22D1B9750(v23, type metadata accessor for PBGeneralMedication);
  sub_22D1D08A0((uint64_t)v14, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  sub_22D1B9750(v24, type metadata accessor for PBGeneralMedication);
  sub_22D1D08A0((uint64_t)v9, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if ((v25 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_8:
  char v26 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  uint64_t v29 = (void *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
  swift_beginAccess();
  if ((v27 != *v29 || v28 != v29[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_39;
  }
  uint64_t v30 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  swift_beginAccess();
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  uint64_t v33 = (void *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
  swift_beginAccess();
  if ((v31 != *v33 || v32 != v33[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_39;
  }
  uint64_t v34 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
  swift_beginAccess();
  uint64_t v35 = *v34;
  uint64_t v36 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
  swift_beginAccess();
  uint64_t v37 = *v36;
  if (*((unsigned char *)v36 + 8) == 1)
  {
    switch(v37)
    {
      case 1:
        if (v35 != 1) {
          goto LABEL_39;
        }
        goto LABEL_19;
      case 2:
        if (v35 != 2) {
          goto LABEL_39;
        }
        goto LABEL_19;
      case 3:
        if (v35 != 3) {
          goto LABEL_39;
        }
        goto LABEL_19;
      case 4:
        if (v35 != 4) {
          goto LABEL_39;
        }
        goto LABEL_19;
      case 5:
        if (v35 != 5) {
          goto LABEL_39;
        }
        goto LABEL_19;
      case 6:
        if (v35 != 6) {
          goto LABEL_39;
        }
        goto LABEL_19;
      default:
        if (!v35) {
          goto LABEL_19;
        }
        goto LABEL_39;
    }
  }
  if (v35 != v37) {
    goto LABEL_39;
  }
LABEL_19:
  uint64_t v38 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  uint64_t v39 = *v38;
  uint64_t v40 = v38[1];
  uint64_t v41 = (void *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  if ((v39 != *v41 || v40 != v41[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_39;
  }
  char v42 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v43 = *v42;
  uint64_t v44 = v42[1];
  uint64_t v45 = (void *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  if ((v43 != *v45 || v44 != v45[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_39;
  }
  uint64_t v46 = (unsigned __int8 *)(v21
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  int v47 = *v46;
  uint64_t v48 = (unsigned __int8 *)(v16
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
  swift_beginAccess();
  if (v47 != *v48) {
    goto LABEL_39;
  }
  uint64_t v49 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  swift_beginAccess();
  uint64_t v50 = *v49;
  uint64_t v51 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
  swift_beginAccess();
  uint64_t v52 = *v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v53 = sub_22D113350(v50, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v53 & 1) == 0)
  {
LABEL_39:
    swift_release();
    swift_release();
    char v58 = 0;
    return v58 & 1;
  }
  uint64_t v54 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  swift_beginAccess();
  uint64_t v55 = *v54;
  uint64_t v56 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
  swift_beginAccess();
  uint64_t v57 = *v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v58 = sub_22D113350(v55, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v58 & 1;
}

uint64_t PBHKMedicationRecord.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKMedicationRecord, &qword_268540F00, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
}

uint64_t sub_22D183CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D098, &qword_2685403C0, a2);
}

unint64_t sub_22D183CF4()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D183D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D183D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D183D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E38, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D183DBC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D090, (uint64_t)qword_2685403A8, a1);
}

uint64_t sub_22D183DE0(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541448, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D183E4C()
{
  sub_22D1B9F34(&qword_268541448, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
  return sub_22D2BC200();
}

uint64_t sub_22D183EC8(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKMedicationRecord, sub_22D18340C) & 1;
}

uint64_t sub_22D183F0C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685403C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685403C8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_22D2C0BB0;
  unint64_t v5 = v21 + v4 + *(int *)(v2 + 56);
  *(void *)(v21 + v4) = 0;
  *(void *)unint64_t v5 = "ACTOR_TYPE_NOT_SET";
  *(void *)(v5 + 8) = 18;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_22D2BC2F0();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v21 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v21 + v4 + v3) = 1;
  *(void *)unint64_t v9 = "ACTOR_TYPE_NONE";
  *(void *)(v9 + 8) = 15;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v21 + v4 + 2 * v3);
  uint64_t v11 = (char *)v10 + *(int *)(v2 + 56);
  *uint64_t v10 = 2;
  *(void *)uint64_t v11 = "ACTOR_TYPE_OTHER";
  *((void *)v11 + 1) = 16;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v21 + v4 + 3 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "ACTOR_TYPE_PATIENT";
  *((void *)v13 + 1) = 18;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v21 + v4 + 4 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "ACTOR_TYPE_PRACTITIONER";
  *((void *)v15 + 1) = 23;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v21 + v4 + 5 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 5;
  *(void *)uint64_t v17 = "ACTOR_TYPE_RELATED_PERSON";
  *((void *)v17 + 1) = 25;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v21 + v4 + 6 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 6;
  *(void *)uint64_t v19 = "ACTOR_TYPE_ORGANIZATION";
  *((void *)v19 + 1) = 23;
  v19[16] = 2;
  v8();
  return sub_22D2BC300();
}

uint64_t static PBHKMedicationRecord.HKClinicalReferencedActorType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D0A0, (uint64_t)qword_2685403C8, a1);
}

uint64_t sub_22D184240@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D0A0, (uint64_t)qword_2685403C8, a1);
}

unint64_t static PBHKMedicationDispenseRecord.protoMessageName.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_22D184280()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685403E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685403E0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2BFF30;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "general_medication";
  *(void *)(v7 + 8) = 18;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "day_supply_quantity";
  *(void *)(v11 + 8) = 19;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "hand_over_date";
  *((void *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "preparation_date";
  *((void *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  uint64_t v16 = v6 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v6 + 4 * v3) = 5;
  *(void *)uint64_t v16 = "quantity_dispensed";
  *(void *)(v16 + 8) = 18;
  *(unsigned char *)(v16 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHKMedicationDispenseRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D0A8, (uint64_t)qword_2685403E0, a1);
}

uint64_t sub_22D184550()
{
  type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  uint64_t v2 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  uint64_t v4 = type metadata accessor for PBQuantity(0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  unint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  *unint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  unint64_t v7 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  *unint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed, 1, 1, v4);
  qword_2685403F8 = v0;
  return result;
}

uint64_t sub_22D184680(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v32 = type metadata accessor for PBQuantity;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v31 = (uint64_t)&v30 - v4;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, v2);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  uint64_t v9 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  uint64_t v11 = type metadata accessor for PBQuantity(0);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12)(v10, 1, 1, v11);
  uint64_t v34 = v1;
  uint64_t v13 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  *uint64_t v13 = 0;
  v13[1] = 0xE000000000000000;
  uint64_t v14 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  *uint64_t v14 = 0;
  v14[1] = 0xE000000000000000;
  uint64_t v33 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  v12();
  uint64_t v15 = v30;
  uint64_t v16 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v16, (uint64_t)v7, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v7, v8, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_endAccess();
  uint64_t v17 = v15
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  uint64_t v18 = v15;
  swift_beginAccess();
  uint64_t v19 = v31;
  uint64_t v20 = v32;
  sub_22D1B9E60(v17, v31, &qword_268540CC0, v32);
  swift_beginAccess();
  sub_22D1B9D9C(v19, v10, &qword_268540CC0, v20);
  swift_endAccess();
  uint64_t v21 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  swift_beginAccess();
  *uint64_t v13 = v23;
  v13[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t *)(v18
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  swift_beginAccess();
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  swift_beginAccess();
  *uint64_t v14 = v26;
  v14[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v18
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  sub_22D1B9E60(v27, v19, &qword_268540CC0, v20);
  swift_release();
  uint64_t v28 = v33;
  swift_beginAccess();
  sub_22D1B9D9C(v19, v28, &qword_268540CC0, v20);
  swift_endAccess();
  return v34;
}

uint64_t sub_22D184AB8()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity, &qword_268540CC0, type metadata accessor for PBQuantity);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed, &qword_268540CC0, type metadata accessor for PBQuantity);
  return swift_deallocClassInstance();
}

uint64_t PBHKMedicationDispenseRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(void))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_22D184680, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D184C24);
}

uint64_t sub_22D184C24()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBGeneralMedication(0);
          sub_22D1B9F34(&qword_268541430, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
          goto LABEL_5;
        case 2:
        case 5:
          swift_beginAccess();
          type metadata accessor for PBQuantity(0);
          sub_22D1B9F34(&qword_268541418, (void (*)(uint64_t))type metadata accessor for PBQuantity);
LABEL_5:
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_6;
        case 3:
        case 4:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
LABEL_6:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKMedicationDispenseRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D184F0C);
}

uint64_t sub_22D184F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v45 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v47 = (uint64_t)&v44 - v9;
  uint64_t v51 = type metadata accessor for PBQuantity(0);
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v51);
  uint64_t v44 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v46 = (uint64_t)&v44 - v12;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, v5);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  uint64_t v21 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v21, (uint64_t)v15, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_22D1D08A0((uint64_t)v15, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    uint64_t v22 = v48;
    uint64_t v23 = v51;
    uint64_t v24 = v20;
  }
  else
  {
    sub_22D1D06E8((uint64_t)v15, (uint64_t)v19, type metadata accessor for PBGeneralMedication);
    sub_22D1B9F34(&qword_268541430, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
    uint64_t v25 = v48;
    sub_22D2BC2E0();
    uint64_t v22 = v25;
    uint64_t result = sub_22D1B9750((uint64_t)v19, type metadata accessor for PBGeneralMedication);
    uint64_t v23 = v51;
    uint64_t v24 = v20;
    if (v25) {
      return result;
    }
  }
  uint64_t v27 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  uint64_t v28 = v27;
  uint64_t v29 = v47;
  sub_22D1B9E60(v28, v47, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  v52 += 48;
  if (v30(v29, 1, v23) == 1)
  {
    sub_22D1D08A0(v29, &qword_268540CC0, type metadata accessor for PBQuantity);
  }
  else
  {
    uint64_t v31 = v29;
    uint64_t v32 = v46;
    sub_22D1D06E8(v31, v46, type metadata accessor for PBQuantity);
    sub_22D1B9F34(&qword_268541418, (void (*)(uint64_t))type metadata accessor for PBQuantity);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750(v32, type metadata accessor for PBQuantity);
    if (v22) {
      return result;
    }
  }
  uint64_t v33 = (void *)(v24
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  unint64_t v34 = v33[1];
  uint64_t v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0) {
    uint64_t v35 = *v33 & 0xFFFFFFFFFFFFLL;
  }
  if (!v35 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v22))
  {
    uint64_t v36 = (void *)(v24
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
    swift_beginAccess();
    unint64_t v37 = v36[1];
    uint64_t v38 = HIBYTE(v37) & 0xF;
    if ((v37 & 0x2000000000000000) == 0) {
      uint64_t v38 = *v36 & 0xFFFFFFFFFFFFLL;
    }
    if (!v38 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v22))
    {
      uint64_t v39 = v24
          + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
      swift_beginAccess();
      uint64_t v40 = v39;
      uint64_t v41 = v45;
      sub_22D1B9E60(v40, v45, &qword_268540CC0, type metadata accessor for PBQuantity);
      if (v30(v41, 1, v23) == 1)
      {
        return sub_22D1D08A0(v41, &qword_268540CC0, type metadata accessor for PBQuantity);
      }
      else
      {
        uint64_t v42 = v41;
        uint64_t v43 = v44;
        sub_22D1D06E8(v42, v44, type metadata accessor for PBQuantity);
        sub_22D1B9F34(&qword_268541418, (void (*)(uint64_t))type metadata accessor for PBQuantity);
        sub_22D2BC2E0();
        return sub_22D1B9750(v43, type metadata accessor for PBQuantity);
      }
    }
  }
  return result;
}

uint64_t sub_22D185610(uint64_t a1, uint64_t a2)
{
  uint64_t v91 = a2;
  uint64_t v87 = type metadata accessor for PBQuantity(0);
  uint64_t v84 = *(void *)(v87 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v87);
  uint64_t v78 = (uint64_t)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v81 = (uint64_t)&v77 - v5;
  sub_22D1D0AB4(0, &qword_268542038, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v86 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v80 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v83 = (uint64_t)&v77 - v9;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v79 = (uint64_t)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v85 = (char *)&v77 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v82 = (uint64_t)&v77 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v90 = (uint64_t)&v77 - v18;
  uint64_t v19 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v88 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268542030, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v23 = v22 - 8;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v77 - v24;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, v10);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v89 = (uint64_t)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v77 - v29;
  uint64_t v31 = a1;
  uint64_t v32 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v32, (uint64_t)v30, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v33 = v91;
  uint64_t v34 = v91
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  uint64_t v35 = (uint64_t)&v25[*(int *)(v23 + 56)];
  sub_22D1B9E60((uint64_t)v30, (uint64_t)v25, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  sub_22D1B9E60(v34, v35, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v36((uint64_t)v25, 1, v19) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v30, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    uint64_t v37 = v31;
    if (v36(v35, 1, v19) == 1)
    {
      sub_22D1D08A0((uint64_t)v25, &qword_26853F310, type metadata accessor for PBGeneralMedication);
      goto LABEL_8;
    }
LABEL_6:
    sub_22D1D05E4((uint64_t)v25, &qword_268542030, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    goto LABEL_31;
  }
  uint64_t v38 = (uint64_t)v88;
  uint64_t v39 = v31;
  uint64_t v40 = v89;
  sub_22D1B9E60((uint64_t)v25, v89, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if (v36(v35, 1, v19) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v30, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    sub_22D1B9750(v40, type metadata accessor for PBGeneralMedication);
    goto LABEL_6;
  }
  sub_22D1D06E8(v35, v38, type metadata accessor for PBGeneralMedication);
  uint64_t v37 = v39;
  swift_retain();
  swift_retain();
  char v41 = sub_22D1B8590(v40, v38, type metadata accessor for PBGeneralMedication, sub_22D1812B4);
  sub_22D1B9750(v38, type metadata accessor for PBGeneralMedication);
  sub_22D1D08A0((uint64_t)v30, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  sub_22D1B9750(v40, type metadata accessor for PBGeneralMedication);
  sub_22D1D08A0((uint64_t)v25, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if ((v41 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_8:
  uint64_t v42 = v37
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  uint64_t v43 = v90;
  sub_22D1B9E60(v42, v90, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v44 = v33
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity;
  swift_beginAccess();
  uint64_t v45 = v83;
  uint64_t v46 = v83 + *(int *)(v86 + 48);
  sub_22D1B9E60(v43, v83, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v47 = v44;
  uint64_t v48 = v45;
  sub_22D1B9E60(v47, v46, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  uint64_t v50 = v87;
  if (v49(v48, 1, v87) != 1)
  {
    uint64_t v69 = v82;
    sub_22D1B9E60(v48, v82, &qword_268540CC0, type metadata accessor for PBQuantity);
    int v70 = v49(v46, 1, v50);
    uint64_t v52 = (uint64_t)v85;
    if (v70 == 1)
    {
      sub_22D1D08A0(v90, &qword_268540CC0, type metadata accessor for PBQuantity);
      sub_22D1B9750(v69, type metadata accessor for PBQuantity);
      goto LABEL_23;
    }
    uint64_t v71 = v81;
    sub_22D1D06E8(v46, v81, type metadata accessor for PBQuantity);
    if (*(double *)v69 == *(double *)v71
      && (*(void *)(v69 + 8) == *(void *)(v71 + 8) && *(void *)(v69 + 16) == *(void *)(v71 + 16)
       || (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v89 = v69 + *(int *)(v50 + 24);
      sub_22D2BBFF0();
      sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
      LODWORD(v89) = sub_22D2BCB90();
      sub_22D1B9750(v71, type metadata accessor for PBQuantity);
      sub_22D1D08A0(v90, &qword_268540CC0, type metadata accessor for PBQuantity);
      sub_22D1B9750(v82, type metadata accessor for PBQuantity);
      sub_22D1D08A0(v48, &qword_268540CC0, type metadata accessor for PBQuantity);
      if (v89) {
        goto LABEL_11;
      }
    }
    else
    {
      sub_22D1B9750(v71, type metadata accessor for PBQuantity);
      sub_22D1D08A0(v90, &qword_268540CC0, type metadata accessor for PBQuantity);
      sub_22D1B9750(v69, type metadata accessor for PBQuantity);
      sub_22D1D08A0(v48, &qword_268540CC0, type metadata accessor for PBQuantity);
    }
LABEL_31:
    swift_release();
    swift_release();
    return 0;
  }
  sub_22D1D08A0(v43, &qword_268540CC0, type metadata accessor for PBQuantity);
  int v51 = v49(v46, 1, v50);
  uint64_t v52 = (uint64_t)v85;
  if (v51 != 1)
  {
LABEL_23:
    sub_22D1D05E4(v48, &qword_268542038, &qword_268540CC0, type metadata accessor for PBQuantity);
    goto LABEL_31;
  }
  sub_22D1D08A0(v48, &qword_268540CC0, type metadata accessor for PBQuantity);
LABEL_11:
  char v53 = (uint64_t *)(v37
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  uint64_t v54 = *v53;
  uint64_t v55 = v53[1];
  uint64_t v56 = (void *)(v33
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
  swift_beginAccess();
  if ((v54 != *v56 || v55 != v56[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_31;
  }
  uint64_t v57 = (uint64_t *)(v37
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  swift_beginAccess();
  uint64_t v58 = *v57;
  uint64_t v59 = v57[1];
  uint64_t v60 = (void *)(v33
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
  swift_beginAccess();
  if ((v58 != *v60 || v59 != v60[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_31;
  }
  uint64_t v61 = v37
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  sub_22D1B9E60(v61, v52, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v62 = v33
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed;
  swift_beginAccess();
  uint64_t v63 = v52;
  uint64_t v64 = v80;
  uint64_t v65 = v80 + *(int *)(v86 + 48);
  sub_22D1B9E60(v63, v80, &qword_268540CC0, type metadata accessor for PBQuantity);
  uint64_t v66 = v87;
  uint64_t v67 = v64;
  sub_22D1B9E60(v62, v65, &qword_268540CC0, type metadata accessor for PBQuantity);
  if (v49(v64, 1, v66) == 1)
  {
    swift_release();
    swift_release();
    sub_22D1D08A0(v63, &qword_268540CC0, type metadata accessor for PBQuantity);
    if (v49(v65, 1, v66) == 1)
    {
      sub_22D1D08A0(v64, &qword_268540CC0, type metadata accessor for PBQuantity);
      return 1;
    }
    goto LABEL_36;
  }
  uint64_t v72 = v64;
  uint64_t v73 = v79;
  sub_22D1B9E60(v72, v79, &qword_268540CC0, type metadata accessor for PBQuantity);
  if (v49(v65, 1, v66) == 1)
  {
    swift_release();
    swift_release();
    sub_22D1D08A0(v63, &qword_268540CC0, type metadata accessor for PBQuantity);
    sub_22D1B9750(v73, type metadata accessor for PBQuantity);
LABEL_36:
    sub_22D1D05E4(v67, &qword_268542038, &qword_268540CC0, type metadata accessor for PBQuantity);
    return 0;
  }
  uint64_t v74 = v78;
  sub_22D1D06E8(v65, v78, type metadata accessor for PBQuantity);
  uint64_t v75 = v63;
  if (*(double *)v73 == *(double *)v74
    && (*(void *)(v73 + 8) == *(void *)(v74 + 8) && *(void *)(v73 + 16) == *(void *)(v74 + 16)
     || (sub_22D2BD660() & 1) != 0))
  {
    sub_22D2BBFF0();
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v76 = sub_22D2BCB90();
    swift_release();
    swift_release();
    sub_22D1B9750(v74, type metadata accessor for PBQuantity);
    sub_22D1D08A0(v75, &qword_268540CC0, type metadata accessor for PBQuantity);
    sub_22D1B9750(v73, type metadata accessor for PBQuantity);
    sub_22D1D08A0(v67, &qword_268540CC0, type metadata accessor for PBQuantity);
    if (v76) {
      return 1;
    }
  }
  else
  {
    swift_release();
    swift_release();
    sub_22D1B9750(v74, type metadata accessor for PBQuantity);
    sub_22D1D08A0(v63, &qword_268540CC0, type metadata accessor for PBQuantity);
    sub_22D1B9750(v73, type metadata accessor for PBQuantity);
    sub_22D1D08A0(v67, &qword_268540CC0, type metadata accessor for PBQuantity);
  }
  return 0;
}

uint64_t PBHKMedicationDispenseRecord.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKMedicationDispenseRecord, &qword_268540F08, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
}

uint64_t sub_22D186618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D0B0, &qword_2685403F8, a2);
}

unint64_t sub_22D18663C()
{
  return 0xD000000000000035;
}

uint64_t sub_22D186658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationDispenseRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D186670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationDispenseRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D186688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E30, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D186704@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D0A8, (uint64_t)qword_2685403E0, a1);
}

uint64_t sub_22D186728(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541460, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D186794()
{
  sub_22D1B9F34(&qword_268541460, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
  return sub_22D2BC200();
}

uint64_t sub_22D186810(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKMedicationDispenseRecord, sub_22D185610) & 1;
}

unint64_t static PBHKMedicationOrder.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D186870()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540400);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540400);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_22D2C39B0;
  unint64_t v5 = v24 + v4;
  unint64_t v6 = v24 + v4 + *(int *)(v2 + 56);
  *(void *)(v24 + v4) = 1;
  *(void *)unint64_t v6 = "general_medication";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "ended_date";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "number_of_fills";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "prescriber";
  *((void *)v14 + 1) = 10;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "reason";
  *((void *)v16 + 1) = 6;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "reason_ended";
  *((void *)v18 + 1) = 12;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "status_reason";
  *((void *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "written_date";
  *((void *)v22 + 1) = 12;
  v22[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBHKMedicationOrder._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D0B8, (uint64_t)qword_268540400, a1);
}

uint64_t sub_22D186C0C()
{
  type metadata accessor for PBHKMedicationOrder._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  uint64_t v2 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  *uint64_t v3 = 0;
  v3[1] = 0xE000000000000000;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills) = 0;
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason) = MEMORY[0x263F8EE78];
  uint64_t v5 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason, 1, 1, v6);
  uint64_t v9 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  qword_268540418 = v0;
  return result;
}

uint64_t sub_22D186D6C(uint64_t a1)
{
  uint64_t v45 = a1;
  int v51 = type metadata accessor for PBHKConcept;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v50 = (uint64_t)&v44 - v4;
  uint64_t v44 = type metadata accessor for PBGeneralMedication;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, v2);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v44 - v6;
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  uint64_t v9 = type metadata accessor for PBGeneralMedication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  unint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  *unint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  uint64_t v46 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills) = 0;
  uint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  *uint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  uint64_t v47 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason) = MEMORY[0x263F8EE78];
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  uint64_t v48 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  uint64_t v13 = type metadata accessor for PBHKConcept(0);
  uint64_t v14 = *(void (**)(void))(*(void *)(v13 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14)(v12, 1, 1, v13);
  uint64_t v49 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  v14();
  uint64_t v15 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  uint64_t v16 = v1;
  *uint64_t v15 = 0;
  v15[1] = 0xE000000000000000;
  uint64_t v17 = v45;
  uint64_t v18 = v45
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  uint64_t v19 = v18;
  uint64_t v20 = v44;
  sub_22D1B9E60(v19, (uint64_t)v7, &qword_26853F310, v44);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v7, v8, &qword_26853F310, v20);
  swift_endAccess();
  uint64_t v21 = v17;
  uint64_t v22 = (uint64_t *)(v17
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  swift_beginAccess();
  *unint64_t v10 = v24;
  v10[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = (_DWORD *)(v21
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  LODWORD(v25) = *v25;
  uint64_t v26 = v46;
  swift_beginAccess();
  _DWORD *v26 = v25;
  uint64_t v27 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  swift_beginAccess();
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  swift_beginAccess();
  *uint64_t v11 = v29;
  v11[1] = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  swift_beginAccess();
  uint64_t v31 = *v30;
  uint64_t v32 = v47;
  swift_beginAccess();
  void *v32 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = v21
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  uint64_t v34 = v21;
  swift_beginAccess();
  uint64_t v36 = v50;
  uint64_t v35 = v51;
  sub_22D1B9E60(v33, v50, (unint64_t *)&qword_26853E848, v51);
  uint64_t v37 = v48;
  swift_beginAccess();
  sub_22D1B9D9C(v36, v37, (unint64_t *)&qword_26853E848, v35);
  swift_endAccess();
  uint64_t v38 = v34
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  sub_22D1B9E60(v38, v36, (unint64_t *)&qword_26853E848, v35);
  uint64_t v39 = v49;
  swift_beginAccess();
  sub_22D1B9D9C(v36, v39, (unint64_t *)&qword_26853E848, v35);
  swift_endAccess();
  uint64_t v40 = (uint64_t *)(v34
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  swift_beginAccess();
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *uint64_t v15 = v42;
  v15[1] = v41;
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_22D1872B8()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKMedicationOrder.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D187448);
}

uint64_t sub_22D187448()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBGeneralMedication(0);
          sub_22D1B9F34(&qword_268541430, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 2:
        case 4:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC130();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 6:
        case 7:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 8:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKMedicationOrder.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKMedicationOrder, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D18782C);
}

uint64_t sub_22D18782C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = a4;
  uint64_t v54 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v57 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)&v48 - v9;
  uint64_t v52 = type metadata accessor for PBHKConcept(0);
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v52);
  uint64_t v49 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v50 = (uint64_t)&v48 - v12;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, v5);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  uint64_t v21 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v21, (uint64_t)v15, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_22D1D08A0((uint64_t)v15, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    uint64_t v22 = v53;
    uint64_t v23 = v20;
    uint64_t v24 = (uint64_t)v57;
    uint64_t v25 = (uint64_t)v56;
  }
  else
  {
    sub_22D1D06E8((uint64_t)v15, (uint64_t)v19, type metadata accessor for PBGeneralMedication);
    sub_22D1B9F34(&qword_268541430, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
    uint64_t v26 = v53;
    sub_22D2BC2E0();
    uint64_t v22 = v26;
    uint64_t result = sub_22D1B9750((uint64_t)v19, type metadata accessor for PBGeneralMedication);
    uint64_t v23 = v20;
    uint64_t v24 = (uint64_t)v57;
    uint64_t v25 = (uint64_t)v56;
    if (v26) {
      return result;
    }
  }
  uint64_t v28 = (uint64_t *)(v23
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  uint64_t v30 = *v28;
  unint64_t v29 = v28[1];
  uint64_t v31 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0) {
    uint64_t v31 = v30 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v22))
  {
    uint64_t v32 = (_DWORD *)(v23
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
    swift_beginAccess();
    if (!*v32 || (uint64_t result = sub_22D2BC280(), !v22))
    {
      uint64_t v33 = (uint64_t *)(v23
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
      swift_beginAccess();
      uint64_t v35 = *v33;
      unint64_t v34 = v33[1];
      uint64_t v36 = HIBYTE(v34) & 0xF;
      if ((v34 & 0x2000000000000000) == 0) {
        uint64_t v36 = v35 & 0xFFFFFFFFFFFFLL;
      }
      if (!v36 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v22))
      {
        uint64_t v37 = v23
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
        swift_beginAccess();
        if (!*(void *)(*(void *)v37 + 16)
          || (sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept),
              swift_bridgeObjectRetain(),
              sub_22D2BC2D0(),
              uint64_t result = swift_bridgeObjectRelease(),
              !v22))
        {
          uint64_t v38 = v23
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
          swift_beginAccess();
          sub_22D1B9E60(v38, v25, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
          v51 += 48;
          if (v39(v25, 1, v52) == 1)
          {
            sub_22D1D08A0(v25, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          }
          else
          {
            uint64_t v40 = v25;
            uint64_t v41 = v50;
            sub_22D1D06E8(v40, v50, type metadata accessor for PBHKConcept);
            sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
            sub_22D2BC2E0();
            uint64_t result = sub_22D1B9750(v41, type metadata accessor for PBHKConcept);
            if (v22) {
              return result;
            }
          }
          uint64_t v42 = v23
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
          swift_beginAccess();
          sub_22D1B9E60(v42, v24, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          if (v39(v24, 1, v52) == 1)
          {
            sub_22D1D08A0(v24, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          }
          else
          {
            uint64_t v43 = v49;
            sub_22D1D06E8(v24, v49, type metadata accessor for PBHKConcept);
            sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
            sub_22D2BC2E0();
            uint64_t result = sub_22D1B9750(v43, type metadata accessor for PBHKConcept);
            if (v22) {
              return result;
            }
          }
          uint64_t v44 = (uint64_t *)(v23
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
          uint64_t result = swift_beginAccess();
          uint64_t v46 = *v44;
          unint64_t v45 = v44[1];
          uint64_t v47 = HIBYTE(v45) & 0xF;
          if ((v45 & 0x2000000000000000) == 0) {
            uint64_t v47 = v46 & 0xFFFFFFFFFFFFLL;
          }
          if (v47)
          {
            swift_bridgeObjectRetain();
            sub_22D2BC2B0();
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22D1880DC(uint64_t a1, uint64_t a2)
{
  uint64_t v100 = a2;
  uint64_t v95 = type metadata accessor for PBHKConcept(0);
  uint64_t v93 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v88 = (uint64_t)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v94 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v89 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v92 = (uint64_t)&v86 - v7;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v87 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v91 = (uint64_t)&v86 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v90 = (uint64_t)&v86 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v96 = (uint64_t)&v86 - v16;
  uint64_t v98 = type metadata accessor for PBGeneralMedication(0);
  uint64_t v17 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v97 = (uint64_t)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268542030, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v86 - v21;
  sub_22D167880(0, &qword_26853F310, type metadata accessor for PBGeneralMedication, v8);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  unsigned int v99 = (uint64_t *)((char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v86 - v26;
  uint64_t v28 = a1;
  uint64_t v29 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  sub_22D1B9E60(v29, (uint64_t)v27, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v30 = v100;
  uint64_t v31 = v100
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__generalMedication;
  swift_beginAccess();
  uint64_t v32 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_22D1B9E60((uint64_t)v27, (uint64_t)v22, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  uint64_t v33 = v98;
  sub_22D1B9E60(v31, v32, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  unint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v34((uint64_t)v22, 1, v33) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v27, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    if (v34(v32, 1, v33) == 1)
    {
      sub_22D1D08A0((uint64_t)v22, &qword_26853F310, type metadata accessor for PBGeneralMedication);
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v35 = &qword_268542030;
    uint64_t v36 = &qword_26853F310;
    uint64_t v37 = type metadata accessor for PBGeneralMedication;
LABEL_7:
    sub_22D1D05E4((uint64_t)v22, v35, v36, v37);
LABEL_34:
    swift_release();
    swift_release();
    char v84 = 0;
    return v84 & 1;
  }
  sub_22D1B9E60((uint64_t)v22, (uint64_t)v99, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if (v34(v32, 1, v33) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v27, &qword_26853F310, type metadata accessor for PBGeneralMedication);
    sub_22D1B9750((uint64_t)v99, type metadata accessor for PBGeneralMedication);
    goto LABEL_6;
  }
  uint64_t v38 = v97;
  sub_22D1D06E8(v32, v97, type metadata accessor for PBGeneralMedication);
  swift_retain();
  swift_retain();
  uint64_t v39 = (unsigned int (*)(void, void, void))v99;
  char v40 = sub_22D1B8590((uint64_t)v99, v38, type metadata accessor for PBGeneralMedication, sub_22D1812B4);
  sub_22D1B9750(v38, type metadata accessor for PBGeneralMedication);
  sub_22D1D08A0((uint64_t)v27, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  sub_22D1B9750((uint64_t)v39, type metadata accessor for PBGeneralMedication);
  sub_22D1D08A0((uint64_t)v22, &qword_26853F310, type metadata accessor for PBGeneralMedication);
  if ((v40 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_9:
  uint64_t v41 = (uint64_t *)(v28
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  uint64_t v44 = (void *)(v30
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
  swift_beginAccess();
  if ((v42 != *v44 || v43 != v44[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_34;
  }
  unint64_t v45 = (int *)(v28
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  int v46 = *v45;
  uint64_t v47 = (_DWORD *)(v30
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
  swift_beginAccess();
  if (v46 != *v47) {
    goto LABEL_34;
  }
  uint64_t v48 = (uint64_t *)(v28
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  swift_beginAccess();
  uint64_t v49 = *v48;
  uint64_t v50 = v48[1];
  uint64_t v51 = (void *)(v30
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
  swift_beginAccess();
  if ((v49 != *v51 || v50 != v51[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v52 = (uint64_t *)(v28
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  swift_beginAccess();
  uint64_t v53 = *v52;
  uint64_t v54 = (uint64_t *)(v30
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
  swift_beginAccess();
  uint64_t v55 = *v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v56 = sub_22D113350(v53, v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v56 & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v57 = v28
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  uint64_t v58 = v96;
  sub_22D1B9E60(v57, v96, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v59 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonEnded;
  swift_beginAccess();
  uint64_t v60 = v92;
  uint64_t v61 = v92 + *(int *)(v94 + 48);
  sub_22D1B9E60(v58, v92, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v62 = v60;
  sub_22D1B9E60(v59, v61, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v63 = *(void **)(v93 + 48);
  uint64_t v64 = v60;
  uint64_t v65 = v95;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v63)(v64, 1, v95) == 1)
  {
    sub_22D1D08A0(v58, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v63)(v61, 1, v65) == 1)
    {
      unsigned int v99 = v63;
      sub_22D1D08A0(v62, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_24;
    }
LABEL_22:
    sub_22D1D05E4(v62, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    goto LABEL_34;
  }
  uint64_t v66 = v90;
  sub_22D1B9E60(v62, v90, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v63)(v61, 1, v65) == 1)
  {
    sub_22D1D08A0(v96, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v66, type metadata accessor for PBHKConcept);
    goto LABEL_22;
  }
  unsigned int v99 = v63;
  uint64_t v67 = v88;
  sub_22D1D06E8(v61, v88, type metadata accessor for PBHKConcept);
  char v68 = sub_22D1B8590(v66, v67, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v67, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v96, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v66, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v62, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((v68 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_24:
  uint64_t v69 = v28
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  uint64_t v70 = v69;
  uint64_t v71 = v91;
  sub_22D1B9E60(v70, v91, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v72 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__statusReason;
  swift_beginAccess();
  uint64_t v22 = v89;
  uint64_t v73 = (uint64_t)&v89[*(int *)(v94 + 48)];
  sub_22D1B9E60(v71, (uint64_t)v89, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v98 = v73;
  uint64_t v74 = v95;
  sub_22D1B9E60(v72, v73, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v75 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v99;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v99)(v22, 1, v74) == 1)
  {
    sub_22D1D08A0(v71, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v75(v98, 1, v74) == 1)
    {
      sub_22D1D08A0((uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  uint64_t v76 = v87;
  sub_22D1B9E60((uint64_t)v22, v87, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v77 = v98;
  if (v75(v98, 1, v74) == 1)
  {
    sub_22D1D08A0(v91, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v76, type metadata accessor for PBHKConcept);
LABEL_29:
    uint64_t v35 = &qword_268541F88;
    uint64_t v36 = (unint64_t *)&qword_26853E848;
    uint64_t v37 = type metadata accessor for PBHKConcept;
    goto LABEL_7;
  }
  uint64_t v78 = v88;
  sub_22D1D06E8(v77, v88, type metadata accessor for PBHKConcept);
  char v79 = sub_22D1B8590(v76, v78, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v78, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v91, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v76, type metadata accessor for PBHKConcept);
  sub_22D1D08A0((uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((v79 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v80 = (uint64_t *)(v28
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  swift_beginAccess();
  uint64_t v81 = *v80;
  uint64_t v82 = v80[1];
  uint64_t v83 = (void *)(v30
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
  swift_beginAccess();
  if (v81 == *v83 && v82 == v83[1]) {
    char v84 = 1;
  }
  else {
    char v84 = sub_22D2BD660();
  }
  swift_release();
  swift_release();
  return v84 & 1;
}

uint64_t PBHKMedicationOrder.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKMedicationOrder, &qword_268540F10, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
}

uint64_t sub_22D188F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D0C0, &qword_268540418, a2);
}

unint64_t sub_22D188F84()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D188FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationOrder.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D188FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationOrder.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D188FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E28, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D18904C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D0B8, (uint64_t)qword_268540400, a1);
}

uint64_t sub_22D189070(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541478, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1890DC()
{
  sub_22D1B9F34(&qword_268541478, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
  return sub_22D2BC200();
}

uint64_t sub_22D189158(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKMedicationOrder, sub_22D1880DC) & 1;
}

unint64_t static PBHKDiagnosticTestResult.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_22D1891B8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540420);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540420);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_22D2C7A00;
  unint64_t v5 = v37 + v4;
  unint64_t v6 = v37 + v4 + *(int *)(v2 + 56);
  *(void *)(v37 + v4) = 1;
  *(void *)unint64_t v6 = "body_site";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v37 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "category";
  *(void *)(v10 + 8) = 8;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v37 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "comments";
  *((void *)v12 + 1) = 8;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v37 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "diagnostic_test";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v37 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "effective_end_date";
  *((void *)v16 + 1) = 18;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v37 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "effective_start_date";
  *((void *)v18 + 1) = 20;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v37 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "interpretation_deprecated";
  *((void *)v20 + 1) = 25;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v37 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "issue_date";
  *((void *)v22 + 1) = 10;
  v22[16] = 2;
  v9();
  uint64_t v23 = v37 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "method";
  *(void *)(v23 + 8) = 6;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v37 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)uint64_t v25 = "performers";
  *((void *)v25 + 1) = 10;
  v25[16] = 2;
  v9();
  uint64_t v26 = (void *)(v37 + v4 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 11;
  *(void *)uint64_t v27 = "referenceRanges";
  *((void *)v27 + 1) = 15;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v37 + v4 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 12;
  *(void *)uint64_t v29 = "status";
  *((void *)v29 + 1) = 6;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v37 + v4 + 12 * v3);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 13;
  *(void *)uint64_t v31 = "likelyDisplayString";
  *((void *)v31 + 1) = 19;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v37 + v4 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 14;
  *(void *)uint64_t v33 = "value";
  *((void *)v33 + 1) = 5;
  v33[16] = 2;
  v9();
  unint64_t v34 = (void *)(v37 + v4 + 14 * v3);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 15;
  *(void *)uint64_t v35 = "interpretation";
  *((void *)v35 + 1) = 14;
  v35[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBHKDiagnosticTestResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D0C8, (uint64_t)qword_268540420, a1);
}

uint64_t sub_22D189708(uint64_t a1)
{
  return sub_22D17B984(a1, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D18973C, &qword_268540438);
}

uint64_t sub_22D18973C()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  unint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  *unint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest, 1, 1, v2);
  unint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *unint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  uint64_t v7 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated, 1, 1, v2);
  uint64_t v8 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method, 1, 1, v2);
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers) = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges) = v9;
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  unint64_t v10 = (void *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  *unint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  uint64_t v11 = v0
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  uint64_t v12 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation) = v9;
  return v0;
}

uint64_t sub_22D189928(uint64_t a1)
{
  uint64_t v77 = a1;
  uint64_t v91 = type metadata accessor for PBHKInspectableValueCollection;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v90 = (uint64_t)&v73 - v4;
  uint64_t v76 = type metadata accessor for PBHKConcept;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v2);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v75 = (uint64_t)&v73 - v6;
  uint64_t v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  uint64_t v74 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  uint64_t v8 = type metadata accessor for PBHKConcept(0);
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  unint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  *unint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  uint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  *uint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  uint64_t v78 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  v9();
  uint64_t v12 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *uint64_t v12 = 0;
  v12[1] = 0xE000000000000000;
  uint64_t v13 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  char v79 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *uint64_t v13 = 0;
  v13[1] = 0xE000000000000000;
  uint64_t v80 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  v9();
  uint64_t v14 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  uint64_t v81 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  *uint64_t v14 = 0;
  v14[1] = 0xE000000000000000;
  uint64_t v83 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  v9();
  uint64_t v15 = v1;
  uint64_t v16 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  char v84 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  uint64_t v17 = MEMORY[0x263F8EE78];
  *uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v85 = (void *)(v15
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  *(void *)(v15
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges) = v17;
  uint64_t v86 = v15
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v9();
  uint64_t v18 = (void *)(v15
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  uint64_t v82 = (void *)(v15
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  void *v18 = 0;
  v18[1] = 0xE000000000000000;
  uint64_t v19 = v15
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  uint64_t v87 = v15
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  uint64_t v89 = v15;
  uint64_t v20 = type metadata accessor for PBHKInspectableValueCollection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v88 = (void *)(v15
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
  *(void *)(v15
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation) = v17;
  uint64_t v21 = v77;
  uint64_t v22 = v77
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  uint64_t v24 = v75;
  uint64_t v23 = v76;
  sub_22D1B9E60(v22, v75, (unint64_t *)&qword_26853E848, v76);
  uint64_t v25 = v74;
  swift_beginAccess();
  uint64_t v26 = v23;
  sub_22D1B9D9C(v24, v25, (unint64_t *)&qword_26853E848, v23);
  swift_endAccess();
  uint64_t v27 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  swift_beginAccess();
  *unint64_t v10 = v28;
  v10[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  swift_beginAccess();
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  swift_beginAccess();
  *uint64_t v11 = v31;
  v11[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = v21
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v33, v24, (unint64_t *)&qword_26853E848, v26);
  uint64_t v34 = v78;
  swift_beginAccess();
  uint64_t v35 = v26;
  sub_22D1B9D9C(v24, v34, (unint64_t *)&qword_26853E848, v26);
  swift_endAccess();
  uint64_t v36 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v37 = *v36;
  uint64_t v38 = v36[1];
  swift_beginAccess();
  *uint64_t v12 = v37;
  v12[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  uint64_t v40 = *v39;
  uint64_t v41 = v39[1];
  uint64_t v42 = v79;
  swift_beginAccess();
  *uint64_t v42 = v40;
  v42[1] = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = v21
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  sub_22D1B9E60(v43, v24, (unint64_t *)&qword_26853E848, v35);
  uint64_t v44 = v80;
  swift_beginAccess();
  uint64_t v45 = v24;
  sub_22D1B9D9C(v24, v44, (unint64_t *)&qword_26853E848, v35);
  swift_endAccess();
  int v46 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  uint64_t v47 = *v46;
  uint64_t v48 = v46[1];
  uint64_t v49 = v81;
  swift_beginAccess();
  *uint64_t v49 = v47;
  v49[1] = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = v21
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_22D1B9E60(v50, v45, (unint64_t *)&qword_26853E848, v35);
  uint64_t v51 = v83;
  swift_beginAccess();
  sub_22D1B9D9C(v45, v51, (unint64_t *)&qword_26853E848, v35);
  swift_endAccess();
  uint64_t v52 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  uint64_t v53 = *v52;
  uint64_t v54 = v84;
  swift_beginAccess();
  *uint64_t v54 = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  uint64_t v56 = *v55;
  uint64_t v57 = v85;
  swift_beginAccess();
  *uint64_t v57 = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = v21
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v58, v45, (unint64_t *)&qword_26853E848, v35);
  uint64_t v59 = v86;
  swift_beginAccess();
  sub_22D1B9D9C(v45, v59, (unint64_t *)&qword_26853E848, v35);
  swift_endAccess();
  uint64_t v60 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  swift_beginAccess();
  uint64_t v61 = *v60;
  uint64_t v62 = v60[1];
  uint64_t v63 = v82;
  swift_beginAccess();
  *uint64_t v63 = v61;
  v63[1] = v62;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = v21
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  uint64_t v65 = v64;
  uint64_t v67 = v90;
  uint64_t v66 = v91;
  sub_22D1B9E60(v65, v90, &qword_26853E880, v91);
  uint64_t v68 = v87;
  swift_beginAccess();
  sub_22D1B9D9C(v67, v68, &qword_26853E880, v66);
  swift_endAccess();
  uint64_t v69 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
  swift_beginAccess();
  uint64_t v70 = *v69;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v71 = v88;
  swift_beginAccess();
  *uint64_t v71 = v70;
  swift_bridgeObjectRelease();
  return v89;
}

uint64_t sub_22D18A1E8()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22D18A378()
{
  return sub_22D1AF83C(sub_22D18A1E8);
}

uint64_t PBHKDiagnosticTestResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D18A3F8);
}

uint64_t sub_22D18A3F8()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 4:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 2:
        case 3:
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 6:
        case 8:
        case 13:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 7:
        case 9:
        case 12:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          goto LABEL_15;
        case 10:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC140();
          goto LABEL_5;
        case 11:
          swift_beginAccess();
          type metadata accessor for PBHKReferenceRange(0);
          sub_22D1B9F34(&qword_2685414A8, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 14:
          swift_beginAccess();
          type metadata accessor for PBHKInspectableValueCollection(0);
          sub_22D1B9F34(&qword_2685414D8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
LABEL_15:
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 15:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC190();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKDiagnosticTestResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D18AA2C);
}

uint64_t sub_22D18AA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v100 = a4;
  uint64_t v97 = a2;
  uint64_t v98 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v85 = (uint64_t)&v82 - v7;
  uint64_t v86 = type metadata accessor for PBHKInspectableValueCollection(0);
  uint64_t v84 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v83 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v5);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v88 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v90 = (char *)&v82 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v92 = (uint64_t)&v82 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v94 = (uint64_t)&v82 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v82 - v18;
  uint64_t v20 = type metadata accessor for PBHKConcept(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v87 = (uint64_t)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v89 = (uint64_t)&v82 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v91 = (uint64_t)&v82 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v93 = (uint64_t)&v82 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v82 - v30;
  uint64_t v32 = a1;
  uint64_t v33 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v33, (uint64_t)v19, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v96 = v21 + 48;
  if (v95(v19, 1, v20) == 1)
  {
    uint64_t v82 = v20;
    sub_22D1D08A0((uint64_t)v19, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v34 = v99;
  }
  else
  {
    sub_22D1D06E8((uint64_t)v19, (uint64_t)v31, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    uint64_t v35 = v99;
    sub_22D2BC2E0();
    uint64_t v34 = v35;
    if (v35)
    {
      uint64_t v36 = (uint64_t)v31;
      return sub_22D1B9750(v36, type metadata accessor for PBHKConcept);
    }
    uint64_t v82 = v20;
    sub_22D1B9750((uint64_t)v31, type metadata accessor for PBHKConcept);
  }
  uint64_t v37 = (void *)(v32
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  unint64_t v38 = v37[1];
  uint64_t v39 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0) {
    uint64_t v39 = *v37 & 0xFFFFFFFFFFFFLL;
  }
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v34) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v40 = v32;
  uint64_t v41 = (void *)(v32
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  swift_beginAccess();
  unint64_t v42 = v41[1];
  uint64_t v43 = HIBYTE(v42) & 0xF;
  if ((v42 & 0x2000000000000000) == 0) {
    uint64_t v43 = *v41 & 0xFFFFFFFFFFFFLL;
  }
  if (v43)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v34) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v44 = v32
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  uint64_t v45 = v44;
  uint64_t v46 = v94;
  sub_22D1B9E60(v45, v94, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v47 = v82;
  if (v95((char *)v46, 1, v82) == 1)
  {
    sub_22D1D08A0(v46, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    uint64_t v48 = v46;
    uint64_t v49 = v93;
    sub_22D1D06E8(v48, v93, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    if (v34)
    {
LABEL_34:
      uint64_t v36 = v49;
      return sub_22D1B9750(v36, type metadata accessor for PBHKConcept);
    }
    sub_22D1B9750(v49, type metadata accessor for PBHKConcept);
  }
  uint64_t v50 = (void *)(v32
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  unint64_t v51 = v50[1];
  uint64_t v52 = HIBYTE(v51) & 0xF;
  if ((v51 & 0x2000000000000000) == 0) {
    uint64_t v52 = *v50 & 0xFFFFFFFFFFFFLL;
  }
  if (v52)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v34) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v53 = (void *)(v40
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  unint64_t v54 = v53[1];
  uint64_t v55 = HIBYTE(v54) & 0xF;
  if ((v54 & 0x2000000000000000) == 0) {
    uint64_t v55 = *v53 & 0xFFFFFFFFFFFFLL;
  }
  if (v55)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (!v34)
    {
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_31:
  uint64_t v56 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  uint64_t v57 = v56;
  uint64_t v58 = v92;
  sub_22D1B9E60(v57, v92, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v95((char *)v58, 1, v47) != 1)
  {
    uint64_t v59 = v58;
    uint64_t v49 = v91;
    sub_22D1D06E8(v59, v91, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    if (!v34)
    {
      sub_22D1B9750(v49, type metadata accessor for PBHKConcept);
      goto LABEL_37;
    }
    goto LABEL_34;
  }
  sub_22D1D08A0(v58, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_37:
  uint64_t v61 = (void *)(v40
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  unint64_t v62 = v61[1];
  uint64_t v63 = HIBYTE(v62) & 0xF;
  if ((v62 & 0x2000000000000000) == 0) {
    uint64_t v63 = *v61 & 0xFFFFFFFFFFFFLL;
  }
  if (v63)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v34) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v64 = (uint64_t)v90;
  uint64_t v65 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  sub_22D1B9E60(v65, v64, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v95((char *)v64, 1, v47) == 1)
  {
    sub_22D1D08A0(v64, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    uint64_t v66 = v89;
    sub_22D1D06E8(v64, v89, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750(v66, type metadata accessor for PBHKConcept);
    if (v34) {
      return result;
    }
  }
  uint64_t v67 = v40
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers;
  swift_beginAccess();
  if (!*(void *)(*(void *)v67 + 16)
    || (swift_bridgeObjectRetain(), sub_22D2BC290(), uint64_t result = swift_bridgeObjectRelease(), !v34))
  {
    uint64_t v68 = v40
        + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges;
    swift_beginAccess();
    if (!*(void *)(*(void *)v68 + 16)
      || (type metadata accessor for PBHKReferenceRange(0),
          sub_22D1B9F34(&qword_2685414A8, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange),
          swift_bridgeObjectRetain(),
          sub_22D2BC2D0(),
          uint64_t result = swift_bridgeObjectRelease(),
          !v34))
    {
      uint64_t v69 = v40
          + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
      swift_beginAccess();
      uint64_t v70 = v69;
      uint64_t v71 = v88;
      sub_22D1B9E60(v70, v88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if (v95((char *)v71, 1, v47) == 1)
      {
        sub_22D1D08A0(v71, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      }
      else
      {
        uint64_t v72 = v71;
        uint64_t v73 = v87;
        sub_22D1D06E8(v72, v87, type metadata accessor for PBHKConcept);
        sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
        sub_22D2BC2E0();
        uint64_t result = sub_22D1B9750(v73, type metadata accessor for PBHKConcept);
        if (v34) {
          return result;
        }
      }
      uint64_t v74 = (void *)(v40
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
      swift_beginAccess();
      unint64_t v75 = v74[1];
      uint64_t v76 = HIBYTE(v75) & 0xF;
      if ((v75 & 0x2000000000000000) == 0) {
        uint64_t v76 = *v74 & 0xFFFFFFFFFFFFLL;
      }
      if (!v76 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v34))
      {
        uint64_t v77 = v40
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
        swift_beginAccess();
        uint64_t v78 = v85;
        sub_22D1B9E60(v77, v85, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v78, 1, v86) == 1)
        {
          sub_22D1D08A0(v78, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
        }
        else
        {
          uint64_t v79 = v78;
          uint64_t v80 = v83;
          sub_22D1D06E8(v79, v83, type metadata accessor for PBHKInspectableValueCollection);
          sub_22D1B9F34(&qword_2685414D8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
          sub_22D2BC2E0();
          uint64_t result = sub_22D1B9750(v80, type metadata accessor for PBHKInspectableValueCollection);
          if (v34) {
            return result;
          }
        }
        uint64_t v81 = v40
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation;
        uint64_t result = swift_beginAccess();
        if (*(void *)(*(void *)v81 + 16))
        {
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          swift_bridgeObjectRetain();
          sub_22D2BC2D0();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_22D18B938(uint64_t a1, uint64_t a2)
{
  uint64_t v194 = a2;
  uint64_t v3 = type metadata accessor for PBHKInspectableValueCollection(0);
  uint64_t v176 = *(void *)(v3 - 8);
  uint64_t v177 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v172 = (uint64_t)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_26853FFC0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v174 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v178 = (uint64_t)&v170 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v173 = (uint64_t)&v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v175 = (uint64_t)&v170 - v11;
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v195 = v12;
  uint64_t v196 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v192 = (uint64_t)&v170 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v16 = v15;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v180 = (uint64_t)&v170 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v182 = (uint64_t)&v170 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v186 = (uint64_t)&v170 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v189 = (uint64_t)&v170 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v170 - v25;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v7);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v179 = (uint64_t)&v170 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v183 = (uint64_t)&v170 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v181 = (uint64_t)&v170 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v184 = (uint64_t)&v170 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v185 = (uint64_t)&v170 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v187 = (uint64_t)&v170 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v188 = (uint64_t)&v170 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v191 = (uint64_t)&v170 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v193 = (uint64_t)&v170 - v45;
  MEMORY[0x270FA5388](v44);
  uint64_t v47 = (char *)&v170 - v46;
  uint64_t v48 = a1;
  uint64_t v49 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  sub_22D1B9E60(v49, (uint64_t)v47, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v50 = v194;
  uint64_t v51 = v194
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
  swift_beginAccess();
  uint64_t v190 = v16;
  uint64_t v52 = (uint64_t)&v26[*(int *)(v16 + 48)];
  sub_22D1B9E60((uint64_t)v47, (uint64_t)v26, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v53 = v51;
  uint64_t v55 = v195;
  uint64_t v54 = v196;
  sub_22D1B9E60(v53, v52, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  uint64_t v56 = v54 + 48;
  uint64_t v57 = v58;
  if (v58((uint64_t)v26, 1, v55) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v47, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v171 = v57;
    unsigned int v59 = v57(v52, 1, v55);
    uint64_t v60 = v50;
    uint64_t v61 = (uint64_t)v26;
    if (v59 == 1)
    {
      uint64_t v196 = v56;
      sub_22D1D08A0((uint64_t)v26, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v63 = &qword_268541F88;
    uint64_t v64 = (unint64_t *)&qword_26853E848;
    uint64_t v65 = type metadata accessor for PBHKConcept;
    uint64_t v66 = v61;
LABEL_7:
    sub_22D1D05E4(v66, v63, v64, v65);
    goto LABEL_8;
  }
  uint64_t v62 = v50;
  sub_22D1B9E60((uint64_t)v26, v193, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v61 = (uint64_t)v26;
  if (v57(v52, 1, v55) == 1)
  {
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v47, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v193, type metadata accessor for PBHKConcept);
    goto LABEL_6;
  }
  uint64_t v171 = v57;
  uint64_t v196 = v56;
  uint64_t v69 = v52;
  uint64_t v70 = v192;
  sub_22D1D06E8(v69, v192, type metadata accessor for PBHKConcept);
  uint64_t v71 = v48;
  swift_retain();
  swift_retain();
  uint64_t v72 = v193;
  char v73 = sub_22D1B8590(v193, v70, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v70, type metadata accessor for PBHKConcept);
  sub_22D1D08A0((uint64_t)v47, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v74 = v72;
  uint64_t v48 = v71;
  sub_22D1B9750(v74, type metadata accessor for PBHKConcept);
  uint64_t v60 = v62;
  sub_22D1D08A0(v61, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((v73 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  unint64_t v75 = (uint64_t *)(v48
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  uint64_t v76 = *v75;
  uint64_t v77 = v75[1];
  uint64_t v78 = (void *)(v60
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
  swift_beginAccess();
  if ((v76 != *v78 || v77 != v78[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v79 = (uint64_t *)(v48
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  swift_beginAccess();
  uint64_t v80 = *v79;
  uint64_t v81 = v79[1];
  uint64_t v82 = (void *)(v60
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
  swift_beginAccess();
  if ((v80 != *v82 || v81 != v82[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v83 = v48
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  uint64_t v84 = v191;
  sub_22D1B9E60(v83, v191, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v85 = v60
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  uint64_t v86 = v189;
  uint64_t v87 = v189 + *(int *)(v190 + 48);
  sub_22D1B9E60(v84, v189, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9E60(v85, v87, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v88 = v195;
  uint64_t v89 = v196;
  uint64_t v90 = v171;
  if (v171(v86, 1, v195) == 1)
  {
    sub_22D1D08A0(v84, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v91 = v90;
    if (v90(v87, 1, v88) == 1)
    {
      uint64_t v196 = v89;
      sub_22D1D08A0(v86, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_24;
    }
    goto LABEL_22;
  }
  uint64_t v92 = v188;
  sub_22D1B9E60(v86, v188, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v196 = v89;
  uint64_t v91 = v90;
  if (v90(v87, 1, v88) == 1)
  {
    sub_22D1D08A0(v191, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v92, type metadata accessor for PBHKConcept);
LABEL_22:
    uint64_t v63 = &qword_268541F88;
    uint64_t v64 = (unint64_t *)&qword_26853E848;
    uint64_t v65 = type metadata accessor for PBHKConcept;
    uint64_t v66 = v86;
    goto LABEL_7;
  }
  uint64_t v93 = v192;
  sub_22D1D06E8(v87, v192, type metadata accessor for PBHKConcept);
  char v94 = sub_22D1B8590(v92, v93, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v93, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v191, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v92, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v86, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((v94 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_24:
  uint64_t v95 = (uint64_t *)(v48
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v96 = *v95;
  uint64_t v97 = v95[1];
  uint64_t v98 = (void *)(v60
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  if ((v96 != *v98 || v97 != v98[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v99 = (uint64_t *)(v48
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  uint64_t v100 = *v99;
  uint64_t v101 = v99[1];
  unsigned int v102 = (void *)(v60
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  if ((v100 != *v102 || v101 != v102[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v103 = v48
       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  uint64_t v104 = v187;
  sub_22D1B9E60(v103, v187, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v105 = v60
       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretationDeprecated;
  swift_beginAccess();
  uint64_t v106 = v186;
  uint64_t v107 = v186 + *(int *)(v190 + 48);
  sub_22D1B9E60(v104, v186, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v108 = v105;
  uint64_t v109 = v106;
  sub_22D1B9E60(v108, v107, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v110 = v195;
  if (v91(v106, 1, v195) == 1)
  {
    sub_22D1D08A0(v104, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v111 = v91;
    if (v91(v107, 1, v110) != 1) {
      goto LABEL_46;
    }
    sub_22D1D08A0(v109, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    uint64_t v112 = v185;
    sub_22D1B9E60(v106, v185, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v111 = v91;
    if (v91(v107, 1, v110) == 1)
    {
      uint64_t v113 = v187;
LABEL_44:
      sub_22D1D08A0(v113, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      uint64_t v129 = v112;
LABEL_45:
      sub_22D1B9750(v129, type metadata accessor for PBHKConcept);
      goto LABEL_46;
    }
    uint64_t v114 = v192;
    sub_22D1D06E8(v107, v192, type metadata accessor for PBHKConcept);
    char v115 = sub_22D1B8590(v112, v114, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
    sub_22D1B9750(v114, type metadata accessor for PBHKConcept);
    sub_22D1D08A0(v187, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v112, type metadata accessor for PBHKConcept);
    sub_22D1D08A0(v109, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if ((v115 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v116 = (uint64_t *)(v48
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  uint64_t v117 = *v116;
  uint64_t v118 = v116[1];
  uint64_t v119 = (void *)(v60
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  if ((v117 != *v119 || v118 != v119[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v120 = v48
       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  uint64_t v121 = v184;
  sub_22D1B9E60(v120, v184, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v122 = v60
       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__method;
  swift_beginAccess();
  uint64_t v109 = v182;
  uint64_t v123 = v182 + *(int *)(v190 + 48);
  sub_22D1B9E60(v121, v182, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9E60(v122, v123, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v124 = v195;
  unsigned int v125 = v111(v109, 1, v195);
  uint64_t v171 = v111;
  if (v125 == 1)
  {
    sub_22D1D08A0(v121, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    unsigned int v126 = v111(v123, 1, v124);
    uint64_t v127 = v183;
    if (v126 == 1)
    {
      sub_22D1D08A0(v109, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_48;
    }
LABEL_46:
    uint64_t v63 = &qword_268541F88;
    uint64_t v64 = (unint64_t *)&qword_26853E848;
    uint64_t v65 = type metadata accessor for PBHKConcept;
    uint64_t v66 = v109;
    goto LABEL_7;
  }
  uint64_t v112 = v181;
  sub_22D1B9E60(v109, v181, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  unsigned int v128 = v111(v123, 1, v124);
  uint64_t v127 = v183;
  if (v128 == 1)
  {
    uint64_t v113 = v184;
    goto LABEL_44;
  }
  uint64_t v130 = v192;
  sub_22D1D06E8(v123, v192, type metadata accessor for PBHKConcept);
  char v131 = sub_22D1B8590(v112, v130, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v130, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v184, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v112, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v109, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((v131 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_48:
  uint64_t v132 = (void **)(v48
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  uint64_t v133 = *v132;
  uint64_t v134 = (void **)(v60
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  if ((sub_22D10F3F8(v133, *v134) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v135 = (uint64_t *)(v48
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  uint64_t v136 = *v135;
  uint64_t v137 = (uint64_t *)(v60
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  uint64_t v138 = *v137;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v139 = sub_22D113CCC(v136, v138);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v139 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v140 = v48
       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v140, v127, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v141 = v60
       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  uint64_t v142 = v127;
  uint64_t v143 = v180;
  uint64_t v144 = v180 + *(int *)(v190 + 48);
  sub_22D1B9E60(v142, v180, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v145 = v141;
  uint64_t v109 = v143;
  sub_22D1B9E60(v145, v144, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v146 = v195;
  v147 = v171;
  if (v171(v143, 1, v195) == 1)
  {
    sub_22D1D08A0(v142, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v147(v144, 1, v146) == 1)
    {
      sub_22D1D08A0(v143, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_56;
    }
    goto LABEL_46;
  }
  uint64_t v148 = v143;
  uint64_t v149 = v179;
  sub_22D1B9E60(v148, v179, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v147(v144, 1, v146) == 1)
  {
    sub_22D1D08A0(v183, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v129 = v149;
    goto LABEL_45;
  }
  uint64_t v150 = v192;
  sub_22D1D06E8(v144, v192, type metadata accessor for PBHKConcept);
  char v151 = sub_22D1B8590(v149, v150, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v150, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v183, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v149, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v109, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((v151 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_56:
  uint64_t v152 = (uint64_t *)(v48
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  swift_beginAccess();
  uint64_t v153 = *v152;
  uint64_t v154 = v152[1];
  v155 = (void *)(v60
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
  swift_beginAccess();
  if ((v153 != *v155 || v154 != v155[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v156 = v48
       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  uint64_t v157 = v175;
  sub_22D1B9E60(v156, v175, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v158 = v60
       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  uint64_t v159 = v178;
  uint64_t v160 = v178 + *(int *)(v174 + 48);
  sub_22D1B9E60(v157, v178, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  sub_22D1B9E60(v158, v160, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v161 = v177;
  uint64_t v162 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48);
  if (v162(v159, 1, v177) == 1)
  {
    sub_22D1D08A0(v157, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
    if (v162(v160, 1, v161) == 1)
    {
      sub_22D1D08A0(v159, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
LABEL_66:
      v166 = (uint64_t *)(v48
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
      swift_beginAccess();
      uint64_t v167 = *v166;
      uint64_t v168 = (uint64_t *)(v60
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
      swift_beginAccess();
      uint64_t v169 = *v168;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v67 = sub_22D113350(v167, v169);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return v67 & 1;
    }
    goto LABEL_64;
  }
  uint64_t v163 = v173;
  sub_22D1B9E60(v159, v173, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  if (v162(v160, 1, v161) == 1)
  {
    sub_22D1D08A0(v157, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
    sub_22D1B9750(v163, type metadata accessor for PBHKInspectableValueCollection);
LABEL_64:
    uint64_t v63 = &qword_26853FFC0;
    uint64_t v64 = &qword_26853E880;
    uint64_t v65 = type metadata accessor for PBHKInspectableValueCollection;
    uint64_t v66 = v159;
    goto LABEL_7;
  }
  uint64_t v164 = v172;
  sub_22D1D06E8(v160, v172, type metadata accessor for PBHKInspectableValueCollection);
  char v165 = sub_22D1B8590(v163, v164, type metadata accessor for PBHKInspectableValueCollection, sub_22D190168);
  sub_22D1B9750(v164, type metadata accessor for PBHKInspectableValueCollection);
  sub_22D1D08A0(v157, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  sub_22D1B9750(v163, type metadata accessor for PBHKInspectableValueCollection);
  sub_22D1D08A0(v159, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  if (v165) {
    goto LABEL_66;
  }
LABEL_8:
  swift_release();
  swift_release();
  char v67 = 0;
  return v67 & 1;
}

uint64_t PBHKDiagnosticTestResult.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKDiagnosticTestResult, &qword_268540F18, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
}

uint64_t sub_22D18D2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D0D0, &qword_268540438, a2);
}

unint64_t sub_22D18D2D0()
{
  return 0xD000000000000031;
}

uint64_t sub_22D18D2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKDiagnosticTestResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D18D304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKDiagnosticTestResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D18D31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E20, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D18D398@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D0C8, (uint64_t)qword_268540420, a1);
}

uint64_t sub_22D18D3BC(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541490, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D18D428()
{
  sub_22D1B9F34(&qword_268541490, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
  return sub_22D2BC200();
}

uint64_t sub_22D18D4A4(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKDiagnosticTestResult, sub_22D18B938) & 1;
}

unint64_t static PBHKReferenceRange.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_22D18D504()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540440);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540440);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "identifier";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "valueRange";
  *((void *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHKReferenceRange._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D0D8, (uint64_t)qword_268540440, a1);
}

uint64_t sub_22D18D708(uint64_t a1)
{
  return sub_22D18D744(a1, (void (*)(void))type metadata accessor for PBHKReferenceRange._StorageClass, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection, &qword_268540458);
}

uint64_t sub_22D18D744(uint64_t a1, void (*a2)(void), void *a3, uint64_t (*a4)(void), uint64_t *a5)
{
  a2(0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0xE000000000000000;
  uint64_t v9 = v8 + *a3;
  uint64_t v10 = a4(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *a5 = v8;
  return result;
}

uint64_t sub_22D18D7E8(uint64_t a1)
{
  return sub_22D18D824(a1, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_22D18D824(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), void *a4, uint64_t (*a5)(void))
{
  uint64_t v21 = a4;
  sub_22D167880(0, a2, a3, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v20 - v12;
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0xE000000000000000;
  uint64_t v14 = v5 + *a4;
  uint64_t v15 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v5 + 16) = v16;
  *(void *)(v5 + 24) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a1 + *v21;
  swift_beginAccess();
  sub_22D1B9E60(v18, (uint64_t)v13, a2, a3);
  swift_release();
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v13, v14, a2, a3);
  swift_endAccess();
  return v5;
}

uint64_t sub_22D18D9E8()
{
  return sub_22D18DA10(&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_22D18DA10(void *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v3 + *a1, a2, a3);
  return swift_deallocClassInstance();
}

uint64_t PBHKReferenceRange.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = *(int *)(type metadata accessor for PBHKReferenceRange(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKReferenceRange._StorageClass(0);
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_22D18D824(v2, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange, type metadata accessor for PBHKInspectableValueCollection);
    swift_release();
  }
  swift_retain();
  sub_22D18DBA0();
  return swift_release();
}

uint64_t sub_22D18DBA0()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_22D2BC170();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBHKInspectableValueCollection(0);
    sub_22D1B9F34(&qword_2685414D8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
    uint64_t v4 = v3;
    sub_22D2BC1A0();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBHKReferenceRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKReferenceRange, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D18DD34);
}

uint64_t sub_22D18DD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v19 = type metadata accessor for PBHKInspectableValueCollection(0);
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  v18[0] = a3;
  v18[1] = a4;
  if (!v15 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    uint64_t v17 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
    swift_beginAccess();
    sub_22D1B9E60(v17, (uint64_t)v10, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v19) == 1)
    {
      return sub_22D1D08A0((uint64_t)v10, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
    }
    else
    {
      sub_22D1D06E8((uint64_t)v10, (uint64_t)v13, type metadata accessor for PBHKInspectableValueCollection);
      sub_22D1B9F34(&qword_2685414D8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
      sub_22D2BC2E0();
      return sub_22D1B9750((uint64_t)v13, type metadata accessor for PBHKInspectableValueCollection);
    }
  }
  return result;
}

uint64_t static PBHKReferenceRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKReferenceRange, (uint64_t (*)(uint64_t, uint64_t))sub_22D18E048) & 1;
}

BOOL sub_22D18E048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBHKInspectableValueCollection(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v29 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_26853FFC0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - v9;
  sub_22D167880(0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v28 - v15;
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v17 == *(void *)(a2 + 16) && v18 == *(void *)(a2 + 24)
    || (v19 = sub_22D2BD660(), BOOL result = 0, (v19 & 1) != 0))
  {
    uint64_t v28 = v14;
    uint64_t v21 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
    swift_beginAccess();
    sub_22D1B9E60(v21, (uint64_t)v16, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
    uint64_t v22 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBHKReferenceRangeP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__valueRange;
    swift_beginAccess();
    uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_22D1B9E60((uint64_t)v16, (uint64_t)v10, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
    sub_22D1B9E60(v22, v23, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v24((uint64_t)v10, 1, v4) == 1)
    {
      sub_22D1D08A0((uint64_t)v16, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
      if (v24(v23, 1, v4) == 1)
      {
        sub_22D1D08A0((uint64_t)v10, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
        return 1;
      }
    }
    else
    {
      uint64_t v25 = (uint64_t)v28;
      sub_22D1B9E60((uint64_t)v10, (uint64_t)v28, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
      if (v24(v23, 1, v4) != 1)
      {
        uint64_t v26 = v29;
        sub_22D1D06E8(v23, v29, type metadata accessor for PBHKInspectableValueCollection);
        char v27 = sub_22D1B8590(v25, v26, type metadata accessor for PBHKInspectableValueCollection, sub_22D190168);
        sub_22D1B9750(v26, type metadata accessor for PBHKInspectableValueCollection);
        sub_22D1D08A0((uint64_t)v16, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
        sub_22D1B9750(v25, type metadata accessor for PBHKInspectableValueCollection);
        sub_22D1D08A0((uint64_t)v10, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
        return (v27 & 1) != 0;
      }
      sub_22D1D08A0((uint64_t)v16, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
      sub_22D1B9750(v25, type metadata accessor for PBHKInspectableValueCollection);
    }
    sub_22D1D05E4((uint64_t)v10, &qword_26853FFC0, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection);
    return 0;
  }
  return result;
}

uint64_t PBHKReferenceRange.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKReferenceRange, &qword_268540F20, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
}

uint64_t sub_22D18E568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D0E0, &qword_268540458, a2);
}

unint64_t sub_22D18E58C()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_22D18E5A8()
{
  return PBHKReferenceRange.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D18E5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKReferenceRange.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D18E5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E18, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D18E654@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D0D8, (uint64_t)qword_268540440, a1);
}

uint64_t sub_22D18E678(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685414A8, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D18E6E4()
{
  sub_22D1B9F34(&qword_2685414A8, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
  return sub_22D2BC200();
}

uint64_t sub_22D18E760(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKReferenceRange, (uint64_t (*)(uint64_t, uint64_t))sub_22D18E048) & 1;
}

unint64_t static PBHKRatioValue.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_22D18E7C0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540460);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540460);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "numerator";
  *(void *)(v7 + 8) = 9;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "denominator";
  *((void *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHKRatioValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D0E8, (uint64_t)qword_268540460, a1);
}

uint64_t PBHKRatioValue.decodeMessage<A>(decoder:)()
{
  return sub_22D1A9FF8();
}

uint64_t PBHKRatioValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D18EA08(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKRatioValue);
}

uint64_t sub_22D18EA08(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  unint64_t v7 = v4[1];
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = *v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8 || (uint64_t result = sub_22D2BC2B0(), !v5))
  {
    unint64_t v10 = v4[3];
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v4[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v11 || (uint64_t result = sub_22D2BC2B0(), !v5))
    {
      a4(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t static PBHKRatioValue.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B7530(a1, a2, type metadata accessor for PBHKRatioValue) & 1;
}

uint64_t PBHKRatioValue.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKRatioValue, &qword_268540F28, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
}

unint64_t sub_22D18EB6C()
{
  return 0xD000000000000027;
}

uint64_t sub_22D18EB88()
{
  return PBPatientMeta.HumanName.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D18EBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKRatioValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D18EBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E10, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D18EC34@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D0E8, (uint64_t)qword_268540460, a1);
}

uint64_t sub_22D18EC58(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685414C0, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D18ECC4()
{
  sub_22D1B9F34(&qword_2685414C0, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
  return sub_22D2BC200();
}

uint64_t sub_22D18ED40(char *a1, char *a2)
{
  return sub_22D1B7530(a1, a2, type metadata accessor for PBHKRatioValue) & 1;
}

unint64_t static PBHKInspectableValueCollection.protoMessageName.getter()
{
  return 0xD000000000000037;
}

uint64_t sub_22D18ED8C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540478);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540478);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_22D2C79F0;
  unint64_t v5 = v19 + v4 + *(int *)(v2 + 56);
  *(void *)(v19 + v4) = 1;
  *(void *)unint64_t v5 = "type";
  *(void *)(v5 + 8) = 4;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_22D2BC2F0();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v19 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v19 + v4 + v3) = 2;
  *(void *)unint64_t v9 = "value";
  *(void *)(v9 + 8) = 5;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v19 + v4 + 2 * v3);
  uint64_t v11 = (char *)v10 + *(int *)(v2 + 56);
  *unint64_t v10 = 3;
  *(void *)uint64_t v11 = "min";
  *((void *)v11 + 1) = 3;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v19 + v4 + 3 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "max";
  *((void *)v13 + 1) = 3;
  v13[16] = 2;
  v8();
  unint64_t v14 = (void *)(v19 + v4 + 4 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *unint64_t v14 = 5;
  *(void *)uint64_t v15 = "inspectableValues";
  *((void *)v15 + 1) = 17;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v19 + v4 + 5 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 6;
  *(void *)uint64_t v17 = "unitString";
  *((void *)v17 + 1) = 10;
  v17[16] = 2;
  v8();
  return sub_22D2BC300();
}

uint64_t static PBHKInspectableValueCollection._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D0F0, (uint64_t)qword_268540478, a1);
}

uint64_t sub_22D18F088()
{
  type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  uint64_t v2 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min, 1, 1, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max, 1, 1, v2);
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues) = MEMORY[0x263F8EE78];
  unint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  *unint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  qword_268540490 = v0;
  return result;
}

uint64_t sub_22D18F1A0(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v24 - v5;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  uint64_t v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  uint64_t v8 = type metadata accessor for PBHKInspectableValue(0);
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v1+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min, 1, 1, v8);
  uint64_t v24 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  v9();
  uint64_t v25 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
  void *v25 = MEMORY[0x263F8EE78];
  uint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  *uint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 16);
  LOBYTE(v9) = *(unsigned char *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v12;
  *(unsigned char *)(v1 + 24) = (_BYTE)v9;
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v13, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v6, v7, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_22D1B9E60(v14, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v6, v10, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v16 = v24;
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v6, v16, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  uint64_t v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
  swift_beginAccess();
  uint64_t v18 = *v17;
  uint64_t v19 = v25;
  swift_beginAccess();
  void *v19 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  swift_beginAccess();
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *uint64_t v11 = v22;
  v11[1] = v21;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_22D18F568()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKInspectableValueCollection.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKInspectableValueCollection, (void (*)(void))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_22D18F1A0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D18F6BC);
}

uint64_t sub_22D18F6BC()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          sub_22D1D0590();
          uint64_t v4 = v3;
          sub_22D2BC0D0();
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
          swift_beginAccess();
          type metadata accessor for PBHKInspectableValue(0);
          sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          type metadata accessor for PBHKInspectableValue(0);
          sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
          uint64_t v4 = v3;
          sub_22D2BC190();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_22D2BC170();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKInspectableValueCollection.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKInspectableValueCollection, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D18FA60);
}

uint64_t sub_22D18FA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v44 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v42 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v49 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t v16 = *(void *)(v49 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v49);
  uint64_t v42 = (uint64_t)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v43 = (uint64_t)&v42 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v42 - v21;
  swift_beginAccess();
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  if (v23)
  {
    char v24 = *(unsigned char *)(a1 + 24);
    uint64_t v47 = v23;
    char v48 = v24;
    sub_22D1D0590();
    uint64_t result = sub_22D2BC240();
    uint64_t v26 = v49;
    if (v4) {
      return result;
    }
  }
  else
  {
    uint64_t v26 = v49;
  }
  uint64_t v27 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v27, (uint64_t)v15, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v28(v15, 1, v26) == 1)
  {
    sub_22D1D08A0((uint64_t)v15, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v15, (uint64_t)v22, type metadata accessor for PBHKInspectableValue);
    sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750((uint64_t)v22, type metadata accessor for PBHKInspectableValue);
    if (v4) {
      return result;
    }
  }
  uint64_t v29 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
  swift_beginAccess();
  sub_22D1B9E60(v29, (uint64_t)v13, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  if (v28(v13, 1, v26) == 1)
  {
    sub_22D1D08A0((uint64_t)v13, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    uint64_t v30 = v43;
    sub_22D1D06E8((uint64_t)v13, v43, type metadata accessor for PBHKInspectableValue);
    sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750(v30, type metadata accessor for PBHKInspectableValue);
    if (v4) {
      return result;
    }
  }
  uint64_t v31 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
  swift_beginAccess();
  uint64_t v32 = v31;
  uint64_t v33 = v49;
  uint64_t v34 = v44;
  sub_22D1B9E60(v32, v44, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  if (v28((char *)v34, 1, v33) == 1)
  {
    sub_22D1D08A0(v34, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    uint64_t v35 = v34;
    uint64_t v36 = v42;
    sub_22D1D06E8(v35, v42, type metadata accessor for PBHKInspectableValue);
    sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750(v36, type metadata accessor for PBHKInspectableValue);
    if (v4) {
      return result;
    }
  }
  uint64_t v37 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues;
  swift_beginAccess();
  if (!*(void *)(*(void *)v37 + 16)
    || (sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue),
        swift_bridgeObjectRetain(),
        sub_22D2BC2D0(),
        uint64_t result = swift_bridgeObjectRelease(),
        !v4))
  {
    uint64_t v38 = (uint64_t *)(a1
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
    uint64_t result = swift_beginAccess();
    uint64_t v40 = *v38;
    unint64_t v39 = v38[1];
    uint64_t v41 = HIBYTE(v39) & 0xF;
    if ((v39 & 0x2000000000000000) == 0) {
      uint64_t v41 = v40 & 0xFFFFFFFFFFFFLL;
    }
    if (v41)
    {
      swift_bridgeObjectRetain();
      sub_22D2BC2B0();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t static PBHKInspectableValueCollection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKInspectableValueCollection, sub_22D190168) & 1;
}

uint64_t sub_22D190168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t v88 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v87 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F80, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v89 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v86 = (uint64_t)&v77 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v77 - v12;
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v81 = (uint64_t)&v77 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v82 = (uint64_t)&v77 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v85 = (uint64_t)&v77 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v77 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v77 - v27;
  swift_beginAccess();
  uint64_t v29 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v30 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a2 + 24) == 1)
  {
    switch(v30)
    {
      case 1:
        if (v29 == 1) {
          goto LABEL_6;
        }
        goto LABEL_4;
      case 2:
        if (v29 == 2) {
          goto LABEL_6;
        }
        goto LABEL_4;
      case 3:
        if (v29 == 3) {
          goto LABEL_6;
        }
        goto LABEL_4;
      case 4:
        if (v29 == 4) {
          goto LABEL_6;
        }
        goto LABEL_4;
      default:
        if (v29) {
          goto LABEL_4;
        }
        goto LABEL_6;
    }
  }
  if (v29 == v30)
  {
LABEL_6:
    uint64_t v78 = v17;
    uint64_t v79 = v9;
    uint64_t v83 = v4;
    uint64_t v32 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
    swift_beginAccess();
    uint64_t v33 = a1;
    sub_22D1B9E60(v32, (uint64_t)v28, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
    uint64_t v34 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
    swift_beginAccess();
    uint64_t v35 = (uint64_t)&v13[*(int *)(v89 + 48)];
    sub_22D1B9E60((uint64_t)v28, (uint64_t)v13, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
    uint64_t v36 = v34;
    uint64_t v37 = v83;
    sub_22D1B9E60(v36, v35, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
    uint64_t v38 = v88 + 48;
    unint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
    if (v39((uint64_t)v13, 1, v37) == 1)
    {
      swift_retain();
      swift_retain();
      sub_22D1D08A0((uint64_t)v28, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
      unsigned int v40 = v39(v35, 1, v37);
      uint64_t v41 = v39;
      uint64_t v42 = v33;
      if (v40 == 1)
      {
        uint64_t v80 = v41;
        uint64_t v43 = v38;
        uint64_t v84 = v42;
        sub_22D1D08A0((uint64_t)v13, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
LABEL_14:
        uint64_t v47 = v84
            + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
        swift_beginAccess();
        uint64_t v48 = v85;
        sub_22D1B9E60(v47, v85, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
        uint64_t v49 = a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__min;
        swift_beginAccess();
        uint64_t v50 = v86;
        uint64_t v51 = v86 + *(int *)(v89 + 48);
        sub_22D1B9E60(v48, v86, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
        sub_22D1B9E60(v49, v51, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
        uint64_t v52 = v80;
        if (v80(v50, 1, v37) == 1)
        {
          sub_22D1D08A0(v48, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
          if (v52(v51, 1, v37) == 1)
          {
            uint64_t v80 = v52;
            uint64_t v88 = v43;
            sub_22D1D08A0(v50, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
LABEL_29:
            uint64_t v56 = v84
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
            swift_beginAccess();
            uint64_t v57 = v81;
            sub_22D1B9E60(v56, v81, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
            uint64_t v58 = a2
                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__max;
            swift_beginAccess();
            uint64_t v59 = (uint64_t)v79;
            uint64_t v60 = (uint64_t)&v79[*(int *)(v89 + 48)];
            sub_22D1B9E60(v57, (uint64_t)v79, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
            sub_22D1B9E60(v58, v60, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
            uint64_t v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v80;
            if (v80(v59, 1, v37) == 1)
            {
              sub_22D1D08A0(v57, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
              int v62 = v61(v60, 1, v37);
              uint64_t v63 = v84;
              if (v62 == 1)
              {
                sub_22D1D08A0(v59, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
                goto LABEL_39;
              }
            }
            else
            {
              uint64_t v65 = (uint64_t)v78;
              sub_22D1B9E60(v59, (uint64_t)v78, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
              if (v61(v60, 1, v37) != 1)
              {
                uint64_t v66 = v87;
                sub_22D1D06E8(v60, v87, type metadata accessor for PBHKInspectableValue);
                char v67 = sub_22D1B8590(v65, v66, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_22D193848);
                sub_22D1B9750(v66, type metadata accessor for PBHKInspectableValue);
                sub_22D1D08A0(v57, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
                sub_22D1B9750(v65, type metadata accessor for PBHKInspectableValue);
                sub_22D1D08A0(v59, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
                uint64_t v63 = v84;
                if ((v67 & 1) == 0)
                {
LABEL_43:
                  char v31 = 0;
                  goto LABEL_33;
                }
LABEL_39:
                uint64_t v68 = (uint64_t *)(v63
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
                swift_beginAccess();
                uint64_t v69 = *v68;
                uint64_t v70 = (uint64_t *)(a2
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
                swift_beginAccess();
                uint64_t v71 = *v70;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                char v72 = sub_22D114534(v69, v71);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v72)
                {
                  char v73 = (uint64_t *)(v63
                                  + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
                  swift_beginAccess();
                  uint64_t v74 = *v73;
                  uint64_t v75 = v73[1];
                  uint64_t v76 = (void *)(a2
                                 + OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
                  swift_beginAccess();
                  if (v74 == *v76 && v75 == v76[1]) {
                    char v31 = 1;
                  }
                  else {
                    char v31 = sub_22D2BD660();
                  }
                  goto LABEL_33;
                }
                goto LABEL_43;
              }
              sub_22D1D08A0(v57, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
              sub_22D1B9750(v65, type metadata accessor for PBHKInspectableValue);
            }
            uint64_t v44 = v59;
            goto LABEL_12;
          }
          goto LABEL_27;
        }
        uint64_t v53 = v82;
        sub_22D1B9E60(v50, v82, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
        if (v52(v51, 1, v37) == 1)
        {
          sub_22D1D08A0(v48, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
          sub_22D1B9750(v53, type metadata accessor for PBHKInspectableValue);
LABEL_27:
          sub_22D1D05E4(v50, &qword_268541F80, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
          goto LABEL_32;
        }
        uint64_t v80 = v52;
        uint64_t v88 = v43;
        uint64_t v54 = v87;
        sub_22D1D06E8(v51, v87, type metadata accessor for PBHKInspectableValue);
        char v55 = sub_22D1B8590(v53, v54, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_22D193848);
        sub_22D1B9750(v54, type metadata accessor for PBHKInspectableValue);
        sub_22D1D08A0(v48, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
        sub_22D1B9750(v53, type metadata accessor for PBHKInspectableValue);
        sub_22D1D08A0(v50, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
        if (v55) {
          goto LABEL_29;
        }
LABEL_32:
        char v31 = 0;
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v84 = v33;
      sub_22D1B9E60((uint64_t)v13, (uint64_t)v26, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
      if (v39(v35, 1, v37) != 1)
      {
        uint64_t v80 = v39;
        uint64_t v43 = v38;
        uint64_t v45 = v87;
        sub_22D1D06E8(v35, v87, type metadata accessor for PBHKInspectableValue);
        swift_retain();
        swift_retain();
        char v46 = sub_22D1B8590((uint64_t)v26, v45, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_22D193848);
        sub_22D1B9750(v45, type metadata accessor for PBHKInspectableValue);
        sub_22D1D08A0((uint64_t)v28, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
        sub_22D1B9750((uint64_t)v26, type metadata accessor for PBHKInspectableValue);
        uint64_t v37 = v83;
        sub_22D1D08A0((uint64_t)v13, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
        if ((v46 & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_14;
      }
      swift_retain();
      swift_retain();
      sub_22D1D08A0((uint64_t)v28, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
      sub_22D1B9750((uint64_t)v26, type metadata accessor for PBHKInspectableValue);
    }
    uint64_t v44 = (uint64_t)v13;
LABEL_12:
    sub_22D1D05E4(v44, &qword_268541F80, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
    char v31 = 0;
LABEL_33:
    swift_release();
    swift_release();
    return v31 & 1;
  }
LABEL_4:
  char v31 = 0;
  return v31 & 1;
}

uint64_t PBHKInspectableValueCollection.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKInspectableValueCollection, &qword_268540F30, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_22D190ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D0F8, &qword_268540490, a2);
}

unint64_t sub_22D190EF0()
{
  return 0xD000000000000037;
}

uint64_t sub_22D190F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKInspectableValueCollection.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D190F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKInspectableValueCollection.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D190F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E08, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D190FB8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D0F0, (uint64_t)qword_268540478, a1);
}

uint64_t sub_22D190FDC(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685414D8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D191048()
{
  sub_22D1B9F34(&qword_2685414D8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
  return sub_22D2BC200();
}

unint64_t static PBHKInspectableValue.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D1910E4()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540498);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540498);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_22D2C79E0;
  unint64_t v5 = v35 + v4;
  unint64_t v6 = v35 + v4 + *(int *)(v2 + 56);
  *(void *)(v35 + v4) = 1;
  *(void *)unint64_t v6 = "valueType";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v35 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "stringValue";
  *(void *)(v10 + 8) = 11;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v35 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "codedQuantityRawValue";
  *((void *)v12 + 1) = 21;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v35 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "ratioValue";
  *((void *)v14 + 1) = 10;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v35 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "medicalDateString";
  *((void *)v16 + 1) = 17;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v35 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "medicalDateIntervalString";
  *((void *)v18 + 1) = 25;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v35 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "dateFromDateComponents";
  *((void *)v20 + 1) = 22;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v35 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "medicalCodingsDisplayStrings";
  *((void *)v22 + 1) = 28;
  v22[16] = 2;
  v9();
  uint64_t v23 = v35 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 10;
  *(void *)uint64_t v23 = "dataAbsentReasonCodingsDisplayStrings";
  *(void *)(v23 + 8) = 37;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v35 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 11;
  *(void *)uint64_t v25 = "codedValueCollectionValues";
  *((void *)v25 + 1) = 26;
  v25[16] = 2;
  v9();
  uint64_t v26 = (void *)(v35 + v4 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 12;
  *(void *)uint64_t v27 = "concept";
  *((void *)v27 + 1) = 7;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v35 + v4 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 13;
  *(void *)uint64_t v29 = "dataAbsentReasonConcept";
  *((void *)v29 + 1) = 23;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v35 + v4 + 12 * v3);
  char v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 14;
  *(void *)char v31 = "unitString";
  *((void *)v31 + 1) = 10;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v35 + v4 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 15;
  *(void *)uint64_t v33 = "codedQuantity";
  *((void *)v33 + 1) = 13;
  v33[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBHKInspectableValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D100, (uint64_t)qword_268540498, a1);
}

uint64_t sub_22D1915D4(uint64_t a1)
{
  return sub_22D17B984(a1, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191608, &qword_2685404B0);
}

uint64_t sub_22D191608()
{
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0xE000000000000000;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  uint64_t v2 = type metadata accessor for PBHKRatioValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  *uint64_t v3 = 0;
  v3[1] = 0xE000000000000000;
  uint64_t v4 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  uint64_t v5 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  unint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  *unint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings) = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings) = v7;
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues) = v7;
  uint64_t v8 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  uint64_t v9 = type metadata accessor for PBHKConcept(0);
  unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept, 1, 1, v9);
  uint64_t v11 = (void *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  *uint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  uint64_t v12 = v0
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  uint64_t v13 = type metadata accessor for PBHKCodedQuantity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return v0;
}

uint64_t sub_22D191804(uint64_t a1)
{
  uint64_t v88 = type metadata accessor for PBHKCodedQuantity;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E860, type metadata accessor for PBHKCodedQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v86 = type metadata accessor for PBHKConcept;
  uint64_t v87 = (uint64_t)&v70 - v5;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v3);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v85 = (uint64_t)&v70 - v7;
  uint64_t v80 = type metadata accessor for PBDateRange;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, v3);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v78 = (uint64_t)&v70 - v9;
  uint64_t v74 = type metadata accessor for PBHKRatioValue;
  sub_22D167880(0, &qword_26853E858, type metadata accessor for PBHKRatioValue, v3);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v73 = (uint64_t)&v70 - v11;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  *(void *)(v1 + 48) = 0;
  uint64_t v71 = (void *)(v1 + 48);
  *(void *)(v1 + 56) = 0xE000000000000000;
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  uint64_t v72 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  uint64_t v13 = type metadata accessor for PBHKRatioValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  *uint64_t v14 = 0;
  v14[1] = 0xE000000000000000;
  uint64_t v15 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  uint64_t v75 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  uint64_t v16 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  uint64_t v76 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  void *v17 = 0;
  v17[1] = 0xE000000000000000;
  uint64_t v77 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
  uint64_t v18 = MEMORY[0x263F8EE78];
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings) = MEMORY[0x263F8EE78];
  uint64_t v79 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings) = v18;
  uint64_t v19 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
  void *v19 = v18;
  uint64_t v20 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  uint64_t v81 = v19;
  uint64_t v82 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  uint64_t v21 = type metadata accessor for PBHKConcept(0);
  uint64_t v22 = *(void (**)(void))(*(void *)(v21 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v22)(v20, 1, 1, v21);
  uint64_t v83 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  v22();
  uint64_t v23 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  *uint64_t v23 = 0;
  v23[1] = 0xE000000000000000;
  uint64_t v24 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  uint64_t v84 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  uint64_t v25 = type metadata accessor for PBHKCodedQuantity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  swift_beginAccess();
  uint64_t v26 = *(void *)(a1 + 16);
  LOBYTE(v22) = *(unsigned char *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v26;
  *(unsigned char *)(v1 + 24) = (_BYTE)v22;
  swift_beginAccess();
  uint64_t v27 = *(void *)(a1 + 32);
  uint64_t v28 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v27;
  *(void *)(v1 + 40) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v30 = *(void *)(a1 + 48);
  uint64_t v29 = *(void *)(a1 + 56);
  char v31 = v71;
  swift_beginAccess();
  void *v31 = v30;
  *(void *)(v1 + 56) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  uint64_t v34 = v73;
  uint64_t v33 = v74;
  sub_22D1B9E60(v32, v73, &qword_26853E858, v74);
  uint64_t v35 = v72;
  swift_beginAccess();
  sub_22D1B9D9C(v34, v35, &qword_26853E858, v33);
  swift_endAccess();
  uint64_t v36 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  swift_beginAccess();
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  swift_beginAccess();
  *uint64_t v14 = v38;
  v14[1] = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  uint64_t v40 = v78;
  uint64_t v41 = v80;
  sub_22D1B9E60(v39, v78, &qword_26853D7B0, v80);
  uint64_t v42 = v75;
  swift_beginAccess();
  sub_22D1B9D9C(v40, v42, &qword_26853D7B0, v41);
  swift_endAccess();
  uint64_t v43 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  swift_beginAccess();
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  char v46 = v76;
  swift_beginAccess();
  *char v46 = v45;
  v46[1] = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
  swift_beginAccess();
  uint64_t v48 = *v47;
  uint64_t v49 = v77;
  swift_beginAccess();
  *uint64_t v49 = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
  swift_beginAccess();
  uint64_t v51 = *v50;
  uint64_t v52 = v79;
  swift_beginAccess();
  *uint64_t v52 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
  swift_beginAccess();
  uint64_t v54 = *v53;
  char v55 = v81;
  swift_beginAccess();
  *char v55 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  uint64_t v58 = v85;
  uint64_t v57 = v86;
  sub_22D1B9E60(v56, v85, (unint64_t *)&qword_26853E848, v86);
  uint64_t v59 = v82;
  swift_beginAccess();
  sub_22D1B9D9C(v58, v59, (unint64_t *)&qword_26853E848, v57);
  swift_endAccess();
  uint64_t v60 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
  swift_beginAccess();
  sub_22D1B9E60(v60, v58, (unint64_t *)&qword_26853E848, v57);
  uint64_t v61 = v83;
  swift_beginAccess();
  sub_22D1B9D9C(v58, v61, (unint64_t *)&qword_26853E848, v57);
  swift_endAccess();
  int v62 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
  swift_beginAccess();
  uint64_t v64 = *v62;
  uint64_t v63 = v62[1];
  swift_beginAccess();
  *uint64_t v23 = v64;
  v23[1] = v63;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v65 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
  swift_beginAccess();
  uint64_t v67 = v87;
  uint64_t v66 = v88;
  sub_22D1B9E60(v65, v87, &qword_26853E860, v88);
  swift_release();
  uint64_t v68 = v84;
  swift_beginAccess();
  sub_22D1B9D9C(v67, v68, &qword_26853E860, v66);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D192120()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  return v0;
}

uint64_t sub_22D192294()
{
  return sub_22D1AF83C(sub_22D192120);
}

uint64_t PBHKInspectableValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D192314);
}

uint64_t sub_22D192314()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          sub_22D1D053C();
          uint64_t v4 = v3;
          sub_22D2BC0D0();
          goto LABEL_5;
        case 2:
        case 3:
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          type metadata accessor for PBHKRatioValue(0);
          sub_22D1B9F34(&qword_2685414C0, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBDateRange(0);
          sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
          goto LABEL_15;
        case 7:
        case 14:
          swift_beginAccess();
          sub_22D2BC170();
          goto LABEL_17;
        case 8:
        case 10:
          swift_beginAccess();
          sub_22D2BC140();
          goto LABEL_17;
        case 11:
          swift_beginAccess();
          type metadata accessor for PBHKCodedValue(0);
          sub_22D1B9F34(&qword_268541508, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue);
          sub_22D2BC190();
          goto LABEL_17;
        case 12:
        case 13:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
LABEL_15:
          sub_22D2BC1A0();
LABEL_17:
          swift_endAccess();
          break;
        case 15:
          swift_beginAccess();
          type metadata accessor for PBHKCodedQuantity(0);
          sub_22D1B9F34(&qword_268541520, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
          sub_22D2BC1A0();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKInspectableValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKInspectableValue, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D192940);
}

uint64_t sub_22D192940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E860, type metadata accessor for PBHKCodedQuantity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v80 = (uint64_t)&v77 - v9;
  uint64_t v81 = type metadata accessor for PBHKCodedQuantity(0);
  uint64_t v79 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v78 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v7);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v91 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v90 = (char *)&v77 - v14;
  uint64_t v15 = type metadata accessor for PBHKConcept(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v84 = v15;
  uint64_t v85 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v82 = (uint64_t)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v83 = (uint64_t)&v77 - v19;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, v7);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v89 = (char *)&v77 - v21;
  uint64_t v22 = type metadata accessor for PBDateRange(0);
  uint64_t v87 = *(void *)(v22 - 8);
  uint64_t v88 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v86 = (uint64_t)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D167880(0, &qword_26853E858, type metadata accessor for PBHKRatioValue, v7);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v77 - v25;
  uint64_t v27 = type metadata accessor for PBHKRatioValue(0);
  uint64_t v92 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(void *)(a1 + 16))
  {
    char v30 = *(unsigned char *)(a1 + 24);
    uint64_t v94 = *(void *)(a1 + 16);
    char v95 = v30;
    sub_22D1D053C();
    uint64_t result = sub_22D2BC240();
    if (v4) {
      return result;
    }
    uint64_t v96 = 0;
  }
  else
  {
    uint64_t v96 = v4;
  }
  uint64_t v93 = a4;
  uint64_t v32 = a1;
  swift_beginAccess();
  unint64_t v33 = *(void *)(a1 + 40);
  uint64_t v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0) {
    uint64_t v34 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
  }
  if (v34)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = v96;
    sub_22D2BC2B0();
    if (v35) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = 0;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v36 = *(void *)(a1 + 56);
  uint64_t v37 = HIBYTE(v36) & 0xF;
  if ((v36 & 0x2000000000000000) == 0) {
    uint64_t v37 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFLL;
  }
  if (v37)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = v96;
    sub_22D2BC2B0();
    if (v38) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = 0;
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
  swift_beginAccess();
  sub_22D1B9E60(v39, (uint64_t)v26, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v26, 1, v27) == 1)
  {
    sub_22D1D08A0((uint64_t)v26, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v26, (uint64_t)v29, type metadata accessor for PBHKRatioValue);
    sub_22D1B9F34(&qword_2685414C0, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
    uint64_t v40 = v96;
    sub_22D2BC2E0();
    uint64_t v96 = v40;
    if (v40) {
      return sub_22D1B9750((uint64_t)v29, type metadata accessor for PBHKRatioValue);
    }
    sub_22D1B9750((uint64_t)v29, type metadata accessor for PBHKRatioValue);
  }
  uint64_t v41 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
  swift_beginAccess();
  uint64_t v42 = *v41;
  unint64_t v43 = v41[1];
  uint64_t v44 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000) == 0) {
    uint64_t v44 = v42 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v46 = (uint64_t)v90;
  uint64_t v45 = (uint64_t)v91;
  uint64_t v47 = (uint64_t)v89;
  if (v44)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = v96;
    sub_22D2BC2B0();
    uint64_t v96 = v48;
    if (v48) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v49 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
  swift_beginAccess();
  sub_22D1B9E60(v49, v47, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v47, 1, v88) == 1)
  {
    sub_22D1D08A0(v47, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    uint64_t v50 = v47;
    uint64_t v51 = v86;
    sub_22D1D06E8(v50, v86, type metadata accessor for PBDateRange);
    sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    uint64_t v52 = v96;
    sub_22D2BC2E0();
    uint64_t v96 = v52;
    if (v52) {
      return sub_22D1B9750(v51, type metadata accessor for PBDateRange);
    }
    sub_22D1B9750(v51, type metadata accessor for PBDateRange);
  }
  uint64_t v53 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
  swift_beginAccess();
  uint64_t v54 = *v53;
  unint64_t v55 = v53[1];
  uint64_t v56 = HIBYTE(v55) & 0xF;
  if ((v55 & 0x2000000000000000) == 0) {
    uint64_t v56 = v54 & 0xFFFFFFFFFFFFLL;
  }
  if (v56)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = v96;
    sub_22D2BC2B0();
    uint64_t v96 = v57;
    if (v57) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v58 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings;
  swift_beginAccess();
  if (*(void *)(*(void *)v58 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = v96;
    sub_22D2BC290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v59) {
      return result;
    }
  }
  else
  {
    uint64_t v59 = v96;
  }
  uint64_t v60 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings;
  swift_beginAccess();
  if (!*(void *)(*(void *)v60 + 16)
    || (swift_bridgeObjectRetain(), sub_22D2BC290(), uint64_t result = swift_bridgeObjectRelease(), !v59))
  {
    uint64_t v61 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues;
    swift_beginAccess();
    if (!*(void *)(*(void *)v61 + 16)
      || (type metadata accessor for PBHKCodedValue(0),
          sub_22D1B9F34(&qword_268541508, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue),
          swift_bridgeObjectRetain(),
          sub_22D2BC2D0(),
          uint64_t result = swift_bridgeObjectRelease(),
          !v59))
    {
      uint64_t v62 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
      swift_beginAccess();
      sub_22D1B9E60(v62, v46, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      uint64_t v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
      v85 += 48;
      if (v63(v46, 1, v84) == 1)
      {
        sub_22D1D08A0(v46, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      }
      else
      {
        uint64_t v64 = v46;
        uint64_t v65 = v83;
        sub_22D1D06E8(v64, v83, type metadata accessor for PBHKConcept);
        sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
        sub_22D2BC2E0();
        uint64_t result = sub_22D1B9750(v65, type metadata accessor for PBHKConcept);
        if (v59) {
          return result;
        }
      }
      uint64_t v66 = v32
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
      swift_beginAccess();
      sub_22D1B9E60(v66, v45, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if (v63(v45, 1, v84) == 1)
      {
        sub_22D1D08A0(v45, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      }
      else
      {
        uint64_t v67 = v82;
        sub_22D1D06E8(v45, v82, type metadata accessor for PBHKConcept);
        sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
        sub_22D2BC2E0();
        uint64_t result = sub_22D1B9750(v67, type metadata accessor for PBHKConcept);
        if (v59) {
          return result;
        }
      }
      uint64_t v68 = v59;
      uint64_t v69 = (uint64_t *)(v32
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
      swift_beginAccess();
      uint64_t v70 = *v69;
      unint64_t v71 = v69[1];
      uint64_t v72 = HIBYTE(v71) & 0xF;
      if ((v71 & 0x2000000000000000) == 0) {
        uint64_t v72 = v70 & 0xFFFFFFFFFFFFLL;
      }
      if (!v72 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v68))
      {
        uint64_t v73 = v32
            + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
        swift_beginAccess();
        uint64_t v74 = v80;
        sub_22D1B9E60(v73, v80, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v74, 1, v81) == 1)
        {
          return sub_22D1D08A0(v74, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
        }
        else
        {
          uint64_t v75 = v74;
          uint64_t v76 = v78;
          sub_22D1D06E8(v75, v78, type metadata accessor for PBHKCodedQuantity);
          sub_22D1B9F34(&qword_268541520, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
          sub_22D2BC2E0();
          return sub_22D1B9750(v76, type metadata accessor for PBHKCodedQuantity);
        }
      }
    }
  }
  return result;
}

uint64_t static PBHKInspectableValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_22D193848) & 1;
}

BOOL sub_22D193848(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBHKCodedQuantity(0);
  uint64_t v150 = *(void *)(v4 - 8);
  uint64_t v151 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v147 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F90, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
  uint64_t v149 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v152 = (uint64_t)&v145 - v7;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E860, type metadata accessor for PBHKCodedQuantity, MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v148 = (uint64_t)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v169 = (char *)&v145 - v12;
  uint64_t v13 = type metadata accessor for PBHKConcept(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v160 = v13;
  uint64_t v161 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v154 = (uint64_t)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v159 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v155 = (uint64_t)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v158 = (uint64_t)&v145 - v19;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v8);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v153 = (uint64_t)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v157 = (uint64_t)&v145 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v156 = (uint64_t)&v145 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v170 = (uint64_t)&v145 - v27;
  uint64_t v28 = type metadata accessor for PBDateRange(0);
  uint64_t v166 = *(void *)(v28 - 8);
  uint64_t v167 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v162 = (uint64_t)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v164 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v168 = (uint64_t)&v145 - v31;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, v8);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  uint64_t v35 = (char *)&v145 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v165 = (uint64_t)&v145 - v36;
  uint64_t v37 = type metadata accessor for PBHKRatioValue(0);
  uint64_t v172 = *(void *)(v37 - 8);
  uint64_t v173 = (void *)v37;
  MEMORY[0x270FA5388](v37);
  uint64_t v171 = (char **)((char *)&v145 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D1D0AB4(0, &qword_268541F98, &qword_26853E858, type metadata accessor for PBHKRatioValue);
  uint64_t v40 = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v42 = (char *)&v145 - v41;
  sub_22D167880(0, &qword_26853E858, type metadata accessor for PBHKRatioValue, v8);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  uint64_t v46 = (char *)&v145 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  uint64_t v48 = (char *)&v145 - v47;
  swift_beginAccess();
  uint64_t v49 = a1[2];
  swift_beginAccess();
  uint64_t v50 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a2 + 24) == 1)
  {
    switch(v50)
    {
      case 1:
        if (v49 != 1) {
          return 0;
        }
        goto LABEL_6;
      case 2:
        if (v49 != 2) {
          return 0;
        }
        goto LABEL_6;
      case 3:
        if (v49 != 3) {
          return 0;
        }
        goto LABEL_6;
      case 4:
        if (v49 != 4) {
          return 0;
        }
        goto LABEL_6;
      case 5:
        if (v49 != 5) {
          return 0;
        }
        goto LABEL_6;
      case 6:
        if (v49 != 6) {
          return 0;
        }
        goto LABEL_6;
      case 7:
        if (v49 != 7) {
          return 0;
        }
        goto LABEL_6;
      case 8:
        if (v49 != 8) {
          return 0;
        }
        goto LABEL_6;
      case 9:
        if (v49 != 9) {
          return 0;
        }
        goto LABEL_6;
      case 10:
        if (v49 != 10) {
          return 0;
        }
        goto LABEL_6;
      case 11:
        if (v49 != 11) {
          return 0;
        }
        goto LABEL_6;
      case 12:
        if (v49 != 12) {
          return 0;
        }
        goto LABEL_6;
      default:
        if (!v49) {
          goto LABEL_6;
        }
        return 0;
    }
  }
  if (v49 != v50) {
    return 0;
  }
LABEL_6:
  uint64_t v146 = v46;
  swift_beginAccess();
  uint64_t v52 = a1[4];
  uint64_t v51 = a1[5];
  swift_beginAccess();
  if (v52 == *(void *)(a2 + 32) && v51 == *(void *)(a2 + 40)
    || (v53 = sub_22D2BD660(), BOOL result = 0, (v53 & 1) != 0))
  {
    if ((swift_beginAccess(), uint64_t v55 = a1[6], v56 = a1[7], swift_beginAccess(), v55 == *(void *)(a2 + 48))
      && v56 == *(void *)(a2 + 56)
      || (v57 = sub_22D2BD660(), BOOL result = 0, (v57 & 1) != 0))
    {
      uint64_t v145 = v35;
      uint64_t v58 = (uint64_t)a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
      swift_beginAccess();
      sub_22D1B9E60(v58, (uint64_t)v48, &qword_26853E858, type metadata accessor for PBHKRatioValue);
      uint64_t v163 = a2;
      uint64_t v59 = a2
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__ratioValue;
      swift_beginAccess();
      uint64_t v60 = (uint64_t)&v42[*(int *)(v40 + 48)];
      sub_22D1B9E60((uint64_t)v48, (uint64_t)v42, &qword_26853E858, type metadata accessor for PBHKRatioValue);
      sub_22D1B9E60(v59, v60, &qword_26853E858, type metadata accessor for PBHKRatioValue);
      uint64_t v61 = v173;
      uint64_t v62 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v172 + 48);
      if (v62((uint64_t)v42, 1, v173) == 1)
      {
        swift_retain();
        swift_retain();
        sub_22D1D08A0((uint64_t)v48, &qword_26853E858, type metadata accessor for PBHKRatioValue);
        if (v62(v60, 1, v61) == 1)
        {
          sub_22D1D08A0((uint64_t)v42, &qword_26853E858, type metadata accessor for PBHKRatioValue);
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v63 = v146;
        sub_22D1B9E60((uint64_t)v42, (uint64_t)v146, &qword_26853E858, type metadata accessor for PBHKRatioValue);
        if (v62(v60, 1, v61) != 1)
        {
          uint64_t v64 = v171;
          sub_22D1D06E8(v60, (uint64_t)v171, type metadata accessor for PBHKRatioValue);
          if ((*v63 != *v64 || v63[1] != v64[1]) && (sub_22D2BD660() & 1) == 0
            || (v63[2] != v64[2] || v63[3] != v64[3]) && (sub_22D2BD660() & 1) == 0)
          {
            swift_retain();
            swift_retain();
            sub_22D1B9750((uint64_t)v64, type metadata accessor for PBHKRatioValue);
            sub_22D1D08A0((uint64_t)v48, &qword_26853E858, type metadata accessor for PBHKRatioValue);
            sub_22D1B9750((uint64_t)v63, type metadata accessor for PBHKRatioValue);
            sub_22D1D08A0((uint64_t)v42, &qword_26853E858, type metadata accessor for PBHKRatioValue);
            goto LABEL_18;
          }
          sub_22D2BBFF0();
          sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
          swift_retain();
          swift_retain();
          char v65 = sub_22D2BCB90();
          sub_22D1B9750((uint64_t)v64, type metadata accessor for PBHKRatioValue);
          sub_22D1D08A0((uint64_t)v48, &qword_26853E858, type metadata accessor for PBHKRatioValue);
          sub_22D1B9750((uint64_t)v146, type metadata accessor for PBHKRatioValue);
          sub_22D1D08A0((uint64_t)v42, &qword_26853E858, type metadata accessor for PBHKRatioValue);
          if ((v65 & 1) == 0)
          {
LABEL_18:
            swift_release();
            swift_release();
            return 0;
          }
LABEL_28:
          uint64_t v173 = a1;
          uint64_t v66 = (void *)((char *)a1
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
          swift_beginAccess();
          uint64_t v67 = *v66;
          uint64_t v68 = v66[1];
          uint64_t v69 = (void *)(v163
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
          swift_beginAccess();
          if ((v67 != *v69 || v68 != v69[1]) && (sub_22D2BD660() & 1) == 0) {
            goto LABEL_18;
          }
          uint64_t v70 = (uint64_t)v173
              + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
          swift_beginAccess();
          uint64_t v71 = v165;
          sub_22D1B9E60(v70, v165, &qword_26853D7B0, type metadata accessor for PBDateRange);
          uint64_t v72 = v163
              + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateIntervalString;
          swift_beginAccess();
          uint64_t v73 = v168;
          uint64_t v74 = v168 + *(int *)(v164 + 48);
          sub_22D1B9E60(v71, v168, &qword_26853D7B0, type metadata accessor for PBDateRange);
          uint64_t v75 = v73;
          sub_22D1B9E60(v72, v74, &qword_26853D7B0, type metadata accessor for PBDateRange);
          uint64_t v76 = v167;
          uint64_t v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v166 + 48);
          if (v77(v73, 1, v167) == 1)
          {
            sub_22D1D08A0(v71, &qword_26853D7B0, type metadata accessor for PBDateRange);
            int v78 = v77(v74, 1, v76);
            uint64_t v79 = v173;
            uint64_t v81 = (uint64_t)v169;
            uint64_t v80 = v170;
            if (v78 == 1)
            {
              sub_22D1D08A0(v73, &qword_26853D7B0, type metadata accessor for PBDateRange);
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v82 = v145;
            sub_22D1B9E60(v73, (uint64_t)v145, &qword_26853D7B0, type metadata accessor for PBDateRange);
            int v83 = v77(v74, 1, v76);
            uint64_t v81 = (uint64_t)v169;
            uint64_t v80 = v170;
            if (v83 != 1)
            {
              uint64_t v87 = v71;
              uint64_t v88 = v162;
              sub_22D1D06E8(v74, v162, type metadata accessor for PBDateRange);
              char v89 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v82, v88);
              sub_22D1B9750(v88, type metadata accessor for PBDateRange);
              sub_22D1D08A0(v87, &qword_26853D7B0, type metadata accessor for PBDateRange);
              sub_22D1B9750((uint64_t)v82, type metadata accessor for PBDateRange);
              sub_22D1D08A0(v75, &qword_26853D7B0, type metadata accessor for PBDateRange);
              uint64_t v79 = v173;
              if ((v89 & 1) == 0) {
                goto LABEL_18;
              }
LABEL_64:
              uint64_t v90 = (void *)((char *)v79
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
              swift_beginAccess();
              uint64_t v91 = *v90;
              uint64_t v92 = v90[1];
              uint64_t v93 = (void *)(v163
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
              swift_beginAccess();
              if ((v91 != *v93 || v92 != v93[1]) && (sub_22D2BD660() & 1) == 0) {
                goto LABEL_18;
              }
              uint64_t v94 = v173;
              char v95 = (void **)((char *)v173
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
              swift_beginAccess();
              uint64_t v96 = *v95;
              uint64_t v97 = (void **)(v163
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
              swift_beginAccess();
              if ((sub_22D10F3F8(v96, *v97) & 1) == 0) {
                goto LABEL_18;
              }
              uint64_t v98 = (void **)((char *)v94
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
              swift_beginAccess();
              uint64_t v99 = *v98;
              uint64_t v100 = (void **)(v163
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
              swift_beginAccess();
              if ((sub_22D10F3F8(v99, *v100) & 1) == 0) {
                goto LABEL_18;
              }
              uint64_t v101 = (void *)((char *)v94
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
              swift_beginAccess();
              uint64_t v102 = *v101;
              uint64_t v103 = (uint64_t *)(v163
                               + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
              swift_beginAccess();
              uint64_t v104 = *v103;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v105 = sub_22D114588(v102, v104);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v105 & 1) == 0) {
                goto LABEL_18;
              }
              uint64_t v106 = (uint64_t)v94
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
              swift_beginAccess();
              sub_22D1B9E60(v106, v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              uint64_t v107 = v163
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
              swift_beginAccess();
              uint64_t v108 = v158;
              uint64_t v109 = v158 + *(int *)(v159 + 48);
              sub_22D1B9E60(v80, v158, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              uint64_t v110 = v107;
              uint64_t v111 = v108;
              sub_22D1B9E60(v110, v109, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              uint64_t v112 = v160;
              uint64_t v113 = v161 + 48;
              uint64_t v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v161 + 48);
              if (v114(v108, 1, v160) == 1)
              {
                sub_22D1D08A0(v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                if (v114(v109, 1, v112) == 1)
                {
                  uint64_t v161 = v113;
                  sub_22D1D08A0(v108, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_77:
                  uint64_t v119 = (uint64_t)v173
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
                  swift_beginAccess();
                  uint64_t v120 = v119;
                  uint64_t v121 = v157;
                  sub_22D1B9E60(v120, v157, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  uint64_t v122 = v163
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonConcept;
                  swift_beginAccess();
                  uint64_t v123 = v155;
                  uint64_t v124 = v155 + *(int *)(v159 + 48);
                  sub_22D1B9E60(v121, v155, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  uint64_t v75 = v123;
                  sub_22D1B9E60(v122, v124, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  uint64_t v125 = v160;
                  if (v114(v123, 1, v160) == 1)
                  {
                    sub_22D1D08A0(v121, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                    int v126 = v114(v124, 1, v125);
                    uint64_t v127 = v173;
                    if (v126 == 1)
                    {
                      sub_22D1D08A0(v123, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_84:
                      uint64_t v132 = (void *)((char *)v127
                                      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
                      swift_beginAccess();
                      uint64_t v133 = *v132;
                      uint64_t v134 = v132[1];
                      uint64_t v135 = (void *)(v163
                                      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
                      swift_beginAccess();
                      if (v133 == *v135 && v134 == v135[1] || (sub_22D2BD660() & 1) != 0)
                      {
                        uint64_t v136 = (uint64_t)v173
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
                        swift_beginAccess();
                        sub_22D1B9E60(v136, v81, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                        uint64_t v137 = v163
                             + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedQuantity;
                        swift_beginAccess();
                        uint64_t v138 = v152;
                        uint64_t v139 = v152 + *(int *)(v149 + 48);
                        sub_22D1B9E60(v81, v152, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                        sub_22D1B9E60(v137, v139, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                        uint64_t v140 = v151;
                        uint64_t v141 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48);
                        if (v141(v138, 1, v151) == 1)
                        {
                          swift_release();
                          swift_release();
                          sub_22D1D08A0(v81, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                          if (v141(v139, 1, v140) == 1)
                          {
                            sub_22D1D08A0(v138, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                            return 1;
                          }
                        }
                        else
                        {
                          uint64_t v142 = v148;
                          sub_22D1B9E60(v138, v148, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                          if (v141(v139, 1, v140) != 1)
                          {
                            uint64_t v143 = v147;
                            sub_22D1D06E8(v139, v147, type metadata accessor for PBHKCodedQuantity);
                            char v144 = _s19HealthRecordsDaemon17PBHKCodedQuantityV2eeoiySbAC_ACtFZ_0(v142, v143);
                            swift_release();
                            swift_release();
                            sub_22D1B9750(v143, type metadata accessor for PBHKCodedQuantity);
                            sub_22D1D08A0(v81, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                            sub_22D1B9750(v142, type metadata accessor for PBHKCodedQuantity);
                            sub_22D1D08A0(v138, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                            return (v144 & 1) != 0;
                          }
                          swift_release();
                          swift_release();
                          sub_22D1D08A0(v81, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                          sub_22D1B9750(v142, type metadata accessor for PBHKCodedQuantity);
                        }
                        sub_22D1D05E4(v138, &qword_268541F90, &qword_26853E860, type metadata accessor for PBHKCodedQuantity);
                        return 0;
                      }
                      goto LABEL_18;
                    }
                  }
                  else
                  {
                    uint64_t v128 = v123;
                    uint64_t v129 = v153;
                    sub_22D1B9E60(v128, v153, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                    if (v114(v124, 1, v125) != 1)
                    {
                      uint64_t v130 = v154;
                      sub_22D1D06E8(v124, v154, type metadata accessor for PBHKConcept);
                      char v131 = sub_22D1B8590(v129, v130, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
                      sub_22D1B9750(v130, type metadata accessor for PBHKConcept);
                      sub_22D1D08A0(v157, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                      sub_22D1B9750(v129, type metadata accessor for PBHKConcept);
                      sub_22D1D08A0(v75, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                      uint64_t v127 = v173;
                      if ((v131 & 1) == 0) {
                        goto LABEL_18;
                      }
                      goto LABEL_84;
                    }
                    sub_22D1D08A0(v157, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                    sub_22D1B9750(v129, type metadata accessor for PBHKConcept);
                  }
                  uint64_t v84 = &qword_268541F88;
                  uint64_t v85 = (unint64_t *)&qword_26853E848;
                  uint64_t v86 = type metadata accessor for PBHKConcept;
LABEL_61:
                  sub_22D1D05E4(v75, v84, v85, v86);
                  goto LABEL_18;
                }
              }
              else
              {
                uint64_t v115 = v108;
                uint64_t v116 = v156;
                sub_22D1B9E60(v115, v156, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                if (v114(v109, 1, v112) != 1)
                {
                  uint64_t v161 = v113;
                  uint64_t v117 = v154;
                  sub_22D1D06E8(v109, v154, type metadata accessor for PBHKConcept);
                  char v118 = sub_22D1B8590(v116, v117, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
                  sub_22D1B9750(v117, type metadata accessor for PBHKConcept);
                  sub_22D1D08A0(v170, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  sub_22D1B9750(v116, type metadata accessor for PBHKConcept);
                  sub_22D1D08A0(v111, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                  if ((v118 & 1) == 0) {
                    goto LABEL_18;
                  }
                  goto LABEL_77;
                }
                sub_22D1D08A0(v170, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
                sub_22D1B9750(v116, type metadata accessor for PBHKConcept);
              }
              sub_22D1D05E4(v111, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
              goto LABEL_18;
            }
            sub_22D1D08A0(v71, &qword_26853D7B0, type metadata accessor for PBDateRange);
            sub_22D1B9750((uint64_t)v82, type metadata accessor for PBDateRange);
          }
          uint64_t v84 = &qword_26853DB28;
          uint64_t v85 = &qword_26853D7B0;
          uint64_t v86 = type metadata accessor for PBDateRange;
          goto LABEL_61;
        }
        swift_retain();
        swift_retain();
        sub_22D1D08A0((uint64_t)v48, &qword_26853E858, type metadata accessor for PBHKRatioValue);
        sub_22D1B9750((uint64_t)v63, type metadata accessor for PBHKRatioValue);
      }
      sub_22D1D05E4((uint64_t)v42, &qword_268541F98, &qword_26853E858, type metadata accessor for PBHKRatioValue);
      goto LABEL_18;
    }
  }
  return result;
}

uint64_t PBHKInspectableValue.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKInspectableValue, &qword_268540F38, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D1952B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D108, &qword_2685404B0, a2);
}

unint64_t sub_22D1952D4()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D1952F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKInspectableValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D195308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKInspectableValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D195320(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541E00, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D19539C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D100, (uint64_t)qword_268540498, a1);
}

uint64_t sub_22D1953C0(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D19542C()
{
  sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
  return sub_22D2BC200();
}

unint64_t static PBHKCodedValue.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_22D1954C8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685404B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685404B8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "concept";
  *(void *)(v7 + 8) = 7;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "value";
  *((void *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "referenceRanges";
  *(void *)(v12 + 8) = 15;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHKCodedValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D110, (uint64_t)qword_2685404B8, a1);
}

uint64_t sub_22D195718()
{
  type metadata accessor for PBHKCodedValue._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  uint64_t v4 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges) = MEMORY[0x263F8EE78];
  qword_2685404D0 = v0;
  return result;
}

uint64_t sub_22D195800(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v20[-v5];
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v3);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v20[-v8];
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  uint64_t v11 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  uint64_t v13 = type metadata accessor for PBHKInspectableValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges) = MEMORY[0x263F8EE78];
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v9, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v9, v10, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_endAccess();
  uint64_t v16 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  sub_22D1B9E60(v16, (uint64_t)v6, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v6, v12, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_endAccess();
  uint64_t v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
  swift_beginAccess();
  uint64_t v18 = *v17;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *uint64_t v14 = v18;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22D195B00()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKCodedValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKCodedValue, (void (*)(void))type metadata accessor for PBHKCodedValue._StorageClass, sub_22D195800, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D195C24);
}

uint64_t sub_22D195C24()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        type metadata accessor for PBHKInspectableValue(0);
        sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
LABEL_13:
        uint64_t v4 = v3;
        sub_22D2BC1A0();
LABEL_5:
        uint64_t v3 = v4;
        swift_endAccess();
        goto LABEL_6;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBHKConcept(0);
        sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
        goto LABEL_13;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBHKReferenceRange(0);
    sub_22D1B9F34(&qword_2685414A8, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
    uint64_t v4 = v3;
    sub_22D2BC190();
    goto LABEL_5;
  }
  return result;
}

uint64_t PBHKCodedValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKCodedValue, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D195E84);
}

uint64_t sub_22D195E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v29 = (uint64_t)&v26 - v7;
  uint64_t v30 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v27 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = type metadata accessor for PBHKConcept(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1;
  uint64_t v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v17, (uint64_t)v11, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_22D1D08A0((uint64_t)v11, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v18 = v31;
  }
  else
  {
    sub_22D1D06E8((uint64_t)v11, (uint64_t)v15, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    uint64_t v19 = v31;
    sub_22D2BC2E0();
    uint64_t v18 = v19;
    uint64_t result = sub_22D1B9750((uint64_t)v15, type metadata accessor for PBHKConcept);
    if (v19) {
      return result;
    }
  }
  uint64_t v21 = v16
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  uint64_t v22 = v29;
  sub_22D1B9E60(v21, v29, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v22, 1, v30) == 1)
  {
    sub_22D1D08A0(v22, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  }
  else
  {
    uint64_t v23 = v22;
    uint64_t v24 = v27;
    sub_22D1D06E8(v23, v27, type metadata accessor for PBHKInspectableValue);
    sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750(v24, type metadata accessor for PBHKInspectableValue);
    if (v18) {
      return result;
    }
  }
  uint64_t v25 = v16
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v25 + 16))
  {
    type metadata accessor for PBHKReferenceRange(0);
    sub_22D1B9F34(&qword_2685414A8, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
    swift_bridgeObjectRetain();
    sub_22D2BC2D0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static PBHKCodedValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKCodedValue, sub_22D1963F8) & 1;
}

uint64_t sub_22D1963F8(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a2;
  uint64_t v61 = type metadata accessor for PBHKInspectableValue(0);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v55 = (uint64_t)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F80, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v58 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v62 = (uint64_t)&v54 - v5;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v56 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v59 = (uint64_t)&v54 - v10;
  uint64_t v11 = type metadata accessor for PBHKConcept(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v57 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v54 - v16;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v6);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v63 = (uint64_t)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = a1;
  uint64_t v24 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  sub_22D1B9E60(v24, (uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v25 = v64;
  uint64_t v26 = v64
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__concept;
  swift_beginAccess();
  uint64_t v27 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_22D1B9E60((uint64_t)v22, (uint64_t)v17, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9E60(v26, v27, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v28((uint64_t)v17, 1, v11) != 1)
  {
    uint64_t v30 = v23;
    uint64_t v31 = v63;
    sub_22D1B9E60((uint64_t)v17, v63, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v28(v27, 1, v11) != 1)
    {
      uint64_t v36 = v57;
      sub_22D1D06E8(v27, v57, type metadata accessor for PBHKConcept);
      uint64_t v29 = v30;
      swift_retain();
      swift_retain();
      char v37 = sub_22D1B8590(v31, v36, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
      sub_22D1B9750(v36, type metadata accessor for PBHKConcept);
      sub_22D1D08A0((uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      sub_22D1B9750(v31, type metadata accessor for PBHKConcept);
      sub_22D1D08A0((uint64_t)v17, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if ((v37 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v31, type metadata accessor for PBHKConcept);
LABEL_6:
    uint64_t v32 = &qword_268541F88;
    uint64_t v33 = (unint64_t *)&qword_26853E848;
    uint64_t v34 = type metadata accessor for PBHKConcept;
    uint64_t v35 = (uint64_t)v17;
LABEL_14:
    sub_22D1D05E4(v35, v32, v33, v34);
    goto LABEL_15;
  }
  swift_retain();
  swift_retain();
  sub_22D1D08A0((uint64_t)v22, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v29 = v23;
  if (v28(v27, 1, v11) != 1) {
    goto LABEL_6;
  }
  sub_22D1D08A0((uint64_t)v17, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_8:
  uint64_t v38 = v29
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  uint64_t v39 = v59;
  sub_22D1B9E60(v38, v59, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v40 = v25
      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__value;
  swift_beginAccess();
  uint64_t v41 = v62;
  uint64_t v42 = v62 + *(int *)(v58 + 48);
  sub_22D1B9E60(v39, v62, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  sub_22D1B9E60(v40, v42, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
  uint64_t v44 = v61;
  if (v43(v41, 1, v61) == 1)
  {
    sub_22D1D08A0(v39, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
    if (v43(v42, 1, v44) == 1)
    {
      sub_22D1D08A0(v41, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
LABEL_18:
      uint64_t v50 = (uint64_t *)(v29
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
      swift_beginAccess();
      uint64_t v51 = *v50;
      uint64_t v52 = (uint64_t *)(v25
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
      swift_beginAccess();
      uint64_t v53 = *v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v46 = sub_22D113CCC(v51, v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  uint64_t v45 = v56;
  sub_22D1B9E60(v41, v56, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  if (v43(v42, 1, v44) == 1)
  {
    sub_22D1D08A0(v39, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
    sub_22D1B9750(v45, type metadata accessor for PBHKInspectableValue);
LABEL_13:
    uint64_t v32 = &qword_268541F80;
    uint64_t v33 = &qword_26853E838;
    uint64_t v34 = type metadata accessor for PBHKInspectableValue;
    uint64_t v35 = v41;
    goto LABEL_14;
  }
  uint64_t v48 = v55;
  sub_22D1D06E8(v42, v55, type metadata accessor for PBHKInspectableValue);
  char v49 = sub_22D1B8590(v45, v48, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(uint64_t, uint64_t))sub_22D193848);
  sub_22D1B9750(v48, type metadata accessor for PBHKInspectableValue);
  sub_22D1D08A0(v39, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  sub_22D1B9750(v45, type metadata accessor for PBHKInspectableValue);
  sub_22D1D08A0(v41, &qword_26853E838, type metadata accessor for PBHKInspectableValue);
  if (v49) {
    goto LABEL_18;
  }
LABEL_15:
  char v46 = 0;
LABEL_16:
  swift_release();
  swift_release();
  return v46 & 1;
}

uint64_t PBHKCodedValue.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKCodedValue, &qword_268540F40, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue);
}

uint64_t sub_22D196DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D118, &qword_2685404D0, a2);
}

unint64_t sub_22D196DF0()
{
  return 0xD000000000000027;
}

uint64_t sub_22D196E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKCodedValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D196E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKCodedValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D196E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DF8, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D196EB8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D110, (uint64_t)qword_2685404B8, a1);
}

uint64_t sub_22D196EDC(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541508, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D196F48()
{
  sub_22D1B9F34(&qword_268541508, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue);
  return sub_22D2BC200();
}

uint64_t sub_22D196FC4(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKCodedValue, sub_22D1963F8) & 1;
}

unint64_t static PBHKCodedQuantity.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D197024()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685404D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685404D8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C79F0;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "rawValue";
  *(void *)(v7 + 8) = 8;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "localizedValue";
  *(void *)(v11 + 8) = 14;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "doubleValue";
  *((void *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "comparatorDisplayString";
  *((void *)v15 + 1) = 23;
  v15[16] = 2;
  v10();
  uint64_t v16 = (void *)(v6 + 4 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 5;
  *(void *)uint64_t v17 = "unitDisplayString";
  *((void *)v17 + 1) = 17;
  v17[16] = 2;
  v10();
  uint64_t v18 = (void *)(v6 + 5 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 6;
  *(void *)uint64_t v19 = "codedQuantityDisplayString";
  *((void *)v19 + 1) = 26;
  v19[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHKCodedQuantity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D120, (uint64_t)qword_2685404D8, a1);
}

uint64_t PBHKCodedQuantity.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
        case 5:
        case 6:
          sub_22D2BC170();
          break;
        case 3:
          sub_22D2BC120();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKCodedQuantity.traverse<A>(visitor:)()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    unint64_t v5 = *(void *)(v0 + 24);
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = *(void *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
    {
      if (*(float *)(v0 + 32) == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
      {
        unint64_t v7 = *(void *)(v0 + 48);
        uint64_t v8 = HIBYTE(v7) & 0xF;
        if ((v7 & 0x2000000000000000) == 0) {
          uint64_t v8 = *(void *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
        }
        if (!v8 || (uint64_t result = sub_22D2BC2B0(), !v1))
        {
          unint64_t v9 = *(void *)(v0 + 64);
          uint64_t v10 = HIBYTE(v9) & 0xF;
          if ((v9 & 0x2000000000000000) == 0) {
            uint64_t v10 = *(void *)(v0 + 56) & 0xFFFFFFFFFFFFLL;
          }
          if (!v10 || (uint64_t result = sub_22D2BC2B0(), !v1))
          {
            unint64_t v11 = *(void *)(v0 + 80);
            uint64_t v12 = HIBYTE(v11) & 0xF;
            if ((v11 & 0x2000000000000000) == 0) {
              uint64_t v12 = *(void *)(v0 + 72) & 0xFFFFFFFFFFFFLL;
            }
            if (!v12 || (uint64_t result = sub_22D2BC2B0(), !v1))
            {
              type metadata accessor for PBHKCodedQuantity(0);
              return sub_22D2BBFD0();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBHKCodedQuantity.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKCodedQuantity, &qword_268540F48, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
}

uint64_t sub_22D197630@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  return sub_22D2BBFE0();
}

unint64_t sub_22D19766C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_22D197688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_22D1976F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_22D197768())()
{
  return nullsub_1;
}

uint64_t sub_22D19778C()
{
  return PBHKCodedQuantity.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1977A4()
{
  return PBHKCodedQuantity.traverse<A>(visitor:)();
}

uint64_t sub_22D1977BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DF0, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D197838@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D120, (uint64_t)qword_2685404D8, a1);
}

uint64_t sub_22D19785C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541520, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1978C8()
{
  sub_22D1B9F34(&qword_268541520, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
  return sub_22D2BC200();
}

unint64_t static PBHKDiagnosticTestReport.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_22D197964()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685404F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685404F0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_22D2C0BB0;
  unint64_t v5 = v21 + v4 + *(int *)(v2 + 56);
  *(void *)(v21 + v4) = 1;
  *(void *)unint64_t v5 = "diagnostic_test";
  *(void *)(v5 + 8) = 15;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50728];
  uint64_t v7 = sub_22D2BC2F0();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v21 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v21 + v4 + v3) = 2;
  *(void *)unint64_t v9 = "effective_end_date";
  *(void *)(v9 + 8) = 18;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v21 + v4 + 2 * v3);
  unint64_t v11 = (char *)v10 + *(int *)(v2 + 56);
  *uint64_t v10 = 3;
  *(void *)unint64_t v11 = "effective_start_date";
  *((void *)v11 + 1) = 20;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v21 + v4 + 3 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "issue_date";
  *((void *)v13 + 1) = 10;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v21 + v4 + 4 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "panel_name";
  *((void *)v15 + 1) = 10;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v21 + v4 + 5 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 6;
  *(void *)uint64_t v17 = "results";
  *((void *)v17 + 1) = 7;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v21 + v4 + 6 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 7;
  *(void *)uint64_t v19 = "status";
  *((void *)v19 + 1) = 6;
  v19[16] = 2;
  v8();
  return sub_22D2BC300();
}

uint64_t static PBHKDiagnosticTestReport._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D128, (uint64_t)qword_2685404F0, a1);
}

uint64_t sub_22D197CA4()
{
  type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  uint64_t v2 = type metadata accessor for PBHKConcept(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  unint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *unint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  uint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  *uint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  uint64_t v7 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results) = MEMORY[0x263F8EE78];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v2);
  qword_268540508 = v0;
  return result;
}

uint64_t sub_22D197DBC(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v36 = type metadata accessor for PBHKConcept;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v40 = (uint64_t)&v35 - v3;
  uint64_t v4 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  uint64_t v5 = type metadata accessor for PBHKConcept(0);
  uint64_t v6 = *(void (**)(void))(*(void *)(v5 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6)(v4, 1, 1, v5);
  uint64_t v39 = v1;
  uint64_t v7 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  unint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  uint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  *uint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  char v37 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results) = MEMORY[0x263F8EE78];
  uint64_t v38 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  v6();
  uint64_t v11 = v35;
  uint64_t v12 = v35
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  uint64_t v13 = v40;
  uint64_t v14 = v36;
  sub_22D1B9E60(v12, v40, (unint64_t *)&qword_26853E848, v36);
  swift_beginAccess();
  sub_22D1B9D9C(v13, v4, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  uint64_t v15 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  swift_beginAccess();
  *uint64_t v7 = v16;
  v7[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  swift_beginAccess();
  *uint64_t v8 = v19;
  v8[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  swift_beginAccess();
  void *v9 = v22;
  v9[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  swift_beginAccess();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  swift_beginAccess();
  *uint64_t v10 = v25;
  v10[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  swift_beginAccess();
  uint64_t v28 = *v27;
  uint64_t v29 = v37;
  swift_beginAccess();
  void *v29 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  uint64_t v31 = v30;
  uint64_t v32 = v40;
  sub_22D1B9E60(v31, v40, (unint64_t *)&qword_26853E848, v14);
  swift_release();
  uint64_t v33 = v38;
  swift_beginAccess();
  sub_22D1B9D9C(v32, v33, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  return v39;
}

uint64_t sub_22D1981E4()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return swift_deallocClassInstance();
}

uint64_t PBHKDiagnosticTestReport.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D19835C);
}

uint64_t sub_22D19835C()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBFHIRIdentifier(0);
          sub_22D1B9F34(&qword_268541370, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKDiagnosticTestReport.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1986E4);
}

uint64_t sub_22D1986E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a4;
  uint64_t v47 = a3;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v45 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = type metadata accessor for PBHKConcept(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v44 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = a1;
  uint64_t v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v17, (uint64_t)v9, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v18(v9, 1, v10) == 1)
  {
    sub_22D1D08A0((uint64_t)v9, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v19 = v46;
  }
  else
  {
    sub_22D1D06E8((uint64_t)v9, (uint64_t)v15, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    uint64_t v20 = v46;
    sub_22D2BC2E0();
    uint64_t v19 = v20;
    uint64_t result = sub_22D1B9750((uint64_t)v15, type metadata accessor for PBHKConcept);
    if (v20) {
      return result;
    }
  }
  uint64_t v22 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v23 = *v22;
  unint64_t v24 = v22[1];
  uint64_t v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v25 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (!v25 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v19))
  {
    uint64_t v26 = (uint64_t *)(v16
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
    swift_beginAccess();
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    uint64_t v29 = HIBYTE(v28) & 0xF;
    if ((v28 & 0x2000000000000000) == 0) {
      uint64_t v29 = v27 & 0xFFFFFFFFFFFFLL;
    }
    if (!v29 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v19))
    {
      uint64_t v30 = (uint64_t *)(v16
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
      swift_beginAccess();
      uint64_t v31 = *v30;
      unint64_t v32 = v30[1];
      uint64_t v33 = HIBYTE(v32) & 0xF;
      if ((v32 & 0x2000000000000000) == 0) {
        uint64_t v33 = v31 & 0xFFFFFFFFFFFFLL;
      }
      if (!v33 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v19))
      {
        uint64_t v34 = (uint64_t *)(v16
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
        swift_beginAccess();
        uint64_t v35 = *v34;
        unint64_t v36 = v34[1];
        uint64_t v37 = HIBYTE(v36) & 0xF;
        if ((v36 & 0x2000000000000000) == 0) {
          uint64_t v37 = v35 & 0xFFFFFFFFFFFFLL;
        }
        if (!v37 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v19))
        {
          uint64_t v38 = v16
              + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results;
          swift_beginAccess();
          if (!*(void *)(*(void *)v38 + 16)
            || (uint64_t v48 = type metadata accessor for PBFHIRIdentifier(0),
                sub_22D1B9F34(&qword_268541370, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier), swift_bridgeObjectRetain(), sub_22D2BC2D0(), uint64_t result = swift_bridgeObjectRelease(), !v19))
          {
            uint64_t v39 = v16
                + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
            swift_beginAccess();
            uint64_t v40 = v39;
            uint64_t v41 = v45;
            sub_22D1B9E60(v40, v45, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            if (v18((char *)v41, 1, v10) == 1)
            {
              return sub_22D1D08A0(v41, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
            }
            else
            {
              uint64_t v42 = v41;
              uint64_t v43 = v44;
              sub_22D1D06E8(v42, v44, type metadata accessor for PBHKConcept);
              sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
              sub_22D2BC2E0();
              return sub_22D1B9750(v43, type metadata accessor for PBHKConcept);
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_22D198D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v84 = a2;
  uint64_t v3 = type metadata accessor for PBHKConcept(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v85 = v3;
  uint64_t v86 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v82 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v80 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v76 - v10;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v78 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v81 = (uint64_t)&v76 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v83 = (uint64_t)&v76 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v76 - v19;
  uint64_t v21 = a1;
  uint64_t v22 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  sub_22D1B9E60(v22, (uint64_t)v20, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v23 = v84;
  uint64_t v24 = v84
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__diagnosticTest;
  swift_beginAccess();
  uint64_t v79 = v7;
  uint64_t v25 = (uint64_t)&v11[*(int *)(v7 + 48)];
  sub_22D1B9E60((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v26 = v24;
  uint64_t v27 = v85;
  uint64_t v28 = v86;
  sub_22D1B9E60(v26, v25, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  uint64_t v29 = v28 + 48;
  uint64_t v30 = v31;
  if (v31((uint64_t)v11, 1, v27) != 1)
  {
    uint64_t v36 = v21;
    uint64_t v37 = v23;
    uint64_t v38 = v83;
    sub_22D1B9E60((uint64_t)v11, v83, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v30(v25, 1, v27) != 1)
    {
      uint64_t v77 = v30;
      uint64_t v86 = v29;
      uint64_t v39 = v82;
      sub_22D1D06E8(v25, v82, type metadata accessor for PBHKConcept);
      swift_retain();
      swift_retain();
      char v40 = sub_22D1B8590(v38, v39, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
      sub_22D1B9750(v39, type metadata accessor for PBHKConcept);
      sub_22D1D08A0((uint64_t)v20, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      sub_22D1B9750(v38, type metadata accessor for PBHKConcept);
      uint64_t v34 = v37;
      uint64_t v35 = v36;
      sub_22D1D08A0((uint64_t)v11, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if (v40) {
        goto LABEL_8;
      }
LABEL_24:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v20, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v38, type metadata accessor for PBHKConcept);
LABEL_6:
    sub_22D1D05E4((uint64_t)v11, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    goto LABEL_24;
  }
  swift_retain();
  swift_retain();
  sub_22D1D08A0((uint64_t)v20, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  unsigned int v32 = v30(v25, 1, v27);
  uint64_t v33 = v30;
  uint64_t v34 = v23;
  uint64_t v35 = v21;
  if (v32 != 1) {
    goto LABEL_6;
  }
  uint64_t v77 = v33;
  uint64_t v86 = v29;
  sub_22D1D08A0((uint64_t)v11, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_8:
  uint64_t v41 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  uint64_t v44 = (void *)(v34
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
  swift_beginAccess();
  if ((v42 != *v44 || v43 != v44[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v45 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  uint64_t v46 = *v45;
  uint64_t v47 = v45[1];
  uint64_t v48 = (void *)(v34
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
  swift_beginAccess();
  if ((v46 != *v48 || v47 != v48[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_24;
  }
  char v49 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  uint64_t v50 = *v49;
  uint64_t v51 = v49[1];
  uint64_t v52 = (void *)(v34
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
  swift_beginAccess();
  if ((v50 != *v52 || v51 != v52[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v53 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  swift_beginAccess();
  uint64_t v54 = *v53;
  uint64_t v55 = v53[1];
  uint64_t v56 = (void *)(v34
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
  swift_beginAccess();
  if ((v54 != *v56 || v55 != v56[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v57 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  swift_beginAccess();
  uint64_t v58 = *v57;
  uint64_t v59 = (uint64_t *)(v34
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
  swift_beginAccess();
  uint64_t v60 = *v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v61 = sub_22D1145DC(v58, v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v61 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v62 = v35
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  uint64_t v63 = v81;
  sub_22D1B9E60(v62, v81, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v64 = v34
      + OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  uint64_t v65 = v80;
  uint64_t v66 = v80 + *(int *)(v79 + 48);
  sub_22D1B9E60(v63, v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v67 = v64;
  uint64_t v68 = v65;
  sub_22D1B9E60(v67, v66, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v69 = v65;
  uint64_t v70 = v85;
  uint64_t v71 = v77;
  if (v77(v69, 1, v85) == 1)
  {
    swift_release();
    swift_release();
    sub_22D1D08A0(v63, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v71(v66, 1, v70) == 1)
    {
      sub_22D1D08A0(v68, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      return 1;
    }
    goto LABEL_29;
  }
  uint64_t v73 = v78;
  sub_22D1B9E60(v68, v78, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v71(v66, 1, v70) == 1)
  {
    swift_release();
    swift_release();
    sub_22D1D08A0(v81, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v73, type metadata accessor for PBHKConcept);
LABEL_29:
    sub_22D1D05E4(v68, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    return 0;
  }
  uint64_t v74 = v82;
  sub_22D1D06E8(v66, v82, type metadata accessor for PBHKConcept);
  char v75 = sub_22D1B8590(v73, v74, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  swift_release();
  swift_release();
  sub_22D1B9750(v74, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v81, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v73, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v68, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return (v75 & 1) != 0;
}

uint64_t PBHKDiagnosticTestReport.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKDiagnosticTestReport, &qword_268540F50, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t sub_22D199804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D130, &qword_268540508, a2);
}

unint64_t sub_22D199828()
{
  return 0xD000000000000031;
}

uint64_t sub_22D199844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKDiagnosticTestReport.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D19985C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKDiagnosticTestReport.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D199874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DE8, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1998F0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D128, (uint64_t)qword_2685404F0, a1);
}

uint64_t sub_22D199914(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541538, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D199980()
{
  sub_22D1B9F34(&qword_268541538, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
  return sub_22D2BC200();
}

uint64_t sub_22D1999FC(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t (*)(uint64_t, uint64_t))sub_22D198D5C) & 1;
}

unint64_t static PBHKAccountOwner.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_22D199A5C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540510);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540510);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "birth_date";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "name";
  *((void *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHKAccountOwner._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D138, (uint64_t)qword_268540510, a1);
}

uint64_t PBHKAccountOwner.decodeMessage<A>(decoder:)()
{
  return sub_22D1A9FF8();
}

uint64_t PBHKAccountOwner.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D18EA08(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKAccountOwner);
}

uint64_t PBHKAccountOwner.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKAccountOwner, &qword_268540F58, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
}

unint64_t sub_22D199CF4()
{
  return 0xD000000000000029;
}

uint64_t sub_22D199D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKAccountOwner.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D199D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DE0, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D199DA4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D138, (uint64_t)qword_268540510, a1);
}

uint64_t sub_22D199DC8(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541550, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D199E34()
{
  sub_22D1B9F34(&qword_268541550, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
  return sub_22D2BC200();
}

uint64_t sub_22D199EB0(char *a1, char *a2)
{
  return sub_22D1B7530(a1, a2, type metadata accessor for PBHKAccountOwner) & 1;
}

unint64_t static PBHKProcedureRecord.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D199EFC()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540528);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540528);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_22D2C3FB0;
  unint64_t v5 = v33 + v4;
  unint64_t v6 = v33 + v4 + *(int *)(v2 + 56);
  *(void *)(v33 + v4) = 1;
  *(void *)unint64_t v6 = "body_sites";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "category";
  *(void *)(v10 + 8) = 8;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "complications";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "execution_end_date";
  *((void *)v14 + 1) = 18;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "execution_start_date";
  *((void *)v16 + 1) = 20;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "follow_ups";
  *((void *)v18 + 1) = 10;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "not_performed";
  *((void *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "outcome";
  *((void *)v22 + 1) = 7;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "performers";
  *(void *)(v23 + 8) = 10;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v5 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)uint64_t v25 = "procedure";
  *((void *)v25 + 1) = 9;
  v25[16] = 2;
  v9();
  uint64_t v26 = (void *)(v5 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 11;
  *(void *)uint64_t v27 = "reason";
  *((void *)v27 + 1) = 6;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v5 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 12;
  *(void *)uint64_t v29 = "reasons_not_performed";
  *((void *)v29 + 1) = 21;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v5 + 12 * v3);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 13;
  *(void *)uint64_t v31 = "status";
  *((void *)v31 + 1) = 6;
  v31[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBHKProcedureRecord._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D140, (uint64_t)qword_268540528, a1);
}

uint64_t sub_22D19A3D8(uint64_t a1)
{
  return sub_22D17B984(a1, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A40C, &qword_268540540);
}

uint64_t sub_22D19A40C()
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  uint64_t v2 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  uint64_t v3 = type metadata accessor for PBHKConcept(0);
  unint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications) = v1;
  unint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  *unint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  unint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  *unint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps) = v1;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed) = 0;
  v4(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome, 1, 1, v3);
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers) = v1;
  v4(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure, 1, 1, v3);
  v4(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason, 1, 1, v3);
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed) = v1;
  v4(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, 1, 1, v3);
  return v0;
}

uint64_t sub_22D19A588(uint64_t a1)
{
  uint64_t v48 = type metadata accessor for PBHKConcept;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v46 = (uint64_t)&v45 - v4;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 16) = MEMORY[0x263F8EE78];
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  uint64_t v45 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  uint64_t v7 = type metadata accessor for PBHKConcept(0);
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(v6, 1, 1, v7);
  uint64_t v47 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications) = v5;
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  unint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  *unint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  char v49 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps) = v5;
  uint64_t v50 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed) = 0;
  uint64_t v51 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  v8();
  uint64_t v52 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers) = v5;
  uint64_t v53 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  v8();
  uint64_t v54 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  v8();
  uint64_t v55 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed) = v5;
  uint64_t v56 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  uint64_t v57 = v1;
  v8();
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 16);
  swift_beginAccess();
  *(void *)(v1 + 16) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  uint64_t v13 = v46;
  uint64_t v14 = v48;
  sub_22D1B9E60(v12, v46, (unint64_t *)&qword_26853E848, v48);
  uint64_t v15 = v45;
  swift_beginAccess();
  sub_22D1B9D9C(v13, v15, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  uint64_t v16 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  swift_beginAccess();
  uint64_t v17 = *v16;
  uint64_t v18 = v47;
  swift_beginAccess();
  void *v18 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  swift_beginAccess();
  void *v9 = v21;
  v9[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  swift_beginAccess();
  *unint64_t v10 = v24;
  v10[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  swift_beginAccess();
  uint64_t v26 = *v25;
  uint64_t v27 = v49;
  swift_beginAccess();
  void *v27 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  swift_beginAccess();
  LOBYTE(v28) = *v28;
  uint64_t v29 = v50;
  swift_beginAccess();
  unsigned char *v29 = (_BYTE)v28;
  uint64_t v30 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  sub_22D1B9E60(v30, v13, (unint64_t *)&qword_26853E848, v14);
  uint64_t v31 = v51;
  swift_beginAccess();
  sub_22D1B9D9C(v13, v31, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  unsigned int v32 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  uint64_t v33 = *v32;
  uint64_t v34 = v52;
  swift_beginAccess();
  void *v34 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  sub_22D1B9E60(v35, v13, (unint64_t *)&qword_26853E848, v14);
  uint64_t v36 = v53;
  swift_beginAccess();
  sub_22D1B9D9C(v13, v36, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  uint64_t v37 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  sub_22D1B9E60(v37, v13, (unint64_t *)&qword_26853E848, v14);
  uint64_t v38 = v54;
  swift_beginAccess();
  sub_22D1B9D9C(v13, v38, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  uint64_t v39 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  swift_beginAccess();
  uint64_t v40 = *v39;
  uint64_t v41 = v55;
  swift_beginAccess();
  *uint64_t v41 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  sub_22D1B9E60(v42, v13, (unint64_t *)&qword_26853E848, v14);
  swift_release();
  uint64_t v43 = v56;
  swift_beginAccess();
  sub_22D1B9D9C(v13, v43, (unint64_t *)&qword_26853E848, v14);
  swift_endAccess();
  return v57;
}

uint64_t sub_22D19AC70()
{
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return v0;
}

uint64_t sub_22D19AD9C()
{
  return sub_22D1AF83C(sub_22D19AC70);
}

uint64_t PBHKProcedureRecord.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D19AE1C);
}

uint64_t sub_22D19AE1C()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 4:
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 6:
        case 12:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC190();
          goto LABEL_15;
        case 7:
          swift_beginAccess();
          sub_22D2BC0B0();
          goto LABEL_15;
        case 8:
        case 10:
        case 11:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC1A0();
          goto LABEL_15;
        case 9:
          swift_beginAccess();
          sub_22D2BC140();
LABEL_15:
          swift_endAccess();
          break;
        case 13:
          swift_beginAccess();
          type metadata accessor for PBHKConcept(0);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC1A0();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKProcedureRecord.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKProcedureRecord, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D19B454);
}

uint64_t sub_22D19B454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v66 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v69 = (uint64_t)&v65 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v70 = (uint64_t)&v65 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v72 = (uint64_t)&v65 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = type metadata accessor for PBHKConcept(0);
  uint64_t v74 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v65 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v67 = (uint64_t)&v65 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v68 = (uint64_t)&v65 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v71 = (uint64_t)&v65 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v65 - v27;
  swift_beginAccess();
  uint64_t v75 = a1;
  if (*(void *)(*(void *)(a1 + 16) + 16))
  {
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_bridgeObjectRetain();
    sub_22D2BC2D0();
    if (v4) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v73 = a4;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v73 = a4;
  }
  uint64_t v30 = v75
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v30, (uint64_t)v17, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  v74 += 48;
  if (v31(v17, 1, v18) == 1)
  {
    sub_22D1D08A0((uint64_t)v17, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    uint64_t v32 = v4;
  }
  else
  {
    sub_22D1D06E8((uint64_t)v17, (uint64_t)v28, type metadata accessor for PBHKConcept);
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    sub_22D2BC2E0();
    uint64_t v32 = v4;
    if (v4) {
      return sub_22D1B9750((uint64_t)v28, type metadata accessor for PBHKConcept);
    }
    sub_22D1B9750((uint64_t)v28, type metadata accessor for PBHKConcept);
  }
  uint64_t v33 = v75
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications;
  swift_beginAccess();
  if (*(void *)(*(void *)v33 + 16))
  {
    sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
    swift_bridgeObjectRetain();
    sub_22D2BC2D0();
    if (v32) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v34 = (uint64_t *)(v75
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  uint64_t v35 = *v34;
  unint64_t v36 = v34[1];
  uint64_t v37 = HIBYTE(v36) & 0xF;
  if ((v36 & 0x2000000000000000) == 0) {
    uint64_t v37 = v35 & 0xFFFFFFFFFFFFLL;
  }
  if (!v37) {
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  sub_22D2BC2B0();
  if (v32) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v38 = (uint64_t *)(v75
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  uint64_t v39 = *v38;
  unint64_t v40 = v38[1];
  uint64_t v41 = HIBYTE(v40) & 0xF;
  if ((v40 & 0x2000000000000000) == 0) {
    uint64_t v41 = v39 & 0xFFFFFFFFFFFFLL;
  }
  if (v41)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v32) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = v75
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps;
  swift_beginAccess();
  if (!*(void *)(*(void *)v42 + 16)
    || (sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept),
        swift_bridgeObjectRetain(),
        sub_22D2BC2D0(),
        uint64_t result = swift_bridgeObjectRelease(),
        !v32))
  {
    uint64_t v43 = (unsigned char *)(v75
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
    swift_beginAccess();
    if (*v43 != 1 || (uint64_t result = sub_22D2BC230(), !v32))
    {
      uint64_t v44 = v75
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
      swift_beginAccess();
      uint64_t v45 = v44;
      uint64_t v46 = v72;
      sub_22D1B9E60(v45, v72, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      if (v31((char *)v46, 1, v18) == 1)
      {
        sub_22D1D08A0(v46, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      }
      else
      {
        uint64_t v47 = v46;
        uint64_t v48 = v71;
        sub_22D1D06E8(v47, v71, type metadata accessor for PBHKConcept);
        sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
        sub_22D2BC2E0();
        uint64_t result = sub_22D1B9750(v48, type metadata accessor for PBHKConcept);
        if (v32) {
          return result;
        }
      }
      uint64_t v49 = v75
          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers;
      swift_beginAccess();
      if (!*(void *)(*(void *)v49 + 16)
        || (swift_bridgeObjectRetain(), sub_22D2BC290(), uint64_t result = swift_bridgeObjectRelease(), !v32))
      {
        uint64_t v50 = v75
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
        swift_beginAccess();
        uint64_t v51 = v50;
        uint64_t v52 = v70;
        sub_22D1B9E60(v51, v70, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        if (v31((char *)v52, 1, v18) == 1)
        {
          sub_22D1D08A0(v52, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        }
        else
        {
          uint64_t v53 = v52;
          uint64_t v54 = v68;
          sub_22D1D06E8(v53, v68, type metadata accessor for PBHKConcept);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC2E0();
          uint64_t result = sub_22D1B9750(v54, type metadata accessor for PBHKConcept);
          if (v32) {
            return result;
          }
        }
        uint64_t v55 = v75
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
        swift_beginAccess();
        uint64_t v56 = v55;
        uint64_t v57 = v69;
        sub_22D1B9E60(v56, v69, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        if (v31((char *)v57, 1, v18) == 1)
        {
          sub_22D1D08A0(v57, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
        }
        else
        {
          uint64_t v58 = v57;
          uint64_t v59 = v67;
          sub_22D1D06E8(v58, v67, type metadata accessor for PBHKConcept);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC2E0();
          uint64_t result = sub_22D1B9750(v59, type metadata accessor for PBHKConcept);
          if (v32) {
            return result;
          }
        }
        uint64_t v60 = v75
            + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed;
        swift_beginAccess();
        if (!*(void *)(*(void *)v60 + 16)
          || (sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept),
              swift_bridgeObjectRetain(),
              sub_22D2BC2D0(),
              uint64_t result = swift_bridgeObjectRelease(),
              !v32))
        {
          uint64_t v61 = v75
              + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
          swift_beginAccess();
          uint64_t v62 = v61;
          uint64_t v63 = v66;
          sub_22D1B9E60(v62, v66, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          if (v31((char *)v63, 1, v18) == 1) {
            return sub_22D1D08A0(v63, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
          }
          uint64_t v64 = v63;
          uint64_t v28 = v65;
          sub_22D1D06E8(v64, (uint64_t)v65, type metadata accessor for PBHKConcept);
          sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
          sub_22D2BC2E0();
          return sub_22D1B9750((uint64_t)v28, type metadata accessor for PBHKConcept);
        }
      }
    }
  }
  return result;
}

BOOL sub_22D19C100(uint64_t a1, uint64_t a2)
{
  uint64_t v141 = type metadata accessor for PBHKConcept(0);
  uint64_t v143 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v140 = (uint64_t)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v142 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v132 = (uint64_t)&v125 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v135 = (uint64_t)&v125 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v138 = (uint64_t)&v125 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v125 - v15;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v129 = (uint64_t)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v130 = (uint64_t)&v125 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v131 = (uint64_t)&v125 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v134 = (uint64_t)&v125 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v133 = (uint64_t)&v125 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v136 = (uint64_t)&v125 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v137 = (uint64_t)&v125 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v139 = (uint64_t)&v125 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v36 = (char *)&v125 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v125 - v37;
  swift_beginAccess();
  uint64_t v39 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v40 = *(void *)(a2 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v41 = sub_22D113350(v39, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v41 & 1) == 0) {
    goto LABEL_20;
  }
  int v126 = v8;
  uint64_t v127 = a1;
  uint64_t v42 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  sub_22D1B9E60(v42, (uint64_t)v38, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v128 = a2;
  uint64_t v43 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category;
  swift_beginAccess();
  uint64_t v44 = (uint64_t)&v16[*(int *)(v142 + 48)];
  sub_22D1B9E60((uint64_t)v38, (uint64_t)v16, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9E60(v43, v44, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v45 = v143 + 48;
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48);
  uint64_t v47 = v141;
  if (v46((uint64_t)v16, 1, v141) == 1)
  {
    sub_22D1D08A0((uint64_t)v38, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    unsigned int v48 = v46(v44, 1, v47);
    uint64_t v50 = v127;
    uint64_t v49 = v128;
    if (v48 == 1)
    {
      uint64_t v125 = v46;
      uint64_t v143 = v45;
      sub_22D1D08A0((uint64_t)v16, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_11;
    }
LABEL_8:
    uint64_t v51 = (uint64_t)v16;
LABEL_9:
    sub_22D1D05E4(v51, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
LABEL_20:
    swift_release();
    swift_release();
    return 0;
  }
  sub_22D1B9E60((uint64_t)v16, (uint64_t)v36, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v46(v44, 1, v47) == 1)
  {
    sub_22D1D08A0((uint64_t)v38, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750((uint64_t)v36, type metadata accessor for PBHKConcept);
    goto LABEL_8;
  }
  uint64_t v125 = v46;
  uint64_t v143 = v45;
  uint64_t v52 = v140;
  sub_22D1D06E8(v44, v140, type metadata accessor for PBHKConcept);
  char v53 = sub_22D1B8590((uint64_t)v36, v52, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v52, type metadata accessor for PBHKConcept);
  sub_22D1D08A0((uint64_t)v38, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750((uint64_t)v36, type metadata accessor for PBHKConcept);
  sub_22D1D08A0((uint64_t)v16, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v50 = v127;
  uint64_t v49 = v128;
  if ((v53 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_11:
  uint64_t v54 = (uint64_t *)(v50
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  swift_beginAccess();
  uint64_t v55 = *v54;
  uint64_t v56 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
  swift_beginAccess();
  uint64_t v57 = *v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v58 = sub_22D113350(v55, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v58 & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v59 = (uint64_t *)(v50
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  uint64_t v60 = *v59;
  uint64_t v61 = v59[1];
  uint64_t v62 = (void *)(v49
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
  swift_beginAccess();
  if ((v60 != *v62 || v61 != v62[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v63 = (uint64_t *)(v50
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  uint64_t v64 = *v63;
  uint64_t v65 = v63[1];
  uint64_t v66 = (void *)(v49
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
  swift_beginAccess();
  if ((v64 != *v66 || v65 != v66[1]) && (sub_22D2BD660() & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v67 = (uint64_t *)(v50
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  swift_beginAccess();
  uint64_t v68 = *v67;
  uint64_t v69 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
  swift_beginAccess();
  uint64_t v70 = *v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v71 = sub_22D113350(v68, v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v71 & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v72 = (unsigned __int8 *)(v50
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  swift_beginAccess();
  int v73 = *v72;
  uint64_t v74 = (unsigned __int8 *)(v49
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
  swift_beginAccess();
  if (v73 != *v74) {
    goto LABEL_20;
  }
  uint64_t v76 = v50
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  uint64_t v77 = v139;
  sub_22D1B9E60(v76, v139, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v78 = v49
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__outcome;
  swift_beginAccess();
  uint64_t v79 = v138;
  uint64_t v80 = v138 + *(int *)(v142 + 48);
  sub_22D1B9E60(v77, v138, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v81 = v78;
  uint64_t v82 = v79;
  sub_22D1B9E60(v81, v80, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v83 = v79;
  uint64_t v84 = v143;
  uint64_t v85 = v125;
  if (v125(v83, 1, v47) == 1)
  {
    sub_22D1D08A0(v77, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v85(v80, 1, v47) == 1)
    {
      uint64_t v125 = v85;
      uint64_t v143 = v84;
      sub_22D1D08A0(v82, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  uint64_t v86 = v137;
  sub_22D1B9E60(v82, v137, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v85(v80, 1, v47) == 1)
  {
    sub_22D1D08A0(v139, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v86, type metadata accessor for PBHKConcept);
LABEL_27:
    uint64_t v51 = v82;
    goto LABEL_9;
  }
  uint64_t v125 = v85;
  uint64_t v143 = v84;
  uint64_t v87 = v140;
  sub_22D1D06E8(v80, v140, type metadata accessor for PBHKConcept);
  uint64_t v88 = v82;
  char v89 = sub_22D1B8590(v86, v87, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v87, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v139, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v86, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((v89 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_29:
  uint64_t v90 = (void **)(v50
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  uint64_t v91 = *v90;
  uint64_t v92 = (void **)(v49
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
  swift_beginAccess();
  if ((sub_22D10F3F8(v91, *v92) & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v93 = v50
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  uint64_t v94 = v136;
  sub_22D1B9E60(v93, v136, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v95 = v49
      + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__procedure;
  swift_beginAccess();
  uint64_t v96 = v135;
  uint64_t v97 = v135 + *(int *)(v142 + 48);
  sub_22D1B9E60(v94, v135, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9E60(v95, v97, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v98 = v125;
  if (v125(v96, 1, v47) == 1)
  {
    sub_22D1D08A0(v94, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v98(v97, 1, v47) != 1)
    {
LABEL_42:
      uint64_t v51 = v96;
      goto LABEL_9;
    }
    sub_22D1D08A0(v96, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  }
  else
  {
    uint64_t v99 = v133;
    sub_22D1B9E60(v96, v133, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v98(v97, 1, v47) == 1)
    {
      uint64_t v100 = v136;
LABEL_41:
      sub_22D1D08A0(v100, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      sub_22D1B9750(v99, type metadata accessor for PBHKConcept);
      goto LABEL_42;
    }
    uint64_t v101 = v140;
    sub_22D1D06E8(v97, v140, type metadata accessor for PBHKConcept);
    char v102 = sub_22D1B8590(v99, v101, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
    sub_22D1B9750(v101, type metadata accessor for PBHKConcept);
    sub_22D1D08A0(v136, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v99, type metadata accessor for PBHKConcept);
    sub_22D1D08A0(v96, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if ((v102 & 1) == 0) {
      goto LABEL_20;
    }
  }
  uint64_t v103 = v50
       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  uint64_t v104 = v134;
  sub_22D1B9E60(v103, v134, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v105 = v49
       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason;
  swift_beginAccess();
  uint64_t v96 = v132;
  uint64_t v106 = v132 + *(int *)(v142 + 48);
  sub_22D1B9E60(v104, v132, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9E60(v105, v106, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v107 = v125;
  if (v125(v96, 1, v47) == 1)
  {
    sub_22D1D08A0(v104, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v107(v106, 1, v47) == 1)
    {
      sub_22D1D08A0(v96, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  uint64_t v99 = v131;
  sub_22D1B9E60(v96, v131, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v107(v106, 1, v47) == 1)
  {
    uint64_t v100 = v134;
    goto LABEL_41;
  }
  uint64_t v108 = v140;
  sub_22D1D06E8(v106, v140, type metadata accessor for PBHKConcept);
  char v109 = sub_22D1B8590(v99, v108, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  sub_22D1B9750(v108, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v134, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v99, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v96, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if ((v109 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_44:
  uint64_t v110 = (uint64_t *)(v50
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  swift_beginAccess();
  uint64_t v111 = *v110;
  uint64_t v112 = (uint64_t *)(v49
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
  swift_beginAccess();
  uint64_t v113 = *v112;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v114 = sub_22D113350(v111, v113);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v114 & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v115 = v50
       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  uint64_t v116 = v115;
  uint64_t v117 = v130;
  sub_22D1B9E60(v116, v130, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v118 = v49
       + OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
  swift_beginAccess();
  uint64_t v119 = (uint64_t)v126;
  uint64_t v120 = (uint64_t)&v126[*(int *)(v142 + 48)];
  sub_22D1B9E60(v117, (uint64_t)v126, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9E60(v118, v120, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  uint64_t v121 = v125;
  if (v125(v119, 1, v47) == 1)
  {
    swift_release();
    swift_release();
    sub_22D1D08A0(v130, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    if (v121(v120, 1, v47) == 1)
    {
      sub_22D1D08A0(v119, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
      return 1;
    }
LABEL_50:
    sub_22D1D05E4(v119, &qword_268541F88, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    return 0;
  }
  uint64_t v122 = v129;
  sub_22D1B9E60(v119, v129, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  if (v121(v120, 1, v47) == 1)
  {
    swift_release();
    swift_release();
    sub_22D1D08A0(v130, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
    sub_22D1B9750(v122, type metadata accessor for PBHKConcept);
    goto LABEL_50;
  }
  uint64_t v123 = v140;
  sub_22D1D06E8(v120, v140, type metadata accessor for PBHKConcept);
  char v124 = sub_22D1B8590(v122, v123, type metadata accessor for PBHKConcept, (uint64_t (*)(uint64_t, uint64_t))sub_22D173D94);
  swift_release();
  swift_release();
  sub_22D1B9750(v123, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v130, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  sub_22D1B9750(v122, type metadata accessor for PBHKConcept);
  sub_22D1D08A0(v119, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept);
  return (v124 & 1) != 0;
}

uint64_t PBHKProcedureRecord.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKProcedureRecord, &qword_268540F60, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
}

uint64_t sub_22D19D620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D148, &qword_268540540, a2);
}

unint64_t sub_22D19D644()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D19D660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKProcedureRecord.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D19D678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKProcedureRecord.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D19D690(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DD8, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D19D70C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D140, (uint64_t)qword_268540528, a1);
}

uint64_t sub_22D19D730(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541568, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D19D79C()
{
  sub_22D1B9F34(&qword_268541568, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
  return sub_22D2BC200();
}

uint64_t sub_22D19D818(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKProcedureRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D19C100) & 1;
}

unint64_t static PBCycleTracking.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_22D19D878()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540548);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540548);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C79F0;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "cycles";
  *(void *)(v7 + 8) = 6;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "typical_cycle_length_days";
  *(void *)(v11 + 8) = 25;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "typical_cycle_length_range";
  *((void *)v13 + 1) = 26;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "typical_period_length_days";
  *((void *)v15 + 1) = 26;
  v15[16] = 2;
  v10();
  uint64_t v16 = (void *)(v6 + 4 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 5;
  *(void *)uint64_t v17 = "typical_period_length_range";
  *((void *)v17 + 1) = 27;
  v17[16] = 2;
  v10();
  uint64_t v18 = (void *)(v6 + 5 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 6;
  *(void *)uint64_t v19 = "last_menstrual_period_date";
  *((void *)v19 + 1) = 26;
  v19[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBCycleTracking._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D150, (uint64_t)qword_268540548, a1);
}

uint64_t sub_22D19DB8C()
{
  type metadata accessor for PBCycleTracking._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  *(_DWORD *)(v0 + 24) = 0;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  uint64_t v2 = type metadata accessor for PBCycleTracking.Range(0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays) = 0;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange, 1, 1, v2);
  uint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  *uint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  qword_268540560 = v0;
  return result;
}

uint64_t type metadata accessor for PBECGMeasurement(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A48);
}

uint64_t type metadata accessor for PBActivitySummarySeries(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A58);
}

uint64_t sub_22D19DCBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v24 = type metadata accessor for PBCycleTracking.Range;
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v23 - v5;
  *(void *)(v1 + 16) = MEMORY[0x263F8EE78];
  *(_DWORD *)(v1 + 24) = 0;
  uint64_t v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  uint64_t v8 = type metadata accessor for PBCycleTracking.Range(0);
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  uint64_t v10 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  *uint64_t v10 = 0;
  uint64_t v25 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  v9();
  unint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  *unint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 16);
  swift_beginAccess();
  *(void *)(v1 + 16) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  int v13 = *(_DWORD *)(a1 + 24);
  swift_beginAccess();
  *(_DWORD *)(v2 + 24) = v13;
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  uint64_t v15 = v24;
  sub_22D1B9E60(v14, (uint64_t)v6, &qword_268540D80, v24);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v6, v7, &qword_268540D80, v15);
  swift_endAccess();
  uint64_t v16 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  swift_beginAccess();
  LODWORD(v16) = *v16;
  swift_beginAccess();
  *uint64_t v10 = v16;
  uint64_t v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  sub_22D1B9E60(v17, (uint64_t)v6, &qword_268540D80, v15);
  uint64_t v18 = v25;
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v6, v18, &qword_268540D80, v15);
  swift_endAccess();
  uint64_t v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  swift_beginAccess();
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *unint64_t v11 = v21;
  v11[1] = v20;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_22D19E01C()
{
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBCycleTracking.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBCycleTracking, (void (*)(void))type metadata accessor for PBCycleTracking._StorageClass, sub_22D19DCBC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D19E150);
}

uint64_t sub_22D19E150()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBCycleTracking.Cycle(0);
          sub_22D1B9F34(&qword_2685415D0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 2:
        case 4:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC130();
          goto LABEL_5;
        case 3:
        case 5:
          swift_beginAccess();
          type metadata accessor for PBCycleTracking.Range(0);
          sub_22D1B9F34(&qword_268541590, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_22D2BC170();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBCycleTracking.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBCycleTracking, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D19E490);
}

uint64_t sub_22D19E490(uint64_t a1)
{
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = type metadata accessor for PBCycleTracking.Range(0);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (uint64_t)&v29 - v12;
  swift_beginAccess();
  uint64_t v13 = *(void *)(*(void *)(a1 + 16) + 16);
  uint64_t v29 = v11;
  if (!v13
    || (type metadata accessor for PBCycleTracking.Cycle(0),
        sub_22D1B9F34(&qword_2685415D0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle),
        swift_bridgeObjectRetain(),
        sub_22D2BC2D0(),
        uint64_t result = swift_bridgeObjectRelease(),
        !v1))
  {
    swift_beginAccess();
    if (!*(_DWORD *)(a1 + 24) || (uint64_t result = sub_22D2BC280(), !v1))
    {
      uint64_t v15 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
      swift_beginAccess();
      sub_22D1B9E60(v15, (uint64_t)v7, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      if (v16(v7, 1, v8) == 1)
      {
        sub_22D1D08A0((uint64_t)v7, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
      }
      else
      {
        uint64_t v17 = (uint64_t)v7;
        uint64_t v18 = v31;
        sub_22D1D06E8(v17, v31, type metadata accessor for PBCycleTracking.Range);
        sub_22D1B9F34(&qword_268541590, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
        sub_22D2BC2E0();
        uint64_t result = sub_22D1B9750(v18, type metadata accessor for PBCycleTracking.Range);
        if (v1) {
          return result;
        }
      }
      uint64_t v19 = (_DWORD *)(a1
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
      swift_beginAccess();
      if (!*v19 || (uint64_t result = sub_22D2BC280(), !v1))
      {
        uint64_t v20 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
        swift_beginAccess();
        uint64_t v21 = v20;
        uint64_t v22 = v30;
        sub_22D1B9E60(v21, v30, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
        if (v16((char *)v22, 1, v8) == 1)
        {
          sub_22D1D08A0(v22, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
        }
        else
        {
          uint64_t v23 = v22;
          uint64_t v24 = (uint64_t)v29;
          sub_22D1D06E8(v23, (uint64_t)v29, type metadata accessor for PBCycleTracking.Range);
          sub_22D1B9F34(&qword_268541590, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
          sub_22D2BC2E0();
          uint64_t result = sub_22D1B9750(v24, type metadata accessor for PBCycleTracking.Range);
          if (v1) {
            return result;
          }
        }
        uint64_t v25 = (uint64_t *)(a1
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
        uint64_t result = swift_beginAccess();
        uint64_t v27 = *v25;
        unint64_t v26 = v25[1];
        uint64_t v28 = HIBYTE(v26) & 0xF;
        if ((v26 & 0x2000000000000000) == 0) {
          uint64_t v28 = v27 & 0xFFFFFFFFFFFFLL;
        }
        if (v28)
        {
          swift_bridgeObjectRetain();
          sub_22D2BC2B0();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_22D19EA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBCycleTracking.Range(0);
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v66 = (_DWORD *)((char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v68 = (_DWORD *)((char *)&v62 - v7);
  sub_22D1D0AB4(0, &qword_268542060, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v71 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v67 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v72 = (uint64_t)&v62 - v11;
  sub_22D167880(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v62 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v62 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v62 - v22;
  swift_beginAccess();
  uint64_t v24 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v25 = *(void *)(a2 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v26 = sub_22D114854(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v64 = v21;
  uint64_t v65 = v23;
  uint64_t v27 = v72;
  uint64_t v62 = v15;
  uint64_t v63 = v18;
  swift_beginAccess();
  int v28 = *(_DWORD *)(a1 + 24);
  swift_beginAccess();
  if (v28 != *(_DWORD *)(a2 + 24)) {
    goto LABEL_23;
  }
  uint64_t v29 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  uint64_t v30 = (uint64_t)v65;
  sub_22D1B9E60(v29, (uint64_t)v65, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v31 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
  swift_beginAccess();
  uint64_t v32 = v27 + *(int *)(v71 + 48);
  sub_22D1B9E60(v30, v27, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v33 = v31;
  uint64_t v34 = v27;
  sub_22D1B9E60(v33, v32, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v35 = v70;
  unint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  if (v36(v27, 1, v70) == 1)
  {
    sub_22D1D08A0(v30, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    if (v36(v32, 1, v35) != 1)
    {
LABEL_16:
      sub_22D1D05E4(v34, &qword_268542060, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
      goto LABEL_23;
    }
    sub_22D1D08A0(v27, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  }
  else
  {
    uint64_t v52 = v64;
    sub_22D1B9E60(v27, (uint64_t)v64, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    if (v36(v32, 1, v35) == 1)
    {
      uint64_t v53 = (uint64_t)v65;
LABEL_15:
      sub_22D1D08A0(v53, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
      sub_22D1B9750((uint64_t)v52, type metadata accessor for PBCycleTracking.Range);
      goto LABEL_16;
    }
    uint64_t v54 = v68;
    sub_22D1D06E8(v32, (uint64_t)v68, type metadata accessor for PBCycleTracking.Range);
    if (*v52 != *v54 || v52[1] != v54[1])
    {
      sub_22D1B9750((uint64_t)v54, type metadata accessor for PBCycleTracking.Range);
      sub_22D1D08A0((uint64_t)v65, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
      sub_22D1B9750((uint64_t)v52, type metadata accessor for PBCycleTracking.Range);
      uint64_t v56 = v27;
      goto LABEL_22;
    }
    sub_22D2BBFF0();
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v55 = sub_22D2BCB90();
    sub_22D1B9750((uint64_t)v54, type metadata accessor for PBCycleTracking.Range);
    sub_22D1D08A0((uint64_t)v65, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    sub_22D1B9750((uint64_t)v52, type metadata accessor for PBCycleTracking.Range);
    sub_22D1D08A0(v72, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    if ((v55 & 1) == 0) {
      goto LABEL_23;
    }
  }
  uint64_t v37 = (int *)(a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  swift_beginAccess();
  int v38 = *v37;
  uint64_t v39 = (_DWORD *)(a2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
  swift_beginAccess();
  if (v38 != *v39) {
    goto LABEL_23;
  }
  uint64_t v40 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  uint64_t v41 = v40;
  uint64_t v42 = (uint64_t)v63;
  sub_22D1B9E60(v41, (uint64_t)v63, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v43 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
  swift_beginAccess();
  uint64_t v44 = v67;
  uint64_t v45 = v67 + *(int *)(v71 + 48);
  sub_22D1B9E60(v42, v67, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v72 = v45;
  uint64_t v34 = v44;
  sub_22D1B9E60(v43, v45, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  uint64_t v46 = v70;
  if (v36(v44, 1, v70) != 1)
  {
    uint64_t v58 = v44;
    uint64_t v59 = v72;
    uint64_t v52 = v62;
    sub_22D1B9E60(v58, (uint64_t)v62, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    if (v36(v59, 1, v46) == 1)
    {
      uint64_t v53 = (uint64_t)v63;
      goto LABEL_15;
    }
    uint64_t v60 = v66;
    sub_22D1D06E8(v59, (uint64_t)v66, type metadata accessor for PBCycleTracking.Range);
    if (*v52 == *v60 && v52[1] == v60[1])
    {
      sub_22D2BBFF0();
      sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
      char v61 = sub_22D2BCB90();
      sub_22D1B9750((uint64_t)v60, type metadata accessor for PBCycleTracking.Range);
      sub_22D1D08A0((uint64_t)v63, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
      sub_22D1B9750((uint64_t)v52, type metadata accessor for PBCycleTracking.Range);
      sub_22D1D08A0(v34, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
      if (v61) {
        goto LABEL_10;
      }
LABEL_23:
      char v51 = 0;
      goto LABEL_24;
    }
    sub_22D1B9750((uint64_t)v60, type metadata accessor for PBCycleTracking.Range);
    sub_22D1D08A0((uint64_t)v63, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    sub_22D1B9750((uint64_t)v52, type metadata accessor for PBCycleTracking.Range);
    uint64_t v56 = v34;
LABEL_22:
    sub_22D1D08A0(v56, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    goto LABEL_23;
  }
  sub_22D1D08A0(v42, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  if (v36(v72, 1, v46) != 1) {
    goto LABEL_16;
  }
  sub_22D1D08A0(v44, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
LABEL_10:
  uint64_t v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  swift_beginAccess();
  uint64_t v48 = *v47;
  uint64_t v49 = v47[1];
  uint64_t v50 = (void *)(a2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
  swift_beginAccess();
  if (v48 == *v50 && v49 == v50[1]) {
    char v51 = 1;
  }
  else {
    char v51 = sub_22D2BD660();
  }
LABEL_24:
  swift_release();
  swift_release();
  return v51 & 1;
}

uint64_t PBCycleTracking.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBCycleTracking, &qword_268540F68, (void (*)(uint64_t))type metadata accessor for PBCycleTracking);
}

uint64_t sub_22D19F51C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D158, &qword_268540560, a2);
}

unint64_t sub_22D19F540()
{
  return 0xD000000000000028;
}

uint64_t sub_22D19F55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D19F574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D19F58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DD0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D19F608@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D150, (uint64_t)qword_268540548, a1);
}

uint64_t sub_22D19F62C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBC0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D19F698()
{
  sub_22D1B9F34(&qword_26853DBC0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking);
  return sub_22D2BC200();
}

uint64_t sub_22D19F714(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCycleTracking, sub_22D19EA28) & 1;
}

uint64_t sub_22D19F758()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540568);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540568);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C79F0;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "FLOW_NOT_ENTERED";
  *(void *)(v7 + 8) = 16;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "NO_FLOW";
  *(void *)(v11 + 8) = 7;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 2;
  *(void *)uint64_t v13 = "UNSPECIFIED";
  *((void *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 3;
  *(void *)uint64_t v15 = "LIGHT_FLOW";
  *((void *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  uint64_t v16 = (void *)(v6 + 4 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 4;
  *(void *)uint64_t v17 = "MEDIUM_FLOW";
  *((void *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  uint64_t v18 = (void *)(v6 + 5 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 5;
  *(void *)uint64_t v19 = "HEAVY_FLOW";
  *((void *)v19 + 1) = 10;
  v19[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBCycleTracking.Flow._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D160, (uint64_t)qword_268540568, a1);
}

uint64_t sub_22D19FA5C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D160, (uint64_t)qword_268540568, a1);
}

uint64_t sub_22D19FA80()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540580);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540580);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2BFF30;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "OVULATION_NOT_ENTERED";
  *(void *)(v7 + 8) = 21;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "INDETERMINATE";
  *(void *)(v11 + 8) = 13;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 2;
  *(void *)uint64_t v13 = "NEGATIVE";
  *((void *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 3;
  *(void *)uint64_t v15 = "ESTROGEN_SURGE";
  *((void *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  uint64_t v16 = v6 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v6 + 4 * v3) = 4;
  *(void *)uint64_t v16 = "LUTENIZING_HORMONE_SURGE";
  *(void *)(v16 + 8) = 24;
  *(unsigned char *)(v16 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBCycleTracking.OvulationTestResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D168, (uint64_t)qword_268540580, a1);
}

uint64_t sub_22D19FD4C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D168, (uint64_t)qword_268540580, a1);
}

uint64_t sub_22D19FD70()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540598);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540598);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_22D2C79F0;
  unint64_t v5 = v20 + v4;
  unint64_t v6 = v20 + v4 + *(int *)(v2 + 56);
  *(void *)(v20 + v4) = 0;
  *(void *)unint64_t v6 = "MUCUS_NOT_ENTERED";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "DRY";
  *(void *)(v10 + 8) = 3;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *unint64_t v11 = 2;
  *(void *)uint64_t v12 = "STICKY";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "CREAMY";
  *((void *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "WATERY";
  *((void *)v16 + 1) = 6;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)uint64_t v18 = "EGG_WHITE";
  *((void *)v18 + 1) = 9;
  v18[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBCycleTracking.CervicalMucusQuality._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D170, (uint64_t)qword_268540598, a1);
}

uint64_t sub_22D1A006C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D170, (uint64_t)qword_268540598, a1);
}

uint64_t sub_22D1A0090()
{
  uint64_t result = sub_22D2BCCB0();
  qword_2685405B0 = 0xD000000000000028;
  *(void *)algn_2685405B8 = 0x800000022D2D92E0;
  return result;
}

uint64_t static PBCycleTracking.Range.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853D178, &qword_2685405B0);
}

uint64_t sub_22D1A0120()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685405C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685405C0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 1;
  *(void *)unint64_t v7 = "min";
  *(void *)(v7 + 8) = 3;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)unint64_t v11 = "max";
  *((void *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBCycleTracking.Range._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D180, (uint64_t)qword_2685405C0, a1);
}

uint64_t PBCycleTracking.Range.decodeMessage<A>(decoder:)()
{
  return sub_22D1B13AC();
}

uint64_t PBCycleTracking.Range.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1A0368(a1, a2, a3, (void (*)(void))type metadata accessor for PBCycleTracking.Range);
}

uint64_t sub_22D1A0368(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (!*v4 || (uint64_t result = sub_22D2BC280(), !v5))
  {
    if (!v4[1] || (uint64_t result = sub_22D2BC280(), !v5))
    {
      a4(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t static PBCycleTracking.Range.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B6AEC(a1, a2, type metadata accessor for PBCycleTracking.Range) & 1;
}

uint64_t PBCycleTracking.Range.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBCycleTracking.Range, &qword_268540F70, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
}

uint64_t sub_22D1A04AC@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  return sub_22D2BBFE0();
}

uint64_t sub_22D1A04D0(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853D178, &qword_2685405B0);
}

uint64_t sub_22D1A04F8()
{
  return PBCycleTracking.Range.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1A0510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.Range.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1A0528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DC8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A05A4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D180, (uint64_t)qword_2685405C0, a1);
}

uint64_t sub_22D1A05C8(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541590, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A0634()
{
  sub_22D1B9F34(&qword_268541590, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
  return sub_22D2BC200();
}

uint64_t sub_22D1A06B0(char *a1, char *a2)
{
  return sub_22D1B6AEC(a1, a2, type metadata accessor for PBCycleTracking.Range) & 1;
}

uint64_t sub_22D1A06E0()
{
  uint64_t result = sub_22D2BCCB0();
  qword_2685405D8 = 0xD000000000000028;
  unk_2685405E0 = 0x800000022D2D92E0;
  return result;
}

uint64_t static PBCycleTracking.SexualActivity.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853D188, &qword_2685405D8);
}

uint64_t sub_22D1A0780()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685405E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685405E8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 1;
  *(void *)unint64_t v7 = "had_sex";
  *(void *)(v7 + 8) = 7;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)unint64_t v11 = "protection_used";
  *((void *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBCycleTracking.SexualActivity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D190, (uint64_t)qword_2685405E8, a1);
}

uint64_t PBCycleTracking.SexualActivity.decodeMessage<A>(decoder:)()
{
  return sub_22D1A9914();
}

uint64_t PBCycleTracking.SexualActivity.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1A99D4(a1, a2, a3, (void (*)(void))type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t static PBCycleTracking.SexualActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22D1B7938(a1, a2, type metadata accessor for PBCycleTracking.SexualActivity) & 1;
}

uint64_t PBCycleTracking.SexualActivity.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBCycleTracking.SexualActivity, &qword_268540F78, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t sub_22D1A0A40(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853D188, &qword_2685405D8);
}

uint64_t sub_22D1A0A68()
{
  return PBPatientMeta.HeartRateMeds.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1A0A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.SexualActivity.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1A0A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DC0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A0B14@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D190, (uint64_t)qword_2685405E8, a1);
}

uint64_t sub_22D1A0B38(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685415A8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A0BA4()
{
  sub_22D1B9F34(&qword_2685415A8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
  return sub_22D2BC200();
}

uint64_t sub_22D1A0C20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22D1B7938(a1, a2, type metadata accessor for PBCycleTracking.SexualActivity) & 1;
}

uint64_t sub_22D1A0C50()
{
  uint64_t result = sub_22D2BCCB0();
  qword_268540600 = 0xD000000000000028;
  *(void *)algn_268540608 = 0x800000022D2D92E0;
  return result;
}

uint64_t static PBCycleTracking.Event.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853D198, &qword_268540600);
}

uint64_t sub_22D1A0CE0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540610);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540610);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_22D2C39B0;
  unint64_t v5 = v24 + v4;
  unint64_t v6 = v24 + v4 + *(int *)(v2 + 56);
  *(void *)(v24 + v4) = 1;
  *(void *)unint64_t v6 = "date";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "flow";
  *(void *)(v10 + 8) = 4;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *unint64_t v11 = 3;
  *(void *)uint64_t v12 = "sexualActivity";
  *((void *)v12 + 1) = 14;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "cervicalMucusQuality";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "basalBodyTemperature";
  *((void *)v16 + 1) = 20;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "hadSpotting";
  *((void *)v18 + 1) = 11;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "symptoms";
  *((void *)v20 + 1) = 8;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "enum_symptoms";
  *((void *)v22 + 1) = 13;
  v22[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBCycleTracking.Event._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D1A0, (uint64_t)qword_268540610, a1);
}

uint64_t sub_22D1A1060()
{
  type metadata accessor for PBCycleTracking.Event._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  uint64_t v2 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v4 = v0
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality;
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting) = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms) = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms) = v5;
  qword_268540628 = v0;
  return result;
}

uint64_t sub_22D1A1150(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v32 = type metadata accessor for PBCycleTracking.SexualActivity;
  sub_22D167880(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v31 = (uint64_t)&v31 - v5;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  *(unsigned char *)(v1 + 40) = 1;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  uint64_t v7 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = v1
     + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality;
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v33 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  *uint64_t v33 = 0;
  uint64_t v34 = (unsigned char *)(v1
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
  unsigned char *v34 = 0;
  uint64_t v35 = (void *)(v1
                 + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
  uint64_t v9 = MEMORY[0x263F8EE78];
  *uint64_t v35 = MEMORY[0x263F8EE78];
  unint64_t v36 = (void *)(v1
                 + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
  *unint64_t v36 = v9;
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v11;
  *(void *)(v1 + 24) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 32);
  char v13 = *(unsigned char *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v2 + 32) = v12;
  *(unsigned char *)(v2 + 40) = v13;
  uint64_t v14 = a1
      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
  swift_beginAccess();
  uint64_t v16 = v31;
  uint64_t v15 = v32;
  sub_22D1B9E60(v14, v31, &qword_268540DA8, v32);
  swift_beginAccess();
  sub_22D1B9D9C(v16, v6, &qword_268540DA8, v15);
  swift_endAccess();
  uint64_t v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
  swift_beginAccess();
  uint64_t v18 = *v17;
  LOBYTE(v17) = *((unsigned char *)v17 + 8);
  swift_beginAccess();
  *(void *)uint64_t v8 = v18;
  *(unsigned char *)(v8 + 8) = (_BYTE)v17;
  uint64_t v19 = (int *)(a1
              + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  swift_beginAccess();
  int v20 = *v19;
  uint64_t v21 = v33;
  swift_beginAccess();
  _DWORD *v21 = v20;
  uint64_t v22 = (unsigned char *)(a1
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
  swift_beginAccess();
  LOBYTE(v22) = *v22;
  uint64_t v23 = v34;
  swift_beginAccess();
  *uint64_t v23 = (_BYTE)v22;
  uint64_t v24 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
  swift_beginAccess();
  uint64_t v25 = *v24;
  char v26 = v35;
  swift_beginAccess();
  void *v26 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
  swift_beginAccess();
  uint64_t v28 = *v27;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v29 = v36;
  swift_beginAccess();
  void *v29 = v28;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_22D1A1558()
{
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBCycleTracking.Event.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1A1668);
}

uint64_t sub_22D1A1668()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          sub_22D1D0440();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBCycleTracking.SexualActivity(0);
          sub_22D1B9F34(&qword_2685415A8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          sub_22D1D0398();
LABEL_5:
          uint64_t v4 = v3;
          sub_22D2BC0D0();
          goto LABEL_6;
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC120();
          goto LABEL_6;
        case 6:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC0B0();
          goto LABEL_6;
        case 7:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC140();
          goto LABEL_6;
        case 8:
          swift_beginAccess();
          sub_22D1D0640();
          uint64_t v4 = v3;
          sub_22D2BC0A0();
LABEL_6:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBCycleTracking.Event.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBCycleTracking.Event, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1A19EC);
}

uint64_t sub_22D1A19EC(uint64_t a1)
{
  sub_22D167880(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v21 - v4;
  uint64_t v6 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v25 = (uint64_t)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    if (!*(void *)(a1 + 32)
      || (char v12 = *(unsigned char *)(a1 + 40),
          uint64_t v23 = *(void *)(a1 + 32),
          char v24 = v12,
          sub_22D1D0440(),
          uint64_t result = sub_22D2BC240(),
          !v1))
    {
      uint64_t v13 = a1
          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
      swift_beginAccess();
      sub_22D1B9E60(v13, (uint64_t)v5, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_22D1D08A0((uint64_t)v5, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
      }
      else
      {
        uint64_t v14 = v25;
        sub_22D1D06E8((uint64_t)v5, v25, type metadata accessor for PBCycleTracking.SexualActivity);
        sub_22D1B9F34(&qword_2685415A8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
        sub_22D2BC2E0();
        uint64_t result = sub_22D1B9750(v14, type metadata accessor for PBCycleTracking.SexualActivity);
        if (v1) {
          return result;
        }
      }
      uint64_t v15 = a1
          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality;
      swift_beginAccess();
      if (!*(void *)v15
        || (char v16 = *(unsigned char *)(v15 + 8),
            v21[10] = *(void *)v15,
            char v22 = v16,
            sub_22D1D0398(),
            uint64_t result = sub_22D2BC240(),
            !v1))
      {
        uint64_t v17 = (float *)(a1
                      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
        swift_beginAccess();
        if (*v17 == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
        {
          uint64_t v18 = (unsigned char *)(a1
                        + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
          swift_beginAccess();
          if (*v18 != 1 || (uint64_t result = sub_22D2BC230(), !v1))
          {
            uint64_t v19 = a1
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms;
            swift_beginAccess();
            if (!*(void *)(*(void *)v19 + 16)
              || (swift_bridgeObjectRetain(), sub_22D2BC290(), uint64_t result = swift_bridgeObjectRelease(), !v1))
            {
              uint64_t v20 = a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms;
              uint64_t result = swift_beginAccess();
              if (*(void *)(*(void *)v20 + 16))
              {
                sub_22D1D0640();
                swift_bridgeObjectRetain();
                sub_22D2BC210();
                return swift_bridgeObjectRelease();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static PBCycleTracking.Event.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCycleTracking.Event, (uint64_t (*)(uint64_t, uint64_t))sub_22D1A1F1C) & 1;
}

uint64_t sub_22D1A1F1C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (unsigned __int8 *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F70, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v46 - v8;
  sub_22D167880(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v46 - v14;
  swift_beginAccess();
  uint64_t v17 = a1[2];
  uint64_t v16 = a1[3];
  swift_beginAccess();
  if (v17 == *(void *)(a2 + 16) && v16 == *(void *)(a2 + 24) || (char v18 = 0, (sub_22D2BD660() & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v19 = a1[4];
    swift_beginAccess();
    uint64_t v20 = *(void *)(a2 + 32);
    if (*(unsigned char *)(a2 + 40) == 1)
    {
      switch(v20)
      {
        case 1:
          if (v19 == 1) {
            goto LABEL_9;
          }
          goto LABEL_7;
        case 2:
          if (v19 == 2) {
            goto LABEL_9;
          }
          goto LABEL_7;
        case 3:
          if (v19 == 3) {
            goto LABEL_9;
          }
          goto LABEL_7;
        case 4:
          if (v19 == 4) {
            goto LABEL_9;
          }
          goto LABEL_7;
        case 5:
          if (v19 == 5) {
            goto LABEL_9;
          }
          goto LABEL_7;
        default:
          if (v19) {
            goto LABEL_7;
          }
          goto LABEL_9;
      }
    }
    if (v19 == v20)
    {
LABEL_9:
      uint64_t v47 = (unsigned __int8 *)v13;
      uint64_t v21 = (uint64_t)a1
          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
      swift_beginAccess();
      sub_22D1B9E60(v21, (uint64_t)v15, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
      uint64_t v22 = a2
          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
      swift_beginAccess();
      uint64_t v23 = (uint64_t)&v9[*(int *)(v7 + 48)];
      sub_22D1B9E60((uint64_t)v15, (uint64_t)v9, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
      sub_22D1B9E60(v22, v23, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
      uint64_t v24 = v50;
      uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
      if (v25((uint64_t)v9, 1, v50) == 1)
      {
        swift_retain();
        swift_retain();
        sub_22D1D08A0((uint64_t)v15, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
        if (v25(v23, 1, v24) == 1)
        {
          sub_22D1D08A0((uint64_t)v9, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
LABEL_12:
          char v26 = (void *)((char *)a1
                         + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
          swift_beginAccess();
          uint64_t v27 = *v26;
          uint64_t v28 = (uint64_t *)(a2
                          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
          swift_beginAccess();
          uint64_t v29 = *v28;
          if (*((unsigned char *)v28 + 8) == 1)
          {
            switch(v29)
            {
              case 1:
                if (v27 != 1) {
                  goto LABEL_48;
                }
                goto LABEL_33;
              case 2:
                if (v27 != 2) {
                  goto LABEL_48;
                }
                goto LABEL_33;
              case 3:
                if (v27 != 3) {
                  goto LABEL_48;
                }
                goto LABEL_33;
              case 4:
                if (v27 != 4) {
                  goto LABEL_48;
                }
                goto LABEL_33;
              case 5:
                if (v27 != 5) {
                  goto LABEL_48;
                }
                goto LABEL_33;
              default:
                if (!v27) {
                  goto LABEL_33;
                }
                goto LABEL_48;
            }
          }
          if (v27 == v29)
          {
LABEL_33:
            uint64_t v32 = (float *)((char *)a1
                          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
            swift_beginAccess();
            float v33 = *v32;
            uint64_t v34 = (float *)(a2
                          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
            swift_beginAccess();
            if (v33 == *v34)
            {
              uint64_t v35 = (unsigned __int8 *)a1
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting;
              swift_beginAccess();
              int v36 = *v35;
              uint64_t v37 = (unsigned __int8 *)(a2
                                      + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
              swift_beginAccess();
              if (v36 == *v37)
              {
                int v38 = (void **)((char *)a1
                                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
                swift_beginAccess();
                uint64_t v39 = *v38;
                uint64_t v40 = (void **)(a2
                                + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
                swift_beginAccess();
                if (sub_22D10F3F8(v39, *v40))
                {
                  uint64_t v41 = (void *)((char *)a1
                                 + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
                  swift_beginAccess();
                  uint64_t v42 = *v41;
                  uint64_t v43 = (uint64_t *)(a2
                                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
                  swift_beginAccess();
                  char v18 = sub_22D114D74(v42, *v43);
LABEL_49:
                  swift_release();
                  swift_release();
                  return v18 & 1;
                }
              }
            }
          }
LABEL_48:
          char v18 = 0;
          goto LABEL_49;
        }
      }
      else
      {
        uint64_t v30 = v47;
        sub_22D1B9E60((uint64_t)v9, (uint64_t)v47, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
        if (v25(v23, 1, v24) != 1)
        {
          uint64_t v31 = v48;
          sub_22D1D06E8(v23, (uint64_t)v48, type metadata accessor for PBCycleTracking.SexualActivity);
          if (*v30 != *v31 || v30[1] != v31[1])
          {
            swift_retain();
            swift_retain();
            sub_22D1B9750((uint64_t)v31, type metadata accessor for PBCycleTracking.SexualActivity);
            sub_22D1D08A0((uint64_t)v15, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
            sub_22D1B9750((uint64_t)v30, type metadata accessor for PBCycleTracking.SexualActivity);
            sub_22D1D08A0((uint64_t)v9, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
            goto LABEL_48;
          }
          sub_22D2BBFF0();
          sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
          swift_retain();
          swift_retain();
          char v44 = sub_22D2BCB90();
          sub_22D1B9750((uint64_t)v31, type metadata accessor for PBCycleTracking.SexualActivity);
          sub_22D1D08A0((uint64_t)v15, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
          sub_22D1B9750((uint64_t)v47, type metadata accessor for PBCycleTracking.SexualActivity);
          sub_22D1D08A0((uint64_t)v9, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
          if ((v44 & 1) == 0) {
            goto LABEL_48;
          }
          goto LABEL_12;
        }
        swift_retain();
        swift_retain();
        sub_22D1D08A0((uint64_t)v15, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
        sub_22D1B9750((uint64_t)v30, type metadata accessor for PBCycleTracking.SexualActivity);
      }
      sub_22D1D05E4((uint64_t)v9, &qword_268541F70, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
      goto LABEL_48;
    }
LABEL_7:
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t PBCycleTracking.Event.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBCycleTracking.Event, &qword_268540F80, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event);
}

uint64_t sub_22D1A2824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D1A8, &qword_268540628, a2);
}

uint64_t sub_22D1A2848(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853D198, &qword_268540600);
}

uint64_t sub_22D1A2870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.Event.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1A2888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBCycleTracking.Event.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1A28A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DB8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A291C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D1A0, (uint64_t)qword_268540610, a1);
}

uint64_t sub_22D1A2940(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268540F88, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A29AC()
{
  sub_22D1B9F34(&qword_268540F88, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event);
  return sub_22D2BC200();
}

uint64_t sub_22D1A2A28(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCycleTracking.Event, (uint64_t (*)(uint64_t, uint64_t))sub_22D1A1F1C) & 1;
}

uint64_t sub_22D1A2A6C()
{
  uint64_t result = sub_22D2BCCB0();
  qword_268540630 = 0xD000000000000028;
  *(void *)algn_268540638 = 0x800000022D2D92E0;
  return result;
}

uint64_t static PBCycleTracking.Cycle.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853D1B0, &qword_268540630);
}

uint64_t sub_22D1A2AFC()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540640);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540640);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_22D2BFF30;
  unint64_t v5 = v17 + v4;
  unint64_t v6 = v17 + v4 + *(int *)(v2 + 56);
  *(void *)(v17 + v4) = 1;
  *(void *)unint64_t v6 = "start";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "end";
  *(void *)(v10 + 8) = 3;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "events";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "cycleLength";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 4 * v3) = 5;
  *(void *)uint64_t v15 = "periodLength";
  *(void *)(v15 + 8) = 12;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBCycleTracking.Cycle._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D1B8, (uint64_t)qword_268540640, a1);
}

uint64_t PBCycleTracking.Cycle.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 3:
          type metadata accessor for PBCycleTracking.Event(0);
          sub_22D1B9F34(&qword_268540F88, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 4:
        case 5:
          uint64_t v4 = v3;
          sub_22D2BC130();
LABEL_5:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBCycleTracking.Cycle.traverse<A>(visitor:)()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    unint64_t v5 = *(void *)(v0 + 24);
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = *(void *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
    {
      if (!*(void *)(*(void *)(v0 + 32) + 16)
        || (type metadata accessor for PBCycleTracking.Event(0),
            sub_22D1B9F34(&qword_268540F88, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event), uint64_t result = sub_22D2BC2D0(), !v1))
      {
        if (!*(_DWORD *)(v0 + 40) || (uint64_t result = sub_22D2BC280(), !v1))
        {
          if (!*(_DWORD *)(v0 + 44) || (uint64_t result = sub_22D2BC280(), !v1))
          {
            type metadata accessor for PBCycleTracking.Cycle(0);
            return sub_22D2BBFD0();
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBCycleTracking.Cycle.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBCycleTracking.Cycle, &qword_268540F90, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle);
}

uint64_t sub_22D1A3128@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  uint64_t v1 = MEMORY[0x263F8EE78];
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = v1;
  a1[5] = 0;
  return sub_22D2BBFE0();
}

uint64_t sub_22D1A3160(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853D1B0, &qword_268540630);
}

uint64_t sub_22D1A3188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_22D1A31F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_22D1A3268())()
{
  return nullsub_1;
}

uint64_t sub_22D1A328C()
{
  return PBCycleTracking.Cycle.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1A32A4()
{
  return PBCycleTracking.Cycle.traverse<A>(visitor:)();
}

uint64_t sub_22D1A32BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DB0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A3338@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D1B8, (uint64_t)qword_268540640, a1);
}

uint64_t sub_22D1A335C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685415D0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A33C8()
{
  sub_22D1B9F34(&qword_2685415D0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle);
  return sub_22D2BC200();
}

unint64_t static PBECGs.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_22D1A3464(uint64_t a1)
{
  return sub_22D1B170C(a1, qword_268540658, (uint64_t)"ecgs", 4, MEMORY[0x263F50718]);
}

uint64_t static PBECGs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D1C0, (uint64_t)qword_268540658, a1);
}

uint64_t PBECGs.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B1914(a1, a2, a3, (void (*)(void))type metadata accessor for PBECGMeasurement, &qword_26853DBB8, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement);
}

uint64_t PBECGs.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBECGMeasurement(0),
        sub_22D1B9F34(&qword_26853DBB8, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBECGs(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t PBECGs.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBECGs, &qword_268540F98, (void (*)(uint64_t))type metadata accessor for PBECGs);
}

unint64_t sub_22D1A3638()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_22D1A3654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBECGs.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1A366C()
{
  return PBECGs.traverse<A>(visitor:)();
}

uint64_t sub_22D1A3684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DA8, (void (*)(uint64_t))type metadata accessor for PBECGs);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A3700@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D1C0, (uint64_t)qword_268540658, a1);
}

uint64_t sub_22D1A3724(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBC8, (void (*)(uint64_t))type metadata accessor for PBECGs);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A3790()
{
  sub_22D1B9F34(&qword_26853DBC8, (void (*)(uint64_t))type metadata accessor for PBECGs);
  return sub_22D2BC200();
}

uint64_t sub_22D1A380C(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D10EF1C, type metadata accessor for PBECGs) & 1;
}

unint64_t static PBECGMeta.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_22D1A386C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540670);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540670);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_22D2C79C0;
  unint64_t v5 = v25 + v4;
  unint64_t v6 = v25 + v4 + *(int *)(v2 + 56);
  *(void *)(v25 + v4) = 1;
  *(void *)unint64_t v6 = "time";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "sampleRate";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "device";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "classification";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "lead";
  *((void *)v16 + 1) = 4;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  char v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)char v18 = "unit";
  *((void *)v18 + 1) = 4;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "symptoms";
  *((void *)v20 + 1) = 8;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "averageHeartRate";
  *((void *)v22 + 1) = 16;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "hk_classification";
  *(void *)(v23 + 8) = 17;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBECGMeta._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D1C8, (uint64_t)qword_268540670, a1);
}

uint64_t PBECGMeta.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
        case 5:
        case 6:
          sub_22D2BC170();
          break;
        case 2:
        case 8:
          sub_22D2BC120();
          break;
        case 7:
          sub_22D2BC140();
          break;
        case 9:
          sub_22D1B9FD0();
          sub_22D2BC0D0();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBECGMeta.traverse<A>(visitor:)()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
    {
      unint64_t v5 = *(void *)(v0 + 32);
      uint64_t v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0) {
        uint64_t v6 = *(void *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
      }
      if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
      {
        unint64_t v7 = *(void *)(v0 + 48);
        uint64_t v8 = HIBYTE(v7) & 0xF;
        if ((v7 & 0x2000000000000000) == 0) {
          uint64_t v8 = *(void *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
        }
        if (!v8 || (uint64_t result = sub_22D2BC2B0(), !v1))
        {
          unint64_t v9 = *(void *)(v0 + 64);
          uint64_t v10 = HIBYTE(v9) & 0xF;
          if ((v9 & 0x2000000000000000) == 0) {
            uint64_t v10 = *(void *)(v0 + 56) & 0xFFFFFFFFFFFFLL;
          }
          if (!v10 || (uint64_t result = sub_22D2BC2B0(), !v1))
          {
            unint64_t v11 = *(void *)(v0 + 80);
            uint64_t v12 = HIBYTE(v11) & 0xF;
            if ((v11 & 0x2000000000000000) == 0) {
              uint64_t v12 = *(void *)(v0 + 72) & 0xFFFFFFFFFFFFLL;
            }
            if (!v12 || (uint64_t result = sub_22D2BC2B0(), !v1))
            {
              if (!*(void *)(*(void *)(v0 + 88) + 16) || (uint64_t result = sub_22D2BC290(), !v1))
              {
                if (*(float *)(v0 + 96) == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
                {
                  if (!*(void *)(v0 + 104) || (sub_22D1B9FD0(), uint64_t result = sub_22D2BC240(), !v1))
                  {
                    type metadata accessor for PBECGMeta(0);
                    return sub_22D2BBFD0();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBECGMeta.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBECGMeta, &qword_268540FA8, (void (*)(uint64_t))type metadata accessor for PBECGMeta);
}

uint64_t sub_22D1A4074@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  *(void *)(a1 + 88) = MEMORY[0x263F8EE78];
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 112) = 1;
  return sub_22D2BBFE0();
}

unint64_t sub_22D1A40D0()
{
  return 0xD000000000000022;
}

uint64_t sub_22D1A40EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_22D1A415C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 52);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_22D1A41CC()
{
  return PBECGMeta.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1A41E4()
{
  return PBECGMeta.traverse<A>(visitor:)();
}

uint64_t sub_22D1A41FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541DA0, (void (*)(uint64_t))type metadata accessor for PBECGMeta);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A4278@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D1C8, (uint64_t)qword_268540670, a1);
}

uint64_t sub_22D1A429C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DB50, (void (*)(uint64_t))type metadata accessor for PBECGMeta);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A4308()
{
  sub_22D1B9F34(&qword_26853DB50, (void (*)(uint64_t))type metadata accessor for PBECGMeta);
  return sub_22D2BC200();
}

unint64_t static PBECGMeasurement.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_22D1A43A4()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540688);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540688);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_22D2C0F20;
  unint64_t v5 = v27 + v4;
  unint64_t v6 = v27 + v4 + *(int *)(v2 + 56);
  *(void *)(v27 + v4) = 1;
  *(void *)unint64_t v6 = "time";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "sampleRate";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *unint64_t v11 = 3;
  *(void *)uint64_t v12 = "device";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "classification";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "lead";
  *((void *)v16 + 1) = 4;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  char v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)char v18 = "unit";
  *((void *)v18 + 1) = 4;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "symptoms";
  *((void *)v20 + 1) = 8;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "values";
  *((void *)v22 + 1) = 6;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "averageHeartRate";
  *(void *)(v23 + 8) = 16;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v5 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)uint64_t v25 = "hk_classification";
  *((void *)v25 + 1) = 17;
  v25[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBECGMeasurement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D1D0, (uint64_t)qword_268540688, a1);
}

uint64_t PBECGMeasurement.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
        case 5:
        case 6:
          sub_22D2BC170();
          break;
        case 2:
        case 9:
          sub_22D2BC120();
          break;
        case 7:
          sub_22D2BC140();
          break;
        case 8:
          sub_22D2BC0F0();
          break;
        case 10:
          sub_22D1B9FD0();
          sub_22D2BC0D0();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBECGMeasurement.traverse<A>(visitor:)()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
    {
      unint64_t v5 = *(void *)(v0 + 32);
      uint64_t v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0) {
        uint64_t v6 = *(void *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
      }
      if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
      {
        unint64_t v7 = *(void *)(v0 + 48);
        uint64_t v8 = HIBYTE(v7) & 0xF;
        if ((v7 & 0x2000000000000000) == 0) {
          uint64_t v8 = *(void *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
        }
        if (!v8 || (uint64_t result = sub_22D2BC2B0(), !v1))
        {
          unint64_t v9 = *(void *)(v0 + 64);
          uint64_t v10 = HIBYTE(v9) & 0xF;
          if ((v9 & 0x2000000000000000) == 0) {
            uint64_t v10 = *(void *)(v0 + 56) & 0xFFFFFFFFFFFFLL;
          }
          if (!v10 || (uint64_t result = sub_22D2BC2B0(), !v1))
          {
            unint64_t v11 = *(void *)(v0 + 80);
            uint64_t v12 = HIBYTE(v11) & 0xF;
            if ((v11 & 0x2000000000000000) == 0) {
              uint64_t v12 = *(void *)(v0 + 72) & 0xFFFFFFFFFFFFLL;
            }
            if (!v12 || (uint64_t result = sub_22D2BC2B0(), !v1))
            {
              if (!*(void *)(*(void *)(v0 + 88) + 16) || (uint64_t result = sub_22D2BC290(), !v1))
              {
                if (!*(void *)(*(void *)(v0 + 96) + 16) || (uint64_t result = sub_22D2BC220(), !v1))
                {
                  if (*(float *)(v0 + 104) == 0.0 || (uint64_t result = sub_22D2BC270(), !v1))
                  {
                    if (!*(void *)(v0 + 112) || (sub_22D1B9FD0(), uint64_t result = sub_22D2BC240(), !v1))
                    {
                      type metadata accessor for PBECGMeasurement(0);
                      return sub_22D2BBFD0();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBECGMeasurement.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBECGMeasurement, &qword_268540FB0, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement);
}

uint64_t sub_22D1A4C34@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 88) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 96) = v1;
  *(_DWORD *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 120) = 1;
  return sub_22D2BBFE0();
}

unint64_t sub_22D1A4C90()
{
  return 0xD000000000000029;
}

uint64_t sub_22D1A4CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 56);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_22D1A4D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 56);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_22D1A4D8C())()
{
  return nullsub_1;
}

uint64_t sub_22D1A4DB0()
{
  return PBECGMeasurement.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1A4DC8()
{
  return PBECGMeasurement.traverse<A>(visitor:)();
}

uint64_t sub_22D1A4DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D98, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A4E5C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D1D0, (uint64_t)qword_268540688, a1);
}

uint64_t sub_22D1A4E80(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBB8, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A4EEC()
{
  sub_22D1B9F34(&qword_26853DBB8, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement);
  return sub_22D2BC200();
}

unint64_t static PBActivitySummarySeries.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_22D1A4F88()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685406A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685406A0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "date_range";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)unint64_t v11 = "activitySummaries";
  *((void *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBActivitySummarySeries._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D1D8, (uint64_t)qword_2685406A0, a1);
}

uint64_t sub_22D1A5194()
{
  type metadata accessor for PBActivitySummarySeries._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  uint64_t v2 = type metadata accessor for PBDateRange(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries) = MEMORY[0x263F8EE78];
  qword_2685406B8 = v0;
  return result;
}

uint64_t type metadata accessor for PBPatientMeta(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A78);
}

uint64_t sub_22D1A5250(uint64_t a1)
{
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - v4;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  *(void *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries) = MEMORY[0x263F8EE78];
  uint64_t v9 = a1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v9, (uint64_t)v5, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v5, v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_endAccess();
  uint64_t v10 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  swift_beginAccess();
  uint64_t v11 = *v10;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *uint64_t v8 = v11;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22D1A5428()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange, &qword_26853D7B0, type metadata accessor for PBDateRange);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBActivitySummarySeries.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBActivitySummarySeries, (void (*)(void))type metadata accessor for PBActivitySummarySeries._StorageClass, sub_22D1A5250, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1A5520);
}

uint64_t sub_22D1A5520()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBDateRange(0);
        sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
        uint64_t v4 = v3;
        sub_22D2BC1A0();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
    sub_22D1B9F34(&qword_268541628, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
    uint64_t v4 = v3;
    sub_22D2BC190();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBActivitySummarySeries.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBActivitySummarySeries, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1A5710);
}

uint64_t sub_22D1A5710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[9] = a4;
  v16[0] = a2;
  v16[1] = a3;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = type metadata accessor for PBDateRange(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v13, (uint64_t)v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_22D1D08A0((uint64_t)v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v8, (uint64_t)v12, type metadata accessor for PBDateRange);
    sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750((uint64_t)v12, type metadata accessor for PBDateRange);
    if (v4) {
      return result;
    }
  }
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v15 + 16))
  {
    type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
    sub_22D1B9F34(&qword_268541628, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
    swift_bridgeObjectRetain();
    sub_22D2BC2D0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22D1A5A24(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for PBDateRange(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - v8;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v31 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v16 = v32;
  uint64_t v17 = v32
      + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_22D1B9E60((uint64_t)v14, (uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
  sub_22D1B9E60(v17, v18, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    uint64_t v20 = v31;
    sub_22D1B9E60((uint64_t)v9, (uint64_t)v31, &qword_26853D7B0, type metadata accessor for PBDateRange);
    if (v19(v18, 1, v3) != 1)
    {
      uint64_t v21 = v30;
      sub_22D1D06E8(v18, v30, type metadata accessor for PBDateRange);
      swift_retain();
      swift_retain();
      char v22 = _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(v20, v21);
      sub_22D1B9750(v21, type metadata accessor for PBDateRange);
      sub_22D1D08A0((uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
      sub_22D1B9750((uint64_t)v20, type metadata accessor for PBDateRange);
      sub_22D1D08A0((uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
      if (v22) {
        goto LABEL_8;
      }
LABEL_9:
      char v27 = 0;
      goto LABEL_10;
    }
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
    sub_22D1B9750((uint64_t)v20, type metadata accessor for PBDateRange);
LABEL_6:
    sub_22D1D05E4((uint64_t)v9, &qword_26853DB28, &qword_26853D7B0, type metadata accessor for PBDateRange);
    goto LABEL_9;
  }
  swift_retain();
  swift_retain();
  sub_22D1D08A0((uint64_t)v14, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if (v19(v18, 1, v3) != 1) {
    goto LABEL_6;
  }
  sub_22D1D08A0((uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
LABEL_8:
  uint64_t v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  swift_beginAccess();
  uint64_t v24 = *v23;
  uint64_t v25 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
  swift_beginAccess();
  uint64_t v26 = *v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v27 = sub_22D114F10(v24, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_release();
  swift_release();
  return v27 & 1;
}

uint64_t PBActivitySummarySeries.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBActivitySummarySeries, &qword_268540FB8, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries);
}

uint64_t sub_22D1A5F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D1E0, &qword_2685406B8, a2);
}

unint64_t sub_22D1A5F84()
{
  return 0xD000000000000030;
}

uint64_t sub_22D1A5FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBActivitySummarySeries.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1A5FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBActivitySummarySeries.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1A5FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D90, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A604C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D1D8, (uint64_t)qword_2685406A0, a1);
}

uint64_t sub_22D1A6070(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBB0, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A60DC()
{
  sub_22D1B9F34(&qword_26853DBB0, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries);
  return sub_22D2BC200();
}

uint64_t sub_22D1A6158(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBActivitySummarySeries, sub_22D1A5A24) & 1;
}

uint64_t sub_22D1A619C()
{
  uint64_t result = sub_22D2BCCB0();
  qword_2685406C0 = 0xD000000000000030;
  *(void *)algn_2685406C8 = 0x800000022D2D9390;
  return result;
}

uint64_t static PBActivitySummarySeries.ActivitySummary.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853D1E8, &qword_2685406C0);
}

uint64_t sub_22D1A6238()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685406D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685406D0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0BB0;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "activeCalories";
  *(void *)(v7 + 8) = 14;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "activeCalorieGoal";
  *(void *)(v11 + 8) = 17;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "moveMinutes";
  *((void *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "moveMinuteGoal";
  *((void *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  uint64_t v16 = (void *)(v6 + 4 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 5;
  *(void *)uint64_t v17 = "standHours";
  *((void *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  uint64_t v18 = (void *)(v6 + 5 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 6;
  *(void *)uint64_t v19 = "standHoursGoal";
  *((void *)v19 + 1) = 14;
  v19[16] = 2;
  v10();
  uint64_t v20 = (void *)(v6 + 6 * v3);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 56);
  void *v20 = 7;
  *(void *)uint64_t v21 = "recorded_time";
  *((void *)v21 + 1) = 13;
  v21[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBActivitySummarySeries.ActivitySummary._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D1F0, (uint64_t)qword_2685406D0, a1);
}

uint64_t PBActivitySummarySeries.ActivitySummary.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          sub_22D2BC130();
          break;
        case 7:
          sub_22D2BC170();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBActivitySummarySeries.ActivitySummary.traverse<A>(visitor:)()
{
  if (!*(_DWORD *)v0 || (uint64_t result = sub_22D2BC280(), !v1))
  {
    if (!*(_DWORD *)(v0 + 4) || (uint64_t result = sub_22D2BC280(), !v1))
    {
      if (!*(_DWORD *)(v0 + 8) || (uint64_t result = sub_22D2BC280(), !v1))
      {
        if (!*(_DWORD *)(v0 + 12) || (uint64_t result = sub_22D2BC280(), !v1))
        {
          if (!*(_DWORD *)(v0 + 16) || (uint64_t result = sub_22D2BC280(), !v1))
          {
            if (!*(_DWORD *)(v0 + 20) || (uint64_t result = sub_22D2BC280(), !v1))
            {
              unint64_t v3 = *(void *)(v0 + 32);
              uint64_t v4 = HIBYTE(v3) & 0xF;
              if ((v3 & 0x2000000000000000) == 0) {
                uint64_t v4 = *(void *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
              }
              if (!v4 || (uint64_t result = sub_22D2BC2B0(), !v1))
              {
                type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
                return sub_22D2BBFD0();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBActivitySummarySeries.ActivitySummary.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBActivitySummarySeries.ActivitySummary, &qword_268540FC0, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_22D1A6878@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0xE000000000000000;
  return sub_22D2BBFE0();
}

uint64_t sub_22D1A68A8(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853D1E8, &qword_2685406C0);
}

uint64_t (*sub_22D1A68D8())()
{
  return nullsub_1;
}

uint64_t sub_22D1A68FC()
{
  return PBActivitySummarySeries.ActivitySummary.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1A6914()
{
  return PBActivitySummarySeries.ActivitySummary.traverse<A>(visitor:)();
}

uint64_t sub_22D1A692C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D88, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A69A8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D1F0, (uint64_t)qword_2685406D0, a1);
}

uint64_t sub_22D1A69CC(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541628, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A6A38()
{
  sub_22D1B9F34(&qword_268541628, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
  return sub_22D2BC200();
}

unint64_t static PBPatientMeta.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_22D1A6AD4()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685406E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685406E8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_22D2C0BB0;
  unint64_t v5 = v21 + v4 + *(int *)(v2 + 56);
  *(void *)(v21 + v4) = 1;
  *(void *)unint64_t v5 = "hasWatch";
  *(void *)(v5 + 8) = 8;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_22D2BC2F0();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v21 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v21 + v4 + v3) = 2;
  *(void *)unint64_t v9 = "chr_meta";
  *(void *)(v9 + 8) = 8;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v21 + v4 + 2 * v3);
  unint64_t v11 = (char *)v10 + *(int *)(v2 + 56);
  *uint64_t v10 = 3;
  *(void *)unint64_t v11 = "share_timezone";
  *((void *)v11 + 1) = 14;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v21 + v4 + 3 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "sex";
  *((void *)v13 + 1) = 3;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v21 + v4 + 4 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "heartRateMeds";
  *((void *)v15 + 1) = 13;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v21 + v4 + 5 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 6;
  *(void *)uint64_t v17 = "name";
  *((void *)v17 + 1) = 4;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v21 + v4 + 6 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 7;
  *(void *)uint64_t v19 = "dob";
  *((void *)v19 + 1) = 3;
  v19[16] = 2;
  v8();
  return sub_22D2BC300();
}

uint64_t static PBPatientMeta._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D1F8, (uint64_t)qword_2685406E8, a1);
}

uint64_t sub_22D1A6E18()
{
  type metadata accessor for PBPatientMeta._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0xE000000000000000;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  uint64_t v2 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  uint64_t v4 = type metadata accessor for PBPatientMeta.HumanName(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
  *uint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  qword_268540700 = v0;
  return result;
}

uint64_t type metadata accessor for PBSleepSummary(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685417C8);
}

uint64_t type metadata accessor for PBSleepSeries(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685417A8);
}

uint64_t type metadata accessor for PBHistogramSeries(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541788);
}

uint64_t type metadata accessor for PBMedicationTrackings(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541AD8);
}

uint64_t type metadata accessor for PBMedicationTrackingDoseEvents(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541AF8);
}

uint64_t type metadata accessor for PBMedicationTrackingSchedules(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B28);
}

uint64_t type metadata accessor for PBActiveMedications(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541AB8);
}

uint64_t sub_22D1A7000(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v35 = type metadata accessor for PBPatientMeta.HumanName;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  float v33 = type metadata accessor for PBPatientMeta.HeartRateMeds;
  uint64_t v34 = (uint64_t)&v31 - v6;
  sub_22D167880(0, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, v4);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v32 = (uint64_t)&v31 - v8;
  *(unsigned char *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0xE000000000000000;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0xE000000000000000;
  uint64_t v9 = v2
     + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  uint64_t v10 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  uint64_t v31 = v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  uint64_t v12 = type metadata accessor for PBPatientMeta.HumanName(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (void *)(v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
  *uint64_t v13 = 0;
  v13[1] = 0xE000000000000000;
  swift_beginAccess();
  char v14 = *(unsigned char *)(a1 + 16);
  swift_beginAccess();
  *(unsigned char *)(v2 + 16) = v14;
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v2 + 24) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v2 + 32) = v17;
  *(void *)(v2 + 40) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  swift_beginAccess();
  *(void *)(v2 + 48) = v19;
  *(void *)(v2 + 56) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
  swift_beginAccess();
  uint64_t v22 = v32;
  uint64_t v21 = v33;
  sub_22D1B9E60(v20, v32, &qword_268540DE8, v33);
  swift_beginAccess();
  sub_22D1B9D9C(v22, v9, &qword_268540DE8, v21);
  swift_endAccess();
  uint64_t v23 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
  swift_beginAccess();
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  sub_22D1B9E60(v23, v34, &qword_26853E468, v35);
  uint64_t v26 = v31;
  swift_beginAccess();
  sub_22D1B9D9C(v25, v26, &qword_26853E468, v24);
  swift_endAccess();
  char v27 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
  swift_beginAccess();
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *uint64_t v13 = v29;
  v13[1] = v28;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_22D1A7450()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  sub_22D1D08A0(v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBPatientMeta.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBPatientMeta, (void (*)(void))type metadata accessor for PBPatientMeta._StorageClass, sub_22D1A7000, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1A7590);
}

uint64_t sub_22D1A7590()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC0B0();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for PBPatientMeta.CHRMeta(0);
          sub_22D1B9F34(&qword_268541650, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta);
          uint64_t v4 = v3;
          sub_22D2BC190();
          goto LABEL_5;
        case 3:
        case 4:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          type metadata accessor for PBPatientMeta.HeartRateMeds(0);
          sub_22D1B9F34(&qword_268541668, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          type metadata accessor for PBPatientMeta.HumanName(0);
          sub_22D1B9F34(&qword_268541680, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBPatientMeta.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBPatientMeta, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1A7918);
}

uint64_t sub_22D1A7918(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v31 = (uint64_t)&v27 - v5;
  uint64_t v32 = type metadata accessor for PBPatientMeta.HumanName(0);
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v29 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D167880(0, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, v3);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) != 1 || (uint64_t result = sub_22D2BC230(), !v1))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 24) + 16)
      || (type metadata accessor for PBPatientMeta.CHRMeta(0),
          uint64_t v28 = a1,
          sub_22D1B9F34(&qword_268541650, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta), swift_bridgeObjectRetain(), a1 = v28, sub_22D2BC2D0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
    {
      swift_beginAccess();
      unint64_t v14 = *(void *)(a1 + 40);
      uint64_t v15 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0) {
        uint64_t v15 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
      }
      if (!v15 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
      {
        swift_beginAccess();
        unint64_t v16 = *(void *)(a1 + 56);
        uint64_t v17 = HIBYTE(v16) & 0xF;
        if ((v16 & 0x2000000000000000) == 0) {
          uint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFLL;
        }
        if (!v17 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
        {
          uint64_t v18 = a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
          swift_beginAccess();
          sub_22D1B9E60(v18, (uint64_t)v9, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v9, 1, v10) == 1)
          {
            sub_22D1D08A0((uint64_t)v9, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
          }
          else
          {
            sub_22D1D06E8((uint64_t)v9, (uint64_t)v12, type metadata accessor for PBPatientMeta.HeartRateMeds);
            sub_22D1B9F34(&qword_268541668, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
            sub_22D2BC2E0();
            uint64_t result = sub_22D1B9750((uint64_t)v12, type metadata accessor for PBPatientMeta.HeartRateMeds);
            if (v1) {
              return result;
            }
          }
          uint64_t v19 = a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
          swift_beginAccess();
          uint64_t v20 = v31;
          sub_22D1B9E60(v19, v31, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v20, 1, v32) == 1)
          {
            sub_22D1D08A0(v20, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
          }
          else
          {
            uint64_t v21 = v20;
            uint64_t v22 = v29;
            sub_22D1D06E8(v21, v29, type metadata accessor for PBPatientMeta.HumanName);
            sub_22D1B9F34(&qword_268541680, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
            sub_22D2BC2E0();
            uint64_t result = sub_22D1B9750(v22, type metadata accessor for PBPatientMeta.HumanName);
            if (v1) {
              return result;
            }
          }
          uint64_t v23 = (uint64_t *)(a1
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
          uint64_t result = swift_beginAccess();
          uint64_t v25 = *v23;
          unint64_t v24 = v23[1];
          uint64_t v26 = HIBYTE(v24) & 0xF;
          if ((v24 & 0x2000000000000000) == 0) {
            uint64_t v26 = v25 & 0xFFFFFFFFFFFFLL;
          }
          if (v26)
          {
            swift_bridgeObjectRetain();
            sub_22D2BC2B0();
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22D1A8014(uint64_t a1, uint64_t a2)
{
  uint64_t v75 = type metadata accessor for PBPatientMeta.HumanName(0);
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v69 = (uint64_t *)((char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D1D0AB4(0, &qword_268542050, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
  uint64_t v72 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v66 - v6;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v70 = (uint64_t *)((char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v74 = (uint64_t)&v66 - v12;
  uint64_t v13 = type metadata accessor for PBPatientMeta.HeartRateMeds(0);
  uint64_t v76 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v71 = (unsigned __int8 *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268542058, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v66 - v17;
  sub_22D167880(0, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, v8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)&v66 - v23;
  swift_beginAccess();
  int v25 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess();
  if (v25 == *(unsigned __int8 *)(a2 + 16))
  {
    uint64_t v67 = (unsigned __int8 *)v22;
    uint64_t v68 = v7;
    swift_beginAccess();
    uint64_t v27 = *(void *)(a1 + 24);
    swift_beginAccess();
    uint64_t v28 = *(void *)(a2 + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v29 = sub_22D1151CC(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      goto LABEL_27;
    }
    swift_beginAccess();
    uint64_t v31 = *(void *)(a1 + 32);
    uint64_t v30 = *(void *)(a1 + 40);
    swift_beginAccess();
    if (v31 != *(void *)(a2 + 32) || v30 != *(void *)(a2 + 40))
    {
      char v26 = 0;
      if ((sub_22D2BD660() & 1) == 0) {
        goto LABEL_28;
      }
    }
    swift_beginAccess();
    uint64_t v32 = *(void *)(a1 + 48);
    uint64_t v33 = *(void *)(a1 + 56);
    swift_beginAccess();
    if (v32 != *(void *)(a2 + 48) || v33 != *(void *)(a2 + 56))
    {
      char v26 = 0;
      if ((sub_22D2BD660() & 1) == 0) {
        goto LABEL_28;
      }
    }
    uint64_t v34 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
    swift_beginAccess();
    sub_22D1B9E60(v34, (uint64_t)v24, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
    uint64_t v35 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__heartRateMeds;
    swift_beginAccess();
    uint64_t v36 = (uint64_t)&v18[*(int *)(v16 + 48)];
    sub_22D1B9E60((uint64_t)v24, (uint64_t)v18, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
    sub_22D1B9E60(v35, v36, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
    uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
    if (v37((uint64_t)v18, 1, v13) == 1)
    {
      sub_22D1D08A0((uint64_t)v24, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
      int v38 = v37(v36, 1, v13);
      uint64_t v39 = (uint64_t)v68;
      if (v38 == 1)
      {
        sub_22D1D08A0((uint64_t)v18, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v46 = v67;
      sub_22D1B9E60((uint64_t)v18, (uint64_t)v67, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
      int v47 = v37(v36, 1, v13);
      uint64_t v39 = (uint64_t)v68;
      if (v47 != 1)
      {
        uint64_t v52 = v36;
        uint64_t v53 = v71;
        sub_22D1D06E8(v52, (uint64_t)v71, type metadata accessor for PBPatientMeta.HeartRateMeds);
        if (*v46 != *v53 || v46[1] != v53[1])
        {
          sub_22D1B9750((uint64_t)v53, type metadata accessor for PBPatientMeta.HeartRateMeds);
          sub_22D1D08A0((uint64_t)v24, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
          sub_22D1B9750((uint64_t)v46, type metadata accessor for PBPatientMeta.HeartRateMeds);
          uint64_t v54 = (uint64_t)v18;
          char v55 = &qword_268540DE8;
          uint64_t v56 = type metadata accessor for PBPatientMeta.HeartRateMeds;
          goto LABEL_22;
        }
        sub_22D2BBFF0();
        sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
        char v65 = sub_22D2BCB90();
        sub_22D1B9750((uint64_t)v53, type metadata accessor for PBPatientMeta.HeartRateMeds);
        sub_22D1D08A0((uint64_t)v24, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
        sub_22D1B9750((uint64_t)v67, type metadata accessor for PBPatientMeta.HeartRateMeds);
        sub_22D1D08A0((uint64_t)v18, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
        if ((v65 & 1) == 0) {
          goto LABEL_27;
        }
LABEL_13:
        uint64_t v40 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
        swift_beginAccess();
        uint64_t v41 = v74;
        sub_22D1B9E60(v40, v74, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
        uint64_t v42 = a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__name;
        swift_beginAccess();
        uint64_t v43 = v39 + *(int *)(v72 + 48);
        sub_22D1B9E60(v41, v39, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
        sub_22D1B9E60(v42, v43, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
        char v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
        uint64_t v45 = v75;
        if (v44(v39, 1, v75) == 1)
        {
          sub_22D1D08A0(v41, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
          if (v44(v43, 1, v45) == 1)
          {
            sub_22D1D08A0(v39, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
LABEL_37:
            char v61 = (uint64_t *)(a1
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
            swift_beginAccess();
            uint64_t v62 = *v61;
            uint64_t v63 = v61[1];
            uint64_t v64 = (void *)(a2
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
            swift_beginAccess();
            if (v62 == *v64 && v63 == v64[1]) {
              char v26 = 1;
            }
            else {
              char v26 = sub_22D2BD660();
            }
            goto LABEL_28;
          }
          goto LABEL_25;
        }
        uint64_t v57 = v70;
        sub_22D1B9E60(v39, (uint64_t)v70, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
        if (v44(v43, 1, v45) == 1)
        {
          sub_22D1D08A0(v41, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
          sub_22D1B9750((uint64_t)v57, type metadata accessor for PBPatientMeta.HumanName);
LABEL_25:
          uint64_t v48 = &qword_268542050;
          uint64_t v49 = &qword_26853E468;
          uint64_t v50 = type metadata accessor for PBPatientMeta.HumanName;
          uint64_t v51 = v39;
          goto LABEL_26;
        }
        uint64_t v59 = v69;
        sub_22D1D06E8(v43, (uint64_t)v69, type metadata accessor for PBPatientMeta.HumanName);
        if (*v57 == *v59 && v57[1] == v59[1] || (sub_22D2BD660())
          && (v57[2] == v59[2] && v57[3] == v59[3] || (sub_22D2BD660() & 1) != 0))
        {
          sub_22D2BBFF0();
          sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
          char v60 = sub_22D2BCB90();
          sub_22D1B9750((uint64_t)v59, type metadata accessor for PBPatientMeta.HumanName);
          sub_22D1D08A0(v41, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
          sub_22D1B9750((uint64_t)v57, type metadata accessor for PBPatientMeta.HumanName);
          sub_22D1D08A0(v39, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
          if (v60) {
            goto LABEL_37;
          }
LABEL_27:
          char v26 = 0;
LABEL_28:
          swift_release();
          swift_release();
          return v26 & 1;
        }
        sub_22D1B9750((uint64_t)v59, type metadata accessor for PBPatientMeta.HumanName);
        sub_22D1D08A0(v41, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName);
        sub_22D1B9750((uint64_t)v57, type metadata accessor for PBPatientMeta.HumanName);
        uint64_t v54 = v39;
        char v55 = &qword_26853E468;
        uint64_t v56 = type metadata accessor for PBPatientMeta.HumanName;
LABEL_22:
        sub_22D1D08A0(v54, v55, v56);
        goto LABEL_27;
      }
      sub_22D1D08A0((uint64_t)v24, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds);
      sub_22D1B9750((uint64_t)v46, type metadata accessor for PBPatientMeta.HeartRateMeds);
    }
    uint64_t v48 = &qword_268542058;
    uint64_t v49 = &qword_268540DE8;
    uint64_t v50 = type metadata accessor for PBPatientMeta.HeartRateMeds;
    uint64_t v51 = (uint64_t)v18;
LABEL_26:
    sub_22D1D05E4(v51, v48, v49, v50);
    goto LABEL_27;
  }
  char v26 = 0;
  return v26 & 1;
}

uint64_t PBPatientMeta.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBPatientMeta, &qword_268540FC8, (void (*)(uint64_t))type metadata accessor for PBPatientMeta);
}

uint64_t sub_22D1A8C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D200, &qword_268540700, a2);
}

unint64_t sub_22D1A8CB8()
{
  return 0xD000000000000026;
}

uint64_t sub_22D1A8CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1A8CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1A8D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D80, (void (*)(uint64_t))type metadata accessor for PBPatientMeta);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A8D80@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D1F8, (uint64_t)qword_2685406E8, a1);
}

uint64_t sub_22D1A8DA4(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DBA8, (void (*)(uint64_t))type metadata accessor for PBPatientMeta);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A8E10()
{
  sub_22D1B9F34(&qword_26853DBA8, (void (*)(uint64_t))type metadata accessor for PBPatientMeta);
  return sub_22D2BC200();
}

uint64_t sub_22D1A8E8C(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBPatientMeta, sub_22D1A8014) & 1;
}

uint64_t sub_22D1A8ED0()
{
  uint64_t result = sub_22D2BCCB0();
  qword_268540708 = 0xD000000000000026;
  unk_268540710 = 0x800000022D2D93D0;
  return result;
}

uint64_t static PBPatientMeta.CHRMeta.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853D208, &qword_268540708);
}

uint64_t sub_22D1A8F64()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540718);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540718);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "name";
  *(void *)(v7 + 8) = 4;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "last_sync_time";
  *((void *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "gateway_id";
  *(void *)(v12 + 8) = 10;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBPatientMeta.CHRMeta._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D210, (uint64_t)qword_268540718, a1);
}

uint64_t PBPatientMeta.CHRMeta.decodeMessage<A>(decoder:)()
{
  return sub_22D1A91D8();
}

uint64_t sub_22D1A91D8()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2 || result == 1) {
        sub_22D2BC170();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBPatientMeta.CHRMeta.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1A92AC(a1, a2, a3, (void (*)(void))type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t sub_22D1A92AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  unint64_t v7 = v4[1];
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = *v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8 || (uint64_t result = sub_22D2BC2B0(), !v5))
  {
    unint64_t v10 = v4[3];
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v4[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v11 || (uint64_t result = sub_22D2BC2B0(), !v5))
    {
      unint64_t v12 = v4[5];
      uint64_t v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v13 = v4[4] & 0xFFFFFFFFFFFFLL;
      }
      if (!v13 || (uint64_t result = sub_22D2BC2B0(), !v5))
      {
        a4(0);
        return sub_22D2BBFD0();
      }
    }
  }
  return result;
}

uint64_t static PBPatientMeta.CHRMeta.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B7720(a1, a2, type metadata accessor for PBPatientMeta.CHRMeta) & 1;
}

uint64_t PBPatientMeta.CHRMeta.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBPatientMeta.CHRMeta, &qword_268540FD0, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t sub_22D1A9448(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853D208, &qword_268540708);
}

uint64_t sub_22D1A9470()
{
  return PBPatientMeta.CHRMeta.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1A9488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.CHRMeta.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1A94A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D78, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A951C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D210, (uint64_t)qword_268540718, a1);
}

uint64_t sub_22D1A9540(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541650, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A95AC()
{
  sub_22D1B9F34(&qword_268541650, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta);
  return sub_22D2BC200();
}

uint64_t sub_22D1A9628(char *a1, char *a2)
{
  return sub_22D1B7720(a1, a2, type metadata accessor for PBPatientMeta.CHRMeta) & 1;
}

uint64_t sub_22D1A9658()
{
  uint64_t result = sub_22D2BCCB0();
  qword_268540730 = 0xD000000000000026;
  *(void *)algn_268540738 = 0x800000022D2D93D0;
  return result;
}

uint64_t static PBPatientMeta.HeartRateMeds.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853D218, &qword_268540730);
}

uint64_t sub_22D1A96F8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540740);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540740);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "calciumChannelBlockers";
  *(void *)(v7 + 8) = 22;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "betaBlockers";
  *((void *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBPatientMeta.HeartRateMeds._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D220, (uint64_t)qword_268540740, a1);
}

uint64_t PBPatientMeta.HeartRateMeds.decodeMessage<A>(decoder:)()
{
  return sub_22D1A9914();
}

uint64_t sub_22D1A9914()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_22D2BC0B0();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBPatientMeta.HeartRateMeds.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1A99D4(a1, a2, a3, (void (*)(void))type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_22D1A99D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (*v4 != 1 || (uint64_t result = sub_22D2BC230(), !v5))
  {
    if (v4[1] != 1 || (uint64_t result = sub_22D2BC230(), !v5))
    {
      a4(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t static PBPatientMeta.HeartRateMeds.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22D1B7938(a1, a2, type metadata accessor for PBPatientMeta.HeartRateMeds) & 1;
}

uint64_t PBPatientMeta.HeartRateMeds.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBPatientMeta.HeartRateMeds, &qword_268540FD8, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_22D1A9B28@<X0>(_WORD *a1@<X8>)
{
  *a1 = 0;
  return sub_22D2BBFE0();
}

uint64_t sub_22D1A9B4C(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853D218, &qword_268540730);
}

uint64_t sub_22D1A9B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.HeartRateMeds.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1A9B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D70, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1A9C08@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D220, (uint64_t)qword_268540740, a1);
}

uint64_t sub_22D1A9C2C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541668, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1A9C98()
{
  sub_22D1B9F34(&qword_268541668, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
  return sub_22D2BC200();
}

uint64_t sub_22D1A9D14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22D1B7938(a1, a2, type metadata accessor for PBPatientMeta.HeartRateMeds) & 1;
}

uint64_t sub_22D1A9D44()
{
  uint64_t result = sub_22D2BCCB0();
  qword_268540758 = 0xD000000000000026;
  unk_268540760 = 0x800000022D2D93D0;
  return result;
}

uint64_t static PBPatientMeta.HumanName.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853D228, &qword_268540758);
}

uint64_t sub_22D1A9DDC()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540768);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540768);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "first_name";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "last_name";
  *((void *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBPatientMeta.HumanName._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D230, (uint64_t)qword_268540768, a1);
}

uint64_t PBPatientMeta.HumanName.decodeMessage<A>(decoder:)()
{
  return sub_22D1A9FF8();
}

uint64_t sub_22D1A9FF8()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_22D2BC170();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBPatientMeta.HumanName.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D18EA08(a1, a2, a3, (void (*)(void))type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t static PBPatientMeta.HumanName.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B7530(a1, a2, type metadata accessor for PBPatientMeta.HumanName) & 1;
}

uint64_t PBPatientMeta.HumanName.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBPatientMeta.HumanName, &qword_268540FE0, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t sub_22D1AA130(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853D228, &qword_268540758);
}

uint64_t sub_22D1AA158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPatientMeta.HumanName.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1AA170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D68, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1AA1EC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D230, (uint64_t)qword_268540768, a1);
}

uint64_t sub_22D1AA210(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541680, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1AA27C()
{
  sub_22D1B9F34(&qword_268541680, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
  return sub_22D2BC200();
}

uint64_t sub_22D1AA2F8(char *a1, char *a2)
{
  return sub_22D1B7530(a1, a2, type metadata accessor for PBPatientMeta.HumanName) & 1;
}

unint64_t static PBActiveMedications.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D1AA344(uint64_t a1)
{
  return sub_22D1B170C(a1, qword_268540780, (uint64_t)"uuids", 5, MEMORY[0x263F50718]);
}

uint64_t static PBActiveMedications._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D238, (uint64_t)qword_268540780, a1);
}

uint64_t PBActiveMedications.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_22D2BC080();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_22D2BC140();
    }
  }
  return result;
}

uint64_t PBActiveMedications.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_22D2BC290(), !v1))
  {
    type metadata accessor for PBActiveMedications(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t PBActiveMedications.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBActiveMedications, &qword_268540FE8, (void (*)(uint64_t))type metadata accessor for PBActiveMedications);
}

unint64_t sub_22D1AA4D8()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_22D1AA4F4()
{
  return PBActiveMedications.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1AA50C()
{
  return PBActiveMedications.traverse<A>(visitor:)();
}

uint64_t sub_22D1AA524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D60, (void (*)(uint64_t))type metadata accessor for PBActiveMedications);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1AA5A0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D238, (uint64_t)qword_268540780, a1);
}

uint64_t sub_22D1AA5C4(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DB70, (void (*)(uint64_t))type metadata accessor for PBActiveMedications);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1AA630()
{
  sub_22D1B9F34(&qword_26853DB70, (void (*)(uint64_t))type metadata accessor for PBActiveMedications);
  return sub_22D2BC200();
}

uint64_t sub_22D1AA6AC(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, (uint64_t (*)(void, void))sub_22D10F3F8, type metadata accessor for PBActiveMedications) & 1;
}

unint64_t static PBMedicationTracking.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D1AA70C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540798);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540798);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_22D2BFF20;
  unint64_t v5 = v44 + v4;
  unint64_t v6 = v44 + v4 + *(int *)(v2 + 56);
  *(void *)(v44 + v4) = 1;
  *(void *)unint64_t v6 = "medication_semantic_identifier";
  *(void *)(v6 + 8) = 30;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v44 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "localized_ontology_preferred_name";
  *(void *)(v10 + 8) = 33;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v44 + v4 + 2 * v3);
  unint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "localized_ontology_brand_name";
  *((void *)v12 + 1) = 29;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v44 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "localized_ontology_generic_name";
  *((void *)v14 + 1) = 31;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v44 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "specific_rx_norm_code";
  *((void *)v16 + 1) = 21;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v44 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "free_text_medication_form";
  *((void *)v18 + 1) = 25;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v44 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "free_text_quantified_strength";
  *((void *)v20 + 1) = 29;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v44 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "localized_ontology_basic_dose_forms";
  *((void *)v22 + 1) = 35;
  v22[16] = 2;
  v9();
  uint64_t v23 = v44 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "localized_ontology_logging_unit_singular";
  *(void *)(v23 + 8) = 40;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  unint64_t v24 = (void *)(v44 + v4 + 9 * v3);
  int v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)int v25 = "localized_ontology_logging_unit_plural";
  *((void *)v25 + 1) = 38;
  v25[16] = 2;
  v9();
  char v26 = (void *)(v44 + v4 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 11;
  *(void *)uint64_t v27 = "unlocalized_quantified_unit_strength_preferred_display_string";
  *((void *)v27 + 1) = 61;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v44 + v4 + 11 * v3);
  char v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 12;
  *(void *)char v29 = "date_added";
  *((void *)v29 + 1) = 10;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v44 + v4 + 12 * v3);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 13;
  *(void *)uint64_t v31 = "last_dosage_event_date";
  *((void *)v31 + 1) = 22;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v44 + v4 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 14;
  *(void *)uint64_t v33 = "generic_rx_norm_code";
  *((void *)v33 + 1) = 20;
  v33[16] = 2;
  v9();
  uint64_t v34 = (void *)(v44 + v4 + 14 * v3);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 15;
  *(void *)uint64_t v35 = "uuid";
  *((void *)v35 + 1) = 4;
  v35[16] = 2;
  v9();
  uint64_t v36 = (void *)(v44 + v4 + 15 * v3);
  uint64_t v37 = (char *)v36 + *(int *)(v2 + 56);
  *uint64_t v36 = 16;
  *(void *)uint64_t v37 = "free_text_medication_logging_unit";
  *((void *)v37 + 1) = 33;
  v37[16] = 2;
  v9();
  uint64_t v38 = v44 + v4 + 16 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 16 * v3) = 17;
  *(void *)uint64_t v38 = "free_text_medication_name";
  *(void *)(v38 + 8) = 25;
  *(unsigned char *)(v38 + 16) = 2;
  v9();
  uint64_t v39 = (void *)(v44 + v4 + 17 * v3);
  uint64_t v40 = (char *)v39 + *(int *)(v2 + 56);
  void *v39 = 18;
  *(void *)uint64_t v40 = "grouper_id";
  *((void *)v40 + 1) = 10;
  v40[16] = 2;
  v9();
  uint64_t v41 = (void *)(v44 + v4 + 18 * v3);
  uint64_t v42 = (char *)v41 + *(int *)(v2 + 56);
  *uint64_t v41 = 19;
  *(void *)uint64_t v42 = "free_text_quantified_strength_unit";
  *((void *)v42 + 1) = 34;
  v42[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBMedicationTracking._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D240, (uint64_t)qword_268540798, a1);
}

uint64_t sub_22D1AAD30()
{
  type metadata accessor for PBMedicationTracking._StorageClass();
  swift_allocObject();
  uint64_t result = sub_22D1AAD70();
  qword_2685407B0 = result;
  return result;
}

uint64_t sub_22D1AAD70()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0xE000000000000000;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0xE000000000000000;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 0xE000000000000000;
  *(void *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 104) = 1;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0xE000000000000000;
  *(void *)(v0 + 128) = 0;
  *(void *)(v0 + 136) = 0xE000000000000000;
  *(void *)(v0 + 144) = 0;
  *(void *)(v0 + 152) = 0xE000000000000000;
  *(void *)(v0 + 160) = 0;
  *(void *)(v0 + 168) = 0xE000000000000000;
  *(void *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 0xE000000000000000;
  *(void *)(v0 + 192) = 0;
  *(void *)(v0 + 200) = 0xE000000000000000;
  *(void *)(v0 + 208) = 0;
  *(void *)(v0 + 216) = 0xE000000000000000;
  *(void *)(v0 + 224) = 0;
  *(void *)(v0 + 232) = 0xE000000000000000;
  *(void *)(v0 + 240) = 0;
  *(void *)(v0 + 248) = 0xE000000000000000;
  *(void *)(v0 + 256) = 0;
  *(unsigned char *)(v0 + 264) = 1;
  *(void *)(v0 + 272) = 0;
  *(void *)(v0 + 280) = 0xE000000000000000;
  *(void *)(v0 + 288) = 0;
  *(void *)(v0 + 296) = 0xE000000000000000;
  *(void *)(v0 + 304) = 0;
  *(void *)(v0 + 312) = 0xE000000000000000;
  return result;
}

uint64_t sub_22D1AADD4(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 56) = 0xE000000000000000;
  *(void *)(v1 + 72) = 0xE000000000000000;
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = 0xE000000000000000;
  *(void *)(v1 + 96) = 0;
  *(unsigned char *)(v1 + 104) = 1;
  *(void *)(v1 + 112) = 0;
  *(void *)(v1 + 120) = 0xE000000000000000;
  *(void *)(v1 + 128) = 0;
  *(void *)(v1 + 136) = 0xE000000000000000;
  *(void *)(v1 + 144) = 0;
  *(void *)(v1 + 152) = 0xE000000000000000;
  *(void *)(v1 + 160) = 0;
  *(void *)(v1 + 168) = 0xE000000000000000;
  *(void *)(v1 + 176) = 0;
  *(void *)(v1 + 184) = 0xE000000000000000;
  *(void *)(v1 + 192) = 0;
  *(void *)(v1 + 200) = 0xE000000000000000;
  *(void *)(v1 + 208) = 0;
  *(void *)(v1 + 216) = 0xE000000000000000;
  *(void *)(v1 + 224) = 0;
  *(void *)(v1 + 232) = 0xE000000000000000;
  *(void *)(v1 + 240) = 0;
  *(unsigned char *)(v1 + 264) = 1;
  *(void *)(v1 + 272) = 0;
  *(void *)(v1 + 280) = 0xE000000000000000;
  *(void *)(v1 + 288) = 0;
  *(void *)(v1 + 296) = 0xE000000000000000;
  *(void *)(v1 + 304) = 0;
  *(void *)(v1 + 312) = 0xE000000000000000;
  *(void *)(v1 + 248) = 0xE000000000000000;
  *(void *)(v1 + 256) = 0;
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v6;
  *(void *)(v1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  swift_beginAccess();
  *(void *)(v1 + 48) = v8;
  *(void *)(v1 + 56) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  swift_beginAccess();
  *(void *)(v1 + 64) = v10;
  *(void *)(v1 + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 88);
  swift_beginAccess();
  *(void *)(v1 + 80) = v12;
  *(void *)(v1 + 88) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 96);
  LOBYTE(v7) = *(unsigned char *)(a1 + 104);
  swift_beginAccess();
  *(void *)(v1 + 96) = v13;
  *(unsigned char *)(v1 + 104) = v7;
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v14 = *(void *)(a1 + 120);
  swift_beginAccess();
  *(void *)(v1 + 112) = v15;
  *(void *)(v1 + 120) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 128);
  uint64_t v16 = *(void *)(a1 + 136);
  swift_beginAccess();
  *(void *)(v1 + 128) = v17;
  *(void *)(v1 + 136) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  swift_beginAccess();
  *(void *)(v1 + 144) = v19;
  *(void *)(v1 + 152) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v21 = *(void *)(a1 + 160);
  uint64_t v20 = *(void *)(a1 + 168);
  swift_beginAccess();
  *(void *)(v1 + 160) = v21;
  *(void *)(v1 + 168) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v23 = *(void *)(a1 + 176);
  uint64_t v22 = *(void *)(a1 + 184);
  swift_beginAccess();
  *(void *)(v1 + 176) = v23;
  *(void *)(v1 + 184) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v25 = *(void *)(a1 + 192);
  uint64_t v24 = *(void *)(a1 + 200);
  swift_beginAccess();
  *(void *)(v1 + 192) = v25;
  *(void *)(v1 + 200) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v27 = *(void *)(a1 + 208);
  uint64_t v26 = *(void *)(a1 + 216);
  swift_beginAccess();
  *(void *)(v1 + 208) = v27;
  *(void *)(v1 + 216) = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v29 = *(void *)(a1 + 224);
  uint64_t v28 = *(void *)(a1 + 232);
  swift_beginAccess();
  *(void *)(v1 + 224) = v29;
  *(void *)(v1 + 232) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v31 = *(void *)(a1 + 240);
  uint64_t v30 = *(void *)(a1 + 248);
  swift_beginAccess();
  *(void *)(v1 + 240) = v31;
  *(void *)(v1 + 248) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v32 = *(void *)(a1 + 256);
  LOBYTE(v30) = *(unsigned char *)(a1 + 264);
  swift_beginAccess();
  *(void *)(v1 + 256) = v32;
  *(unsigned char *)(v1 + 264) = v30;
  swift_beginAccess();
  uint64_t v34 = *(void *)(a1 + 272);
  uint64_t v33 = *(void *)(a1 + 280);
  swift_beginAccess();
  *(void *)(v1 + 272) = v34;
  *(void *)(v1 + 280) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v36 = *(void *)(a1 + 288);
  uint64_t v35 = *(void *)(a1 + 296);
  swift_beginAccess();
  *(void *)(v1 + 288) = v36;
  *(void *)(v1 + 296) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v38 = *(void *)(a1 + 304);
  uint64_t v37 = *(void *)(a1 + 312);
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(void *)(v1 + 304) = v38;
  *(void *)(v1 + 312) = v37;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22D1AB488()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22D1AB528()
{
  sub_22D1AB488();
  return swift_deallocClassInstance();
}

uint64_t PBMedicationTracking.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_22D1AADD4(v2);
    swift_release();
  }
  swift_retain();
  sub_22D1AB624();
  return swift_release();
}

uint64_t sub_22D1AB624()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 19:
          swift_beginAccess();
          sub_22D2BC170();
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_22D1D0344();
          goto LABEL_12;
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 17:
        case 18:
          swift_beginAccess();
          sub_22D2BC170();
          goto LABEL_10;
        case 16:
          swift_beginAccess();
          sub_22D1D02F0();
LABEL_12:
          sub_22D2BC0D0();
LABEL_10:
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBMedicationTracking.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBMedicationTracking, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1ABA08);
}

uint64_t sub_22D1ABA08(void *a1)
{
  swift_beginAccess();
  unint64_t v3 = a1[3];
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v5 = a1[5];
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1[4] & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v7 = a1[7];
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1[6] & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v9 = a1[9];
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = a1[8] & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v11 = a1[11];
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = a1[10] & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (a1[12])
  {
    sub_22D1D0344();
    uint64_t result = sub_22D2BC240();
    if (v1) {
      return result;
    }
  }
  swift_beginAccess();
  unint64_t v14 = a1[15];
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = a1[14] & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v16 = a1[17];
  uint64_t v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v17 = a1[16] & 0xFFFFFFFFFFFFLL;
  }
  if (v17)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v18 = a1[19];
  uint64_t v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v19 = a1[18] & 0xFFFFFFFFFFFFLL;
  }
  if (v19)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v20 = a1[21];
  uint64_t v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v21 = a1[20] & 0xFFFFFFFFFFFFLL;
  }
  if (!v21) {
    goto LABEL_48;
  }
  swift_bridgeObjectRetain();
  sub_22D2BC2B0();
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_48:
  swift_beginAccess();
  unint64_t v22 = a1[23];
  uint64_t v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v23 = a1[22] & 0xFFFFFFFFFFFFLL;
  }
  if (v23)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v24 = a1[25];
  uint64_t v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v25 = a1[24] & 0xFFFFFFFFFFFFLL;
  }
  if (!v25 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    unint64_t v26 = a1[27];
    uint64_t v27 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0) {
      uint64_t v27 = a1[26] & 0xFFFFFFFFFFFFLL;
    }
    if (!v27 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
    {
      swift_beginAccess();
      unint64_t v28 = a1[29];
      uint64_t v29 = HIBYTE(v28) & 0xF;
      if ((v28 & 0x2000000000000000) == 0) {
        uint64_t v29 = a1[28] & 0xFFFFFFFFFFFFLL;
      }
      if (!v29 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
      {
        swift_beginAccess();
        unint64_t v30 = a1[31];
        uint64_t v31 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0) {
          uint64_t v31 = a1[30] & 0xFFFFFFFFFFFFLL;
        }
        if (!v31 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
        {
          swift_beginAccess();
          if (!a1[32] || (sub_22D1D02F0(), uint64_t result = sub_22D2BC240(), !v1))
          {
            swift_beginAccess();
            unint64_t v32 = a1[35];
            uint64_t v33 = HIBYTE(v32) & 0xF;
            if ((v32 & 0x2000000000000000) == 0) {
              uint64_t v33 = a1[34] & 0xFFFFFFFFFFFFLL;
            }
            if (!v33 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
            {
              swift_beginAccess();
              unint64_t v34 = a1[37];
              uint64_t v35 = HIBYTE(v34) & 0xF;
              if ((v34 & 0x2000000000000000) == 0) {
                uint64_t v35 = a1[36] & 0xFFFFFFFFFFFFLL;
              }
              if (!v35 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
              {
                uint64_t result = swift_beginAccess();
                uint64_t v36 = a1[38];
                unint64_t v37 = a1[39];
                uint64_t v38 = HIBYTE(v37) & 0xF;
                if ((v37 & 0x2000000000000000) == 0) {
                  uint64_t v38 = v36 & 0xFFFFFFFFFFFFLL;
                }
                if (v38)
                {
                  swift_bridgeObjectRetain();
                  sub_22D2BC2B0();
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22D1AC174(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  BOOL v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = sub_22D2BD660(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if ((swift_beginAccess(), uint64_t v9 = *(void *)(a1 + 32), v10 = *(void *)(a1 + 40), swift_beginAccess(), v9 == a2[4])
      && v10 == a2[5]
      || (v11 = sub_22D2BD660(), uint64_t result = 0, (v11 & 1) != 0))
    {
      if ((swift_beginAccess(),
            uint64_t v12 = *(void *)(a1 + 48),
            uint64_t v13 = *(void *)(a1 + 56),
            swift_beginAccess(),
            v12 == a2[6])
        && v13 == a2[7]
        || (v14 = sub_22D2BD660(), uint64_t result = 0, (v14 & 1) != 0))
      {
        if ((swift_beginAccess(),
              uint64_t v15 = *(void *)(a1 + 64),
              uint64_t v16 = *(void *)(a1 + 72),
              swift_beginAccess(),
              v15 == a2[8])
          && v16 == a2[9]
          || (v17 = sub_22D2BD660(), uint64_t result = 0, (v17 & 1) != 0))
        {
          if ((swift_beginAccess(),
                uint64_t v18 = *(void *)(a1 + 80),
                uint64_t v19 = *(void *)(a1 + 88),
                swift_beginAccess(),
                v18 == a2[10])
            && v19 == a2[11]
            || (v20 = sub_22D2BD660(), uint64_t result = 0, (v20 & 1) != 0))
          {
            swift_beginAccess();
            uint64_t v21 = *(void *)(a1 + 96);
            uint64_t v22 = *(unsigned __int8 *)(a1 + 104);
            swift_beginAccess();
            if (!sub_22D0BC5B8(v21, v22, a2[12])) {
              return 0;
            }
            swift_beginAccess();
            uint64_t v23 = *(void *)(a1 + 112);
            uint64_t v24 = *(void *)(a1 + 120);
            swift_beginAccess();
            if (v23 != a2[14] || v24 != a2[15])
            {
              char v25 = sub_22D2BD660();
              uint64_t result = 0;
              if ((v25 & 1) == 0) {
                return result;
              }
            }
            swift_beginAccess();
            uint64_t v26 = *(void *)(a1 + 128);
            uint64_t v27 = *(void *)(a1 + 136);
            swift_beginAccess();
            if (v26 != a2[16] || v27 != a2[17])
            {
              char v28 = sub_22D2BD660();
              uint64_t result = 0;
              if ((v28 & 1) == 0) {
                return result;
              }
            }
            swift_beginAccess();
            uint64_t v29 = *(void *)(a1 + 144);
            uint64_t v30 = *(void *)(a1 + 152);
            swift_beginAccess();
            if (v29 != a2[18] || v30 != a2[19])
            {
              char v31 = sub_22D2BD660();
              uint64_t result = 0;
              if ((v31 & 1) == 0) {
                return result;
              }
            }
            swift_beginAccess();
            uint64_t v32 = *(void *)(a1 + 160);
            uint64_t v33 = *(void *)(a1 + 168);
            swift_beginAccess();
            if (v32 != a2[20] || v33 != a2[21])
            {
              char v34 = sub_22D2BD660();
              uint64_t result = 0;
              if ((v34 & 1) == 0) {
                return result;
              }
            }
            swift_beginAccess();
            uint64_t v35 = *(void *)(a1 + 176);
            uint64_t v36 = *(void *)(a1 + 184);
            swift_beginAccess();
            if (v35 != a2[22] || v36 != a2[23])
            {
              char v37 = sub_22D2BD660();
              uint64_t result = 0;
              if ((v37 & 1) == 0) {
                return result;
              }
            }
            swift_beginAccess();
            uint64_t v38 = *(void *)(a1 + 192);
            uint64_t v39 = *(void *)(a1 + 200);
            swift_beginAccess();
            if (v38 != a2[24] || v39 != a2[25])
            {
              char v40 = sub_22D2BD660();
              uint64_t result = 0;
              if ((v40 & 1) == 0) {
                return result;
              }
            }
            swift_beginAccess();
            uint64_t v41 = *(void *)(a1 + 208);
            uint64_t v42 = *(void *)(a1 + 216);
            swift_beginAccess();
            if (v41 != a2[26] || v42 != a2[27])
            {
              char v43 = sub_22D2BD660();
              uint64_t result = 0;
              if ((v43 & 1) == 0) {
                return result;
              }
            }
            swift_beginAccess();
            uint64_t v44 = *(void *)(a1 + 224);
            uint64_t v45 = *(void *)(a1 + 232);
            swift_beginAccess();
            if (v44 != a2[28] || v45 != a2[29])
            {
              char v46 = sub_22D2BD660();
              uint64_t result = 0;
              if ((v46 & 1) == 0) {
                return result;
              }
            }
            swift_beginAccess();
            uint64_t v47 = *(void *)(a1 + 240);
            uint64_t v48 = *(void *)(a1 + 248);
            swift_beginAccess();
            if (v47 != a2[30] || v48 != a2[31])
            {
              char v49 = sub_22D2BD660();
              uint64_t result = 0;
              if ((v49 & 1) == 0) {
                return result;
              }
            }
            swift_beginAccess();
            uint64_t v50 = *(void *)(a1 + 256);
            uint64_t v51 = *(unsigned __int8 *)(a1 + 264);
            swift_beginAccess();
            if (!sub_22D0BC5B8(v50, v51, a2[32])) {
              return 0;
            }
            swift_beginAccess();
            uint64_t v52 = *(void *)(a1 + 272);
            uint64_t v53 = *(void *)(a1 + 280);
            swift_beginAccess();
            if (v52 == a2[34] && v53 == a2[35] || (v54 = sub_22D2BD660(), uint64_t result = 0, (v54 & 1) != 0))
            {
              if ((swift_beginAccess(),
                    uint64_t v55 = *(void *)(a1 + 288),
                    uint64_t v56 = *(void *)(a1 + 296),
                    swift_beginAccess(),
                    v55 == a2[36])
                && v56 == a2[37]
                || (v57 = sub_22D2BD660(), uint64_t result = 0, (v57 & 1) != 0))
              {
                swift_beginAccess();
                uint64_t v59 = *(void *)(a1 + 304);
                uint64_t v58 = *(void *)(a1 + 312);
                swift_beginAccess();
                if (v59 == a2[38] && v58 == a2[39]) {
                  return 1;
                }
                char v60 = sub_22D2BD660();
                uint64_t result = 0;
                if (v60) {
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBMedicationTracking.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBMedicationTracking, &qword_268540FF0, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D1AC8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D248, &qword_2685407B0, a2);
}

unint64_t sub_22D1AC8D8()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D1AC8F4()
{
  return PBMedicationTracking.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1AC90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTracking.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1AC924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D58, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1AC9A0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D240, (uint64_t)qword_268540798, a1);
}

uint64_t sub_22D1AC9C4(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268540FF8, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1ACA30()
{
  sub_22D1B9F34(&qword_268540FF8, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking);
  return sub_22D2BC200();
}

uint64_t sub_22D1ACAB0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685407B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685407B8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_22D2C7A10;
  unint64_t v5 = v42 + v4;
  unint64_t v6 = v42 + v4 + *(int *)(v2 + 56);
  *(void *)(v42 + v4) = 0;
  *(void *)unint64_t v6 = "NOT_SET";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "CAPSULE";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  char v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *char v11 = 2;
  *(void *)uint64_t v12 = "CREAM";
  *((void *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  char v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 3;
  *(void *)char v14 = "DEVICE";
  *((void *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "DROPS";
  *((void *)v16 + 1) = 5;
  v16[16] = 2;
  v9();
  char v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)uint64_t v18 = "FOAM";
  *((void *)v18 + 1) = 4;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  char v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)char v20 = "GEL";
  *((void *)v20 + 1) = 3;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)uint64_t v22 = "INHALER";
  *((void *)v22 + 1) = 7;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "INJECTION";
  *(void *)(v23 + 8) = 9;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v5 + 9 * v3);
  char v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)char v25 = "LIQUID";
  *((void *)v25 + 1) = 6;
  v25[16] = 2;
  v9();
  uint64_t v26 = (void *)(v5 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 10;
  *(void *)uint64_t v27 = "LOTION";
  *((void *)v27 + 1) = 6;
  v27[16] = 2;
  v9();
  char v28 = (void *)(v5 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 11;
  *(void *)uint64_t v29 = "OINTMENT";
  *((void *)v29 + 1) = 8;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v5 + 12 * v3);
  char v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 12;
  *(void *)char v31 = "PATCH";
  *((void *)v31 + 1) = 5;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v5 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 13;
  *(void *)uint64_t v33 = "POWDER";
  *((void *)v33 + 1) = 6;
  v33[16] = 2;
  v9();
  char v34 = (void *)(v5 + 14 * v3);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 14;
  *(void *)uint64_t v35 = "SPRAY";
  *((void *)v35 + 1) = 5;
  v35[16] = 2;
  v9();
  uint64_t v36 = (void *)(v5 + 15 * v3);
  char v37 = (char *)v36 + *(int *)(v2 + 56);
  *uint64_t v36 = 15;
  *(void *)char v37 = "SUPPOSITORY";
  *((void *)v37 + 1) = 11;
  v37[16] = 2;
  v9();
  uint64_t v38 = v5 + 16 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 16 * v3) = 16;
  *(void *)uint64_t v38 = "TABLET";
  *(void *)(v38 + 8) = 6;
  *(unsigned char *)(v38 + 16) = 2;
  v9();
  uint64_t v39 = (void *)(v5 + 17 * v3);
  char v40 = (char *)v39 + *(int *)(v2 + 56);
  void *v39 = 17;
  *(void *)char v40 = "TOPICAL";
  *((void *)v40 + 1) = 7;
  v40[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBMedicationTracking.MedicationFreeTextForm._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D250, (uint64_t)qword_2685407B8, a1);
}

uint64_t sub_22D1AD090@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D250, (uint64_t)qword_2685407B8, a1);
}

uint64_t sub_22D1AD0B4()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685407D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685407D0);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_22D2C3FB0;
  unint64_t v5 = v33 + v4;
  unint64_t v6 = v33 + v4 + *(int *)(v2 + 56);
  *(void *)(v33 + v4) = 0;
  *(void *)unint64_t v6 = "NOT_SET_UNIT";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "CAPSULE_UNIT";
  *(void *)(v10 + 8) = 12;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  char v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *char v11 = 2;
  *(void *)uint64_t v12 = "APPLICATION_UNIT";
  *((void *)v12 + 1) = 16;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  char v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 3;
  *(void *)char v14 = "DEVICE_UNIT";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "DROP_UNIT";
  *((void *)v16 + 1) = 9;
  v16[16] = 2;
  v9();
  char v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)uint64_t v18 = "INHALATION_UNIT";
  *((void *)v18 + 1) = 15;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  char v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)char v20 = "INJECTION_UNIT";
  *((void *)v20 + 1) = 14;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)uint64_t v22 = "MILLILITERS_UNIT";
  *((void *)v22 + 1) = 16;
  v22[16] = 2;
  v9();
  uint64_t v23 = v5 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "PATCH_UNIT";
  *(void *)(v23 + 8) = 10;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v5 + 9 * v3);
  char v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)char v25 = "SCOOP_UNIT";
  *((void *)v25 + 1) = 10;
  v25[16] = 2;
  v9();
  uint64_t v26 = (void *)(v5 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 10;
  *(void *)uint64_t v27 = "SPRAY_UNIT";
  *((void *)v27 + 1) = 10;
  v27[16] = 2;
  v9();
  char v28 = (void *)(v5 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 11;
  *(void *)uint64_t v29 = "UNIT_UNIT";
  *((void *)v29 + 1) = 9;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v5 + 12 * v3);
  char v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 12;
  *(void *)char v31 = "TABLET_UNIT";
  *((void *)v31 + 1) = 11;
  v31[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBMedicationTracking.MedicationFreeTextLoggingUnit._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D258, (uint64_t)qword_2685407D0, a1);
}

uint64_t sub_22D1AD550@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D258, (uint64_t)qword_2685407D0, a1);
}

unint64_t static PBMedicationTrackings.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D1AD590(uint64_t a1)
{
  return sub_22D1B170C(a1, qword_2685407E8, (uint64_t)"medication_tracking", 19, MEMORY[0x263F50728]);
}

uint64_t static PBMedicationTrackings._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D260, (uint64_t)qword_2685407E8, a1);
}

uint64_t PBMedicationTrackings.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B1914(a1, a2, a3, (void (*)(void))type metadata accessor for PBMedicationTracking, &qword_268540FF8, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking);
}

uint64_t PBMedicationTrackings.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBMedicationTracking(0),
        sub_22D1B9F34(&qword_268540FF8, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking),
        uint64_t result = sub_22D2BC2D0(),
        !v1))
  {
    type metadata accessor for PBMedicationTrackings(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t PBMedicationTrackings.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBMedicationTrackings, &qword_268541000, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackings);
}

unint64_t sub_22D1AD764()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D1AD780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackings.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1AD798()
{
  return PBMedicationTrackings.traverse<A>(visitor:)();
}

uint64_t sub_22D1AD7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D50, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackings);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1AD82C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D260, (uint64_t)qword_2685407E8, a1);
}

uint64_t sub_22D1AD850(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DB88, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackings);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1AD8BC()
{
  sub_22D1B9F34(&qword_26853DB88, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackings);
  return sub_22D2BC200();
}

uint64_t sub_22D1AD938(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D1105B0, type metadata accessor for PBMedicationTrackings) & 1;
}

unint64_t static PBMedicationTrackingDoseEvent.protoMessageName.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_22D1AD998()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540800);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540800);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C39B0;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "log_origin";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "status";
  *(void *)(v11 + 8) = 6;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "schedule_item_identifier";
  *((void *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  char v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *char v14 = 4;
  *(void *)uint64_t v15 = "medication_semantic_identifier";
  *((void *)v15 + 1) = 30;
  v15[16] = 2;
  v10();
  uint64_t v16 = (void *)(v6 + 4 * v3);
  char v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 5;
  *(void *)char v17 = "scheduled_dose_quantity";
  *((void *)v17 + 1) = 23;
  v17[16] = 2;
  v10();
  uint64_t v18 = (void *)(v6 + 5 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 6;
  *(void *)uint64_t v19 = "dose_quantity";
  *((void *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  char v20 = (void *)(v6 + 6 * v3);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 56);
  void *v20 = 7;
  *(void *)uint64_t v21 = "scheduled_date";
  *((void *)v21 + 1) = 14;
  v21[16] = 2;
  v10();
  uint64_t v22 = (void *)(v6 + 7 * v3);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 56);
  void *v22 = 8;
  *(void *)uint64_t v23 = "log_date";
  *((void *)v23 + 1) = 8;
  v23[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBMedicationTrackingDoseEvent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D268, (uint64_t)qword_268540800, a1);
}

uint64_t PBMedicationTrackingDoseEvent.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_22D1BA078();
          goto LABEL_7;
        case 2:
          sub_22D1BA024();
LABEL_7:
          uint64_t v4 = v3;
          sub_22D2BC0D0();
          goto LABEL_10;
        case 3:
        case 4:
        case 7:
        case 8:
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_10;
        case 5:
        case 6:
          uint64_t v4 = v3;
          sub_22D2BC130();
LABEL_10:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBMedicationTrackingDoseEvent.traverse<A>(visitor:)()
{
  if (!*(void *)v0 || (sub_22D1BA078(), uint64_t result = sub_22D2BC240(), !v1))
  {
    if (!*(void *)(v0 + 16) || (sub_22D1BA024(), uint64_t result = sub_22D2BC240(), !v1))
    {
      unint64_t v3 = *(void *)(v0 + 40);
      uint64_t v4 = HIBYTE(v3) & 0xF;
      if ((v3 & 0x2000000000000000) == 0) {
        uint64_t v4 = *(void *)(v0 + 32) & 0xFFFFFFFFFFFFLL;
      }
      if (!v4 || (uint64_t result = sub_22D2BC2B0(), !v1))
      {
        unint64_t v5 = *(void *)(v0 + 56);
        uint64_t v6 = HIBYTE(v5) & 0xF;
        if ((v5 & 0x2000000000000000) == 0) {
          uint64_t v6 = *(void *)(v0 + 48) & 0xFFFFFFFFFFFFLL;
        }
        if (!v6 || (uint64_t result = sub_22D2BC2B0(), !v1))
        {
          if (!*(_DWORD *)(v0 + 64) || (uint64_t result = sub_22D2BC280(), !v1))
          {
            if (!*(_DWORD *)(v0 + 68) || (uint64_t result = sub_22D2BC280(), !v1))
            {
              unint64_t v7 = *(void *)(v0 + 80);
              uint64_t v8 = HIBYTE(v7) & 0xF;
              if ((v7 & 0x2000000000000000) == 0) {
                uint64_t v8 = *(void *)(v0 + 72) & 0xFFFFFFFFFFFFLL;
              }
              if (!v8 || (uint64_t result = sub_22D2BC2B0(), !v1))
              {
                unint64_t v9 = *(void *)(v0 + 96);
                uint64_t v10 = HIBYTE(v9) & 0xF;
                if ((v9 & 0x2000000000000000) == 0) {
                  uint64_t v10 = *(void *)(v0 + 88) & 0xFFFFFFFFFFFFLL;
                }
                if (!v10 || (uint64_t result = sub_22D2BC2B0(), !v1))
                {
                  type metadata accessor for PBMedicationTrackingDoseEvent(0);
                  return sub_22D2BBFD0();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBMedicationTrackingDoseEvent.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBMedicationTrackingDoseEvent, &qword_268541018, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_22D1AE11C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0xE000000000000000;
  return sub_22D2BBFE0();
}

unint64_t sub_22D1AE16C()
{
  return 0xD000000000000036;
}

uint64_t sub_22D1AE188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_22D1AE1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 48);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_22D1AE268())()
{
  return nullsub_1;
}

uint64_t sub_22D1AE28C()
{
  return PBMedicationTrackingDoseEvent.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1AE2A4()
{
  return PBMedicationTrackingDoseEvent.traverse<A>(visitor:)();
}

uint64_t sub_22D1AE2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D48, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1AE338@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D268, (uint64_t)qword_268540800, a1);
}

uint64_t sub_22D1AE35C(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541020, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1AE3C8()
{
  sub_22D1B9F34(&qword_268541020, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent);
  return sub_22D2BC200();
}

uint64_t sub_22D1AE448()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540818);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540818);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 0;
  *(void *)unint64_t v7 = "LOG_ORIGIN_NOT_SET";
  *(void *)(v7 + 8) = 18;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 1;
  *(void *)unint64_t v11 = "AS_NEEDED";
  *((void *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 2;
  *(void *)uint64_t v12 = "SCHEDULE";
  *(void *)(v12 + 8) = 8;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBMedicationTrackingDoseEvent.LogOrigin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D270, (uint64_t)qword_268540818, a1);
}

uint64_t sub_22D1AE694@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D270, (uint64_t)qword_268540818, a1);
}

uint64_t sub_22D1AE6B8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540830);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540830);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_22D2C0BB0;
  unint64_t v5 = v21 + v4 + *(int *)(v2 + 56);
  *(void *)(v21 + v4) = 0;
  *(void *)unint64_t v5 = "STATUS_NOT_SET";
  *(void *)(v5 + 8) = 14;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_22D2BC2F0();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v21 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v21 + v4 + v3) = 1;
  *(void *)unint64_t v9 = "NOT_INTERACTED";
  *(void *)(v9 + 8) = 14;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v21 + v4 + 2 * v3);
  unint64_t v11 = (char *)v10 + *(int *)(v2 + 56);
  *uint64_t v10 = 2;
  *(void *)unint64_t v11 = "NOTIFICATION_NOT_SENT";
  *((void *)v11 + 1) = 21;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v21 + v4 + 3 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "SNOOZED";
  *((void *)v13 + 1) = 7;
  v13[16] = 2;
  v8();
  char v14 = (void *)(v21 + v4 + 4 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *char v14 = 4;
  *(void *)uint64_t v15 = "TAKEN";
  *((void *)v15 + 1) = 5;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v21 + v4 + 5 * v3);
  char v17 = (char *)v16 + *(int *)(v2 + 56);
  *uint64_t v16 = 5;
  *(void *)char v17 = "SKIPPED";
  *((void *)v17 + 1) = 7;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v21 + v4 + 6 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 6;
  *(void *)uint64_t v19 = "NOT_LOGGED";
  *((void *)v19 + 1) = 10;
  v19[16] = 2;
  v8();
  return sub_22D2BC300();
}

uint64_t static PBMedicationTrackingDoseEvent.Status._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D278, (uint64_t)qword_268540830, a1);
}

uint64_t sub_22D1AE9EC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D278, (uint64_t)qword_268540830, a1);
}

unint64_t static PBMedicationTrackingDoseEvents.protoMessageName.getter()
{
  return 0xD000000000000037;
}

uint64_t sub_22D1AEA2C(uint64_t a1)
{
  return sub_22D1B170C(a1, qword_268540848, (uint64_t)"medication_tracking_dose_event", 30, MEMORY[0x263F50728]);
}

uint64_t static PBMedicationTrackingDoseEvents._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D280, (uint64_t)qword_268540848, a1);
}

uint64_t PBMedicationTrackingDoseEvents.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B1914(a1, a2, a3, (void (*)(void))type metadata accessor for PBMedicationTrackingDoseEvent, &qword_268541020, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent);
}

uint64_t PBMedicationTrackingDoseEvents.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBMedicationTrackingDoseEvent(0),
        sub_22D1B9F34(&qword_268541020, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent), uint64_t result = sub_22D2BC2D0(), !v1))
  {
    type metadata accessor for PBMedicationTrackingDoseEvents(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t PBMedicationTrackingDoseEvents.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBMedicationTrackingDoseEvents, &qword_268541028, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvents);
}

unint64_t sub_22D1AEC00()
{
  return 0xD000000000000037;
}

uint64_t sub_22D1AEC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingDoseEvents.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1AEC34()
{
  return PBMedicationTrackingDoseEvents.traverse<A>(visitor:)();
}

uint64_t sub_22D1AEC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D40, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvents);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1AECC8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D280, (uint64_t)qword_268540848, a1);
}

uint64_t sub_22D1AECEC(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DB80, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvents);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1AED58()
{
  sub_22D1B9F34(&qword_26853DB80, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvents);
  return sub_22D2BC200();
}

uint64_t sub_22D1AEDD4(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D10F508, type metadata accessor for PBMedicationTrackingDoseEvents) & 1;
}

unint64_t static PBMedicationTrackingSchedule.protoMessageName.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_22D1AEE34()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540860);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540860);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_22D2C0F20;
  unint64_t v5 = v27 + v4;
  unint64_t v6 = v27 + v4 + *(int *)(v2 + 56);
  *(void *)(v27 + v4) = 1;
  *(void *)unint64_t v6 = "schedule_identifier";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v27 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "medication_semantic_identifier";
  *(void *)(v10 + 8) = 30;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v27 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *unint64_t v11 = 3;
  *(void *)uint64_t v12 = "created_utc_offset";
  *((void *)v12 + 1) = 18;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v27 + v4 + 3 * v3);
  char v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)char v14 = "start_date_time";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v27 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "end_date_time";
  *((void *)v16 + 1) = 13;
  v16[16] = 2;
  v9();
  char v17 = (void *)(v27 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "notes";
  *((void *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v27 + v4 + 6 * v3);
  char v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)char v20 = "time_intervals";
  *((void *)v20 + 1) = 14;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v27 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "frequency_type";
  *((void *)v22 + 1) = 14;
  v22[16] = 2;
  v9();
  uint64_t v23 = v27 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "unrecognized";
  *(void *)(v23 + 8) = 12;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v27 + v4 + 9 * v3);
  char v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)char v25 = "compatibility_version_range";
  *((void *)v25 + 1) = 27;
  v25[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBMedicationTrackingSchedule._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D288, (uint64_t)qword_268540860, a1);
}

uint64_t sub_22D1AF258(uint64_t a1)
{
  return sub_22D17B984(a1, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_22D1AF28C, &qword_268540878);
}

uint64_t sub_22D1AF28C()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0xE000000000000000;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0xE000000000000000;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 0xE000000000000000;
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 0xE000000000000000;
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(_WORD *)(v0 + 128) = 1;
  uint64_t v2 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  *(void *)(v0 + 112) = v1;
  *(void *)(v0 + 120) = 0;
  uint64_t v3 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return v0;
}

uint64_t sub_22D1AF328(uint64_t a1)
{
  uint64_t v39 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange;
  sub_22D167880(0, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v38 = (uint64_t)&v31 - v4;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 56) = 0xE000000000000000;
  *(void *)(v1 + 72) = 0xE000000000000000;
  *(void *)(v1 + 80) = 0;
  uint64_t v32 = (void *)(v1 + 80);
  *(void *)(v1 + 88) = 0xE000000000000000;
  *(void *)(v1 + 96) = 0;
  uint64_t v33 = (void *)(v1 + 96);
  *(void *)(v1 + 104) = 0xE000000000000000;
  *(void *)(v1 + 112) = MEMORY[0x263F8EE78];
  char v34 = (void *)(v1 + 112);
  *(_WORD *)(v1 + 128) = 1;
  uint64_t v5 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  uint64_t v36 = v1 + 129;
  uint64_t v37 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  *(void *)(v1 + 120) = 0;
  uint64_t v35 = (void *)(v1 + 120);
  uint64_t v6 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v10;
  *(void *)(v1 + 40) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  swift_beginAccess();
  *(void *)(v1 + 48) = v12;
  *(void *)(v1 + 56) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  swift_beginAccess();
  *(void *)(v1 + 64) = v14;
  *(void *)(v1 + 72) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  char v17 = v32;
  swift_beginAccess();
  void *v17 = v16;
  *(void *)(v1 + 88) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 96);
  uint64_t v18 = *(void *)(a1 + 104);
  char v20 = v33;
  swift_beginAccess();
  void *v20 = v19;
  *(void *)(v1 + 104) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v21 = *(void *)(a1 + 112);
  uint64_t v22 = v34;
  swift_beginAccess();
  void *v22 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v23 = *(void *)(a1 + 120);
  char v24 = *(unsigned char *)(a1 + 128);
  char v25 = v35;
  swift_beginAccess();
  void *v25 = v23;
  *(unsigned char *)(v1 + 128) = v24;
  swift_beginAccess();
  LOBYTE(v23) = *(unsigned char *)(a1 + 129);
  swift_beginAccess();
  *(unsigned char *)(v1 + 129) = v23;
  uint64_t v26 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
  swift_beginAccess();
  uint64_t v28 = v38;
  uint64_t v27 = v39;
  sub_22D1B9E60(v26, v38, &qword_26853E4C8, v39);
  swift_release();
  uint64_t v29 = v37;
  swift_beginAccess();
  sub_22D1B9D9C(v28, v29, &qword_26853E4C8, v27);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D1AF7A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  return v0;
}

uint64_t sub_22D1AF824()
{
  return sub_22D1AF83C(sub_22D1AF7A8);
}

uint64_t sub_22D1AF83C(uint64_t (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t PBMedicationTrackingSchedule.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_22D1AF328, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1AF8FC);
}

uint64_t sub_22D1AF8FC()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          swift_beginAccess();
          sub_22D2BC170();
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_22D2BC170();
          goto LABEL_12;
        case 7:
          swift_beginAccess();
          type metadata accessor for PBHKMedicationScheduleIntervalData(0);
          sub_22D1B9F34(&qword_268541720, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData);
          sub_22D2BC190();
          goto LABEL_12;
        case 8:
          swift_beginAccess();
          sub_22D1D029C();
          sub_22D2BC0D0();
          goto LABEL_12;
        case 9:
          swift_beginAccess();
          sub_22D2BC0B0();
LABEL_12:
          swift_endAccess();
          break;
        case 10:
          swift_beginAccess();
          type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
          sub_22D1B9F34(&qword_2685416F8, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
          sub_22D2BC1A0();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBMedicationTrackingSchedule.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1AFCA8);
}

uint64_t sub_22D1AFCA8(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v24 - v4;
  uint64_t v6 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v13 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
  }
  if (!v13 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    unint64_t v14 = *(void *)(a1 + 56);
    uint64_t v15 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0) {
      uint64_t v15 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFLL;
    }
    if (!v15 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
    {
      swift_beginAccess();
      unint64_t v16 = *(void *)(a1 + 72);
      uint64_t v17 = HIBYTE(v16) & 0xF;
      if ((v16 & 0x2000000000000000) == 0) {
        uint64_t v17 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFLL;
      }
      if (!v17 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
      {
        swift_beginAccess();
        unint64_t v18 = *(void *)(a1 + 88);
        uint64_t v19 = HIBYTE(v18) & 0xF;
        if ((v18 & 0x2000000000000000) == 0) {
          uint64_t v19 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFLL;
        }
        if (!v19 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
        {
          swift_beginAccess();
          unint64_t v20 = *(void *)(a1 + 104);
          uint64_t v21 = HIBYTE(v20) & 0xF;
          if ((v20 & 0x2000000000000000) == 0) {
            uint64_t v21 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFLL;
          }
          if (!v21 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
          {
            swift_beginAccess();
            if (!*(void *)(*(void *)(a1 + 112) + 16)
              || (v24[0] = type metadata accessor for PBHKMedicationScheduleIntervalData(0),
                  sub_22D1B9F34(&qword_268541720, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData), swift_bridgeObjectRetain(), sub_22D2BC2D0(), uint64_t result = swift_bridgeObjectRelease(), !v1))
            {
              swift_beginAccess();
              if (!*(void *)(a1 + 120)
                || (char v22 = *(unsigned char *)(a1 + 128),
                    v24[4] = *(void *)(a1 + 120),
                    char v25 = v22,
                    sub_22D1D029C(),
                    uint64_t result = sub_22D2BC240(),
                    !v1))
              {
                swift_beginAccess();
                if (*(unsigned char *)(a1 + 129) != 1 || (uint64_t result = sub_22D2BC230(), !v1))
                {
                  uint64_t v23 = a1
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
                  swift_beginAccess();
                  sub_22D1B9E60(v23, (uint64_t)v5, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v5, 1, v6) == 1)
                  {
                    return sub_22D1D08A0((uint64_t)v5, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  }
                  else
                  {
                    sub_22D1D06E8((uint64_t)v5, (uint64_t)v8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_22D1B9F34(&qword_2685416F8, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_22D2BC2E0();
                    return sub_22D1B9750((uint64_t)v8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static PBMedicationTrackingSchedule.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t (*)(uint64_t, uint64_t))sub_22D1B02E4) & 1;
}

BOOL sub_22D1B02E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(0);
  uint64_t v53 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v52 = (_DWORD *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D1D0AB4(0, &qword_268541F68, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v49 - v8;
  sub_22D167880(0, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (_DWORD *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v49 - v14;
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v17 == *(void *)(a2 + 16) && v16 == *(void *)(a2 + 24)
    || (v18 = sub_22D2BD660(), BOOL result = 0, (v18 & 1) != 0))
  {
    if ((swift_beginAccess(),
          uint64_t v20 = *(void *)(a1 + 32),
          uint64_t v21 = *(void *)(a1 + 40),
          swift_beginAccess(),
          v20 == *(void *)(a2 + 32))
      && v21 == *(void *)(a2 + 40)
      || (v22 = sub_22D2BD660(), BOOL result = 0, (v22 & 1) != 0))
    {
      if ((swift_beginAccess(),
            uint64_t v23 = *(void *)(a1 + 48),
            uint64_t v24 = *(void *)(a1 + 56),
            swift_beginAccess(),
            v23 == *(void *)(a2 + 48))
        && v24 == *(void *)(a2 + 56)
        || (v25 = sub_22D2BD660(), BOOL result = 0, (v25 & 1) != 0))
      {
        if ((swift_beginAccess(),
              uint64_t v26 = *(void *)(a1 + 64),
              uint64_t v27 = *(void *)(a1 + 72),
              swift_beginAccess(),
              v26 == *(void *)(a2 + 64))
          && v27 == *(void *)(a2 + 72)
          || (v28 = sub_22D2BD660(), BOOL result = 0, (v28 & 1) != 0))
        {
          if ((swift_beginAccess(),
                uint64_t v29 = *(void *)(a1 + 80),
                uint64_t v30 = *(void *)(a1 + 88),
                swift_beginAccess(),
                v29 == *(void *)(a2 + 80))
            && v30 == *(void *)(a2 + 88)
            || (v31 = sub_22D2BD660(), BOOL result = 0, (v31 & 1) != 0))
          {
            if ((swift_beginAccess(),
                  uint64_t v32 = *(void *)(a1 + 96),
                  uint64_t v33 = *(void *)(a1 + 104),
                  swift_beginAccess(),
                  v32 == *(void *)(a2 + 96))
              && v33 == *(void *)(a2 + 104)
              || (v34 = sub_22D2BD660(), BOOL result = 0, (v34 & 1) != 0))
            {
              uint64_t v51 = v9;
              swift_beginAccess();
              uint64_t v35 = *(void *)(a1 + 112);
              swift_beginAccess();
              uint64_t v36 = *(void *)(a2 + 112);
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v37 = sub_22D115484(v35, v36);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v37 & 1) == 0) {
                goto LABEL_26;
              }
              swift_beginAccess();
              uint64_t v38 = *(void *)(a1 + 120);
              swift_beginAccess();
              uint64_t v39 = *(void *)(a2 + 120);
              if (*(unsigned char *)(a2 + 128) == 1)
              {
                switch(v39)
                {
                  case 1:
                    if (v38 != 1) {
                      goto LABEL_26;
                    }
                    goto LABEL_25;
                  case 2:
                    if (v38 != 2) {
                      goto LABEL_26;
                    }
                    goto LABEL_25;
                  case 3:
                    if (v38 != 3) {
                      goto LABEL_26;
                    }
                    goto LABEL_25;
                  case 4:
                    if (v38 != 4) {
                      goto LABEL_26;
                    }
                    goto LABEL_25;
                  default:
                    if (!v38) {
                      goto LABEL_25;
                    }
                    goto LABEL_26;
                }
              }
              if (v38 != v39) {
                goto LABEL_26;
              }
LABEL_25:
              swift_beginAccess();
              int v40 = *(unsigned __int8 *)(a1 + 129);
              swift_beginAccess();
              if (v40 != *(unsigned __int8 *)(a2 + 129))
              {
LABEL_26:
                swift_release();
                swift_release();
                return 0;
              }
              uint64_t v41 = a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
              swift_beginAccess();
              sub_22D1B9E60(v41, (uint64_t)v15, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              uint64_t v42 = a2
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon28PBMedicationTrackingScheduleP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__compatibilityVersionRange;
              swift_beginAccess();
              uint64_t v43 = (uint64_t)v51;
              uint64_t v44 = (uint64_t)&v51[*(int *)(v7 + 48)];
              sub_22D1B9E60((uint64_t)v15, (uint64_t)v51, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              uint64_t v50 = v44;
              sub_22D1B9E60(v42, v44, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
              if (v45(v43, 1, v4) == 1)
              {
                swift_release();
                swift_release();
                sub_22D1D08A0((uint64_t)v15, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                if (v45(v50, 1, v4) == 1)
                {
                  sub_22D1D08A0(v43, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  return 1;
                }
              }
              else
              {
                sub_22D1B9E60(v43, (uint64_t)v13, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                uint64_t v46 = v50;
                if (v45(v50, 1, v4) != 1)
                {
                  uint64_t v47 = v52;
                  sub_22D1D06E8(v46, (uint64_t)v52, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  if (*v13 != *v47 || v13[1] != v47[1])
                  {
                    swift_release();
                    swift_release();
                    sub_22D1B9750((uint64_t)v47, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_22D1D08A0((uint64_t)v15, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_22D1B9750((uint64_t)v13, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    sub_22D1D08A0(v43, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                    return 0;
                  }
                  sub_22D2BBFF0();
                  sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
                  char v48 = sub_22D2BCB90();
                  swift_release();
                  swift_release();
                  sub_22D1B9750((uint64_t)v47, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  sub_22D1D08A0((uint64_t)v15, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  sub_22D1B9750((uint64_t)v13, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  sub_22D1D08A0(v43, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                  return (v48 & 1) != 0;
                }
                swift_release();
                swift_release();
                sub_22D1D08A0((uint64_t)v15, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
                sub_22D1B9750((uint64_t)v13, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              }
              sub_22D1D05E4(v43, &qword_268541F68, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBMedicationTrackingSchedule.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBMedicationTrackingSchedule, &qword_268541030, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D1B0C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D290, &qword_268540878, a2);
}

unint64_t sub_22D1B0C74()
{
  return 0xD000000000000035;
}

uint64_t sub_22D1B0C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingSchedule.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1B0CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingSchedule.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1B0CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D38, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1B0D3C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D288, (uint64_t)qword_268540860, a1);
}

uint64_t sub_22D1B0D60(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541040, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1B0DCC()
{
  sub_22D1B9F34(&qword_268541040, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule);
  return sub_22D2BC200();
}

uint64_t sub_22D1B0E48(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBMedicationTrackingSchedule, (uint64_t (*)(uint64_t, uint64_t))sub_22D1B02E4) & 1;
}

uint64_t sub_22D1B0E8C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540880);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540880);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_22D2BFF30;
  unint64_t v5 = v17 + v4;
  unint64_t v6 = v17 + v4 + *(int *)(v2 + 56);
  *(void *)(v17 + v4) = 0;
  *(void *)unint64_t v6 = "FREQUENCY_NOT_SET";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "CYCLE";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "DAILY";
  *((void *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "DAYS_OF_WEEK";
  *((void *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 4 * v3) = 4;
  *(void *)uint64_t v15 = "AS_NEEDED";
  *(void *)(v15 + 8) = 9;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBMedicationTrackingSchedule.HKFrequencyType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D298, (uint64_t)qword_268540880, a1);
}

uint64_t sub_22D1B1150@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D298, (uint64_t)qword_268540880, a1);
}

unint64_t static PBMedicationTrackingScheduleCompatibilityVersionRange.protoMessageName.getter()
{
  return 0xD00000000000004ELL;
}

uint64_t sub_22D1B1190()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268540898);
  __swift_project_value_buffer(v0, (uint64_t)qword_268540898);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 1;
  *(void *)unint64_t v7 = "minimum_compatibility_version";
  *(void *)(v7 + 8) = 29;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "origin_compatibility_version";
  *((void *)v11 + 1) = 28;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBMedicationTrackingScheduleCompatibilityVersionRange._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D2A0, (uint64_t)qword_268540898, a1);
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.decodeMessage<A>(decoder:)()
{
  return sub_22D1B13AC();
}

uint64_t sub_22D1B13AC()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_22D2BC130();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1A0368(a1, a2, a3, (void (*)(void))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t static PBMedicationTrackingScheduleCompatibilityVersionRange.== infix(_:_:)(char *a1, char *a2)
{
  return sub_22D1B6AEC(a1, a2, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange) & 1;
}

uint64_t PBMedicationTrackingScheduleCompatibilityVersionRange.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, &qword_268541038, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

unint64_t sub_22D1B14E4()
{
  return 0xD00000000000004ELL;
}

uint64_t sub_22D1B1500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingScheduleCompatibilityVersionRange.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1B1518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D30, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1B1594@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D2A0, (uint64_t)qword_268540898, a1);
}

uint64_t sub_22D1B15B8(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_2685416F8, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1B1624()
{
  sub_22D1B9F34(&qword_2685416F8, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
  return sub_22D2BC200();
}

uint64_t sub_22D1B16A0(char *a1, char *a2)
{
  return sub_22D1B6AEC(a1, a2, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange) & 1;
}

unint64_t static PBMedicationTrackingSchedules.protoMessageName.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_22D1B16EC(uint64_t a1)
{
  return sub_22D1B170C(a1, qword_2685408B0, (uint64_t)"medication_tracking_schedule", 28, MEMORY[0x263F50728]);
}

uint64_t sub_22D1B170C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v9 = sub_22D2BC310();
  __swift_allocate_value_buffer(v9, a2);
  __swift_project_value_buffer(v9, (uint64_t)a2);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v11 = v10 - 8;
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_22D2BFF40;
  unint64_t v14 = v13 + v12 + *(int *)(v11 + 56);
  *(void *)(v13 + v12) = 1;
  *(void *)unint64_t v14 = a3;
  *(void *)(v14 + 8) = a4;
  *(unsigned char *)(v14 + 16) = 2;
  uint64_t v15 = *a5;
  uint64_t v16 = sub_22D2BC2F0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  return sub_22D2BC300();
}

uint64_t static PBMedicationTrackingSchedules._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D2A8, (uint64_t)qword_2685408B0, a1);
}

uint64_t PBMedicationTrackingSchedules.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B1914(a1, a2, a3, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule, &qword_268541040, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D1B1914(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t result = sub_22D2BC080();
  if (!v6)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 1)
      {
        a4(0);
        sub_22D1B9F34(a5, a6);
        sub_22D2BC190();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBMedicationTrackingSchedules.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PBMedicationTrackingSchedule(0),
        sub_22D1B9F34(&qword_268541040, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule), uint64_t result = sub_22D2BC2D0(), !v1))
  {
    type metadata accessor for PBMedicationTrackingSchedules(0);
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t PBMedicationTrackingSchedules.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBMedicationTrackingSchedules, &qword_268541048, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedules);
}

unint64_t sub_22D1B1B54()
{
  return 0xD000000000000036;
}

uint64_t sub_22D1B1B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBMedicationTrackingSchedules.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1B1B88()
{
  return PBMedicationTrackingSchedules.traverse<A>(visitor:)();
}

uint64_t sub_22D1B1BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D28, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedules);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1B1C1C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D2A8, (uint64_t)qword_2685408B0, a1);
}

uint64_t sub_22D1B1C40(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_26853DB78, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedules);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1B1CAC()
{
  sub_22D1B9F34(&qword_26853DB78, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedules);
  return sub_22D2BC200();
}

uint64_t sub_22D1B1D28(char *a1, char *a2)
{
  return sub_22D1B878C(a1, a2, sub_22D10F55C, type metadata accessor for PBMedicationTrackingSchedules) & 1;
}

unint64_t static PBHKMedicationScheduleIntervalData.protoMessageName.getter()
{
  return 0xD00000000000003BLL;
}

uint64_t sub_22D1B1D88()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685408C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685408C8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2BFF30;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "days_of_week";
  *(void *)(v7 + 8) = 12;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  char v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "cycle_index";
  *(void *)(v11 + 8) = 11;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  unint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *unint64_t v12 = 3;
  *(void *)uint64_t v13 = "cycle_interval_days";
  *((void *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  unint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *unint64_t v14 = 4;
  *(void *)uint64_t v15 = "dose";
  *((void *)v15 + 1) = 4;
  v15[16] = 2;
  v10();
  uint64_t v16 = v6 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v6 + 4 * v3) = 5;
  *(void *)uint64_t v16 = "start_time";
  *(void *)(v16 + 8) = 10;
  *(unsigned char *)(v16 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBHKMedicationScheduleIntervalData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D2B0, (uint64_t)qword_2685408C8, a1);
}

uint64_t sub_22D1B205C()
{
  type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  uint64_t v2 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex) = 0;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays) = 0;
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose) = 0;
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  qword_2685408E0 = v0;
  return result;
}

uint64_t sub_22D1B211C(uint64_t a1)
{
  sub_22D167880(0, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v20[-v4];
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  uint64_t v7 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (_DWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex) = 0;
  uint64_t v9 = (_DWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays) = 0;
  char v10 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose) = 0;
  unint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  *unint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  uint64_t v12 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_22D1B9E60(v12, (uint64_t)v5, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_beginAccess();
  sub_22D1B9D9C((uint64_t)v5, v6, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_endAccess();
  uint64_t v13 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  LODWORD(v13) = *v13;
  swift_beginAccess();
  *uint64_t v8 = v13;
  unint64_t v14 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  swift_beginAccess();
  LODWORD(v14) = *v14;
  swift_beginAccess();
  _DWORD *v9 = v14;
  uint64_t v15 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  swift_beginAccess();
  LODWORD(v15) = *v15;
  swift_beginAccess();
  *char v10 = v15;
  uint64_t v16 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  swift_beginAccess();
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *unint64_t v11 = v18;
  v11[1] = v17;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22D1B23DC()
{
  sub_22D1D08A0(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBHKMedicationScheduleIntervalData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D1B24D8(a1, a2, a3, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_22D1B211C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1B25CC);
}

uint64_t sub_22D1B24D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = *(int *)(a4(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(v7 + v13) = a6(v14);
    swift_release();
  }
  uint64_t v15 = swift_retain();
  a7(v15, a1, a2, a3);
  return swift_release();
}

uint64_t sub_22D1B25CC()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
          sub_22D1B9F34(&qword_268541738, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC130();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKMedicationScheduleIntervalData.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D165D9C(a1, a2, a3, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D1B2834);
}

uint64_t sub_22D1B2834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v23[19] = a4;
  v23[1] = a3;
  v23[2] = a2;
  sub_22D167880(0, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v23 - v7;
  uint64_t v9 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1;
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_22D1B9E60(v14, (uint64_t)v8, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_22D1D08A0((uint64_t)v8, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  }
  else
  {
    sub_22D1D06E8((uint64_t)v8, (uint64_t)v12, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    sub_22D1B9F34(&qword_268541738, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    sub_22D2BC2E0();
    uint64_t result = sub_22D1B9750((uint64_t)v12, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    if (v4) {
      return result;
    }
  }
  uint64_t v16 = (_DWORD *)(v13
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  if (!*v16 || (uint64_t result = sub_22D2BC280(), !v4))
  {
    uint64_t v17 = (_DWORD *)(v13
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
    swift_beginAccess();
    if (!*v17 || (uint64_t result = sub_22D2BC280(), !v4))
    {
      uint64_t v18 = (_DWORD *)(v13
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
      swift_beginAccess();
      if (!*v18 || (uint64_t result = sub_22D2BC280(), !v4))
      {
        uint64_t v19 = (uint64_t *)(v13
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
        uint64_t result = swift_beginAccess();
        uint64_t v20 = *v19;
        unint64_t v21 = v19[1];
        uint64_t v22 = HIBYTE(v21) & 0xF;
        if ((v21 & 0x2000000000000000) == 0) {
          uint64_t v22 = v20 & 0xFFFFFFFFFFFFLL;
        }
        if (v22)
        {
          swift_bridgeObjectRetain();
          sub_22D2BC2B0();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t static PBHKMedicationScheduleIntervalData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKMedicationScheduleIntervalData, sub_22D1B2C20) & 1;
}

uint64_t sub_22D1B2C20(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v3 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v39 = (unsigned __int8 *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1D0AB4(0, &qword_268541F60, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v39 - v8;
  sub_22D167880(0, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  int v40 = (unsigned __int8 *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  sub_22D1B9E60(v15, (uint64_t)v14, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  uint64_t v16 = v41;
  uint64_t v17 = v41
      + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daysOfWeek;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_22D1B9E60((uint64_t)v14, (uint64_t)v9, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  sub_22D1B9E60(v17, v18, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    unint64_t v21 = v39;
    uint64_t v20 = a1;
    uint64_t v22 = v40;
    sub_22D1B9E60((uint64_t)v9, (uint64_t)v40, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    if (v19(v18, 1, v3) != 1)
    {
      sub_22D1D06E8(v18, (uint64_t)v21, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      swift_retain();
      swift_retain();
      char v23 = _s19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataV24HKReminderWeekdayOptionsV2eeoiySbAE_AEtFZ_0(v22, v21);
      sub_22D1B9750((uint64_t)v21, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      sub_22D1D08A0((uint64_t)v14, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      sub_22D1B9750((uint64_t)v22, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      sub_22D1D08A0((uint64_t)v9, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
      if (v23) {
        goto LABEL_8;
      }
LABEL_14:
      swift_release();
      swift_release();
      char v37 = 0;
      return v37 & 1;
    }
    swift_retain();
    swift_retain();
    sub_22D1D08A0((uint64_t)v14, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    sub_22D1B9750((uint64_t)v22, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
LABEL_6:
    sub_22D1D05E4((uint64_t)v9, &qword_268541F60, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
    goto LABEL_14;
  }
  swift_retain();
  swift_retain();
  sub_22D1D08A0((uint64_t)v14, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  uint64_t v20 = a1;
  if (v19(v18, 1, v3) != 1) {
    goto LABEL_6;
  }
  sub_22D1D08A0((uint64_t)v9, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
LABEL_8:
  uint64_t v24 = (int *)(v20
              + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  int v25 = *v24;
  uint64_t v26 = (_DWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
  swift_beginAccess();
  if (v25 != *v26) {
    goto LABEL_14;
  }
  uint64_t v27 = (int *)(v20
              + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  swift_beginAccess();
  int v28 = *v27;
  uint64_t v29 = (_DWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
  swift_beginAccess();
  if (v28 != *v29) {
    goto LABEL_14;
  }
  uint64_t v30 = (int *)(v20
              + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  swift_beginAccess();
  int v31 = *v30;
  uint64_t v32 = (_DWORD *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
  swift_beginAccess();
  if (v31 != *v32) {
    goto LABEL_14;
  }
  uint64_t v33 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  swift_beginAccess();
  uint64_t v34 = *v33;
  uint64_t v35 = v33[1];
  uint64_t v36 = (void *)(v16
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
  swift_beginAccess();
  if (v34 == *v36 && v35 == v36[1]) {
    char v37 = 1;
  }
  else {
    char v37 = sub_22D2BD660();
  }
  swift_release();
  swift_release();
  return v37 & 1;
}

uint64_t PBHKMedicationScheduleIntervalData.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData, &qword_268541050, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_22D1B3270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D2B8, &qword_2685408E0, a2);
}

unint64_t sub_22D1B3294()
{
  return 0xD00000000000003BLL;
}

uint64_t sub_22D1B32B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationScheduleIntervalData.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D1B32C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBHKMedicationScheduleIntervalData.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1B32E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D20, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1B335C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D2B0, (uint64_t)qword_2685408C8, a1);
}

uint64_t sub_22D1B3380(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541720, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1B33EC()
{
  sub_22D1B9F34(&qword_268541720, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData);
  return sub_22D2BC200();
}

uint64_t sub_22D1B3468(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBHKMedicationScheduleIntervalData, sub_22D1B2C20) & 1;
}

uint64_t sub_22D1B34AC()
{
  uint64_t result = sub_22D2BCCB0();
  qword_2685408E8 = 0xD00000000000003BLL;
  unk_2685408F0 = 0x800000022D2D95E0;
  return result;
}

uint64_t static PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.protoMessageName.getter()
{
  return sub_22D1B354C(&qword_26853D2C0, &qword_2685408E8);
}

uint64_t sub_22D1B354C(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_22D1B35A0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685408F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685408F8);
  sub_22D167880(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_22D2C0BB0;
  unint64_t v5 = v22 + v4;
  unint64_t v6 = v22 + v4 + *(int *)(v2 + 56);
  *(void *)(v22 + v4) = 1;
  *(void *)unint64_t v6 = "sunday";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "monday";
  *(void *)(v10 + 8) = 6;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "tuesday";
  *((void *)v12 + 1) = 7;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "wednesday";
  *((void *)v14 + 1) = 9;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "thursday";
  *((void *)v16 + 1) = 8;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "friday";
  *((void *)v18 + 1) = 6;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "saturday";
  *((void *)v20 + 1) = 8;
  v20[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D2C8, (uint64_t)qword_2685408F8, a1);
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
          sub_22D2BC0B0();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.traverse<A>(visitor:)()
{
  if (*v0 != 1 || (uint64_t result = sub_22D2BC230(), !v1))
  {
    if (v0[1] != 1 || (uint64_t result = sub_22D2BC230(), !v1))
    {
      if (v0[2] != 1 || (uint64_t result = sub_22D2BC230(), !v1))
      {
        if (v0[3] != 1 || (uint64_t result = sub_22D2BC230(), !v1))
        {
          if (v0[4] != 1 || (uint64_t result = sub_22D2BC230(), !v1))
          {
            if (v0[5] != 1 || (uint64_t result = sub_22D2BC230(), !v1))
            {
              if (v0[6] != 1 || (uint64_t result = sub_22D2BC230(), !v1))
              {
                type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
                return sub_22D2BBFD0();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.hashValue.getter()
{
  return sub_22D1B3BE4((void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, &qword_268541058, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_22D1B3BE4(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_22D2BD760();
}

uint64_t sub_22D1B3C6C@<X0>(_DWORD *a1@<X8>)
{
  *(_DWORD *)((char *)a1 + 3) = 0;
  *a1 = 0;
  return sub_22D2BBFE0();
}

uint64_t sub_22D1B3C94(uint64_t a1, uint64_t a2)
{
  return sub_22D1B3CBC(a1, a2, &qword_26853D2C0, &qword_2685408E8);
}

uint64_t sub_22D1B3CBC(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_22D1B3D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = sub_22D2BBFF0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_22D1B3D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 44);
  uint64_t v5 = sub_22D2BBFF0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_22D1B3DF4()
{
  return PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1B3E0C()
{
  return PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions.traverse<A>(visitor:)();
}

uint64_t sub_22D1B3E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1B9F34(&qword_268541D18, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1B3EA0@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D2C8, (uint64_t)qword_2685408F8, a1);
}

uint64_t sub_22D1B3EC4(uint64_t a1)
{
  uint64_t v2 = sub_22D1B9F34(&qword_268541738, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1B3F30()
{
  sub_22D1B9F34(&qword_268541738, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
  return sub_22D2BC200();
}

uint64_t _s19HealthRecordsDaemon12PBTimeSeriesV5ValueV20OneOf_AdditionalDataO2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*((unsigned char *)a2 + 8) == 1)
  {
    if (v3)
    {
      if (v3 == 1)
      {
        if (v2 == 1) {
          return 1;
        }
      }
      else if (v2 == 2)
      {
        return 1;
      }
    }
    else if (!v2)
    {
      return 1;
    }
  }
  else if (v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_22D1B4014(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBWorkout, (uint64_t (*)(uint64_t, uint64_t))sub_22D16B1B0);
}

uint64_t _s19HealthRecordsDaemon8PBBucketV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v16 - v9;
  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16))
  {
    uint64_t v11 = type metadata accessor for PBBucket(0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(v11 + 28), v4);
    v12(v8, a2 + *(int *)(v11 + 28), v4);
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v13 = sub_22D2BCB90();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s19HealthRecordsDaemon29PBMedicationTrackingDoseEventV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *a1;
  uint64_t v12 = *a2;
  if (*((unsigned char *)a2 + 8) != 1)
  {
    if (v11 != v12) {
      goto LABEL_42;
    }
    goto LABEL_11;
  }
  if (!v12)
  {
    if (!v11) {
      goto LABEL_11;
    }
LABEL_42:
    char v15 = 0;
    return v15 & 1;
  }
  if (v12 != 1)
  {
    if (v11 == 2) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
  if (v11 != 1) {
    goto LABEL_42;
  }
LABEL_11:
  uint64_t v13 = a1[2];
  uint64_t v14 = a2[2];
  if (*((unsigned char *)a2 + 24) == 1)
  {
    switch(v14)
    {
      case 1:
        if (v13 != 1) {
          goto LABEL_42;
        }
        goto LABEL_16;
      case 2:
        if (v13 != 2) {
          goto LABEL_42;
        }
        goto LABEL_16;
      case 3:
        if (v13 != 3) {
          goto LABEL_42;
        }
        goto LABEL_16;
      case 4:
        if (v13 != 4) {
          goto LABEL_42;
        }
        goto LABEL_16;
      case 5:
        if (v13 != 5) {
          goto LABEL_42;
        }
        goto LABEL_16;
      case 6:
        if (v13 != 6) {
          goto LABEL_42;
        }
        goto LABEL_16;
      default:
        if (!v13) {
          goto LABEL_16;
        }
        goto LABEL_42;
    }
  }
  if (v13 != v14) {
    goto LABEL_42;
  }
LABEL_16:
  if (a1[4] == a2[4] && a1[5] == a2[5] || (char v15 = 0, (sub_22D2BD660() & 1) != 0))
  {
    if (a1[6] == a2[6] && a1[7] == a2[7] || (char v15 = 0, (sub_22D2BD660() & 1) != 0))
    {
      if (*((_DWORD *)a1 + 16) != *((_DWORD *)a2 + 16) || *((_DWORD *)a1 + 17) != *((_DWORD *)a2 + 17)) {
        goto LABEL_42;
      }
      if (a1[9] == a2[9] && a1[10] == a2[10] || (char v15 = 0, (sub_22D2BD660() & 1) != 0))
      {
        if (a1[11] == a2[11] && a1[12] == a2[12] || (char v15 = 0, (sub_22D2BD660() & 1) != 0))
        {
          uint64_t v16 = type metadata accessor for PBMedicationTrackingDoseEvent(0);
          uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
          v17(v10, (char *)a1 + *(int *)(v16 + 48), v4);
          v17(v8, (char *)a2 + *(int *)(v16 + 48), v4);
          sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
          char v15 = sub_22D2BCB90();
          uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
          v18(v8, v4);
          v18(v10, v4);
        }
      }
    }
  }
  return v15 & 1;
}

uint64_t _s19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataV24HKReminderWeekdayOptionsV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2
    && a1[1] == a2[1]
    && a1[2] == a2[2]
    && a1[3] == a2[3]
    && a1[4] == a2[4]
    && a1[5] == a2[5]
    && a1[6] == a2[6])
  {
    uint64_t v13 = type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
    uint64_t v14 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v14(v10, &a1[*(int *)(v13 + 44)], v4);
    v14(v8, &a2[*(int *)(v13 + 44)], v4);
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v11 = sub_22D2BCB90();
    char v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_22D1B4784(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBActivitySummarySeries, sub_22D1A5A24);
}

uint64_t _s19HealthRecordsDaemon23PBActivitySummarySeriesV08ActivityE0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v16 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && *(_DWORD *)(a1 + 4) == *(_DWORD *)(a2 + 4)
    && *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8)
    && *(_DWORD *)(a1 + 12) == *(_DWORD *)(a2 + 12)
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
    && *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20))
  {
    if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32)
      || (char v11 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v12 = type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v13(v10, a1 + *(int *)(v12 + 44), v4);
      v13(v8, a2 + *(int *)(v12 + 44), v4);
      sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
      char v11 = sub_22D2BCB90();
      uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
      v14(v8, v4);
      v14(v10, v4);
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s19HealthRecordsDaemon20PBMedicationTrackingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void **)(a2 + v11);
  if (void *)v12 == v13 || (sub_22D1AC174(v12, v13))
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1, v4);
    v14(v8, a2, v4);
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v15 = sub_22D2BCB90();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s19HealthRecordsDaemon17PBHistogramSeriesV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v17 - v9;
  if (sub_22D110BD4(*a1, *a2))
  {
    BOOL v11 = a1[1] == a2[1] && a1[2] == a2[2];
    if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v13 = type metadata accessor for PBHistogramSeries(0);
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v14(v10, (char *)a1 + *(int *)(v13 + 24), v4);
      v14(v8, (char *)a2 + *(int *)(v13 + 24), v4);
      sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
      char v12 = sub_22D2BCB90();
      char v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v8, v4);
      v15(v10, v4);
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon17PBHistogramSeriesV5ValueV2eeoiySbAE_AEtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    if (sub_22D1110B8(*((void *)a1 + 2), *((void *)a2 + 2)))
    {
      if (*((void *)a1 + 3) == *((void *)a2 + 3) && *((void *)a1 + 4) == *((void *)a2 + 4)
        || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
      {
        uint64_t v13 = type metadata accessor for PBHistogramSeries.Value(0);
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v14(v10, &a1[*(int *)(v13 + 28)], v4);
        v14(v8, &a2[*(int *)(v13 + 28)], v4);
        sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
        char v12 = sub_22D2BCB90();
        char v15 = *(void (**)(char *, uint64_t))(v5 + 8);
        v15(v8, v4);
        v15(v10, v4);
      }
    }
    else
    {
      char v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon17PBHKCodedQuantityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v18 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    BOOL v13 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v13 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      if (*(float *)(a1 + 32) == *(float *)(a2 + 32))
      {
        if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)
          || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
        {
          if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && *(void *)(a1 + 64) == *(void *)(a2 + 64)
            || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
          {
            if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80)
              || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
            {
              uint64_t v14 = type metadata accessor for PBHKCodedQuantity(0);
              char v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
              v15(v10, a1 + *(int *)(v14 + 40), v4);
              v15(v8, a2 + *(int *)(v14 + 40), v4);
              sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
              char v12 = sub_22D2BCB90();
              uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
              v16(v8, v4);
              v16(v10, v4);
            }
          }
        }
      }
      else
      {
        char v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t sub_22D1B51F0(char *a1, char *a2)
{
  return sub_22D1B7720(a1, a2, type metadata accessor for PBCharacteristics);
}

uint64_t _s19HealthRecordsDaemon16PBECGMeasurementV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    if (*(float *)(a1 + 16) != *(float *)(a2 + 16)) {
      goto LABEL_24;
    }
    if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32)
      || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)
        || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
      {
        if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && *(void *)(a1 + 64) == *(void *)(a2 + 64)
          || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
        {
          if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80)
            || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
          {
            if ((sub_22D10F3F8(*(void **)(a1 + 88), *(void **)(a2 + 88)) & 1) != 0
              && sub_22D111320(*(void *)(a1 + 96), *(void *)(a2 + 96))
              && *(float *)(a1 + 104) == *(float *)(a2 + 104)
              && sub_22D0B9338(*(void *)(a1 + 112), *(unsigned char *)(a1 + 120), *(void *)(a2 + 112), *(unsigned char *)(a2 + 120)))
            {
              uint64_t v13 = type metadata accessor for PBECGMeasurement(0);
              uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
              v14(v10, a1 + *(int *)(v13 + 56), v4);
              v14(v8, a2 + *(int *)(v13 + 56), v4);
              sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
              char v12 = sub_22D2BCB90();
              char v15 = *(void (**)(char *, uint64_t))(v5 + 8);
              v15(v8, v4);
              v15(v10, v4);
              return v12 & 1;
            }
LABEL_24:
            char v12 = 0;
          }
        }
      }
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon16PBClinicalRecordV013OneOf_MedicalE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v87 = a1;
  uint64_t v88 = a2;
  uint64_t v2 = type metadata accessor for PBHKMedicationRecord(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v81 = (uint64_t)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PBHKProcedureRecord(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v80 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for PBHKAccountOwner(0);
  MEMORY[0x270FA5388](v72);
  uint64_t v82 = (uint64_t *)((char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for PBHKDiagnosticTestReport(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v79 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PBHKDiagnosticTestResult(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v78 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PBHKMedicationOrder(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v77 = (uint64_t)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PBHKMedicationDispenseRecord(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v76 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PBHKVaccinationRecord(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v75 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PBHKConditionRecord(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v74 = (uint64_t)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for PBHKAllergyRecord(0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v73 = (uint64_t)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v85 = (uint64_t)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v84 = (uint64_t)&v71 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v86 = (uint64_t *)((char *)&v71 - v27);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v83 = (uint64_t)&v71 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (uint64_t *)((char *)&v71 - v31);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v35 = (char *)&v71 - v34;
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  uint64_t v38 = (char *)&v71 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  uint64_t v41 = (char *)&v71 - v40;
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  uint64_t v44 = (char *)&v71 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)&v71 - v45;
  sub_22D1D09EC(0, &qword_268542040, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  uint64_t v48 = MEMORY[0x270FA5388](v47 - 8);
  uint64_t v50 = (char *)&v71 - v49;
  uint64_t v51 = (char *)&v71 + *(int *)(v48 + 56) - v49;
  sub_22D1D0A4C(v87, (uint64_t)&v71 - v49, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  sub_22D1D0A4C(v88, (uint64_t)v51, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_22D1D0A4C((uint64_t)v50, (uint64_t)v44, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v54 = v74;
        sub_22D1D06E8((uint64_t)v51, v74, type metadata accessor for PBHKConditionRecord);
        char v55 = sub_22D1B8590((uint64_t)v44, v54, type metadata accessor for PBHKConditionRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D179E44);
        uint64_t v56 = type metadata accessor for PBHKConditionRecord;
        sub_22D1B9750(v54, type metadata accessor for PBHKConditionRecord);
        uint64_t v57 = (uint64_t)v44;
        goto LABEL_30;
      }
      uint64_t v52 = type metadata accessor for PBHKConditionRecord;
      uint64_t v53 = (uint64_t)v44;
      goto LABEL_43;
    case 2u:
      sub_22D1D0A4C((uint64_t)v50, (uint64_t)v41, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v58 = v75;
        sub_22D1D06E8((uint64_t)v51, v75, type metadata accessor for PBHKVaccinationRecord);
        char v55 = sub_22D1B8590((uint64_t)v41, v58, type metadata accessor for PBHKVaccinationRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D17D540);
        uint64_t v56 = type metadata accessor for PBHKVaccinationRecord;
        sub_22D1B9750(v58, type metadata accessor for PBHKVaccinationRecord);
        uint64_t v57 = (uint64_t)v41;
        goto LABEL_30;
      }
      uint64_t v52 = type metadata accessor for PBHKVaccinationRecord;
      uint64_t v53 = (uint64_t)v41;
      goto LABEL_43;
    case 3u:
      sub_22D1D0A4C((uint64_t)v50, (uint64_t)v38, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v59 = v76;
        sub_22D1D06E8((uint64_t)v51, v76, type metadata accessor for PBHKMedicationDispenseRecord);
        char v55 = sub_22D1B8590((uint64_t)v38, v59, type metadata accessor for PBHKMedicationDispenseRecord, sub_22D185610);
        sub_22D1B9750(v59, type metadata accessor for PBHKMedicationDispenseRecord);
        uint64_t v57 = (uint64_t)v38;
        char v60 = type metadata accessor for PBHKMedicationDispenseRecord;
        goto LABEL_31;
      }
      uint64_t v52 = type metadata accessor for PBHKMedicationDispenseRecord;
      uint64_t v53 = (uint64_t)v38;
      goto LABEL_43;
    case 4u:
      sub_22D1D0A4C((uint64_t)v50, (uint64_t)v35, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v61 = v77;
        sub_22D1D06E8((uint64_t)v51, v77, type metadata accessor for PBHKMedicationOrder);
        char v55 = sub_22D1B8590((uint64_t)v35, v61, type metadata accessor for PBHKMedicationOrder, sub_22D1880DC);
        uint64_t v56 = type metadata accessor for PBHKMedicationOrder;
        sub_22D1B9750(v61, type metadata accessor for PBHKMedicationOrder);
        uint64_t v57 = (uint64_t)v35;
        goto LABEL_30;
      }
      uint64_t v52 = type metadata accessor for PBHKMedicationOrder;
      uint64_t v53 = (uint64_t)v35;
      goto LABEL_43;
    case 5u:
      sub_22D1D0A4C((uint64_t)v50, (uint64_t)v32, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v62 = v78;
        sub_22D1D06E8((uint64_t)v51, v78, type metadata accessor for PBHKDiagnosticTestResult);
        char v55 = sub_22D1B8590((uint64_t)v32, v62, type metadata accessor for PBHKDiagnosticTestResult, sub_22D18B938);
        uint64_t v56 = type metadata accessor for PBHKDiagnosticTestResult;
        sub_22D1B9750(v62, type metadata accessor for PBHKDiagnosticTestResult);
        uint64_t v57 = (uint64_t)v32;
        goto LABEL_30;
      }
      uint64_t v67 = type metadata accessor for PBHKDiagnosticTestResult;
      goto LABEL_39;
    case 6u:
      uint64_t v63 = v83;
      sub_22D1D0A4C((uint64_t)v50, v83, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v64 = v79;
        sub_22D1D06E8((uint64_t)v51, v79, type metadata accessor for PBHKDiagnosticTestReport);
        char v55 = sub_22D1B8590(v63, v64, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t (*)(uint64_t, uint64_t))sub_22D198D5C);
        char v65 = type metadata accessor for PBHKDiagnosticTestReport;
        goto LABEL_29;
      }
      uint64_t v68 = type metadata accessor for PBHKDiagnosticTestReport;
      goto LABEL_42;
    case 7u:
      uint64_t v32 = v86;
      sub_22D1D0A4C((uint64_t)v50, (uint64_t)v86, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        uint64_t v67 = type metadata accessor for PBHKAccountOwner;
LABEL_39:
        uint64_t v52 = v67;
        uint64_t v53 = (uint64_t)v32;
        goto LABEL_43;
      }
      uint64_t v66 = v82;
      sub_22D1D06E8((uint64_t)v51, (uint64_t)v82, type metadata accessor for PBHKAccountOwner);
      if (*v32 == *v66 && v32[1] == v66[1] || (sub_22D2BD660())
        && (v32[2] == v66[2] && v32[3] == v66[3] || (sub_22D2BD660() & 1) != 0))
      {
        sub_22D2BBFF0();
        sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
        if (sub_22D2BCB90())
        {
          sub_22D1B9750((uint64_t)v66, type metadata accessor for PBHKAccountOwner);
          sub_22D1B9750((uint64_t)v32, type metadata accessor for PBHKAccountOwner);
          sub_22D1B9750((uint64_t)v50, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
          char v55 = 1;
          return v55 & 1;
        }
      }
      sub_22D1B9750((uint64_t)v66, type metadata accessor for PBHKAccountOwner);
      sub_22D1B9750((uint64_t)v32, type metadata accessor for PBHKAccountOwner);
      sub_22D1B9750((uint64_t)v50, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      goto LABEL_44;
    case 8u:
      uint64_t v63 = v84;
      sub_22D1D0A4C((uint64_t)v50, v84, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v64 = v80;
        sub_22D1D06E8((uint64_t)v51, v80, type metadata accessor for PBHKProcedureRecord);
        char v55 = sub_22D1B8590(v63, v64, type metadata accessor for PBHKProcedureRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D19C100);
        char v65 = type metadata accessor for PBHKProcedureRecord;
        goto LABEL_29;
      }
      uint64_t v68 = type metadata accessor for PBHKProcedureRecord;
      goto LABEL_42;
    case 9u:
      uint64_t v63 = v85;
      sub_22D1D0A4C((uint64_t)v50, v85, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v64 = v81;
        sub_22D1D06E8((uint64_t)v51, v81, type metadata accessor for PBHKMedicationRecord);
        char v55 = sub_22D1B8590(v63, v64, type metadata accessor for PBHKMedicationRecord, sub_22D18340C);
        char v65 = type metadata accessor for PBHKMedicationRecord;
LABEL_29:
        uint64_t v56 = v65;
        sub_22D1B9750(v64, v65);
        uint64_t v57 = v63;
        goto LABEL_30;
      }
      uint64_t v68 = type metadata accessor for PBHKMedicationRecord;
LABEL_42:
      uint64_t v52 = v68;
      uint64_t v53 = v63;
      goto LABEL_43;
    default:
      sub_22D1D0A4C((uint64_t)v50, (uint64_t)v46, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v52 = type metadata accessor for PBHKAllergyRecord;
        uint64_t v53 = (uint64_t)v46;
LABEL_43:
        sub_22D1B9750(v53, v52);
        sub_22D1D0990((uint64_t)v50, &qword_268542040, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
LABEL_44:
        char v55 = 0;
      }
      else
      {
        uint64_t v70 = v73;
        sub_22D1D06E8((uint64_t)v51, v73, type metadata accessor for PBHKAllergyRecord);
        char v55 = sub_22D1B8590((uint64_t)v46, v70, type metadata accessor for PBHKAllergyRecord, (uint64_t (*)(uint64_t, uint64_t))sub_22D175D94);
        uint64_t v56 = type metadata accessor for PBHKAllergyRecord;
        sub_22D1B9750(v70, type metadata accessor for PBHKAllergyRecord);
        uint64_t v57 = (uint64_t)v46;
LABEL_30:
        char v60 = v56;
LABEL_31:
        sub_22D1B9750(v57, v60);
        sub_22D1B9750((uint64_t)v50, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
      }
      return v55 & 1;
  }
}

uint64_t sub_22D1B63B0(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCategorySeries, sub_22D1661BC);
}

BOOL _s19HealthRecordsDaemon16PBCategorySeriesV5EventV20OneOf_AdditionalDataO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v37 = type metadata accessor for PBCategorySeries.Range(0);
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = (_DWORD *)((char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v37 - v9);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (uint64_t *)((char *)&v37 - v15);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (uint64_t *)((char *)&v37 - v18);
  MEMORY[0x270FA5388](v17);
  uint64_t v39 = (_DWORD *)((char *)&v37 - v20);
  sub_22D1D09EC(0, &qword_268542048, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v25 = (uint64_t *)((char *)&v37 + *(int *)(v22 + 56) - v23);
  sub_22D1D0A4C(a1, (uint64_t)&v37 - v23, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  sub_22D1D0A4C(v40, (uint64_t)v25, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_22D1D0A4C((uint64_t)v24, (uint64_t)v19, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      uint64_t v28 = *v19;
      uint64_t v27 = v19[1];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      if (v28 == *v25 && v27 == v25[1])
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v30 = sub_22D2BD660();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0) {
          goto LABEL_39;
        }
      }
      goto LABEL_42;
    case 2u:
      sub_22D1D0A4C((uint64_t)v24, (uint64_t)v16, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      uint64_t v31 = *v16;
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_29;
      }
      uint64_t v32 = *v25;
      if (*((unsigned char *)v25 + 8) == 1)
      {
        switch(v32)
        {
          case 1:
            goto LABEL_36;
          case 2:
            goto LABEL_38;
          case 3:
            goto LABEL_41;
          default:
            goto LABEL_24;
        }
      }
      goto LABEL_26;
    case 3u:
      sub_22D1D0A4C((uint64_t)v24, (uint64_t)v13, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_29;
      }
      BOOL v33 = sub_22D0BC5B8(*(void *)v13, v13[8], *v25);
      sub_22D1B9750((uint64_t)v24, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      return v33;
    case 4u:
      sub_22D1D0A4C((uint64_t)v24, (uint64_t)v10, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      uint64_t v31 = *v10;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_29;
      }
      uint64_t v32 = *v25;
      if (*((unsigned char *)v25 + 8) == 1)
      {
        switch(v32)
        {
          case 1:
            goto LABEL_36;
          case 2:
            goto LABEL_38;
          case 3:
            goto LABEL_41;
          case 4:
            if (v31 == 4) {
              goto LABEL_42;
            }
            goto LABEL_39;
          default:
            goto LABEL_24;
        }
      }
      goto LABEL_26;
    case 5u:
      sub_22D1D0A4C((uint64_t)v24, (uint64_t)v7, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      uint64_t v31 = *v7;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_29;
      }
      uint64_t v32 = *v25;
      if (*((unsigned char *)v25 + 8) == 1)
      {
        switch(v32)
        {
          case 1:
LABEL_36:
            if (v31 == 1) {
              goto LABEL_42;
            }
            goto LABEL_39;
          case 2:
LABEL_38:
            if (v31 != 2) {
              goto LABEL_39;
            }
            goto LABEL_42;
          case 3:
LABEL_41:
            if (v31 == 3) {
              goto LABEL_42;
            }
            goto LABEL_39;
          default:
LABEL_24:
            if (!v31) {
              goto LABEL_42;
            }
            goto LABEL_39;
        }
      }
LABEL_26:
      if (v31 == v32) {
        goto LABEL_42;
      }
      goto LABEL_39;
    default:
      uint64_t v26 = v39;
      sub_22D1D0A4C((uint64_t)v24, (uint64_t)v39, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_22D1B9750((uint64_t)v26, type metadata accessor for PBCategorySeries.Range);
LABEL_29:
        sub_22D1D0990((uint64_t)v24, &qword_268542048, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
        return 0;
      }
      uint64_t v34 = (uint64_t)v25;
      uint64_t v35 = v38;
      sub_22D1D06E8(v34, (uint64_t)v38, type metadata accessor for PBCategorySeries.Range);
      if (*v26 != *v35
        || v26[1] != v35[1]
        || (sub_22D2BBFF0(), sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]), (sub_22D2BCB90() & 1) == 0))
      {
        sub_22D1B9750((uint64_t)v35, type metadata accessor for PBCategorySeries.Range);
        sub_22D1B9750((uint64_t)v26, type metadata accessor for PBCategorySeries.Range);
LABEL_39:
        sub_22D1B9750((uint64_t)v24, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
        return 0;
      }
      sub_22D1B9750((uint64_t)v35, type metadata accessor for PBCategorySeries.Range);
      sub_22D1B9750((uint64_t)v26, type metadata accessor for PBCategorySeries.Range);
LABEL_42:
      sub_22D1B9750((uint64_t)v24, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
      return 1;
  }
}

uint64_t sub_22D1B6AC0(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCycleTracking, sub_22D19EA28);
}

uint64_t sub_22D1B6AEC(char *a1, char *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  if (*(_DWORD *)a1 == *(_DWORD *)a2 && *((_DWORD *)a1 + 1) == *((_DWORD *)a2 + 1))
  {
    uint64_t v13 = a3(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v14(v12, &a1[*(int *)(v13 + 24)], v6);
    v14(v10, &a2[*(int *)(v13 + 24)], v6);
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v15 = sub_22D2BCB90();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v10, v6);
    v16(v12, v6);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_22D1B6CBC(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBCycleTracking.Event, (uint64_t (*)(uint64_t, uint64_t))sub_22D1A1F1C);
}

uint64_t _s19HealthRecordsDaemon15PBCycleTrackingV5CycleV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    BOOL v13 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v13 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      if ((sub_22D11138C(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) != 0
        && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40)
        && *(_DWORD *)(a1 + 44) == *(_DWORD *)(a2 + 44))
      {
        uint64_t v14 = type metadata accessor for PBCycleTracking.Cycle(0);
        char v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v15(v10, a1 + *(int *)(v14 + 36), v4);
        v15(v8, a2 + *(int *)(v14 + 36), v4);
        sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
        char v12 = sub_22D2BCB90();
        uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
        v16(v8, v4);
        v16(v10, v4);
      }
      else
      {
        char v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon14PBSleepSummaryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_22D1113E0(*(void *)a1, *(void *)a2) & 1) != 0 && *(float *)(a1 + 8) == *(float *)(a2 + 8))
  {
    uint64_t v11 = type metadata accessor for PBSleepSummary(0);
    char v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(v11 + 24), v4);
    v12(v8, a2 + *(int *)(v11 + 24), v4);
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v13 = sub_22D2BCB90();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s19HealthRecordsDaemon14PBSleepSummaryV8ScheduleV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2
    && a1[1] == a2[1]
    && a1[2] == a2[2]
    && a1[3] == a2[3]
    && a1[4] == a2[4]
    && a1[5] == a2[5]
    && a1[6] == a2[6]
    && *((_DWORD *)a1 + 2) == *((_DWORD *)a2 + 2)
    && *((_DWORD *)a1 + 3) == *((_DWORD *)a2 + 3))
  {
    uint64_t v11 = type metadata accessor for PBSleepSummary.Schedule(0);
    char v12 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v12(v10, &a1[*(int *)(v11 + 52)], v4);
    v12(v8, &a2[*(int *)(v11 + 52)], v4);
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v13 = sub_22D2BCB90();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s19HealthRecordsDaemon13PBSleepSeriesV5ValueV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    if (*(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
      && *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20)
      && *(_DWORD *)(a1 + 24) == *(_DWORD *)(a2 + 24))
    {
      uint64_t v13 = type metadata accessor for PBSleepSeries.Value(0);
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v14(v10, a1 + *(int *)(v13 + 32), v4);
      v14(v8, a2 + *(int *)(v13 + 32), v4);
      sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
      char v12 = sub_22D2BCB90();
      char v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v8, v4);
      v15(v10, v4);
    }
    else
    {
      char v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_22D1B7504(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBPatientMeta, sub_22D1A8014);
}

uint64_t sub_22D1B7530(char *a1, char *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v20 - v11;
  BOOL v13 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v13 || (char v14 = 0, (sub_22D2BD660() & 1) != 0))
  {
    BOOL v15 = *((void *)a1 + 2) == *((void *)a2 + 2) && *((void *)a1 + 3) == *((void *)a2 + 3);
    if (v15 || (char v14 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v16 = a3(0);
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v17(v12, &a1[*(int *)(v16 + 24)], v6);
      v17(v10, &a2[*(int *)(v16 + 24)], v6);
      sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
      char v14 = sub_22D2BCB90();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
      v18(v10, v6);
      v18(v12, v6);
    }
  }
  return v14 & 1;
}

uint64_t sub_22D1B7720(char *a1, char *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v20 - v11;
  BOOL v13 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v13 || (char v14 = 0, (sub_22D2BD660() & 1) != 0))
  {
    BOOL v15 = *((void *)a1 + 2) == *((void *)a2 + 2) && *((void *)a1 + 3) == *((void *)a2 + 3);
    if (v15 || (char v14 = 0, (sub_22D2BD660() & 1) != 0))
    {
      if (*((void *)a1 + 4) == *((void *)a2 + 4) && *((void *)a1 + 5) == *((void *)a2 + 5)
        || (char v14 = 0, (sub_22D2BD660() & 1) != 0))
      {
        uint64_t v16 = a3(0);
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        v17(v12, &a1[*(int *)(v16 + 28)], v6);
        v17(v10, &a2[*(int *)(v16 + 28)], v6);
        sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
        char v14 = sub_22D2BCB90();
        uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
        v18(v10, v6);
        v18(v12, v6);
      }
    }
  }
  return v14 & 1;
}

uint64_t sub_22D1B7938(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v18 - v11;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    uint64_t v14 = a3(0);
    BOOL v15 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v7 + 16);
    v15(v12, &a1[*(int *)(v14 + 24)], v6);
    v15(v10, &a2[*(int *)(v14 + 24)], v6);
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v13 = sub_22D2BCB90();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v10, v6);
    v16(v12, v6);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s19HealthRecordsDaemon12PBTimeSeriesV5ValueV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - v9;
  if (*(float *)a1 != *(float *)a2
    || *(float *)(a1 + 4) != *(float *)(a2 + 4)
    || *(float *)(a1 + 8) != *(float *)(a2 + 8)
    || *(float *)(a1 + 12) != *(float *)(a2 + 12)
    || *(float *)(a1 + 16) != *(float *)(a2 + 16))
  {
    goto LABEL_34;
  }
  if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32)
    || (char v11 = 0, (sub_22D2BD660() & 1) != 0))
  {
    if (*(_DWORD *)(a1 + 40) != *(_DWORD *)(a2 + 40)) {
      goto LABEL_34;
    }
    if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
      || (char v11 = 0, (sub_22D2BD660() & 1) != 0))
    {
      if (*(void *)(a1 + 64) == *(void *)(a2 + 64) && *(void *)(a1 + 72) == *(void *)(a2 + 72)
        || (char v11 = 0, (sub_22D2BD660() & 1) != 0))
      {
        if (*(double *)(a1 + 80) != *(double *)(a2 + 80)
          || *(double *)(a1 + 88) != *(double *)(a2 + 88)
          || *(double *)(a1 + 96) != *(double *)(a2 + 96)
          || *(double *)(a1 + 104) != *(double *)(a2 + 104)
          || *(double *)(a1 + 112) != *(double *)(a2 + 112)
          || (sub_22D10F3F8(*(void **)(a1 + 120), *(void **)(a2 + 120)) & 1) == 0)
        {
          goto LABEL_34;
        }
        if (*(unsigned char *)(a1 + 137))
        {
          if ((*(unsigned char *)(a2 + 137) & 1) == 0) {
            goto LABEL_34;
          }
          goto LABEL_28;
        }
        if ((*(unsigned char *)(a2 + 137) & 1) == 0)
        {
          uint64_t v12 = *(void *)(a1 + 128);
          uint64_t v13 = *(void *)(a2 + 128);
          if (*(unsigned char *)(a2 + 136))
          {
            if (v13)
            {
              if (v13 == 1)
              {
                if (v12 == 1) {
                  goto LABEL_28;
                }
              }
              else if (v12 == 2)
              {
                goto LABEL_28;
              }
            }
            else if (!v12)
            {
              goto LABEL_28;
            }
          }
          else if (v12 == v13)
          {
LABEL_28:
            uint64_t v14 = type metadata accessor for PBTimeSeries.Value(0);
            BOOL v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
            v15(v10, a1 + *(int *)(v14 + 80), v4);
            v15(v8, a2 + *(int *)(v14 + 80), v4);
            sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
            char v11 = sub_22D2BCB90();
            uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
            v16(v8, v4);
            v16(v10, v4);
            return v11 & 1;
          }
        }
LABEL_34:
        char v11 = 0;
      }
    }
  }
  return v11 & 1;
}

uint64_t sub_22D1B7E40(uint64_t a1, uint64_t a2)
{
  return sub_22D1B8590(a1, a2, type metadata accessor for PBTimeSeries, sub_22D160C7C);
}

uint64_t _s19HealthRecordsDaemon9PBECGMetaV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    if (*(float *)(a1 + 16) != *(float *)(a2 + 16)) {
      goto LABEL_23;
    }
    if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32)
      || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)
        || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
      {
        if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && *(void *)(a1 + 64) == *(void *)(a2 + 64)
          || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
        {
          if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80)
            || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
          {
            if ((sub_22D10F3F8(*(void **)(a1 + 88), *(void **)(a2 + 88)) & 1) != 0
              && *(float *)(a1 + 96) == *(float *)(a2 + 96)
              && sub_22D0B9338(*(void *)(a1 + 104), *(unsigned char *)(a1 + 112), *(void *)(a2 + 104), *(unsigned char *)(a2 + 112)))
            {
              uint64_t v13 = type metadata accessor for PBECGMeta(0);
              uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
              v14(v10, a1 + *(int *)(v13 + 52), v4);
              v14(v8, a2 + *(int *)(v13 + 52), v4);
              sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
              char v12 = sub_22D2BCB90();
              BOOL v15 = *(void (**)(char *, uint64_t))(v5 + 8);
              v15(v8, v4);
              v15(v10, v4);
              return v12 & 1;
            }
LABEL_23:
            char v12 = 0;
          }
        }
      }
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon11PBDateRangeV2eeoiySbAC_ACtFZ_0(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    BOOL v13 = *((void *)a1 + 2) == *(void *)(a2 + 16) && *((void *)a1 + 3) == *(void *)(a2 + 24);
    if (v13 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v14 = *((void *)a1 + 4);
      uint64_t v15 = *(void *)(a2 + 32);
      if (*(unsigned char *)(a2 + 40) == 1)
      {
        switch(v15)
        {
          case 1:
            if (v14 == 1) {
              goto LABEL_16;
            }
            goto LABEL_14;
          case 2:
            if (v14 == 2) {
              goto LABEL_16;
            }
            goto LABEL_14;
          case 3:
            if (v14 == 3) {
              goto LABEL_16;
            }
            goto LABEL_14;
          case 4:
            if (v14 == 4) {
              goto LABEL_16;
            }
            goto LABEL_14;
          case 5:
            if (v14 == 5) {
              goto LABEL_16;
            }
            goto LABEL_14;
          case 6:
            if (v14 == 6) {
              goto LABEL_16;
            }
            goto LABEL_14;
          default:
            if (v14) {
              goto LABEL_14;
            }
            goto LABEL_16;
        }
      }
      if (v14 == v15)
      {
LABEL_16:
        uint64_t v16 = type metadata accessor for PBDateRange(0);
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v17(v10, &a1[*(int *)(v16 + 28)], v4);
        v17(v8, (char *)(a2 + *(int *)(v16 + 28)), v4);
        sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
        char v12 = sub_22D2BCB90();
        uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
        v18(v8, v4);
        v18(v10, v4);
      }
      else
      {
LABEL_14:
        char v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s19HealthRecordsDaemon10PBQuantityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - v9;
  if (*(double *)a1 == *(double *)a2)
  {
    BOOL v11 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
    if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v13 = type metadata accessor for PBQuantity(0);
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v14(v10, a1 + *(int *)(v13 + 24), v4);
      v14(v8, a2 + *(int *)(v13 + 24), v4);
      sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
      char v12 = sub_22D2BCB90();
      uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v8, v4);
      v15(v10, v4);
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_22D1B8590(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = *(int *)(a3(0) + 20);
  uint64_t v16 = *(void *)(a1 + v15);
  uint64_t v17 = *(void *)(a2 + v15);
  if (v16 == v17
    || (swift_retain(), swift_retain(), char v18 = a4(v16, v17), swift_release(), swift_release(), (v18 & 1) != 0))
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v19(v14, a1, v8);
    v19(v12, a2, v8);
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v20 = sub_22D2BCB90();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v12, v8);
    v21(v14, v8);
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_22D1B878C(char *a1, char *a2, uint64_t (*a3)(void, void), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - v13;
  if (a3(*(void *)a1, *(void *)a2))
  {
    uint64_t v15 = a4(0);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v16(v14, &a1[*(int *)(v15 + 20)], v8);
    v16(v12, &a2[*(int *)(v15 + 20)], v8);
    sub_22D1B9F34(&qword_26853DB30, MEMORY[0x263F50560]);
    char v17 = sub_22D2BCB90();
    char v18 = *(void (**)(char *, uint64_t))(v9 + 8);
    v18(v12, v8);
    v18(v14, v8);
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t type metadata accessor for PBECGMeta(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A38);
}

uint64_t type metadata accessor for PBTimeSeries._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B58);
}

uint64_t type metadata accessor for PBTimeSeries.Value(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541768);
}

uint64_t type metadata accessor for PBClinicalRecord(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541858);
}

uint64_t type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541868);
}

uint64_t type metadata accessor for PBHKAllergyRecord(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541898);
}

uint64_t type metadata accessor for PBHKConditionRecord(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685418B8);
}

uint64_t type metadata accessor for PBHKVaccinationRecord(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685418C8);
}

uint64_t type metadata accessor for PBHKMedicationDispenseRecord(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541918);
}

uint64_t type metadata accessor for PBHKMedicationOrder(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541928);
}

uint64_t type metadata accessor for PBHKDiagnosticTestResult(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541938);
}

uint64_t type metadata accessor for PBHKDiagnosticTestReport(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685419A8);
}

uint64_t type metadata accessor for PBHKAccountOwner(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685419B8);
}

uint64_t type metadata accessor for PBHKProcedureRecord(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685419C8);
}

uint64_t type metadata accessor for PBHKMedicationRecord(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541908);
}

uint64_t type metadata accessor for PBMedicationTracking(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541AC8);
}

uint64_t type metadata accessor for PBPatientMeta._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541CE8);
}

uint64_t type metadata accessor for PBPatientMeta.HumanName(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541AA8);
}

uint64_t type metadata accessor for PBPatientMeta.CHRMeta(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A88);
}

uint64_t type metadata accessor for PBMedicationTrackingSchedule(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B08);
}

uint64_t type metadata accessor for PBMedicationTrackingSchedule._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541CF8);
}

uint64_t type metadata accessor for PBHKMedicationScheduleIntervalData(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B38);
}

uint64_t type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B48);
}

uint64_t type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541D08);
}

uint64_t type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B18);
}

uint64_t type metadata accessor for PBHKInspectableValueCollection(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541968);
}

uint64_t type metadata accessor for PBHKInspectableValueCollection._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C68);
}

uint64_t type metadata accessor for PBHKInspectableValue(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541978);
}

uint64_t type metadata accessor for PBHKInspectableValue._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C78);
}

uint64_t type metadata accessor for PBHKCodedQuantity(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541998);
}

uint64_t type metadata accessor for PBHKRatioValue(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541958);
}

uint64_t type metadata accessor for PBHKConcept(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541888);
}

uint64_t type metadata accessor for PBHKConcept._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541BA8);
}

void *sub_22D1B8D74(void *a1)
{
  uint64_t v20 = type metadata accessor for PBHKConcept;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v19 = (uint64_t)&v19 - v4;
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = 0;
  v1[5] = 0xE000000000000000;
  v1[6] = 0;
  v1[7] = 0xE000000000000000;
  uint64_t v5 = (uint64_t)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  uint64_t v6 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (char *)v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
  *((unsigned char *)v1
  + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory) = 0;
  swift_beginAccess();
  uint64_t v9 = a1[2];
  uint64_t v8 = a1[3];
  swift_beginAccess();
  v1[2] = v9;
  v1[3] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v11 = a1[4];
  uint64_t v10 = a1[5];
  swift_beginAccess();
  v1[4] = v11;
  v1[5] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v13 = a1[6];
  uint64_t v12 = a1[7];
  swift_beginAccess();
  v1[6] = v13;
  v1[7] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__groupBy;
  swift_beginAccess();
  uint64_t v15 = v19;
  uint64_t v16 = v20;
  sub_22D1B9E60(v14, v19, (unint64_t *)&qword_26853E848, v20);
  swift_beginAccess();
  sub_22D1B9D9C(v15, v5, (unint64_t *)&qword_26853E848, v16);
  swift_endAccess();
  char v17 = (char *)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory;
  swift_beginAccess();
  LOBYTE(v17) = *v17;
  swift_beginAccess();
  *uint64_t v7 = (_BYTE)v17;
  return v1;
}

uint64_t type metadata accessor for PBHKReferenceRange(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541948);
}

uint64_t type metadata accessor for PBHKReferenceRange._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C58);
}

uint64_t type metadata accessor for PBHKCodedValue(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541988);
}

uint64_t type metadata accessor for PBHKCodedValue._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C88);
}

uint64_t type metadata accessor for PBClinicalRecord._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B98);
}

void *sub_22D1B90F4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v50 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D167880(0, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v47 = type metadata accessor for PBHKConcept;
  uint64_t v48 = (uint64_t)&v43 - v6;
  sub_22D167880(0, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, v4);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v45 = (uint64_t)&v43 - v8;
  v2[2] = 0;
  v2[3] = 0xE000000000000000;
  v2[4] = 0;
  v2[5] = 0xE000000000000000;
  uint64_t v9 = (char *)v2
     + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  uint64_t v44 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  uint64_t v10 = type metadata accessor for PBHKConcept(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  uint64_t v46 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  uint64_t v12 = type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (void *)((char *)v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  *uint64_t v13 = 0;
  v13[1] = 0xE000000000000000;
  uint64_t v14 = (void *)((char *)v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
  *uint64_t v14 = 0;
  v14[1] = 0xE000000000000000;
  uint64_t v15 = (void *)((char *)v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  uint64_t v49 = (void *)((char *)v2
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  *uint64_t v15 = 0;
  v15[1] = 0xE000000000000000;
  uint64_t v16 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  uint64_t v51 = (char *)v2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  swift_beginAccess();
  uint64_t v18 = a1[2];
  uint64_t v17 = a1[3];
  swift_beginAccess();
  v2[2] = v18;
  v2[3] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v20 = a1[4];
  uint64_t v19 = a1[5];
  swift_beginAccess();
  v2[4] = v20;
  v2[5] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__primaryConcept;
  swift_beginAccess();
  uint64_t v22 = v45;
  uint64_t v23 = v47;
  sub_22D1B9E60(v21, v45, (unint64_t *)&qword_26853E848, v47);
  uint64_t v24 = (uint64_t)v44;
  swift_beginAccess();
  sub_22D1B9D9C(v22, v24, (unint64_t *)&qword_26853E848, v23);
  swift_endAccess();
  uint64_t v25 = (uint64_t)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord;
  swift_beginAccess();
  uint64_t v26 = v48;
  uint64_t v27 = v50;
  sub_22D1B9E60(v25, v48, &qword_26853E1E0, v50);
  uint64_t v28 = (uint64_t)v46;
  swift_beginAccess();
  sub_22D1B9D9C(v26, v28, &qword_26853E1E0, v27);
  swift_endAccess();
  uint64_t v29 = (void *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
  swift_beginAccess();
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  swift_beginAccess();
  *uint64_t v13 = v31;
  v13[1] = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = (void *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
  swift_beginAccess();
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  swift_beginAccess();
  *uint64_t v14 = v34;
  v14[1] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = (void *)((char *)a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  uint64_t v38 = v49;
  swift_beginAccess();
  void *v38 = v37;
  v38[1] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = (char *)a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType;
  swift_beginAccess();
  uint64_t v40 = *(void *)v39;
  LOBYTE(v39) = v39[8];
  uint64_t v41 = v51;
  swift_beginAccess();
  *(void *)uint64_t v41 = v40;
  v41[8] = (char)v39;
  return v2;
}

uint64_t type metadata accessor for PBSleepSeries.Value(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685417B8);
}

uint64_t type metadata accessor for PBHKDiagnosticTestResult._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C48);
}

uint64_t type metadata accessor for PBHistogramSeries.Value(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541798);
}

uint64_t type metadata accessor for PBBucket(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541778);
}

uint64_t type metadata accessor for PBGeneralMedication(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685418F8);
}

uint64_t type metadata accessor for PBHKMedicationRecord._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C18);
}

uint64_t type metadata accessor for PBGeneralMedication._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C08);
}

uint64_t type metadata accessor for PBHKMedicationOrder._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C38);
}

uint64_t type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C28);
}

uint64_t type metadata accessor for PBMedicationDosage(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685418D8);
}

uint64_t type metadata accessor for PBMedicationDosage._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541BF8);
}

uint64_t sub_22D1B9750(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for PBSleepSummary.Schedule(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685417D8);
}

uint64_t type metadata accessor for PBCategorySeries.Range(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685417F8);
}

uint64_t type metadata accessor for PBWorkout._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541B88);
}

uint64_t sub_22D1B9810(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v22 = type metadata accessor for PBDateRange;
  sub_22D167880(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v21 = (uint64_t)&v20 - v5;
  *(void *)(v1 + 24) = 0;
  uint64_t v6 = (void *)(v1 + 24);
  *(void *)(v1 + 16) = 0;
  uint64_t v20 = v1 + 20;
  *(unsigned char *)(v1 + 32) = 1;
  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  uint64_t v7 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  uint64_t v8 = type metadata accessor for PBDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (_DWORD *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
  _DWORD *v9 = 0;
  uint64_t v23 = (_DWORD *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
  *uint64_t v23 = 0;
  swift_beginAccess();
  int v10 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v10;
  swift_beginAccess();
  int v11 = *(_DWORD *)(a1 + 20);
  swift_beginAccess();
  *(_DWORD *)(v2 + 20) = v11;
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 24);
  LOBYTE(v10) = *(unsigned char *)(a1 + 32);
  swift_beginAccess();
  *uint64_t v6 = v12;
  *(unsigned char *)(v2 + 32) = v10;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(a1 + 36);
  swift_beginAccess();
  *(_DWORD *)(v2 + 36) = v12;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(a1 + 40);
  swift_beginAccess();
  *(_DWORD *)(v2 + 40) = v12;
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateRange;
  swift_beginAccess();
  uint64_t v15 = v21;
  uint64_t v14 = v22;
  sub_22D1B9E60(v13, v21, &qword_26853D7B0, v22);
  swift_beginAccess();
  sub_22D1B9D9C(v15, v7, &qword_26853D7B0, v14);
  swift_endAccess();
  uint64_t v16 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
  swift_beginAccess();
  LODWORD(v16) = *v16;
  swift_beginAccess();
  _DWORD *v9 = v16;
  uint64_t v17 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
  swift_beginAccess();
  LODWORD(v17) = *v17;
  uint64_t v18 = v23;
  swift_beginAccess();
  _DWORD *v18 = v17;
  return v2;
}

uint64_t type metadata accessor for PBFHIRIdentifier(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541878);
}

uint64_t type metadata accessor for PBHKAllergyRecord._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541BB8);
}

uint64_t type metadata accessor for PBHKAllergyReaction(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685418A8);
}

uint64_t type metadata accessor for PBHKAllergyReaction._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541BC8);
}

uint64_t type metadata accessor for PBHKConditionRecord._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541BD8);
}

uint64_t type metadata accessor for PBHKVaccinationRecord._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541BE8);
}

uint64_t type metadata accessor for PBQuantity(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685418E8);
}

uint64_t type metadata accessor for PBHKDiagnosticTestReport._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541C98);
}

uint64_t type metadata accessor for PBHKProcedureRecord._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541CA8);
}

uint64_t type metadata accessor for PBCycleTracking._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541CB8);
}

uint64_t type metadata accessor for PBCycleTracking.Range(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685419E8);
}

uint64_t type metadata accessor for PBCycleTracking.SexualActivity(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685419F8);
}

uint64_t type metadata accessor for PBCycleTracking.Event(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A08);
}

uint64_t type metadata accessor for PBCycleTracking.Event._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541CC8);
}

uint64_t type metadata accessor for PBCycleTracking.Cycle(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A18);
}

uint64_t type metadata accessor for PBActivitySummarySeries._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541CD8);
}

uint64_t type metadata accessor for PBActivitySummarySeries.ActivitySummary(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A68);
}

uint64_t type metadata accessor for PBPatientMeta.HeartRateMeds(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541A98);
}

uint64_t sub_22D1B9D9C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D167880(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t type metadata accessor for PBMedicationTracking._StorageClass()
{
  return self;
}

uint64_t type metadata accessor for PBMedicationTrackingDoseEvent(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268541AE8);
}

uint64_t sub_22D1B9E60(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D167880(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_22D1B9EE0()
{
  unint64_t result = qword_268540DF8;
  if (!qword_268540DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268540DF8);
  }
  return result;
}

uint64_t sub_22D1B9F34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22D1B9F7C()
{
  unint64_t result = qword_268540E10;
  if (!qword_268540E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268540E10);
  }
  return result;
}

unint64_t sub_22D1B9FD0()
{
  unint64_t result = qword_268540FA0;
  if (!qword_268540FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268540FA0);
  }
  return result;
}

unint64_t sub_22D1BA024()
{
  unint64_t result = qword_268541008;
  if (!qword_268541008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541008);
  }
  return result;
}

unint64_t sub_22D1BA078()
{
  unint64_t result = qword_268541010;
  if (!qword_268541010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541010);
  }
  return result;
}

unint64_t sub_22D1BA0D0()
{
  unint64_t result = qword_268541060;
  if (!qword_268541060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541060);
  }
  return result;
}

unint64_t sub_22D1BA128()
{
  unint64_t result = qword_268541068;
  if (!qword_268541068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541068);
  }
  return result;
}

unint64_t sub_22D1BA180()
{
  unint64_t result = qword_268541070;
  if (!qword_268541070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541070);
  }
  return result;
}

uint64_t sub_22D1BA1D4()
{
  return sub_22D108E48(&qword_268541078, &qword_268541080);
}

unint64_t sub_22D1BA208()
{
  unint64_t result = qword_268541088;
  if (!qword_268541088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541088);
  }
  return result;
}

unint64_t sub_22D1BA260()
{
  unint64_t result = qword_268541090;
  if (!qword_268541090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541090);
  }
  return result;
}

unint64_t sub_22D1BA2B8()
{
  unint64_t result = qword_268541098;
  if (!qword_268541098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541098);
  }
  return result;
}

uint64_t sub_22D1BA30C()
{
  return sub_22D108E48(&qword_2685410A0, &qword_2685410A8);
}

unint64_t sub_22D1BA340()
{
  unint64_t result = qword_2685410B0;
  if (!qword_2685410B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685410B0);
  }
  return result;
}

unint64_t sub_22D1BA398()
{
  unint64_t result = qword_2685410B8;
  if (!qword_2685410B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685410B8);
  }
  return result;
}

unint64_t sub_22D1BA3F0()
{
  unint64_t result = qword_2685410C0;
  if (!qword_2685410C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685410C0);
  }
  return result;
}

uint64_t sub_22D1BA444()
{
  return sub_22D108E48(&qword_2685410C8, &qword_2685410D0);
}

unint64_t sub_22D1BA478()
{
  unint64_t result = qword_2685410D8;
  if (!qword_2685410D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685410D8);
  }
  return result;
}

unint64_t sub_22D1BA4D0()
{
  unint64_t result = qword_2685410E0;
  if (!qword_2685410E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685410E0);
  }
  return result;
}

unint64_t sub_22D1BA528()
{
  unint64_t result = qword_2685410E8;
  if (!qword_2685410E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685410E8);
  }
  return result;
}

uint64_t sub_22D1BA57C()
{
  return sub_22D108E48(&qword_2685410F0, &qword_2685410F8);
}

unint64_t sub_22D1BA5B0()
{
  unint64_t result = qword_268541100;
  if (!qword_268541100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541100);
  }
  return result;
}

unint64_t sub_22D1BA608()
{
  unint64_t result = qword_268541108;
  if (!qword_268541108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541108);
  }
  return result;
}

unint64_t sub_22D1BA660()
{
  unint64_t result = qword_268541110;
  if (!qword_268541110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541110);
  }
  return result;
}

unint64_t sub_22D1BA6B8()
{
  unint64_t result = qword_268541118;
  if (!qword_268541118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541118);
  }
  return result;
}

unint64_t sub_22D1BA710()
{
  unint64_t result = qword_268541120;
  if (!qword_268541120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541120);
  }
  return result;
}

unint64_t sub_22D1BA768()
{
  unint64_t result = qword_268541128;
  if (!qword_268541128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541128);
  }
  return result;
}

unint64_t sub_22D1BA7C0()
{
  unint64_t result = qword_268541130;
  if (!qword_268541130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541130);
  }
  return result;
}

unint64_t sub_22D1BA818()
{
  unint64_t result = qword_268541138;
  if (!qword_268541138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541138);
  }
  return result;
}

unint64_t sub_22D1BA870()
{
  unint64_t result = qword_268541140;
  if (!qword_268541140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541140);
  }
  return result;
}

uint64_t sub_22D1BA8C4()
{
  return sub_22D108E48(&qword_268541148, &qword_268541150);
}

uint64_t sub_22D1BA8F4()
{
  return sub_22D108E48(&qword_268541158, &qword_268541160);
}

uint64_t sub_22D1BA924()
{
  return sub_22D108E48(&qword_268541168, &qword_268541170);
}

unint64_t sub_22D1BA958()
{
  unint64_t result = qword_268541178;
  if (!qword_268541178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541178);
  }
  return result;
}

unint64_t sub_22D1BA9B0()
{
  unint64_t result = qword_268541180;
  if (!qword_268541180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541180);
  }
  return result;
}

unint64_t sub_22D1BAA08()
{
  unint64_t result = qword_268541188;
  if (!qword_268541188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541188);
  }
  return result;
}

unint64_t sub_22D1BAA60()
{
  unint64_t result = qword_268541190;
  if (!qword_268541190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541190);
  }
  return result;
}

unint64_t sub_22D1BAAB8()
{
  unint64_t result = qword_268541198;
  if (!qword_268541198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541198);
  }
  return result;
}

unint64_t sub_22D1BAB10()
{
  unint64_t result = qword_2685411A0;
  if (!qword_2685411A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685411A0);
  }
  return result;
}

uint64_t sub_22D1BAB64()
{
  return sub_22D108E48(&qword_2685411A8, &qword_2685411B0);
}

uint64_t sub_22D1BAB94()
{
  return sub_22D108E48(&qword_2685411B8, &qword_2685411C0);
}

unint64_t sub_22D1BABC8()
{
  unint64_t result = qword_2685411C8;
  if (!qword_2685411C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685411C8);
  }
  return result;
}

unint64_t sub_22D1BAC20()
{
  unint64_t result = qword_2685411D0;
  if (!qword_2685411D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685411D0);
  }
  return result;
}

unint64_t sub_22D1BAC78()
{
  unint64_t result = qword_2685411D8;
  if (!qword_2685411D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685411D8);
  }
  return result;
}

unint64_t sub_22D1BACD0()
{
  unint64_t result = qword_2685411E0;
  if (!qword_2685411E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685411E0);
  }
  return result;
}

unint64_t sub_22D1BAD28()
{
  unint64_t result = qword_2685411E8;
  if (!qword_2685411E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685411E8);
  }
  return result;
}

unint64_t sub_22D1BAD80()
{
  unint64_t result = qword_2685411F0;
  if (!qword_2685411F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685411F0);
  }
  return result;
}

uint64_t sub_22D1BADD4()
{
  return sub_22D108E48(&qword_2685411F8, &qword_268541200);
}

uint64_t sub_22D1BAE04()
{
  return sub_22D108E48(&qword_268541208, &qword_268541210);
}

unint64_t sub_22D1BAE38()
{
  unint64_t result = qword_268541218;
  if (!qword_268541218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541218);
  }
  return result;
}

unint64_t sub_22D1BAE90()
{
  unint64_t result = qword_268541220;
  if (!qword_268541220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541220);
  }
  return result;
}

unint64_t sub_22D1BAEE8()
{
  unint64_t result = qword_268541228;
  if (!qword_268541228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541228);
  }
  return result;
}

uint64_t sub_22D1BAF3C()
{
  return sub_22D108E48(&qword_268541230, &qword_268541238);
}

uint64_t sub_22D1BAF6C()
{
  return sub_22D1B9F34(&qword_268541240, (void (*)(uint64_t))type metadata accessor for PBDateRange);
}

uint64_t sub_22D1BAFB4()
{
  return sub_22D1B9F34(&qword_26853DB58, (void (*)(uint64_t))type metadata accessor for PBDateRange);
}

uint64_t sub_22D1BAFFC()
{
  return sub_22D1B9F34(&qword_268540E00, (void (*)(uint64_t))type metadata accessor for PBDateRange);
}

uint64_t sub_22D1BB044()
{
  return sub_22D1B9F34(&qword_268541248, (void (*)(uint64_t))type metadata accessor for PBDateRange);
}

uint64_t sub_22D1BB08C()
{
  return sub_22D1B9F34(&qword_268541250, (void (*)(uint64_t))type metadata accessor for PBTimeSeries);
}

uint64_t sub_22D1BB0D4()
{
  return sub_22D1B9F34(&qword_26853DBF0, (void (*)(uint64_t))type metadata accessor for PBTimeSeries);
}

uint64_t sub_22D1BB11C()
{
  return sub_22D1B9F34(&qword_268540E08, (void (*)(uint64_t))type metadata accessor for PBTimeSeries);
}

uint64_t sub_22D1BB164()
{
  return sub_22D1B9F34(&qword_268541258, (void (*)(uint64_t))type metadata accessor for PBTimeSeries);
}

uint64_t sub_22D1BB1AC()
{
  return sub_22D1B9F34(&qword_268541260, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
}

uint64_t sub_22D1BB1F4()
{
  return sub_22D1B9F34(&qword_268541268, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
}

uint64_t sub_22D1BB23C()
{
  return sub_22D1B9F34(&qword_268540E18, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
}

uint64_t sub_22D1BB284()
{
  return sub_22D1B9F34(&qword_268541270, (void (*)(uint64_t))type metadata accessor for PBTimeSeries.Value);
}

uint64_t sub_22D1BB2CC()
{
  return sub_22D1B9F34(&qword_268541278, (void (*)(uint64_t))type metadata accessor for PBBucket);
}

uint64_t sub_22D1BB314()
{
  return sub_22D1B9F34(&qword_268540E38, (void (*)(uint64_t))type metadata accessor for PBBucket);
}

uint64_t sub_22D1BB35C()
{
  return sub_22D1B9F34(&qword_268540E20, (void (*)(uint64_t))type metadata accessor for PBBucket);
}

uint64_t sub_22D1BB3A4()
{
  return sub_22D1B9F34(&qword_268541280, (void (*)(uint64_t))type metadata accessor for PBBucket);
}

uint64_t sub_22D1BB3EC()
{
  return sub_22D1B9F34(&qword_268541288, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries);
}

uint64_t sub_22D1BB434()
{
  return sub_22D1B9F34(&qword_26853DB90, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries);
}

uint64_t sub_22D1BB47C()
{
  return sub_22D1B9F34(&qword_268540E30, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries);
}

uint64_t sub_22D1BB4C4()
{
  return sub_22D1B9F34(&qword_268541290, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries);
}

uint64_t sub_22D1BB50C()
{
  return sub_22D1B9F34(&qword_268541298, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value);
}

uint64_t sub_22D1BB554()
{
  return sub_22D1B9F34(&qword_268540E28, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value);
}

uint64_t sub_22D1BB59C()
{
  return sub_22D1B9F34(&qword_268540E40, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value);
}

uint64_t sub_22D1BB5E4()
{
  return sub_22D1B9F34(&qword_2685412A0, (void (*)(uint64_t))type metadata accessor for PBHistogramSeries.Value);
}

uint64_t sub_22D1BB62C()
{
  return sub_22D1B9F34(&qword_2685412A8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries);
}

uint64_t sub_22D1BB674()
{
  return sub_22D1B9F34(&qword_26853DB98, (void (*)(uint64_t))type metadata accessor for PBSleepSeries);
}

uint64_t sub_22D1BB6BC()
{
  return sub_22D1B9F34(&qword_268540E50, (void (*)(uint64_t))type metadata accessor for PBSleepSeries);
}

uint64_t sub_22D1BB704()
{
  return sub_22D1B9F34(&qword_2685412B0, (void (*)(uint64_t))type metadata accessor for PBSleepSeries);
}

uint64_t sub_22D1BB74C()
{
  return sub_22D1B9F34(&qword_2685412B8, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
}

uint64_t sub_22D1BB794()
{
  return sub_22D1B9F34(&qword_268540E48, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
}

uint64_t sub_22D1BB7DC()
{
  return sub_22D1B9F34(&qword_268540E58, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
}

uint64_t sub_22D1BB824()
{
  return sub_22D1B9F34(&qword_2685412C0, (void (*)(uint64_t))type metadata accessor for PBSleepSeries.Value);
}

uint64_t sub_22D1BB86C()
{
  return sub_22D1B9F34(&qword_2685412C8, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
}

uint64_t sub_22D1BB8B4()
{
  return sub_22D1B9F34(&qword_26853DBA0, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
}

uint64_t sub_22D1BB8FC()
{
  return sub_22D1B9F34(&qword_268540E68, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
}

uint64_t sub_22D1BB944()
{
  return sub_22D1B9F34(&qword_2685412D0, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
}

uint64_t sub_22D1BB98C()
{
  return sub_22D1B9F34(&qword_2685412D8, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
}

uint64_t sub_22D1BB9D4()
{
  return sub_22D1B9F34(&qword_268540E60, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
}

uint64_t sub_22D1BBA1C()
{
  return sub_22D1B9F34(&qword_268540E70, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
}

uint64_t sub_22D1BBA64()
{
  return sub_22D1B9F34(&qword_2685412E0, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
}

uint64_t sub_22D1BBAAC()
{
  return sub_22D1B9F34(&qword_2685412E8, (void (*)(uint64_t))type metadata accessor for PBCategorySeries);
}

uint64_t sub_22D1BBAF4()
{
  return sub_22D1B9F34(&qword_26853DBE8, (void (*)(uint64_t))type metadata accessor for PBCategorySeries);
}

uint64_t sub_22D1BBB3C()
{
  return sub_22D1B9F34(&qword_268540E78, (void (*)(uint64_t))type metadata accessor for PBCategorySeries);
}

uint64_t sub_22D1BBB84()
{
  return sub_22D1B9F34(&qword_2685412F0, (void (*)(uint64_t))type metadata accessor for PBCategorySeries);
}

uint64_t sub_22D1BBBCC()
{
  return sub_22D1B9F34(&qword_2685412F8, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
}

uint64_t sub_22D1BBC14()
{
  return sub_22D1B9F34(&qword_268541300, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
}

uint64_t sub_22D1BBC5C()
{
  return sub_22D1B9F34(&qword_268540E80, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
}

uint64_t sub_22D1BBCA4()
{
  return sub_22D1B9F34(&qword_268541308, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Range);
}

uint64_t sub_22D1BBCEC()
{
  return sub_22D1B9F34(&qword_268541310, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_22D1BBD34()
{
  return sub_22D1B9F34(&qword_268541318, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_22D1BBD7C()
{
  return sub_22D1B9F34(&qword_268540E88, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_22D1BBDC4()
{
  return sub_22D1B9F34(&qword_268541320, (void (*)(uint64_t))type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_22D1BBE0C()
{
  return sub_22D1B9F34(&qword_268541328, (void (*)(uint64_t))type metadata accessor for PBCharacteristics);
}

uint64_t sub_22D1BBE54()
{
  return sub_22D1B9F34(&qword_26853DBD8, (void (*)(uint64_t))type metadata accessor for PBCharacteristics);
}

uint64_t sub_22D1BBE9C()
{
  return sub_22D1B9F34(&qword_268540E90, (void (*)(uint64_t))type metadata accessor for PBCharacteristics);
}

uint64_t sub_22D1BBEE4()
{
  return sub_22D1B9F34(&qword_268541330, (void (*)(uint64_t))type metadata accessor for PBCharacteristics);
}

uint64_t sub_22D1BBF2C()
{
  return sub_22D1B9F34(&qword_268541338, (void (*)(uint64_t))type metadata accessor for PBWorkout);
}

uint64_t sub_22D1BBF74()
{
  return sub_22D1B9F34(&qword_26853DBE0, (void (*)(uint64_t))type metadata accessor for PBWorkout);
}

uint64_t sub_22D1BBFBC()
{
  return sub_22D1B9F34(&qword_268540E98, (void (*)(uint64_t))type metadata accessor for PBWorkout);
}

uint64_t sub_22D1BC004()
{
  return sub_22D1B9F34(&qword_268541340, (void (*)(uint64_t))type metadata accessor for PBWorkout);
}

uint64_t sub_22D1BC04C()
{
  return sub_22D1B9F34(&qword_268541348, (void (*)(uint64_t))type metadata accessor for PBAllClinicalRecords);
}

uint64_t sub_22D1BC094()
{
  return sub_22D1B9F34(&qword_26853DBD0, (void (*)(uint64_t))type metadata accessor for PBAllClinicalRecords);
}

uint64_t sub_22D1BC0DC()
{
  return sub_22D1B9F34(&qword_268540EA8, (void (*)(uint64_t))type metadata accessor for PBAllClinicalRecords);
}

uint64_t sub_22D1BC124()
{
  return sub_22D1B9F34(&qword_268541350, (void (*)(uint64_t))type metadata accessor for PBAllClinicalRecords);
}

uint64_t sub_22D1BC16C()
{
  return sub_22D1B9F34(&qword_268541358, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord);
}

uint64_t sub_22D1BC1B4()
{
  return sub_22D1B9F34(&qword_268540EA0, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord);
}

uint64_t sub_22D1BC1FC()
{
  return sub_22D1B9F34(&qword_268540EB0, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord);
}

uint64_t sub_22D1BC244()
{
  return sub_22D1B9F34(&qword_268541360, (void (*)(uint64_t))type metadata accessor for PBClinicalRecord);
}

uint64_t sub_22D1BC28C()
{
  return sub_22D1B9F34(&qword_268541368, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier);
}

uint64_t sub_22D1BC2D4()
{
  return sub_22D1B9F34(&qword_268541370, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier);
}

uint64_t sub_22D1BC31C()
{
  return sub_22D1B9F34(&qword_268540EB8, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier);
}

uint64_t sub_22D1BC364()
{
  return sub_22D1B9F34(&qword_268541378, (void (*)(uint64_t))type metadata accessor for PBFHIRIdentifier);
}

uint64_t sub_22D1BC3AC()
{
  return sub_22D1B9F34(&qword_268541380, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
}

uint64_t sub_22D1BC3F4()
{
  return sub_22D1B9F34(&qword_268541388, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
}

uint64_t sub_22D1BC43C()
{
  return sub_22D1B9F34(&qword_268540EC0, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
}

uint64_t sub_22D1BC484()
{
  return sub_22D1B9F34(&qword_268541390, (void (*)(uint64_t))type metadata accessor for PBHKConcept);
}

uint64_t sub_22D1BC4CC()
{
  return sub_22D1B9F34(&qword_268541398, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
}

uint64_t sub_22D1BC514()
{
  return sub_22D1B9F34(&qword_2685413A0, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
}

uint64_t sub_22D1BC55C()
{
  return sub_22D1B9F34(&qword_268540EC8, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
}

uint64_t sub_22D1BC5A4()
{
  return sub_22D1B9F34(&qword_2685413A8, (void (*)(uint64_t))type metadata accessor for PBHKAllergyRecord);
}

uint64_t sub_22D1BC5EC()
{
  return sub_22D1B9F34(&qword_2685413B0, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction);
}

uint64_t sub_22D1BC634()
{
  return sub_22D1B9F34(&qword_2685413B8, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction);
}

uint64_t sub_22D1BC67C()
{
  return sub_22D1B9F34(&qword_268540ED0, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction);
}

uint64_t sub_22D1BC6C4()
{
  return sub_22D1B9F34(&qword_2685413C0, (void (*)(uint64_t))type metadata accessor for PBHKAllergyReaction);
}

uint64_t sub_22D1BC70C()
{
  return sub_22D1B9F34(&qword_2685413C8, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
}

uint64_t sub_22D1BC754()
{
  return sub_22D1B9F34(&qword_2685413D0, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
}

uint64_t sub_22D1BC79C()
{
  return sub_22D1B9F34(&qword_268540ED8, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
}

uint64_t sub_22D1BC7E4()
{
  return sub_22D1B9F34(&qword_2685413D8, (void (*)(uint64_t))type metadata accessor for PBHKConditionRecord);
}

uint64_t sub_22D1BC82C()
{
  return sub_22D1B9F34(&qword_2685413E0, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
}

uint64_t sub_22D1BC874()
{
  return sub_22D1B9F34(&qword_2685413E8, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
}

uint64_t sub_22D1BC8BC()
{
  return sub_22D1B9F34(&qword_268540EE0, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
}

uint64_t sub_22D1BC904()
{
  return sub_22D1B9F34(&qword_2685413F0, (void (*)(uint64_t))type metadata accessor for PBHKVaccinationRecord);
}

uint64_t sub_22D1BC94C()
{
  return sub_22D1B9F34(&qword_2685413F8, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage);
}

uint64_t sub_22D1BC994()
{
  return sub_22D1B9F34(&qword_268541400, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage);
}

uint64_t sub_22D1BC9DC()
{
  return sub_22D1B9F34(&qword_268540EE8, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage);
}

uint64_t sub_22D1BCA24()
{
  return sub_22D1B9F34(&qword_268541408, (void (*)(uint64_t))type metadata accessor for PBMedicationDosage);
}

uint64_t sub_22D1BCA6C()
{
  return sub_22D1B9F34(&qword_268541410, (void (*)(uint64_t))type metadata accessor for PBQuantity);
}

uint64_t sub_22D1BCAB4()
{
  return sub_22D1B9F34(&qword_268541418, (void (*)(uint64_t))type metadata accessor for PBQuantity);
}

uint64_t sub_22D1BCAFC()
{
  return sub_22D1B9F34(&qword_268540EF0, (void (*)(uint64_t))type metadata accessor for PBQuantity);
}

uint64_t sub_22D1BCB44()
{
  return sub_22D1B9F34(&qword_268541420, (void (*)(uint64_t))type metadata accessor for PBQuantity);
}

uint64_t sub_22D1BCB8C()
{
  return sub_22D1B9F34(&qword_268541428, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
}

uint64_t sub_22D1BCBD4()
{
  return sub_22D1B9F34(&qword_268541430, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
}

uint64_t sub_22D1BCC1C()
{
  return sub_22D1B9F34(&qword_268540EF8, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
}

uint64_t sub_22D1BCC64()
{
  return sub_22D1B9F34(&qword_268541438, (void (*)(uint64_t))type metadata accessor for PBGeneralMedication);
}

uint64_t sub_22D1BCCAC()
{
  return sub_22D1B9F34(&qword_268541440, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
}

uint64_t sub_22D1BCCF4()
{
  return sub_22D1B9F34(&qword_268541448, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
}

uint64_t sub_22D1BCD3C()
{
  return sub_22D1B9F34(&qword_268540F00, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
}

uint64_t sub_22D1BCD84()
{
  return sub_22D1B9F34(&qword_268541450, (void (*)(uint64_t))type metadata accessor for PBHKMedicationRecord);
}

uint64_t sub_22D1BCDCC()
{
  return sub_22D1B9F34(&qword_268541458, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
}

uint64_t sub_22D1BCE14()
{
  return sub_22D1B9F34(&qword_268541460, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
}

uint64_t sub_22D1BCE5C()
{
  return sub_22D1B9F34(&qword_268540F08, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
}

uint64_t sub_22D1BCEA4()
{
  return sub_22D1B9F34(&qword_268541468, (void (*)(uint64_t))type metadata accessor for PBHKMedicationDispenseRecord);
}

uint64_t sub_22D1BCEEC()
{
  return sub_22D1B9F34(&qword_268541470, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
}

uint64_t sub_22D1BCF34()
{
  return sub_22D1B9F34(&qword_268541478, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
}

uint64_t sub_22D1BCF7C()
{
  return sub_22D1B9F34(&qword_268540F10, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
}

uint64_t sub_22D1BCFC4()
{
  return sub_22D1B9F34(&qword_268541480, (void (*)(uint64_t))type metadata accessor for PBHKMedicationOrder);
}

uint64_t sub_22D1BD00C()
{
  return sub_22D1B9F34(&qword_268541488, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
}

uint64_t sub_22D1BD054()
{
  return sub_22D1B9F34(&qword_268541490, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
}

uint64_t sub_22D1BD09C()
{
  return sub_22D1B9F34(&qword_268540F18, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
}

uint64_t sub_22D1BD0E4()
{
  return sub_22D1B9F34(&qword_268541498, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestResult);
}

uint64_t sub_22D1BD12C()
{
  return sub_22D1B9F34(&qword_2685414A0, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
}

uint64_t sub_22D1BD174()
{
  return sub_22D1B9F34(&qword_2685414A8, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
}

uint64_t sub_22D1BD1BC()
{
  return sub_22D1B9F34(&qword_268540F20, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
}

uint64_t sub_22D1BD204()
{
  return sub_22D1B9F34(&qword_2685414B0, (void (*)(uint64_t))type metadata accessor for PBHKReferenceRange);
}

uint64_t sub_22D1BD24C()
{
  return sub_22D1B9F34(&qword_2685414B8, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
}

uint64_t sub_22D1BD294()
{
  return sub_22D1B9F34(&qword_2685414C0, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
}

uint64_t sub_22D1BD2DC()
{
  return sub_22D1B9F34(&qword_268540F28, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
}

uint64_t sub_22D1BD324()
{
  return sub_22D1B9F34(&qword_2685414C8, (void (*)(uint64_t))type metadata accessor for PBHKRatioValue);
}

uint64_t sub_22D1BD36C()
{
  return sub_22D1B9F34(&qword_2685414D0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_22D1BD3B4()
{
  return sub_22D1B9F34(&qword_2685414D8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_22D1BD3FC()
{
  return sub_22D1B9F34(&qword_268540F30, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_22D1BD444()
{
  return sub_22D1B9F34(&qword_2685414E0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValueCollection);
}

uint64_t sub_22D1BD48C()
{
  return sub_22D1B9F34(&qword_2685414E8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D1BD4D4()
{
  return sub_22D1B9F34(&qword_2685414F0, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D1BD51C()
{
  return sub_22D1B9F34(&qword_268540F38, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D1BD564()
{
  return sub_22D1B9F34(&qword_2685414F8, (void (*)(uint64_t))type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D1BD5AC()
{
  return sub_22D1B9F34(&qword_268541500, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue);
}

uint64_t sub_22D1BD5F4()
{
  return sub_22D1B9F34(&qword_268541508, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue);
}

uint64_t sub_22D1BD63C()
{
  return sub_22D1B9F34(&qword_268540F40, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue);
}

uint64_t sub_22D1BD684()
{
  return sub_22D1B9F34(&qword_268541510, (void (*)(uint64_t))type metadata accessor for PBHKCodedValue);
}

uint64_t sub_22D1BD6CC()
{
  return sub_22D1B9F34(&qword_268541518, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
}

uint64_t sub_22D1BD714()
{
  return sub_22D1B9F34(&qword_268541520, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
}

uint64_t sub_22D1BD75C()
{
  return sub_22D1B9F34(&qword_268540F48, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
}

uint64_t sub_22D1BD7A4()
{
  return sub_22D1B9F34(&qword_268541528, (void (*)(uint64_t))type metadata accessor for PBHKCodedQuantity);
}

uint64_t sub_22D1BD7EC()
{
  return sub_22D1B9F34(&qword_268541530, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t sub_22D1BD834()
{
  return sub_22D1B9F34(&qword_268541538, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t sub_22D1BD87C()
{
  return sub_22D1B9F34(&qword_268540F50, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t sub_22D1BD8C4()
{
  return sub_22D1B9F34(&qword_268541540, (void (*)(uint64_t))type metadata accessor for PBHKDiagnosticTestReport);
}

uint64_t sub_22D1BD90C()
{
  return sub_22D1B9F34(&qword_268541548, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
}

uint64_t sub_22D1BD954()
{
  return sub_22D1B9F34(&qword_268541550, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
}

uint64_t sub_22D1BD99C()
{
  return sub_22D1B9F34(&qword_268540F58, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
}

uint64_t sub_22D1BD9E4()
{
  return sub_22D1B9F34(&qword_268541558, (void (*)(uint64_t))type metadata accessor for PBHKAccountOwner);
}

uint64_t sub_22D1BDA2C()
{
  return sub_22D1B9F34(&qword_268541560, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
}

uint64_t sub_22D1BDA74()
{
  return sub_22D1B9F34(&qword_268541568, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
}

uint64_t sub_22D1BDABC()
{
  return sub_22D1B9F34(&qword_268540F60, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
}

uint64_t sub_22D1BDB04()
{
  return sub_22D1B9F34(&qword_268541570, (void (*)(uint64_t))type metadata accessor for PBHKProcedureRecord);
}

uint64_t sub_22D1BDB4C()
{
  return sub_22D1B9F34(&qword_268541578, (void (*)(uint64_t))type metadata accessor for PBCycleTracking);
}

uint64_t sub_22D1BDB94()
{
  return sub_22D1B9F34(&qword_26853DBC0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking);
}

uint64_t sub_22D1BDBDC()
{
  return sub_22D1B9F34(&qword_268540F68, (void (*)(uint64_t))type metadata accessor for PBCycleTracking);
}

uint64_t sub_22D1BDC24()
{
  return sub_22D1B9F34(&qword_268541580, (void (*)(uint64_t))type metadata accessor for PBCycleTracking);
}

uint64_t sub_22D1BDC6C()
{
  return sub_22D1B9F34(&qword_268541588, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
}

uint64_t sub_22D1BDCB4()
{
  return sub_22D1B9F34(&qword_268541590, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
}

uint64_t sub_22D1BDCFC()
{
  return sub_22D1B9F34(&qword_268540F70, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
}

uint64_t sub_22D1BDD44()
{
  return sub_22D1B9F34(&qword_268541598, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Range);
}

uint64_t sub_22D1BDD8C()
{
  return sub_22D1B9F34(&qword_2685415A0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t sub_22D1BDDD4()
{
  return sub_22D1B9F34(&qword_2685415A8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t sub_22D1BDE1C()
{
  return sub_22D1B9F34(&qword_268540F78, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t sub_22D1BDE64()
{
  return sub_22D1B9F34(&qword_2685415B0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.SexualActivity);
}

uint64_t sub_22D1BDEAC()
{
  return sub_22D1B9F34(&qword_2685415B8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event);
}

uint64_t sub_22D1BDEF4()
{
  return sub_22D1B9F34(&qword_268540F88, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event);
}

uint64_t sub_22D1BDF3C()
{
  return sub_22D1B9F34(&qword_268540F80, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event);
}

uint64_t sub_22D1BDF84()
{
  return sub_22D1B9F34(&qword_2685415C0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Event);
}

uint64_t sub_22D1BDFCC()
{
  return sub_22D1B9F34(&qword_2685415C8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle);
}

uint64_t sub_22D1BE014()
{
  return sub_22D1B9F34(&qword_2685415D0, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle);
}

uint64_t sub_22D1BE05C()
{
  return sub_22D1B9F34(&qword_268540F90, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle);
}

uint64_t sub_22D1BE0A4()
{
  return sub_22D1B9F34(&qword_2685415D8, (void (*)(uint64_t))type metadata accessor for PBCycleTracking.Cycle);
}

uint64_t sub_22D1BE0EC()
{
  return sub_22D1B9F34(&qword_2685415E0, (void (*)(uint64_t))type metadata accessor for PBECGs);
}

uint64_t sub_22D1BE134()
{
  return sub_22D1B9F34(&qword_26853DBC8, (void (*)(uint64_t))type metadata accessor for PBECGs);
}

uint64_t sub_22D1BE17C()
{
  return sub_22D1B9F34(&qword_268540F98, (void (*)(uint64_t))type metadata accessor for PBECGs);
}

uint64_t sub_22D1BE1C4()
{
  return sub_22D1B9F34(&qword_2685415E8, (void (*)(uint64_t))type metadata accessor for PBECGs);
}

uint64_t sub_22D1BE20C()
{
  return sub_22D1B9F34(&qword_2685415F0, (void (*)(uint64_t))type metadata accessor for PBECGMeta);
}

uint64_t sub_22D1BE254()
{
  return sub_22D1B9F34(&qword_26853DB50, (void (*)(uint64_t))type metadata accessor for PBECGMeta);
}

uint64_t sub_22D1BE29C()
{
  return sub_22D1B9F34(&qword_268540FA8, (void (*)(uint64_t))type metadata accessor for PBECGMeta);
}

uint64_t sub_22D1BE2E4()
{
  return sub_22D1B9F34(&qword_2685415F8, (void (*)(uint64_t))type metadata accessor for PBECGMeta);
}

uint64_t sub_22D1BE32C()
{
  return sub_22D1B9F34(&qword_268541600, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement);
}

uint64_t sub_22D1BE374()
{
  return sub_22D1B9F34(&qword_26853DBB8, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement);
}

uint64_t sub_22D1BE3BC()
{
  return sub_22D1B9F34(&qword_268540FB0, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement);
}

uint64_t sub_22D1BE404()
{
  return sub_22D1B9F34(&qword_268541608, (void (*)(uint64_t))type metadata accessor for PBECGMeasurement);
}

uint64_t sub_22D1BE44C()
{
  return sub_22D1B9F34(&qword_268541610, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries);
}

uint64_t sub_22D1BE494()
{
  return sub_22D1B9F34(&qword_26853DBB0, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries);
}

uint64_t sub_22D1BE4DC()
{
  return sub_22D1B9F34(&qword_268540FB8, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries);
}

uint64_t sub_22D1BE524()
{
  return sub_22D1B9F34(&qword_268541618, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries);
}

uint64_t sub_22D1BE56C()
{
  return sub_22D1B9F34(&qword_268541620, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_22D1BE5B4()
{
  return sub_22D1B9F34(&qword_268541628, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_22D1BE5FC()
{
  return sub_22D1B9F34(&qword_268540FC0, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_22D1BE644()
{
  return sub_22D1B9F34(&qword_268541630, (void (*)(uint64_t))type metadata accessor for PBActivitySummarySeries.ActivitySummary);
}

uint64_t sub_22D1BE68C()
{
  return sub_22D1B9F34(&qword_268541638, (void (*)(uint64_t))type metadata accessor for PBPatientMeta);
}

uint64_t sub_22D1BE6D4()
{
  return sub_22D1B9F34(&qword_26853DBA8, (void (*)(uint64_t))type metadata accessor for PBPatientMeta);
}

uint64_t sub_22D1BE71C()
{
  return sub_22D1B9F34(&qword_268540FC8, (void (*)(uint64_t))type metadata accessor for PBPatientMeta);
}

uint64_t sub_22D1BE764()
{
  return sub_22D1B9F34(&qword_268541640, (void (*)(uint64_t))type metadata accessor for PBPatientMeta);
}

uint64_t sub_22D1BE7AC()
{
  return sub_22D1B9F34(&qword_268541648, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t sub_22D1BE7F4()
{
  return sub_22D1B9F34(&qword_268541650, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t sub_22D1BE83C()
{
  return sub_22D1B9F34(&qword_268540FD0, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t sub_22D1BE884()
{
  return sub_22D1B9F34(&qword_268541658, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.CHRMeta);
}

uint64_t sub_22D1BE8CC()
{
  return sub_22D1B9F34(&qword_268541660, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_22D1BE914()
{
  return sub_22D1B9F34(&qword_268541668, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_22D1BE95C()
{
  return sub_22D1B9F34(&qword_268540FD8, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_22D1BE9A4()
{
  return sub_22D1B9F34(&qword_268541670, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HeartRateMeds);
}

uint64_t sub_22D1BE9EC()
{
  return sub_22D1B9F34(&qword_268541678, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t sub_22D1BEA34()
{
  return sub_22D1B9F34(&qword_268541680, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t sub_22D1BEA7C()
{
  return sub_22D1B9F34(&qword_268540FE0, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t sub_22D1BEAC4()
{
  return sub_22D1B9F34(&qword_268541688, (void (*)(uint64_t))type metadata accessor for PBPatientMeta.HumanName);
}

uint64_t sub_22D1BEB0C()
{
  return sub_22D1B9F34(&qword_268541690, (void (*)(uint64_t))type metadata accessor for PBActiveMedications);
}

uint64_t sub_22D1BEB54()
{
  return sub_22D1B9F34(&qword_26853DB70, (void (*)(uint64_t))type metadata accessor for PBActiveMedications);
}

uint64_t sub_22D1BEB9C()
{
  return sub_22D1B9F34(&qword_268540FE8, (void (*)(uint64_t))type metadata accessor for PBActiveMedications);
}

uint64_t sub_22D1BEBE4()
{
  return sub_22D1B9F34(&qword_268541698, (void (*)(uint64_t))type metadata accessor for PBActiveMedications);
}

uint64_t sub_22D1BEC2C()
{
  return sub_22D1B9F34(&qword_2685416A0, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D1BEC74()
{
  return sub_22D1B9F34(&qword_268540FF8, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D1BECBC()
{
  return sub_22D1B9F34(&qword_268540FF0, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D1BED04()
{
  return sub_22D1B9F34(&qword_2685416A8, (void (*)(uint64_t))type metadata accessor for PBMedicationTracking);
}

uint64_t sub_22D1BED4C()
{
  return sub_22D1B9F34(&qword_2685416B0, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackings);
}

uint64_t sub_22D1BED94()
{
  return sub_22D1B9F34(&qword_26853DB88, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackings);
}

uint64_t sub_22D1BEDDC()
{
  return sub_22D1B9F34(&qword_268541000, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackings);
}

uint64_t sub_22D1BEE24()
{
  return sub_22D1B9F34(&qword_2685416B8, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackings);
}

uint64_t sub_22D1BEE6C()
{
  return sub_22D1B9F34(&qword_2685416C0, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_22D1BEEB4()
{
  return sub_22D1B9F34(&qword_268541020, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_22D1BEEFC()
{
  return sub_22D1B9F34(&qword_268541018, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_22D1BEF44()
{
  return sub_22D1B9F34(&qword_2685416C8, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_22D1BEF8C()
{
  return sub_22D1B9F34(&qword_2685416D0, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvents);
}

uint64_t sub_22D1BEFD4()
{
  return sub_22D1B9F34(&qword_26853DB80, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvents);
}

uint64_t sub_22D1BF01C()
{
  return sub_22D1B9F34(&qword_268541028, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvents);
}

uint64_t sub_22D1BF064()
{
  return sub_22D1B9F34(&qword_2685416D8, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingDoseEvents);
}

uint64_t sub_22D1BF0AC()
{
  return sub_22D1B9F34(&qword_2685416E0, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D1BF0F4()
{
  return sub_22D1B9F34(&qword_268541040, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D1BF13C()
{
  return sub_22D1B9F34(&qword_268541030, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D1BF184()
{
  return sub_22D1B9F34(&qword_2685416E8, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedule);
}

uint64_t sub_22D1BF1CC()
{
  return sub_22D1B9F34(&qword_2685416F0, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t sub_22D1BF214()
{
  return sub_22D1B9F34(&qword_2685416F8, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t sub_22D1BF25C()
{
  return sub_22D1B9F34(&qword_268541038, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t sub_22D1BF2A4()
{
  return sub_22D1B9F34(&qword_268541700, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange);
}

uint64_t sub_22D1BF2EC()
{
  return sub_22D1B9F34(&qword_268541708, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedules);
}

uint64_t sub_22D1BF334()
{
  return sub_22D1B9F34(&qword_26853DB78, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedules);
}

uint64_t sub_22D1BF37C()
{
  return sub_22D1B9F34(&qword_268541048, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedules);
}

uint64_t sub_22D1BF3C4()
{
  return sub_22D1B9F34(&qword_268541710, (void (*)(uint64_t))type metadata accessor for PBMedicationTrackingSchedules);
}

uint64_t sub_22D1BF40C()
{
  return sub_22D1B9F34(&qword_268541718, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_22D1BF454()
{
  return sub_22D1B9F34(&qword_268541720, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_22D1BF49C()
{
  return sub_22D1B9F34(&qword_268541050, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_22D1BF4E4()
{
  return sub_22D1B9F34(&qword_268541728, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData);
}

uint64_t sub_22D1BF52C()
{
  return sub_22D1B9F34(&qword_268541730, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_22D1BF574()
{
  return sub_22D1B9F34(&qword_268541738, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_22D1BF5BC()
{
  return sub_22D1B9F34(&qword_268541058, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_22D1BF604()
{
  return sub_22D1B9F34(&qword_268541740, (void (*)(uint64_t))type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions);
}

uint64_t sub_22D1BF64C@<X0>(uint64_t a1@<X8>)
{
  return PBTimeSeries.dateRange.getter(a1);
}

uint64_t sub_22D1BF670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBDateRange, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBTimeSeries.dateRange.setter);
}

uint64_t sub_22D1BF6C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource, a2);
}

uint64_t sub_22D1BF6F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBTimeSeries, (void (*)(void))type metadata accessor for PBTimeSeries._StorageClass, sub_22D160258, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t sub_22D1BF754@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit, a2);
}

uint64_t sub_22D1BF788(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBTimeSeries, (void (*)(void))type metadata accessor for PBTimeSeries._StorageClass, sub_22D160258, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
}

uint64_t sub_22D1BF7E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBTimeSeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values, a2);
}

uint64_t sub_22D1BF818(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBTimeSeries, (void (*)(void))type metadata accessor for PBTimeSeries._StorageClass, sub_22D160258, &OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
}

uint64_t sub_22D1BF874@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 128);
  char v3 = *(unsigned char *)(result + 136);
  char v4 = *(unsigned char *)(result + 137);
  if (v4) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = (v4 | v3) & 1;
  return result;
}

uint64_t sub_22D1BF89C(uint64_t result, uint64_t a2)
{
  unsigned __int8 v2 = *(unsigned char *)(result + 8);
  *(void *)(a2 + 128) = *(void *)result;
  *(_WORD *)(a2 + 136) = v2;
  return result;
}

uint64_t sub_22D1BF8B4@<X0>(uint64_t a1@<X8>)
{
  return PBCategorySeries.dateRange.getter(a1);
}

uint64_t sub_22D1BF8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBDateRange, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBCategorySeries.dateRange.setter);
}

uint64_t sub_22D1BF92C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBCategorySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource, a2);
}

uint64_t sub_22D1BF960(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBCategorySeries, (void (*)(void))type metadata accessor for PBCategorySeries._StorageClass, sub_22D165828, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataSource);
}

uint64_t sub_22D1BF9BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBCategorySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events, a2);
}

uint64_t sub_22D1BF9F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBCategorySeries, (void (*)(void))type metadata accessor for PBCategorySeries._StorageClass, sub_22D165828, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
}

uint64_t sub_22D1BFA4C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_184Tm(a1, type metadata accessor for PBCategorySeries.Event, a2);
}

uint64_t sub_22D1BFA68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12E50C(a1, type metadata accessor for PBCategorySeries.Event, a2);
}

uint64_t sub_22D1BFA94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D12E56C(a1, a2, a3, a4, type metadata accessor for PBCategorySeries.Event, (void (*)(void))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_22D1674C4);
}

uint64_t sub_22D1BFAE8@<X0>(uint64_t a1@<X8>)
{
  return PBCategorySeries.Event.recordedTime.getter(a1);
}

uint64_t sub_22D1BFB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBDateRange, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBCategorySeries.Event.recordedTime.setter);
}

uint64_t sub_22D1BFB60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source, a2);
}

uint64_t sub_22D1BFB94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBCategorySeries.Event, (void (*)(void))type metadata accessor for PBCategorySeries.Event._StorageClass, sub_22D1674C4, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t sub_22D1BFBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D1277B4(a1, type metadata accessor for PBCategorySeries.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__additionalData, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, a2);
}

uint64_t sub_22D1BFC44@<X0>(void *a1@<X8>)
{
  return PBCategorySeries.Event.range.getter(a1);
}

uint64_t sub_22D1BFC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBCategorySeries.Range, type metadata accessor for PBCategorySeries.Range, (uint64_t (*)(char *))PBCategorySeries.Event.range.setter);
}

uint64_t sub_22D1BFCBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBCategorySeries.Event.heartRateEventThreshold.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22D1BFCE8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return PBCategorySeries.Event.heartRateEventThreshold.setter(v1, v2);
}

void *sub_22D1BFD28@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_198Tm((void *(*)(uint64_t *__return_ptr))PBCategorySeries.Event.sleepAnalysis.getter, a1);
}

uint64_t sub_22D1BFD40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_199Tm(a1, a2, a3, a4, PBCategorySeries.Event.sleepAnalysis.setter);
}

void *sub_22D1BFD58@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_198Tm((void *(*)(uint64_t *__return_ptr))PBCategorySeries.Event.cycleFactor.getter, a1);
}

uint64_t sub_22D1BFD70(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_199Tm(a1, a2, a3, a4, PBCategorySeries.Event.cycleFactor.setter);
}

void *sub_22D1BFD88@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_198Tm((void *(*)(uint64_t *__return_ptr))PBCategorySeries.Event.steadinessEvent.getter, a1);
}

uint64_t sub_22D1BFDA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_199Tm(a1, a2, a3, a4, PBCategorySeries.Event.steadinessEvent.setter);
}

void *sub_22D1BFDB8@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_198Tm((void *(*)(uint64_t *__return_ptr))PBCategorySeries.Event.steadinessClassification.getter, a1);
}

void *keypath_get_198Tm@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1(&v5);
  char v4 = v6;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_22D1BFE18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_199Tm(a1, a2, a3, a4, PBCategorySeries.Event.steadinessClassification.setter);
}

uint64_t keypath_set_199Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  char v5 = *((unsigned char *)a1 + 8);
  uint64_t v7 = *a1;
  char v8 = v5;
  return a5(&v7);
}

uint64_t sub_22D1BFE74@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_184Tm(a1, type metadata accessor for PBWorkout, a2);
}

uint64_t keypath_get_184Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, _DWORD *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  uint64_t result = swift_beginAccess();
  *a3 = *(_DWORD *)(v4 + 16);
  return result;
}

uint64_t sub_22D1BFEEC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  uint64_t result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 20);
  return result;
}

uint64_t sub_22D1BFF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 32);
  *(void *)a2 = *(void *)(v3 + 24);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_22D1BFFAC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  uint64_t result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_22D1C0008@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBWorkout(0) + 20));
  uint64_t result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 40);
  return result;
}

uint64_t sub_22D1C0064@<X0>(uint64_t a1@<X8>)
{
  return PBWorkout.dateRange.getter(a1);
}

uint64_t sub_22D1C0088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBDateRange, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBWorkout.dateRange.setter);
}

uint64_t sub_22D1C00DC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_218Tm(a1, type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount, a2);
}

uint64_t sub_22D1C00FC(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D12656C(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__totalSwimmingStrokeCount);
}

uint64_t sub_22D1C011C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_218Tm(a1, type metadata accessor for PBWorkout, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate, a2);
}

uint64_t keypath_get_218Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X4>, _DWORD *a4@<X8>)
{
  char v5 = (_DWORD *)(*(void *)(a1 + *(int *)(a2(0) + 20)) + *a3);
  uint64_t result = swift_beginAccess();
  *a4 = *v5;
  return result;
}

uint64_t sub_22D1C01AC(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D12656C(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon9PBWorkoutP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__averageHeartRate);
}

uint64_t sub_22D1C01CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBClinicalRecord, a2);
}

uint64_t sub_22D1C01F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D12A6B4(a1, a2, a3, a4, type metadata accessor for PBClinicalRecord, (void (*)(void))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B90F4);
}

uint64_t sub_22D1C024C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12AA60(a1, type metadata accessor for PBClinicalRecord, a2);
}

uint64_t sub_22D1C0278(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D12AAC0(a1, a2, a3, a4, type metadata accessor for PBClinicalRecord, (void (*)(void))type metadata accessor for PBClinicalRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B90F4);
}

uint64_t sub_22D1C02D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBClinicalRecord.primaryConcept.setter);
}

uint64_t sub_22D1C0324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D1277B4(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecord, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, a2);
}

uint64_t sub_22D1C0378@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.allergyRecord.getter(a1);
}

uint64_t sub_22D1C039C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, type metadata accessor for PBHKAllergyRecord, (uint64_t (*)(char *))PBClinicalRecord.allergyRecord.setter);
}

uint64_t sub_22D1C03F0@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.conditionRecord.getter(a1);
}

uint64_t sub_22D1C0414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, type metadata accessor for PBHKConditionRecord, (uint64_t (*)(char *))PBClinicalRecord.conditionRecord.setter);
}

uint64_t sub_22D1C0468@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.vaccinationRecord.getter(a1);
}

uint64_t sub_22D1C048C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, type metadata accessor for PBHKVaccinationRecord, (uint64_t (*)(char *))PBClinicalRecord.vaccinationRecord.setter);
}

uint64_t sub_22D1C04E0@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.medicationDispenseRecord.getter(a1);
}

uint64_t sub_22D1C0504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationDispenseRecord, type metadata accessor for PBHKMedicationDispenseRecord, (uint64_t (*)(char *))PBClinicalRecord.medicationDispenseRecord.setter);
}

uint64_t sub_22D1C0558@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.medicationOrder.getter(a1);
}

uint64_t sub_22D1C057C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, type metadata accessor for PBHKMedicationOrder, (uint64_t (*)(char *))PBClinicalRecord.medicationOrder.setter);
}

uint64_t sub_22D1C05D0@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.diagnosticTestResult.getter(a1);
}

uint64_t sub_22D1C05F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, type metadata accessor for PBHKDiagnosticTestResult, (uint64_t (*)(char *))PBClinicalRecord.diagnosticTestResult.setter);
}

uint64_t sub_22D1C0648@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.diagnosticTestReport.getter(a1);
}

uint64_t sub_22D1C066C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, type metadata accessor for PBHKDiagnosticTestReport, (uint64_t (*)(char *))PBClinicalRecord.diagnosticTestReport.setter);
}

uint64_t sub_22D1C06C0@<X0>(void *a1@<X8>)
{
  return PBClinicalRecord.accountOwner.getter(a1);
}

uint64_t sub_22D1C06E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKAccountOwner, type metadata accessor for PBHKAccountOwner, (uint64_t (*)(char *))PBClinicalRecord.accountOwner.setter);
}

uint64_t sub_22D1C0738@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.procedureRecord.getter(a1);
}

uint64_t sub_22D1C075C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, type metadata accessor for PBHKProcedureRecord, (uint64_t (*)(char *))PBClinicalRecord.procedureRecord.setter);
}

uint64_t sub_22D1C07B0@<X0>(uint64_t a1@<X8>)
{
  return PBClinicalRecord.medicationRecord.getter(a1);
}

uint64_t sub_22D1C07D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, type metadata accessor for PBHKMedicationRecord, (uint64_t (*)(char *))PBClinicalRecord.medicationRecord.setter);
}

uint64_t sub_22D1C0828@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source, a2);
}

uint64_t sub_22D1C085C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D129AB0(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__source);
}

uint64_t sub_22D1C087C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID, a2);
}

uint64_t sub_22D1C08B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D129AB0(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__gatewayID);
}

uint64_t sub_22D1C08D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName, a2);
}

uint64_t sub_22D1C0904(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D129AB0(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
}

uint64_t sub_22D1C0924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D139A48(a1, type metadata accessor for PBClinicalRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalRecordOriginType, a2);
}

uint64_t sub_22D1C095C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBHKConcept, a2);
}

uint64_t sub_22D1C0988(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D12A6B4(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (void (*)(void))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B8D74);
}

uint64_t sub_22D1C09DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12AA60(a1, type metadata accessor for PBHKConcept, a2);
}

uint64_t sub_22D1C0A08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D12AAC0(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (void (*)(void))type metadata accessor for PBHKConcept._StorageClass, (uint64_t (*)(uint64_t))sub_22D1B8D74);
}

uint64_t sub_22D1C0A5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D145510(a1, type metadata accessor for PBHKConcept, a2);
}

uint64_t sub_22D1C0A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConcept.groupBy.setter);
}

uint64_t sub_22D1C0AE4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_266Tm(a1, type metadata accessor for PBHKConcept, &OBJC_IVAR____TtCV19HealthRecordsDaemon11PBHKConceptP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__isInMemory, a2);
}

uint64_t sub_22D1C0B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKAllergyRecord.allergy.setter);
}

uint64_t sub_22D1C0B60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter, a2);
}

uint64_t sub_22D1C0B94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

uint64_t sub_22D1C0BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKAllergyRecord.criticality.setter);
}

uint64_t sub_22D1C0C48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate, a2);
}

uint64_t sub_22D1C0C7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastOccurrenceDate);
}

uint64_t sub_22D1C0CD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate, a2);
}

uint64_t sub_22D1C0D0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetDate);
}

uint64_t sub_22D1C0D68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions, a2);
}

uint64_t sub_22D1C0D9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reactions);
}

uint64_t sub_22D1C0DF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKAllergyRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate, a2);
}

uint64_t sub_22D1C0E2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKAllergyRecord, (void (*)(void))type metadata accessor for PBHKAllergyRecord._StorageClass, sub_22D174AF8, &OBJC_IVAR____TtCV19HealthRecordsDaemon17PBHKAllergyRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t sub_22D1C0E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKAllergyRecord.status.setter);
}

uint64_t sub_22D1C0EE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D14B52C(a1, type metadata accessor for PBHKAllergyReaction, a2);
}

uint64_t sub_22D1C0F0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D14B58C(a1, a2, a3, a4, type metadata accessor for PBHKAllergyReaction, (void (*)(void))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_22D177070);
}

uint64_t sub_22D1C0F60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12E50C(a1, type metadata accessor for PBHKAllergyReaction, a2);
}

uint64_t sub_22D1C0F8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D12E56C(a1, a2, a3, a4, type metadata accessor for PBHKAllergyReaction, (void (*)(void))type metadata accessor for PBHKAllergyReaction._StorageClass, (uint64_t (*)(uint64_t))sub_22D177070);
}

uint64_t sub_22D1C0FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKAllergyReaction.severity.setter);
}

uint64_t sub_22D1C1038@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBHKConditionRecord, a2);
}

uint64_t sub_22D1C1064(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15BF0C(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D178720);
}

uint64_t sub_22D1C10B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12AA60(a1, type metadata accessor for PBHKConditionRecord, a2);
}

uint64_t sub_22D1C10E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D14517C(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D178720);
}

uint64_t sub_22D1C1144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.category.setter);
}

uint64_t sub_22D1C119C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.clinicalStatus.setter);
}

uint64_t sub_22D1C11F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.condition.setter);
}

uint64_t sub_22D1C1248@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue, a2);
}

uint64_t sub_22D1C127C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D178720, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__onsetStringValue);
}

uint64_t sub_22D1C12D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKConditionRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate, a2);
}

uint64_t sub_22D1C130C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKConditionRecord, (void (*)(void))type metadata accessor for PBHKConditionRecord._StorageClass, (uint64_t (*)(uint64_t))sub_22D178720, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKConditionRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedDate);
}

uint64_t sub_22D1C136C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.severity.setter);
}

uint64_t sub_22D1C13C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKConditionRecord.verificationStatus.setter);
}

uint64_t sub_22D1C1418@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBHKVaccinationRecord, a2);
}

uint64_t sub_22D1C1444(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15BF0C(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54);
}

uint64_t sub_22D1C149C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKVaccinationRecord.bodySite.setter);
}

uint64_t sub_22D1C14F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber, a2);
}

uint64_t sub_22D1C1524(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
}

uint64_t sub_22D1C1580@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity, a2);
}

uint64_t sub_22D1C15B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
}

uint64_t sub_22D1C1610@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate, a2);
}

uint64_t sub_22D1C1644(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
}

uint64_t sub_22D1C16A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_266Tm(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven, a2);
}

uint64_t keypath_get_266Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X4>, unsigned char *a4@<X8>)
{
  char v5 = (unsigned char *)(*(void *)(a1 + *(int *)(a2(0) + 20)) + *a3);
  uint64_t result = swift_beginAccess();
  *a4 = *v5;
  return result;
}

uint64_t sub_22D1C1730(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D134718(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
}

uint64_t sub_22D1C178C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_266Tm(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported, a2);
}

uint64_t sub_22D1C17AC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D134718(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
}

uint64_t sub_22D1C1808@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer, a2);
}

uint64_t sub_22D1C183C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
}

uint64_t sub_22D1C1898@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction, a2);
}

uint64_t sub_22D1C18CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
}

uint64_t sub_22D1C1928@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons, a2);
}

uint64_t sub_22D1C195C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
}

uint64_t sub_22D1C19B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKVaccinationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven, a2);
}

uint64_t sub_22D1C19EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKVaccinationRecord, (void (*)(void))type metadata accessor for PBHKVaccinationRecord._StorageClass, sub_22D17BB54, &OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
}

uint64_t sub_22D1C1A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKVaccinationRecord.route.setter);
}

uint64_t sub_22D1C1AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKVaccinationRecord.status.setter);
}

uint64_t sub_22D1C1AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKVaccinationRecord.vaccination.setter);
}

uint64_t sub_22D1C1B50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBMedicationDosage, a2);
}

uint64_t sub_22D1C1B80@<X0>(uint64_t a1@<X8>)
{
  return PBMedicationDosage.timingPeriod.getter(a1);
}

uint64_t sub_22D1C1BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBDateRange, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBMedicationDosage.timingPeriod.setter);
}

uint64_t sub_22D1C1BF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBGeneralMedication, a2);
}

uint64_t sub_22D1C1C24(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15BF0C(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (void (*)(void))type metadata accessor for PBGeneralMedication._StorageClass, sub_22D18044C);
}

uint64_t sub_22D1C1C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBGeneralMedication.medication.setter);
}

uint64_t sub_22D1C1CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBGeneralMedication.status.setter);
}

uint64_t sub_22D1C1D28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages, a2);
}

uint64_t sub_22D1C1D5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (void (*)(void))type metadata accessor for PBGeneralMedication._StorageClass, sub_22D18044C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dosages);
}

uint64_t sub_22D1C1DB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName, a2);
}

uint64_t sub_22D1C1DEC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (void (*)(void))type metadata accessor for PBGeneralMedication._StorageClass, sub_22D18044C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__localizedPreferredName);
}

uint64_t sub_22D1C1E48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBGeneralMedication, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet, a2);
}

uint64_t sub_22D1C1E7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, (void (*)(void))type metadata accessor for PBGeneralMedication._StorageClass, sub_22D18044C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBGeneralMedicationP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__rxNormCodeSet);
}

uint64_t sub_22D1C1EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, type metadata accessor for PBGeneralMedication, (uint64_t (*)(char *))PBHKMedicationRecord.generalMedication.setter);
}

uint64_t sub_22D1C1F30@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter, a2);
}

uint64_t sub_22D1C1F64(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserter);
}

uint64_t sub_22D1C1FC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate, a2);
}

uint64_t sub_22D1C1FF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__assertionDate);
}

uint64_t sub_22D1C2050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D139A48(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType, a2);
}

uint64_t sub_22D1C2084(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D152614(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__asserterType);
}

uint64_t sub_22D1C20E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate, a2);
}

uint64_t sub_22D1C2114(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t sub_22D1C2170@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate, a2);
}

uint64_t sub_22D1C21A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t sub_22D1C2200@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_266Tm(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken, a2);
}

uint64_t sub_22D1C2220(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D134718(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notTaken);
}

uint64_t sub_22D1C227C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse, a2);
}

uint64_t sub_22D1C22B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonForUse);
}

uint64_t sub_22D1C230C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKMedicationRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken, a2);
}

uint64_t sub_22D1C2340(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationRecord, (void (*)(void))type metadata accessor for PBHKMedicationRecord._StorageClass, sub_22D1823FC, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKMedicationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotTaken);
}

uint64_t sub_22D1C23A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, type metadata accessor for PBGeneralMedication, (uint64_t (*)(char *))PBHKMedicationDispenseRecord.generalMedication.setter);
}

uint64_t sub_22D1C23F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D13B594(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__daySupplyQuantity, a2);
}

uint64_t sub_22D1C2414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBQuantity, type metadata accessor for PBQuantity, (uint64_t (*)(char *))PBHKMedicationDispenseRecord.daySupplyQuantity.setter);
}

uint64_t sub_22D1C2468@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate, a2);
}

uint64_t sub_22D1C249C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(void))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_22D184680, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__handOverDate);
}

uint64_t sub_22D1C24F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationDispenseRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate, a2);
}

uint64_t sub_22D1C252C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationDispenseRecord, (void (*)(void))type metadata accessor for PBHKMedicationDispenseRecord._StorageClass, sub_22D184680, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__preparationDate);
}

uint64_t sub_22D1C2588@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D13B594(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon28PBHKMedicationDispenseRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__quantityDispensed, a2);
}

uint64_t sub_22D1C25A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBQuantity, type metadata accessor for PBQuantity, (uint64_t (*)(char *))PBHKMedicationDispenseRecord.quantityDispensed.setter);
}

uint64_t sub_22D1C2600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBGeneralMedication, type metadata accessor for PBGeneralMedication, (uint64_t (*)(char *))PBHKMedicationOrder.generalMedication.setter);
}

uint64_t sub_22D1C2654@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate, a2);
}

uint64_t sub_22D1C2688(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__endedDate);
}

uint64_t sub_22D1C26E4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_218Tm(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills, a2);
}

uint64_t sub_22D1C2704(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1504E4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__numberOfFills);
}

uint64_t sub_22D1C2760@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber, a2);
}

uint64_t sub_22D1C2794(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__prescriber);
}

uint64_t sub_22D1C27F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason, a2);
}

uint64_t sub_22D1C2824(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reason);
}

uint64_t sub_22D1C2884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKMedicationOrder.reasonEnded.setter);
}

uint64_t sub_22D1C28DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKMedicationOrder.statusReason.setter);
}

uint64_t sub_22D1C2930@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationOrder, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate, a2);
}

uint64_t sub_22D1C2964(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationOrder, (void (*)(void))type metadata accessor for PBHKMedicationOrder._StorageClass, sub_22D186D6C, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKMedicationOrderP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__writtenDate);
}

uint64_t sub_22D1C29C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.bodySite.setter);
}

uint64_t sub_22D1C2A18@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category, a2);
}

uint64_t sub_22D1C2A4C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__category);
}

uint64_t sub_22D1C2AA8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments, a2);
}

uint64_t sub_22D1C2ADC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__comments);
}

uint64_t sub_22D1C2B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.diagnosticTest.setter);
}

uint64_t sub_22D1C2B90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate, a2);
}

uint64_t sub_22D1C2BC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t sub_22D1C2C20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate, a2);
}

uint64_t sub_22D1C2C54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t sub_22D1C2CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.interpretationDeprecated.setter);
}

uint64_t sub_22D1C2D08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate, a2);
}

uint64_t sub_22D1C2D3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t sub_22D1C2D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.method.setter);
}

uint64_t sub_22D1C2DF0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers, a2);
}

uint64_t sub_22D1C2E24(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

uint64_t sub_22D1C2E80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges, a2);
}

uint64_t sub_22D1C2EB4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t sub_22D1C2F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestResult.status.setter);
}

uint64_t sub_22D1C2F68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString, a2);
}

uint64_t sub_22D1C2F9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__likelyDisplayString);
}

uint64_t sub_22D1C2FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(char *))PBHKDiagnosticTestResult.value.setter);
}

uint64_t sub_22D1C3050@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKDiagnosticTestResult, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation, a2);
}

uint64_t sub_22D1C3084(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestResult, (void (*)(void))type metadata accessor for PBHKDiagnosticTestResult._StorageClass, sub_22D189928, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestResultP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__interpretation);
}

uint64_t sub_22D1C30E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBHKReferenceRange, a2);
}

uint64_t sub_22D1C3114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, type metadata accessor for PBHKInspectableValueCollection, (uint64_t (*)(char *))PBHKReferenceRange.valueRange.setter);
}

uint64_t sub_22D1C3168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_432Tm(a1, type metadata accessor for PBHKInspectableValueCollection, a2);
}

uint64_t sub_22D1C3180(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D144ED8(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, (void (*)(void))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_22D18F1A0);
}

uint64_t sub_22D1C31D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(char *))PBHKInspectableValueCollection.value.setter);
}

uint64_t sub_22D1C3230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(char *))PBHKInspectableValueCollection.min.setter);
}

uint64_t sub_22D1C3288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(char *))PBHKInspectableValueCollection.max.setter);
}

uint64_t sub_22D1C32DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues, a2);
}

uint64_t sub_22D1C3310(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, (void (*)(void))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_22D18F1A0, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__inspectableValues);
}

uint64_t sub_22D1C336C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKInspectableValueCollection, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString, a2);
}

uint64_t sub_22D1C33A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValueCollection, (void (*)(void))type metadata accessor for PBHKInspectableValueCollection._StorageClass, sub_22D18F1A0, &OBJC_IVAR____TtCV19HealthRecordsDaemon30PBHKInspectableValueCollectionP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t sub_22D1C33FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_432Tm(a1, type metadata accessor for PBHKInspectableValue, a2);
}

uint64_t keypath_get_432Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  uint64_t result = swift_beginAccess();
  char v6 = *(unsigned char *)(v4 + 24);
  *(void *)a3 = *(void *)(v4 + 16);
  *(unsigned char *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_22D1C3478(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D144ED8(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804);
}

uint64_t sub_22D1C34CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12AA60(a1, type metadata accessor for PBHKInspectableValue, a2);
}

uint64_t sub_22D1C34F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D14517C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804);
}

uint64_t sub_22D1C354C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D145510(a1, type metadata accessor for PBHKInspectableValue, a2);
}

uint64_t sub_22D1C3578(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D154F88(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804);
}

uint64_t sub_22D1C35D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKRatioValue, type metadata accessor for PBHKRatioValue, (uint64_t (*)(char *))PBHKInspectableValue.ratioValue.setter);
}

uint64_t sub_22D1C3624@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString, a2);
}

uint64_t sub_22D1C3658(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalDateString);
}

uint64_t sub_22D1C36B4@<X0>(uint64_t a1@<X8>)
{
  return PBHKInspectableValue.medicalDateIntervalString.getter(a1);
}

uint64_t sub_22D1C36D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBDateRange, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBHKInspectableValue.medicalDateIntervalString.setter);
}

uint64_t sub_22D1C372C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents, a2);
}

uint64_t sub_22D1C3760(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dateFromDateComponents);
}

uint64_t sub_22D1C37BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings, a2);
}

uint64_t sub_22D1C37F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__medicalCodingsDisplayStrings);
}

uint64_t sub_22D1C384C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings, a2);
}

uint64_t sub_22D1C3880(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dataAbsentReasonCodingsDisplayStrings);
}

uint64_t sub_22D1C38DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues, a2);
}

uint64_t sub_22D1C3910(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__codedValueCollectionValues);
}

uint64_t sub_22D1C3970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKInspectableValue.concept.setter);
}

uint64_t sub_22D1C39C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKInspectableValue.dataAbsentReasonConcept.setter);
}

uint64_t sub_22D1C3A1C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKInspectableValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString, a2);
}

uint64_t sub_22D1C3A50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (void (*)(void))type metadata accessor for PBHKInspectableValue._StorageClass, sub_22D191804, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBHKInspectableValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unitString);
}

uint64_t sub_22D1C3AAC@<X0>(uint64_t a1@<X8>)
{
  return PBHKInspectableValue.codedQuantity.getter(a1);
}

uint64_t sub_22D1C3AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKCodedQuantity, type metadata accessor for PBHKCodedQuantity, (uint64_t (*)(char *))PBHKInspectableValue.codedQuantity.setter);
}

uint64_t sub_22D1C3B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKCodedValue.concept.setter);
}

uint64_t sub_22D1C3B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, type metadata accessor for PBHKInspectableValue, (uint64_t (*)(char *))PBHKCodedValue.value.setter);
}

uint64_t sub_22D1C3BD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKCodedValue, &OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges, a2);
}

uint64_t sub_22D1C3C08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKCodedValue, (void (*)(void))type metadata accessor for PBHKCodedValue._StorageClass, sub_22D195800, &OBJC_IVAR____TtCV19HealthRecordsDaemon14PBHKCodedValueP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__referenceRanges);
}

uint64_t sub_22D1C3C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestReport.diagnosticTest.setter);
}

uint64_t sub_22D1C3CBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate, a2);
}

uint64_t sub_22D1C3CF0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveEndDate);
}

uint64_t sub_22D1C3D4C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate, a2);
}

uint64_t sub_22D1C3D80(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__effectiveStartDate);
}

uint64_t sub_22D1C3DDC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate, a2);
}

uint64_t sub_22D1C3E10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__issueDate);
}

uint64_t sub_22D1C3E6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName, a2);
}

uint64_t sub_22D1C3EA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__panelName);
}

uint64_t sub_22D1C3EFC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKDiagnosticTestReport, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results, a2);
}

uint64_t sub_22D1C3F30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKDiagnosticTestReport, (void (*)(void))type metadata accessor for PBHKDiagnosticTestReport._StorageClass, sub_22D197DBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon24PBHKDiagnosticTestReportP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__results);
}

uint64_t sub_22D1C3F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKDiagnosticTestReport.status.setter);
}

uint64_t sub_22D1C3FE4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D14B52C(a1, type metadata accessor for PBHKProcedureRecord, a2);
}

uint64_t sub_22D1C4010(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D14B58C(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588);
}

uint64_t sub_22D1C4068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.category.setter);
}

uint64_t sub_22D1C40BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications, a2);
}

uint64_t sub_22D1C40F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__complications);
}

uint64_t sub_22D1C414C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate, a2);
}

uint64_t sub_22D1C4180(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionEndDate);
}

uint64_t sub_22D1C41DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate, a2);
}

uint64_t sub_22D1C4210(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__executionStartDate);
}

uint64_t sub_22D1C426C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps, a2);
}

uint64_t sub_22D1C42A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__followUps);
}

uint64_t sub_22D1C42FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_266Tm(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed, a2);
}

uint64_t sub_22D1C431C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D134718(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notPerformed);
}

uint64_t sub_22D1C437C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.outcome.setter);
}

uint64_t sub_22D1C43D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers, a2);
}

uint64_t sub_22D1C4404(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performers);
}

uint64_t sub_22D1C4464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.procedure.setter);
}

uint64_t sub_22D1C44BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.reason.setter);
}

uint64_t sub_22D1C4510@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBHKProcedureRecord, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed, a2);
}

uint64_t sub_22D1C4544(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBHKProcedureRecord, (void (*)(void))type metadata accessor for PBHKProcedureRecord._StorageClass, sub_22D19A588, &OBJC_IVAR____TtCV19HealthRecordsDaemon19PBHKProcedureRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotPerformed);
}

uint64_t sub_22D1C45A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKConcept, type metadata accessor for PBHKConcept, (uint64_t (*)(char *))PBHKProcedureRecord.status.setter);
}

uint64_t sub_22D1C45F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D14B52C(a1, type metadata accessor for PBCycleTracking, a2);
}

uint64_t sub_22D1C4624(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D14B58C(a1, a2, a3, a4, type metadata accessor for PBCycleTracking, (void (*)(void))type metadata accessor for PBCycleTracking._StorageClass, sub_22D19DCBC);
}

uint64_t sub_22D1C4678@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBCycleTracking(0) + 20));
  uint64_t result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 24);
  return result;
}

uint64_t sub_22D1C46D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D15096C(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange, a2);
}

uint64_t sub_22D1C46F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Range, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(char *))PBCycleTracking.typicalCycleLengthRange.setter);
}

uint64_t sub_22D1C4748@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_218Tm(a1, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays, a2);
}

uint64_t sub_22D1C4768(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1504E4(a1, a2, a3, a4, type metadata accessor for PBCycleTracking, (void (*)(void))type metadata accessor for PBCycleTracking._StorageClass, sub_22D19DCBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
}

uint64_t sub_22D1C47C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D15096C(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange, a2);
}

uint64_t sub_22D1C47E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Range, type metadata accessor for PBCycleTracking.Range, (uint64_t (*)(char *))PBCycleTracking.typicalPeriodLengthRange.setter);
}

uint64_t sub_22D1C4838@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBCycleTracking, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate, a2);
}

uint64_t sub_22D1C486C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBCycleTracking, (void (*)(void))type metadata accessor for PBCycleTracking._StorageClass, sub_22D19DCBC, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
}

uint64_t sub_22D1C48C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBCycleTracking.Event, a2);
}

uint64_t sub_22D1C48F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15BF0C(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150);
}

uint64_t sub_22D1C4948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 40);
  *(void *)a2 = *(void *)(v3 + 32);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_22D1C49B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.SexualActivity, type metadata accessor for PBCycleTracking.SexualActivity, (uint64_t (*)(char *))PBCycleTracking.Event.sexualActivity.setter);
}

uint64_t sub_22D1C4A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D139A48(a1, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality, a2);
}

uint64_t sub_22D1C4A38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D152614(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cervicalMucusQuality);
}

float sub_22D1C4A94@<S0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = (float *)(*(void *)(a1 + *(int *)(type metadata accessor for PBCycleTracking.Event(0) + 20))
               + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__basalBodyTemperature);
  swift_beginAccess();
  float result = *v3;
  *a2 = *(_DWORD *)v3;
  return result;
}

uint64_t sub_22D1C4AFC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_266Tm(a1, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting, a2);
}

uint64_t sub_22D1C4B1C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D134718(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
}

uint64_t sub_22D1C4B78@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms, a2);
}

uint64_t sub_22D1C4BAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__symptoms);
}

uint64_t sub_22D1C4C08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBCycleTracking.Event, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms, a2);
}

uint64_t sub_22D1C4C3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBCycleTracking.Event, (void (*)(void))type metadata accessor for PBCycleTracking.Event._StorageClass, sub_22D1A1150, &OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
}

uint64_t sub_22D1C4C98@<X0>(uint64_t a1@<X8>)
{
  return PBActivitySummarySeries.dateRange.getter(a1);
}

uint64_t sub_22D1C4CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBDateRange, type metadata accessor for PBDateRange, (uint64_t (*)(char *))PBActivitySummarySeries.dateRange.setter);
}

uint64_t sub_22D1C4D10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D121DF8(a1, type metadata accessor for PBActivitySummarySeries, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries, a2);
}

uint64_t sub_22D1C4D44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D121E6C(a1, a2, a3, a4, type metadata accessor for PBActivitySummarySeries, (void (*)(void))type metadata accessor for PBActivitySummarySeries._StorageClass, sub_22D1A5250, &OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
}

uint64_t sub_22D1C4DA0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBPatientMeta(0) + 20));
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_22D1C4E04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12AA60(a1, type metadata accessor for PBPatientMeta, a2);
}

uint64_t sub_22D1C4E30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D14517C(a1, a2, a3, a4, type metadata accessor for PBPatientMeta, (void (*)(void))type metadata accessor for PBPatientMeta._StorageClass, sub_22D1A7000);
}

uint64_t sub_22D1C4E84@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D145510(a1, type metadata accessor for PBPatientMeta, a2);
}

uint64_t sub_22D1C4EB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D154F88(a1, a2, a3, a4, type metadata accessor for PBPatientMeta, (void (*)(void))type metadata accessor for PBPatientMeta._StorageClass, sub_22D1A7000);
}

uint64_t sub_22D1C4F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBPatientMeta.HeartRateMeds, type metadata accessor for PBPatientMeta.HeartRateMeds, (uint64_t (*)(char *))PBPatientMeta.heartRateMeds.setter);
}

uint64_t sub_22D1C4F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBPatientMeta.HumanName, type metadata accessor for PBPatientMeta.HumanName, (uint64_t (*)(char *))PBPatientMeta.name.setter);
}

uint64_t sub_22D1C4FB4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBPatientMeta, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob, a2);
}

uint64_t sub_22D1C4FE8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBPatientMeta, (void (*)(void))type metadata accessor for PBPatientMeta._StorageClass, sub_22D1A7000, &OBJC_IVAR____TtCV19HealthRecordsDaemon13PBPatientMetaP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dob);
}

uint64_t sub_22D1C5044@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_22D1C5074@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12AA60(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_22D1C50A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D145510(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_22D1C50D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D15C448(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_22D1C5104@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D15C7E0(a1, type metadata accessor for PBMedicationTracking, a2);
}

uint64_t sub_22D1C5134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 104);
  *(void *)a2 = *(void *)(v3 + 96);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_22D1C51E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTracking(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 264);
  *(void *)a2 = *(void *)(v3 + 256);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_22D1C5268@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12A654(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_22D1C5294(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15BF0C(a1, a2, a3, a4, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_22D1AF328);
}

uint64_t sub_22D1C52E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D12AA60(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_22D1C5314(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D14517C(a1, a2, a3, a4, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_22D1AF328);
}

uint64_t sub_22D1C5368@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D145510(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_22D1C5394(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D154F88(a1, a2, a3, a4, type metadata accessor for PBMedicationTrackingSchedule, (void (*)(void))type metadata accessor for PBMedicationTrackingSchedule._StorageClass, sub_22D1AF328);
}

uint64_t sub_22D1C53E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D15C448(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_22D1C5418@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D15C7E0(a1, type metadata accessor for PBMedicationTrackingSchedule, a2);
}

uint64_t sub_22D1C5458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 128);
  *(void *)a2 = *(void *)(v3 + 120);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_22D1C54BC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBMedicationTrackingSchedule(0) + 20));
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 129);
  return result;
}

uint64_t sub_22D1C551C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, (uint64_t (*)(char *))PBMedicationTrackingSchedule.compatibilityVersionRange.setter);
}

uint64_t sub_22D1C5570@<X0>(_DWORD *a1@<X8>)
{
  return PBHKMedicationScheduleIntervalData.daysOfWeek.getter(a1);
}

uint64_t sub_22D1C5594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D15E37C(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, (uint64_t (*)(char *))PBHKMedicationScheduleIntervalData.daysOfWeek.setter);
}

uint64_t sub_22D1C55E8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_218Tm(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex, a2);
}

uint64_t sub_22D1C5608(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1504E4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_22D1B211C, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIndex);
}

uint64_t sub_22D1C5664@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_218Tm(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays, a2);
}

uint64_t sub_22D1C5684(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1504E4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_22D1B211C, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__cycleIntervalDays);
}

uint64_t sub_22D1C56E0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_218Tm(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose, a2);
}

uint64_t sub_22D1C5700(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1504E4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_22D1B211C, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__dose);
}

uint64_t sub_22D1C575C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D120050(a1, type metadata accessor for PBHKMedicationScheduleIntervalData, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime, a2);
}

uint64_t sub_22D1C5790(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1200C4(a1, a2, a3, a4, type metadata accessor for PBHKMedicationScheduleIntervalData, (void (*)(void))type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass, sub_22D1B211C, &OBJC_IVAR____TtCV19HealthRecordsDaemon34PBHKMedicationScheduleIntervalDataP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__startTime);
}

ValueMetadata *type metadata accessor for PBInspectableValueCollectionType()
{
  return &type metadata for PBInspectableValueCollectionType;
}

ValueMetadata *type metadata accessor for PBInspectableValueType()
{
  return &type metadata for PBInspectableValueType;
}

uint64_t getEnumTagSinglePayload for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_66Tm_0);
}

uint64_t storeEnumTagSinglePayload for PBDateRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_67Tm_0);
}

uint64_t sub_22D1C583C()
{
  return sub_22D10CB34();
}

uint64_t getEnumTagSinglePayload for PBTimeSeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_9);
}

uint64_t storeEnumTagSinglePayload for PBTimeSeries(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_9);
}

void *initializeBufferWithCopyOfBuffer for PBTimeSeries.Value(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v5 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v5;
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    uint64_t v6 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v6;
    uint64_t v7 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v7;
    long long v8 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v8;
    uint64_t v9 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v9;
    *(_WORD *)(a1 + 136) = *((_WORD *)a2 + 68);
    uint64_t v10 = *(int *)(a3 + 80);
    uint64_t v11 = (uint64_t)a2 + v10;
    uint64_t v12 = a1 + v10;
    *(void *)(a1 + 128) = a2[16];
    uint64_t v13 = sub_22D2BBFF0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v11, v13);
  }
  return v3;
}

uint64_t destroy for PBTimeSeries.Value(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 80);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  uint64_t v9 = *(int *)(a3 + 80);
  uint64_t v10 = a2 + v9;
  uint64_t v11 = a1 + v9;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v12 = sub_22D2BBFF0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v10, v12);
  return a1;
}

uint64_t assignWithCopy for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 128);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  *(void *)(a1 + 128) = v6;
  uint64_t v7 = *(int *)(a3 + 80);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  uint64_t v6 = *(int *)(a3 + 80);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t assignWithTake for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  uint64_t v10 = *(int *)(a3 + 80);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1C5E84);
}

uint64_t sub_22D1C5E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 80);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBTimeSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1C5F48);
}

uint64_t sub_22D1C5F48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 80);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1C5FF0()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PBTimeSeries.Value.OneOf_AdditionalData()
{
  return &type metadata for PBTimeSeries.Value.OneOf_AdditionalData;
}

void *initializeBufferWithCopyOfBuffer for PBBucket(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_22D2BBFF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBBucket(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_22D2BBFF0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1C6448);
}

uint64_t sub_22D1C6448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PBBucket(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1C64CC);
}

uint64_t sub_22D1C64CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_22D1C6540()
{
  return sub_22D10CB34();
}

uint64_t getEnumTagSinglePayload for PBHistogramSeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_658Tm);
}

uint64_t storeEnumTagSinglePayload for PBHistogramSeries(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_659Tm);
}

uint64_t sub_22D1C6594()
{
  return sub_22D1CDED4();
}

uint64_t getEnumTagSinglePayload for PBHistogramSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_66Tm_1);
}

uint64_t storeEnumTagSinglePayload for PBHistogramSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_67Tm_1);
}

uint64_t sub_22D1C65DC()
{
  return sub_22D10CB34();
}

uint64_t getEnumTagSinglePayload for PBSleepSeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_5);
}

uint64_t storeEnumTagSinglePayload for PBSleepSeries(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_5);
}

void *initializeBufferWithCopyOfBuffer for PBSleepSeries.Value(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_22D2BBFF0();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBSleepSeries.Value(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1C6A30);
}

uint64_t sub_22D1C6A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBSleepSeries.Value(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1C6AF4);
}

uint64_t sub_22D1C6AF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1C6B9C()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PBSleepSummary(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_22D2BBFF0();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for PBSleepSummary(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1C7010);
}

uint64_t __swift_get_extra_inhabitant_index_658Tm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBSleepSummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1C70D8);
}

void *__swift_store_extra_inhabitant_index_659Tm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1C7184()
{
  return sub_22D1CDED4();
}

void *initializeBufferWithCopyOfBuffer for PBSleepSummary.Schedule(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    *(_WORD *)(a1 + 5) = *(_WORD *)((char *)a2 + 5);
    *(void *)(a1 + 8) = a2[1];
    uint64_t v5 = *(int *)(a3 + 52);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_22D2BBFF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 52);
  uint64_t v3 = sub_22D2BBFF0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 52);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v4 = *(int *)(a3 + 52);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 52);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  uint64_t v4 = *(int *)(a3 + 52);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1C7598);
}

uint64_t sub_22D1C7598(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_22D2BBFF0();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 52)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PBSleepSummary.Schedule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1C765C);
}

unsigned char *sub_22D1C765C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 52)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1C7700()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBCategorySeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_10);
}

uint64_t storeEnumTagSinglePayload for PBCategorySeries(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_10);
}

uint64_t getEnumTagSinglePayload for PBCategorySeries.Range(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_679Tm);
}

uint64_t storeEnumTagSinglePayload for PBCategorySeries.Range(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_680Tm);
}

uint64_t sub_22D1C782C()
{
  return sub_22D1CDED4();
}

uint64_t getEnumTagSinglePayload for PBCategorySeries.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_11);
}

uint64_t storeEnumTagSinglePayload for PBCategorySeries.Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_11);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBCategorySeries.Event.OneOf_AdditionalData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_22D2BBFF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for PBCategorySeries.Event.OneOf_AdditionalData(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = a1 + *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
    uint64_t v4 = sub_22D2BBFF0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  return result;
}

void *initializeWithCopy for PBCategorySeries.Event.OneOf_AdditionalData(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22D2BBFF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *assignWithCopy for PBCategorySeries.Event.OneOf_AdditionalData(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22D1B9750((uint64_t)a1, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v7 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_22D2BBFF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for PBCategorySeries.Event.OneOf_AdditionalData(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_22D2BBFF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for PBCategorySeries.Event.OneOf_AdditionalData(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22D1B9750((uint64_t)a1, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for PBCategorySeries.Range(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_22D2BBFF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_22D1C7E4C()
{
  uint64_t result = type metadata accessor for PBCategorySeries.Range(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBCharacteristics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_66Tm_2);
}

uint64_t storeEnumTagSinglePayload for PBCharacteristics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_67Tm_2);
}

uint64_t sub_22D1C7F34()
{
  return sub_22D10CB34();
}

uint64_t getEnumTagSinglePayload for PBWorkout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_12);
}

uint64_t storeEnumTagSinglePayload for PBWorkout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_12);
}

uint64_t getEnumTagSinglePayload for PBAllClinicalRecords(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_6);
}

uint64_t storeEnumTagSinglePayload for PBAllClinicalRecords(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_6);
}

uint64_t getEnumTagSinglePayload for PBClinicalRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_13);
}

uint64_t storeEnumTagSinglePayload for PBClinicalRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_13);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBClinicalRecord.OneOf_MedicalRecord(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = sub_22D2BBFF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = type metadata accessor for PBHKConditionRecord(0);
        *(uint64_t *)((char *)a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
        swift_retain();
        break;
      case 2u:
        uint64_t v11 = sub_22D2BBFF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = type metadata accessor for PBHKVaccinationRecord(0);
        *(uint64_t *)((char *)a1 + *(int *)(v12 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 20));
        swift_retain();
        break;
      case 3u:
        uint64_t v13 = sub_22D2BBFF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for PBHKMedicationDispenseRecord(0);
        *(uint64_t *)((char *)a1 + *(int *)(v14 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 20));
        swift_retain();
        break;
      case 4u:
        uint64_t v15 = sub_22D2BBFF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for PBHKMedicationOrder(0);
        *(uint64_t *)((char *)a1 + *(int *)(v16 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v16 + 20));
        swift_retain();
        break;
      case 5u:
        uint64_t v17 = sub_22D2BBFF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = type metadata accessor for PBHKDiagnosticTestResult(0);
        *(uint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 20));
        swift_retain();
        break;
      case 6u:
        uint64_t v19 = sub_22D2BBFF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        uint64_t v20 = type metadata accessor for PBHKDiagnosticTestReport(0);
        *(uint64_t *)((char *)a1 + *(int *)(v20 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 20));
        swift_retain();
        break;
      case 7u:
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v22 = a2[3];
        a1[2] = a2[2];
        a1[3] = v22;
        uint64_t v23 = *(int *)(type metadata accessor for PBHKAccountOwner(0) + 24);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_22D2BBFF0();
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        break;
      case 8u:
        uint64_t v28 = sub_22D2BBFF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        uint64_t v29 = type metadata accessor for PBHKProcedureRecord(0);
        *(uint64_t *)((char *)a1 + *(int *)(v29 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v29 + 20));
        swift_retain();
        break;
      case 9u:
        uint64_t v30 = sub_22D2BBFF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        uint64_t v31 = type metadata accessor for PBHKMedicationRecord(0);
        *(uint64_t *)((char *)a1 + *(int *)(v31 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v31 + 20));
        swift_retain();
        break;
      default:
        uint64_t v6 = sub_22D2BBFF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for PBHKAllergyRecord(0);
        *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PBClinicalRecord.OneOf_MedicalRecord(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_22D2BBFF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for PBHKAllergyRecord(0);
      goto LABEL_14;
    case 1:
      uint64_t v4 = sub_22D2BBFF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for PBHKConditionRecord(0);
      goto LABEL_14;
    case 2:
      uint64_t v5 = sub_22D2BBFF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      type metadata accessor for PBHKVaccinationRecord(0);
      goto LABEL_14;
    case 3:
      uint64_t v6 = sub_22D2BBFF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      type metadata accessor for PBHKMedicationDispenseRecord(0);
      goto LABEL_14;
    case 4:
      uint64_t v7 = sub_22D2BBFF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      type metadata accessor for PBHKMedicationOrder(0);
      goto LABEL_14;
    case 5:
      uint64_t v8 = sub_22D2BBFF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for PBHKDiagnosticTestResult(0);
      goto LABEL_14;
    case 6:
      uint64_t v9 = sub_22D2BBFF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for PBHKDiagnosticTestReport(0);
      goto LABEL_14;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = a1 + *(int *)(type metadata accessor for PBHKAccountOwner(0) + 24);
      uint64_t v11 = sub_22D2BBFF0();
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      return v12(v10, v11);
    case 8:
      uint64_t v14 = sub_22D2BBFF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      type metadata accessor for PBHKProcedureRecord(0);
      goto LABEL_14;
    case 9:
      uint64_t v13 = sub_22D2BBFF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
      type metadata accessor for PBHKMedicationRecord(0);
LABEL_14:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for PBClinicalRecord.OneOf_MedicalRecord(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_22D2BBFF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for PBHKConditionRecord(0);
      *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
      swift_retain();
      break;
    case 2u:
      uint64_t v8 = sub_22D2BBFF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = type metadata accessor for PBHKVaccinationRecord(0);
      *(void *)((char *)a1 + *(int *)(v9 + 20)) = *(void *)((char *)a2 + *(int *)(v9 + 20));
      swift_retain();
      break;
    case 3u:
      uint64_t v10 = sub_22D2BBFF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = type metadata accessor for PBHKMedicationDispenseRecord(0);
      *(void *)((char *)a1 + *(int *)(v11 + 20)) = *(void *)((char *)a2 + *(int *)(v11 + 20));
      swift_retain();
      break;
    case 4u:
      uint64_t v12 = sub_22D2BBFF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = type metadata accessor for PBHKMedicationOrder(0);
      *(void *)((char *)a1 + *(int *)(v13 + 20)) = *(void *)((char *)a2 + *(int *)(v13 + 20));
      swift_retain();
      break;
    case 5u:
      uint64_t v14 = sub_22D2BBFF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = type metadata accessor for PBHKDiagnosticTestResult(0);
      *(void *)((char *)a1 + *(int *)(v15 + 20)) = *(void *)((char *)a2 + *(int *)(v15 + 20));
      swift_retain();
      break;
    case 6u:
      uint64_t v16 = sub_22D2BBFF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      uint64_t v17 = type metadata accessor for PBHKDiagnosticTestReport(0);
      *(void *)((char *)a1 + *(int *)(v17 + 20)) = *(void *)((char *)a2 + *(int *)(v17 + 20));
      swift_retain();
      break;
    case 7u:
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      uint64_t v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      uint64_t v20 = *(int *)(type metadata accessor for PBHKAccountOwner(0) + 24);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_22D2BBFF0();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      break;
    case 8u:
      uint64_t v25 = sub_22D2BBFF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
      uint64_t v26 = type metadata accessor for PBHKProcedureRecord(0);
      *(void *)((char *)a1 + *(int *)(v26 + 20)) = *(void *)((char *)a2 + *(int *)(v26 + 20));
      swift_retain();
      break;
    case 9u:
      uint64_t v27 = sub_22D2BBFF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
      uint64_t v28 = type metadata accessor for PBHKMedicationRecord(0);
      *(void *)((char *)a1 + *(int *)(v28 + 20)) = *(void *)((char *)a2 + *(int *)(v28 + 20));
      swift_retain();
      break;
    default:
      uint64_t v4 = sub_22D2BBFF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for PBHKAllergyRecord(0);
      *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PBClinicalRecord.OneOf_MedicalRecord(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_22D1B9750((uint64_t)a1, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_22D2BBFF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for PBHKConditionRecord(0);
        *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
        swift_retain();
        break;
      case 2u:
        uint64_t v8 = sub_22D2BBFF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = type metadata accessor for PBHKVaccinationRecord(0);
        *(void *)((char *)a1 + *(int *)(v9 + 20)) = *(void *)((char *)a2 + *(int *)(v9 + 20));
        swift_retain();
        break;
      case 3u:
        uint64_t v10 = sub_22D2BBFF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = type metadata accessor for PBHKMedicationDispenseRecord(0);
        *(void *)((char *)a1 + *(int *)(v11 + 20)) = *(void *)((char *)a2 + *(int *)(v11 + 20));
        swift_retain();
        break;
      case 4u:
        uint64_t v12 = sub_22D2BBFF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = type metadata accessor for PBHKMedicationOrder(0);
        *(void *)((char *)a1 + *(int *)(v13 + 20)) = *(void *)((char *)a2 + *(int *)(v13 + 20));
        swift_retain();
        break;
      case 5u:
        uint64_t v14 = sub_22D2BBFF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = type metadata accessor for PBHKDiagnosticTestResult(0);
        *(void *)((char *)a1 + *(int *)(v15 + 20)) = *(void *)((char *)a2 + *(int *)(v15 + 20));
        swift_retain();
        break;
      case 6u:
        uint64_t v16 = sub_22D2BBFF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = type metadata accessor for PBHKDiagnosticTestReport(0);
        *(void *)((char *)a1 + *(int *)(v17 + 20)) = *(void *)((char *)a2 + *(int *)(v17 + 20));
        swift_retain();
        break;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v18 = *(int *)(type metadata accessor for PBHKAccountOwner(0) + 24);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_22D2BBFF0();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
        break;
      case 8u:
        uint64_t v23 = sub_22D2BBFF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = type metadata accessor for PBHKProcedureRecord(0);
        *(void *)((char *)a1 + *(int *)(v24 + 20)) = *(void *)((char *)a2 + *(int *)(v24 + 20));
        swift_retain();
        break;
      case 9u:
        uint64_t v25 = sub_22D2BBFF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = type metadata accessor for PBHKMedicationRecord(0);
        *(void *)((char *)a1 + *(int *)(v26 + 20)) = *(void *)((char *)a2 + *(int *)(v26 + 20));
        swift_retain();
        break;
      default:
        uint64_t v4 = sub_22D2BBFF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for PBHKAllergyRecord(0);
        *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PBClinicalRecord.OneOf_MedicalRecord(_OWORD *a1, _OWORD *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_22D2BBFF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v5 = type metadata accessor for PBHKConditionRecord(0);
      goto LABEL_12;
    case 2u:
      uint64_t v7 = sub_22D2BBFF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v5 = type metadata accessor for PBHKVaccinationRecord(0);
      goto LABEL_12;
    case 3u:
      uint64_t v8 = sub_22D2BBFF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v5 = type metadata accessor for PBHKMedicationDispenseRecord(0);
      goto LABEL_12;
    case 4u:
      uint64_t v9 = sub_22D2BBFF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v5 = type metadata accessor for PBHKMedicationOrder(0);
      goto LABEL_12;
    case 5u:
      uint64_t v10 = sub_22D2BBFF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v5 = type metadata accessor for PBHKDiagnosticTestResult(0);
      goto LABEL_12;
    case 6u:
      uint64_t v11 = sub_22D2BBFF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v5 = type metadata accessor for PBHKDiagnosticTestReport(0);
      goto LABEL_12;
    case 7u:
      long long v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      uint64_t v13 = *(int *)(type metadata accessor for PBHKAccountOwner(0) + 24);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_22D2BBFF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      goto LABEL_13;
    case 8u:
      uint64_t v17 = sub_22D2BBFF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      uint64_t v5 = type metadata accessor for PBHKProcedureRecord(0);
      goto LABEL_12;
    case 9u:
      uint64_t v18 = sub_22D2BBFF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      uint64_t v5 = type metadata accessor for PBHKMedicationRecord(0);
      goto LABEL_12;
    default:
      uint64_t v4 = sub_22D2BBFF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for PBHKAllergyRecord(0);
LABEL_12:
      *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

_OWORD *assignWithTake for PBClinicalRecord.OneOf_MedicalRecord(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_22D1B9750((uint64_t)a1, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_22D2BBFF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v5 = type metadata accessor for PBHKConditionRecord(0);
        goto LABEL_13;
      case 2u:
        uint64_t v7 = sub_22D2BBFF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v5 = type metadata accessor for PBHKVaccinationRecord(0);
        goto LABEL_13;
      case 3u:
        uint64_t v8 = sub_22D2BBFF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v5 = type metadata accessor for PBHKMedicationDispenseRecord(0);
        goto LABEL_13;
      case 4u:
        uint64_t v9 = sub_22D2BBFF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t v5 = type metadata accessor for PBHKMedicationOrder(0);
        goto LABEL_13;
      case 5u:
        uint64_t v10 = sub_22D2BBFF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v5 = type metadata accessor for PBHKDiagnosticTestResult(0);
        goto LABEL_13;
      case 6u:
        uint64_t v11 = sub_22D2BBFF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v5 = type metadata accessor for PBHKDiagnosticTestReport(0);
        goto LABEL_13;
      case 7u:
        long long v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = *(int *)(type metadata accessor for PBHKAccountOwner(0) + 24);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_22D2BBFF0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        goto LABEL_14;
      case 8u:
        uint64_t v17 = sub_22D2BBFF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v5 = type metadata accessor for PBHKProcedureRecord(0);
        goto LABEL_13;
      case 9u:
        uint64_t v18 = sub_22D2BBFF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        uint64_t v5 = type metadata accessor for PBHKMedicationRecord(0);
        goto LABEL_13;
      default:
        uint64_t v4 = sub_22D2BBFF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for PBHKAllergyRecord(0);
LABEL_13:
        *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t sub_22D1C9918()
{
  uint64_t result = type metadata accessor for PBHKAllergyRecord(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PBHKConditionRecord(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PBHKVaccinationRecord(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for PBHKMedicationDispenseRecord(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for PBHKMedicationOrder(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for PBHKDiagnosticTestResult(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for PBHKDiagnosticTestReport(319);
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for PBHKAccountOwner(319);
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for PBHKProcedureRecord(319);
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for PBHKMedicationRecord(319);
                    if (v10 <= 0x3F)
                    {
                      swift_initEnumMetadataMultiPayload();
                      return 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PBClinicalRecord.MedicalRecordOriginType()
{
  return &type metadata for PBClinicalRecord.MedicalRecordOriginType;
}

uint64_t getEnumTagSinglePayload for PBFHIRIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_705Tm);
}

uint64_t storeEnumTagSinglePayload for PBFHIRIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_706Tm);
}

uint64_t sub_22D1C9C14()
{
  return sub_22D1CDED4();
}

uint64_t getEnumTagSinglePayload for PBHKConcept(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_14);
}

uint64_t storeEnumTagSinglePayload for PBHKConcept(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_14);
}

uint64_t getEnumTagSinglePayload for PBHKAllergyRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_15);
}

uint64_t storeEnumTagSinglePayload for PBHKAllergyRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_15);
}

uint64_t getEnumTagSinglePayload for PBHKAllergyReaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_16);
}

uint64_t storeEnumTagSinglePayload for PBHKAllergyReaction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_16);
}

uint64_t getEnumTagSinglePayload for PBHKConditionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_17);
}

uint64_t storeEnumTagSinglePayload for PBHKConditionRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_17);
}

uint64_t getEnumTagSinglePayload for PBHKVaccinationRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_18);
}

uint64_t storeEnumTagSinglePayload for PBHKVaccinationRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_18);
}

uint64_t getEnumTagSinglePayload for PBMedicationDosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_19);
}

uint64_t storeEnumTagSinglePayload for PBMedicationDosage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_19);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBQuantity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = *(int *)(a3 + 24);
    unint64_t v6 = (char *)a1 + v5;
    unint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_22D2BBFF0();
    unint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBQuantity(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22D2BBFF0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for PBQuantity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *assignWithTake for PBQuantity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CA098);
}

uint64_t sub_22D1CA098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBQuantity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CA15C);
}

uint64_t sub_22D1CA15C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1CA204()
{
  return sub_22D1CDED4();
}

uint64_t getEnumTagSinglePayload for PBGeneralMedication(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_20);
}

uint64_t storeEnumTagSinglePayload for PBGeneralMedication(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_20);
}

uint64_t getEnumTagSinglePayload for PBHKMedicationRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_21);
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_21);
}

ValueMetadata *type metadata accessor for PBHKMedicationRecord.HKClinicalReferencedActorType()
{
  return &type metadata for PBHKMedicationRecord.HKClinicalReferencedActorType;
}

uint64_t getEnumTagSinglePayload for PBHKMedicationDispenseRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_22);
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationDispenseRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_22);
}

uint64_t getEnumTagSinglePayload for PBHKMedicationOrder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_23);
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationOrder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_23);
}

uint64_t getEnumTagSinglePayload for PBHKDiagnosticTestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_24);
}

uint64_t storeEnumTagSinglePayload for PBHKDiagnosticTestResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_24);
}

uint64_t getEnumTagSinglePayload for PBHKReferenceRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_25);
}

uint64_t storeEnumTagSinglePayload for PBHKReferenceRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_25);
}

uint64_t getEnumTagSinglePayload for PBHKRatioValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_705Tm_0);
}

uint64_t storeEnumTagSinglePayload for PBHKRatioValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_706Tm_0);
}

uint64_t getEnumTagSinglePayload for PBHKInspectableValueCollection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_26);
}

uint64_t storeEnumTagSinglePayload for PBHKInspectableValueCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_26);
}

uint64_t getEnumTagSinglePayload for PBHKInspectableValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_27);
}

uint64_t storeEnumTagSinglePayload for PBHKInspectableValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_27);
}

uint64_t getEnumTagSinglePayload for PBHKCodedValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_28);
}

uint64_t storeEnumTagSinglePayload for PBHKCodedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_28);
}

void *initializeBufferWithCopyOfBuffer for PBHKCodedQuantity(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t v9 = a2[10];
    uint64_t v10 = *(int *)(a3 + 40);
    uint64_t v16 = (uint64_t)a2 + v10;
    uint64_t v11 = a1 + v10;
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v9;
    uint64_t v12 = sub_22D2BBFF0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v16, v12);
  }
  return v3;
}

uint64_t destroy for PBHKCodedQuantity(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v14 = a2 + v9;
  uint64_t v10 = a1 + v9;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  uint64_t v11 = sub_22D2BBFF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v14, v11);
  return a1;
}

uint64_t assignWithCopy for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v8 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CA984);
}

uint64_t sub_22D1CA984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBHKCodedQuantity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CAA48);
}

uint64_t sub_22D1CAA48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1CAAF0()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBHKDiagnosticTestReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_29);
}

uint64_t storeEnumTagSinglePayload for PBHKDiagnosticTestReport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_29);
}

uint64_t getEnumTagSinglePayload for PBHKAccountOwner(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_705Tm_1);
}

uint64_t storeEnumTagSinglePayload for PBHKAccountOwner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_706Tm_1);
}

uint64_t getEnumTagSinglePayload for PBHKProcedureRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_30);
}

uint64_t storeEnumTagSinglePayload for PBHKProcedureRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_30);
}

uint64_t getEnumTagSinglePayload for PBCycleTracking(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_31);
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_31);
}

ValueMetadata *type metadata accessor for PBCycleTracking.Flow()
{
  return &type metadata for PBCycleTracking.Flow;
}

ValueMetadata *type metadata accessor for PBCycleTracking.OvulationTestResult()
{
  return &type metadata for PBCycleTracking.OvulationTestResult;
}

ValueMetadata *type metadata accessor for PBCycleTracking.CervicalMucusQuality()
{
  return &type metadata for PBCycleTracking.CervicalMucusQuality;
}

uint64_t getEnumTagSinglePayload for PBCycleTracking.Range(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_679Tm_0);
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking.Range(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_680Tm_0);
}

uint64_t getEnumTagSinglePayload for PBCycleTracking.SexualActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_801Tm);
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking.SexualActivity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_802Tm);
}

uint64_t sub_22D1CAD00()
{
  return sub_22D1CDED4();
}

uint64_t getEnumTagSinglePayload for PBCycleTracking.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_32);
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking.Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_32);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBCycleTracking.Cycle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    a1[4] = a2[4];
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[5] = a2[5];
    uint64_t v10 = sub_22D2BBFF0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for PBCycleTracking.Cycle(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for PBCycleTracking.Cycle(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  a1[5] = a2[5];
  uint64_t v9 = sub_22D2BBFF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for PBCycleTracking.Cycle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBCycleTracking.Cycle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for PBCycleTracking.Cycle(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBCycleTracking.Cycle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CB1E0);
}

uint64_t sub_22D1CB1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBCycleTracking.Cycle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CB2A4);
}

uint64_t sub_22D1CB2A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1CB34C()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBECGs(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_7);
}

uint64_t storeEnumTagSinglePayload for PBECGs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_7);
}

void *initializeBufferWithCopyOfBuffer for PBECGMeta(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t v9 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = a2[11];
    *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v10 = *(int *)(a3 + 52);
    uint64_t v15 = a1 + v10;
    uint64_t v16 = (uint64_t)a2 + v10;
    *(void *)(a1 + 104) = a2[13];
    uint64_t v11 = sub_22D2BBFF0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v15, v16, v11);
  }
  return v3;
}

uint64_t destroy for PBECGMeta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(int *)(a3 + 52);
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v10 = sub_22D2BBFF0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v13, v14, v10);
  return a1;
}

uint64_t assignWithCopy for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  uint64_t v6 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v6;
  uint64_t v7 = *(int *)(a3 + 52);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  uint64_t v4 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v5 = *(int *)(a3 + 52);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(a1 + 104) = v4;
  uint64_t v8 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v11 = *(int *)(a3 + 52);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CBA7C);
}

uint64_t sub_22D1CBA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBECGMeta(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CBB40);
}

uint64_t sub_22D1CBB40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1CBBE8()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PBECGMeasurement(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t v9 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v9;
    uint64_t v10 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v10;
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    uint64_t v11 = *(int *)(a3 + 56);
    uint64_t v16 = a1 + v11;
    uint64_t v17 = (uint64_t)a2 + v11;
    *(void *)(a1 + 112) = a2[14];
    uint64_t v12 = sub_22D2BBFF0();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v16, v17, v12);
  }
  return v3;
}

uint64_t destroy for PBECGMeasurement(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 56);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v10 = *(int *)(a3 + 56);
  uint64_t v14 = a1 + v10;
  uint64_t v15 = a2 + v10;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v11 = sub_22D2BBFF0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v14, v15, v11);
  return a1;
}

uint64_t assignWithCopy for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  uint64_t v6 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v6;
  uint64_t v7 = *(int *)(a3 + 56);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  uint64_t v4 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v5 = *(int *)(a3 + 56);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(a1 + 112) = v4;
  uint64_t v8 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v11 = *(int *)(a3 + 56);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CC348);
}

uint64_t sub_22D1CC348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBECGMeasurement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CC40C);
}

uint64_t sub_22D1CC40C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 56);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1CC4B4()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBActivitySummarySeries(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_33);
}

uint64_t storeEnumTagSinglePayload for PBActivitySummarySeries(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_33);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBActivitySummarySeries.ActivitySummary(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = a2[4];
    a1[3] = a2[3];
    a1[4] = v5;
    uint64_t v6 = *(int *)(a3 + 44);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_22D2BBFF0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CC9CC);
}

uint64_t sub_22D1CC9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBActivitySummarySeries.ActivitySummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CCA90);
}

uint64_t sub_22D1CCA90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1CCB38()
{
  return sub_22D1CE504();
}

uint64_t getEnumTagSinglePayload for PBPatientMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_34);
}

uint64_t storeEnumTagSinglePayload for PBPatientMeta(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_34);
}

uint64_t getEnumTagSinglePayload for PBPatientMeta.CHRMeta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_66Tm_3);
}

uint64_t storeEnumTagSinglePayload for PBPatientMeta.CHRMeta(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_67Tm_3);
}

uint64_t *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_22D2BBFF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_WORD *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwcp_0(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwca_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_WORD *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwtk_0(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *_s19HealthRecordsDaemon15PBCycleTrackingV14SexualActivityVwta_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPatientMeta.HeartRateMeds(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CCE90);
}

uint64_t __swift_get_extra_inhabitant_index_801Tm(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_22D2BBFF0();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PBPatientMeta.HeartRateMeds(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CCF58);
}

unsigned char *__swift_store_extra_inhabitant_index_802Tm(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBPatientMeta.HumanName(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CD014);
}

uint64_t __swift_get_extra_inhabitant_index_705Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBPatientMeta.HumanName(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CD0DC);
}

uint64_t __swift_store_extra_inhabitant_index_706Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBActiveMedications(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_8);
}

uint64_t storeEnumTagSinglePayload for PBActiveMedications(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_8);
}

uint64_t getEnumTagSinglePayload for PBMedicationTracking(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_35);
}

uint64_t storeEnumTagSinglePayload for PBMedicationTracking(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_35);
}

ValueMetadata *type metadata accessor for PBMedicationTracking.MedicationFreeTextForm()
{
  return &type metadata for PBMedicationTracking.MedicationFreeTextForm;
}

ValueMetadata *type metadata accessor for PBMedicationTracking.MedicationFreeTextLoggingUnit()
{
  return &type metadata for PBMedicationTracking.MedicationFreeTextLoggingUnit;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_9);
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackings(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_9);
}

void *initializeBufferWithCopyOfBuffer for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v5 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v5;
    uint64_t v6 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = a2[8];
    uint64_t v7 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v7;
    uint64_t v8 = a2[12];
    uint64_t v9 = *(int *)(a3 + 48);
    uint64_t v10 = (uint64_t)a2 + v9;
    uint64_t v11 = a1 + v9;
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v8;
    uint64_t v12 = sub_22D2BBFF0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v3;
}

uint64_t destroy for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  uint64_t v8 = *(int *)(a3 + 48);
  uint64_t v9 = a2 + v8;
  uint64_t v10 = a1 + v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v11 = sub_22D2BBFF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  return a1;
}

uint64_t assignWithCopy for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 48);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t)a2 + v8;
  uint64_t v11 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v5 = *(int *)(a3 + 48);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v8 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 48);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CD7E0);
}

uint64_t sub_22D1CD7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingDoseEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CD8A4);
}

uint64_t sub_22D1CD8A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1CD94C()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PBMedicationTrackingDoseEvent.LogOrigin()
{
  return &type metadata for PBMedicationTrackingDoseEvent.LogOrigin;
}

ValueMetadata *type metadata accessor for PBMedicationTrackingDoseEvent.Status()
{
  return &type metadata for PBMedicationTrackingDoseEvent.Status;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingDoseEvents(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_10);
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingDoseEvents(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_10);
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingSchedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_36);
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingSchedule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_36);
}

ValueMetadata *type metadata accessor for PBMedicationTrackingSchedule.HKFrequencyType()
{
  return &type metadata for PBMedicationTrackingSchedule.HKFrequencyType;
}

uint64_t *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_22D2BBFF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_22D2BBFF0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwcp_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwca_0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwtk_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *_s19HealthRecordsDaemon16PBCategorySeriesV5RangeVwta_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingScheduleCompatibilityVersionRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CDDD4);
}

uint64_t __swift_get_extra_inhabitant_index_679Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingScheduleCompatibilityVersionRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CDE5C);
}

uint64_t __swift_store_extra_inhabitant_index_680Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_22D1CDED4()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBMedicationTrackingSchedules(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_60Tm_11);
}

uint64_t storeEnumTagSinglePayload for PBMedicationTrackingSchedules(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_61Tm_11);
}

uint64_t getEnumTagSinglePayload for PBHKMedicationScheduleIntervalData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_37);
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationScheduleIntervalData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_37);
}

void *initializeBufferWithCopyOfBuffer for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    *(_WORD *)(a1 + 5) = *(_WORD *)((char *)a2 + 5);
    uint64_t v5 = *(int *)(a3 + 44);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_22D2BBFF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 44);
  uint64_t v3 = sub_22D2BBFF0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_WORD *)(a1 + 5) = *(_WORD *)(a2 + 5);
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithTake for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = &a2[v4];
  uint64_t v6 = &a1[v4];
  a1[6] = a2[6];
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v6, v5, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1CE38C);
}

uint64_t sub_22D1CE38C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_22D2BBFF0();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 44)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1CE450);
}

unsigned char *sub_22D1CE450(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 44)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1CE4F4()
{
  return sub_22D1CE504();
}

uint64_t sub_22D1CE504()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22D1CE5A0()
{
  return type metadata accessor for PBTimeSeries._StorageClass(0);
}

void sub_22D1CE5A8()
{
  sub_22D167880(319, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CE680()
{
  return type metadata accessor for PBCategorySeries._StorageClass(0);
}

void sub_22D1CE688()
{
  sub_22D167880(319, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CE760()
{
  return type metadata accessor for PBCategorySeries.Event._StorageClass(0);
}

void sub_22D1CE768()
{
  sub_22D167880(319, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D167880(319, &qword_26853D7A8, type metadata accessor for PBCategorySeries.Event.OneOf_AdditionalData, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D1CE8A8()
{
  return type metadata accessor for PBWorkout._StorageClass(0);
}

void sub_22D1CE8B0()
{
  sub_22D167880(319, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CE994()
{
  return type metadata accessor for PBClinicalRecord._StorageClass(0);
}

void sub_22D1CE99C()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D167880(319, &qword_26853E1E0, type metadata accessor for PBClinicalRecord.OneOf_MedicalRecord, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D1CEAE0()
{
  return type metadata accessor for PBHKConcept._StorageClass(0);
}

void sub_22D1CEAE8()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CEBC0()
{
  return type metadata accessor for PBHKAllergyRecord._StorageClass(0);
}

void sub_22D1CEBC8()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CECA8()
{
  return type metadata accessor for PBHKAllergyReaction._StorageClass(0);
}

void sub_22D1CECB0()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CED88()
{
  return type metadata accessor for PBHKConditionRecord._StorageClass(0);
}

void sub_22D1CED90()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CEE78()
{
  return type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
}

void sub_22D1CEE80()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CEF78()
{
  return type metadata accessor for PBMedicationDosage._StorageClass(0);
}

void sub_22D1CEF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_22D1CEFA0()
{
  return type metadata accessor for PBGeneralMedication._StorageClass(0);
}

void sub_22D1CEFA8()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CF088()
{
  return type metadata accessor for PBHKMedicationRecord._StorageClass(0);
}

void sub_22D1CF090()
{
  sub_22D167880(319, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CF184()
{
  return type metadata accessor for PBHKMedicationDispenseRecord._StorageClass(0);
}

void sub_22D1CF18C()
{
  sub_22D167880(319, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D167880(319, &qword_268540CC0, type metadata accessor for PBQuantity, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D1CF2C0()
{
  return type metadata accessor for PBHKMedicationOrder._StorageClass(0);
}

void sub_22D1CF2C8()
{
  sub_22D167880(319, &qword_26853F310, type metadata accessor for PBGeneralMedication, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D1CF41C()
{
  return type metadata accessor for PBHKDiagnosticTestResult._StorageClass(0);
}

void sub_22D1CF424()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D167880(319, &qword_26853E880, type metadata accessor for PBHKInspectableValueCollection, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D1CF578()
{
  return type metadata accessor for PBHKReferenceRange._StorageClass(0);
}

void sub_22D1CF580(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_22D1CF5A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  sub_22D167880(319, a4, a5, MEMORY[0x263F8D8F0]);
  if (v5 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CF658()
{
  return type metadata accessor for PBHKInspectableValueCollection._StorageClass(0);
}

void sub_22D1CF660()
{
  sub_22D167880(319, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CF748()
{
  return type metadata accessor for PBHKInspectableValue._StorageClass(0);
}

void sub_22D1CF750()
{
  sub_22D167880(319, &qword_26853E858, type metadata accessor for PBHKRatioValue, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D167880(319, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F)
    {
      sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F)
      {
        sub_22D167880(319, &qword_26853E860, type metadata accessor for PBHKCodedQuantity, MEMORY[0x263F8D8F0]);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_22D1CF980()
{
  return type metadata accessor for PBHKCodedValue._StorageClass(0);
}

void sub_22D1CF988()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D167880(319, &qword_26853E838, type metadata accessor for PBHKInspectableValue, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D1CFABC()
{
  return type metadata accessor for PBHKDiagnosticTestReport._StorageClass(0);
}

void sub_22D1CFAC4()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CFBA4()
{
  return type metadata accessor for PBHKProcedureRecord._StorageClass(0);
}

void sub_22D1CFBAC()
{
  sub_22D167880(319, (unint64_t *)&qword_26853E848, type metadata accessor for PBHKConcept, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CFCA0()
{
  return type metadata accessor for PBCycleTracking._StorageClass(0);
}

void sub_22D1CFCA8()
{
  sub_22D167880(319, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CFD90()
{
  return type metadata accessor for PBCycleTracking.Event._StorageClass(0);
}

void sub_22D1CFD98()
{
  sub_22D167880(319, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CFE90()
{
  return type metadata accessor for PBActivitySummarySeries._StorageClass(0);
}

void sub_22D1CFE98()
{
  sub_22D167880(319, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1CFF64()
{
  return type metadata accessor for PBPatientMeta._StorageClass(0);
}

void sub_22D1CFF6C()
{
  sub_22D167880(319, &qword_268540DE8, type metadata accessor for PBPatientMeta.HeartRateMeds, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D167880(319, &qword_26853E468, type metadata accessor for PBPatientMeta.HumanName, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D1D00B8()
{
  return type metadata accessor for PBMedicationTrackingSchedule._StorageClass(0);
}

void sub_22D1D00C0()
{
  sub_22D167880(319, &qword_26853E4C8, type metadata accessor for PBMedicationTrackingScheduleCompatibilityVersionRange, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D1D01B8()
{
  return type metadata accessor for PBHKMedicationScheduleIntervalData._StorageClass(0);
}

void sub_22D1D01C0()
{
  sub_22D167880(319, &qword_26853E4D8, type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_22D1D029C()
{
  unint64_t result = qword_268541F10;
  if (!qword_268541F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F10);
  }
  return result;
}

unint64_t sub_22D1D02F0()
{
  unint64_t result = qword_268541F18;
  if (!qword_268541F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F18);
  }
  return result;
}

unint64_t sub_22D1D0344()
{
  unint64_t result = qword_268541F20;
  if (!qword_268541F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F20);
  }
  return result;
}

unint64_t sub_22D1D0398()
{
  unint64_t result = qword_268541F28;
  if (!qword_268541F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F28);
  }
  return result;
}

unint64_t sub_22D1D03EC()
{
  unint64_t result = qword_268541F30;
  if (!qword_268541F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F30);
  }
  return result;
}

unint64_t sub_22D1D0440()
{
  unint64_t result = qword_268541F38;
  if (!qword_268541F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F38);
  }
  return result;
}

unint64_t sub_22D1D0494()
{
  unint64_t result = qword_268541F40;
  if (!qword_268541F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F40);
  }
  return result;
}

unint64_t sub_22D1D04E8()
{
  unint64_t result = qword_268541F48;
  if (!qword_268541F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F48);
  }
  return result;
}

unint64_t sub_22D1D053C()
{
  unint64_t result = qword_268541F50;
  if (!qword_268541F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F50);
  }
  return result;
}

unint64_t sub_22D1D0590()
{
  unint64_t result = qword_268541F58;
  if (!qword_268541F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F58);
  }
  return result;
}

uint64_t sub_22D1D05E4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D1D0AB4(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_22D1D0640()
{
  unint64_t result = qword_268541F78;
  if (!qword_268541F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541F78);
  }
  return result;
}

unint64_t sub_22D1D0694()
{
  unint64_t result = qword_268541FF8;
  if (!qword_268541FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268541FF8);
  }
  return result;
}

uint64_t sub_22D1D06E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_22D1D0750()
{
  unint64_t result = qword_268542008;
  if (!qword_268542008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542008);
  }
  return result;
}

unint64_t sub_22D1D07A4()
{
  unint64_t result = qword_268542010;
  if (!qword_268542010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542010);
  }
  return result;
}

unint64_t sub_22D1D07F8()
{
  unint64_t result = qword_268542018;
  if (!qword_268542018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542018);
  }
  return result;
}

unint64_t sub_22D1D084C()
{
  unint64_t result = qword_268542020;
  if (!qword_268542020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542020);
  }
  return result;
}

uint64_t sub_22D1D08A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D167880(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D1D0910(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D167880(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D1D0990(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D1D09EC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_22D1D09EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_22D1D0A4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_22D1D0AB4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_22D167880(255, a3, a4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_22D1D0DC8()
{
  return swift_release_n();
}

uint64_t sub_22D1D0EBC()
{
  sub_22D1D2200(0, (unint64_t *)&qword_26AEC1F88, (uint64_t (*)(uint64_t))sub_22D056BD0, MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_22D2C0F10;
  uint64_t v2 = sub_22D2BCBD0();
  uint64_t v4 = v3;
  uint64_t v5 = (objc_class *)type metadata accessor for DefaultDaemonXPCService();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = (uint64_t *)&v6[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_identifier];
  *uint64_t v7 = v2;
  v7[1] = v4;
  uint64_t v8 = &v6[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_requiredEntitlementOverride];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  id v9 = objc_allocWithZone(MEMORY[0x263F434E0]);
  swift_retain();
  uint64_t v10 = v6;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v9, sel_initWithLabel_, v11);

  *(void *)&v10[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_listener] = v12;
  uint64_t v13 = (id (**)(void *))&v10[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_serverGenerator];
  *uint64_t v13 = sub_22D1D1470;
  v13[1] = v0;
  swift_retain();

  v29.receiver = v10;
  v29.super_class = v5;
  id v14 = objc_msgSendSuper2(&v29, sel_init);
  swift_release();
  *(void *)(v1 + 56) = v5;
  *(void *)(v1 + 64) = &off_26E05CF18;
  *(void *)(v1 + 32) = v14;
  uint64_t v15 = sub_22D2BCBD0();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)objc_allocWithZone(v5);
  uint64_t v19 = (uint64_t *)&v18[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_identifier];
  uint64_t *v19 = v15;
  v19[1] = v17;
  uint64_t v20 = &v18[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_requiredEntitlementOverride];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  id v21 = objc_allocWithZone(MEMORY[0x263F434E0]);
  swift_retain();
  uint64_t v22 = v18;
  swift_bridgeObjectRetain();
  uint64_t v23 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v21, sel_initWithLabel_, v23);

  *(void *)&v22[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_listener] = v24;
  uint64_t v25 = (id (**)(void *))&v22[OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_serverGenerator];
  char *v25 = sub_22D1D1F14;
  v25[1] = v0;
  swift_retain();

  v28.receiver = v22;
  v28.super_class = v5;
  id v26 = objc_msgSendSuper2(&v28, sel_init);
  swift_release();
  *(void *)(v1 + 96) = v5;
  *(void *)(v1 + 104) = &off_26E05CF18;
  *(void *)(v1 + 72) = v26;
  return v1;
}

id sub_22D1D1174(void *a1, uint64_t a2)
{
  uint64_t v15 = type metadata accessor for ClinicalSharingDaemonPlugin();
  uint64_t v16 = &off_26E0621F8;
  v14[0] = a2;
  id v4 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingServer());
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (void *)((char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  uint64_t v9 = *v7;
  id v10 = a1;
  swift_retain();
  id v11 = sub_22D1D20BC(v10, v9, v4);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v11;
}

id sub_22D1D12AC(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 56) + 88);
  id v4 = (objc_class *)type metadata accessor for ClinicalSharingSyncObserverServer();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateCancellable] = 0;
  *(void *)&v5[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_client] = a1;
  id v6 = a1;
  swift_retain();
  uint64_t v7 = v5;
  uint64_t v8 = (_DWORD *)swift_slowAlloc();
  *uint64_t v8 = 0;
  *(void *)&v7[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_lock] = v8;
  *(void *)&v7[OBJC_IVAR____TtC19HealthRecordsDaemon33ClinicalSharingSyncObserverServer_syncStateSubject] = v3;
  swift_retain();

  v11.receiver = v7;
  v11.super_class = v4;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_release();
  return v9;
}

uint64_t sub_22D1D139C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalSharingDaemonPlugin()
{
  return self;
}

uint64_t sub_22D1D1400()
{
  return sub_22D1D0DC8();
}

void sub_22D1D1424()
{
}

uint64_t sub_22D1D144C()
{
  return sub_22D1D0EBC();
}

id sub_22D1D1470(void *a1)
{
  return sub_22D1D1174(a1, v1);
}

uint64_t *sub_22D1D148C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  v15[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v15[4] = &off_26E0619D8;
  uint64_t v5 = swift_allocObject();
  v15[0] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v5 + 96) = *(void *)(a1 + 80);
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v7;
  *((_OWORD *)a2 + 4) = 0u;
  *((_OWORD *)a2 + 5) = 0u;
  *((_OWORD *)a2 + 6) = 0u;
  *((_OWORD *)a2 + 7) = 0u;
  a2[16] = 0;
  uint64_t v8 = (_DWORD *)swift_slowAlloc();
  *uint64_t v8 = 0;
  a2[17] = (uint64_t)v8;
  uint64_t v14 = v4;
  swift_getMetatypeMetadata();
  a2[18] = sub_22D2BCC30();
  a2[19] = v9;
  sub_22CFF4B00((uint64_t)v15, (uint64_t)(a2 + 2));
  id v10 = objc_allocWithZone(MEMORY[0x263F086C0]);
  objc_super v11 = (void *)sub_22D2BCBA0();
  id v12 = objc_msgSend(v10, sel_initWithIdentifier_, v11, v14, v15[0]);

  a2[7] = (uint64_t)v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return a2;
}

uint64_t *sub_22D1D15DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  id v26 = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  uint64_t v27 = &off_26E0619D8;
  uint64_t v5 = swift_allocObject();
  v25[0] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v5 + 96) = *(void *)(a1 + 80);
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v7;
  uint64_t v8 = MEMORY[0x263F8EE88];
  a2[11] = 0;
  a2[12] = v8;
  type metadata accessor for ClinicalSharingDAIState();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = v9
      + OBJC_IVAR____TtC19HealthRecordsDaemonP33_BED11DFC9D090ABA600C4282F599AD2323ClinicalSharingDAIState_startTime;
  uint64_t v11 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  id v12 = (_DWORD *)swift_slowAlloc();
  *id v12 = 0;
  *(void *)(v9 + 16) = v12;
  a2[13] = v9;
  *((_OWORD *)a2 + 7) = 0u;
  *((_OWORD *)a2 + 8) = 0u;
  *((_OWORD *)a2 + 9) = 0u;
  uint64_t v24 = v4;
  swift_getMetatypeMetadata();
  a2[2] = sub_22D2BCC30();
  a2[3] = v13;
  sub_22CFF4B00((uint64_t)v25, (uint64_t)(a2 + 4));
  sub_22D1D23DC();
  id v14 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  id v15 = objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate());
  id v16 = objc_msgSend(v15, sel_init, v24, v25[0]);
  id v17 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v14, v16, 0);

  a2[9] = (uint64_t)v17;
  sub_22D2BCBD0();
  uint64_t v18 = (void *)*__swift_project_boxed_opaque_existential_1(v25, (uint64_t)v26);
  id v19 = objc_allocWithZone(MEMORY[0x263F0A470]);
  id v20 = v18;
  id v21 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v19, sel_initWithCategory_domainName_healthStore_, 3, v21, v20);

  a2[10] = (uint64_t)v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return a2;
}

uint64_t *sub_22D1D1844(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  v45[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v45[4] = &off_26E0619D8;
  uint64_t v5 = swift_allocObject();
  v45[0] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v5 + 96) = *(void *)(a1 + 80);
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v7;
  sub_22D1D237C();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = (_DWORD *)swift_slowAlloc();
  _DWORD *v9 = 0;
  uint64_t v10 = MEMORY[0x263F8EE78];
  v8[2] = v9;
  v8[3] = v10;
  v8[4] = 0;
  a2[12] = (uint64_t)v8;
  *(_OWORD *)(a2 + 13) = 0u;
  *(_OWORD *)(a2 + 15) = 0u;
  a2[17] = 0;
  uint64_t v42 = v4;
  swift_getMetatypeMetadata();
  a2[9] = sub_22D2BCC30();
  a2[10] = v11;
  sub_22CFF4B00((uint64_t)v45, (uint64_t)(a2 + 2));
  sub_22CFF4B00((uint64_t)v45, (uint64_t)&v42);
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v42, v44);
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v39[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  uint64_t v40 = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  uint64_t v41 = &off_26E0619D8;
  uint64_t v16 = swift_allocObject();
  v39[0] = v16;
  long long v17 = *((_OWORD *)v14 + 3);
  *(_OWORD *)(v16 + 48) = *((_OWORD *)v14 + 2);
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 80) = *((_OWORD *)v14 + 4);
  *(void *)(v16 + 96) = *((void *)v14 + 10);
  long long v18 = *((_OWORD *)v14 + 1);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)v14;
  *(_OWORD *)(v16 + 32) = v18;
  type metadata accessor for ClinicalSharingSyncTaskScheduler();
  id v19 = (uint64_t *)swift_allocObject();
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, (uint64_t)&type metadata for ClinicalSharingDefaultDaemonEnvironment);
  id v21 = off_26E0619B0;
  uint64_t size = off_26E0619B0->size;
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (size + 15) & 0xFFFFFFFFFFFFFFF0;
  initializeWithCopy = (void (*)(char *))v21->initializeWithCopy;
  initializeWithCopy((char *)&v39[-1] - v23);
  uint64_t v25 = sub_22D1D148C((uint64_t)&v39[-1] - v23, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  a2[7] = (uint64_t)v25;
  sub_22CFF4B00((uint64_t)v45, (uint64_t)&v42);
  uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v42, v44);
  MEMORY[0x270FA5388](v26);
  objc_super v28 = (char *)&v39[-1] - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v28);
  uint64_t v40 = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  uint64_t v41 = &off_26E0619D8;
  uint64_t v30 = swift_allocObject();
  v39[0] = v30;
  long long v31 = *((_OWORD *)v28 + 3);
  *(_OWORD *)(v30 + 48) = *((_OWORD *)v28 + 2);
  *(_OWORD *)(v30 + 64) = v31;
  *(_OWORD *)(v30 + 80) = *((_OWORD *)v28 + 4);
  *(void *)(v30 + 96) = *((void *)v28 + 10);
  long long v32 = *((_OWORD *)v28 + 1);
  *(_OWORD *)(v30 + 16) = *(_OWORD *)v28;
  *(_OWORD *)(v30 + 32) = v32;
  type metadata accessor for ClinicalSharingDAIManager();
  uint64_t v33 = (uint64_t *)swift_allocObject();
  uint64_t v34 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, (uint64_t)&type metadata for ClinicalSharingDefaultDaemonEnvironment);
  MEMORY[0x270FA5388](v34);
  initializeWithCopy((char *)&v39[-1] - v23);
  uint64_t v35 = sub_22D1D15DC((uint64_t)&v39[-1] - v23, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  a2[8] = (uint64_t)v35;
  uint64_t v42 = 0;
  char v43 = 2;
  sub_22D0DEA08();
  swift_allocObject();
  uint64_t v36 = sub_22D2BC640();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  a2[11] = v36;
  return a2;
}

uint64_t sub_22D1D1CC4(uint64_t a1, uint64_t a2)
{
  void v25[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v25[4] = &off_26E0619D8;
  uint64_t v4 = swift_allocObject();
  v25[0] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v4 + 64) = v5;
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v4 + 96) = *(void *)(a1 + 80);
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v6;
  sub_22CFF4B00((uint64_t)v25, a2 + 16);
  sub_22CFF4B00((uint64_t)v25, (uint64_t)v23);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v22[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
  v22[4] = &off_26E0619D8;
  uint64_t v11 = swift_allocObject();
  v22[0] = v11;
  long long v12 = *((_OWORD *)v9 + 3);
  *(_OWORD *)(v11 + 48) = *((_OWORD *)v9 + 2);
  *(_OWORD *)(v11 + 64) = v12;
  *(_OWORD *)(v11 + 80) = *((_OWORD *)v9 + 4);
  *(void *)(v11 + 96) = *((void *)v9 + 10);
  long long v13 = *((_OWORD *)v9 + 1);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)v9;
  *(_OWORD *)(v11 + 32) = v13;
  type metadata accessor for ClinicalSharingSyncTaskCoordinator();
  id v14 = (uint64_t *)swift_allocObject();
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, (uint64_t)&type metadata for ClinicalSharingDefaultDaemonEnvironment);
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v22[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  id v19 = sub_22D1D1844((uint64_t)v17, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  *(void *)(a2 + 56) = v19;
  return a2;
}

id sub_22D1D1F14(void *a1)
{
  return sub_22D1D12AC(a1, v1);
}

id sub_22D1D1F30()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    sub_22D10D5F8(v0, result, (uint64_t)v9);
    v8[3] = &type metadata for ClinicalSharingDefaultDaemonEnvironment;
    v8[4] = &off_26E0619D8;
    v8[0] = swift_allocObject();
    sub_22D1D22CC((uint64_t)v9, v8[0] + 16);
    type metadata accessor for ClinicalSharingDaemonPlugin();
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, (uint64_t)&type metadata for ClinicalSharingDefaultDaemonEnvironment);
    MEMORY[0x270FA5388](v3);
    long long v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v5);
    uint64_t v7 = sub_22D1D1CC4((uint64_t)v5, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    sub_22D1D2328((uint64_t)v9);
    return (id)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_22D1D20BC(void *a1, uint64_t a2, void *a3)
{
  v12[3] = type metadata accessor for ClinicalSharingDaemonPlugin();
  v12[4] = &off_26E0621F8;
  v12[0] = a2;
  uint64_t v6 = a3;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_22D2BD470()) {
    unint64_t v7 = sub_22D0B37CC(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v7 = MEMORY[0x263F8EE88];
  }
  *(void *)&v6[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_cancellables] = v7;
  *(void *)&v6[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_client] = a1;
  sub_22CFF4B00((uint64_t)v12, (uint64_t)&v6[OBJC_IVAR____TtC19HealthRecordsDaemon21ClinicalSharingServer_contextProvider]);
  id v8 = a1;

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for ClinicalSharingServer();
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v9;
}

uint64_t sub_22D1D21B4()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D1D21EC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  return sub_22D2A2A6C(a1, a2, a3);
}

uint64_t sub_22D1D21F4()
{
  return sub_22D1ED144(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_22D1D2200(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D1D2264()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_22D1D22CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_22D1D2328(uint64_t a1)
{
  return a1;
}

void sub_22D1D237C()
{
  if (!qword_26AEC1898)
  {
    type metadata accessor for ClinicalSharingSyncTask();
    unint64_t v0 = type metadata accessor for SingleValuePublisherTaskQueue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1898);
    }
  }
}

unint64_t sub_22D1D23DC()
{
  unint64_t result = qword_26AEC2FB8;
  if (!qword_26AEC2FB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AEC2FB8);
  }
  return result;
}

uint64_t Sequence.autoreleasingMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  v9[5] = a1;
  v9[6] = a2;
  return sub_22D1D25A0((void (*)(char *, char *))sub_22D1D2D0C, (uint64_t)v9, a3, a4, MEMORY[0x263F8E628], a5, MEMORY[0x263F8E658], a8);
}

uint64_t Sequence.autoreleasingMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a1;
  v10[6] = a2;
  unint64_t v8 = sub_22CFF49FC();
  return sub_22D1D25A0((void (*)(char *, char *))sub_22D1D2D38, (uint64_t)v10, a3, a4, v8, a5, MEMORY[0x263F8E4E0], (uint64_t)&v11);
}

void sub_22D1D2514(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v11 = (void *)MEMORY[0x230F7B690]();
  a2(a1);
  if (v7) {
    *a7 = v7;
  }
}

uint64_t sub_22D1D25A0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  char v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_22D2BD200();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  objc_super v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_22D2BCD70();
  uint64_t v61 = sub_22D2BD410();
  uint64_t v56 = sub_22D2BD420();
  sub_22D2BD3C0();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_22D2BCD60();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_22D2BD210();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_22D2BD400();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_22D2BD210();
  char v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_22D2BD400();
      sub_22D2BD210();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

void sub_22D1D2C9C(uint64_t a1, void (*a2)(uint64_t))
{
  long long v5 = (void *)MEMORY[0x230F7B690]();
  a2(a1);
  if (v2) {
    __break(1u);
  }
}

uint64_t sub_22D1D2D0C(uint64_t a1, uint64_t a2)
{
  return sub_22D1D2D64(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_22D1D2C9C);
}

uint64_t sub_22D1D2D38(uint64_t a1, uint64_t a2)
{
  return sub_22D1D2D64(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_22D1D2514);
}

uint64_t sub_22D1D2D64(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[5], v3[6], v3[2], v3[3], v3[4], a2);
}

uint64_t Sequence.autoreleasingCompactMap<A>(_:)()
{
  return sub_22D2BCD90();
}

{
  return sub_22D2BCD90();
}

void sub_22D1D2DD8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = (void *)MEMORY[0x230F7B690]();
  a2(a1);
}

uint64_t sub_22D1D2E44(uint64_t a1)
{
  return sub_22D1D2EEC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_22D1D2DD8);
}

uint64_t sub_22D1D2EC0(uint64_t a1)
{
  return sub_22D1D2EEC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_22D1D2C9C);
}

uint64_t sub_22D1D2EEC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t SignedClinicalDataFHIROperationGenerator.init(feature:context:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void *SignedClinicalDataFHIROperationGenerator.healthCardsIssueRequests()()
{
  sub_22D1D3C48(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v41 - v3;
  uint64_t v5 = sub_22D2BBC30();
  uint64_t v6 = *(void **)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = v0[1];
  uint64_t v43 = *v0;
  id v13 = objc_msgSend(v12, sel_accountInformation);
  id v14 = objc_msgSend(v13, sel_authorization);

  if (!v14)
  {
    sub_22D1D34B8();
    swift_allocError();
    _OWORD *v26 = xmmword_22D2CF200;
    swift_willThrow();
    return v6;
  }
  uint64_t v42 = v1;
  id v15 = objc_msgSend(v14, sel_patientID);

  uint64_t v16 = sub_22D2BCBD0();
  uint64_t v18 = v17;

  sub_22D1D3C48(0, &qword_268542070, (uint64_t (*)(uint64_t))sub_22D1D350C, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22D2BFF40;
  *(unsigned char *)(inited + 32) = 7;
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v16;
  *(void *)(inited + 48) = v18;
  unint64_t v20 = sub_22D0D3A74(inited);
  objc_msgSend(v12, sel_queryMode);
  if ((HKFHIRResourceQueryModeIncludesFullMode() & 1) == 0)
  {
    id v21 = objc_msgSend(v12, sel_lastFetchDate);
    if (v21)
    {
      uint64_t v22 = v21;
      sub_22D2BBC00();

      unint64_t v23 = (void (*)(char *, char *, uint64_t))v6[4];
      v23(v4, v9, v5);
      ((void (*)(char *, void, uint64_t, uint64_t))v6[7])(v4, 0, 1, v5);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v6[6])(v4, 1, v5) != 1)
      {
        v23(v11, v4, v5);
        uint64_t v48 = v5;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v46);
        ((void (*)(uint64_t *, char *, uint64_t))v6[2])(boxed_opaque_existential_1, v11, v5);
        sub_22D056B08(&v46, v45);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v44 = v20;
        sub_22D0541B0(v45, 5, isUniquelyReferenced_nonNull_native);
        unint64_t v20 = v44;
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v6[1])(v11, v5);
        goto LABEL_9;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v6[7])(v4, 1, 1, v5);
    }
    sub_22D1D3BD8((uint64_t)v4, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
LABEL_9:
  uint64_t v28 = v42;
  uint64_t v27 = v43;
  swift_bridgeObjectRetain();
  id v29 = objc_msgSend(v27, sel_interactions);
  sub_22D1D3578();
  unint64_t v30 = sub_22D2BCE00();

  uint64_t v31 = v28;
  unint64_t v32 = sub_22D1D3904(v30, 0xD000000000000013, 0x800000022D2D6B50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_22D1D3710(v32, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (!v31
    && (id v34 = objc_msgSend(v12, sel_accountInformation),
        id v35 = objc_msgSend(v34, sel_authorization),
        v34,
        v35)
    && (HKFHIRCredential.asAuthorizationHeader()(), v35, (uint64_t v36 = *((void *)&v46 + 1)) != 0))
  {
    uint64_t v37 = v46;
    uint64_t v38 = v47;
    uint64_t v39 = v48;
    sub_22D0CCD98(v46, *((uint64_t *)&v46 + 1));
    uint64_t v40 = sub_22D1D35B8((uint64_t)v6, v37, v36, v38, v39);
    sub_22D0B82BC(v37, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22D0B82BC(v37, v36);
    return (void *)v40;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_22D1D34B8()
{
  unint64_t result = qword_268542068;
  if (!qword_268542068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542068);
  }
  return result;
}

void sub_22D1D350C()
{
  if (!qword_26853F2F8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26853F2F8);
    }
  }
}

unint64_t sub_22D1D3578()
{
  unint64_t result = qword_26853F328;
  if (!qword_26853F328)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26853F328);
  }
  return result;
}

uint64_t sub_22D1D35B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_22D24BF3C(0, v5, 0);
    uint64_t v6 = v23;
    uint64_t v11 = a1 + 32;
    do
    {
      sub_22CFF4B00(v11, (uint64_t)&v20);
      v19[0] = a2;
      v19[1] = a3;
      v19[2] = a4;
      v19[3] = a5;
      uint64_t v12 = v21;
      uint64_t v13 = v22;
      v24.value._object = (void *)__swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v20, (uint64_t)v21);
      v24.name._countAndFlagsBits = (uint64_t)v19;
      v24.name._object = v12;
      v24.value._countAndFlagsBits = v13;
      WebRequest.add(header:)(v24);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22D24BF3C(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v23;
      }
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_22D24BF3C(v15 > 1, v16 + 1, 1);
        uint64_t v6 = v23;
      }
      *(void *)(v6 + 16) = v16 + 1;
      sub_22CFF8C10(&v20, v6 + 40 * v16 + 32);
      v11 += 40;
      --v5;
    }
    while (v5);
  }
  return v6;
}

void *sub_22D1D3710(unint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_22D2BD470())
  {
    int64_t v5 = (void *)MEMORY[0x263F8EE78];
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F7AF90](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      HKClinicalGatewayEndpointSchema.asWebRequest(substitutions:)(v16, (uint64_t *)&v13);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      if (v14)
      {
        sub_22CFF8C10(&v13, (uint64_t)v15);
        sub_22CFF8C10(v15, (uint64_t)&v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v5 = sub_22D281BD8(0, v5[2] + 1, 1, v5);
        }
        unint64_t v11 = v5[2];
        unint64_t v10 = v5[3];
        if (v11 >= v10 >> 1) {
          int64_t v5 = sub_22D281BD8((void *)(v10 > 1), v11 + 1, 1, v5);
        }
        v5[2] = v11 + 1;
        sub_22CFF8C10(&v13, (uint64_t)&v5[5 * v11 + 4]);
      }
      else
      {
        sub_22D1D3BD8((uint64_t)&v13, (unint64_t *)&qword_268542078, (uint64_t (*)(uint64_t))sub_22D1D3CAC);
      }
      if (v9 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

uint64_t sub_22D1D3904(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x230F7AF90](v6, a1);
LABEL_9:
        uint64_t v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_21;
        }
        uint64_t v10 = v5;
        id v11 = objc_msgSend(v7, sel_name);
        uint64_t v12 = sub_22D2BCBD0();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          sub_22D2BD3A0();
          sub_22D2BD3E0();
          sub_22D2BD3F0();
          sub_22D2BD3B0();
          goto LABEL_5;
        }
        char v16 = sub_22D2BD660();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_17;
        }

LABEL_5:
        ++v6;
        uint64_t v5 = v10;
        if (v9 == v10) {
          return v19;
        }
      }
      if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      uint64_t v5 = sub_22D2BD470();
      if (!v5) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

void *initializeBufferWithCopyOfBuffer for SignedClinicalDataFHIROperationGenerator(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for SignedClinicalDataFHIROperationGenerator(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for SignedClinicalDataFHIROperationGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for SignedClinicalDataFHIROperationGenerator(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for SignedClinicalDataFHIROperationGenerator()
{
  return &type metadata for SignedClinicalDataFHIROperationGenerator;
}

uint64_t sub_22D1D3BD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D1D3C48(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_22D1D3C48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22D1D3CAC()
{
  unint64_t result = qword_268542080;
  if (!qword_268542080)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, &qword_268542080);
  }
  return result;
}

uint64_t sub_22D1D3D08(uint64_t a1, int a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    a1 = *(void *)(a1 + 32);
    return MEMORY[0x270FA2408](a1);
  }
  if (!a3)
  {
    __break(1u);
    return MEMORY[0x270FA2408](a1);
  }
  sub_22CFF49FC();
  uint64_t v5 = swift_allocError();
  *id v6 = a3;
  id v7 = a3;
  return MEMORY[0x270FA2410](v3, v5);
}

uint64_t sub_22D1D3DA4()
{
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F28);
  uint64_t result = sub_22D2BD180();
  qword_268568468 = result;
  return result;
}

id sub_22D1D3DEC(void *a1, void *a2)
{
  id result = sub_22D1D94D4();
  id v7 = result;
  if (!v3)
  {
    id v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
    type metadata accessor for WebRequestPerformer();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 24) = MEMORY[0x263F8EE88];
    id v10 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v7, v8, 0);

    *(void *)(v9 + 16) = v10;
    id v11 = *(void **)(v2 + 40);
    v14[0] = v9;
    v14[1] = v11;
    v14[2] = a2;
    type metadata accessor for ClinicalDocumentDownloadTask();
    swift_allocObject();
    id v12 = v11;
    id v13 = a2;
    return (id)sub_22D086F04((uint64_t)a1, (uint64_t)v14);
  }
  return result;
}

void *sub_22D1D3EF8(uint64_t a1, uint64_t a2)
{
  swift_getMetatypeMetadata();
  v2[2] = sub_22D2BCC30();
  v2[3] = v5;
  v2[4] = a1;
  v2[5] = a2;
  return v2;
}

uint64_t sub_22D1D3F74(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 232) = a2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v2;
  uint64_t v4 = sub_22D2BBC90();
  *(void *)(v3 + 152) = v4;
  *(void *)(v3 + 160) = *(void *)(v4 - 8);
  *(void *)(v3 + 168) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22D1D4038, 0, 0);
}

uint64_t sub_22D1D4038()
{
  unint64_t v1 = v0[17];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_22D2BD470()) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = swift_task_alloc();
      v0[23] = v3;
      long long v4 = *(_OWORD *)(v0 + 17);
      v0[22] = v4;
      *(_OWORD *)(v3 + 16) = v4;
      uint64_t v5 = (void *)swift_task_alloc();
      v0[24] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_22D1D419C;
      return MEMORY[0x270FA22B8]();
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_22D1D419C()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_22D1D45D4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_22D1D42B8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D1D42B8()
{
  if (*(unsigned char *)(v0 + 232) != 1)
  {
    sub_22D030474(0, (unint64_t *)&qword_26AEC1F28);
    id v1 = (id)sub_22D2BD180();
    goto LABEL_5;
  }
  if (qword_26853D2D0 != -1) {
    goto LABEL_22;
  }
  while (1)
  {
    id v1 = (id)qword_268568468;
LABEL_5:
    id v2 = v1;
    *(void *)(v0 + 208) = v1;
    unint64_t v3 = *(void *)(v0 + 176);
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_22D2BD470();
      swift_bridgeObjectRelease();
      if (!v4)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v4) {
        goto LABEL_17;
      }
    }
    *(void *)(v0 + 120) = MEMORY[0x263F8EE78];
    sub_22D24B7A4(0, v4 & ~(v4 >> 63), 0);
    if ((v4 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_22:
    swift_once();
  }
  id v20 = v2;
  uint64_t v5 = 0;
  uint64_t v6 = *(void *)(v0 + 120);
  unint64_t v7 = v3 & 0xC000000000000001;
  uint64_t v21 = *(void *)(v0 + 176) + 32;
  do
  {
    if (v7) {
      id v8 = (id)MEMORY[0x230F7AF90](v5, *(void *)(v0 + 176));
    }
    else {
      id v8 = *(id *)(v21 + 8 * v5);
    }
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_identifier);
    sub_22D2BBC70();

    *(void *)(v0 + 120) = v6;
    unint64_t v12 = *(void *)(v6 + 16);
    unint64_t v11 = *(void *)(v6 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_22D24B7A4(v11 > 1, v12 + 1, 1);
      uint64_t v6 = *(void *)(v0 + 120);
    }
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 168);
    uint64_t v15 = *(void *)(v0 + 152);
    ++v5;
    *(void *)(v6 + 16) = v12 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v6+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v12, v13, v15);
  }
  while (v4 != v5);
  swift_bridgeObjectRelease();
  id v2 = v20;
LABEL_18:
  char v16 = *(void **)(*(void *)(v0 + 144) + 32);
  uint64_t v17 = sub_22D2BCDF0();
  *(void *)(v0 + 216) = v17;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 128;
  *(void *)(v0 + 24) = sub_22D1D4648;
  uint64_t v18 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_22D1D4960;
  *(void *)(v0 + 104) = &block_descriptor_21;
  *(void *)(v0 + 112) = v18;
  objc_msgSend(v16, sel_notifyDownloadingCompleteAndRequestMoreWithIdentifiers_requestBatchSize_completion_, v17, v2, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_22D1D45D4()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22D1D4648()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 224) = v1;
  if (v1) {
    id v2 = sub_22D1D48E0;
  }
  else {
    id v2 = sub_22D1D4758;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D1D4758()
{
  uint64_t v1 = *(void **)(v0 + 216);

  unint64_t v2 = *(void *)(v0 + 128);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    *(void *)(v0 + 176) = v2;
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 184) = v4;
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_22D1D419C;
    return MEMORY[0x270FA22B8]();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_22D1D48E0()
{
  uint64_t v1 = (void *)v0[27];
  unint64_t v2 = (void *)v0[26];
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_22D1D4960(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_22CFF49FC();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    sub_22D030474(0, (unint64_t *)&qword_26853F238);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_22D2BCE00();
    return MEMORY[0x270FA2408](v3);
  }
}

uint64_t sub_22D1D4A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[32] = a3;
  v4[33] = a4;
  v4[31] = a2;
  v4[34] = type metadata accessor for HTTPError();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D1D8C30(0, (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  uint64_t v6 = sub_22D2BBC90();
  v4[44] = v6;
  v4[45] = *(void *)(v6 - 8);
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  sub_22D1D8C94();
  v4[48] = v7;
  v4[49] = *(void *)(v7 - 8);
  v4[50] = swift_task_alloc();
  sub_22D1D8C30(0, &qword_26AEC22D8, MEMORY[0x263F07508], v5);
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22D1D4CB0, 0, 0);
}

uint64_t sub_22D1D4CB0()
{
  unint64_t v1 = *(void *)(v0 + 256);
  if (v1 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_22D2BD470();
    *(void *)(v0 + 424) = v47;
    if (v47) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 456) = sub_22CFF49FC();
    sub_22D2BCEE0();
    uint64_t v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v48;
    *uint64_t v48 = v0;
    v48[1] = sub_22D1D5E40;
    uint64_t v49 = *(void *)(v0 + 384);
    return MEMORY[0x270FA2058](v0 + 496, 0, 0, v49, v0 + 208);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  *(void *)(v0 + 424) = v2;
  if (!v2) {
    goto LABEL_31;
  }
LABEL_3:
  uint64_t v3 = 0;
  for (uint64_t i = MEMORY[0x263F8EE80]; ; uint64_t i = MEMORY[0x263F8EE80])
  {
    *(void *)(v0 + 432) = i;
    uint64_t v5 = *(void *)(v0 + 256);
    if ((v5 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x230F7AF90](v3);
    }
    else {
      id v6 = *(id *)(v5 + 8 * v3 + 32);
    }
    *(void *)(v0 + 440) = v6;
    *(void *)(v0 + 448) = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    id v7 = objc_msgSend(v6, sel_accountIdentifier);
    if (v7)
    {
      id v8 = v7;
      sub_22D2BBC70();

      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = 1;
    }
    uint64_t v10 = *(void *)(v0 + 408);
    uint64_t v11 = *(void *)(v0 + 416);
    uint64_t v13 = *(void *)(v0 + 352);
    uint64_t v12 = *(void *)(v0 + 360);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, v9, 1, v13);
    sub_22D1D8E18(v11, v10, &qword_26AEC22D8, MEMORY[0x263F07508]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v13) == 1) {
      break;
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 360) + 32))(*(void *)(v0 + 376), *(void *)(v0 + 408), *(void *)(v0 + 352));
    if (!*(void *)(i + 16) || (unint64_t v14 = sub_22D04EA20(*(void *)(v0 + 376)), (v15 & 1) == 0))
    {
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 464) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_22D1D5400;
      uint64_t v41 = *(void *)(v0 + 376);
      return sub_22D1F19B4(v41);
    }
    uint64_t v16 = *(void *)(v0 + 376);
    uint64_t v17 = *(void *)(v0 + 352);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 360) + 8);
    id v19 = *(id *)(*(void *)(i + 56) + 8 * v14);
    v18(v16, v17);
    id v20 = *(void **)(v0 + 440);
    uint64_t v22 = *(void *)(v0 + 336);
    uint64_t v21 = *(void *)(v0 + 344);
    uint64_t v23 = *(void *)(v0 + 264);
    sub_22D1D8E98(*(void *)(v0 + 416), &qword_26AEC22D8, MEMORY[0x263F07508]);
    uint64_t v24 = sub_22D2BCED0();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v21, 1, 1, v24);
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = 0;
    uint64_t v27 = v26 + 2;
    v26[3] = 0;
    v26[4] = v23;
    v26[5] = v20;
    v26[6] = v19;
    sub_22D1D8E18(v21, v22, (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520]);
    LODWORD(v21) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24);
    swift_retain();
    id v28 = v20;
    id v29 = v19;
    uint64_t v30 = *(void *)(v0 + 336);
    if (v21 == 1)
    {
      sub_22D1D8E98(*(void *)(v0 + 336), (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520]);
      if (*v27) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_22D2BCEC0();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v30, v24);
      if (*v27)
      {
LABEL_16:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v31 = sub_22D2BCE80();
        uint64_t v33 = v32;
        swift_unknownObjectRelease();
        goto LABEL_19;
      }
    }
    uint64_t v31 = 0;
    uint64_t v33 = 0;
LABEL_19:
    uint64_t v34 = **(void **)(v0 + 248);
    uint64_t v35 = v33 | v31;
    if (v33 | v31)
    {
      uint64_t v35 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v31;
      *(void *)(v0 + 40) = v33;
    }
    uint64_t v37 = *(void **)(v0 + 440);
    uint64_t v36 = *(void *)(v0 + 448);
    uint64_t v38 = *(void *)(v0 + 424);
    uint64_t v39 = *(void *)(v0 + 344);
    *(void *)(v0 + 144) = 1;
    *(void *)(v0 + 152) = v35;
    *(void *)(v0 + 160) = v34;
    swift_task_create();

    swift_release();
    sub_22D1D8E98(v39, (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520]);
    if (v36 == v38) {
      goto LABEL_31;
    }
    uint64_t v3 = *(void *)(v0 + 448);
  }
  uint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  sub_22D1D8E98(*(void *)(v0 + 408), &qword_26AEC22D8, MEMORY[0x263F07508]);
  sub_22D0B8164();
  swift_allocError();
  *unint64_t v44 = 0;
  swift_willThrow();
  uint64_t v45 = *(void **)(v0 + 440);
  sub_22D1D8E98(*(void *)(v0 + 416), &qword_26AEC22D8, v43);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

uint64_t sub_22D1D5400(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 472) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_22D1D5CB8;
  }
  else
  {
    *(void *)(v4 + 480) = a1;
    uint64_t v5 = sub_22D1D5528;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_22D1D5528()
{
  uint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v6 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  id v7 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_22D0542EC((uint64_t)v7, v4, isUniquelyReferenced_nonNull_native);
  uint64_t v58 = v2;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  v9(v3, v5);
  id v10 = *(id *)(v0 + 480);
  while (1)
  {
    uint64_t v11 = *(void **)(v0 + 440);
    uint64_t v13 = *(void *)(v0 + 336);
    uint64_t v12 = *(void *)(v0 + 344);
    uint64_t v14 = *(void *)(v0 + 264);
    sub_22D1D8E98(*(void *)(v0 + 416), &qword_26AEC22D8, MEMORY[0x263F07508]);
    uint64_t v15 = sub_22D2BCED0();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = 0;
    uint64_t v18 = v17 + 2;
    v17[3] = 0;
    v17[4] = v14;
    v17[5] = v11;
    v17[6] = v10;
    sub_22D1D8E18(v12, v13, (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520]);
    LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15);
    swift_retain();
    id v19 = v11;
    id v20 = v10;
    uint64_t v21 = *(void *)(v0 + 336);
    if (v12 == 1)
    {
      sub_22D1D8E98(*(void *)(v0 + 336), (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520]);
      if (*v18) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_22D2BCEC0();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v15);
      if (*v18)
      {
LABEL_4:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v22 = sub_22D2BCE80();
        uint64_t v24 = v23;
        swift_unknownObjectRelease();
        goto LABEL_7;
      }
    }
    uint64_t v22 = 0;
    uint64_t v24 = 0;
LABEL_7:
    uint64_t v25 = **(void **)(v0 + 248);
    uint64_t v26 = v24 | v22;
    if (v24 | v22)
    {
      uint64_t v26 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v22;
      *(void *)(v0 + 40) = v24;
    }
    id v28 = *(void **)(v0 + 440);
    uint64_t v27 = *(void *)(v0 + 448);
    uint64_t v29 = *(void *)(v0 + 424);
    uint64_t v30 = *(void *)(v0 + 344);
    *(void *)(v0 + 144) = 1;
    *(void *)(v0 + 152) = v26;
    *(void *)(v0 + 160) = v25;
    swift_task_create();

    swift_release();
    sub_22D1D8E98(v30, (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520]);
    if (v27 == v29)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 456) = sub_22CFF49FC();
      sub_22D2BCEE0();
      uint64_t v53 = (void *)swift_task_alloc();
      *(void *)(v0 + 488) = v53;
      *uint64_t v53 = v0;
      v53[1] = sub_22D1D5E40;
      uint64_t v36 = *(void *)(v0 + 384);
      id v33 = (id)(v0 + 496);
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v37 = v0 + 208;
      return MEMORY[0x270FA2058](v33, v34, v35, v36, v37);
    }
    uint64_t v31 = *(void *)(v0 + 448);
    *(void *)(v0 + 432) = v58;
    uint64_t v32 = *(void *)(v0 + 256);
    if ((v32 & 0xC000000000000001) != 0) {
      id v33 = (id)MEMORY[0x230F7AF90](v31);
    }
    else {
      id v33 = *(id *)(v32 + 8 * v31 + 32);
    }
    *(void *)(v0 + 440) = v33;
    *(void *)(v0 + 448) = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      return MEMORY[0x270FA2058](v33, v34, v35, v36, v37);
    }
    id v38 = objc_msgSend(v33, sel_accountIdentifier);
    if (v38)
    {
      uint64_t v39 = v38;
      sub_22D2BBC70();

      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
    }
    uint64_t v41 = *(void *)(v0 + 408);
    uint64_t v42 = *(void *)(v0 + 416);
    uint64_t v44 = *(void *)(v0 + 352);
    uint64_t v43 = *(void *)(v0 + 360);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v42, v40, 1, v44);
    sub_22D1D8E18(v42, v41, &qword_26AEC22D8, MEMORY[0x263F07508]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v44) == 1) {
      break;
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 360) + 32))(*(void *)(v0 + 376), *(void *)(v0 + 408), *(void *)(v0 + 352));
    if (!*(void *)(v58 + 16) || (unint64_t v45 = sub_22D04EA20(*(void *)(v0 + 376)), (v46 & 1) == 0))
    {
      uint64_t v50 = (void *)swift_task_alloc();
      *(void *)(v0 + 464) = v50;
      *uint64_t v50 = v0;
      v50[1] = sub_22D1D5400;
      uint64_t v51 = *(void *)(v0 + 376);
      return sub_22D1F19B4(v51);
    }
    uint64_t v47 = *(void *)(v0 + 376);
    uint64_t v48 = *(void *)(v0 + 352);
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 360) + 8);
    id v10 = *(id *)(*(void *)(v58 + 56) + 8 * v45);
    v49(v47, v48);
  }
  uint64_t v54 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  sub_22D1D8E98(*(void *)(v0 + 408), &qword_26AEC22D8, MEMORY[0x263F07508]);
  sub_22D0B8164();
  swift_allocError();
  *char v55 = 0;
  swift_willThrow();
  uint64_t v56 = *(void **)(v0 + 440);
  sub_22D1D8E98(*(void *)(v0 + 416), &qword_26AEC22D8, v54);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v57 = *(uint64_t (**)(void))(v0 + 8);
  return v57();
}

uint64_t sub_22D1D5CB8()
{
  (*(void (**)(void, void))(v0[45] + 8))(v0[47], v0[44]);
  uint64_t v1 = (void *)v0[55];
  sub_22D1D8E98(v0[52], &qword_26AEC22D8, MEMORY[0x263F07508]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_22D1D5E40()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_22D1D6120;
  }
  else {
    uint64_t v1 = sub_22D1D5F50;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_22D1D5F50()
{
  if (*(unsigned char *)(v0 + 496))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 392) + 8))(*(void *)(v0 + 400), *(void *)(v0 + 384));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_22D1D5E40;
    uint64_t v4 = *(void *)(v0 + 384);
    return MEMORY[0x270FA2058](v0 + 496, 0, 0, v4, v0 + 208);
  }
}

uint64_t sub_22D1D6120()
{
  uint64_t v76 = v0;
  (*(void (**)(void, void))(v0[49] + 8))(v0[50], v0[48]);
  uint64_t v1 = (void *)v0[26];
  v0[23] = v1;
  uint64_t v2 = (id *)(v0 + 23);
  id v3 = v1;
  if (swift_dynamicCast())
  {
    uint64_t v5 = v0[40];
    uint64_t v4 = v0[41];
    uint64_t v6 = v0[35];

    sub_22D1D8F08(v6, v4);
    sub_22D1D8F6C(v4, v5);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    id v8 = (uint64_t *)v0[40];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = *v8;
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v10 = v0[41];
      uint64_t v11 = v0[38];
      uint64_t v12 = sub_22D2BC390();
      __swift_project_value_buffer(v12, (uint64_t)qword_26AEC3C90);
      sub_22D1D8F6C(v10, v11);
      swift_retain_n();
      uint64_t v13 = sub_22D2BC380();
      os_log_type_t v14 = sub_22D2BD060();
      BOOL v15 = os_log_type_enabled(v13, v14);
      uint64_t v16 = v0[41];
      uint64_t v17 = v0[38];
      if (v15)
      {
        uint64_t v65 = v0[37];
        uint64_t v67 = v0[36];
        uint64_t v18 = v0[33];
        uint64_t v19 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        uint64_t v75 = v70;
        *(_DWORD *)uint64_t v19 = 136315650;
        uint64_t v63 = v17;
        uint64_t v20 = v9;
        uint64_t v71 = v16;
        uint64_t v22 = *(void *)(v18 + 16);
        unint64_t v21 = *(void *)(v18 + 24);
        swift_bridgeObjectRetain();
        v0[28] = sub_22D0A4D24(v22, v21, &v75);
        sub_22D2BD220();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v19 + 12) = 2048;
        v0[29] = v20;
        sub_22D2BD220();
        *(_WORD *)(v19 + 22) = 2080;
        sub_22D1D8F6C(v17, v65);
        sub_22D1D8F6C(v65, v67);
        sub_22D2BD680();
        id v23 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_22D2BD260();
        swift_unknownObjectRelease();
        uint64_t v24 = sub_22D2BCC30();
        unint64_t v26 = v25;
        sub_22D1D8FD0(v65);
        v0[30] = sub_22D0A4D24(v24, v26, &v75);
        sub_22D2BD220();
        swift_bridgeObjectRelease();
        sub_22D1D8FD0(v63);
        _os_log_impl(&dword_22CFEE000, v13, v14, "%s threw HTTP error statusCode: %ld error: %s. Continue with downloads.", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v70, -1, -1);
        MEMORY[0x230F7BDF0](v19, -1, -1);

        uint64_t v27 = v71;
      }
      else
      {

        sub_22D1D8FD0(v17);
        swift_release_n();
        uint64_t v27 = v16;
      }
    }
    else
    {
      sub_22D1D8FD0((uint64_t)v8);
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v44 = v0[41];
      uint64_t v45 = v0[39];
      uint64_t v46 = sub_22D2BC390();
      __swift_project_value_buffer(v46, (uint64_t)qword_26AEC3C90);
      sub_22D1D8F6C(v44, v45);
      swift_retain_n();
      uint64_t v47 = sub_22D2BC380();
      os_log_type_t v48 = sub_22D2BD060();
      BOOL v49 = os_log_type_enabled(v47, v48);
      uint64_t v50 = v0[41];
      uint64_t v51 = v0[39];
      if (v49)
      {
        uint64_t v64 = v0[37];
        uint64_t v66 = v0[36];
        *(void *)typea = v0[41];
        uint64_t v52 = v0[33];
        uint64_t v53 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        uint64_t v75 = v72;
        *(_DWORD *)uint64_t v53 = 136315394;
        uint64_t v68 = v47;
        uint64_t v54 = v51;
        os_log_type_t log = v48;
        uint64_t v56 = *(void *)(v52 + 16);
        unint64_t v55 = *(void *)(v52 + 24);
        swift_bridgeObjectRetain();
        v0[25] = sub_22D0A4D24(v56, v55, &v75);
        sub_22D2BD220();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v53 + 12) = 2080;
        sub_22D1D8F6C(v51, v64);
        sub_22D1D8F6C(v64, v66);
        sub_22D2BD680();
        id v57 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_22D2BD260();
        swift_unknownObjectRelease();
        uint64_t v58 = sub_22D2BCC30();
        unint64_t v60 = v59;
        sub_22D1D8FD0(v64);
        v0[27] = sub_22D0A4D24(v58, v60, &v75);
        sub_22D2BD220();
        swift_bridgeObjectRelease();
        sub_22D1D8FD0(v54);
        _os_log_impl(&dword_22CFEE000, v68, log, "%s threw HTTP error: %s. Continue with downloads.", (uint8_t *)v53, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v72, -1, -1);
        MEMORY[0x230F7BDF0](v53, -1, -1);

        uint64_t v27 = *(void *)typea;
      }
      else
      {

        sub_22D1D8FD0(v51);
        swift_release_n();
        uint64_t v27 = v50;
      }
    }
    sub_22D1D8FD0(v27);
    id v43 = *v2;
  }
  else
  {

    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_22D2BC390();
    __swift_project_value_buffer(v28, (uint64_t)qword_26AEC3C90);
    swift_retain();
    id v29 = v1;
    swift_retain();
    id v30 = v1;
    uint64_t v31 = sub_22D2BC380();
    os_log_type_t v32 = sub_22D2BD060();
    if (!os_log_type_enabled(v31, v32))
    {

      swift_release_n();
      goto LABEL_20;
    }
    uint64_t v33 = v0[33];
    uint64_t v34 = swift_slowAlloc();
    uint64_t type = swift_slowAlloc();
    uint64_t v75 = type;
    *(_DWORD *)uint64_t v34 = 136315394;
    uint64_t v36 = *(void *)(v33 + 16);
    unint64_t v35 = *(void *)(v33 + 24);
    swift_bridgeObjectRetain();
    v0[21] = sub_22D0A4D24(v36, v35, &v75);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v34 + 12) = 2080;
    v0[22] = v1;
    id v37 = v1;
    id v38 = v1;
    sub_22D2BD680();
    id v39 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v40 = sub_22D2BCC30();
    unint64_t v42 = v41;

    v0[24] = sub_22D0A4D24(v40, v42, &v75);
    sub_22D2BD220();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v31, v32, "%s threw error: %s. Continue with downloads.", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](type, -1, -1);
    MEMORY[0x230F7BDF0](v34, -1, -1);

    id v43 = v1;
  }

LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v61 = (uint64_t (*)(void))v0[1];
  return v61();
}

uint64_t sub_22D1D6AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v10;
  *uint64_t v10 = v6;
  v10[3] = a6;
  v10[4] = a4;
  v10[1] = sub_22D0A8E9C;
  v10[2] = a5;
  return MEMORY[0x270FA2498](sub_22D1D6BD0, 0, 0);
}

uint64_t sub_22D1D6BAC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_22D1D6BD0, 0, 0);
}

uint64_t sub_22D1D6BD0()
{
  *(void *)(v0 + 40) = sub_22D1D3DEC(*(void **)(v0 + 16), *(void **)(v0 + 24));
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_contentType);
  if (!v1)
  {
    sub_22D2BCBD0();
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_22D2BCBD0();
  uint64_t v5 = v4;

  uint64_t v6 = sub_22D2BCBD0();
  if (!v5)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n();
LABEL_15:
    uint64_t v13 = *(void *)(*(void *)(v0 + 32) + 32);
    id v14 = objc_msgSend(*(id *)(v0 + 16), sel_FHIRVersion);
    *(void *)(v0 + 48) = v14;
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C40]), sel_init);
    *(void *)(v0 + 56) = v15;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_22D1D6E40;
    return sub_22D088594(v13, (uint64_t)v14, (uint64_t)v15);
  }
  char v9 = sub_22D2BD660();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_15;
  }
LABEL_11:
  uint64_t v10 = *(void *)(*(void *)(v0 + 32) + 32);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_22D1D6FF0;
  return sub_22D086F90(v10);
}

uint64_t sub_22D1D6E40()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 56);
  uint64_t v3 = *(void **)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v4 = sub_22D1D7104;
  }
  else {
    uint64_t v4 = sub_22D1D6F8C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_22D1D6F8C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22D1D6FF0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_22D1D7168;
  }
  else {
    uint64_t v2 = sub_22D1D973C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D1D7104()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22D1D7168()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22D1D71CC(uint64_t a1)
{
  v2[43] = a1;
  v2[44] = v1;
  sub_22D1D8C30(0, &qword_26AEC22D8, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  v2[45] = swift_task_alloc();
  uint64_t v3 = sub_22D2BBC90();
  v2[46] = v3;
  v2[47] = *(void *)(v3 - 8);
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22D1D72F8, 0, 0);
}

uint64_t sub_22D1D72F8()
{
  uint64_t v1 = *(void **)(v0[44] + 32);
  v0[50] = v1;
  uint64_t v2 = sub_22D2BBC50();
  v0[51] = v2;
  v0[10] = v0;
  v0[15] = v0 + 42;
  v0[11] = sub_22D1D7414;
  uint64_t v3 = swift_continuation_init();
  v0[36] = MEMORY[0x263EF8330];
  v0[37] = 0x40000000;
  v0[38] = sub_22D08A360;
  v0[39] = &block_descriptor_1;
  v0[40] = v3;
  objc_msgSend(v1, sel_fetchAttachmentWithIdentifier_completion_, v2, v0 + 36);
  return MEMORY[0x270FA23F0](v0 + 10);
}

uint64_t sub_22D1D7414()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 416) = v1;
  if (v1) {
    uint64_t v2 = sub_22D1D7FB0;
  }
  else {
    uint64_t v2 = sub_22D1D7524;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D1D7524()
{
  uint64_t v1 = (void *)v0[51];
  uint64_t v2 = (void *)v0[42];
  v0[53] = v2;

  id v3 = objc_msgSend(v2, sel_accountIdentifier);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v6 = v0[47];
    uint64_t v5 = v0[48];
    uint64_t v8 = v0[45];
    uint64_t v7 = v0[46];
    sub_22D2BBC70();

    char v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v9(v8, v5, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) != 1)
    {
      v9(v0[49], v0[45], v0[46]);
      uint64_t v10 = (void *)swift_task_alloc();
      v0[54] = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_22D1D7768;
      uint64_t v11 = v0[49];
      return sub_22D1F19B4(v11);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[47] + 56))(v0[45], 1, 1, v0[46]);
  }
  sub_22D1D8E98(v0[45], &qword_26AEC22D8, MEMORY[0x263F07508]);
  sub_22D0B8164();
  swift_allocError();
  *uint64_t v13 = 0;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_22D1D7768(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[55] = a1;
  v4[56] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = sub_22D1D803C;
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v4[57] = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_22D1D78E4;
    uint64_t v8 = v4[53];
    uint64_t v9 = v4[44];
    v7[3] = a1;
    v7[4] = v9;
    v7[2] = v8;
    uint64_t v6 = sub_22D1D6BD0;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_22D1D78E4()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_22D1D80E4;
  }
  else {
    uint64_t v2 = sub_22D1D79F8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D1D79F8()
{
  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = sub_22D2BBC50();
  v0[59] = v2;
  v0[2] = v0;
  v0[7] = v0 + 41;
  v0[3] = sub_22D1D7B10;
  uint64_t v3 = swift_continuation_init();
  v0[31] = MEMORY[0x263EF8330];
  v0[32] = 0x40000000;
  v0[33] = sub_22D08A360;
  v0[34] = &block_descriptor_13;
  v0[35] = v3;
  objc_msgSend(v1, sel_fetchAttachmentWithIdentifier_completion_, v2, v0 + 31);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_22D1D7B10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 480) = v1;
  if (v1) {
    uint64_t v2 = sub_22D1D8194;
  }
  else {
    uint64_t v2 = sub_22D1D7C20;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D1D7C20()
{
  uint64_t v1 = (void *)v0[59];
  uint64_t v2 = (void *)v0[41];
  v0[61] = v2;

  if (objc_msgSend(v2, sel_status) == (id)3)
  {
    uint64_t v3 = (void *)v0[50];
    uint64_t v4 = sub_22D2BBC50();
    v0[62] = v4;
    v0[18] = v0;
    v0[19] = sub_22D1D7DD4;
    uint64_t v5 = swift_continuation_init();
    v0[26] = MEMORY[0x263EF8330];
    v0[27] = 0x40000000;
    v0[28] = sub_22D1D3D08;
    v0[29] = &block_descriptor_15;
    v0[30] = v5;
    objc_msgSend(v3, sel_processAttachmentWithIdentifier_completion_, v4, v0 + 26);
    return MEMORY[0x270FA23F0](v0 + 18);
  }
  else
  {
    uint64_t v6 = (void *)v0[55];
    uint64_t v7 = (void *)v0[53];
    (*(void (**)(void, void))(v0[47] + 8))(v0[49], v0[46]);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_22D1D7DD4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 504) = v1;
  if (v1) {
    uint64_t v2 = sub_22D1D8260;
  }
  else {
    uint64_t v2 = sub_22D1D7EE4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D1D7EE4()
{
  uint64_t v1 = *(void **)(v0 + 440);
  uint64_t v2 = *(void **)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 376);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_22D1D7FB0()
{
  uint64_t v1 = *(void **)(v0 + 408);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_22D1D803C()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 376);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_22D1D80E4()
{
  uint64_t v1 = *(void **)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 376);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_22D1D8194()
{
  uint64_t v1 = (void *)v0[59];
  uint64_t v2 = (void *)v0[55];
  uint64_t v3 = (void *)v0[53];
  uint64_t v4 = v0[49];
  uint64_t v5 = v0[46];
  uint64_t v6 = v0[47];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_22D1D8260()
{
  uint64_t v1 = (void *)v0[62];
  uint64_t v2 = (void *)v0[61];
  uint64_t v3 = (void *)v0[55];
  uint64_t v4 = (void *)v0[53];
  uint64_t v5 = v0[49];
  uint64_t v6 = v0[46];
  uint64_t v7 = v0[47];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_22D1D833C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_22D1D8C30(0, &qword_26AEC22D8, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  v2[4] = swift_task_alloc();
  uint64_t v3 = sub_22D2BBC90();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22D1D8468, 0, 0);
}

uint64_t sub_22D1D8468()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_accountIdentifier);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v6 = *(void *)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 40);
    sub_22D2BBC70();

    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v7(v6, v3, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) != 1)
    {
      v7(*(void *)(v0 + 64), *(void *)(v0 + 32), *(void *)(v0 + 40));
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 72) = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_22D1D8694;
      uint64_t v9 = *(void *)(v0 + 64);
      return sub_22D1F19B4(v9);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 48) + 56))(*(void *)(v0 + 32), 1, 1, *(void *)(v0 + 40));
  }
  sub_22D1D8E98(*(void *)(v0 + 32), &qword_26AEC22D8, MEMORY[0x263F07508]);
  sub_22D0B8164();
  swift_allocError();
  *uint64_t v11 = 0;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_22D1D8694(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[10] = a1;
  v4[11] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = sub_22D1D89D0;
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v4[12] = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_22D1D880C;
    uint64_t v9 = v4[2];
    uint64_t v8 = v4[3];
    v7[3] = a1;
    v7[4] = v8;
    v7[2] = v9;
    uint64_t v6 = sub_22D1D6BD0;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_22D1D880C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_22D1D8A68;
  }
  else {
    uint64_t v2 = sub_22D1D8920;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22D1D8920()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_22D1D89D0()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[8], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_22D1D8A68()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_22D1D8B10()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalDocumentDownloadTaskCoordinator()
{
  return self;
}

uint64_t sub_22D1D8B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_22D0A8E9C;
  return sub_22D1D4A38(a1, a2, v7, v6);
}

void sub_22D1D8C30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D1D8C94()
{
  if (!qword_2685420B8)
  {
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BCF00();
    if (!v1) {
      atomic_store(v0, &qword_2685420B8);
    }
  }
}

uint64_t sub_22D1D8D00()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22D1D8D50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_22D0A94FC;
  return sub_22D1D6AF0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_22D1D8E18(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D1D8C30(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D1D8E98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D1D8C30(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D1D8F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HTTPError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D1D8F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HTTPError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D1D8FD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HTTPError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22D1D902C(uint64_t a1)
{
  v39[10] = *(id *)MEMORY[0x263EF8340];
  uint64_t v37 = sub_22D2BBAA0();
  uint64_t v2 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_defaultManager);
  uint64_t v6 = (void *)sub_22D2BBA10();
  sub_22D1D8C30(0, &qword_2685420D0, (uint64_t (*)(uint64_t))sub_22D0D43F0, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  uint64_t v8 = (void **)MEMORY[0x263F080A8];
  *(_OWORD *)(inited + 16) = xmmword_22D2BFF40;
  uint64_t v9 = *v8;
  *(void *)(inited + 32) = *v8;
  uint64_t v10 = (void *)*MEMORY[0x263F08088];
  type metadata accessor for FileProtectionType(0);
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 40) = v10;
  id v12 = v9;
  uint64_t v13 = v5;
  id v14 = v10;
  sub_22D0D3948(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_22D1D96E4();
  uint64_t v15 = (void *)sub_22D2BCAF0();
  swift_bridgeObjectRelease();
  v39[0] = 0;
  LOBYTE(inited) = objc_msgSend(v5, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v6, 1, v15, v39);

  if (inited)
  {
    id v16 = v39[0];
  }
  else
  {
    id v17 = v39[0];
    uint64_t v18 = (void *)sub_22D2BB9C0();

    swift_willThrow();
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_22D2BC390();
    __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
    uint64_t v20 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, a1, v37);
    id v21 = v18;
    id v22 = v18;
    id v23 = sub_22D2BC380();
    os_log_type_t v24 = sub_22D2BD050();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      unint64_t v35 = (void *)swift_slowAlloc();
      v39[0] = v35;
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v36 = v13;
      os_log_t v33 = v23;
      uint64_t v26 = sub_22D2BBA70();
      uint64_t v38 = sub_22D0A4D24(v26, v27, (uint64_t *)v39);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
      *(_WORD *)(v25 + 12) = 2112;
      id v28 = v18;
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v38 = v29;
      sub_22D2BD220();
      id v30 = v34;
      void *v34 = v29;
      uint64_t v13 = v36;

      id v23 = v33;
      _os_log_impl(&dword_22CFEE000, v33, v24, "ClinicalDocumentDownloadTaskCoordinator creating directory: %s failed %@)", (uint8_t *)v25, 0x16u);
      sub_22D0CD208();
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v30, -1, -1);
      uint64_t v31 = v35;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v31, -1, -1);
      MEMORY[0x230F7BDF0](v25, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
    }
    swift_willThrow();
  }
}

id sub_22D1D94D4()
{
  uint64_t v1 = sub_22D2BBAA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  id v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v15 - v6;
  sub_22D030474(0, (unint64_t *)&qword_26AEC2FB8);
  id v8 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  objc_msgSend(v8, sel_setAllowsConstrainedNetworkAccess_, 0);
  objc_msgSend(v8, sel_set_downloadFileProtectionType_, *MEMORY[0x263F08088]);
  uint64_t v9 = self;
  id v10 = objc_msgSend(v9, sel_downloadableAttachmentsDirectory);
  sub_22D2BBA50();

  sub_22D1D902C((uint64_t)v7);
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  else
  {
    uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
    v11(v7, v1);
    id v12 = objc_msgSend(v9, sel_downloadableAttachmentsDirectory);
    sub_22D2BBA50();

    uint64_t v13 = (void *)sub_22D2BBA10();
    v11(v5, v1);
    objc_msgSend(v8, sel_set_directoryForDownloadedFiles_, v13);
  }
  return v8;
}

unint64_t sub_22D1D96E4()
{
  unint64_t result = qword_26853D670;
  if (!qword_26853D670)
  {
    type metadata accessor for FileAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853D670);
  }
  return result;
}

id sub_22D1D9740(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for ClinicalDocumentDownloader());
  id v3 = a1;
  id v4 = sub_22D0CEA14(v3);

  return v4;
}

uint64_t type metadata accessor for ClinicalDocumentDownloaderPlugin()
{
  return self;
}

uint64_t sub_22D1D97C0()
{
  sub_22D0DCEB4();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22D2BFF40;
  uint64_t v1 = sub_22D2BCBD0();
  uint64_t v3 = v2;
  id v4 = (objc_class *)type metadata accessor for DefaultDaemonXPCService();
  id v5 = objc_allocWithZone(v4);
  id v6 = sub_22CFF5CCC(v1, v3, 0, 0, (uint64_t)sub_22D1D9740, 0);
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 64) = &off_26E05CF18;
  *(void *)(v0 + 32) = v6;
  return v0;
}

SecAccessControlRef sub_22D1D9878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22D2BC9A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v27 = &_s35DeviceIdentityBAASignatureGeneratorVN;
  id v28 = &off_26E05FD50;
  sub_22CFF4B00((uint64_t)v26, (uint64_t)v25);
  *((void *)&v22 + 1) = 0x4143C68000000000;
  *(void *)&long long v20 = a1;
  *((void *)&v20 + 1) = a2;
  sub_22CFF4B00((uint64_t)v25, (uint64_t)v23);
  *(void *)&long long v21 = 0xD000000000000010;
  *((void *)&v21 + 1) = 0x800000022D2DC940;
  SecAccessControlRef result = SecAccessControlCreateWithFlags(0, (CFTypeRef)*MEMORY[0x263F16EA0], 0, 0);
  if (result)
  {
    sub_22D2BC980();
    if (v3)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }
    else
    {
      uint64_t v36 = v8;
      uint64_t v19 = a3;
      sub_22D03490C();
      id v12 = (void *)sub_22D2BD180();
      uint64_t v13 = (void *)sub_22D2BD180();
      id v14 = (void *)sub_22D2BD180();
      uint64_t v29 = v12;
      id v30 = v13;
      uint64_t v31 = v14;
      unint64_t v32 = 0xD000000000000010;
      unint64_t v33 = 0x800000022D2DC940;
      unint64_t v34 = 0xD000000000000010;
      unint64_t v35 = 0x800000022D2DC940;
      unint64_t v15 = sub_22D25A090();
      swift_bridgeObjectRelease_n();

      *(void *)&long long v22 = v15;
      sub_22D091788();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v7);
      long long v16 = v23[0];
      uint64_t v17 = v19;
      *(_OWORD *)(v19 + 32) = v22;
      *(_OWORD *)(v17 + 48) = v16;
      *(_OWORD *)(v17 + 64) = v23[1];
      *(void *)(v17 + 80) = v24;
      long long v18 = v21;
      *(_OWORD *)uint64_t v17 = v20;
      *(_OWORD *)(v17 + 16) = v18;
    }
    return (SecAccessControlRef)__swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22D1D9B74(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22D2BB7C0();
  if (!result || (uint64_t result = sub_22D2BB7F0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_22D2BB7E0();
      return sub_22D2BBAF0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22D1D9C08(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x263EF8340];
  v10[3] = MEMORY[0x263F06F78];
  v10[4] = MEMORY[0x263F06F68];
  v10[0] = a1;
  v10[1] = a2;
  id v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_22CFF9B64(a1, a2);
      sub_22CFF9B64(v5, v6);
      sub_22D1D9B74((int)v5, v5 >> 32);
      sub_22CFF5630(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_22CFF9B64(a1, a2);
      swift_retain();
      swift_retain();
      sub_22D1D9B74(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_22CFF9B64(a1, a2);
      sub_22D2BBAF0();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

void sub_22D1D9E2C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_22D1DA104();
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_22D2BCA30();
  uint64_t v29 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  long long v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  unint64_t v33 = a2;
  uint64_t v17 = sub_22D2BCA00();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v14, a6, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
  id v30 = a3;
  uint64_t v31 = a4;
  sub_22D1DA15C();
  sub_22D2BC9D0();
  sub_22D1DA1B0((uint64_t)v14);
  if (v6)
  {
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    id v30 = v6;
    sub_22CFF49FC();
    sub_22D2BD430();
    uint64_t v19 = v32;
    unint64_t v20 = v33;
    sub_22D092498();
    swift_allocError();
    *(void *)uint64_t v21 = v19;
    *(void *)(v21 + 8) = v20;
    *(unsigned char *)(v21 + 16) = 3;
    swift_willThrow();
  }
  else
  {
    uint64_t v22 = sub_22D2BCA10();
    unint64_t v24 = v23;
    uint64_t v25 = sub_22D2BCA20();
    unint64_t v27 = v26;
    uint64_t v32 = v22;
    unint64_t v33 = v24;
    sub_22CFF9B64(v22, v24);
    sub_22D1D9C08(v25, v27);
    sub_22CFF5630(v25, v27);
    sub_22CFF5630(v22, v24);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v34);
  }
}

void sub_22D1DA104()
{
  if (!qword_2685420D8)
  {
    sub_22D2BCA00();
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685420D8);
    }
  }
}

unint64_t sub_22D1DA15C()
{
  unint64_t result = qword_2685420E0;
  if (!qword_2685420E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685420E0);
  }
  return result;
}

uint64_t sub_22D1DA1B0(uint64_t a1)
{
  sub_22D1DA104();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for ClinicalSharingEncryption.BAACertSignature(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  return sub_22CFF5630(v2, v3);
}

void *_s19HealthRecordsDaemon25ClinicalSharingEncryptionV16BAACertSignatureVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  sub_22CFF9B64(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for ClinicalSharingEncryption.BAACertSignature(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[1];
  unint64_t v4 = a2[2];
  sub_22CFF9B64(v5, v4);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_22CFF5630(v6, v7);
  return a1;
}

void *assignWithTake for ClinicalSharingEncryption.BAACertSignature(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_22CFF5630(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingEncryption.BAACertSignature()
{
  return &type metadata for ClinicalSharingEncryption.BAACertSignature;
}

uint64_t destroy for ClinicalSharingEncryption(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
}

uint64_t initializeWithCopy for ClinicalSharingEncryption(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2 + 48;
  long long v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1 + 48, v6, v8);
  return a1;
}

void *assignWithCopy for ClinicalSharingEncryption(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  return a1;
}

uint64_t assignWithTake for ClinicalSharingEncryption(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingEncryption(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingEncryption(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingEncryption()
{
  return &type metadata for ClinicalSharingEncryption;
}

uint64_t sub_22D1DA610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = (void *)(*(uint64_t (**)(void))(a2 + 88))();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
  sub_22D26B468(v7, 0, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_22D1DA6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = (void *)(*(uint64_t (**)(void))(a2 + 80))();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
  sub_22D26B468(v7, 0, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_22D1DA748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = (void *)(*(uint64_t (**)(void))(a2 + 72))();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
  sub_22D26B468(v7, 0, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_22D1DA7E4@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 64))(a2, a3);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 96))(a2, a3);
  sub_22D26B468(v9, a1, a4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_22D1DA894@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  switch(a1)
  {
    case 1:
      sub_22D1DAA40();
      uint64_t v3 = (id *)MEMORY[0x263F09498];
      goto LABEL_7;
    case 2:
      sub_22D1DAA40();
      uint64_t v3 = (id *)MEMORY[0x263F09490];
      goto LABEL_7;
    case 3:
      sub_22D1DAA40();
      uint64_t v3 = (id *)MEMORY[0x263F094A0];
      goto LABEL_7;
    case 6:
      sub_22D1DAA40();
      uint64_t v3 = (id *)MEMORY[0x263F09488];
LABEL_7:
      *a2 = MEMORY[0x230F7AD00](*v3);
      uint64_t v9 = *MEMORY[0x263F44A40];
      uint64_t v10 = sub_22D2BBF00();
      uint64_t v12 = *(void *)(v10 - 8);
      (*(void (**)(void *, uint64_t, uint64_t))(v12 + 104))(a2, v9, v10);
      uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      uint64_t v7 = a2;
      uint64_t v8 = 0;
      uint64_t v6 = v10;
      break;
    default:
      uint64_t v4 = sub_22D2BBF00();
      uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
      uint64_t v6 = v4;
      uint64_t v7 = a2;
      uint64_t v8 = 1;
      break;
  }
  return v5(v7, v8, 1, v6);
}

unint64_t sub_22D1DAA40()
{
  unint64_t result = qword_2685420E8;
  if (!qword_2685420E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2685420E8);
  }
  return result;
}

uint64_t sub_22D1DAA80()
{
  uint64_t v0 = sub_22D2BC390();
  __swift_allocate_value_buffer(v0, qword_26AEC3C90);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AEC3C90);
  _HKInitializeLogging();
  id v1 = (id)*MEMORY[0x263F09908];
  return sub_22D2BC3A0();
}

uint64_t sub_22D1DAAE4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_22D1DACE8();
  swift_allocObject();
  id v7 = a1;
  id v8 = a2;
  uint64_t result = sub_22D2BC6F0();
  *a3 = result;
  return result;
}

void sub_22D1DAB7C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_22D034BAC;
  *(void *)(v9 + 24) = v8;
  v11[4] = sub_22D1DAEA0;
  v11[5] = v9;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_22D061D84;
  v11[3] = &block_descriptor_12;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, a4, 1, v10);
  _Block_release(v10);
}

uint64_t sub_22D1DACA0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D1DACE0(uint64_t a1, uint64_t a2)
{
  sub_22D1DAB7C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

void sub_22D1DACE8()
{
  if (!qword_2685420F0)
  {
    sub_22D1DAD58();
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC6E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685420F0);
    }
  }
}

void sub_22D1DAD58()
{
  if (!qword_2685420F8)
  {
    sub_22D1DADB0();
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685420F8);
    }
  }
}

unint64_t sub_22D1DADB0()
{
  unint64_t result = qword_26853ED30;
  if (!qword_26853ED30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26853ED30);
  }
  return result;
}

uint64_t sub_22D1DADF0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D1DAE28(int a1, id a2, void (*a3)(void))
{
  if (a2)
  {
    id v5 = a2;
    ((void (*)(id, uint64_t))a3)(a2, 1);
  }
  else
  {
    a3();
  }
}

void sub_22D1DAEA0(int a1, void *a2)
{
  sub_22D1DAE28(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_22D1DAEC4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1DEE64();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D1DAF10()
{
  qword_268542100 = (uint64_t)&unk_26E05AE18;
}

uint64_t static PBServiceType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D2E0);
}

uint64_t static PBServiceType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D2E0, &qword_268542100);
}

uint64_t (*static PBServiceType.allCases.modify())()
{
  if (qword_26853D2E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D1DAFF4@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D2E0, &qword_268542100, a1);
}

uint64_t sub_22D1DB018(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1E1720();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D1DB064()
{
  qword_268542108 = (uint64_t)&unk_26E05AE68;
}

uint64_t static PBDataProtocolVersion.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D2E8);
}

uint64_t static PBDataProtocolVersion.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D2E8, &qword_268542108);
}

uint64_t (*static PBDataProtocolVersion.allCases.modify())()
{
  if (qword_26853D2E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D1DB148@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D2E8, &qword_268542108, a1);
}

void PBAlgorithm.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t PBAlgorithm.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBAlgorithm.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t sub_22D1DB19C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1E16CC();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D1DB1E8()
{
  qword_268542110 = (uint64_t)&unk_26E05AEB8;
}

uint64_t static PBAlgorithm.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D2F0);
}

uint64_t static PBAlgorithm.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D2F0, &qword_268542110);
}

uint64_t (*static PBAlgorithm.allCases.modify())()
{
  if (qword_26853D2F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22D1DB2CC@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D2F0, &qword_268542110, a1);
}

uint64_t PBAssociatedData.healthInstituteID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBAssociatedData.healthInstituteID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PBAssociatedData.healthInstituteID.modify())()
{
  return nullsub_1;
}

uint64_t PBAssociatedData.deletionCommitment.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_22CFF9B64(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t PBAssociatedData.deletionCommitment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22CFF5630(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBAssociatedData.deletionCommitment.modify())()
{
  return nullsub_1;
}

uint64_t PBAssociatedData.vkHr.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_22CFF9B64(v1, *(void *)(v0 + 40));
  return v1;
}

uint64_t PBAssociatedData.vkHr.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22CFF5630(*(void *)(v2 + 32), *(void *)(v2 + 40));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PBAssociatedData.vkHr.modify())()
{
  return nullsub_1;
}

void PBAssociatedData.type.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 48);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBAssociatedData.type.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 48) = *(void *)result;
  *(unsigned char *)(v1 + 56) = v2;
  return result;
}

uint64_t (*PBAssociatedData.type.modify())()
{
  return nullsub_1;
}

void PBAssociatedData.serviceType.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 72);
  *(void *)a1 = *(void *)(v1 + 64);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBAssociatedData.serviceType.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 64) = *(void *)result;
  *(unsigned char *)(v1 + 72) = v2;
  return result;
}

uint64_t (*PBAssociatedData.serviceType.modify())()
{
  return nullsub_1;
}

uint64_t PBAssociatedData.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBAssociatedData(0) + 36);
  uint64_t v4 = sub_22D2BBFF0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PBAssociatedData(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542288);
}

uint64_t PBAssociatedData.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBAssociatedData(0) + 36);
  uint64_t v4 = sub_22D2BBFF0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBAssociatedData.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBAssociatedData.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = sub_22D2BBFC0();
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = sub_22D2BBFC0();
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  type metadata accessor for PBAssociatedData(0);
  return sub_22D2BBFE0();
}

uint64_t PBNode.iv.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBNode(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_22CFF9B64(v2, *(void *)(v1 + 24));
  return v2;
}

uint64_t type metadata accessor for PBNode(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542298);
}

uint64_t sub_22D1DB758@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBNode(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  unint64_t v5 = *(void *)(v3 + 24);
  *a2 = v4;
  a2[1] = v5;
  return sub_22CFF9B64(v4, v5);
}

uint64_t sub_22D1DB7B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  sub_22CFF9B64(v3, v4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1DE7E8(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  unint64_t v9 = *(void *)(v7 + 24);
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v4;
  return sub_22CFF5630(v8, v9);
}

uint64_t PBNode.iv.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1DE7E8(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  unint64_t v9 = *(void *)(v7 + 24);
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return sub_22CFF5630(v8, v9);
}

uint64_t type metadata accessor for PBNode._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685422A8);
}

void (*PBNode.iv.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 16);
  unint64_t v7 = *(void *)(v5 + 24);
  v3[9] = v6;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D1DB9D8;
}

void sub_22D1DB9D8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  unint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    sub_22CFF9B64(*(void *)(*a1 + 72), v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1DE7E8(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    uint64_t v9 = *(void *)(v8 + 16);
    unint64_t v10 = *(void *)(v8 + 24);
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    sub_22CFF5630(v9, v10);
    uint64_t v11 = *(void *)(v2 + 72);
    unint64_t v12 = *(void *)(v2 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v2 + 96);
      uint64_t v14 = *(void *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = sub_22D1DE7E8(v15);
      swift_release();
    }
    uint64_t v16 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    uint64_t v11 = *(void *)(v16 + 16);
    unint64_t v12 = *(void *)(v16 + 24);
    *(void *)(v16 + 16) = v3;
    *(void *)(v16 + 24) = v4;
  }
  sub_22CFF5630(v11, v12);
  free((void *)v2);
}

uint64_t PBNode.associatedData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBNode(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  sub_22D1DEB54(v6, (uint64_t)v5);
  uint64_t v7 = type metadata accessor for PBAssociatedData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D1DEC74((uint64_t)v5, a1);
  }
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = sub_22D2BBFC0();
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = sub_22D2BBFC0();
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  sub_22D2BBFE0();
  return sub_22D1DEBE8((uint64_t)v5);
}

uint64_t sub_22D1DBCC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PBAssociatedData(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1DEE00(a1, (uint64_t)v4);
  return PBNode.associatedData.setter((uint64_t)v4);
}

uint64_t PBNode.associatedData.setter(uint64_t a1)
{
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D1DE7E8(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D1DEC74(a1, (uint64_t)v8);
  uint64_t v12 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D1DECD8((uint64_t)v8, (uint64_t)v6);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  swift_retain();
  sub_22D1DED6C((uint64_t)v6, v13);
  swift_endAccess();
  return swift_release();
}

void (*PBNode.associatedData.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBAssociatedData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBNode(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  sub_22D1DEB54(v10, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = sub_22D2BBFC0();
    v9[3] = v11;
    v9[4] = sub_22D2BBFC0();
    v9[5] = v12;
    v9[6] = 0;
    *((unsigned char *)v9 + 56) = 1;
    void v9[8] = 0;
    *((unsigned char *)v9 + 72) = 1;
    sub_22D2BBFE0();
    sub_22D1DEBE8((uint64_t)v5);
  }
  else
  {
    sub_22D1DEC74((uint64_t)v5, (uint64_t)v9);
  }
  return sub_22D1DC0F0;
}

void sub_22D1DC0F0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v4 = *(void **)(*(void *)a1 + 48);
  uint64_t v5 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    sub_22D1DEE00((uint64_t)v4, (uint64_t)v3);
    PBNode.associatedData.setter((uint64_t)v3);
    sub_22D1E1808((uint64_t)v4, type metadata accessor for PBAssociatedData);
  }
  else
  {
    PBNode.associatedData.setter((uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

BOOL PBNode.hasAssociatedData.getter()
{
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBNode(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  sub_22D1DEB54(v4, (uint64_t)v3);
  uint64_t v5 = type metadata accessor for PBAssociatedData(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D1DEBE8((uint64_t)v3);
  return v6;
}

Swift::Void __swiftcall PBNode.clearAssociatedData()()
{
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D1DE7E8(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  swift_retain();
  sub_22D1DED6C((uint64_t)v3, v8);
  swift_endAccess();
  swift_release();
}

uint64_t PBNode.cyphertext.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBNode(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  sub_22CFF9B64(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t sub_22D1DC4A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*(void *)(a1 + *(int *)(type metadata accessor for PBNode(0) + 20))
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_22CFF9B64(v4, v5);
}

uint64_t sub_22D1DC508(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  sub_22CFF9B64(v3, v4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1DE7E8(v6);
    swift_release();
  }
  uint64_t v7 = (uint64_t *)(*(void *)(a2 + v5)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  *uint64_t v7 = v3;
  v7[1] = v4;
  return sub_22CFF5630(v8, v9);
}

uint64_t PBNode.cyphertext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1DE7E8(v6);
    swift_release();
  }
  uint64_t v7 = (uint64_t *)(*(void *)(v2 + v5)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  *uint64_t v7 = a1;
  v7[1] = a2;
  return sub_22CFF5630(v8, v9);
}

void (*PBNode.cyphertext.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D1DC730;
}

void sub_22D1DC730(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  unint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    sub_22CFF9B64(*(void *)(*a1 + 72), v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1DE7E8(v7);
      swift_release();
    }
    uint64_t v8 = (uint64_t *)(*(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96))
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
    swift_beginAccess();
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    *uint64_t v8 = v3;
    v8[1] = v4;
    sub_22CFF5630(v9, v10);
    uint64_t v11 = *(void *)(v2 + 72);
    unint64_t v12 = *(void *)(v2 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v2 + 96);
      uint64_t v14 = *(void *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = sub_22D1DE7E8(v15);
      swift_release();
    }
    uint64_t v16 = (uint64_t *)(*(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96))
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
    swift_beginAccess();
    uint64_t v11 = *v16;
    unint64_t v12 = v16[1];
    *uint64_t v16 = v3;
    v16[1] = v4;
  }
  sub_22CFF5630(v11, v12);
  free((void *)v2);
}

uint64_t PBNode.dataProtocolVersion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1DC988(&OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion, a1);
}

uint64_t PBNode.dataProtocolVersion.setter(uint64_t *a1)
{
  return sub_22D1DCB40(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
}

void (*PBNode.dataProtocolVersion.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 8);
  v3[9] = *(void *)v5;
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D1DC970;
}

void sub_22D1DC970(uint64_t *a1, char a2)
{
}

uint64_t PBNode.algorithm.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1DC988(&OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm, a1);
}

uint64_t sub_22D1DC988@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + *(int *)(type metadata accessor for PBNode(0) + 20)) + *a1;
  uint64_t result = swift_beginAccess();
  char v6 = *(unsigned char *)(v4 + 8);
  *(void *)a2 = *(void *)v4;
  *(unsigned char *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_22D1DC9F8@<X0>(uint64_t a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(type metadata accessor for PBNode(0) + 20)) + *a2;
  uint64_t result = swift_beginAccess();
  char v6 = *(unsigned char *)(v4 + 8);
  *(void *)a3 = *(void *)v4;
  *(unsigned char *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_22D1DCA6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = *a1;
  char v8 = *((unsigned char *)a1 + 8);
  uint64_t v9 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(a2 + v9) = sub_22D1DE7E8(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(a2 + v9) + *a5;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v11 = v7;
  *(unsigned char *)(v11 + 8) = v8;
  return result;
}

uint64_t PBNode.algorithm.setter(uint64_t *a1)
{
  return sub_22D1DCB40(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
}

uint64_t sub_22D1DCB40(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  char v5 = *((unsigned char *)a1 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v2 + v6) = sub_22D1DE7E8(v7);
    swift_release();
  }
  uint64_t v8 = *(void *)(v2 + v6) + *a2;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v8 = v4;
  *(unsigned char *)(v8 + 8) = v5;
  return result;
}

void (*PBNode.algorithm.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 8);
  v3[9] = *(void *)v5;
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D1DCCA4;
}

void sub_22D1DCCA4(uint64_t *a1, char a2)
{
}

void sub_22D1DCCB0(uint64_t *a1, char a2, void *a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(*a1 + 72);
  char v7 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v9 = *(int *)(v5 + 84);
    uint64_t v10 = *(void *)(v5 + 88);
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v10 + v9) = sub_22D1DE7E8(v11);
    swift_release();
  }
LABEL_4:
  uint64_t v12 = *(void *)(*(void *)(v5 + 88) + *(int *)(v5 + 84)) + *a3;
  swift_beginAccess();
  *(void *)uint64_t v12 = v6;
  *(unsigned char *)(v12 + 8) = v7;
  free((void *)v5);
}

uint64_t PBNode.clientVersion.getter()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + *(int *)(type metadata accessor for PBNode(0) + 20))
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D1DCE1C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*(void *)(a1 + *(int *)(type metadata accessor for PBNode(0) + 20))
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D1DCE84(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D1DE7E8(v6);
    swift_release();
  }
  char v7 = (void *)(*(void *)(a2 + v5)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  *char v7 = v4;
  v7[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBNode.clientVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D1DE7E8(v6);
    swift_release();
  }
  char v7 = (void *)(*(void *)(v2 + v5)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  *char v7 = a1;
  v7[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*PBNode.clientVersion.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBNode(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D1DD0AC;
}

void sub_22D1DD0AC(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D1DE7E8(v7);
      swift_release();
    }
    uint64_t v8 = (void *)(*(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96))
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
    swift_beginAccess();
    *uint64_t v8 = v3;
    v8[1] = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D1DE7E8(v11);
      swift_release();
    }
    uint64_t v12 = (void *)(*(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96))
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
    swift_beginAccess();
    *uint64_t v12 = v3;
    v12[1] = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBNode.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22D2BBFF0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PBNode.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_22D2BBFF0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*PBNode.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBNode.init()@<X0>(uint64_t a1@<X8>)
{
  sub_22D2BBFE0();
  uint64_t v2 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if (qword_26853D320 != -1) {
    swift_once();
  }
  *(void *)(a1 + v2) = qword_268542190;
  return swift_retain();
}

uint64_t sub_22D1DD3A0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542118);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542118);
  sub_22D1E1868(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 0;
  *(void *)unint64_t v7 = "UNDEFINED_SERVICE";
  *(void *)(v7 + 8) = 17;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 1;
  *(void *)uint64_t v11 = "HEALTH_INSTITUTION";
  *((void *)v11 + 1) = 18;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 2;
  *(void *)uint64_t v12 = "OTS";
  *(void *)(v12 + 8) = 3;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBServiceType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D2F8, (uint64_t)qword_268542118, a1);
}

uint64_t sub_22D1DD5EC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D2F8, (uint64_t)qword_268542118, a1);
}

uint64_t sub_22D1DD610()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542130);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542130);
  sub_22D1E1868(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 0;
  *(void *)unint64_t v7 = "VX";
  *(void *)(v7 + 8) = 2;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 1;
  *(void *)uint64_t v11 = "V1";
  *((void *)v11 + 1) = 2;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 2;
  *(void *)uint64_t v12 = "V2";
  *(void *)(v12 + 8) = 2;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBDataProtocolVersion._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D300, (uint64_t)qword_268542130, a1);
}

uint64_t sub_22D1DD850@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D300, (uint64_t)qword_268542130, a1);
}

uint64_t sub_22D1DD874()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542148);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542148);
  sub_22D1E1868(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 0;
  *(void *)unint64_t v7 = "ALG_X";
  *(void *)(v7 + 8) = 5;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 1;
  *(void *)uint64_t v11 = "AES_ECM";
  *((void *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 2;
  *(void *)uint64_t v12 = "AES_GCM";
  *(void *)(v12 + 8) = 7;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBAlgorithm._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D308, (uint64_t)qword_268542148, a1);
}

uint64_t sub_22D1DDABC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D308, (uint64_t)qword_268542148, a1);
}

unint64_t static PBAssociatedData.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D1DDAFC()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542160);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542160);
  sub_22D1E1868(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2BFF30;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "health_institute_id";
  *(void *)(v7 + 8) = 19;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "deletion_commitment";
  *(void *)(v11 + 8) = 19;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 3;
  *(void *)uint64_t v13 = "vk_hr";
  *((void *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 4;
  *(void *)uint64_t v15 = "type";
  *((void *)v15 + 1) = 4;
  v15[16] = 2;
  v10();
  uint64_t v16 = v6 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v6 + 4 * v3) = 5;
  *(void *)uint64_t v16 = "service_type";
  *(void *)(v16 + 8) = 12;
  *(unsigned char *)(v16 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBAssociatedData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D310, (uint64_t)qword_268542160, a1);
}

uint64_t PBAssociatedData.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_6;
        case 2:
        case 3:
          uint64_t v4 = v3;
          sub_22D2BC110();
          goto LABEL_6;
        case 4:
          sub_22D03BAF0();
          goto LABEL_5;
        case 5:
          sub_22D1DEE64();
LABEL_5:
          uint64_t v4 = v3;
          sub_22D2BC0D0();
LABEL_6:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBAssociatedData.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_22D2BC2B0(), !v1))
  {
    uint64_t v5 = v0[2];
    unint64_t v6 = v0[3];
    switch(v6 >> 62)
    {
      case 1uLL:
        if ((int)v5 != v5 >> 32) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 2uLL:
        if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 3uLL:
        goto LABEL_12;
      default:
        if ((v6 & 0xFF000000000000) == 0) {
          goto LABEL_12;
        }
LABEL_11:
        uint64_t result = sub_22D2BC260();
        if (!v1)
        {
LABEL_12:
          uint64_t v7 = v0[4];
          unint64_t v8 = v0[5];
          switch(v8 >> 62)
          {
            case 1uLL:
              if ((int)v7 != v7 >> 32) {
                goto LABEL_18;
              }
              goto LABEL_19;
            case 2uLL:
              if (*(void *)(v7 + 16) != *(void *)(v7 + 24)) {
                goto LABEL_18;
              }
              goto LABEL_19;
            case 3uLL:
              goto LABEL_19;
            default:
              if ((v8 & 0xFF000000000000) == 0) {
                goto LABEL_19;
              }
LABEL_18:
              uint64_t result = sub_22D2BC260();
              if (!v1)
              {
LABEL_19:
                if (!v0[6] || (sub_22D03BAF0(), uint64_t result = sub_22D2BC240(), !v1))
                {
                  if (!v0[8] || (sub_22D1DEE64(), uint64_t result = sub_22D2BC240(), !v1))
                  {
                    type metadata accessor for PBAssociatedData(0);
                    uint64_t result = sub_22D2BBFD0();
                  }
                }
              }
              break;
          }
        }
        break;
    }
  }
  return result;
}

uint64_t PBAssociatedData.hashValue.getter()
{
  return sub_22D1DFE8C((void (*)(void))type metadata accessor for PBAssociatedData, &qword_2685421D0, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
}

uint64_t sub_22D1DE1A0@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = sub_22D2BBFC0();
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = sub_22D2BBFC0();
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  return sub_22D2BBFE0();
}

unint64_t sub_22D1DE1FC()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D1DE218()
{
  return PBAssociatedData.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1DE230()
{
  return PBAssociatedData.traverse<A>(visitor:)();
}

uint64_t sub_22D1DE248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1E05F8(&qword_2685422C0, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1DE2C4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D310, (uint64_t)qword_268542160, a1);
}

uint64_t sub_22D1DE2E8(uint64_t a1)
{
  uint64_t v2 = sub_22D1E05F8(&qword_268542260, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1DE354()
{
  sub_22D1E05F8(&qword_268542260, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
  return sub_22D2BC200();
}

unint64_t static PBNode.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_22D1DE3F0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542178);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542178);
  sub_22D1E1868(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_22D2C79F0;
  unint64_t v5 = v20 + v4;
  unint64_t v6 = v20 + v4 + *(int *)(v2 + 56);
  *(void *)(v20 + v4) = 2;
  *(void *)unint64_t v6 = "iv";
  *(void *)(v6 + 8) = 2;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 3;
  *(void *)unint64_t v10 = "associated_data";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *unint64_t v11 = 4;
  *(void *)uint64_t v12 = "cyphertext";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 5;
  *(void *)uint64_t v14 = "data_protocol_version";
  *((void *)v14 + 1) = 21;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 6;
  *(void *)uint64_t v16 = "algorithm";
  *((void *)v16 + 1) = 9;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 7;
  *(void *)uint64_t v18 = "client_version";
  *((void *)v18 + 1) = 14;
  v18[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBNode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D318, (uint64_t)qword_268542178, a1);
}

uint64_t sub_22D1DE6FC()
{
  type metadata accessor for PBNode._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_22D2BBFC0();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  uint64_t v3 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  unint64_t v4 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  uint64_t result = sub_22D2BBFC0();
  *unint64_t v4 = result;
  v4[1] = v6;
  uint64_t v7 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  qword_268542190 = v0;
  return result;
}

uint64_t sub_22D1DE7E8(uint64_t a1)
{
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v37 = (uint64_t)&v36 - v4;
  *(void *)(v1 + 16) = sub_22D2BBFC0();
  *(void *)(v1 + 24) = v5;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  uint64_t v36 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  uint64_t v7 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (uint64_t *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  *uint64_t v8 = sub_22D2BBFC0();
  v8[1] = v9;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v11 = v1 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
  uint64_t v38 = v1 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  id v39 = (void *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  *uint64_t v12 = 0;
  v12[1] = 0xE000000000000000;
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 16);
  unint64_t v14 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v1 + 16);
  unint64_t v16 = *(void *)(v1 + 24);
  *(void *)(v1 + 16) = v13;
  *(void *)(v1 + 24) = v14;
  sub_22CFF9B64(v13, v14);
  sub_22CFF5630(v15, v16);
  uint64_t v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  uint64_t v18 = v17;
  uint64_t v19 = v37;
  sub_22D1DEB54(v18, v37);
  uint64_t v20 = v36;
  swift_beginAccess();
  sub_22D1DED6C(v19, v20);
  swift_endAccess();
  uint64_t v21 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  uint64_t v23 = *v21;
  unint64_t v22 = v21[1];
  swift_beginAccess();
  uint64_t v24 = *v8;
  unint64_t v25 = v8[1];
  *uint64_t v8 = v23;
  v8[1] = v22;
  sub_22CFF9B64(v23, v22);
  sub_22CFF5630(v24, v25);
  unint64_t v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
  swift_beginAccess();
  uint64_t v27 = *v26;
  LOBYTE(v26) = *((unsigned char *)v26 + 8);
  swift_beginAccess();
  *(void *)uint64_t v10 = v27;
  *(unsigned char *)(v10 + 8) = (_BYTE)v26;
  uint64_t v28 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
  swift_beginAccess();
  uint64_t v29 = *v28;
  LOBYTE(v28) = *((unsigned char *)v28 + 8);
  uint64_t v30 = v38;
  swift_beginAccess();
  *(void *)uint64_t v30 = v29;
  *(unsigned char *)(v30 + 8) = (_BYTE)v28;
  uint64_t v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v34 = v39;
  swift_beginAccess();
  void *v34 = v33;
  v34[1] = v32;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22D1DEB54(uint64_t a1, uint64_t a2)
{
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D1DEBE8(uint64_t a1)
{
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D1DEC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D1DECD8(uint64_t a1, uint64_t a2)
{
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D1DED6C(uint64_t a1, uint64_t a2)
{
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D1DEE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBAssociatedData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22D1DEE64()
{
  unint64_t result = qword_2685421C8;
  if (!qword_2685421C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685421C8);
  }
  return result;
}

uint64_t sub_22D1DEEB8()
{
  sub_22CFF5630(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_22D1DEBE8(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData);
  sub_22CFF5630(*(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext), *(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext+ 8));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBNode.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = *(int *)(type metadata accessor for PBNode(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_22D1DE7E8(v2);
    swift_release();
  }
  swift_retain();
  sub_22D1DF018();
  return swift_release();
}

uint64_t sub_22D1DF018()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 2:
        case 4:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC110();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for PBAssociatedData(0);
          sub_22D1E05F8(&qword_268542260, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          sub_22D1E1720();
          goto LABEL_12;
        case 6:
          swift_beginAccess();
          sub_22D1E16CC();
LABEL_12:
          uint64_t v4 = v3;
          sub_22D2BC0D0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 7:
          swift_beginAccess();
          sub_22D2BC170();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBNode.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PBNode(0);
  uint64_t v7 = swift_retain();
  sub_22D1DF348(v7, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v3) {
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t sub_22D1DF348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  v28[1] = a3;
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v28 - v7;
  uint64_t v9 = type metadata accessor for PBAssociatedData(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v13 = *(void *)(a1 + 24);
  switch(v13 >> 62)
  {
    case 1uLL:
      if ((int)v14 != v14 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v14 + 16) != *(void *)(v14 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v13 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      sub_22CFF9B64(*(void *)(a1 + 16), *(void *)(a1 + 24));
      sub_22D2BC260();
      uint64_t result = sub_22CFF5630(v14, v13);
      if (v4) {
        return result;
      }
LABEL_8:
      uint64_t v16 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
      swift_beginAccess();
      sub_22D1DEB54(v16, (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_22D1DEBE8((uint64_t)v8);
      }
      else
      {
        sub_22D1DEC74((uint64_t)v8, (uint64_t)v12);
        sub_22D1E05F8(&qword_268542260, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
        sub_22D2BC2E0();
        uint64_t result = sub_22D1E1808((uint64_t)v12, type metadata accessor for PBAssociatedData);
        if (v4) {
          return result;
        }
      }
      uint64_t v17 = (uint64_t *)(a1
                      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
      swift_beginAccess();
      uint64_t v19 = *v17;
      unint64_t v18 = v17[1];
      switch(v18 >> 62)
      {
        case 1uLL:
          if ((int)v19 != v19 >> 32) {
            goto LABEL_17;
          }
          goto LABEL_18;
        case 2uLL:
          if (*(void *)(v19 + 16) != *(void *)(v19 + 24)) {
            goto LABEL_17;
          }
          goto LABEL_18;
        case 3uLL:
          goto LABEL_18;
        default:
          if ((v18 & 0xFF000000000000) == 0) {
            goto LABEL_18;
          }
LABEL_17:
          sub_22CFF9B64(v19, v18);
          sub_22D2BC260();
          uint64_t result = sub_22CFF5630(v19, v18);
          if (!v4)
          {
LABEL_18:
            uint64_t v20 = (uint64_t *)(a1
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
            swift_beginAccess();
            if (!*v20
              || (v21 = *((unsigned char *)v20 + 8), v30 = *v20, v31 = v21, sub_22D1E1720(), uint64_t result = sub_22D2BC240(), !v4))
            {
              uint64_t v22 = a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
              swift_beginAccess();
              if (!*(void *)v22
                || (char v23 = *(unsigned char *)(v22 + 8),
                    v28[2] = *(void *)v22,
                    char v29 = v23,
                    sub_22D1E16CC(),
                    uint64_t result = sub_22D2BC240(),
                    !v4))
              {
                uint64_t v24 = (uint64_t *)(a1
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
                uint64_t result = swift_beginAccess();
                uint64_t v26 = *v24;
                unint64_t v25 = v24[1];
                uint64_t v27 = HIBYTE(v25) & 0xF;
                if ((v25 & 0x2000000000000000) == 0) {
                  uint64_t v27 = v26 & 0xFFFFFFFFFFFFLL;
                }
                if (v27)
                {
                  swift_bridgeObjectRetain();
                  sub_22D2BC2B0();
                  uint64_t result = swift_bridgeObjectRelease();
                }
              }
            }
          }
          break;
      }
      return result;
  }
}

uint64_t sub_22D1DF814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBAssociatedData(0);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v52 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1E1774();
  uint64_t v53 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1E1868(0, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v52 - v12;
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v14 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v16 = *(void *)(a2 + 16);
  unint64_t v17 = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  sub_22CFF9B64(v15, v14);
  sub_22CFF9B64(v16, v17);
  char v18 = sub_22D1158DC(v15, v14, v16, v17);
  sub_22CFF5630(v16, v17);
  sub_22CFF5630(v15, v14);
  if ((v18 & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v19 = v11;
  uint64_t v20 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  sub_22D1DEB54(v20, (uint64_t)v13);
  uint64_t v21 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  uint64_t v22 = v54;
  uint64_t v23 = v54 + *(int *)(v53 + 48);
  sub_22D1DEB54((uint64_t)v13, v54);
  sub_22D1DEB54(v21, v23);
  uint64_t v24 = v56;
  unint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v25(v22, 1, v56) == 1)
  {
    sub_22D1DEBE8((uint64_t)v13);
    if (v25(v23, 1, v24) == 1)
    {
      sub_22D1DEBE8(v22);
      goto LABEL_9;
    }
LABEL_7:
    sub_22D1E1808(v22, (uint64_t (*)(void))sub_22D1E1774);
    char v26 = 0;
    goto LABEL_33;
  }
  uint64_t v55 = a1;
  sub_22D1DEB54(v22, (uint64_t)v19);
  if (v25(v23, 1, v24) == 1)
  {
    sub_22D1DEBE8((uint64_t)v13);
    sub_22D1E1808((uint64_t)v19, type metadata accessor for PBAssociatedData);
    goto LABEL_7;
  }
  uint64_t v27 = a2;
  uint64_t v28 = v52;
  sub_22D1DEC74(v23, v52);
  char v29 = _s19HealthRecordsDaemon16PBAssociatedDataV2eeoiySbAC_ACtFZ_0(v19, v28);
  uint64_t v30 = v28;
  a2 = v27;
  sub_22D1E1808(v30, type metadata accessor for PBAssociatedData);
  sub_22D1DEBE8((uint64_t)v13);
  sub_22D1E1808((uint64_t)v19, type metadata accessor for PBAssociatedData);
  sub_22D1DEBE8(v22);
  a1 = v55;
  if ((v29 & 1) == 0) {
    goto LABEL_32;
  }
LABEL_9:
  char v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  uint64_t v33 = *v31;
  unint64_t v32 = v31[1];
  uint64_t v34 = (uint64_t *)(a2
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
  swift_beginAccess();
  uint64_t v35 = a2;
  uint64_t v37 = *v34;
  unint64_t v36 = v34[1];
  sub_22CFF9B64(v33, v32);
  sub_22CFF9B64(v37, v36);
  char v38 = sub_22D1158DC(v33, v32, v37, v36);
  sub_22CFF5630(v37, v36);
  sub_22CFF5630(v33, v32);
  if ((v38 & 1) == 0)
  {
    char v26 = 0;
    goto LABEL_33;
  }
  id v39 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
  swift_beginAccess();
  uint64_t v40 = *v39;
  unint64_t v41 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
  swift_beginAccess();
  uint64_t v42 = *v41;
  if (*((unsigned char *)v41 + 8) == 1)
  {
    if (v42)
    {
      if (v42 == 1)
      {
        if (v40 != 1) {
          goto LABEL_32;
        }
      }
      else if (v40 != 2)
      {
        goto LABEL_32;
      }
    }
    else if (v40)
    {
      goto LABEL_32;
    }
  }
  else if (v40 != v42)
  {
    goto LABEL_32;
  }
  id v43 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
  swift_beginAccess();
  uint64_t v44 = *v43;
  uint64_t v45 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
  swift_beginAccess();
  uint64_t v46 = *v45;
  if (*((unsigned char *)v45 + 8) == 1)
  {
    if (v46)
    {
      if (v46 == 1)
      {
        if (v44 == 1) {
          goto LABEL_27;
        }
      }
      else if (v44 == 2)
      {
        goto LABEL_27;
      }
LABEL_32:
      char v26 = 0;
      goto LABEL_33;
    }
    if (v44) {
      goto LABEL_32;
    }
  }
  else if (v44 != v46)
  {
    goto LABEL_32;
  }
LABEL_27:
  uint64_t v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  uint64_t v48 = *v47;
  uint64_t v49 = v47[1];
  uint64_t v50 = (void *)(v35
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
  swift_beginAccess();
  if (v48 == *v50 && v49 == v50[1]) {
    char v26 = 1;
  }
  else {
    char v26 = sub_22D2BD660();
  }
LABEL_33:
  swift_release();
  swift_release();
  return v26 & 1;
}

uint64_t PBNode.hashValue.getter()
{
  return sub_22D1DFE8C((void (*)(void))type metadata accessor for PBNode, &qword_2685421D8, (void (*)(uint64_t))type metadata accessor for PBNode);
}

uint64_t sub_22D1DFE8C(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_22D2BD760();
}

uint64_t sub_22D1DFF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D2BBFE0();
  uint64_t v4 = *(int *)(a1 + 20);
  if (qword_26853D320 != -1) {
    swift_once();
  }
  *(void *)(a2 + v4) = qword_268542190;
  return swift_retain();
}

unint64_t sub_22D1DFF8C()
{
  return 0xD000000000000024;
}

uint64_t sub_22D1DFFA8()
{
  return PBNode.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D1DFFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBNode.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D1DFFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D1E05F8(&qword_2685422B8, (void (*)(uint64_t))type metadata accessor for PBNode);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D1E0054@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D318, (uint64_t)qword_268542178, a1);
}

uint64_t sub_22D1E0078(uint64_t a1)
{
  uint64_t v2 = sub_22D1E05F8((unint64_t *)&qword_268542278, (void (*)(uint64_t))type metadata accessor for PBNode);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D1E00E4()
{
  sub_22D1E05F8((unint64_t *)&qword_268542278, (void (*)(uint64_t))type metadata accessor for PBNode);
  return sub_22D2BC200();
}

uint64_t _s19HealthRecordsDaemon6PBNodeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for PBNode(0) + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void *)(a2 + v11);
  if (v12 == v13
    || (swift_retain(), swift_retain(), char v14 = sub_22D1DF814(v12, v13), swift_release(), swift_release(), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
    sub_22D1E05F8(&qword_26853DB30, MEMORY[0x263F50560]);
    char v16 = sub_22D2BCB90();
    unint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t _s19HealthRecordsDaemon16PBAssociatedDataV2eeoiySbAC_ACtFZ_0(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
  {
    if ((sub_22D1158DC(*((void *)a1 + 2), *((void *)a1 + 3), *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1) == 0
      || (sub_22D1158DC(*((void *)a1 + 4), *((void *)a1 + 5), *(void *)(a2 + 32), *(void *)(a2 + 40)) & 1) == 0)
    {
      goto LABEL_27;
    }
    uint64_t v13 = *((void *)a1 + 6);
    uint64_t v14 = *(void *)(a2 + 48);
    if (*(unsigned char *)(a2 + 56) == 1)
    {
      switch(v14)
      {
        case 1:
          if (v13 == 1) {
            goto LABEL_19;
          }
          goto LABEL_27;
        case 2:
          if (v13 == 2) {
            goto LABEL_19;
          }
          goto LABEL_27;
        case 3:
          if (v13 == 3) {
            goto LABEL_19;
          }
          goto LABEL_27;
        default:
          if (!v13) {
            goto LABEL_19;
          }
          goto LABEL_27;
      }
    }
    if (v13 != v14) {
      goto LABEL_27;
    }
LABEL_19:
    uint64_t v15 = *((void *)a1 + 8);
    uint64_t v16 = *(void *)(a2 + 64);
    if (*(unsigned char *)(a2 + 72) == 1)
    {
      if (v16)
      {
        if (v16 == 1)
        {
          if (v15 == 1) {
            goto LABEL_25;
          }
        }
        else if (v15 == 2)
        {
          goto LABEL_25;
        }
LABEL_27:
        char v12 = 0;
        return v12 & 1;
      }
      if (v15) {
        goto LABEL_27;
      }
    }
    else if (v15 != v16)
    {
      goto LABEL_27;
    }
LABEL_25:
    uint64_t v17 = type metadata accessor for PBAssociatedData(0);
    char v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v18(v10, &a1[*(int *)(v17 + 36)], v4);
    v18(v8, (char *)(a2 + *(int *)(v17 + 36)), v4);
    sub_22D1E05F8(&qword_26853DB30, MEMORY[0x263F50560]);
    char v12 = sub_22D2BCB90();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v8, v4);
    v19(v10, v4);
  }
  return v12 & 1;
}

uint64_t sub_22D1E05F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22D1E0644()
{
  unint64_t result = qword_2685421E0;
  if (!qword_2685421E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685421E0);
  }
  return result;
}

unint64_t sub_22D1E069C()
{
  unint64_t result = qword_2685421E8;
  if (!qword_2685421E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685421E8);
  }
  return result;
}

unint64_t sub_22D1E06F4()
{
  unint64_t result = qword_2685421F0;
  if (!qword_2685421F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685421F0);
  }
  return result;
}

uint64_t sub_22D1E0748()
{
  return sub_22D108E48(&qword_2685421F8, &qword_268542200);
}

unint64_t sub_22D1E077C()
{
  unint64_t result = qword_268542208;
  if (!qword_268542208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542208);
  }
  return result;
}

unint64_t sub_22D1E07D4()
{
  unint64_t result = qword_268542210;
  if (!qword_268542210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542210);
  }
  return result;
}

unint64_t sub_22D1E082C()
{
  unint64_t result = qword_268542218;
  if (!qword_268542218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542218);
  }
  return result;
}

uint64_t sub_22D1E0880()
{
  return sub_22D108E48(&qword_268542220, &qword_268542228);
}

unint64_t sub_22D1E08B4()
{
  unint64_t result = qword_268542230;
  if (!qword_268542230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542230);
  }
  return result;
}

unint64_t sub_22D1E090C()
{
  unint64_t result = qword_268542238;
  if (!qword_268542238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542238);
  }
  return result;
}

unint64_t sub_22D1E0964()
{
  unint64_t result = qword_268542240;
  if (!qword_268542240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542240);
  }
  return result;
}

uint64_t sub_22D1E09B8()
{
  return sub_22D108E48(&qword_268542248, &qword_268542250);
}

uint64_t sub_22D1E09E8()
{
  return sub_22D1E05F8(&qword_268542258, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
}

uint64_t sub_22D1E0A30()
{
  return sub_22D1E05F8(&qword_268542260, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
}

uint64_t sub_22D1E0A78()
{
  return sub_22D1E05F8(&qword_2685421D0, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
}

uint64_t sub_22D1E0AC0()
{
  return sub_22D1E05F8(&qword_268542268, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
}

uint64_t sub_22D1E0B08()
{
  return sub_22D1E05F8(&qword_268542270, (void (*)(uint64_t))type metadata accessor for PBNode);
}

uint64_t sub_22D1E0B50()
{
  return sub_22D1E05F8((unint64_t *)&qword_268542278, (void (*)(uint64_t))type metadata accessor for PBNode);
}

uint64_t sub_22D1E0B98()
{
  return sub_22D1E05F8(&qword_2685421D8, (void (*)(uint64_t))type metadata accessor for PBNode);
}

uint64_t sub_22D1E0BE0()
{
  return sub_22D1E05F8(&qword_268542280, (void (*)(uint64_t))type metadata accessor for PBNode);
}

uint64_t sub_22D1E0C30@<X0>(uint64_t a1@<X8>)
{
  return PBNode.associatedData.getter(a1);
}

uint64_t sub_22D1E0C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D1DC9F8(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion, a2);
}

uint64_t sub_22D1E0C80(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1DCA6C(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion);
}

uint64_t sub_22D1E0CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D1DC9F8(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm, a2);
}

uint64_t sub_22D1E0CC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D1DCA6C(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm);
}

ValueMetadata *type metadata accessor for PBServiceType()
{
  return &type metadata for PBServiceType;
}

ValueMetadata *type metadata accessor for PBDataProtocolVersion()
{
  return &type metadata for PBDataProtocolVersion;
}

ValueMetadata *type metadata accessor for PBAlgorithm()
{
  return &type metadata for PBAlgorithm;
}

uint64_t initializeBufferWithCopyOfBuffer for PBAssociatedData(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    unint64_t v9 = a2[3];
    swift_bridgeObjectRetain();
    sub_22CFF9B64(v8, v9);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    uint64_t v10 = a2[4];
    unint64_t v11 = a2[5];
    sub_22CFF9B64(v10, v11);
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 64) = a2[8];
    char v12 = *((unsigned char *)a2 + 72);
    uint64_t v13 = *(int *)(a3 + 36);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(unsigned char *)(a1 + 72) = v12;
    uint64_t v16 = sub_22D2BBFF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return a1;
}

uint64_t destroy for PBAssociatedData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_22CFF5630(*(void *)(a1 + 16), *(void *)(a1 + 24));
  sub_22CFF5630(*(void *)(a1 + 32), *(void *)(a1 + 40));
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  unint64_t v8 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_22CFF9B64(v7, v8);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  unint64_t v10 = *(void *)(a2 + 40);
  sub_22CFF9B64(v9, v10);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  char v11 = *(unsigned char *)(a2 + 72);
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)(a1 + 72) = v11;
  uint64_t v15 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t assignWithCopy for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_22CFF9B64(v6, v7);
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  sub_22CFF5630(v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  unint64_t v11 = *(void *)(a2 + 40);
  sub_22CFF9B64(v10, v11);
  uint64_t v12 = *(void *)(a1 + 32);
  unint64_t v13 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  sub_22CFF5630(v12, v13);
  uint64_t v14 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v14;
  uint64_t v15 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v15;
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a2 + v5;
  uint64_t v7 = a1 + v5;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, v6, v8);
  return a1;
}

uint64_t assignWithTake for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_22CFF5630(v7, v8);
  uint64_t v9 = *(void *)(a1 + 32);
  unint64_t v10 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_22CFF5630(v9, v10);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1E1220);
}

uint64_t sub_22D1E1220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBAssociatedData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1E12E4);
}

uint64_t sub_22D1E12E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D1E138C()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBNode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1E1450);
}

uint64_t sub_22D1E1450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PBNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1E1524);
}

uint64_t sub_22D1E1524(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_22D2BBFF0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_22D1E15E0()
{
  return type metadata accessor for PBNode._StorageClass(0);
}

void sub_22D1E15E8()
{
  sub_22D1E1868(319, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_22D1E16CC()
{
  unint64_t result = qword_2685422C8;
  if (!qword_2685422C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685422C8);
  }
  return result;
}

unint64_t sub_22D1E1720()
{
  unint64_t result = qword_2685422D0;
  if (!qword_2685422D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685422D0);
  }
  return result;
}

void sub_22D1E1774()
{
  if (!qword_2685422D8)
  {
    sub_22D1E1868(255, &qword_268542198, type metadata accessor for PBAssociatedData, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2685422D8);
    }
  }
}

uint64_t sub_22D1E1808(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_22D1E1868(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D1E18E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v76 = a7;
  uint64_t v73 = a6;
  uint64_t v72 = a5;
  uint64_t v69 = a3;
  uint64_t v68 = a2;
  uint64_t v11 = type metadata accessor for PBTypedData(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (uint64_t)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1E346C(0, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v67 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v63 = (uint64_t)&v61 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v61 - v19;
  uint64_t v21 = type metadata accessor for PBDateRange(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v61 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v61 - v29;
  uint64_t v31 = type metadata accessor for PBReference(0);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v66 = (uint64_t)&v61 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *(void *)(a1 + *(int *)(type metadata accessor for ClinicalSharingQueryOutput(0) + 20));
  uint64_t v75 = a8;
  *a8 = v33;
  swift_bridgeObjectRetain();
  uint64_t v71 = a4;
  swift_bridgeObjectRetain();
  sub_22D2BC920();
  uint64_t v65 = v82;
  unint64_t v64 = v83;
  uint64_t v34 = *(int *)(v12 + 28);
  uint64_t v74 = a1;
  uint64_t v35 = *(void *)(a1 + v34);
  swift_beginAccess();
  char v36 = *(unsigned char *)(v35 + 24);
  uint64_t v80 = *(void *)(v35 + 16);
  char v81 = v36;
  uint64_t v37 = v35
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1E1FAC(v37, (uint64_t)v20);
  char v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v38(v20, 1, v21) == 1)
  {
    *(void *)uint64_t v30 = 0;
    *((void *)v30 + 1) = 0xE000000000000000;
    *((void *)v30 + 2) = 0;
    *((void *)v30 + 3) = 0xE000000000000000;
    *((void *)v30 + 4) = 0;
    v30[40] = 1;
    sub_22D2BBFE0();
    sub_22D1E202C((uint64_t)v20);
  }
  else
  {
    sub_22D1E2150((uint64_t)v20, (uint64_t)v30, type metadata accessor for PBDateRange);
  }
  uint64_t v39 = *((void *)v30 + 1);
  uint64_t v62 = *(void *)v30;
  swift_bridgeObjectRetain();
  sub_22D1E20A4((uint64_t)v30, type metadata accessor for PBDateRange);
  uint64_t v40 = v35
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  uint64_t v41 = v63;
  sub_22D1E1FAC(v40, v63);
  unsigned int v42 = v38((char *)v41, 1, v21);
  uint64_t v43 = (uint64_t)v67;
  if (v42 == 1)
  {
    *(void *)uint64_t v28 = 0;
    *((void *)v28 + 1) = 0xE000000000000000;
    *((void *)v28 + 2) = 0;
    *((void *)v28 + 3) = 0xE000000000000000;
    *((void *)v28 + 4) = 0;
    v28[40] = 1;
    sub_22D2BBFE0();
    sub_22D1E202C(v41);
  }
  else
  {
    sub_22D1E2150(v41, (uint64_t)v28, type metadata accessor for PBDateRange);
  }
  uint64_t v44 = *((void *)v28 + 2);
  uint64_t v45 = *((void *)v28 + 3);
  swift_bridgeObjectRetain();
  sub_22D1E20A4((uint64_t)v28, type metadata accessor for PBDateRange);
  uint64_t v46 = v35
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  sub_22D1E1FAC(v46, v43);
  if (v38((char *)v43, 1, v21) == 1)
  {
    *(void *)unint64_t v25 = 0;
    *((void *)v25 + 1) = 0xE000000000000000;
    *((void *)v25 + 2) = 0;
    *((void *)v25 + 3) = 0xE000000000000000;
    *((void *)v25 + 4) = 0;
    unsigned char v25[40] = 1;
    sub_22D2BBFE0();
    sub_22D1E202C(v43);
  }
  else
  {
    sub_22D1E2150(v43, (uint64_t)v25, type metadata accessor for PBDateRange);
  }
  uint64_t v47 = *((void *)v25 + 4);
  char v48 = v25[40];
  sub_22D1E20A4((uint64_t)v25, type metadata accessor for PBDateRange);
  uint64_t v77 = v47;
  char v78 = v48;
  char v79 = 0;
  uint64_t v60 = v45;
  uint64_t v49 = v66;
  uint64_t v50 = v69;
  uint64_t v51 = v71;
  sub_22D03BDC4(v69, v71, v65, v64, &v80, v62, v39, v44, v66, v60, &v77);
  uint64_t v52 = sub_22D2BC940();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v76, v52);
  sub_22D074530(v68);
  uint64_t v53 = (int *)type metadata accessor for ClinicalSharingDataNodeInfo();
  uint64_t v54 = v75;
  sub_22D1E2150(v49, (uint64_t)v75 + v53[5], type metadata accessor for PBReference);
  uint64_t v55 = (void *)((char *)v54 + v53[6]);
  *uint64_t v55 = v50;
  v55[1] = v51;
  uint64_t v56 = v73;
  uint64_t v57 = v74;
  v55[2] = v72;
  v55[3] = v56;
  uint64_t v58 = v70;
  sub_22D090540(v57, v70);
  sub_22D1E20A4(v57, type metadata accessor for ClinicalSharingQueryOutput);
  return sub_22D1E2150(v58, (uint64_t)v54 + v53[7], type metadata accessor for PBTypedData);
}

uint64_t sub_22D1E1FAC(uint64_t a1, uint64_t a2)
{
  sub_22D1E346C(0, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D1E202C(uint64_t a1)
{
  sub_22D1E346C(0, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D1E20A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for ClinicalSharingDataNodeInfo()
{
  uint64_t result = qword_2685422E0;
  if (!qword_2685422E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D1E2150(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

char *sub_22D1E21B8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = (char *)a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22D2BBFF0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = type metadata accessor for PBReference(0);
    *(void *)&v9[*(int *)(v13 + 20)] = *(void *)&v10[*(int *)(v13 + 20)];
    uint64_t v14 = a3[6];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *(void *)uint64_t v15 = *v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = v16[2];
    unint64_t v19 = v16[3];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_22CFF9B64(v18, v19);
    *((void *)v15 + 2) = v18;
    *((void *)v15 + 3) = v19;
    uint64_t v20 = a3[7];
    uint64_t v21 = &v7[v20];
    uint64_t v22 = (char *)a2 + v20;
    v12(&v7[v20], v22, v11);
    uint64_t v23 = type metadata accessor for PBTypedData(0);
    *(void *)&v21[*(int *)(v23 + 20)] = *(void *)&v22[*(int *)(v23 + 20)];
  }
  swift_retain();
  return v7;
}

uint64_t sub_22D1E232C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  type metadata accessor for PBReference(0);
  swift_release();
  uint64_t v7 = a1 + a2[6];
  swift_bridgeObjectRelease();
  sub_22CFF5630(*(void *)(v7 + 16), *(void *)(v7 + 24));
  v6(a1 + a2[7], v5);
  type metadata accessor for PBTypedData(0);
  return swift_release();
}

char *sub_22D1E2414(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = type metadata accessor for PBReference(0);
  *(void *)&v7[*(int *)(v11 + 20)] = *(void *)&v8[*(int *)(v11 + 20)];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *(void *)uint64_t v13 = *v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = v14[2];
  unint64_t v17 = v14[3];
  swift_retain();
  swift_bridgeObjectRetain();
  sub_22CFF9B64(v16, v17);
  *((void *)v13 + 2) = v16;
  *((void *)v13 + 3) = v17;
  uint64_t v18 = a3[7];
  unint64_t v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  v10(&a1[v18], v20, v9);
  uint64_t v21 = type metadata accessor for PBTypedData(0);
  *(void *)&v19[*(int *)(v21 + 20)] = *(void *)&v20[*(int *)(v21 + 20)];
  swift_retain();
  return a1;
}

char *sub_22D1E2540(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = type metadata accessor for PBReference(0);
  *(void *)&v7[*(int *)(v11 + 20)] = *(void *)&v8[*(int *)(v11 + 20)];
  swift_retain();
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  *(void *)uint64_t v13 = *(void *)((char *)a2 + v12);
  *((void *)v13 + 1) = *(void *)((char *)a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v14 + 2);
  unint64_t v16 = *((void *)v14 + 3);
  sub_22CFF9B64(v15, v16);
  uint64_t v17 = *((void *)v13 + 2);
  unint64_t v18 = *((void *)v13 + 3);
  *((void *)v13 + 2) = v15;
  *((void *)v13 + 3) = v16;
  sub_22CFF5630(v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (char *)a2 + v19;
  v10(&a1[v19], v21, v9);
  uint64_t v22 = type metadata accessor for PBTypedData(0);
  *(void *)&v20[*(int *)(v22 + 20)] = *(void *)&v21[*(int *)(v22 + 20)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_22D1E26A4(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = type metadata accessor for PBReference(0);
  *(void *)&v7[*(int *)(v11 + 20)] = *(void *)&v8[*(int *)(v11 + 20)];
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = (_OWORD *)((char *)a2 + v12);
  long long v16 = v15[1];
  *(_OWORD *)uint64_t v14 = *v15;
  *((_OWORD *)v14 + 1) = v16;
  uint64_t v17 = &a1[v13];
  unint64_t v18 = (char *)a2 + v13;
  v10(&a1[v13], v18, v9);
  uint64_t v19 = type metadata accessor for PBTypedData(0);
  *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
  return a1;
}

char *sub_22D1E2798(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = type metadata accessor for PBReference(0);
  *(void *)&v7[*(int *)(v11 + 20)] = *(void *)&v8[*(int *)(v11 + 20)];
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)((char *)a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)((char *)a2 + v12);
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)v13 + 2);
  unint64_t v17 = *((void *)v13 + 3);
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  sub_22CFF5630(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  v10(&a1[v18], v20, v9);
  uint64_t v21 = type metadata accessor for PBTypedData(0);
  *(void *)&v19[*(int *)(v21 + 20)] = *(void *)&v20[*(int *)(v21 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_22D1E28C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1E28D4);
}

uint64_t sub_22D1E28D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PBReference(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for PBTypedData(0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_22D1E2A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1E2A14);
}

void *sub_22D1E2A14(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PBReference(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for PBTypedData(0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_22D1E2B40()
{
  uint64_t result = type metadata accessor for PBReference(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PBTypedData(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22D1E2C20(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_22D2BD730();
    swift_bridgeObjectRetain();
    sub_22D2BCC70();
    uint64_t v18 = sub_22D2BD760();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_22D2BD660() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_22D2BD660() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_22D1E2EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v48 = (char *)&v35 - v9;
  sub_22D1E346C(0, &qword_26AEC22D8, MEMORY[0x263F07508]);
  uint64_t result = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v35 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v14 = 0;
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v38 = a1 + 56;
    uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v15;
    int64_t v39 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v44 = v5 + 48;
    uint64_t v45 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v46 = a2 + 56;
    uint64_t v47 = v5 + 16;
    uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v36 = v5;
    uint64_t v37 = a1;
    uint64_t v35 = v13;
    if (!v18) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v41 = (v18 - 1) & v18;
    int64_t v42 = v14;
    for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
    {
      uint64_t v25 = *(void *)(v5 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
      uint64_t v27 = 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1) {
        return v27;
      }
      (*v43)(v48, v13, v4);
      sub_22D058D88((unint64_t *)&qword_26AEC0F50);
      uint64_t v28 = sub_22D2BCB30();
      uint64_t v29 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v30 = v28 & ~v29;
      if (((*(void *)(v46 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      {
        (*v19)(v48, v4);
        return 0;
      }
      uint64_t v40 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v31 = a2;
      uint64_t v32 = ~v29;
      while (1)
      {
        v26(v8, *(void *)(v31 + 48) + v30 * v25, v4);
        sub_22D058D88(&qword_26853E318);
        char v33 = sub_22D2BCB90();
        uint64_t v34 = *v19;
        (*v19)(v8, v4);
        if (v33) {
          break;
        }
        unint64_t v30 = (v30 + 1) & v32;
        if (((*(void *)(v46 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        {
          v34(v48, v4);
          return 0;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v48, v4);
      a2 = v31;
      uint64_t v5 = v36;
      a1 = v37;
      uint64_t v13 = v35;
      unint64_t v18 = v41;
      int64_t v14 = v42;
      if (v41) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v21 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (v21 >= v39) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v21);
      int64_t v23 = v14 + 1;
      if (!v22)
      {
        int64_t v23 = v14 + 2;
        if (v14 + 2 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 3;
          if (v14 + 3 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = *(void *)(v38 + 8 * v23);
          if (!v22)
          {
            uint64_t v24 = v14 + 4;
            if (v14 + 4 >= v39)
            {
LABEL_34:
              uint64_t v27 = 1;
              (*v45)(v13, 1, 1, v4);
              return v27;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v24);
            if (!v22)
            {
              while (1)
              {
                int64_t v23 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_36;
                }
                if (v23 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = *(void *)(v38 + 8 * v23);
                ++v24;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v23 = v14 + 4;
          }
        }
      }
LABEL_21:
      uint64_t v41 = (v22 - 1) & v22;
      int64_t v42 = v23;
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t sub_22D1E337C(uint64_t *a1, uint64_t *a2)
{
  if ((sub_22D1E2EA8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for ClinicalSharingDataNodeInfo();
  if ((static PBReference.== infix(_:_:)((uint64_t)a1 + v4[5], (uint64_t)a2 + v4[5]) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = v4[6];
  uint64_t v6 = *(uint64_t *)((char *)a1 + v5);
  uint64_t v7 = *(uint64_t *)((char *)a1 + v5 + 8);
  uint64_t v8 = *(uint64_t *)((char *)a1 + v5 + 16);
  unint64_t v9 = *(uint64_t *)((char *)a1 + v5 + 24);
  uint64_t v10 = (uint64_t *)((char *)a2 + v5);
  uint64_t v11 = v10[2];
  unint64_t v12 = v10[3];
  BOOL v13 = v6 == *v10 && v7 == v10[1];
  if (!v13 && (sub_22D2BD660() & 1) == 0 || (sub_22D1158DC(v8, v9, v11, v12) & 1) == 0) {
    return 0;
  }
  uint64_t v14 = v4[7];
  return static PBTypedData.== infix(_:_:)((uint64_t)a1 + v14, (uint64_t)a2 + v14);
}

void sub_22D1E346C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_22D1E34C0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v29 = a7;
  id v30 = a8;
  uint64_t v26 = a6;
  id v27 = a3;
  id v28 = a4;
  uint64_t v11 = sub_22D2BB8E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_22D2BBC30();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a5, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v26, v11);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_22D034BAC;
  *(void *)(v20 + 24) = v19;
  objc_allocWithZone(MEMORY[0x263F0A8B8]);
  swift_retain();
  id v21 = v27;
  id v22 = v28;
  uint64_t v23 = v29;
  swift_bridgeObjectRetain();
  id v24 = sub_22D1E380C(v21, v22, (uint64_t)v18, (uint64_t)v14, v23, (uint64_t)sub_22D1E3804, v20);
  objc_msgSend(v30, sel_executeQuery_, v24);
}

uint64_t sub_22D1E3718()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D1E3750(int a1, void *a2, id a3, void (*a4)(id, BOOL))
{
  id v6 = a2;
  if (!a2)
  {
    id v6 = a3;
    if (!a3)
    {
      sub_22D04C890();
      id v6 = (id)swift_allocError();
      *(void *)uint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      *(unsigned char *)(v8 + 16) = 2;
    }
    id v9 = a3;
  }
  id v10 = a2;
  a4(v6, a2 == 0);
  sub_22D1E3AB8(v6);
}

void sub_22D1E3804(int a1, void *a2, void *a3)
{
  sub_22D1E3750(a1, a2, a3, *(void (**)(id, BOOL))(v3 + 16));
}

id sub_22D1E380C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v14 = (void *)sub_22D2BBBC0();
  uint64_t v15 = (void *)sub_22D2BB810();
  sub_22D1E39C0();
  uint64_t v16 = (void *)sub_22D2BCDF0();
  swift_bridgeObjectRelease();
  aBlock[4] = a6;
  aBlock[5] = a7;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22D1E3A00;
  aBlock[3] = &block_descriptor_13;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = objc_msgSend(v8, sel_initWithQuantityType_quantitySamplePredicate_anchorDate_intervalComponents_quantityRanges_resultsHandler_, a1, a2, v14, v15, v16, v17);
  _Block_release(v17);

  uint64_t v19 = sub_22D2BB8E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a4, v19);
  uint64_t v20 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a3, v20);
  swift_release();
  return v18;
}

unint64_t sub_22D1E39C0()
{
  unint64_t result = qword_2685422F0;
  if (!qword_2685422F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2685422F0);
  }
  return result;
}

void sub_22D1E3A00(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

void sub_22D1E3AB8(id a1)
{
}

unint64_t sub_22D1E3ACC(void *a1, void *a2, char a3)
{
  switch(a3)
  {
    case 1:
      unint64_t v9 = 0;
      sub_22D2BD310();
      sub_22D2BCCB0();
      sub_22D2BD630();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      return v9;
    case 2:
      id v6 = a1;
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000020;
      type metadata accessor for HKClinicalGatewayFeatureName(0);
      id v7 = v6;
      sub_22D2BCC30();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      sub_22D2BCCB0();
      sub_22D1E3E48(a1, a2, 2);
      return v9;
    case 4:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000017;
      goto LABEL_8;
    case 5:
    case 7:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000016;
      goto LABEL_8;
    case 6:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD00000000000001ALL;
      goto LABEL_8;
    case 8:
      unint64_t result = 0xD000000000000026;
      switch((unint64_t)a1)
      {
        case 1uLL:
          unint64_t result = 0xD00000000000002FLL;
          break;
        case 2uLL:
          unint64_t result = 0xD000000000000023;
          break;
        case 3uLL:
          unint64_t result = 0xD000000000000028;
          break;
        default:
          return result;
      }
      return result;
    default:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000022;
LABEL_8:
      unint64_t v9 = v5;
      sub_22D2BCCB0();
      return v9;
  }
}

unint64_t sub_22D1E3E3C()
{
  return sub_22D1E3ACC(*(void **)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_22D1E3E48(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    default:
      return;
  }
}

id sub_22D1E3EAC(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 2:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for ClinicalSharingDocumentReferenceInfoError(uint64_t a1)
{
}

uint64_t _s19HealthRecordsDaemon41ClinicalSharingDocumentReferenceInfoErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_22D1E3EAC(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingDocumentReferenceInfoError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_22D1E3EAC(*(id *)a2, v4, v5);
  id v6 = *(void **)a1;
  id v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_22D1E3E48(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingDocumentReferenceInfoError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  unint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_22D1E3E48(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingDocumentReferenceInfoError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 8) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingDocumentReferenceInfoError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 248;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22D1E40A8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 7u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 8);
  }
}

uint64_t sub_22D1E40C0(uint64_t result, unsigned int a2)
{
  if (a2 >= 8)
  {
    *(void *)__n128 result = a2 - 8;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 8;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingDocumentReferenceInfoError()
{
  return &type metadata for ClinicalSharingDocumentReferenceInfoError;
}

uint64_t sub_22D1E40E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  int v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_22D2BD650();
  if (v6)
  {
    id v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    id v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  unint64_t v9 = (void *)sub_22D2BB9B0();

  id v10 = objc_msgSend(v9, sel_hrs_safelyLoggableDescription);
  uint64_t v11 = sub_22D2BCBD0();

  return v11;
}

id sub_22D1E4268(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  id v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  uint64_t v8 = sub_22D2BD650();
  if (v8)
  {
    unint64_t v9 = (void *)v8;
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, a1);
  }
  else
  {
    unint64_t v9 = (void *)swift_allocError();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(v10, v7, a1);
  }
  uint64_t v11 = (void *)sub_22D2BB9B0();

  id v12 = objc_msgSend(v11, sel_domain);
  sub_22D2BCBD0();

  id v13 = objc_msgSend(v11, sel_code);
  sub_22D1E44D4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22D2BFF40;
  *(void *)(inited + 32) = sub_22D2BCBD0();
  *(void *)(inited + 40) = v15;
  uint64_t v16 = Error.hdhr_friendlyDescription.getter(a1, a2);
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v17;
  sub_22D0D3660(inited);
  id v18 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v19 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_22D2BCAF0();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v18, sel_initWithDomain_code_userInfo_, v19, v13, v20);

  return v21;
}

void sub_22D1E44D4()
{
  if (!qword_26AEC1FA0)
  {
    sub_22D0923D8();
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1FA0);
    }
  }
}

uint64_t Daemon.__allocating_init(machService:)(uint64_t a1, uint64_t a2)
{
  sub_22D1E56E0(0, &qword_26AEC1F90, &qword_26AEC1138, (uint64_t)&protocol descriptor for DaemonPlugin, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22D2BFF30;
  uint64_t v5 = type metadata accessor for ClinicalDocumentDownloaderPlugin();
  uint64_t v6 = swift_allocObject();
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = &off_26E062328;
  *(void *)(v4 + 32) = v6;
  id v7 = sub_22D1D1F30();
  *(void *)(v4 + 96) = type metadata accessor for ClinicalSharingDaemonPlugin();
  *(void *)(v4 + 104) = &off_26E062210;
  *(void *)(v4 + 72) = v7;
  uint64_t v8 = type metadata accessor for IngestionServiceDaemonPlugin();
  uint64_t v9 = swift_allocObject();
  *(void *)(v4 + 136) = v8;
  *(void *)(v4 + 144) = &off_26E0611E8;
  *(void *)(v4 + 112) = v9;
  uint64_t v10 = type metadata accessor for IssuerDirectoryDownloadDaemonPlugin();
  swift_allocObject();
  uint64_t v11 = sub_22D2A00D8();
  *(void *)(v4 + 176) = v10;
  *(void *)(v4 + 184) = &off_26E066E18;
  *(void *)(v4 + 152) = v11;
  uint64_t v12 = type metadata accessor for SignedClinicalDataDaemonPlugin();
  uint64_t v13 = swift_allocObject();
  *(void *)(v4 + 216) = v12;
  *(void *)(v4 + 224) = &off_26E064390;
  *(void *)(v4 + 192) = v13;
  type metadata accessor for Daemon();
  uint64_t v14 = swift_allocObject();
  id v15 = objc_allocWithZone((Class)type metadata accessor for DaemonXPCConnectionManager());
  id v16 = sub_22D2B9CA0(a1, a2);
  *(void *)(v14 + 16) = v4;
  *(void *)(v14 + 24) = v16;
  return v14;
}

uint64_t sub_22D1E46B0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v66 = *(void *)(v1 + 16);
  if (!v66) {
    goto LABEL_34;
  }
  uint64_t v2 = v1 + 32;
  swift_bridgeObjectRetain();
  unint64_t v3 = 0;
  uint64_t v63 = v1 + 32;
  uint64_t v64 = v1;
  do
  {
    if (v3 >= *(void *)(v1 + 16))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      swift_once();
      goto LABEL_35;
    }
    sub_22CFF4B00(v2 + 40 * v3, (uint64_t)v87);
    uint64_t v4 = v88;
    uint64_t v5 = v89;
    __swift_project_boxed_opaque_existential_1(v87, v88);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      unint64_t v68 = v3;
      uint64_t v8 = (uint64_t *)(*(void *)(v65 + 24)
                     + OBJC_IVAR____TtC19HealthRecordsDaemon26DaemonXPCConnectionManager_serviceMap);
      uint64_t v67 = v6;
      uint64_t v9 = v6 + 32;
      uint64_t v69 = v8;
      while (1)
      {
        sub_22CFF4B00(v9, (uint64_t)v86);
        uint64_t v11 = (void *)*__swift_project_boxed_opaque_existential_1(v86, v86[3]);
        uint64_t v12 = type metadata accessor for DefaultDaemonXPCService();
        v85[3] = v12;
        v85[4] = &off_26E05CF18;
        v85[0] = v11;
        uint64_t v13 = (uint64_t *)(*__swift_project_boxed_opaque_existential_1(v85, v12)
                        + OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_identifier);
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        sub_22CFF4B00((uint64_t)v85, (uint64_t)&v83);
        swift_beginAccess();
        if (!v84)
        {
          id v35 = v11;
          swift_bridgeObjectRetain();
          sub_22D1E5658((uint64_t)&v83);
          swift_bridgeObjectRetain();
          unint64_t v36 = sub_22D04EB7C(v14, v15);
          char v38 = v37;
          swift_bridgeObjectRelease();
          if (v38)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v40 = *v8;
            *(void *)&long long v76 = *v8;
            *uint64_t v8 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_22D055BBC();
              uint64_t v40 = v76;
            }
            swift_bridgeObjectRelease();
            sub_22CFF8C10((long long *)(*(void *)(v40 + 56) + 40 * v36), (uint64_t)&v80);
            sub_22D1E5448(v36, v40);
            *uint64_t v8 = v40;
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v82 = 0;
            long long v80 = 0u;
            long long v81 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_22D1E5658((uint64_t)&v80);
          goto LABEL_10;
        }
        uint64_t v71 = v9;
        uint64_t v72 = v7;
        sub_22CFF8C10(&v83, (uint64_t)&v80);
        id v16 = v11;
        swift_bridgeObjectRetain();
        char v17 = swift_isUniquelyReferenced_nonNull_native();
        char v79 = (void *)*v8;
        id v18 = v79;
        *uint64_t v8 = 0x8000000000000000;
        uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v80, *((uint64_t *)&v81 + 1));
        uint64_t v70 = &v62;
        MEMORY[0x270FA5388](v19);
        id v21 = (uint64_t *)((char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
        (*(void (**)(uint64_t *))(v22 + 16))(v21);
        uint64_t v23 = *v21;
        uint64_t v77 = v12;
        char v78 = &off_26E05CF18;
        *(void *)&long long v76 = v23;
        uint64_t v24 = v14;
        uint64_t v25 = v15;
        unint64_t v27 = sub_22D04EB7C(v14, v15);
        uint64_t v28 = v18[2];
        BOOL v29 = (v26 & 1) == 0;
        uint64_t v30 = v28 + v29;
        if (__OFADD__(v28, v29))
        {
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        char v31 = v26;
        if (v18[3] >= v30)
        {
          if (v17)
          {
            uint64_t v34 = v79;
            if ((v26 & 1) == 0) {
              goto LABEL_23;
            }
          }
          else
          {
            sub_22D055BBC();
            uint64_t v34 = v79;
            if ((v31 & 1) == 0) {
              goto LABEL_23;
            }
          }
        }
        else
        {
          sub_22D0522C0(v30, v17);
          unint64_t v32 = sub_22D04EB7C(v24, v15);
          if ((v31 & 1) != (v33 & 1))
          {
            uint64_t result = sub_22D2BD6A0();
            __break(1u);
            return result;
          }
          unint64_t v27 = v32;
          uint64_t v34 = v79;
          if ((v31 & 1) == 0)
          {
LABEL_23:
            uint64_t v41 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v76, v77);
            MEMORY[0x270FA5388](v41);
            uint64_t v43 = (uint64_t *)((char *)&v62 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v44 + 16))(v43);
            uint64_t v45 = *v43;
            uint64_t v74 = v12;
            uint64_t v75 = &off_26E05CF18;
            *(void *)&long long v73 = v45;
            v34[(v27 >> 6) + 8] |= 1 << v27;
            uint64_t v46 = (uint64_t *)(v34[6] + 16 * v27);
            *uint64_t v46 = v24;
            v46[1] = v25;
            sub_22CFF8C10(&v73, v34[7] + 40 * v27);
            uint64_t v47 = v34[2];
            BOOL v48 = __OFADD__(v47, 1);
            uint64_t v49 = v47 + 1;
            if (v48) {
              goto LABEL_39;
            }
            v34[2] = v49;
            swift_bridgeObjectRetain();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v76);
            goto LABEL_9;
          }
        }
        uint64_t v10 = v34[7] + 40 * v27;
        __swift_destroy_boxed_opaque_existential_1(v10);
        sub_22CFF8C10(&v76, v10);
LABEL_9:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
        uint64_t v8 = v69;
        *uint64_t v69 = (uint64_t)v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v71;
        uint64_t v7 = v72;
LABEL_10:
        swift_endAccess();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
        v9 += 40;
        if (!--v7)
        {
          swift_bridgeObjectRelease();
          uint64_t v2 = v63;
          uint64_t v1 = v64;
          unint64_t v3 = v68;
          goto LABEL_4;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_4:
    ++v3;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
  }
  while (v3 != v66);
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(v1 + 16);
  if (v50)
  {
    swift_bridgeObjectRetain();
    do
    {
      sub_22CFF4B00(v2, (uint64_t)v87);
      uint64_t v51 = v88;
      uint64_t v52 = v89;
      __swift_project_boxed_opaque_existential_1(v87, v88);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v52);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      v2 += 40;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
  }
LABEL_34:
  sub_22D2B9E70();
  if (qword_26AEC1C58 != -1) {
    goto LABEL_41;
  }
LABEL_35:
  uint64_t v53 = sub_22D2BC390();
  __swift_project_value_buffer(v53, (uint64_t)qword_26AEC3C90);
  uint64_t v54 = sub_22D2BC380();
  os_log_type_t v55 = sub_22D2BD080();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = (uint8_t *)swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    *(_DWORD *)uint64_t v56 = 136315138;
    v87[0] = v57;
    uint64_t v58 = sub_22D2BCBD0();
    v86[0] = sub_22D0A4D24(v58, v59, v87);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v54, v55, "Daemon launch finished, posting %s", v56, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v57, -1, -1);
    MEMORY[0x230F7BDF0](v56, -1, -1);
  }

  sub_22D2BCBD0();
  uint64_t v60 = sub_22D2BCC40();
  swift_bridgeObjectRelease();
  notify_post((const char *)(v60 + 32));
  return swift_release();
}

uint64_t sub_22D1E4E4C()
{
  uint64_t result = sub_22D2BA110();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22CFF4B00(v4, (uint64_t)v7);
      uint64_t v5 = v8;
      uint64_t v6 = v9;
      __swift_project_boxed_opaque_existential_1(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      v4 += 40;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Daemon.deinit()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t Daemon.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_22D1E4F64(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_22D2BD290();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = 16 * v6;
        sub_22D2BD730();
        sub_22D054F04();
        sub_22D2BCB40();
        uint64_t result = sub_22D2BD760();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + v9);
        if (16 * v3 != v9 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_22D2BBC30() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22D1E518C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC90();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v37 = a2 + 64;
    unint64_t result = sub_22D2BD290();
    uint64_t v12 = v37;
    if ((*(void *)(v37 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v35 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v34 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v36 = v13;
      int64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v34(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_22D1E57A8();
        uint64_t v18 = sub_22D2BCB30();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            char v26 = (void *)(v25 + 8 * a1);
            unint64_t v27 = (void *)(v25 + 8 * v10);
            uint64_t v12 = v37;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 1))
            {
              void *v26 = *v27;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v37;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v28 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v28 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  uint64_t *v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22D1E5448(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_22D2BD290();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_22D2BD730();
        swift_bridgeObjectRetain();
        sub_22D2BCC70();
        uint64_t v11 = sub_22D2BD760();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          uint64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t type metadata accessor for Daemon()
{
  return self;
}

uint64_t sub_22D1E5658(uint64_t a1)
{
  sub_22D1E56E0(0, (unint64_t *)&qword_2685440F0, (unint64_t *)&qword_26AEC1130, (uint64_t)&protocol descriptor for DaemonXPCService, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22D1E56E0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_22D021C20(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t method lookup function for Daemon(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Daemon);
}

uint64_t dispatch thunk of Daemon.activate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of Daemon.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

unint64_t sub_22D1E57A8()
{
  unint64_t result = qword_26AEC0F50;
  if (!qword_26AEC0F50)
  {
    sub_22D2BBC90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC0F50);
  }
  return result;
}

void sub_22D1E5800(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 >= 6)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_22D2BC390();
    __swift_project_value_buffer(v4, (uint64_t)qword_26AEC3C90);
    uint64_t v5 = sub_22D2BC380();
    os_log_type_t v6 = sub_22D2BD070();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134217984;
      sub_22D2BD220();
      _os_log_impl(&dword_22CFEE000, v5, v6, "Unknown asserter type: %ld", v7, 0xCu);
      MEMORY[0x230F7BDF0](v7, -1, -1);
    }

    unint64_t v3 = 0;
  }
  else
  {
    unint64_t v3 = a1 + 1;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = 1;
}

uint64_t *sub_22D1E5938(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22D2BB6F0();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v7 + v13) = (uint64_t)v15;
    uint64_t v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v7 + v14) = (uint64_t)v16;
    uint64_t v17 = a3[8];
    uint64_t v18 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v7 + v17) = (uint64_t)v18;
    id v19 = v15;
    id v20 = v16;
    id v21 = v18;
  }
  return v7;
}

void sub_22D1E5A58(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  os_log_type_t v6 = *(void **)(a1 + a2[8]);
}

void *sub_22D1E5AFC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v13;
  uint64_t v14 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v16;
  id v17 = v13;
  id v18 = v14;
  id v19 = v16;
  return a1;
}

void *sub_22D1E5BD0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  uint64_t v14 = a3[7];
  uint64_t v15 = *(void **)((char *)a2 + v14);
  uint64_t v16 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = v15;
  id v17 = v15;

  uint64_t v18 = a3[8];
  id v19 = *(void **)((char *)a2 + v18);
  id v20 = *(void **)((char *)a1 + v18);
  *(void *)((char *)a1 + v18) = v19;
  id v21 = v19;

  return a1;
}

void *sub_22D1E5CB4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_22D1E5D60(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);

  uint64_t v12 = a3[7];
  id v13 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);

  uint64_t v14 = a3[8];
  uint64_t v15 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);

  return a1;
}

uint64_t sub_22D1E5E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1E5E44);
}

uint64_t sub_22D1E5E44(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BB6F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_22D1E5EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1E5F08);
}

void *sub_22D1E5F08(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BB6F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingActivitySummaryQuery()
{
  uint64_t result = qword_2685422F8;
  if (!qword_2685422F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D1E5FFC()
{
  uint64_t result = sub_22D2BB6F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22D1E60A8()
{
  uint64_t v1 = type metadata accessor for ClinicalSharingActivitySummaryQuery();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = sub_22D2BCFC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1E78B4(0, &qword_268542308, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  uint64_t v34 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v29 = (char *)&v27 - v10;
  sub_22D1E78B4(0, &qword_268542330, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  uint64_t v32 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v30 = (char *)&v27 - v13;
  sub_22CFF4B00(*v0 + 16, (uint64_t)v36);
  __swift_project_boxed_opaque_existential_1(v36, v36[3]);
  uint64_t v14 = (uint64_t)v0;
  uint64_t v28 = v0;
  id v15 = sub_22D1E6590();
  sub_22D2BCFF0();
  sub_22D1E7960(&qword_268542338, MEMORY[0x263F44AF8]);
  uint64_t v16 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  uint64_t v35 = v16;
  unint64_t v27 = type metadata accessor for ClinicalSharingActivitySummaryQuery;
  sub_22D1E80E0(v14, (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ClinicalSharingActivitySummaryQuery);
  unint64_t v17 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v18 = swift_allocObject();
  id v19 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1E81A8((uint64_t)v19, v18 + v17, (uint64_t (*)(void))type metadata accessor for ClinicalSharingActivitySummaryQuery);
  sub_22D1E77D4();
  type metadata accessor for PBTypedData(0);
  sub_22D1E7960(&qword_268542328, (void (*)(uint64_t))sub_22D1E77D4);
  id v20 = v29;
  sub_22D2BC730();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  sub_22D1E80E0((uint64_t)v28, (uint64_t)v19, (uint64_t (*)(void))v27);
  uint64_t v21 = swift_allocObject();
  sub_22D1E81A8((uint64_t)v19, v21 + v17, (uint64_t (*)(void))type metadata accessor for ClinicalSharingActivitySummaryQuery);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  uint64_t v22 = v30;
  uint64_t v23 = v33;
  sub_22D2BC3C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v23);
  sub_22D1E7BB4();
  uint64_t v24 = v31;
  uint64_t v25 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v24);
  return v25;
}

id sub_22D1E6590()
{
  sub_22D1E8210(0, &qword_26853DEE8, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  char v38 = (char *)&v32 - v2;
  uint64_t v41 = sub_22D2BBC30();
  uint64_t v43 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22D2BB8E0();
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v37 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = (char *)&v32 - v8;
  sub_22D1E8210(0, &qword_26853E7E0, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v9 = sub_22D2BBDE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_22D2C1A90;
  unint64_t v14 = v13 + v12;
  id v15 = *(void (**)(unint64_t, void, uint64_t))(v10 + 104);
  v15(v14, *MEMORY[0x263F07870], v9);
  v15(v14 + v11, *MEMORY[0x263F078A8], v9);
  v15(v14 + 2 * v11, *MEMORY[0x263F078A0], v9);
  v15(v14 + 3 * v11, *MEMORY[0x263F07878], v9);
  sub_22D0B3424(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v34 = (char *)v0 + *(int *)(type metadata accessor for ClinicalSharingActivitySummaryQuery() + 20);
  uint64_t v35 = v0;
  sub_22D2BB6C0();
  sub_22D2BBD00();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v43 + 8);
  v43 += 8;
  uint64_t v36 = v16;
  v16(v4, v41);
  uint64_t v17 = *v0 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar;
  uint64_t v18 = sub_22D2BBE00();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  id v20 = v38;
  v33(v38, v17, v18);
  uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
  v21(v20, 0, 1, v18);
  sub_22D2BB8D0();
  sub_22D2BB690();
  uint64_t v22 = v37;
  sub_22D2BBD00();
  swift_bridgeObjectRelease();
  v36(v4, v41);
  v33(v20, *v35 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v18);
  v21(v20, 0, 1, v18);
  uint64_t v23 = v22;
  sub_22D2BB8D0();
  uint64_t v24 = self;
  uint64_t v25 = v42;
  char v26 = (void *)sub_22D2BB810();
  unint64_t v27 = (void *)sub_22D2BB810();
  id v28 = objc_msgSend(v24, sel_predicateForActivitySummariesBetweenStartDateComponents_endDateComponents_, v26, v27);

  uint64_t v29 = v40;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v39 + 8);
  v30(v23, v40);
  v30(v25, v29);
  return v28;
}

uint64_t sub_22D1E6B18@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D1E8210(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - v6;
  sub_22D1E8210(0, &qword_26853D7A0, MEMORY[0x263F062D0], v4);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = type metadata accessor for PBDateRange(0);
  uint64_t v37 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PBActivitySummarySeries(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v34 - v18;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v35 = v11;
    uint64_t v36 = a2;
    sub_22D2BBFE0();
    uint64_t v20 = *(int *)(v14 + 20);
    if (qword_26853D1E0 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_2685406B8;
    *(void *)&v19[v20] = qword_2685406B8;
    MEMORY[0x270FA5388](v21);
    *(&v34 - 2) = v38;
    swift_retain();
    uint64_t v22 = sub_22D1E7C50(a1, (void (*)(void **))sub_22D1E7C28, (uint64_t)(&v34 - 4));
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBActivitySummarySeries._StorageClass(0);
      swift_allocObject();
      uint64_t v23 = swift_retain();
      *(void *)&v19[v20] = sub_22D1A5250(v23);
      swift_release();
    }
    uint64_t v24 = (uint64_t *)(*(void *)&v19[v20]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon23PBActivitySummarySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__activitySummaries);
    swift_beginAccess();
    uint64_t *v24 = v22;
    swift_bridgeObjectRelease();
    uint64_t v25 = v38 + *(int *)(type metadata accessor for ClinicalSharingActivitySummaryQuery() + 20);
    uint64_t v26 = sub_22D2BB6F0();
    uint64_t v27 = *(void *)(v26 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v10, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v10, 0, 1, v26);
    sub_22D22BA04(2, 1, v10);
    sub_22D1E8070((uint64_t)v10, &qword_26853D7A0, MEMORY[0x263F062D0]);
    sub_22D1E80E0((uint64_t)v13, (uint64_t)v7, type metadata accessor for PBDateRange);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v7, 0, 1, v35);
    uint64_t v28 = v36;
    sub_22D22D1FC((uint64_t)v7, v36);
    sub_22D1E8070((uint64_t)v7, &qword_26853D7B0, type metadata accessor for PBDateRange);
    sub_22D1E80E0((uint64_t)v19, (uint64_t)v17, type metadata accessor for PBActivitySummarySeries);
    PBTypedData.activitySummaries.setter((uint64_t)v17);
    sub_22D1E8148((uint64_t)v13, type metadata accessor for PBDateRange);
    sub_22D1E8148((uint64_t)v19, type metadata accessor for PBActivitySummarySeries);
    uint64_t v29 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
  uint64_t v32 = type metadata accessor for PBTypedData(0);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
  return v33(a2, 1, 1, v32);
}

void sub_22D1E70CC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_22D2BB8E0();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_22D2BBE00();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1E8210(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t v12 = sub_22D2BBC30();
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v52 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0xE000000000000000;
  type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
  sub_22D2BBFE0();
  id v14 = objc_msgSend(a1, sel_activeEnergyBurned);
  uint64_t v15 = (int *)type metadata accessor for ClinicalSharingActivitySummaryQuery();
  uint64_t v16 = v2;
  uint64_t v17 = *(void *)((char *)v2 + v15[7]);
  objc_msgSend(v14, sel_doubleValueForUnit_, v17);
  double v19 = v18;

  if ((~*(void *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v19 <= -2147483650.0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v19 >= 2147483650.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  *(_DWORD *)a2 = (int)v19;
  id v20 = objc_msgSend(a1, sel_activeEnergyBurnedGoal);
  objc_msgSend(v20, sel_doubleValueForUnit_, v17);
  double v22 = v21;

  if ((~*(void *)&v22 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v22 <= -2147483650.0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v22 >= 2147483650.0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(_DWORD *)(a2 + 4) = (int)v22;
  id v23 = objc_msgSend(a1, sel_appleExerciseTime);
  uint64_t v24 = *(void *)((char *)v2 + v15[8]);
  objc_msgSend(v23, sel_doubleValueForUnit_, v24);
  double v26 = v25;

  if ((~*(void *)&v26 & 0x7FF0000000000000) == 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v26 <= -2147483650.0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v26 >= 2147483650.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_DWORD *)(a2 + 8) = (int)v26;
  id v27 = objc_msgSend(a1, sel_appleExerciseTimeGoal);
  objc_msgSend(v27, sel_doubleValueForUnit_, v24);
  double v29 = v28;

  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v29 <= -2147483650.0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v29 >= 2147483650.0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  *(_DWORD *)(a2 + 12) = (int)v29;
  id v30 = objc_msgSend(a1, sel_appleStandHours);
  uint64_t v31 = v15[6];
  uint64_t v32 = *(void *)((char *)v2 + v31);
  objc_msgSend(v30, sel_doubleValueForUnit_, *(void *)((char *)v16 + v31));
  double v34 = v33;

  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v34 <= -2147483650.0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v34 >= 2147483650.0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  *(_DWORD *)(a2 + 16) = (int)v34;
  id v35 = objc_msgSend(a1, sel_appleStandHoursGoal);
  objc_msgSend(v35, sel_doubleValueForUnit_, v32);
  double v37 = v36;

  if ((~*(void *)&v37 & 0x7FF0000000000000) == 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v37 <= -2147483650.0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v37 >= 2147483650.0)
  {
LABEL_39:
    __break(1u);
    return;
  }
  *(_DWORD *)(a2 + 20) = (int)v37;
  uint64_t v38 = v53;
  uint64_t v39 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v8, *v16 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v55);
  uint64_t v40 = (void *)sub_22D2BBD30();
  id v41 = objc_msgSend(a1, sel_dateComponentsForCalendar_, v40);

  uint64_t v42 = v54;
  sub_22D2BB820();

  sub_22D2BBD50();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v57);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v39);
  uint64_t v44 = v58;
  uint64_t v43 = v59;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v11, 1, v59) == 1)
  {
    sub_22D1E8070((uint64_t)v11, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
  else
  {
    uint64_t v45 = v52;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v52, v11, v43);
    id v46 = *(id *)(*v16 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v47 = (void *)sub_22D2BBBC0();
    id v48 = objc_msgSend(v46, sel_stringFromDate_, v47);

    uint64_t v49 = sub_22D2BCBD0();
    uint64_t v51 = v50;

    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    swift_bridgeObjectRelease();
    *(void *)(a2 + 24) = v49;
    *(void *)(a2 + 32) = v51;
  }
}

void sub_22D1E77D4()
{
  if (!qword_268542310)
  {
    sub_22D1E8210(255, &qword_268542318, (uint64_t (*)(uint64_t))sub_22D1E7874, MEMORY[0x263F8D488]);
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542310);
    }
  }
}

unint64_t sub_22D1E7874()
{
  unint64_t result = qword_268542320;
  if (!qword_268542320)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268542320);
  }
  return result;
}

void sub_22D1E78B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_22D1E77D4();
    a3(255);
    sub_22D1E7960(&qword_268542328, (void (*)(uint64_t))sub_22D1E77D4);
    unint64_t v5 = sub_22D2BC3D0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_22D1E7960(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D1E79AC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D1E6B18(*a1, a2);
}

uint64_t objectdestroyTm_8()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingActivitySummaryQuery() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D1E7B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D22AA58(a1, 0, a2);
}

unint64_t sub_22D1E7BB4()
{
  unint64_t result = qword_268542340;
  if (!qword_268542340)
  {
    sub_22D1E78B4(255, &qword_268542330, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542340);
  }
  return result;
}

void sub_22D1E7C28(void **a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_22D1E7C50(uint64_t a1, void (*a2)(void **), uint64_t a3)
{
  uint64_t v4 = v3;
  double v34 = a2;
  uint64_t v35 = a3;
  uint64_t v6 = type metadata accessor for PBActivitySummarySeries.ActivitySummary(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v28 - v11;
  unint64_t v33 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62) {
    goto LABEL_44;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v38 = MEMORY[0x263F8EE78];
    int64_t v32 = v13 & ~(v13 >> 63);
    uint64_t result = sub_22D24BF74(0, v32, 0);
    if (v13 < 0)
    {
      __break(1u);
      return result;
    }
    double v28 = v4;
    uint64_t v15 = v38;
    if (!v13) {
      break;
    }
    uint64_t v29 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v33)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_22D2BD470();
    }
    else
    {
      uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v16 = 0;
    unint64_t v36 = a1 & 0xC000000000000001;
    id v30 = v12;
    while (v32 != v16)
    {
      if (v31 == v16) {
        goto LABEL_42;
      }
      if (v36)
      {
        id v17 = (id)MEMORY[0x230F7AF90](v16, a1);
      }
      else
      {
        if (v16 >= *(void *)(v29 + 16)) {
          goto LABEL_43;
        }
        id v17 = *(id *)(a1 + 8 * v16 + 32);
      }
      double v18 = v17;
      double v19 = (void *)MEMORY[0x230F7B690]();
      double v37 = v18;
      v34(&v37);

      uint64_t v38 = v15;
      unint64_t v21 = *(void *)(v15 + 16);
      unint64_t v20 = *(void *)(v15 + 24);
      uint64_t v4 = (void *)(v21 + 1);
      if (v21 >= v20 >> 1)
      {
        sub_22D24BF74(v20 > 1, v21 + 1, 1);
        uint64_t v15 = v38;
      }
      ++v16;
      *(void *)(v15 + 16) = v4;
      sub_22D1E81A8((uint64_t)v10, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v21, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      uint64_t v12 = v30;
      if (v13 == v16)
      {
        uint64_t v10 = (char *)v29;
        goto LABEL_20;
      }
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
  unint64_t v36 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
LABEL_20:
  if (a1 < 0) {
    int64_t v22 = a1;
  }
  else {
    int64_t v22 = (int64_t)v10;
  }
  int64_t v32 = v22;
  if (v33)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_22D2BD470();
      swift_bridgeObjectRelease();
      if (v13 == v23) {
        break;
      }
LABEL_27:
      if (v36)
      {
        id v24 = (id)MEMORY[0x230F7AF90](v13, a1);
      }
      else
      {
        if (v13 < 0)
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        if ((unint64_t)v13 >= *((void *)v10 + 2)) {
          goto LABEL_39;
        }
        id v24 = *(id *)(a1 + 8 * v13 + 32);
      }
      uint64_t v4 = v24;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      double v25 = (void *)MEMORY[0x230F7B690]();
      double v37 = v4;
      v34(&v37);

      uint64_t v38 = v15;
      unint64_t v27 = *(void *)(v15 + 16);
      unint64_t v26 = *(void *)(v15 + 24);
      uint64_t v4 = (void *)(v27 + 1);
      if (v27 >= v26 >> 1)
      {
        sub_22D24BF74(v26 > 1, v27 + 1, 1);
        uint64_t v15 = v38;
      }
      *(void *)(v15 + 16) = v4;
      sub_22D1E81A8((uint64_t)v12, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v27, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
      ++v13;
      if (!v33) {
        goto LABEL_24;
      }
    }
  }
  else
  {
LABEL_24:
    if (v13 != *((void *)v10 + 2)) {
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_22D1E8070(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D1E8210(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D1E80E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D1E8148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D1E81A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22D1E8210(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D1E8274()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    type metadata accessor for SignedClinicalDataManager();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = 0;
    *(void *)(v0 + 16) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_22D1E82CC(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_22D1E86CC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1E8798();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  uint64_t v24 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1E8274();
  uint64_t v14 = sub_22D1F375C(a1, 1);
  swift_release();
  uint64_t v25 = v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = v5;
  sub_22D1E889C(0, &qword_268542350, (unint64_t *)&unk_2685426C0);
  sub_22D030474(0, (unint64_t *)&qword_26853F040);
  sub_22D1E8914(&qword_2685426D0, &qword_268542350, (unint64_t *)&unk_2685426C0);
  sub_22D2BC780();
  swift_release();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v5;
  sub_22D1E889C(0, (unint64_t *)&qword_26853F038, (unint64_t *)&qword_26853F040);
  sub_22D1E89E8(&qword_268542360, (void (*)(uint64_t))sub_22D1E86CC);
  sub_22D1E8914((unint64_t *)&qword_26853F050, (unint64_t *)&qword_26853F038, (unint64_t *)&qword_26853F040);
  uint64_t v16 = v21;
  sub_22D2BC850();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v16);
  sub_22D1E89E8(&qword_268542368, (void (*)(uint64_t))sub_22D1E8798);
  uint64_t v17 = v23;
  uint64_t v18 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v17);
  return v18;
}

uint64_t sub_22D1E8670()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VerifiableHealthRecordsParsingService()
{
  return self;
}

void sub_22D1E86CC()
{
  if (!qword_268542348)
  {
    sub_22D1E889C(255, &qword_268542350, (unint64_t *)&unk_2685426C0);
    sub_22D030474(255, (unint64_t *)&qword_26853F040);
    sub_22D1E8914(&qword_2685426D0, &qword_268542350, (unint64_t *)&unk_2685426C0);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542348);
    }
  }
}

void sub_22D1E8798()
{
  if (!qword_268542358)
  {
    sub_22D1E86CC();
    sub_22D1E889C(255, (unint64_t *)&qword_26853F038, (unint64_t *)&qword_26853F040);
    sub_22D1E89E8(&qword_268542360, (void (*)(uint64_t))sub_22D1E86CC);
    sub_22D1E8914((unint64_t *)&qword_26853F050, (unint64_t *)&qword_26853F038, (unint64_t *)&qword_26853F040);
    unint64_t v0 = sub_22D2BC570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542358);
    }
  }
}

void sub_22D1E889C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_22D030474(255, a3);
    sub_22CFF49FC();
    unint64_t v4 = sub_22D2BC5E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D1E8914(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D1E889C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D1E8964()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D1E8974@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22D1E8A30(*a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_22D1E89A4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D1E89B4(void **a1)
{
  return swift_willThrow();
}

uint64_t sub_22D1E89E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D1E8A30(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_items);
  sub_22D030474(0, &qword_268542370);
  unint64_t v4 = sub_22D2BCE00();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v22 = a2;
    if (v5) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
    id v19 = objc_allocWithZone(MEMORY[0x263F45D40]);
    uint64_t v20 = (void *)sub_22D2BCDF0();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v19, sel_initWithOptions_localizedTypeDisplayNames_, v22, v20);

    return (uint64_t)v21;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_22D2BD470();
  uint64_t v5 = result;
  uint64_t v22 = a2;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x230F7AF90](v7, v4);
      }
      else {
        id v9 = *(id *)(v4 + 8 * v7 + 32);
      }
      uint64_t v10 = v9;
      id v11 = objc_msgSend(v9, sel_mainRecord);
      id v12 = objc_msgSend(v11, sel_recordTypeDisplayName);

      uint64_t v13 = sub_22D2BCBD0();
      uint64_t v15 = v14;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_22D2810D4(0, v8[2] + 1, 1, v8);
      }
      unint64_t v17 = v8[2];
      unint64_t v16 = v8[3];
      if (v17 >= v16 >> 1) {
        uint64_t v8 = sub_22D2810D4((void *)(v16 > 1), v17 + 1, 1, v8);
      }
      ++v7;
      v8[2] = v17 + 1;
      uint64_t v18 = &v8[2 * v17];
      v18[4] = v13;
      v18[5] = v15;
    }
    while (v5 != v7);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

id sub_22D1E8C6C(void *a1)
{
  uint64_t v2 = (void *)sub_22D2BB9B0();
  id v3 = objc_msgSend(v2, sel_domain);
  uint64_t v4 = sub_22D2BCBD0();
  uint64_t v6 = v5;

  if (v4 == 0xD000000000000023 && v6 == 0x800000022D2DCE90)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_8;
    }
  }
  id v8 = objc_msgSend(v2, sel_code);
  if (v8 == (id)104)
  {
    sub_22D2BCBD0();
    id v16 = objc_msgSend(v2, sel_userInfo);
    sub_22D2BCB00();

    id v17 = objc_allocWithZone(MEMORY[0x263F087E8]);
    id v11 = (void *)sub_22D2BCBA0();
    swift_bridgeObjectRelease();
    id v12 = (void *)sub_22D2BCAF0();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v11, 1, v12);
    goto LABEL_10;
  }
  if (v8 != (id)103)
  {
LABEL_8:

    id v14 = a1;
    return a1;
  }
  sub_22D2BCBD0();
  id v9 = objc_msgSend(v2, sel_userInfo);
  sub_22D2BCB00();

  id v10 = objc_allocWithZone(MEMORY[0x263F087E8]);
  id v11 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  id v12 = (void *)sub_22D2BCAF0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v10, sel_initWithDomain_code_userInfo_, v11, 2, v12);
LABEL_10:
  id v18 = v13;

  return v18;
}

HealthRecordsDaemon::VCJWK::KeyType_optional __swiftcall VCJWK.KeyType.init(rawValue:)(Swift::String rawValue)
{
  return (HealthRecordsDaemon::VCJWK::KeyType_optional)sub_22D1E91F4(v1);
}

uint64_t VCJWK.KeyType.rawValue.getter()
{
  uint64_t v1 = 17221;
  if (*v0 != 1) {
    uint64_t v1 = 5262159;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 4281170;
  }
}

uint64_t sub_22D1E8F5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22D0B9034(*a1, *a2);
}

uint64_t sub_22D1E8F68()
{
  return sub_22D2BD760();
}

uint64_t sub_22D1E8FF0()
{
  sub_22D2BCC70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D1E9064()
{
  return sub_22D2BD760();
}

HealthRecordsDaemon::VCJWK::KeyType_optional sub_22D1E90E8(Swift::String *a1)
{
  return VCJWK.KeyType.init(rawValue:)(*a1);
}

void sub_22D1E90F4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE300000000000000;
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 17221;
  if (v2 != 1)
  {
    uint64_t v5 = 5262159;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 4281170;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_22D1E9138()
{
  return sub_22D2BCDC0();
}

uint64_t sub_22D1E9198()
{
  return sub_22D2BCDA0();
}

HealthRecordsDaemon::VCJWK::Curve_optional __swiftcall VCJWK.Curve.init(rawValue:)(Swift::String rawValue)
{
  return (HealthRecordsDaemon::VCJWK::Curve_optional)sub_22D1E91F4(v1);
}

uint64_t sub_22D1E91F4@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_22D2BD4E0();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t VCJWK.Curve.rawValue.getter()
{
  uint64_t v1 = 0x3635322D50;
  if (*v0 != 1) {
    uint64_t v1 = 0x39313535326445;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6B36353270636573;
  }
}

uint64_t sub_22D1E92A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22D0B8F20(*a1, *a2);
}

uint64_t sub_22D1E92B4()
{
  return sub_22D2BD760();
}

uint64_t sub_22D1E9358()
{
  sub_22D2BCC70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D1E93E8()
{
  return sub_22D2BD760();
}

HealthRecordsDaemon::VCJWK::Curve_optional sub_22D1E9488(Swift::String *a1)
{
  return VCJWK.Curve.init(rawValue:)(*a1);
}

void sub_22D1E9494(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000031;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x3635322D50;
  if (v2 != 1)
  {
    uint64_t v5 = 0x39313535326445;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6B36353270636573;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_22D1E94F4()
{
  return sub_22D2BCDC0();
}

uint64_t sub_22D1E9554()
{
  return sub_22D2BCDA0();
}

void VCJWK.kty.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void VCJWK.crv.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

uint64_t VCJWK.alg.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.ext.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t VCJWK.e.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.n.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.x.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.y.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.kid.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VCJWK.keyOps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VCJWK.use.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 VCJWK.init(kty:crv:alg:ext:e:n:x:y:keyOps:kid:use:)@<Q0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, __n128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  __n128 result = a11;
  char v18 = *a2;
  *(unsigned char *)a9 = *a1;
  *(unsigned char *)(a9 + 1) = v18;
  *(void *)(a9 + 8) = a3;
  *(void *)(a9 + 16) = a4;
  *(unsigned char *)(a9 + 24) = a5;
  *(void *)(a9 + 32) = a6;
  *(void *)(a9 + 40) = a7;
  *(void *)(a9 + 48) = a8;
  *(_OWORD *)(a9 + 56) = a10;
  *(__n128 *)(a9 + 72) = a11;
  *(void *)(a9 + 88) = a12;
  *(void *)(a9 + 96) = a14;
  *(void *)(a9 + 104) = a15;
  *(void *)(a9 + 112) = a13;
  *(void *)(a9 + 120) = a16;
  *(void *)(a9 + 128) = a17;
  return result;
}

__n128 VCJWK.init(data:)@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22D2BB600();
  swift_allocObject();
  sub_22D2BB5F0();
  sub_22D1E984C();
  sub_22D2BB5E0();
  sub_22CFF5630(a1, a2);
  swift_release();
  if (!v3)
  {
    *(_OWORD *)(a3 + 96) = v14;
    *(_OWORD *)(a3 + 112) = v15;
    *(void *)(a3 + 128) = v16;
    *(_OWORD *)(a3 + 32) = v10;
    *(_OWORD *)(a3 + 48) = v11;
    *(_OWORD *)(a3 + 64) = v12;
    *(_OWORD *)(a3 + 80) = v13;
    __n128 result = v9;
    *(_OWORD *)a3 = v8;
    *(__n128 *)(a3 + 16) = v9;
  }
  return result;
}

unint64_t sub_22D1E984C()
{
  unint64_t result = qword_268542378;
  if (!qword_268542378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542378);
  }
  return result;
}

uint64_t sub_22D1E98A0(char a1)
{
  uint64_t result = 7959659;
  switch(a1)
  {
    case 1:
      uint64_t result = 7762531;
      break;
    case 2:
      uint64_t result = 6777953;
      break;
    case 3:
      uint64_t result = 7632997;
      break;
    case 4:
      uint64_t result = 101;
      break;
    case 5:
      uint64_t result = 110;
      break;
    case 6:
      uint64_t result = 120;
      break;
    case 7:
      uint64_t result = 121;
      break;
    case 8:
      uint64_t result = 6580587;
      break;
    case 9:
      uint64_t result = 0x73706F5F79656BLL;
      break;
    case 10:
      uint64_t result = 6648693;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22D1E9984(char a1)
{
  uint64_t result = 7959659;
  switch(a1)
  {
    case 1:
      uint64_t result = 7762531;
      break;
    case 2:
      uint64_t result = 6777953;
      break;
    case 3:
      uint64_t result = 7632997;
      break;
    case 4:
      uint64_t result = 101;
      break;
    case 5:
      uint64_t result = 110;
      break;
    case 6:
      uint64_t result = 120;
      break;
    case 7:
      uint64_t result = 121;
      break;
    case 8:
      uint64_t result = 6580587;
      break;
    case 9:
      uint64_t result = 0x73706F5F79656BLL;
      break;
    case 10:
      uint64_t result = 6648693;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22D1E9A68(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_22D1E98A0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_22D1E98A0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_22D2BD660();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22D1E9AF4()
{
  char v1 = *v0;
  sub_22D2BD730();
  sub_22D1E98A0(v1);
  sub_22D2BCC70();
  swift_bridgeObjectRelease();
  return sub_22D2BD760();
}

uint64_t sub_22D1E9B58()
{
  sub_22D1E98A0(*v0);
  sub_22D2BCC70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D1E9BAC()
{
  char v1 = *v0;
  sub_22D2BD730();
  sub_22D1E98A0(v1);
  sub_22D2BCC70();
  swift_bridgeObjectRelease();
  return sub_22D2BD760();
}

uint64_t sub_22D1E9C0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22D1EC0E8();
  *a1 = result;
  return result;
}

uint64_t sub_22D1E9C3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22D1E98A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22D1E9C68()
{
  return sub_22D1E9984(*v0);
}

uint64_t sub_22D1E9C70@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22D1EC0E8();
  *a1 = result;
  return result;
}

void sub_22D1E9C98(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_22D1E9CA4(uint64_t a1)
{
  unint64_t v2 = sub_22D1EB3C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D1E9CE0(uint64_t a1)
{
  unint64_t v2 = sub_22D1EB3C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VCJWK.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 1);
  uint64_t v2 = *(void *)(v0 + 16);
  int v13 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 128);
  sub_22D2BCC70();
  swift_bridgeObjectRelease();
  sub_22D2BD750();
  if (v1 != 3)
  {
    sub_22D2BCC70();
    swift_bridgeObjectRelease();
  }
  sub_22D2BD750();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_22D2BCC70();
    swift_bridgeObjectRelease();
  }
  if (v13 != 2) {
    sub_22D2BD750();
  }
  sub_22D2BD750();
  if (v3)
  {
    sub_22D2BD750();
    swift_bridgeObjectRetain();
    sub_22D2BCC70();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_22D2BD750();
    if (v11)
    {
LABEL_9:
      sub_22D2BD750();
      swift_bridgeObjectRetain();
      sub_22D2BCC70();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
  }
  sub_22D2BD750();
  if (v12)
  {
LABEL_10:
    sub_22D2BD750();
    swift_bridgeObjectRetain();
    sub_22D2BCC70();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  sub_22D2BD750();
  if (v4)
  {
LABEL_11:
    sub_22D2BD750();
    swift_bridgeObjectRetain();
    sub_22D2BCC70();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  sub_22D2BD750();
  if (v5)
  {
LABEL_12:
    sub_22D2BD750();
    swift_bridgeObjectRetain();
    sub_22D2BCC70();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_22D2BD750();
  if (v6)
  {
LABEL_13:
    sub_22D2BD750();
    sub_22D2BD740();
    uint64_t v8 = *(void *)(v6 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = v6 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_22D2BCC70();
        swift_bridgeObjectRelease();
        v9 += 16;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
    if (v7) {
      goto LABEL_18;
    }
    return sub_22D2BD750();
  }
LABEL_26:
  sub_22D2BD750();
  if (!v7) {
    return sub_22D2BD750();
  }
LABEL_18:
  sub_22D2BD750();
  swift_bridgeObjectRetain();
  sub_22D2BCC70();
  return swift_bridgeObjectRelease();
}

uint64_t VCJWK.encode(to:)(void *a1)
{
  sub_22D1EB4C4(0, &qword_268542380, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v19 - v6;
  char v8 = *v1;
  int v36 = v1[1];
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v32 = *((void *)v1 + 2);
  uint64_t v33 = v9;
  int v31 = v1[24];
  uint64_t v10 = *((void *)v1 + 5);
  uint64_t v29 = *((void *)v1 + 4);
  uint64_t v30 = v10;
  uint64_t v11 = *((void *)v1 + 7);
  uint64_t v27 = *((void *)v1 + 6);
  uint64_t v28 = v11;
  uint64_t v12 = *((void *)v1 + 9);
  uint64_t v25 = *((void *)v1 + 8);
  uint64_t v26 = v12;
  uint64_t v13 = *((void *)v1 + 11);
  uint64_t v23 = *((void *)v1 + 10);
  uint64_t v24 = v13;
  uint64_t v14 = *((void *)v1 + 13);
  uint64_t v21 = *((void *)v1 + 12);
  uint64_t v22 = v14;
  uint64_t v15 = *((void *)v1 + 14);
  uint64_t v16 = *((void *)v1 + 16);
  v19[1] = *((void *)v1 + 15);
  uint64_t v20 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D1EB3C8();
  sub_22D2BD7B0();
  LOBYTE(v35) = v8;
  char v37 = 0;
  sub_22D1EB41C();
  uint64_t v17 = v34;
  sub_22D2BD5F0();
  if (!v17)
  {
    uint64_t v34 = v16;
    LOBYTE(v35) = v36;
    char v37 = 1;
    sub_22D1EB470();
    sub_22D2BD5B0();
    LOBYTE(v35) = 2;
    sub_22D2BD580();
    LOBYTE(v35) = 3;
    sub_22D2BD590();
    LOBYTE(v35) = 4;
    sub_22D2BD580();
    LOBYTE(v35) = 5;
    sub_22D2BD580();
    LOBYTE(v35) = 6;
    sub_22D2BD580();
    LOBYTE(v35) = 7;
    sub_22D2BD580();
    LOBYTE(v35) = 8;
    sub_22D2BD580();
    uint64_t v35 = v20;
    char v37 = 9;
    sub_22D0B233C();
    sub_22D1EB5D0((unint64_t *)&qword_26853DE18);
    sub_22D2BD5B0();
    LOBYTE(v35) = 10;
    sub_22D2BD580();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VCJWK.hashValue.getter()
{
  return sub_22D2BD760();
}

uint64_t VCJWK.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D1EB4C4(0, &qword_2685423A0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = a1[3];
  uint64_t v84 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_22D1EB3C8();
  sub_22D2BD7A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  }
  uint64_t v11 = v7;
  uint64_t v51 = a2;
  LOBYTE(v56) = 0;
  sub_22D1EB528();
  sub_22D2BD560();
  int v12 = LOBYTE(v65[0]);
  LOBYTE(v56) = 1;
  sub_22D1EB57C();
  sub_22D2BD530();
  int v13 = LOBYTE(v65[0]);
  LOBYTE(v65[0]) = 2;
  uint64_t v49 = sub_22D2BD500();
  int v50 = v13;
  LOBYTE(v65[0]) = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  int v16 = sub_22D2BD510();
  uint64_t v55 = v15;
  int v48 = v16;
  LOBYTE(v65[0]) = 4;
  uint64_t v47 = sub_22D2BD500();
  LOBYTE(v65[0]) = 5;
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_22D2BD500();
  uint64_t v54 = v18;
  uint64_t v46 = v19;
  LOBYTE(v65[0]) = 6;
  uint64_t v53 = v20;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_22D2BD500();
  LOBYTE(v65[0]) = 7;
  uint64_t v52 = v21;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_22D2BD500();
  int v43 = v12;
  LOBYTE(v65[0]) = 8;
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_22D2BD500();
  uint64_t v25 = v24;
  uint64_t v26 = v23;
  sub_22D0B233C();
  LOBYTE(v56) = 9;
  sub_22D1EB5D0(&qword_2685423B8);
  swift_bridgeObjectRetain();
  sub_22D2BD530();
  char v81 = 10;
  uint64_t v41 = v65[0];
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_22D2BD500();
  uint64_t v40 = v27;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v6);
  LOBYTE(v56) = v43;
  BYTE1(v56) = v50;
  uint64_t v28 = v55;
  *((void *)&v56 + 1) = v49;
  *(void *)&long long v57 = v55;
  BYTE8(v57) = v48;
  *(void *)&long long v58 = v47;
  *((void *)&v58 + 1) = v54;
  uint64_t v29 = v52;
  uint64_t v30 = v53;
  *(void *)&long long v59 = v46;
  *((void *)&v59 + 1) = v53;
  *(void *)&long long v60 = v45;
  *((void *)&v60 + 1) = v52;
  *(void *)&long long v61 = v44;
  *((void *)&v61 + 1) = v23;
  uint64_t v31 = v41;
  *(void *)&long long v62 = v42;
  *((void *)&v62 + 1) = v25;
  *(void *)&long long v63 = v41;
  *((void *)&v63 + 1) = v39;
  uint64_t v64 = v40;
  sub_22D1EB630((uint64_t)&v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  long long v33 = v63;
  uint64_t v34 = v51;
  *(_OWORD *)(v51 + 96) = v62;
  *(_OWORD *)(v34 + 112) = v33;
  *(void *)(v34 + 128) = v64;
  long long v35 = v59;
  *(_OWORD *)(v34 + 32) = v58;
  *(_OWORD *)(v34 + 48) = v35;
  long long v36 = v61;
  *(_OWORD *)(v34 + 64) = v60;
  *(_OWORD *)(v34 + 80) = v36;
  long long v37 = v57;
  *(_OWORD *)uint64_t v34 = v56;
  *(_OWORD *)(v34 + 16) = v37;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  LOBYTE(v65[0]) = v43;
  BYTE1(v65[0]) = v50;
  *(_DWORD *)((char *)v65 + 2) = *(_DWORD *)&v82[7];
  HIWORD(v65[0]) = v83;
  v65[1] = v49;
  v65[2] = v28;
  char v66 = v48;
  *(_DWORD *)uint64_t v67 = *(_DWORD *)v82;
  *(_DWORD *)&v67[3] = *(_DWORD *)&v82[3];
  uint64_t v68 = v47;
  uint64_t v69 = v54;
  uint64_t v70 = v46;
  uint64_t v71 = v30;
  uint64_t v72 = v45;
  uint64_t v73 = v29;
  uint64_t v74 = v44;
  uint64_t v75 = v26;
  uint64_t v76 = v42;
  uint64_t v77 = v25;
  uint64_t v78 = v32;
  uint64_t v79 = v39;
  uint64_t v80 = v40;
  return sub_22D1EB6C4((uint64_t)v65);
}

uint64_t sub_22D1EADA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VCJWK.init(from:)(a1, a2);
}

uint64_t sub_22D1EADC0(void *a1)
{
  return VCJWK.encode(to:)(a1);
}

uint64_t sub_22D1EADDC()
{
  return sub_22D2BD760();
}

uint64_t sub_22D1EAE20()
{
  return sub_22D2BD760();
}

BOOL _s19HealthRecordsDaemon5VCJWKV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 4281170;
  if (!*(unsigned char *)a1)
  {
    unint64_t v3 = 0xE300000000000000;
    uint64_t v4 = 4281170;
    if (*(unsigned char *)a2) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  if (*(unsigned char *)a1 != 1)
  {
    unint64_t v3 = 0xE300000000000000;
    uint64_t v4 = 5262159;
    if (*(unsigned char *)a2) {
      goto LABEL_6;
    }
LABEL_9:
    unint64_t v5 = 0xE300000000000000;
    goto LABEL_11;
  }
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 17221;
  if (!*(unsigned char *)a2) {
    goto LABEL_9;
  }
LABEL_6:
  if (*(unsigned char *)a2 == 1)
  {
    unint64_t v5 = 0xE200000000000000;
    uint64_t v2 = 17221;
  }
  else
  {
    unint64_t v5 = 0xE300000000000000;
    uint64_t v2 = 5262159;
  }
LABEL_11:
  int v6 = *(unsigned __int8 *)(a1 + 1);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v47 = *(void *)(a1 + 32);
  uint64_t v51 = *(void *)(a1 + 40);
  uint64_t v52 = *(void *)(a1 + 8);
  uint64_t v43 = *(void *)(a1 + 48);
  uint64_t v49 = *(void *)(a1 + 56);
  uint64_t v39 = *(void *)(a1 + 64);
  uint64_t v45 = *(void *)(a1 + 72);
  uint64_t v35 = *(void *)(a1 + 80);
  uint64_t v41 = *(void *)(a1 + 88);
  uint64_t v33 = *(void *)(a1 + 96);
  uint64_t v37 = *(void *)(a1 + 104);
  uint64_t v29 = *(void *)(a1 + 128);
  int v8 = *(unsigned __int8 *)(a2 + 1);
  uint64_t v10 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v46 = *(void *)(a2 + 32);
  uint64_t v50 = *(void *)(a2 + 40);
  uint64_t v42 = *(void *)(a2 + 48);
  uint64_t v48 = *(void *)(a2 + 56);
  uint64_t v38 = *(void *)(a2 + 64);
  uint64_t v44 = *(void *)(a2 + 72);
  uint64_t v34 = *(void *)(a2 + 80);
  uint64_t v40 = *(void *)(a2 + 88);
  uint64_t v36 = *(void *)(a2 + 104);
  int v11 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v30 = *(void **)(a1 + 112);
  uint64_t v27 = *(void *)(a1 + 120);
  uint64_t v28 = *(void *)(a2 + 128);
  int v12 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v26 = *(void *)(a2 + 120);
  uint64_t v31 = *(void **)(a2 + 112);
  uint64_t v32 = *(void *)(a2 + 96);
  if (v4 == v2 && v3 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v13 & 1) == 0) {
      return result;
    }
  }
  if (v6 != 3)
  {
    if (v8 == 3) {
      return 0;
    }
    unint64_t v15 = 0xE900000000000031;
    uint64_t v16 = 0x6B36353270636573;
    if (v6)
    {
      if (v6 == 1)
      {
        unint64_t v17 = 0xE500000000000000;
        uint64_t v18 = 0x3635322D50;
        if (!v8) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t v17 = 0xE700000000000000;
        uint64_t v18 = 0x39313535326445;
        if (!v8) {
          goto LABEL_28;
        }
      }
    }
    else
    {
      uint64_t v18 = 0x6B36353270636573;
      unint64_t v17 = 0xE900000000000031;
      if (!v8) {
        goto LABEL_28;
      }
    }
    if (v8 != 1)
    {
      unint64_t v15 = 0xE700000000000000;
      if (v18 != 0x39313535326445) {
        goto LABEL_33;
      }
      goto LABEL_31;
    }
    unint64_t v15 = 0xE500000000000000;
    uint64_t v16 = 0x3635322D50;
LABEL_28:
    if (v18 != v16)
    {
LABEL_33:
      char v19 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v19 & 1) == 0) {
        return result;
      }
      goto LABEL_34;
    }
LABEL_31:
    if (v17 == v15)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v8 != 3) {
    return 0;
  }
LABEL_34:
  if (!v7)
  {
    if (v9) {
      return 0;
    }
LABEL_41:
    if (v11 == 2)
    {
      if (v12 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v12 == 2 || ((((v11 & 1) == 0) ^ v12) & 1) == 0) {
        return result;
      }
    }
    if (v51)
    {
      if (!v50) {
        return 0;
      }
      if (v47 != v46 || v51 != v50)
      {
        char v21 = sub_22D2BD660();
        BOOL result = 0;
        if ((v21 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v50)
    {
      return 0;
    }
    if (v49)
    {
      if (!v48) {
        return 0;
      }
      if (v43 != v42 || v49 != v48)
      {
        char v22 = sub_22D2BD660();
        BOOL result = 0;
        if ((v22 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v48)
    {
      return 0;
    }
    if (v45)
    {
      if (!v44) {
        return 0;
      }
      if (v39 != v38 || v45 != v44)
      {
        char v23 = sub_22D2BD660();
        BOOL result = 0;
        if ((v23 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v44)
    {
      return 0;
    }
    if (v41)
    {
      if (!v40) {
        return 0;
      }
      if (v35 != v34 || v41 != v40)
      {
        char v24 = sub_22D2BD660();
        BOOL result = 0;
        if ((v24 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v40)
    {
      return 0;
    }
    if (v37)
    {
      if (!v36) {
        return 0;
      }
      if (v33 != v32 || v37 != v36)
      {
        char v25 = sub_22D2BD660();
        BOOL result = 0;
        if ((v25 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v36)
    {
      return 0;
    }
    if (v30)
    {
      if (!v31 || (sub_22D10F3F8(v30, v31) & 1) == 0) {
        return 0;
      }
    }
    else if (v31)
    {
      return 0;
    }
    if (v29) {
      return v28 && (v27 == v26 && v29 == v28 || (sub_22D2BD660() & 1) != 0);
    }
    return !v28;
  }
  if (!v9) {
    return 0;
  }
  if (v52 == v10 && v7 == v9) {
    goto LABEL_41;
  }
  char v20 = sub_22D2BD660();
  BOOL result = 0;
  if (v20) {
    goto LABEL_41;
  }
  return result;
}

unint64_t sub_22D1EB3C8()
{
  unint64_t result = qword_268542388;
  if (!qword_268542388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542388);
  }
  return result;
}

unint64_t sub_22D1EB41C()
{
  unint64_t result = qword_268542390;
  if (!qword_268542390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542390);
  }
  return result;
}

unint64_t sub_22D1EB470()
{
  unint64_t result = qword_268542398;
  if (!qword_268542398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542398);
  }
  return result;
}

void sub_22D1EB4C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_22D1EB3C8();
    unint64_t v7 = a3(a1, &type metadata for VCJWK.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_22D1EB528()
{
  unint64_t result = qword_2685423A8;
  if (!qword_2685423A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423A8);
  }
  return result;
}

unint64_t sub_22D1EB57C()
{
  unint64_t result = qword_2685423B0;
  if (!qword_2685423B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423B0);
  }
  return result;
}

uint64_t sub_22D1EB5D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D0B233C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D1EB630(uint64_t a1)
{
  return a1;
}

uint64_t sub_22D1EB6C4(uint64_t a1)
{
  return a1;
}

unint64_t sub_22D1EB75C()
{
  unint64_t result = qword_2685423C0;
  if (!qword_2685423C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423C0);
  }
  return result;
}

unint64_t sub_22D1EB7B4()
{
  unint64_t result = qword_2685423C8;
  if (!qword_2685423C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423C8);
  }
  return result;
}

unint64_t sub_22D1EB80C()
{
  unint64_t result = qword_2685423D0;
  if (!qword_2685423D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423D0);
  }
  return result;
}

uint64_t destroy for VCJWK()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VCJWK(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VCJWK(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for VCJWK(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VCJWK(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 136)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VCJWK(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 136) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VCJWK()
{
  return &type metadata for VCJWK;
}

ValueMetadata *type metadata accessor for VCJWK.KeyType()
{
  return &type metadata for VCJWK.KeyType;
}

uint64_t getEnumTagSinglePayload for SignedClinicalDataFHIROperationHandlerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19HealthRecordsDaemon5VCJWKV7KeyTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D1EBE14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VCJWK.Curve()
{
  return &type metadata for VCJWK.Curve;
}

uint64_t getEnumTagSinglePayload for VCJWK.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VCJWK.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D1EBFA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VCJWK.CodingKeys()
{
  return &type metadata for VCJWK.CodingKeys;
}

unint64_t sub_22D1EBFE4()
{
  unint64_t result = qword_2685423D8;
  if (!qword_2685423D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423D8);
  }
  return result;
}

unint64_t sub_22D1EC03C()
{
  unint64_t result = qword_2685423E0;
  if (!qword_2685423E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423E0);
  }
  return result;
}

unint64_t sub_22D1EC094()
{
  unint64_t result = qword_2685423E8;
  if (!qword_2685423E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423E8);
  }
  return result;
}

uint64_t sub_22D1EC0E8()
{
  unint64_t v0 = sub_22D2BD4E0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

unint64_t sub_22D1EC134()
{
  unint64_t result = qword_2685423F0;
  if (!qword_2685423F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423F0);
  }
  return result;
}

unint64_t sub_22D1EC188()
{
  unint64_t result = qword_2685423F8;
  if (!qword_2685423F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685423F8);
  }
  return result;
}

uint64_t sub_22D1EC1DC(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

uint64_t sub_22D1EC214(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

void sub_22D1EC240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = sub_22D2BCC20();
  MEMORY[0x270FA5388](v7 - 8);
  if (a3)
  {
    sub_22D2BB660();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_22D2BB650();
    sub_22D1F028C();
    uint64_t v8 = sub_22D2BB640();
    unint64_t v10 = v9;
    swift_release();
    if (!v4)
    {
      sub_22D2BCC10();
      sub_22D2BCBF0();
      if (v11)
      {
        int v12 = (void *)sub_22D2BCBA0();
        swift_bridgeObjectRelease();
        char v13 = (void *)sub_22D2BCBA0();
        objc_msgSend(v5, sel_setValue_forKey_, v12, v13);
      }
      else
      {
        sub_22D04C890();
        swift_allocError();
        *(_OWORD *)uint64_t v15 = xmmword_22D2D0110;
        *(unsigned char *)(v15 + 16) = 2;
        swift_willThrow();
      }
      sub_22CFF5630(v8, v10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = (void *)sub_22D2BCBA0();
    objc_msgSend(v5, sel_setValue_forKey_, 0, v14);
  }
}

uint64_t sub_22D1EC450()
{
  int v2 = v0;
  uint64_t v3 = sub_22D2BCC20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)sub_22D2BCBA0();
  id v8 = objc_msgSend(v2, sel_stringForKey_, v7);

  if (!v8) {
    return 0;
  }
  sub_22D2BCBD0();

  sub_22D2BCC10();
  uint64_t v9 = sub_22D2BCBE0();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v11 >> 60 == 15)
  {
    sub_22D04C890();
    swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_22D2D0110;
    *(unsigned char *)(v12 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    sub_22D2BB600();
    swift_allocObject();
    sub_22D2BB5F0();
    sub_22D1F07A4();
    sub_22D2BB5E0();
    if (v1)
    {
      swift_release();
      return sub_22CFF9C10(v9, v11);
    }
    else
    {
      sub_22CFF9C10(v9, v11);
      swift_release();
      return v14[1];
    }
  }
}

uint64_t sub_22D1EC688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v8 = a5 & 1;
  swift_bridgeObjectRetain();
  sub_22D1EC240(a4, v8, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D1EC990(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v15 = a4;
  sub_22D1F0E38(0, &qword_26AEC1F80, MEMORY[0x263F8E0C0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v14 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D1F09E8();
  sub_22D2BD7B0();
  uint64_t v16 = a2;
  char v17 = a3 & 1;
  char v18 = 0;
  type metadata accessor for HKClinicalSharingReason(0);
  sub_22D1F0464(&qword_26AEC1EF0, type metadata accessor for HKClinicalSharingReason);
  sub_22D2BD5B0();
  if (!v4)
  {
    uint64_t v16 = v15;
    char v18 = 1;
    sub_22D1F0A3C(0, &qword_26AEC1E70, MEMORY[0x263F07490], MEMORY[0x263F8D488]);
    sub_22D1F0E9C(&qword_26AEC1E78, &qword_26AEC0F38);
    sub_22D2BD5F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_22D1ECBF0()
{
  if (*v0) {
    return 0x4474736575716572;
  }
  else {
    return 0x6E6F73616572;
  }
}

uint64_t sub_22D1ECC30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22D1F0AA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22D1ECC58(uint64_t a1)
{
  unint64_t v2 = sub_22D1F09E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D1ECC94(uint64_t a1)
{
  unint64_t v2 = sub_22D1F09E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22D1ECCD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_22D1F0BA4(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_22D1ECD08(void *a1)
{
  return sub_22D1EC990(a1, *(void *)v1, *(unsigned char *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_22D1ECD34(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  if (v4)
  {
    if (!v6) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 == *(void *)a2) {
      char v9 = v6;
    }
    else {
      char v9 = 1;
    }
    if (v9) {
      return 0;
    }
  }
  return sub_22D10F4C0(v5, v7);
}

double sub_22D1ECD74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v6 = *(void *)(v3 + 40);
  uint64_t v15 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_22D09BCA4((uint64_t (*)(char *))sub_22D1F0398, (uint64_t)v14, v6);
  if (*(unsigned char *)(v3 + 32) == 1)
  {
    *(void *)(v3 + 24) = a1;
    *(unsigned char *)(v3 + 32) = 0;
    sub_22D1F0A3C(0, (unint64_t *)&unk_26AEC0EB8, MEMORY[0x263F07490], MEMORY[0x263F8E0F8]);
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(void *)(v8 - 8);
    unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_22D2BFF40;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 16))(v11 + v10, a2, v8);
    swift_bridgeObjectRetain();
    sub_22D23EBC4(v11);
    swift_bridgeObjectRelease();
    *(void *)(v3 + 40) = v7;
    sub_22D1EC688(*(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), a1, 0, v7);
  }
  unint64_t v12 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  double result = 14400.0;
  if (v12 < 3) {
    return 0.0;
  }
  return result;
}

void *sub_22D1ECF6C@<X0>(uint64_t a1@<X8>)
{
  char v4 = (void *)v1[9];
  unint64_t v3 = v1[10];
  unint64_t v5 = v1[11];
  uint64_t v6 = v1[12];
  uint64_t v7 = v1[14];
  if (v4)
  {
    LOBYTE(v8) = v1[13] & 1;
    id v9 = (id)v1[9];
    unint64_t v10 = v3;
    unint64_t v11 = v5;
    uint64_t v12 = v6;
    uint64_t v13 = v7;
  }
  else
  {
    id v14 = objc_msgSend(self, sel_standardUserDefaults);
    unint64_t v11 = 0x800000022D2DCF70;
    uint64_t v12 = sub_22D1F04B4();
    char v16 = v15;
    uint64_t v13 = v17;

    uint64_t v8 = v16 & 1;
    char v20 = (void *)v1[9];
    v1[9] = v14;
    v1[10] = 0xD00000000000001DLL;
    v1[11] = 0x800000022D2DCF70;
    v1[12] = v12;
    v1[13] = v8;
    v1[14] = v13;
    id v18 = v14;
    unint64_t v10 = 0xD00000000000001DLL;
    id v9 = v18;
    swift_bridgeObjectRetain();
    sub_22D1F0238(v20);
  }
  double result = sub_22D1F071C(v4);
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v12;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v13;
  return result;
}

uint64_t sub_22D1ED0CC()
{
  MEMORY[0x230F7BDF0](*(void *)(v0 + 136), -1, -1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  sub_22D1F0238(*(void **)(v0 + 72));
  sub_22D074520(*(void *)(v0 + 120));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_22D1ED144(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)a1[7];
  objc_msgSend(v6, sel_setPreregistered_, 1);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  char v24 = sub_22D1F0830;
  uint64_t v25 = v7;
  uint64_t v20 = MEMORY[0x263EF8330];
  uint64_t v21 = 1107296256;
  char v22 = sub_22D085718;
  char v23 = &block_descriptor_37;
  uint64_t v8 = _Block_copy(&v20);
  swift_release();
  objc_msgSend(v6, sel_scheduleWithBlock_, v8);
  _Block_release(v8);
  id v9 = objc_msgSend(self, sel_defaultSyncActivityCriteria);
  unint64_t v10 = (void *)*MEMORY[0x263F09908];
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  id v12 = objc_allocWithZone(MEMORY[0x263F434D8]);
  id v13 = v10;
  swift_retain();
  id v14 = (void *)sub_22D2BCBA0();
  char v24 = sub_22D1F0838;
  uint64_t v25 = v11;
  uint64_t v20 = MEMORY[0x263EF8330];
  uint64_t v21 = 1107296256;
  char v22 = sub_22D1F0160;
  char v23 = &block_descriptor_41_0;
  char v15 = _Block_copy(&v20);
  id v16 = objc_msgSend(v12, sel_initWithName_criteria_loggingCategory_handler_, v14, v9, v13, v15);

  swift_unknownObjectRelease();
  _Block_release(v15);
  swift_release();
  swift_release();
  uint64_t v17 = (void *)a1[8];
  a1[8] = v16;

  uint64_t v18 = a1[15];
  a1[15] = a2;
  a1[16] = a3;
  swift_retain();
  return sub_22D074520(v18);
}

void sub_22D1ED3C0(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v5 = *(id *)(Strong + 56);
    sub_22D1EE838(v5, a1, a2);
    swift_release();
  }
  else
  {
    a1(1);
  }
}

uint64_t sub_22D1ED454(void *a1, uint64_t a2, uint64_t (*a3)(void, void), uint64_t a4)
{
  if (!swift_weakLoadStrong()) {
    return a3(0, 0);
  }
  sub_22D1EF238(a1, a3, a4);
  return swift_release();
}

uint64_t sub_22D1ED4E0()
{
  return sub_22D1EE558(MEMORY[0x263F90270], "%s: invalidated");
}

id sub_22D1ED514(void *a1)
{
  uint64_t v2 = a1[15];
  a1[15] = 0;
  a1[16] = 0;
  sub_22D074520(v2);
  unint64_t v3 = (void *)a1[8];
  a1[8] = 0;

  char v4 = (void *)a1[7];
  return objc_msgSend(v4, sel_invalidate);
}

void sub_22D1ED56C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1ECF6C((uint64_t)&aBlock);
  sub_22D2BBC20();
  double v10 = sub_22D1ECD74(a2, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  long long v11 = v32;
  id v12 = v33;
  uint64_t v13 = v34;
  uint64_t v14 = v35;
  char v15 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = aBlock;
  *(_OWORD *)(a1 + 80) = v11;
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v14;
  sub_22D1F0238(v15);
  if (v10 > a3) {
    a3 = v10;
  }
  id v16 = *(void **)(a1 + 64);
  if (v16)
  {
    uint64_t v34 = nullsub_1;
    uint64_t v35 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    *(void *)&long long v32 = 1107296256;
    *((void *)&v32 + 1) = sub_22D1EDA0C;
    uint64_t v33 = &block_descriptor_14;
    uint64_t v17 = _Block_copy(&aBlock);
    id v18 = v16;
    objc_msgSend(v18, sel_requestRunWithMaximumDelay_completion_, v17, a3);
    _Block_release(v17);
  }
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_22D2BC390();
  __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
  swift_retain();
  uint64_t v20 = sub_22D2BC380();
  os_log_type_t v21 = sub_22D2BD080();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t aBlock = v23;
    *(_DWORD *)uint64_t v22 = 136315650;
    uint64_t v24 = *(void *)(a1 + 144);
    unint64_t v25 = *(void *)(a1 + 152);
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_22D0A4D24(v24, v25, &aBlock);
    sub_22D2BD220();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v26 = a2 - 1;
    unint64_t v27 = 0xED00006E6F697461;
    uint64_t v28 = 0x7A69726F68747561;
    switch(v26)
    {
      case 0:
        break;
      case 1:
        unint64_t v27 = 0xE800000000000000;
        uint64_t v28 = 0x617461642D77656ELL;
        break;
      case 2:
        unint64_t v27 = 0xEA0000000000646ELL;
        uint64_t v28 = 0x756F72676B636162;
        break;
      case 3:
        unint64_t v27 = 0xE700000000000000;
        uint64_t v28 = 0x676E6974736574;
        break;
      case 4:
        unint64_t v27 = 0xEE00646574616974;
        uint64_t v28 = 0x696E692D72657375;
        break;
      case 5:
        unint64_t v27 = 0x800000022D2D6660;
        uint64_t v28 = 0xD000000000000010;
        break;
      default:
        unint64_t v27 = 0xE700000000000000;
        uint64_t v28 = 0x6E776F6E6B6E75;
        break;
    }
    uint64_t v30 = sub_22D0A4D24(v28, v27, &aBlock);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2048;
    uint64_t v30 = *(void *)&a3;
    sub_22D2BD220();
    _os_log_impl(&dword_22CFEE000, v20, v21, "%s: scheduled run for reason %s with max delay %f", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v23, -1, -1);
    MEMORY[0x230F7BDF0](v22, -1, -1);
  }
  else
  {

    swift_release();
  }
}

void sub_22D1EDA0C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_22D1EDA84(void *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  swift_getErrorValue();
  if (sub_22D1EDF60(v23[10]) & 1) != 0 || (swift_getErrorValue(), uint64_t result = sub_22D1EE0A0(v23[6]), (result))
  {
    if (a2 != 6)
    {
      swift_getErrorValue();
      sub_22D1EDF60(v23[2]);
    }
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22D2BC390();
    __swift_project_value_buffer(v7, (uint64_t)qword_26AEC3C90);
    swift_retain();
    id v8 = a1;
    swift_retain();
    id v9 = a1;
    double v10 = sub_22D2BC380();
    os_log_type_t v11 = sub_22D2BD080();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v23[0] = v13;
      *(_DWORD *)uint64_t v12 = 136315906;
      uint64_t v14 = v3[18];
      unint64_t v15 = v3[19];
      swift_bridgeObjectRetain();
      sub_22D0A4D24(v14, v15, v23);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2048;
      sub_22D2BD220();
      *(_WORD *)(v12 + 22) = 2080;
      uint64_t v16 = a2 - 1;
      unint64_t v17 = 0xED00006E6F697461;
      uint64_t v18 = 0x7A69726F68747561;
      switch(v16)
      {
        case 0:
          break;
        case 1:
          unint64_t v17 = 0xE800000000000000;
          uint64_t v18 = 0x617461642D77656ELL;
          break;
        case 2:
          unint64_t v17 = 0xEA0000000000646ELL;
          uint64_t v18 = 0x756F72676B636162;
          break;
        case 3:
          unint64_t v17 = 0xE700000000000000;
          uint64_t v18 = 0x676E6974736574;
          break;
        case 4:
          unint64_t v17 = 0xEE00646574616974;
          uint64_t v18 = 0x696E692D72657375;
          break;
        case 5:
          unint64_t v17 = 0x800000022D2D6660;
          uint64_t v18 = 0xD000000000000010;
          break;
        default:
          unint64_t v17 = 0xE700000000000000;
          uint64_t v18 = 0x6E776F6E6B6E75;
          break;
      }
      sub_22D0A4D24(v18, v17, v23);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 32) = 2080;
      id v19 = a1;
      sub_22CFF49FC();
      uint64_t v20 = sub_22D2BCC30();
      sub_22D0A4D24(v20, v21, v23);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v10, v11, "%s: scheduling sync retry after %f because %s sync encountered error %s", (uint8_t *)v12, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v13, -1, -1);
      MEMORY[0x230F7BDF0](v12, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    v23[0] = v3[17];
    MEMORY[0x270FA5388](v22);
    sub_22D1F0A3C(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
    sub_22D086B58();
    return sub_22D2BBEE0();
  }
  return result;
}

uint64_t sub_22D1EDF60(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for HKError(0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    char v4 = v6;
    id v5 = v6;
    sub_22D1F0464(&qword_26853D658, type metadata accessor for HKError);
    sub_22D2BB980();

    return v6 == (void *)6;
  }
  return result;
}

uint64_t sub_22D1EE0A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_22D2BBEA0();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v28 = (char *)&v28 - v8;
  sub_22D1F0A3C(0, &qword_268542400, MEMORY[0x263F07A20], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_22D2BBEC0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v2, a1);
  int v20 = swift_dynamicCast();
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v20)
  {
    v21(v12, 0, 1, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v12, v16);
    sub_22D1F0464(&qword_268542408, MEMORY[0x263F07A20]);
    uint64_t v22 = v28;
    sub_22D2BB980();
    sub_22D2BBE90();
    sub_22D1F0464(&qword_268542410, MEMORY[0x263F07A00]);
    char v23 = sub_22D2BCB90();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v29 + 8);
    v24(v7, v4);
    if (v23 & 1) != 0 || (sub_22D2BBE70(), char v25 = sub_22D2BCB90(), v24(v7, v4), (v25))
    {
      v24(v22, v4);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      char v26 = 1;
    }
    else
    {
      sub_22D2BBE80();
      char v26 = sub_22D2BCB90();
      v24(v7, v4);
      v24(v22, v4);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  else
  {
    v21(v12, 1, 1, v16);
    sub_22D1F03D8((uint64_t)v12);
    char v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_22D1EE524()
{
  return sub_22D1EE558(MEMORY[0x263F90290], "%s: marking as run");
}

uint64_t sub_22D1EE558(uint64_t (*a1)(void), const char *a2)
{
  uint64_t v5 = v2;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22D2BC390();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
  swift_retain();
  uint64_t v7 = sub_22D2BC380();
  os_log_type_t v8 = a1();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v12 = v5[18];
    unint64_t v11 = v5[19];
    swift_bridgeObjectRetain();
    sub_22D0A4D24(v12, v11, &v14);
    sub_22D2BD220();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v7, v8, a2, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v10, -1, -1);
    MEMORY[0x230F7BDF0](v9, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v14 = v5[17];
  sub_22D1F0A3C(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  return sub_22D2BBEE0();
}

void *sub_22D1EE778(void *a1)
{
  uint64_t v2 = (void *)a1[8];
  if (v2) {
    objc_msgSend(v2, sel_setWaitingForTrigger_, 0);
  }
  sub_22D1ECF6C((uint64_t)&v10);
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  uint64_t v6 = v15;
  if (v14)
  {
    uint64_t v7 = v13;
  }
  else
  {
    sub_22D1EC688(v10, v11, v12, 0, 1, v15);
    uint64_t v7 = 0;
  }
  os_log_type_t v8 = (void *)a1[9];
  a1[9] = v3;
  a1[10] = v4;
  a1[11] = v5;
  a1[12] = v7;
  a1[13] = 1;
  a1[14] = v6;
  return sub_22D1F0238(v8);
}

uint64_t sub_22D1EE838(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_22D2BC390();
  __swift_project_value_buffer(v8, (uint64_t)qword_26AEC3C90);
  id v9 = a1;
  swift_retain();
  uint64_t v10 = sub_22D2BC380();
  os_log_type_t v11 = sub_22D2BD080();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v29[0] = v27;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v14 = v4[18];
    unint64_t v13 = v4[19];
    swift_bridgeObjectRetain();
    sub_22D0A4D24(v14, v13, v29);
    sub_22D2BD220();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    id v15 = objc_msgSend(v9, sel_identifier);
    os_log_type_t type = v11;
    uint64_t v16 = sub_22D2BCBD0();
    uint64_t v17 = a2;
    uint64_t v18 = a3;
    unint64_t v20 = v19;

    uint64_t v28 = sub_22D0A4D24(v16, v20, v29);
    sub_22D2BD220();

    a3 = v18;
    a2 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v10, type, "%s: activity \"%s\" fired", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v27, -1, -1);
    MEMORY[0x230F7BDF0](v12, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v28 = v4[17];
  sub_22D1F0A3C(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D1F0A3C(0, &qword_26AEC1FE0, (uint64_t (*)(uint64_t))sub_22D1F0080, MEMORY[0x263F8D8F0]);
  sub_22D086B58();
  sub_22D2BBED0();
  unint64_t v21 = (void (*)(uint64_t *, uint64_t *))v29[0];
  if (!v29[0]) {
    return a2(1);
  }
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v4;
  v22[3] = v9;
  v22[4] = a2;
  void v22[5] = a3;
  uint64_t v28 = 3;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_22D1F036C;
  *(void *)(v23 + 24) = v22;
  v29[0] = (uint64_t)sub_22D1F1168;
  v29[1] = v23;
  id v24 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  v21(&v28, v29);
  swift_release();
  swift_release();
  return sub_22D074520((uint64_t)v21);
}

uint64_t sub_22D1EEC14@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v4 = *(void *)(a1 + 128);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_22D1F1184;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return sub_22D074424(v3);
}

uint64_t sub_22D1EEC94(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  swift_retain();
  a3(v4, sub_22D1F02E0, v7);
  return swift_release();
}

uint64_t sub_22D1EED2C(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  if (a1)
  {
    id v8 = a1;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_22D2BC390();
    __swift_project_value_buffer(v9, (uint64_t)qword_26AEC3C90);
    id v10 = a3;
    swift_retain();
    id v11 = a1;
    id v12 = v10;
    swift_retain();
    id v13 = a1;
    uint64_t v14 = sub_22D2BC380();
    os_log_type_t v15 = sub_22D2BD060();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v41 = v39;
      *(_DWORD *)uint64_t v16 = 136315650;
      uint64_t v40 = a4;
      uint64_t v17 = *(void *)(a2 + 144);
      unint64_t v18 = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      sub_22D0A4D24(v17, v18, &v41);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      id v19 = objc_msgSend(v12, sel_identifier);
      uint64_t v20 = sub_22D2BCBD0();
      unint64_t v22 = v21;

      sub_22D0A4D24(v20, v22, &v41);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2080;
      id v23 = a1;
      sub_22CFF49FC();
      uint64_t v24 = sub_22D2BCC30();
      sub_22D0A4D24(v24, v25, &v41);
      a4 = v40;
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v14, v15, "%s: activity \"%s\" failed: %s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v39, -1, -1);
      MEMORY[0x230F7BDF0](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_22D2BC390();
    __swift_project_value_buffer(v26, (uint64_t)qword_26AEC3C90);
    id v27 = a3;
    swift_retain();
    uint64_t v28 = sub_22D2BC380();
    os_log_type_t v29 = sub_22D2BD080();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v41 = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v32 = *(void *)(a2 + 144);
      unint64_t v33 = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      sub_22D0A4D24(v32, v33, &v41);
      sub_22D2BD220();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      id v34 = objc_msgSend(v27, sel_identifier);
      uint64_t v35 = sub_22D2BCBD0();
      unint64_t v37 = v36;

      sub_22D0A4D24(v35, v37, &v41);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v28, v29, "%s: activity \"%s succeeded", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v31, -1, -1);
      MEMORY[0x230F7BDF0](v30, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  return a4(1);
}

uint64_t sub_22D1EF238(void *a1, uint64_t (*a2)(void, void), uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_22D2BC390();
  __swift_project_value_buffer(v8, (uint64_t)qword_26AEC3C90);
  id v9 = a1;
  swift_retain();
  id v10 = sub_22D2BC380();
  os_log_type_t v11 = sub_22D2BD080();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v31[0] = v29;
    *(_DWORD *)uint64_t v12 = 136315394;
    id v13 = v9;
    uint64_t v15 = v4[18];
    unint64_t v14 = v4[19];
    swift_bridgeObjectRetain();
    sub_22D0A4D24(v15, v14, v31);
    sub_22D2BD220();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    id v16 = objc_msgSend(v9, sel_name);
    os_log_type_t type = v11;
    uint64_t v17 = sub_22D2BCBD0();
    unint64_t v18 = a2;
    uint64_t v19 = a3;
    unint64_t v21 = v20;

    id v9 = v13;
    uint64_t v30 = sub_22D0A4D24(v17, v21, v31);
    sub_22D2BD220();

    a3 = v19;
    a2 = v18;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v10, type, "%s: activity \"%s\" fired", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v29, -1, -1);
    MEMORY[0x230F7BDF0](v12, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v30 = v4[17];
  sub_22D1F0A3C(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D1EFFB4();
  sub_22D086B58();
  sub_22D2BBED0();
  unint64_t v22 = (void (*)(uint64_t *, uint64_t *))v31[0];
  if (!v31[0]) {
    return a2(0, 0);
  }
  if (v32) {
    uint64_t v23 = 3;
  }
  else {
    uint64_t v23 = v31[2];
  }
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v4;
  v24[3] = v9;
  v24[4] = a2;
  void v24[5] = a3;
  uint64_t v30 = v23;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_22D1F00F0;
  *(void *)(v25 + 24) = v24;
  v31[0] = (uint64_t)sub_22D1F0134;
  v31[1] = v25;
  id v26 = v9;
  swift_retain();
  sub_22D074424((uint64_t)v22);
  swift_retain();
  swift_retain();
  v22(&v30, v31);
  swift_release();
  sub_22D074520((uint64_t)v22);
  sub_22D074520((uint64_t)v22);
  return swift_release();
}

uint64_t sub_22D1EF614@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[15];
  uint64_t v5 = a1[16];
  sub_22D074424(v4);
  sub_22D1ECF6C((uint64_t)&v16);
  uint64_t v6 = v16;
  uint64_t v7 = v17;
  uint64_t v8 = v18;
  uint64_t v9 = v19;
  char v10 = v20;
  uint64_t v11 = v21;
  uint64_t v12 = v19;
  if ((v20 & 1) == 0)
  {
    sub_22D1EC688(v16, v17, v18, 0, 1, v21);
    uint64_t v12 = 0;
  }
  id v13 = (void *)a1[9];
  a1[9] = v6;
  a1[10] = v7;
  a1[11] = v8;
  a1[12] = v12;
  a1[13] = 1;
  a1[14] = v11;
  sub_22D1F0238(v13);
  if (v4)
  {
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v15 = sub_22D1F0284;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t result = 0;
  }
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = result;
  *(void *)(a2 + 16) = v9;
  *(unsigned char *)(a2 + 24) = v10 & 1;
  return result;
}

uint64_t sub_22D1EF718(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(void, void))
{
  if (a1)
  {
    id v8 = a1;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_22D2BC390();
    __swift_project_value_buffer(v9, (uint64_t)qword_26AEC3C90);
    id v10 = a3;
    swift_retain();
    id v11 = a1;
    id v12 = v10;
    swift_retain();
    id v13 = a1;
    unint64_t v14 = sub_22D2BC380();
    os_log_type_t v15 = sub_22D2BD060();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v41 = v39;
      *(_DWORD *)uint64_t v16 = 136315650;
      uint64_t v40 = a4;
      uint64_t v17 = *(void *)(a2 + 144);
      unint64_t v18 = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      sub_22D0A4D24(v17, v18, &v41);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      id v19 = objc_msgSend(v12, sel_name);
      uint64_t v20 = sub_22D2BCBD0();
      unint64_t v22 = v21;

      sub_22D0A4D24(v20, v22, &v41);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2080;
      id v23 = a1;
      sub_22CFF49FC();
      uint64_t v24 = sub_22D2BCC30();
      sub_22D0A4D24(v24, v25, &v41);
      a4 = v40;
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v14, v15, "%s: activity \"%s\" failed: %s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v39, -1, -1);
      MEMORY[0x230F7BDF0](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_22D2BC390();
    __swift_project_value_buffer(v26, (uint64_t)qword_26AEC3C90);
    id v27 = a3;
    swift_retain();
    uint64_t v28 = sub_22D2BC380();
    os_log_type_t v29 = sub_22D2BD080();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v41 = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v32 = *(void *)(a2 + 144);
      unint64_t v33 = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      sub_22D0A4D24(v32, v33, &v41);
      sub_22D2BD220();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      id v34 = objc_msgSend(v27, sel_name);
      uint64_t v35 = sub_22D2BCBD0();
      unint64_t v37 = v36;

      sub_22D0A4D24(v35, v37, &v41);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v28, v29, "%s: activity \"%s succeeded", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v31, -1, -1);
      MEMORY[0x230F7BDF0](v30, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  return a4(0, 0);
}

uint64_t sub_22D1EFC28()
{
  return sub_22D2BCDD0();
}

uint64_t sub_22D1EFCB8()
{
  return sub_22D2BCDB0();
}

uint64_t type metadata accessor for ClinicalSharingSyncTaskScheduler()
{
  return self;
}

uint64_t destroy for ClinicalSharingSyncTaskScheduler.AdHocSyncState(id *a1)
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingSyncTaskScheduler.AdHocSyncState()
{
  return &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState;
}

uint64_t sub_22D1EFFAC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D1EF614(v1, a1);
}

void sub_22D1EFFB4()
{
  if (!qword_26AEC1FE8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_22D1F0A3C(255, &qword_26AEC1FE0, (uint64_t (*)(uint64_t))sub_22D1F0080, MEMORY[0x263F8D8F0]);
    sub_22D1F0A3C(255, &qword_26AEC1F10, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalSharingReason, v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AEC1FE8);
    }
  }
}

unint64_t sub_22D1F0080()
{
  unint64_t result = qword_26AEC1FD8;
  if (!qword_26AEC1FD8)
  {
    type metadata accessor for HKClinicalSharingReason(255);
    sub_22D086D40(255);
    unint64_t result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_26AEC1FD8);
  }
  return result;
}

uint64_t sub_22D1F00F0(void *a1)
{
  return sub_22D1EF718(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(uint64_t (**)(void, void))(v1 + 32));
}

uint64_t sub_22D1F00FC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D1F0134(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_22D1F0160(uint64_t a1, void *a2, uint64_t a3, void *aBlock)
{
  id v6 = *(void (**)(id, uint64_t, void (*)(uint64_t, uint64_t), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v9 = a2;
  swift_unknownObjectRetain();
  v6(v9, a3, sub_22D0C6DE8, v8);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
}

void *sub_22D1F0238(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22D1F0284(uint64_t *a1, uint64_t *a2)
{
  return sub_22D1EEC94(a1, a2, *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v2 + 16));
}

unint64_t sub_22D1F028C()
{
  unint64_t result = qword_26AEC1958;
  if (!qword_26AEC1958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1958);
  }
  return result;
}

uint64_t sub_22D1F02E0(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_22D1F0318@<X0>(uint64_t (**a1)()@<X8>)
{
  return sub_22D1EEC14(v1, a1);
}

uint64_t objectdestroyTm_9()
{
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D1F036C(void *a1)
{
  return sub_22D1EED2C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(uint64_t (**)(void))(v1 + 32));
}

void *sub_22D1F0378()
{
  return sub_22D1EE778(v0);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

BOOL sub_22D1F0398()
{
  sub_22D2BBBA0();
  return v0 < 86400.0;
}

uint64_t sub_22D1F03D8(uint64_t a1)
{
  sub_22D1F0A3C(0, &qword_268542400, MEMORY[0x263F07A20], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D1F0464(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_22D1F04AC()
{
  return sub_22D1ED514(v0);
}

uint64_t sub_22D1F04B4()
{
  uint64_t result = sub_22D1EC450();
  if (!v1) {
    return 0;
  }
  return result;
}

void *sub_22D1F071C(void *result)
{
  if (result)
  {
    id v1 = result;
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_22D1F0768()
{
  unint64_t result = qword_268542418;
  if (!qword_268542418)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268542418);
  }
  return result;
}

unint64_t sub_22D1F07A4()
{
  unint64_t result = qword_26AEC1960;
  if (!qword_26AEC1960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1960);
  }
  return result;
}

uint64_t sub_22D1F07F8()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22D1F0830(uint64_t (*a1)(uint64_t), uint64_t a2)
{
}

uint64_t sub_22D1F0838(void *a1, uint64_t a2, uint64_t (*a3)(void, void), uint64_t a4)
{
  return sub_22D1ED454(a1, a2, a3, a4);
}

uint64_t sub_22D1F0840()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t initializeBufferWithCopyOfBuffer for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage()
{
  return &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage;
}

unint64_t sub_22D1F09E8()
{
  unint64_t result = qword_26AEC1940;
  if (!qword_26AEC1940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1940);
  }
  return result;
}

void sub_22D1F0A3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D1F0AA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F73616572 && a2 == 0xE600000000000000;
  if (v2 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4474736575716572 && a2 == 0xEC00000073657461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22D1F0BA4(void *a1)
{
  sub_22D1F0E38(0, &qword_26AEC1F70, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_22D1F09E8();
  sub_22D2BD7A0();
  if (!v1)
  {
    type metadata accessor for HKClinicalSharingReason(0);
    char v11 = 0;
    sub_22D1F0464(&qword_26AEC1F00, type metadata accessor for HKClinicalSharingReason);
    sub_22D2BD530();
    uint64_t v8 = v12;
    sub_22D1F0A3C(0, &qword_26AEC1E70, MEMORY[0x263F07490], MEMORY[0x263F8D488]);
    char v11 = 1;
    sub_22D1F0E9C(&qword_26AEC1E80, &qword_26AEC0F40);
    sub_22D2BD560();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void sub_22D1F0E38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_22D1F09E8();
    unint64_t v7 = a3(a1, &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D1F0E9C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D1F0A3C(255, &qword_26AEC1E70, MEMORY[0x263F07490], MEMORY[0x263F8D488]);
    sub_22D1F0464(a2, MEMORY[0x263F07490]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D1F1028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys()
{
  return &type metadata for ClinicalSharingSyncTaskScheduler.AdHocSyncState.Storage.CodingKeys;
}

unint64_t sub_22D1F1064()
{
  unint64_t result = qword_268542420;
  if (!qword_268542420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268542420);
  }
  return result;
}

unint64_t sub_22D1F10BC()
{
  unint64_t result = qword_26AEC1950;
  if (!qword_26AEC1950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1950);
  }
  return result;
}

unint64_t sub_22D1F1114()
{
  unint64_t result = qword_26AEC1948;
  if (!qword_26AEC1948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1948);
  }
  return result;
}

uint64_t _s11CryptoErrorOwxx(uint64_t a1)
{
  return sub_22D0AADAC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s11CryptoErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_22D0AAD80(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11CryptoErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_22D0AAD80(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_22D0AADAC(v6, v7, v8);
  return a1;
}

uint64_t _s11CryptoErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_22D0AADAC(v4, v5, v6);
  return a1;
}

uint64_t _s11CryptoErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s11CryptoErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22D1F1320(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_22D1F1328(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s11CryptoErrorOMa()
{
  return &_s11CryptoErrorON;
}

unint64_t sub_22D1F1340(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD00000000000001CLL;
      break;
    case 2:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000029;
      break;
    case 3:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD00000000000002BLL;
      break;
    case 5:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000023;
      break;
    case 6:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000021;
      break;
    default:
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000020;
      break;
  }
  unint64_t v5 = v3;
  sub_22D2BCCB0();
  return v5;
}

unint64_t sub_22D1F153C()
{
  return sub_22D1F1340(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_22D1F1548(uint64_t a1, uint64_t a2)
{
  return sub_22D1F1568(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_22D1F1568(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        return 0;
      }
      goto LABEL_13;
    case 2:
      if (a6 == 2) {
        goto LABEL_13;
      }
      return 0;
    case 3:
      if (a6 == 3) {
        goto LABEL_13;
      }
      return 0;
    case 4:
      if (a6 == 4) {
        goto LABEL_13;
      }
      return 0;
    case 5:
      if (a6 == 5) {
        goto LABEL_13;
      }
      return 0;
    case 6:
      if (a6 == 6) {
        goto LABEL_13;
      }
      return 0;
    default:
      if (a6) {
        return 0;
      }
LABEL_13:
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      else {
        return sub_22D2BD660();
      }
  }
}

uint64_t sub_22D1F163C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v42 = a7;
  uint64_t v40 = a5;
  uint64_t v41 = a6;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  sub_22D1F3328(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v37 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v35 - v13;
  uint64_t v36 = (uint64_t)&v35 - v13;
  uint64_t v15 = sub_22D2BBC90();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  sub_22D04BDE8(a2, (uint64_t)v14);
  sub_22D04BDE8(v38, (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v21 = (v17 + v20 + v19) & ~v20;
  unint64_t v22 = (v11 + v20 + v21) & ~v20;
  unint64_t v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v19, v18, v15);
  sub_22D043228(v36, v25 + v21);
  sub_22D043228(v37, v25 + v22);
  id v27 = v39;
  uint64_t v26 = v40;
  *(void *)(v25 + v23) = v39;
  *(void *)(v25 + v24) = v26;
  uint64_t v28 = (void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v29 = v42;
  void *v28 = v41;
  v28[1] = v29;
  sub_22D1F31A8();
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v30 = v43;
  id v31 = v27;
  id v32 = v26;
  uint64_t v44 = sub_22D2BC6F0();
  sub_22D0E3160();
  uint64_t v33 = sub_22D2BC720();
  swift_release();
  return v33;
}

void sub_22D1F193C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_22D1F19B4(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x270FA2498](sub_22D1F19D4, 0, 0);
}

uint64_t sub_22D1F19D4()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = (void *)v0[17];
  sub_22D1F3328(0, &qword_26853DD48, MEMORY[0x263F07508], MEMORY[0x263F8E0F8]);
  uint64_t v3 = sub_22D2BBC90();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_22D2BFF40;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v6 + v5, v2, v3);
  uint64_t v7 = sub_22D2BCDF0();
  v0[18] = v7;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_22D1F1BE0;
  uint64_t v8 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_22D1F338C;
  v0[13] = &block_descriptor_7_0;
  v0[14] = v8;
  objc_msgSend(v1, sel_refreshAccountConnectionInformationForAccountsWithIdentifiers_completion_, v7, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_22D1F1BE0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_22D1F1E6C;
  }
  else {
    uint64_t v2 = sub_22D1F1CF0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_22D1F1CF0()
{
  unint64_t v1 = *(void *)(v0 + 120);

  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_22D2BD470();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)MEMORY[0x230F7AF90](0, v1);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v2 = *(id *)(v1 + 32);
  }
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v3, sel_authorization);

  if (v4)
  {
    unint64_t v5 = *(void (**)(id))(v0 + 8);
    v5(v4);
    return;
  }
LABEL_12:
  sub_22D0B8164();
  swift_allocError();
  *uint64_t v7 = 0;
  swift_willThrow();
  uint64_t v8 = *(void (**)(void))(v0 + 8);
  v8();
}

uint64_t sub_22D1F1E6C()
{
  unint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_22D1F1EDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v54 = a4;
  uint64_t v7 = sub_22D2BBC90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  unint64_t v14 = (char *)v45 - v13;
  uint64_t v52 = v15;
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v45 - v16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  uint64_t v51 = v18;
  uint64_t v19 = qword_26AEC1C58;
  swift_retain();
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_22D2BC390();
  __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v53 = a3;
  v21(v17, a3, v7);
  unint64_t v22 = sub_22D2BC380();
  os_log_type_t v23 = sub_22D2BD050();
  int v24 = v23;
  BOOL v25 = os_log_type_enabled(v22, v23);
  uint64_t v49 = v14;
  if (v25)
  {
    int v48 = v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v55 = v47;
    uint64_t v50 = (void (*)(char *, char *, uint64_t))v21;
    *(_DWORD *)uint64_t v26 = 136315138;
    v45[1] = (os_log_t)(v26 + 4);
    uint64_t v46 = (uint8_t *)v26;
    v50(v14, v17, v7);
    v50(v11, v14, v7);
    sub_22D2BD680();
    id v27 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v28 = sub_22D2BCC30();
    uint64_t v29 = v14;
    unint64_t v31 = v30;
    v45[0] = v22;
    id v32 = *(void (**)(char *, uint64_t))(v8 + 8);
    v32(v29, v7);
    aBlock[0] = sub_22D0A4D24(v28, v31, &v55);
    unint64_t v21 = (void (*)(char *, uint64_t, uint64_t))v50;
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    v32(v17, v7);
    os_log_t v33 = v45[0];
    id v34 = v46;
    _os_log_impl(&dword_22CFEE000, v45[0], (os_log_type_t)v48, "HKClinicalAccountStore.refreshClinicalAccount - STARTING refresh for account: %s", v46, 0xCu);
    uint64_t v35 = v47;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v35, -1, -1);
    MEMORY[0x230F7BDF0](v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
  }
  sub_22D1F3328(0, &qword_26853DD48, MEMORY[0x263F07508], MEMORY[0x263F8E0F8]);
  unint64_t v36 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_22D2BFF40;
  uint64_t v38 = v53;
  v21((char *)(v37 + v36), v53, v7);
  uint64_t v39 = v21;
  uint64_t v40 = (void *)sub_22D2BCDF0();
  swift_bridgeObjectRelease();
  uint64_t v41 = v49;
  v39(v49, v38, v7);
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v51;
  *(void *)(v42 + 16) = sub_22D0348C4;
  *(void *)(v42 + 24) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v42 + v36, v41, v7);
  aBlock[4] = sub_22D1F3598;
  aBlock[5] = v42;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22D284D04;
  aBlock[3] = &block_descriptor_17;
  uint64_t v44 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v54, sel_refreshAccountConnectionInformationForAccountsWithIdentifiers_completion_, v40, v44);
  _Block_release(v44);
}

void sub_22D1F240C(unint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v59 = a4;
  uint64_t v9 = sub_22D2BBC90();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v54 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v54 - v17;
  long long v60 = a3;
  if (!a2)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_22D2BC390();
    __swift_project_value_buffer(v33, (uint64_t)qword_26AEC3C90);
    id v34 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v34(v18, a5, v9);
    uint64_t v35 = sub_22D2BC380();
    os_log_type_t v36 = sub_22D2BD050();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      os_log_t v58 = v35;
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v62 = v57;
      int v56 = v37;
      *(_DWORD *)uint64_t v38 = 136315138;
      id v54 = v38 + 4;
      uint64_t v55 = v38;
      v34(v16, (uint64_t)v18, v9);
      v34(v13, (uint64_t)v16, v9);
      sub_22D2BD680();
      id v39 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v40 = sub_22D2BCC30();
      unint64_t v42 = v41;
      uint64_t v43 = *(void (**)(char *, uint64_t))(v10 + 8);
      v43(v16, v9);
      uint64_t v61 = sub_22D0A4D24(v40, v42, &v62);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      v43(v18, v9);
      os_log_t v44 = v58;
      uint64_t v45 = v55;
      _os_log_impl(&dword_22CFEE000, v58, (os_log_type_t)v56, "HKClinicalAccountStore.refreshClinicalAccount - FINISHED: Success requesting new accessToken for account: %s", v55, 0xCu);
      uint64_t v46 = v57;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v46, -1, -1);
      MEMORY[0x230F7BDF0](v45, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    }
    uint64_t v48 = MEMORY[0x263F8EE78];
    if (!a1) {
      goto LABEL_30;
    }
    uint64_t v61 = MEMORY[0x263F8EE78];
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v49 = sub_22D2BD470();
      if (v49) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v49 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v49)
      {
LABEL_16:
        if (v49 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v49; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v51 = (id)MEMORY[0x230F7AF90](i, a1);
          }
          else {
            id v51 = *(id *)(a1 + 8 * i + 32);
          }
          uint64_t v52 = v51;
          id v53 = objc_msgSend(v51, sel_authorization);

          if (v53)
          {
            MEMORY[0x230F7AA40]();
            if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_22D2BCE30();
            }
            sub_22D2BCE50();
            sub_22D2BCE20();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v48 = v61;
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x263F8EE78];
LABEL_29:
    swift_bridgeObjectRelease();
LABEL_30:
    v60(v48, 0);
    swift_bridgeObjectRelease();
    return;
  }
  id v19 = a2;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_22D2BC390();
  __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
  id v21 = a2;
  id v22 = a2;
  os_log_type_t v23 = sub_22D2BC380();
  os_log_type_t v24 = sub_22D2BD060();
  if (os_log_type_enabled(v23, v24))
  {
    BOOL v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v62 = v26;
    *(_DWORD *)BOOL v25 = 136315138;
    uint64_t v61 = (uint64_t)a2;
    id v27 = a2;
    id v28 = a2;
    sub_22CFF49FC();
    sub_22D2BD680();
    id v29 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v30 = sub_22D2BCC30();
    unint64_t v32 = v31;

    uint64_t v61 = sub_22D0A4D24(v30, v32, &v62);
    sub_22D2BD220();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v23, v24, "HKClinicalAccountStore.refreshClinicalAccount - ERROR: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v26, -1, -1);
    MEMORY[0x230F7BDF0](v25, -1, -1);
  }
  else
  {
  }
  id v47 = a2;
  v60((uint64_t)a2, 1);
}

void sub_22D1F2AC4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  uint64_t v35 = a6;
  unint64_t v32 = a3;
  sub_22D1F3328(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  swift_retain();
  uint64_t v20 = (void *)sub_22D2BBC50();
  sub_22D04BDE8(a5, (uint64_t)v18);
  uint64_t v21 = sub_22D2BBC30();
  uint64_t v22 = *(void *)(v21 - 8);
  os_log_type_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  os_log_type_t v24 = 0;
  if (v23(v18, 1, v21) != 1)
  {
    os_log_type_t v24 = (void *)sub_22D2BBBC0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v21);
  }
  sub_22D04BDE8(v35, (uint64_t)v16);
  if (v23(v16, 1, v21) == 1)
  {
    BOOL v25 = 0;
  }
  else
  {
    BOOL v25 = (void *)sub_22D2BBBC0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v21);
  }
  uint64_t v27 = v33;
  uint64_t v26 = v34;
  id v28 = v32;
  if (a10) {
    id v29 = (void *)sub_22D2BCBA0();
  }
  else {
    id v29 = 0;
  }
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_22D0348C4;
  *(void *)(v30 + 24) = v19;
  aBlock[4] = sub_22D1F3308;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22D1F193C;
  aBlock[3] = &block_descriptor_15;
  unint64_t v31 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v28, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v20, v24, v25, v27, v26, v29, v31);
  _Block_release(v31);
}

uint64_t sub_22D1F2DD8()
{
  uint64_t v1 = sub_22D2BBC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  sub_22D1F3328(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v10 = (v9 + v7 + v8) & ~v7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = sub_22D2BBC30();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v0 + v8, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  if (!v13(v0 + v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v10, v11);
  }
  unint64_t v14 = (v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | v7 | 7);
}

void sub_22D1F3038(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_22D2BBC90() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  sub_22D1F3328(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  unint64_t v10 = (v7 + v9) & ~v9;
  uint64_t v11 = *(void *)(*(void *)(v8 - 8) + 64);
  unint64_t v12 = (v11 + v9 + v10) & ~v9;
  unint64_t v13 = (v11 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_22D1F2AC4(a1, a2, *(void **)(v2 + 16), v2 + v6, v2 + v10, v2 + v12, *(void *)(v2 + v13), *(void *)(v2 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_22D1F31A8()
{
  if (!qword_26AEC1E28)
  {
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC6E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1E28);
    }
  }
}

uint64_t sub_22D1F3210(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

void sub_22D1F3250(char a1, id a2, void (*a3)(uint64_t, uint64_t))
{
  if (a1)
  {
    a3(1, 0);
  }
  else
  {
    if (a2)
    {
      id v5 = a2;
    }
    else
    {
      sub_22D04C890();
      id v5 = (id)swift_allocError();
      *(void *)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      *(unsigned char *)(v6 + 16) = 2;
    }
    id v7 = a2;
    a3((uint64_t)v5, 1);
  }
}

void sub_22D1F3308(char a1, void *a2)
{
  sub_22D1F3250(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

void sub_22D1F3328(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D1F338C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_22CFF49FC();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    sub_22D1F3454();
    **(void **)(*(void *)(v3 + 64) + 40) = sub_22D2BCE00();
    return MEMORY[0x270FA2408](v3);
  }
}

unint64_t sub_22D1F3454()
{
  unint64_t result = qword_26AEC2FC8;
  if (!qword_26AEC2FC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AEC2FC8);
  }
  return result;
}

uint64_t sub_22D1F3494()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D1F34CC()
{
  uint64_t v1 = sub_22D2BBC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_22D1F3598(unint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_22D2BBC90() - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  sub_22D1F240C(a1, a2, v6, v7, v8);
}

id sub_22D1F362C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    uint64_t v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_22D1F3698()
{
  swift_getMetatypeMetadata();
  uint64_t v1 = sub_22D2BCC30();
  swift_bridgeObjectRetain();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22D1F375C(void *a1, uint64_t a2)
{
  sub_22D1F3DDC();
  uint64_t v44 = v4;
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_22D1F3DDC;
  unint64_t v42 = sub_22D1F3F84;
  sub_22D1F78E0(0, &qword_268542450, (void (*)(uint64_t))sub_22D1F3DDC, (void (*)(void))sub_22D1F3F84);
  uint64_t v45 = v6;
  uint64_t v47 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v41 = (char *)&v35 - v7;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C40]), sel_init);
  sub_22D030474(0, (unint64_t *)&qword_26AEC2FB8);
  id v9 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  id v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 24) = MEMORY[0x263F8EE88];
  id v12 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v9, v10, 0);

  *(void *)(v11 + 16) = v12;
  id v13 = sub_22D1F362C();
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45D38]), sel_initWithHealthStore_, v13);

  uint64_t v48 = &type metadata for WellKnownJWKSHandler;
  sub_22D1F3FB8();
  swift_retain();
  id v38 = v14;
  uint64_t v36 = sub_22D2BCC30();
  uint64_t v16 = v15;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v8;
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D1F3EAC(0, &qword_268542468, &qword_268542440, 0x263F45C38, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v19 = v8;
  id v20 = a1;
  uint64_t v48 = (ValueMetadata *)sub_22D2BC6F0();
  sub_22D1F72CC(&qword_268542470, &qword_268542468, v18);
  uint64_t v21 = sub_22D2BC720();
  swift_release();
  uint64_t v48 = (ValueMetadata *)v21;
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v39 = v11;
  v22[2] = v11;
  v22[3] = v14;
  v22[4] = v36;
  void v22[5] = v16;
  uint64_t v37 = v16;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_22D1F7328;
  *(void *)(v23 + 24) = v22;
  swift_retain();
  id v38 = v38;
  swift_bridgeObjectRetain();
  sub_22D2BC5D0();
  os_log_type_t v24 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D1F3EAC(0, &qword_268542438, &qword_268542440, 0x263F45C38, MEMORY[0x263EFDCF0]);
  sub_22D030474(0, &qword_268542440);
  sub_22D1F72CC(&qword_268542448, &qword_268542438, v24);
  BOOL v25 = v40;
  sub_22D2BC830();
  swift_release();
  swift_release();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v19;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_22D1F732C;
  *(void *)(v27 + 24) = v26;
  id v28 = v19;
  sub_22D2BC5D0();
  sub_22D030474(0, (unint64_t *)&unk_2685426C0);
  sub_22D1F3EAC(0, &qword_268542350, (unint64_t *)&unk_2685426C0, 0x263F45D08, v24);
  sub_22D1F3F84();
  sub_22D1F3F2C(&qword_2685426D0, &qword_268542350, v24);
  id v29 = v41;
  uint64_t v30 = v44;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v30);
  sub_22D1F739C(&qword_268542478, &qword_268542450, (void (*)(uint64_t))v43, (void (*)(void))v42);
  uint64_t v31 = v45;
  uint64_t v32 = sub_22D2BC720();

  swift_bridgeObjectRelease();
  id v33 = v38;

  swift_release_n();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v31);
  return v32;
}

void sub_22D1F3DDC()
{
  if (!qword_268542430)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D1F3EAC(255, &qword_268542438, &qword_268542440, 0x263F45C38, MEMORY[0x263EFDCF0]);
    sub_22D1F72CC(&qword_268542448, &qword_268542438, v0);
    unint64_t v1 = sub_22D2BC520();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268542430);
    }
  }
}

void sub_22D1F3EAC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v8 = sub_22D030474(255, a3);
    unint64_t v9 = sub_22CFF49FC();
    unint64_t v10 = a5(a1, v8, v9, MEMORY[0x263F8E4E0]);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_22D1F3F2C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D1F3EAC(255, a2, (unint64_t *)&unk_2685426C0, 0x263F45D08, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D1F3F84()
{
  return sub_22D1F7620(&qword_268542458, (void (*)(uint64_t))sub_22D1F3DDC);
}

unint64_t sub_22D1F3FB8()
{
  unint64_t result = qword_268542460;
  if (!qword_268542460)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268542460);
  }
  return result;
}

uint64_t sub_22D1F3FF4(uint64_t a1, uint64_t a2)
{
  sub_22D1F3DDC();
  uint64_t v43 = v4;
  uint64_t v45 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v42 = sub_22D1F3DDC;
  unint64_t v41 = sub_22D1F3F84;
  sub_22D1F78E0(0, &qword_268542450, (void (*)(uint64_t))sub_22D1F3DDC, (void (*)(void))sub_22D1F3F84);
  uint64_t v44 = v6;
  uint64_t v46 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (char *)&v34 - v7;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C40]), sel_init);
  sub_22D030474(0, (unint64_t *)&qword_26AEC2FB8);
  id v9 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  id v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 24) = MEMORY[0x263F8EE88];
  id v12 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v9, v10, 0);

  *(void *)(v11 + 16) = v12;
  id v13 = sub_22D1F362C();
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45D38]), sel_initWithHealthStore_, v13);

  uint64_t v47 = &type metadata for WellKnownJWKSHandler;
  sub_22D1F3FB8();
  swift_retain();
  id v37 = v14;
  uint64_t v35 = sub_22D2BCC30();
  uint64_t v16 = v15;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v8;
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D1F3EAC(0, &qword_268542468, &qword_268542440, 0x263F45C38, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v19 = v8;
  swift_bridgeObjectRetain();
  uint64_t v47 = (ValueMetadata *)sub_22D2BC6F0();
  sub_22D1F72CC(&qword_268542470, &qword_268542468, v18);
  uint64_t v20 = sub_22D2BC720();
  swift_release();
  uint64_t v47 = (ValueMetadata *)v20;
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v38 = v11;
  v21[2] = v11;
  v21[3] = v14;
  v21[4] = v35;
  v21[5] = v16;
  uint64_t v36 = v16;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_22D1F7328;
  *(void *)(v22 + 24) = v21;
  swift_retain();
  id v37 = v37;
  swift_bridgeObjectRetain();
  sub_22D2BC5D0();
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D1F3EAC(0, &qword_268542438, &qword_268542440, 0x263F45C38, MEMORY[0x263EFDCF0]);
  sub_22D030474(0, &qword_268542440);
  sub_22D1F72CC(&qword_268542448, &qword_268542438, v23);
  os_log_type_t v24 = v39;
  sub_22D2BC830();
  swift_release();
  swift_release();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v19;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_22D1F7438;
  *(void *)(v26 + 24) = v25;
  id v27 = v19;
  sub_22D2BC5D0();
  sub_22D030474(0, (unint64_t *)&unk_2685426C0);
  sub_22D1F3EAC(0, &qword_268542350, (unint64_t *)&unk_2685426C0, 0x263F45D08, v23);
  sub_22D1F3F84();
  sub_22D1F3F2C(&qword_2685426D0, &qword_268542350, v23);
  id v28 = v40;
  uint64_t v29 = v43;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v29);
  sub_22D1F739C(&qword_268542478, &qword_268542450, (void (*)(uint64_t))v42, (void (*)(void))v41);
  uint64_t v30 = v44;
  uint64_t v31 = sub_22D2BC720();

  swift_bridgeObjectRelease();
  id v32 = v37;

  swift_release_n();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v30);
  return v31;
}

uint64_t sub_22D1F4678(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D1F3EAC(0, &qword_2685426E0, (unint64_t *)&unk_2685426C0, 0x263F45D08, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v6 = a2;
  id v7 = a1;
  sub_22D2BC6F0();
  sub_22D1F3F2C(&qword_2685424F0, &qword_2685426E0, v5);
  uint64_t v8 = sub_22D2BC720();
  swift_release();
  return v8;
}

uint64_t sub_22D1F4790(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_22D2BC370();
  swift_allocObject();
  uint64_t v8 = sub_22D2BC360();
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45D38]), sel_initWithHealthStore_, v9);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(unsigned char *)(v11 + 40) = 1;
  *(void *)(v11 + 48) = v8;
  *(void *)(v11 + 56) = a1;
  v15[4] = sub_22D1F7474;
  void v15[5] = v11;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  void v15[2] = sub_22D061D84;
  v15[3] = &block_descriptor_16;
  id v12 = _Block_copy(v15);
  swift_retain();
  swift_retain();
  swift_retain();
  id v13 = a1;
  swift_release();
  objc_msgSend(v10, sel_fetchSignedClinicalDataGroupBackingMedicalRecord_options_completion_, v13, 11, v12);

  _Block_release(v12);
  return swift_release();
}

uint64_t sub_22D1F4928()
{
  sub_22D2BC370();
  swift_allocObject();
  sub_22D2BC360();
  sub_22D2BC350();
  return swift_release();
}

uint64_t sub_22D1F4984(void *a1, void *a2)
{
  sub_22D1F7490();
  uint64_t v76 = v4;
  uint64_t v77 = *(void (***)(uint64_t, uint64_t))(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v67[0] = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1F7668();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v79 = v6;
  uint64_t v80 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v75 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1F7714(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  uint64_t v83 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v78 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1F7878(0);
  uint64_t v87 = v12;
  uint64_t v89 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v81 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_22D1F7878;
  uint64_t v85 = sub_22D1F79DC;
  sub_22D1F78E0(0, &qword_2685424D8, sub_22D1F7878, (void (*)(void))sub_22D1F79DC);
  uint64_t v88 = v14;
  uint64_t v90 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v84 = (char *)v67 - v15;
  id v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C40]), sel_init);
  sub_22D030474(0, (unint64_t *)&qword_26AEC2FB8);
  id v16 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  id v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 24) = MEMORY[0x263F8EE88];
  id v19 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v16, v17, 0);

  *(void *)(v18 + 16) = v19;
  id v20 = sub_22D1F362C();
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45D38]), sel_initWithHealthStore_, v20);
  id v72 = v21;

  uint64_t v94 = &type metadata for WellKnownJWKSHandler;
  sub_22D1F3FB8();
  swift_retain();
  id v73 = v21;
  uint64_t v71 = sub_22D2BCC30();
  uint64_t v92 = v22;
  id v23 = sub_22D1F362C();
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C78]), sel_initWithHealthStore_, v23);

  sub_22D2BBF60();
  swift_retain();
  id v25 = a1;
  id v26 = a2;
  id v27 = v25;
  id v28 = v26;
  id v29 = v24;
  uint64_t v30 = sub_22D2BBF50();
  uint64_t v94 = (ValueMetadata *)v18;
  id v95 = v27;
  id v96 = v28;
  id v97 = v29;
  uint64_t v98 = v30;
  uint64_t v31 = v30;
  uint64_t v94 = (ValueMetadata *)sub_22D273E14(0);
  id v32 = (void *)swift_allocObject();
  v32[2] = v18;
  v32[3] = v27;
  v32[4] = v28;
  v32[5] = v29;
  v32[6] = v31;
  v32[7] = v28;
  sub_22D1F7530();
  uint64_t v93 = MEMORY[0x263EFDCF8];
  sub_22D1F7620(&qword_2685424A0, (void (*)(uint64_t))sub_22D1F7530);
  id v33 = v28;
  swift_retain();
  id v34 = v27;
  id v35 = v33;
  id v36 = v29;
  swift_retain();
  uint64_t v37 = v67[0];
  sub_22D2BC850();
  swift_release();
  swift_release();
  uint64_t v38 = (void *)swift_allocObject();
  uint64_t v91 = v18;
  v38[2] = v18;
  v38[3] = v34;
  v38[4] = v35;
  v38[5] = v36;
  v38[6] = v31;
  v38[7] = v35;
  v67[1] = v31;
  sub_22D1F75A0();
  sub_22D1F7620(&qword_2685424B0, (void (*)(uint64_t))sub_22D1F7490);
  id v39 = v35;
  swift_retain();
  id v70 = v34;
  id v69 = v39;
  id v68 = v36;
  swift_retain();
  uint64_t v40 = v75;
  uint64_t v41 = v76;
  sub_22D2BC780();
  swift_release();
  v77[1](v37, v41);
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v74;
  *(void *)(v42 + 16) = v74;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_22D1F7B00;
  *(void *)(v44 + 24) = v42;
  uint64_t v77 = v43;
  sub_22D2BC5D0();
  sub_22D030474(0, &qword_268542440);
  uint64_t v45 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D1F3EAC(0, &qword_268542438, &qword_268542440, 0x263F45C38, MEMORY[0x263EFDCF0]);
  sub_22D1F7844();
  sub_22D1F72CC(&qword_268542448, &qword_268542438, v45);
  uint64_t v46 = v78;
  uint64_t v47 = v79;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v40, v47);
  uint64_t v48 = (void *)swift_allocObject();
  uint64_t v49 = v92;
  id v50 = v72;
  v48[2] = v91;
  v48[3] = v50;
  v48[4] = v71;
  v48[5] = v49;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = sub_22D1F7328;
  *(void *)(v51 + 24) = v48;
  swift_retain();
  id v52 = v73;
  swift_bridgeObjectRetain();
  sub_22D2BC5D0();
  sub_22D1F78AC();
  id v53 = v81;
  uint64_t v54 = v82;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v46, v54);
  uint64_t v55 = swift_allocObject();
  int v56 = v77;
  *(void *)(v55 + 16) = v77;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_22D1F7BD0;
  *(void *)(v57 + 24) = v55;
  os_log_t v58 = v56;
  sub_22D2BC5D0();
  sub_22D030474(0, (unint64_t *)&unk_2685426C0);
  sub_22D1F3EAC(0, &qword_268542350, (unint64_t *)&unk_2685426C0, 0x263F45D08, v45);
  sub_22D1F79DC();
  sub_22D1F3F2C(&qword_2685426D0, &qword_268542350, v45);
  uint64_t v59 = v84;
  uint64_t v60 = v87;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v53, v60);
  sub_22D1F739C(&qword_2685424E8, &qword_2685424D8, v86, (void (*)(void))v85);
  uint64_t v61 = v88;
  uint64_t v62 = sub_22D2BC720();
  swift_release();
  id v63 = v68;

  id v64 = v69;
  id v65 = v70;

  swift_bridgeObjectRelease();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v59, v61);
  return v62;
}

uint64_t sub_22D1F5464(void **a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *a1;
  sub_22D274304(a3);
  id v4 = v3;
  return swift_willThrow();
}

uint64_t sub_22D1F54BC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a3;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D1F3EAC(0, &qword_268542468, &qword_268542440, 0x263F45C38, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v8 = a3;
  id v9 = a1;
  sub_22D2BC6F0();
  sub_22D1F72CC(&qword_268542470, &qword_268542468, v7);
  uint64_t v10 = sub_22D2BC720();
  swift_release();
  return v10;
}

uint64_t sub_22D1F55E8(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C40]), sel_init);
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D1F3EAC(0, &qword_2685426E0, (unint64_t *)&unk_2685426C0, 0x263F45D08, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v7 = v4;
  swift_bridgeObjectRetain();
  sub_22D2BC6F0();
  sub_22D1F3F2C(&qword_2685424F0, &qword_2685426E0, v6);
  sub_22D2BC720();
  swift_release();
  id v8 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D1F3EAC(0, &qword_268542350, (unint64_t *)&unk_2685426C0, 0x263F45D08, MEMORY[0x263EFDCF0]);
  sub_22D1F3F2C(&qword_2685426D0, &qword_268542350, v8);
  uint64_t v9 = sub_22D2BC720();
  swift_release();

  return v9;
}

uint64_t sub_22D1F57CC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_22D084058(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  id v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v55 - v13;
  MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v55 - v15;
  sub_22D2BC370();
  swift_allocObject();
  uint64_t v17 = sub_22D2BC360();
  sub_22D2BC330();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_22D2BC390();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    id v21 = a1;
    uint64_t v22 = sub_22D2BC380();
    int v23 = sub_22D2BD080();
    if (os_log_type_enabled(v22, (os_log_type_t)v23))
    {
      int v56 = v23;
      uint64_t v57 = v17;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v64 = v55;
      *(_DWORD *)uint64_t v24 = 136315394;
      uint64_t aBlock = v4;
      swift_getMetatypeMetadata();
      uint64_t aBlock = sub_22D2BCC30();
      unint64_t v59 = v25;
      swift_bridgeObjectRetain();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_22D0A4D24(aBlock, v59, &v64);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      id v26 = objc_msgSend(v21, sel_originIdentifier);
      id v27 = objc_msgSend(v26, sel_signedClinicalDataRecordIdentifier);

      if (v27)
      {
        sub_22D2BBC70();

        uint64_t v28 = sub_22D2BBC90();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v14, 0, 1, v28);
      }
      else
      {
        uint64_t v28 = sub_22D2BBC90();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v14, 1, 1, v28);
      }
      sub_22D1F7DE4((uint64_t)v14, (uint64_t)v16);
      sub_22D2BBC90();
      uint64_t v38 = *(void *)(v28 - 8);
      int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v16, 1, v28);
      uint64_t v17 = v57;
      if (v39 == 1)
      {
        uint64_t v40 = 0x7D6C696E7BLL;
        sub_22D1F7E48((uint64_t)v16);
        unint64_t v41 = 0xE500000000000000;
      }
      else
      {
        uint64_t v40 = sub_22D2BBC40();
        unint64_t v41 = v42;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v28);
      }
      uint64_t aBlock = sub_22D0A4D24(v40, v41, &v64);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v22, (os_log_type_t)v56, "%s will update Wallet pass for record with sync identifier %s by re-adding it", (uint8_t *)v24, 0x16u);
      uint64_t v43 = v55;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v43, -1, -1);
      MEMORY[0x230F7BDF0](v24, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45D38]), sel_initWithHealthStore_, v44);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 24) = 0;
    *(void *)(v46 + 32) = 0;
    *(void *)(v46 + 16) = v2;
    *(unsigned char *)(v46 + 40) = 0;
    *(void *)(v46 + 48) = v17;
    *(void *)(v46 + 56) = v21;
    uint64_t v62 = sub_22D1F7474;
    uint64_t v63 = v46;
    uint64_t aBlock = MEMORY[0x263EF8330];
    unint64_t v59 = 1107296256;
    uint64_t v60 = sub_22D061D84;
    uint64_t v61 = &block_descriptor_83;
    uint64_t v47 = _Block_copy(&aBlock);
    swift_retain();
    id v48 = v21;
    swift_retain();
    swift_release();
    objc_msgSend(v45, sel_fetchSignedClinicalDataGroupBackingMedicalRecord_options_completion_, v48, 11, v47);

    _Block_release(v47);
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_22D2BC390();
    __swift_project_value_buffer(v29, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    id v30 = a1;
    uint64_t v31 = sub_22D2BC380();
    int v32 = sub_22D2BD050();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      int v56 = v32;
      uint64_t v57 = v17;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v64 = v55;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t aBlock = v4;
      swift_getMetatypeMetadata();
      uint64_t aBlock = sub_22D2BCC30();
      unint64_t v59 = v34;
      swift_bridgeObjectRetain();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_22D0A4D24(aBlock, v59, &v64);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      id v35 = objc_msgSend(v30, sel_originIdentifier);
      id v36 = objc_msgSend(v35, sel_signedClinicalDataRecordIdentifier);

      if (v36)
      {
        sub_22D2BBC70();

        uint64_t v37 = sub_22D2BBC90();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v8, 0, 1, v37);
      }
      else
      {
        uint64_t v37 = sub_22D2BBC90();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v8, 1, 1, v37);
      }
      sub_22D1F7DE4((uint64_t)v8, (uint64_t)v11);
      sub_22D2BBC90();
      uint64_t v49 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v11, 1, v37) == 1)
      {
        uint64_t v50 = 0x7D6C696E7BLL;
        sub_22D1F7E48((uint64_t)v11);
        unint64_t v51 = 0xE500000000000000;
      }
      else
      {
        uint64_t v50 = sub_22D2BBC40();
        unint64_t v51 = v52;
        (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v37);
      }
      uint64_t aBlock = sub_22D0A4D24(v50, v51, &v64);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v31, (os_log_type_t)v56, "%s no Wallet pass exists for record with sync identifier %s", (uint8_t *)v33, 0x16u);
      uint64_t v53 = v55;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v53, -1, -1);
      MEMORY[0x230F7BDF0](v33, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  return swift_release();
}

void sub_22D1F61BC(void *a1, void *a2, uint64_t a3, void (*a4)(void, void *), uint64_t a5, char a6, uint64_t a7, void *a8)
{
  sub_22D084058(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  MEMORY[0x270FA5388](v16);
  if (!a1)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_22D2BC390();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
    swift_retain();
    id v21 = a2;
    swift_retain();
    id v22 = a2;
    int v23 = sub_22D2BC380();
    os_log_type_t v24 = sub_22D2BD060();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v27 = sub_22D1F3698();
      sub_22D0A4D24(v27, v28, &v32);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      if (a2)
      {
        swift_getErrorValue();
        uint64_t v29 = sub_22D2BD6D0();
        unint64_t v31 = v30;
      }
      else
      {
        uint64_t v29 = 0x7D6C696E7BLL;
        unint64_t v31 = 0xE500000000000000;
      }
      sub_22D0A4D24(v29, v31, &v32);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v23, v24, "%s failed to retrieve SCD group with error: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v26, -1, -1);
      MEMORY[0x230F7BDF0](v25, -1, -1);

      if (!a4) {
        return;
      }
    }
    else
    {
      swift_release_n();

      if (!a4) {
        return;
      }
    }
    a4(0, a2);
    return;
  }
  id v17 = a1;
  if (a6) {
    sub_22D2BC320();
  }
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a3;
  v18[3] = a8;
  v18[4] = a4;
  v18[5] = a5;
  swift_retain();
  id v19 = a8;
  sub_22D074424((uint64_t)a4);
  sub_22D2BC340();

  swift_release();
}

void sub_22D1F699C(void *a1, uint64_t a2, void *a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v61 = a5;
  sub_22D084058(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v58 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  id v17 = (char *)&v58 - v16;
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v58 - v18;
  if (a1)
  {
    id v20 = a1;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_22D2BC390();
    __swift_project_value_buffer(v21, (uint64_t)qword_26AEC3C90);
    swift_retain();
    id v22 = a3;
    id v23 = a1;
    swift_retain();
    id v24 = v22;
    id v25 = a1;
    uint64_t v26 = sub_22D2BC380();
    os_log_type_t v27 = sub_22D2BD060();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v60 = a4;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v63 = v59;
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v29 = sub_22D1F3698();
      uint64_t v62 = sub_22D0A4D24(v29, v30, &v63);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      id v31 = objc_msgSend(v24, sel_originIdentifier);
      id v32 = objc_msgSend(v31, sel_signedClinicalDataRecordIdentifier);

      if (v32)
      {
        sub_22D2BBC70();

        uint64_t v33 = sub_22D2BBC90();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v17, 0, 1, v33);
      }
      else
      {
        uint64_t v33 = sub_22D2BBC90();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v17, 1, 1, v33);
      }
      sub_22D1F7DE4((uint64_t)v17, (uint64_t)v19);
      sub_22D2BBC90();
      uint64_t v46 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v19, 1, v33) == 1)
      {
        uint64_t v47 = 0x7D6C696E7BLL;
        sub_22D1F7E48((uint64_t)v19);
        unint64_t v48 = 0xE500000000000000;
      }
      else
      {
        uint64_t v47 = sub_22D2BBC40();
        unint64_t v48 = v49;
        (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v33);
      }
      uint64_t v62 = sub_22D0A4D24(v47, v48, &v63);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v50 = sub_22D2BD6D0();
      uint64_t v62 = sub_22D0A4D24(v50, v51, &v63);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v26, v27, "%s failed to add Wallet pass for record with sync identifier %s: %s", (uint8_t *)v28, 0x20u);
      uint64_t v52 = v59;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v52, -1, -1);
      MEMORY[0x230F7BDF0](v28, -1, -1);

      a4 = v60;
      if (!v60) {
        goto LABEL_22;
      }
    }
    else
    {

      swift_release_n();
      if (!a4) {
        goto LABEL_22;
      }
    }
    id v53 = a1;
    a4(0, a1);

LABEL_22:
    return;
  }
  uint64_t v60 = a4;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_22D2BC390();
  __swift_project_value_buffer(v34, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  id v35 = a3;
  id v36 = sub_22D2BC380();
  os_log_type_t v37 = sub_22D2BD080();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v63 = v39;
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v40 = sub_22D1F3698();
    uint64_t v62 = sub_22D0A4D24(v40, v41, &v63);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    id v42 = objc_msgSend(v35, sel_originIdentifier);
    id v43 = objc_msgSend(v42, sel_signedClinicalDataRecordIdentifier);

    if (v43)
    {
      sub_22D2BBC70();

      uint64_t v44 = sub_22D2BBC90();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v11, 0, 1, v44);
    }
    else
    {
      uint64_t v44 = sub_22D2BBC90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v11, 1, 1, v44);
    }
    sub_22D1F7DE4((uint64_t)v11, (uint64_t)v14);
    sub_22D2BBC90();
    uint64_t v54 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v14, 1, v44) == 1)
    {
      uint64_t v55 = 0x7D6C696E7BLL;
      sub_22D1F7E48((uint64_t)v14);
      unint64_t v56 = 0xE500000000000000;
    }
    else
    {
      uint64_t v55 = sub_22D2BBC40();
      unint64_t v56 = v57;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v44);
    }
    uint64_t v62 = sub_22D0A4D24(v55, v56, &v63);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v36, v37, "%s did add Wallet pass for record with sync identifier %s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v39, -1, -1);
    MEMORY[0x230F7BDF0](v38, -1, -1);

    id v45 = v60;
    if (v60) {
      goto LABEL_28;
    }
  }
  else
  {

    swift_release_n();
    id v45 = v60;
    if (v60) {
LABEL_28:
    }
      v45(1, 0);
  }
}

uint64_t SignedClinicalDataManager.deinit()
{
  return v0;
}

uint64_t SignedClinicalDataManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_22D1F7280()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22D1F72C0(uint64_t a1, uint64_t a2)
{
  sub_22D26D7E4(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_22D1F72CC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D1F3EAC(255, a2, &qword_268542440, 0x263F45C38, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D1F732C(void *a1)
{
  return sub_22D1F4678(a1, *(void **)(v1 + 16));
}

uint64_t sub_22D1F7364()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D1F739C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D1F78E0(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D1F73F0(uint64_t a1, uint64_t a2)
{
  sub_22D26DA78(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_22D1F7400()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D1F7438(void *a1)
{
  return sub_22D1F4678(a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

void sub_22D1F7490()
{
  if (!qword_268542480)
  {
    sub_22D1F7530();
    sub_22D1F7620(&qword_2685424A0, (void (*)(uint64_t))sub_22D1F7530);
    unint64_t v0 = sub_22D2BC570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542480);
    }
  }
}

void sub_22D1F7530()
{
  if (!qword_268542488)
  {
    sub_22D1F75A0();
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542488);
    }
  }
}

void sub_22D1F75A0()
{
  if (!qword_268542490)
  {
    sub_22D030474(255, &qword_268542498);
    type metadata accessor for HKSignedClinicalDataProcessingOptions(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268542490);
    }
  }
}

uint64_t sub_22D1F7620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D1F7668()
{
  if (!qword_2685424A8)
  {
    sub_22D1F7490();
    sub_22D1F75A0();
    sub_22D1F7620(&qword_2685424B0, (void (*)(uint64_t))sub_22D1F7490);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685424A8);
    }
  }
}

void sub_22D1F7714(uint64_t a1)
{
}

void sub_22D1F7748(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D1F3EAC(255, &qword_268542438, &qword_268542440, 0x263F45C38, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_22D1F72CC(&qword_268542448, &qword_268542438, v7);
    a4();
    unint64_t v8 = sub_22D2BC520();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D1F7844()
{
  return sub_22D1F7620(&qword_2685424C0, (void (*)(uint64_t))sub_22D1F7668);
}

void sub_22D1F7878(uint64_t a1)
{
}

uint64_t sub_22D1F78AC()
{
  return sub_22D1F7620(&qword_2685424D0, sub_22D1F7714);
}

void sub_22D1F78E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D1F3EAC(255, &qword_268542350, (unint64_t *)&unk_2685426C0, 0x263F45D08, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_22D1F3F2C(&qword_2685426D0, &qword_268542350, v7);
    a4();
    unint64_t v8 = sub_22D2BC520();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D1F79DC()
{
  return sub_22D1F7620(&qword_2685424E0, sub_22D1F7878);
}

uint64_t sub_22D1F7A14(void **a1)
{
  return sub_22D1F5464(a1, v1 + 16, *(void **)(v1 + 56));
}

uint64_t objectdestroy_34Tm()
{
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

id sub_22D1F7A98@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  id v6 = *(id *)a1;
  sub_22D274304(*(void **)(v2 + 56));
  *a2 = v6;
  a2[1] = v4;
  return v6;
}

uint64_t sub_22D1F7B00(void *a1, uint64_t a2)
{
  return sub_22D1F54BC(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_22D1F7B08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t objectdestroy_2Tm_1()
{
  swift_release();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D1F7B8C(void *a1)
{
  return WellKnownJWKSHandler.extractAndLoadJWKS(from:)(a1);
}

uint64_t sub_22D1F7BD0(void *a1)
{
  return sub_22D1F4678(a1, *(void **)(v1 + 16));
}

uint64_t objectdestroy_14Tm_0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22D1F7C4C(uint64_t a1, uint64_t a2)
{
  sub_22D26DBCC(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t type metadata accessor for SignedClinicalDataManager()
{
  return self;
}

uint64_t method lookup function for SignedClinicalDataManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SignedClinicalDataManager);
}

uint64_t dispatch thunk of SignedClinicalDataManager.signedClinicalDataParser(for:options:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.signedClinicalDataReverificationPublisher(records:options:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.addCardToWallet(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.didUpdateSignedClinicalDataRecord(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.willDeleteSignedClinicalDataRecord(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.signedClinicalDataHandler(for:context:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of SignedClinicalDataManager.originalSignedClinicalDataProcessor(for:options:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_22D1F7D90()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D1F7DD0(uint64_t a1, uint64_t a2)
{
  sub_22D26DD20(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

void sub_22D1F7DD8(uint64_t a1, uint64_t a2)
{
  sub_22D26D950(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_22D1F7DE4(uint64_t a1, uint64_t a2)
{
  sub_22D084058(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D1F7E48(uint64_t a1)
{
  sub_22D084058(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroy_31Tm()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_22D1F7F00(void *a1, void *a2)
{
  sub_22D1F61BC(a1, a2, *(void *)(v2 + 16), *(void (**)(void, void *))(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_22D1F7F14()
{
  swift_release();

  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_22D1F7F64(void *a1)
{
  sub_22D1F699C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(void, void))(v1 + 32), *(void *)(v1 + 40));
}

void sub_22D1F7FB0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_22D2BC390();
  __swift_project_value_buffer(v10, (uint64_t)qword_26AEC3C90);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = a1;
  osos_log_type_t log = sub_22D2BC380();
  os_log_type_t v13 = sub_22D2BD060();
  if (os_log_type_enabled(oslog, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v20 = v15;
    *(_DWORD *)uint64_t v14 = 136315906;
    swift_bridgeObjectRetain();
    sub_22D0A4D24(a2, a3, &v20);
    sub_22D2BD220();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_22D0A4D24(a4, a5, &v20);
    sub_22D2BD220();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2048;
    sub_22D2BD220();
    *(_WORD *)(v14 + 32) = 2080;
    id v16 = a1;
    sub_22CFF49FC();
    uint64_t v17 = sub_22D2BCC30();
    sub_22D0A4D24(v17, v18, &v20);
    sub_22D2BD220();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, oslog, v13, "Sending message to remote object proxy failed at %s:%s:%ld: %s", (uint8_t *)v14, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v15, -1, -1);
    MEMORY[0x230F7BDF0](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_22D1F82AC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = MEMORY[0x263F8EE78];
  sub_22D1F846C();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a5;
  void v14[3] = a6;
  v14[4] = v13;
  v14[5] = sub_22D034BAC;
  v14[6] = v12;
  swift_retain();
  id v15 = a4;
  id v16 = a6;
  swift_retain();
  id v17 = (id)sub_22D2BD140();
  objc_msgSend(a3, sel_executeQuery_, v17);
  swift_release();
}

uint64_t sub_22D1F83FC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D1F8434()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

unint64_t sub_22D1F846C()
{
  unint64_t result = qword_2685424F8;
  if (!qword_2685424F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2685424F8);
  }
  return result;
}

void sub_22D1F84AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(id, uint64_t), uint64_t a7)
{
  v34[1] = a7;
  id v35 = a6;
  uint64_t v11 = sub_22D2BD130();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v17 = (id *)((char *)v34 - v16);
  unint64_t v18 = (char **)(a5 + 16);
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19((char *)v34 - v16, a2, v11);
  int v20 = (*(uint64_t (**)(id *, uint64_t))(v12 + 88))(v17, v11);
  if (v20 == *MEMORY[0x263F09150])
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v17, v11);
    id v21 = *v17;
    id v22 = objc_msgSend(*v17, sel_quantityForLead_, a3);
    if (v22)
    {
      id v23 = v22;
      objc_msgSend(v22, sel_doubleValueForUnit_, a4);
      double v25 = v24;

      swift_beginAccess();
      uint64_t v26 = *v18;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      void *v18 = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v26 = sub_22D281D4C(0, *((void *)v26 + 2) + 1, 1, v26);
        void *v18 = v26;
      }
      unint64_t v29 = *((void *)v26 + 2);
      unint64_t v28 = *((void *)v26 + 3);
      if (v29 >= v28 >> 1)
      {
        uint64_t v26 = sub_22D281D4C((char *)(v28 > 1), v29 + 1, 1, v26);
        void *v18 = v26;
      }
      float v30 = v25;
      *((void *)v26 + 2) = v29 + 1;
      *(float *)&v26[4 * v29 + 32] = v30;
      swift_endAccess();
    }
  }
  else if (v20 == *MEMORY[0x263F09160])
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v17, v11);
    id v31 = *v17;
    id v32 = *v17;
    v35(v31, 1);
  }
  else if (v20 == *MEMORY[0x263F09158])
  {
    swift_beginAccess();
    uint64_t v33 = swift_bridgeObjectRetain();
    v35((id)v33, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    v19(v15, a2, v11);
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    sub_22D2BD310();
    sub_22D2BCCB0();
    sub_22D2BD430();
    sub_22D2BD460();
    __break(1u);
  }
}

uint64_t sub_22D1F884C()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_22D1F8894(uint64_t a1, uint64_t a2)
{
  sub_22D1F84AC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(id, uint64_t))(v2 + 40), *(void *)(v2 + 48));
}

char *sub_22D1F88A4(char *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    uint64_t v8 = a3[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_22D2BBC30();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_retain();
    v13(v9, v10, v11);
    uint64_t v14 = a3[7];
    id v15 = &v7[v14];
    uint64_t v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v13(&v7[a3[8]], &a2[a3[8]], v11);
    uint64_t v18 = a3[10];
    v7[a3[9]] = a2[a3[9]];
    v7[v18] = a2[v18];
    uint64_t v19 = a3[11];
    int v20 = &v7[v19];
    id v21 = &a2[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)int v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_22D1F8AC4(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_22D2BBC30();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  v7(a1 + a2[8], v5);
  return swift_bridgeObjectRelease();
}

char *sub_22D1F8BD4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_retain();
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  id v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v12(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v17 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v17] = a2[v17];
  uint64_t v18 = a3[11];
  uint64_t v19 = &a1[v18];
  int v20 = &a2[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_22D1F8DA0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  os_log_type_t v27 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v27(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a2[v11];
  uint64_t v13 = *(uint64_t (**)(void))(v10 + 48);
  double v25 = &a1[v11];
  int v14 = v13();
  __src = v12;
  int v15 = ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v12, 1, v9);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v25, v12, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
      goto LABEL_8;
    }
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    uint64_t v18 = v25;
  }
  else
  {
    if (!v15)
    {
      int v20 = v27;
      v27(v25, __src, v9);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    size_t v17 = *(void *)(*(void *)(v19 - 8) + 64);
    uint64_t v18 = v25;
  }
  memcpy(v18, v12, v17);
LABEL_8:
  int v20 = v27;
LABEL_9:
  v20(&a1[a3[8]], &a2[a3[8]], v9);
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  id v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_22D1F9060(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  int v14 = &a1[v13];
  int v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v12(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v17 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v17] = a2[v17];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  return a1;
}

char *sub_22D1F9218(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  float v30 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v30(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a2[v11];
  uint64_t v13 = *(uint64_t (**)(void))(v10 + 48);
  unint64_t v28 = &a1[v11];
  int v14 = v13();
  __src = v12;
  int v15 = ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v12, 1, v9);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v28, v12, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
      goto LABEL_8;
    }
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    uint64_t v18 = v28;
  }
  else
  {
    if (!v15)
    {
      int v20 = v30;
      v30(v28, __src, v9);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v28, v9);
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    size_t v17 = *(void *)(*(void *)(v19 - 8) + 64);
    uint64_t v18 = v28;
  }
  memcpy(v18, v12, v17);
LABEL_8:
  int v20 = v30;
LABEL_9:
  v20(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v21 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v21] = a2[v21];
  uint64_t v22 = a3[11];
  id v23 = &a1[v22];
  double v24 = (uint64_t *)&a2[v22];
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *(void *)id v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D1F94BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1F94D0);
}

uint64_t sub_22D1F94D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_22D1F962C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1F9640);
}

void *sub_22D1F9640(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingOperationalMetric(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542500);
}

void sub_22D1F97BC()
{
  sub_22D2BBC30();
  if (v0 <= 0x3F)
  {
    sub_22D1F9D7C(319, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_22D1F98E8()
{
  sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v35 = (uint64_t)&v32 - v2;
  sub_22D1F9D7C(0, (unint64_t *)&qword_26AEC22B0, (uint64_t (*)(uint64_t))sub_22D0C2A78, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22D2C39B0;
  *(void *)(inited + 32) = 0xD00000000000001DLL;
  *(void *)(inited + 40) = 0x800000022D2D7390;
  uint64_t v4 = type metadata accessor for ClinicalSharingOperationalMetric(0);
  char v5 = *((unsigned char *)v0 + *(int *)(v4 + 36));
  *(void *)(inited + 72) = &type metadata for IHRMetricField;
  *(void *)(inited + 80) = &off_26E05DF38;
  *(unsigned char *)(inited + 48) = v5;
  *(void *)(inited + 88) = 0x7361655268737570;
  *(void *)(inited + 96) = 0xEA00000000006E6FLL;
  uint64_t v6 = v0[1];
  *(void *)(inited + 128) = &type metadata for PushReasonMetricField;
  *(void *)(inited + 136) = &off_26E0635F8;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 144) = 0x73736563637573;
  *(void *)(inited + 152) = 0xE700000000000000;
  uint64_t v7 = *v0;
  uint64_t v8 = OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error;
  BOOL v9 = *(void *)(*v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_error) == 0;
  *(void *)(inited + 184) = &type metadata for SyncSuccessMetricField;
  *(void *)(inited + 192) = &off_26E0635E0;
  *(unsigned char *)(inited + 160) = v9;
  *(void *)(inited + 200) = 0x6D6F44726F727265;
  *(void *)(inited + 208) = 0xEB000000006E6961;
  id v34 = *(id *)(v7 + v8);
  id v10 = v34;
  *(void *)(inited + 240) = &type metadata for ErrorDomainMetricField;
  *(void *)(inited + 248) = &off_26E05DF20;
  *(void *)(inited + 216) = v10;
  strcpy((char *)(inited + 256), "errorMessage");
  *(unsigned char *)(inited + 269) = 0;
  *(_WORD *)(inited + 270) = -5120;
  id v33 = *(id *)(v7 + v8);
  id v11 = v33;
  *(void *)(inited + 296) = &type metadata for ErrorMessageMetricField;
  *(void *)(inited + 304) = &off_26E05DF08;
  *(void *)(inited + 272) = v11;
  *(void *)(inited + 312) = 0xD000000000000014;
  *(void *)(inited + 320) = 0x800000022D2DD2D0;
  uint64_t v12 = v4;
  uint64_t v32 = v4;
  uint64_t v13 = (uint64_t)v0 + *(int *)(v4 + 28);
  uint64_t PushMetricField = type metadata accessor for MinutesSinceLastPushMetricField(0);
  *(void *)(inited + 352) = PushMetricField;
  *(void *)(inited + 360) = &off_26E0635C8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 328));
  sub_22D04BDE8(v13, (uint64_t)boxed_opaque_existential_1);
  uint64_t v16 = (char *)v0 + *(int *)(v12 + 24);
  size_t v17 = (char *)boxed_opaque_existential_1 + *(int *)(PushMetricField + 20);
  uint64_t v18 = sub_22D2BBC30();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  v19(v17, v16, v18);
  *(void *)(inited + 368) = 0xD00000000000001ELL;
  *(void *)(inited + 376) = 0x800000022D2DD2F0;
  uint64_t v20 = v7 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_lastSync;
  swift_beginAccess();
  uint64_t v21 = v35;
  sub_22D04BDE8(v20, v35);
  Successfuluint64_t PushMetricField = type metadata accessor for MinutesSinceLastSuccessfulPushMetricField(0);
  *(void *)(inited + 408) = SuccessfulPushMetricField;
  *(void *)(inited + 416) = &off_26E0635B0;
  id v23 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 384));
  double v24 = (char *)v23 + *(int *)(SuccessfulPushMetricField + 20);
  uint64_t v25 = v16;
  v19(v24, v16, v18);
  sub_22D043228(v21, (uint64_t)v23);
  *(void *)(inited + 424) = 0xD000000000000011;
  *(void *)(inited + 432) = 0x800000022D2DD310;
  uint64_t v26 = (char *)v0 + *(int *)(v32 + 32);
  uint64_t v27 = type metadata accessor for OperationDurationMetricField(0);
  *(void *)(inited + 464) = v27;
  *(void *)(inited + 472) = &off_26E063598;
  unint64_t v28 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 440));
  v19((char *)v28, v26, v18);
  v19((char *)v28 + *(int *)(v27 + 20), v25, v18);
  id v29 = v34;
  id v30 = v33;
  return sub_22D0D37CC(inited);
}

uint64_t sub_22D1F9D34(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D1F9D70(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

void sub_22D1F9D7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for MinutesSinceLastPushMetricField(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542530);
}

uint64_t type metadata accessor for MinutesSinceLastSuccessfulPushMetricField(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542520);
}

uint64_t type metadata accessor for OperationDurationMetricField(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542510);
}

uint64_t *sub_22D1F9E40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22D2BBC30();
    unint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_22D1F9F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC30();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t sub_22D1F9FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22D1FA060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22D1FA0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22D1FA190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22D1FA228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1FA23C);
}

uint64_t sub_22D1FA23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_22D1FA2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1FA2BC);
}

uint64_t sub_22D1FA2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_22D1FA32C()
{
  uint64_t result = sub_22D2BBC30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22D1FA3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_5Tm);
}

uint64_t sub_22D1FA3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_6Tm);
}

uint64_t *sub_22D1FA404(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22D2BBC30();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), v7);
    }
    else
    {
      id v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
      v11(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      v11((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    }
  }
  return a1;
}

uint64_t sub_22D1FA5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v4 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v4);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v5)
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v6(a1, v4);
    uint64_t v6 = v9;
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(v7, v4);
}

char *sub_22D1FA6B8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  else
  {
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v9(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v9(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  return a1;
}

char *sub_22D1FA830(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  return a1;
}

char *sub_22D1FAA04(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  else
  {
    int v9 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v9(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v9(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  return a1;
}

char *sub_22D1FAB7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  return a1;
}

uint64_t sub_22D1FAD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1FAD64);
}

uint64_t __swift_get_extra_inhabitant_index_5Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_22D2BBC30();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_22D1FAE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1FAEA4);
}

uint64_t __swift_store_extra_inhabitant_index_6Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_22D1F9D7C(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_22D2BBC30();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_22D1FAFDC()
{
  sub_22D1F9D7C(319, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D2BBC30();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SyncSuccessMetricField(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D1FB1A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncSuccessMetricField()
{
  return &type metadata for SyncSuccessMetricField;
}

ValueMetadata *type metadata accessor for PushReasonMetricField()
{
  return &type metadata for PushReasonMetricField;
}

uint64_t sub_22D1FB1E8@<X0>(void *a1@<X8>)
{
  return sub_22D1FB240((void (*)(void))type metadata accessor for MinutesSinceLastPushMetricField, a1);
}

uint64_t sub_22D1FB214@<X0>(void *a1@<X8>)
{
  return sub_22D1FB240((void (*)(void))type metadata accessor for MinutesSinceLastSuccessfulPushMetricField, a1);
}

uint64_t sub_22D1FB240@<X0>(void (*a1)(void)@<X3>, void *a2@<X8>)
{
  a1(0);
  uint64_t result = sub_22D2BBBA0();
  double v5 = v4 / 60.0;
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v5 < 9.22337204e18)
  {
    *a2 = (uint64_t)v5;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_22D1FB2E8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date;
  uint64_t v2 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar;
  uint64_t v4 = sub_22D2BBE00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_22D1FB3EC()
{
  return type metadata accessor for ClinicalSharingQueryContext(0);
}

uint64_t type metadata accessor for ClinicalSharingQueryContext(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542540);
}

uint64_t sub_22D1FB414()
{
  uint64_t result = sub_22D2BBC30();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22D2BBE00();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_22D1FB504(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for PBTypedData(0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    uint64_t v9 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void **)v11;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v12)
    {
      uint64_t v13 = *((void *)v11 + 1);
      *uint64_t v10 = v12;
      v10[1] = v13;
      id v14 = v12;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    }
  }
  return a1;
}

uint64_t sub_22D1FB628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PBTypedData(0);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  unsigned int v6 = (id *)(a1 + *(int *)(a2 + 24));
  if (*v6)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22D1FB6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for PBTypedData(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void **)(a2 + v8);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v12 = *(void *)(v10 + 8);
    void *v9 = v11;
    v9[1] = v12;
    id v13 = v11;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  }
  return a1;
}

uint64_t sub_22D1FB7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for PBTypedData(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void **)(a1 + v8);
  uint64_t v12 = *(void **)v10;
  if (!v11)
  {
    if (v12)
    {
      *(void *)uint64_t v9 = v12;
      *(void *)(v9 + 8) = *(void *)(v10 + 8);
      id v14 = v12;
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    return a1;
  }
  if (!v12)
  {
    sub_22D1FB8D0((id *)v9);
    goto LABEL_7;
  }
  *(void *)uint64_t v9 = v12;
  id v13 = v12;

  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_22D1FB8D0(id *a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D1FB904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for PBTypedData(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_22D1FB99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for PBTypedData(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void **)(a1 + v8);
  if (!v11) {
    goto LABEL_5;
  }
  if (!*(void *)v10)
  {
    sub_22D1FB8D0((id *)v9);
LABEL_5:
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    return a1;
  }
  *(void *)uint64_t v9 = *(void *)v10;

  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D1FBA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1FBA98);
}

uint64_t sub_22D1FBA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PBTypedData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_22D1FBB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1FBB6C);
}

uint64_t sub_22D1FBB6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PBTypedData(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingQueryOutput(uint64_t a1)
{
  return sub_22D01234C(a1, qword_26AEC27C8);
}

uint64_t sub_22D1FBC48()
{
  uint64_t result = type metadata accessor for PBTypedData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ClinicalSharingQueryOutput.AssociatedDateIntervals(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ClinicalSharingQueryOutput.AssociatedDateIntervals(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ClinicalSharingQueryOutput.AssociatedDateIntervals(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for ClinicalSharingQueryOutput.AssociatedDateIntervals(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingQueryOutput.AssociatedDateIntervals()
{
  return &type metadata for ClinicalSharingQueryOutput.AssociatedDateIntervals;
}

uint64_t sub_22D1FBE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  sub_22D0B0E78();
  if ((sub_22D2BD1A0() & 1) == 0) {
    return 0;
  }
  return sub_22D110350(v2, v3);
}

uint64_t sub_22D1FBE88(uint64_t a1, uint64_t a2)
{
  if (static PBTypedData.== infix(_:_:)(a1, a2))
  {
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    if (sub_22D1E2EA8(*(void *)(a1 + *(int *)(Output + 20)), *(void *)(a2 + *(int *)(Output + 20))))
    {
      uint64_t v5 = *(int *)(Output + 24);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = *(void **)(a1 + v5);
      uint64_t v8 = a2 + v5;
      uint64_t v9 = *(void **)v8;
      if (v7)
      {
        if (v9)
        {
          uint64_t v10 = *(void *)(v6 + 8);
          uint64_t v11 = *(void *)(v8 + 8);
          sub_22D0B0E78();
          sub_22D1FBFB8(v7);
          sub_22D1FBFB8(v7);
          sub_22D1FBFB8(v9);
          if (sub_22D2BD1A0())
          {
            char v12 = sub_22D110350(v10, v11);
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            sub_22D1FBFF8(v7);
            if (v12) {
              return 1;
            }
          }
          else
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            sub_22D1FBFF8(v7);
          }
        }
      }
      else if (!v9)
      {
        return 1;
      }
    }
  }
  return 0;
}

void *sub_22D1FBFB8(void *result)
{
  if (result)
  {
    id v1 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_22D1FBFF8(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FHIRServerWebRequest.init(method:url:body:headers:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(unsigned char *)a6 = *a1;
  uint64_t v11 = (int *)type metadata accessor for FHIRServerWebRequest();
  uint64_t v12 = a6 + v11[6];
  uint64_t v13 = sub_22D2BBAA0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a2, v13);
  uint64_t v15 = (uint64_t *)(a6 + v11[7]);
  *uint64_t v15 = a3;
  v15[1] = a4;
  *(void *)(a6 + 8) = a5;
  sub_22CFFA158(a3, a4);
  sub_22D2BD310();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  sub_22D1FC2F8();
  sub_22D2BD630();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22CFF9C10(a3, a4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
  size_t v17 = (void *)(a6 + v11[8]);
  void *v17 = 0xD000000000000015;
  v17[1] = 0x800000022D2DD3D0;
  return result;
}

uint64_t type metadata accessor for FHIRServerWebRequest()
{
  uint64_t result = qword_268542550;
  if (!qword_268542550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_22D1FC2F8()
{
  unint64_t result = qword_26853D898;
  if (!qword_26853D898)
  {
    sub_22D2BBAA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853D898);
  }
  return result;
}

void FHIRServerWebRequest.method.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FHIRServerWebRequest.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FHIRServerWebRequest.headers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FHIRServerWebRequest.headers.modify())()
{
  return nullsub_1;
}

uint64_t FHIRServerWebRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FHIRServerWebRequest() + 24);
  uint64_t v4 = sub_22D2BBAA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FHIRServerWebRequest.body.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for FHIRServerWebRequest() + 28);
  uint64_t v2 = *(void *)v1;
  sub_22CFFA158(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t FHIRServerWebRequest.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FHIRServerWebRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t getEnumTagSinglePayload for FHIRServerWebRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1FC4C0);
}

uint64_t sub_22D1FC4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FHIRServerWebRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1FC59C);
}

uint64_t sub_22D1FC59C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_22D2BBAA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_22D1FC660()
{
  uint64_t result = sub_22D2BBAA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_22D1FC714(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_22D2BBC90();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF9E78();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22D2BBAA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v35 - v15;
  uint64_t v39 = (int *)type metadata accessor for ClinicalDocumentDownloadRequest();
  uint64_t v17 = a2 + v39[7];
  *(_OWORD *)uint64_t v17 = xmmword_22D2BFCE0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)a2 = 2;
  id v42 = a1;
  id v18 = objc_msgSend(a1, sel_webURL);
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  uint64_t v19 = v18;
  v35[1] = v2;
  sub_22D2BBA50();

  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v9, v14, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_22D085138((uint64_t)v9);
    sub_22D1FCBEC();
    swift_allocError();
    void *v34 = 0;
    swift_willThrow();

    swift_bridgeObjectRelease();
    sub_22CFF9C10(*(void *)v17, *(void *)(v17 + 8));
    return;
  }
  v20(v16, v9, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a2 + v39[6], v16, v10);
  unint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  sub_22D2BD310();
  swift_bridgeObjectRelease();
  unint64_t v40 = 0xD000000000000024;
  unint64_t v41 = 0x800000022D2DD3F0;
  id v21 = v42;
  id v22 = objc_msgSend(v42, sel_identifier);
  id v23 = v36;
  sub_22D2BBC70();

  sub_22D1FCC40();
  uint64_t v24 = v38;
  sub_22D2BD630();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v24);
  unint64_t v25 = v40;
  unint64_t v26 = v41;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  uint64_t v27 = (unint64_t *)(a2 + v39[8]);
  unint64_t *v27 = v25;
  v27[1] = v26;
  id v28 = objc_msgSend(v21, sel_contentType);
  if (v28)
  {
    id v29 = v28;
    uint64_t v30 = sub_22D2BCBD0();
    uint64_t v32 = v31;

    sub_22D0B8300();
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_22D2BFF40;
    *(void *)(v33 + 32) = 0x747065636341;
    *(void *)(v33 + 40) = 0xE600000000000000;
    *(void *)(v33 + 48) = v30;
    *(void *)(v33 + 56) = v32;

    swift_bridgeObjectRelease();
    *(void *)(a2 + 8) = v33;
  }
  else
  {
  }
}

uint64_t type metadata accessor for ClinicalDocumentDownloadRequest()
{
  uint64_t result = qword_268542568;
  if (!qword_268542568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_22D1FCBEC()
{
  unint64_t result = qword_268542560;
  if (!qword_268542560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542560);
  }
  return result;
}

unint64_t sub_22D1FCC40()
{
  unint64_t result = qword_26853DF20;
  if (!qword_26853DF20)
  {
    sub_22D2BBC90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853DF20);
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for ClinicalDocumentDownloadRequestError(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for ClinicalDocumentDownloadRequestError(id *a1)
{
}

void **assignWithCopy for ClinicalDocumentDownloadRequestError(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **assignWithTake for ClinicalDocumentDownloadRequestError(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalDocumentDownloadRequestError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ClinicalDocumentDownloadRequestError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_22D1FCDE0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_22D1FCDF8(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalDocumentDownloadRequestError()
{
  return &type metadata for ClinicalDocumentDownloadRequestError;
}

uint64_t sub_22D1FCE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1FCE3C);
}

uint64_t sub_22D1FCE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_22D1FCF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1FCF18);
}

uint64_t sub_22D1FCF18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_22D2BBAA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_22D1FCFDC()
{
  uint64_t result = sub_22D2BBAA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingActiveMedicationQuery()
{
  return &type metadata for ClinicalSharingActiveMedicationQuery;
}

uint64_t sub_22D1FD0A4(uint64_t a1)
{
  sub_22D1FDE88();
  uint64_t v27 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1FE044(0, &qword_2685425A8, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  uint64_t v29 = v6;
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v25 - v7;
  sub_22D1FE044(0, &qword_2685425B0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  uint64_t v28 = v9;
  uint64_t v30 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v25 - v10;
  sub_22D2BCBD0();
  id v12 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v13 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithKey_ascending_, v13, 0);

  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  sub_22CFF4B64();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_22D2BFBE0;
  *(void *)(v15 + 32) = v14;
  uint64_t v32 = v15;
  sub_22D2BCE20();
  uint64_t v16 = v32;
  id v26 = v14;
  uint64_t v17 = sub_22D271E20(v16);
  swift_bridgeObjectRelease();
  uint64_t v32 = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_22D1FE0C0;
  *(void *)(v18 + 24) = a1;
  sub_22D1FDF14();
  sub_22D030474(0, &qword_268542598);
  sub_22D1FDFEC();
  swift_retain();
  sub_22D2BC730();
  swift_release();
  swift_release();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_22D1FE134;
  *(void *)(v19 + 24) = a1;
  type metadata accessor for PBTypedData(0);
  swift_retain();
  uint64_t v20 = v27;
  sub_22D2BC3C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  swift_retain();
  uint64_t v21 = v29;
  sub_22D2BC3C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v21);
  sub_22D1FE144();
  uint64_t v22 = v28;
  uint64_t v23 = sub_22D2BC720();

  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v22);
  return v23;
}

uint64_t sub_22D1FD52C(unint64_t a1)
{
  unint64_t v1 = sub_22D0A965C(a1);
  if (!v1) {
    goto LABEL_13;
  }
  unint64_t v2 = v1;
  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v1 >> 62)
  {
    if (sub_22D2BD470()) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x230F7AF90](0, v2);
    goto LABEL_7;
  }
  if (*(void *)(v3 + 16))
  {
    id v4 = *(id *)(v2 + 32);
LABEL_7:
    id v5 = v4;
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  __break(1u);
LABEL_13:
  uint64_t result = sub_22D2BD460();
  __break(1u);
  return result;
}

uint64_t sub_22D1FD618@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22D05C844(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for PBActiveMedications(0);
  uint64_t v12 = MEMORY[0x270FA5388](v58);
  id v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (uint64_t *)((char *)&v50 - v15);
  uint64_t v60 = sub_22D2BBC90();
  uint64_t v17 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v20 = a1;
    uint64_t v21 = objc_msgSend(v20, sel_linkCollection);
    uint64_t v22 = v21;
    unint64_t v56 = v8;
    id v57 = v20;
    uint64_t v55 = v11;
    if (v21)
    {
      id v23 = objc_msgSend(v21, sel_links);

      sub_22D030474(0, &qword_2685425C0);
      unint64_t v24 = sub_22D2BCE00();

      unint64_t v25 = v24;
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_22D2BD470();
        swift_bridgeObjectRelease();
        if (v26) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v26)
        {
LABEL_5:
          uint64_t v61 = (void *)MEMORY[0x263F8EE78];
          uint64_t result = sub_22D24B86C(0, v26 & ~(v26 >> 63), 0);
          if (v26 < 0)
          {
            __break(1u);
            return result;
          }
          uint64_t v59 = v26;
          uint64_t v51 = a2;
          uint64_t v52 = v14;
          id v53 = v16;
          uint64_t v54 = a3;
          uint64_t v28 = 0;
          unint64_t v29 = v25 & 0xC000000000000001;
          uint64_t v30 = (void (**)(char *, uint64_t))(v17 + 8);
          unint64_t v31 = v25;
          do
          {
            if (v29) {
              id v32 = (id)MEMORY[0x230F7AF90](v28, v25);
            }
            else {
              id v32 = *(id *)(v25 + 8 * v28 + 32);
            }
            uint64_t v33 = v32;
            id v34 = objc_msgSend(v32, sel_targetUUID);
            sub_22D2BBC70();

            uint64_t v35 = sub_22D2BBC40();
            uint64_t v37 = v36;
            (*v30)(v19, v60);

            uint64_t v22 = v61;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_22D24B86C(0, v22[2] + 1, 1);
              uint64_t v22 = v61;
            }
            unint64_t v39 = v22[2];
            unint64_t v38 = v22[3];
            if (v39 >= v38 >> 1)
            {
              sub_22D24B86C(v38 > 1, v39 + 1, 1);
              uint64_t v22 = v61;
            }
            ++v28;
            v22[2] = v39 + 1;
            unint64_t v40 = &v22[2 * v39];
            v40[4] = v35;
            v40[5] = v37;
            unint64_t v25 = v31;
          }
          while (v59 != v28);
          swift_bridgeObjectRelease();
          uint64_t v16 = v53;
          a3 = v54;
          a2 = v51;
          id v14 = v52;
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = (void *)MEMORY[0x263F8EE78];
    }
LABEL_21:
    *uint64_t v16 = MEMORY[0x263F8EE78];
    sub_22D2BBFE0();
    if (v22) {
      *uint64_t v16 = v22;
    }
    sub_22D2BBFE0();
    uint64_t v43 = type metadata accessor for PBTypedData(0);
    uint64_t v44 = *(int *)(v43 + 20);
    if (qword_26853CCD0 != -1) {
      swift_once();
    }
    *(void *)(a3 + v44) = qword_26853D990;
    uint64_t v45 = sub_22D2BB6F0();
    uint64_t v46 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v56, 1, 1, v45);
    swift_retain();
    uint64_t v47 = (uint64_t)v55;
    sub_22D22BDC4(5, 1, v46, a2);
    sub_22D1FE220(v46, (uint64_t (*)(void))sub_22D05C844);
    PBTypedData.dateRange.setter(v47);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v48 = swift_retain();
      *(void *)(a3 + v44) = sub_22D0040E0(v48);
      swift_release();
    }
    uint64_t v49 = *(void *)(a3 + v44);
    swift_beginAccess();
    *(void *)(v49 + 16) = 132;
    *(unsigned char *)(v49 + 24) = 1;
    sub_22D1FE1B8((uint64_t)v16, (uint64_t)v14, type metadata accessor for PBActiveMedications);
    PBTypedData.activeMedications.setter((uint64_t)v14);

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(a3, 0, 1, v43);
    return sub_22D1FE220((uint64_t)v16, type metadata accessor for PBActiveMedications);
  }
  uint64_t v41 = type metadata accessor for PBTypedData(0);
  id v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
  return v42(a3, 1, 1, v41);
}

uint64_t sub_22D1FDC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_22D2BBF00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *(void *)(a2 + 56);
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F44A70], v6);
  uint64_t v18 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D05C90C, (uint64_t)v17, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  if (*(void *)(v11 + 16))
  {
    sub_22D1FE1B8(a1, a3, type metadata accessor for PBTypedData);
    uint64_t v12 = sub_22D237C78(v11);
    swift_bridgeObjectRelease();
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a3 + *(int *)(Output + 20)) = v12;
    id v14 = (void *)(a3 + *(int *)(Output + 24));
    *id v14 = 0;
    v14[1] = 0;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a3, 0, 1, Output);
  }
  else
  {
    uint64_t v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D1FDE80()
{
  return sub_22D1FD0A4(*v0);
}

void sub_22D1FDE88()
{
  if (!qword_268542578)
  {
    sub_22D1FDF14();
    sub_22D030474(255, &qword_268542598);
    sub_22D1FDFEC();
    unint64_t v0 = sub_22D2BC3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542578);
    }
  }
}

void sub_22D1FDF14()
{
  if (!qword_268542580)
  {
    sub_22D1FDF84();
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542580);
    }
  }
}

void sub_22D1FDF84()
{
  if (!qword_268542588)
  {
    sub_22D030474(255, &qword_268542590);
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542588);
    }
  }
}

unint64_t sub_22D1FDFEC()
{
  unint64_t result = qword_2685425A0;
  if (!qword_2685425A0)
  {
    sub_22D1FDF14();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685425A0);
  }
  return result;
}

void sub_22D1FE044(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_22D1FDF14();
    a3(255);
    sub_22D1FDFEC();
    unint64_t v5 = sub_22D2BC3D0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_22D1FE0C0(unint64_t a1)
{
  return sub_22D1FD52C(a1);
}

uint64_t sub_22D1FE0C8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D1FE100@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_22D1FE134@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D1FD618(a1, v2, a2);
}

uint64_t sub_22D1FE13C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D1FDC5C(a1, v2, a2);
}

unint64_t sub_22D1FE144()
{
  unint64_t result = qword_2685425B8;
  if (!qword_2685425B8)
  {
    sub_22D1FE044(255, &qword_2685425B0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685425B8);
  }
  return result;
}

uint64_t sub_22D1FE1B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D1FE220(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void FHIRServerOperationRequest.method.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FHIRServerOperationRequest.headers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FHIRServerOperationRequest.headers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FHIRServerOperationRequest.headers.modify())()
{
  return nullsub_1;
}

uint64_t FHIRServerOperationRequest.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 24);
  return sub_22D1FE374(v3, a1);
}

uint64_t type metadata accessor for FHIRServerOperationRequest()
{
  uint64_t result = qword_2685425C8;
  if (!qword_2685425C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D1FE374(uint64_t a1, uint64_t a2)
{
  sub_22CFF9E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FHIRServerOperationRequest.baseURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 24);
  return sub_22D1FE41C(a1, v3);
}

uint64_t sub_22D1FE41C(uint64_t a1, uint64_t a2)
{
  sub_22CFF9E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FHIRServerOperationRequest.baseURL.modify())()
{
  return nullsub_1;
}

void *FHIRServerOperationRequest.pathComponents.getter()
{
  uint64_t v1 = (int *)type metadata accessor for FHIRServerOperationRequest();
  uint64_t v2 = (uint64_t *)(v0 + v1[9]);
  uint64_t v3 = v2[1];
  uint64_t v4 = (uint64_t *)(v0 + v1[10]);
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  uint64_t v7 = (uint64_t *)(v0 + v1[8]);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  if (!v3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    if (!v5) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v10 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_22D2810D4(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    uint64_t v11 = sub_22D2810D4((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  v11[2] = v13 + 1;
  id v14 = &v11[2 * v13];
  v14[4] = v10;
  v14[5] = v3;
  if (v5)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_22D2810D4(0, v11[2] + 1, 1, v11);
    }
    unint64_t v16 = v11[2];
    unint64_t v15 = v11[3];
    if (v16 >= v15 >> 1) {
      uint64_t v11 = sub_22D2810D4((void *)(v15 > 1), v16 + 1, 1, v11);
    }
    v11[2] = v16 + 1;
    uint64_t v17 = &v11[2 * v16];
    v17[4] = v6;
    v17[5] = v5;
  }
LABEL_12:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v11 = sub_22D2810D4(0, v11[2] + 1, 1, v11);
  }
  unint64_t v19 = v11[2];
  unint64_t v18 = v11[3];
  if (v19 >= v18 >> 1) {
    uint64_t v11 = sub_22D2810D4((void *)(v18 > 1), v19 + 1, 1, v11);
  }
  v11[2] = v19 + 1;
  id v20 = &v11[2 * v19];
  v20[4] = v8;
  v20[5] = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t FHIRServerOperationRequest.queryItems.getter()
{
  return 0;
}

uint64_t FHIRServerOperationRequest.fragment.getter()
{
  return 0;
}

uint64_t FHIRServerOperationRequest.body.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 28);
  uint64_t v2 = *(void *)v1;
  sub_22CFFA158(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t FHIRServerOperationRequest.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 28);
  uint64_t result = sub_22CFF9C10(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t (*FHIRServerOperationRequest.body.modify())()
{
  return nullsub_1;
}

uint64_t FHIRServerOperationRequest.title.getter()
{
  return 0x4954415245504F24;
}

uint64_t FHIRServerOperationRequest.operationName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FHIRServerOperationRequest.resourceType.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FHIRServerOperationRequest.resourceType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FHIRServerOperationRequest.resourceType.modify())()
{
  return nullsub_1;
}

uint64_t FHIRServerOperationRequest.resourceID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FHIRServerOperationRequest.resourceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FHIRServerOperationRequest() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FHIRServerOperationRequest.resourceID.modify())()
{
  return nullsub_1;
}

uint64_t FHIRServerOperationRequest.init(method:operationName:baseURL:resourceType:resourceID:body:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11)
{
  char v14 = *a1;
  *(void *)(a9 + 8) = 0;
  unint64_t v15 = (int *)type metadata accessor for FHIRServerOperationRequest();
  uint64_t v16 = a9 + v15[6];
  uint64_t v17 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = a9 + v15[7];
  *(_OWORD *)uint64_t v18 = xmmword_22D2BFCE0;
  unint64_t v19 = (void *)(a9 + v15[9]);
  void *v19 = 0;
  v19[1] = 0;
  id v20 = (void *)(a9 + v15[10]);
  void *v20 = 0;
  v20[1] = 0;
  *(unsigned char *)a9 = v14;
  sub_22D1FEE38(a4, v16);
  uint64_t v21 = (void *)(a9 + v15[8]);
  void *v21 = a2;
  v21[1] = a3;
  void *v19 = a5;
  v19[1] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!a8)
  {
    sub_22D1FEE9C(a4, (uint64_t (*)(void))sub_22CFF9E78);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if (a6)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v22 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v22)
    {
      sub_22D1FEE9C(a4, (uint64_t (*)(void))sub_22CFF9E78);
LABEL_8:
      swift_bridgeObjectRelease();
      void *v20 = a7;
      v20[1] = a8;
      uint64_t result = sub_22CFF9C10(*(void *)v18, *(void *)(v18 + 8));
      *(void *)uint64_t v18 = a10;
      *(void *)(v18 + 8) = a11;
      return result;
    }
  }
  swift_bridgeObjectRelease();
  sub_22D1D34B8();
  swift_allocError();
  void *v24 = 0;
  v24[1] = 0;
  swift_willThrow();
  sub_22CFF9C10(a10, a11);
  sub_22D1FEE9C(a4, (uint64_t (*)(void))sub_22CFF9E78);
  return sub_22D1FEE9C(a9, (uint64_t (*)(void))type metadata accessor for FHIRServerOperationRequest);
}

uint64_t sub_22D1FEC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D1FE374(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_22D1FEC90()
{
  return 0;
}

uint64_t sub_22D1FEC98()
{
  return 0;
}

uint64_t sub_22D1FECA4()
{
  return 0x4954415245504F24;
}

uint64_t FHIRServerOperationRequestError.errorDescription.getter()
{
  unint64_t v1 = 0xD000000000000011;
  uint64_t v2 = *(void *)(v0 + 8);
  if (!v2) {
    return 0xD000000000000013;
  }
  if (v2 != 1)
  {
    if (v2 == 2)
    {
      return 0x6569746170206F4ELL;
    }
    else
    {
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      sub_22D2BCCB0();
      return 0xD000000000000019;
    }
  }
  return v1;
}

uint64_t sub_22D1FEE38(uint64_t a1, uint64_t a2)
{
  sub_22CFF9E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D1FEE9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FHIRServerOperationRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22D2BBAA0();
    uint64_t v11 = *(void *)(v10 - 8);
    unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_22CFF9E78();
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    unint64_t v18 = *((void *)v17 + 1);
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    }
    else
    {
      uint64_t v19 = *(void *)v17;
      sub_22CFF9B64(*(void *)v17, *((void *)v17 + 1));
      *(void *)uint64_t v16 = v19;
      *((void *)v16 + 1) = v18;
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (uint64_t *)((char *)v4 + v20);
    id v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    unint64_t v25 = (uint64_t *)((char *)v4 + v21);
    uint64_t v26 = (uint64_t *)((char *)a2 + v21);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[10];
    unint64_t v29 = (uint64_t *)((char *)v4 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FHIRServerOperationRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22D2BBAA0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15) {
    sub_22CFF5630(*v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  unint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_22D2BBAA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_22CFF9E78();
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t *)(a2 + v13);
  unint64_t v16 = v15[1];
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  else
  {
    uint64_t v17 = *v15;
    sub_22CFF9B64(*v15, v15[1]);
    *(void *)uint64_t v14 = v17;
    *(void *)(v14 + 8) = v16;
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v18);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  id v23 = (void *)(a1 + v19);
  uint64_t v24 = (void *)(a2 + v19);
  uint64_t v25 = v24[1];
  *id v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = a3[10];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  unint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_22D2BBAA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_22CFF9E78();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  unint64_t v16 = (uint64_t *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  unint64_t v18 = *(void *)(a2 + v15 + 8);
  if (*(void *)(a1 + v15 + 8) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v20 = *v17;
      sub_22CFF9B64(v20, v18);
      uint64_t v21 = *v16;
      unint64_t v22 = v16[1];
      *unint64_t v16 = v20;
      v16[1] = v18;
      sub_22CFF5630(v21, v22);
      goto LABEL_14;
    }
    sub_22CFFA7EC((uint64_t)v16);
    goto LABEL_12;
  }
  if (v18 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
    goto LABEL_14;
  }
  uint64_t v19 = *v17;
  sub_22CFF9B64(v19, v18);
  *unint64_t v16 = v19;
  v16[1] = v18;
LABEL_14:
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  void *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  void *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[10];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  unint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_22D2BBAA0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_22CFF9E78();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  unint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_22D2BBAA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_22CFF9E78();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  unint64_t v16 = (uint64_t *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  unint64_t v18 = *(void *)(a1 + v15 + 8);
  if (v18 >> 60 != 15)
  {
    unint64_t v19 = v17[1];
    if (v19 >> 60 != 15)
    {
      uint64_t v20 = *v16;
      *unint64_t v16 = *v17;
      v16[1] = v19;
      sub_22CFF5630(v20, v18);
      goto LABEL_12;
    }
    sub_22CFFA7EC((uint64_t)v16);
  }
  *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
LABEL_12:
  uint64_t v21 = a3[8];
  unint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  void *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  id v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D1FFA20);
}

uint64_t sub_22D1FFA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22CFF9E78();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FHIRServerOperationRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D1FFAFC);
}

void sub_22D1FFAFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_22CFF9E78();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
}

void sub_22D1FFBC0()
{
  sub_22CFF9E78();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t destroy for FHIRServerOperationRequestError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19HealthRecordsDaemon31FHIRServerOperationRequestErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for FHIRServerOperationRequestError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FHIRServerOperationRequestError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FHIRServerOperationRequestError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FHIRServerOperationRequestError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_22D1FFE9C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_22D1FFEB4(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FHIRServerOperationRequestError()
{
  return &type metadata for FHIRServerOperationRequestError;
}

void sub_22D1FFEE4(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_22D2BB9B0();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

id sub_22D1FFF84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsIngestionServiceServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for HealthRecordsIngestionServiceServer()
{
  return self;
}

void sub_22D200028(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_22D2BC390();
  __swift_project_value_buffer(v9, (uint64_t)qword_26AEC3C90);
  id v10 = v4;
  uint64_t v11 = sub_22D2BC380();
  os_log_type_t v12 = sub_22D2BD080();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v24 = a3;
    int v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = a1;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = v14;
    *(_DWORD *)int v13 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v26 = sub_22D2BCC30();
    unint64_t v27 = v15;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_22D0A4D24(v26, v27, &v25);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v11, v12, "%s starting", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v14;
    a1 = v23;
    MEMORY[0x230F7BDF0](v16, -1, -1);
    uint64_t v17 = v13;
    a3 = v24;
    MEMORY[0x230F7BDF0](v17, -1, -1);
  }
  else
  {
  }
  type metadata accessor for SignedClinicalDataManager();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  uint64_t v26 = sub_22D1F375C(a1, a2);
  unint64_t v19 = (void *)swift_allocObject();
  void v19[2] = v10;
  v19[3] = a3;
  void v19[4] = a4;
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v10;
  v20[3] = a3;
  v20[4] = a4;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D20492C(0, &qword_268542350, MEMORY[0x263EFDCF0]);
  sub_22D2049B4(&qword_2685426D0, &qword_268542350, v21);
  id v22 = v10;
  swift_retain_n();
  v22;
  sub_22D2BC790();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_22D2BC5F0();
  swift_endAccess();
  swift_release();
  swift_setDeallocating();
}

void sub_22D200434(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_22D2BC390();
  __swift_project_value_buffer(v9, (uint64_t)qword_26AEC3C90);
  id v10 = v4;
  uint64_t v11 = sub_22D2BC380();
  os_log_type_t v12 = sub_22D2BD080();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v24 = a3;
    int v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = a1;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = v14;
    *(_DWORD *)int v13 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v26 = sub_22D2BCC30();
    unint64_t v27 = v15;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_22D0A4D24(v26, v27, &v25);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v11, v12, "%s starting", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v14;
    a1 = v23;
    MEMORY[0x230F7BDF0](v16, -1, -1);
    uint64_t v17 = v13;
    a3 = v24;
    MEMORY[0x230F7BDF0](v17, -1, -1);
  }
  else
  {
  }
  type metadata accessor for SignedClinicalDataManager();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  uint64_t v26 = sub_22D1F4984(a1, a2);
  unint64_t v19 = (void *)swift_allocObject();
  void v19[2] = v10;
  v19[3] = a3;
  void v19[4] = a4;
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v10;
  v20[3] = a3;
  v20[4] = a4;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D20492C(0, &qword_268542350, MEMORY[0x263EFDCF0]);
  sub_22D2049B4(&qword_2685426D0, &qword_268542350, v21);
  id v22 = v10;
  swift_retain_n();
  v22;
  sub_22D2BC790();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_22D2BC5F0();
  swift_endAccess();
  swift_release();
  swift_setDeallocating();
}

uint64_t sub_22D2008C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_22D2BC390();
  __swift_project_value_buffer(v8, (uint64_t)qword_26AEC3C90);
  id v9 = v4;
  id v10 = sub_22D2BC380();
  os_log_type_t v11 = sub_22D2BD080();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v28 = a2;
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = a4;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v31 = v13;
    *(_DWORD *)os_log_type_t v12 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v32 = sub_22D2BCC30();
    unint64_t v33 = v14;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_22D0A4D24(v32, v33, &v31);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v10, v11, "%s starting", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v13;
    a4 = v29;
    MEMORY[0x230F7BDF0](v15, -1, -1);
    uint64_t v16 = v12;
    a2 = v28;
    MEMORY[0x230F7BDF0](v16, -1, -1);
  }
  else
  {
  }
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C40]), sel_init);
  unint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v17;
  v18[3] = a1;
  v18[4] = a2;
  unint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D20492C(0, &qword_2685426E0, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v20 = v17;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_22D2BC6F0();
  sub_22D2049B4(&qword_2685424F0, &qword_2685426E0, v19);
  uint64_t v21 = sub_22D2BC720();
  swift_release();
  uint64_t v32 = v21;
  id v22 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D20492C(0, &qword_268542350, MEMORY[0x263EFDCF0]);
  sub_22D2049B4(&qword_2685426D0, &qword_268542350, v22);
  uint64_t v23 = sub_22D2BC720();
  swift_release();

  uint64_t v32 = v23;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v9;
  v24[3] = a3;
  v24[4] = a4;
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v9;
  void v25[3] = a3;
  v25[4] = a4;
  id v26 = v9;
  swift_retain_n();
  v26;
  sub_22D2BC790();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_22D2BC5F0();
  swift_endAccess();
  return swift_release();
}

void sub_22D200E54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_22D2BC390();
  __swift_project_value_buffer(v9, (uint64_t)qword_26AEC3C90);
  id v10 = v4;
  os_log_type_t v11 = sub_22D2BC380();
  os_log_type_t v12 = sub_22D2BD080();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    id v26 = a1;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v27 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v28 = sub_22D2BCC30();
    unint64_t v29 = v15;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_22D0A4D24(v28, v29, &v27);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v11, v12, "%s starting", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v14;
    a1 = v26;
    MEMORY[0x230F7BDF0](v16, -1, -1);
    MEMORY[0x230F7BDF0](v13, -1, -1);
  }
  else
  {
  }
  type metadata accessor for SignedClinicalDataManager();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  sub_22D0A566C(0, (unint64_t *)&qword_2685426B0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_22D2BFBE0;
  *(void *)(v18 + 32) = a1;
  uint64_t v28 = v18;
  sub_22D2BCE20();
  uint64_t v19 = v28;
  id v20 = a1;
  uint64_t v21 = sub_22D1F3FF4(v19, a2);
  swift_bridgeObjectRelease();
  uint64_t v28 = v21;
  id v22 = (void *)swift_allocObject();
  v22[2] = v10;
  v22[3] = a3;
  v22[4] = a4;
  uint64_t v23 = (void *)swift_allocObject();
  _OWORD v23[2] = v10;
  v23[3] = a3;
  v23[4] = a4;
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D20492C(0, &qword_268542350, MEMORY[0x263EFDCF0]);
  sub_22D2049B4(&qword_2685426D0, &qword_268542350, v24);
  id v25 = v10;
  swift_retain_n();
  v25;
  sub_22D2BC790();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_22D2BC5F0();
  swift_endAccess();
  swift_release();
  swift_setDeallocating();
}

void sub_22D201290(void **a1, void *a2, void (*a3)(void, id), uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    id v11 = v8;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_22D2BC390();
    __swift_project_value_buffer(v12, (uint64_t)qword_26AEC3C90);
    id v13 = v8;
    id v14 = a2;
    id v15 = v8;
    id v16 = v14;
    id v17 = sub_22D2BC380();
    os_log_type_t v18 = sub_22D2BD060();
    if (os_log_type_enabled(v17, v18))
    {
      format = a7;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v38 = v32;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v20 = sub_22D0C60F8();
      sub_22D0A4D24(v20, v21, &v38);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v22 = sub_22D1E40E8(v35);
      sub_22D0A4D24(v22, v23, &v38);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v17, v18, format, (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v32, -1, -1);
      MEMORY[0x230F7BDF0](v19, -1, -1);
    }
    else
    {
    }
    swift_getErrorValue();
    id v31 = sub_22D1E4268(v36, v37);
    a3(0, v31);
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_22D2BC390();
    __swift_project_value_buffer(v24, (uint64_t)qword_26AEC3C90);
    id v34 = a2;
    id v25 = sub_22D2BC380();
    os_log_type_t v26 = sub_22D2BD080();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v38 = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v29 = sub_22D0C60F8();
      sub_22D0A4D24(v29, v30, &v38);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v25, v26, "%s finished successfully", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v28, -1, -1);
      MEMORY[0x230F7BDF0](v27, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_22D2016E8(uint64_t *a1, void *a2, uint64_t (*a3)(void, void), uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7, const char *a8)
{
  uint64_t v12 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_22D2BC390();
  __swift_project_value_buffer(v13, (uint64_t)qword_26AEC3C90);
  id v14 = a2;
  id v15 = sub_22D2BC380();
  os_log_type_t v16 = a5();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v23 = a3;
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v24 = v18;
    *(_DWORD *)id v17 = 136315138;
    uint64_t v19 = sub_22D0C60F8();
    sub_22D0A4D24(v19, v20, &v24);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v15, v16, a8, v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v18, -1, -1);
    unint64_t v21 = v17;
    a3 = v23;
    MEMORY[0x230F7BDF0](v21, -1, -1);
  }
  else
  {
  }
  return a3(v12, 0);
}

uint64_t sub_22D20191C(void *a1, int a2, void *a3, uint64_t a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  id v15 = a3;
  id v16 = a1;
  a8(v15, a4, a7, v14);

  return swift_release();
}

uint64_t sub_22D2019D4(void *a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_22D2BC390();
  __swift_project_value_buffer(v7, (uint64_t)qword_26AEC3C90);
  id v8 = v3;
  uint64_t v9 = sub_22D2BC380();
  os_log_type_t v10 = sub_22D2BD080();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v26 = a2;
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = a1;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v12 = v28;
    *(_DWORD *)id v11 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t aBlock = sub_22D2BCC30();
    unint64_t v30 = v13;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_22D0A4D24(aBlock, v30, &v28);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v9, v10, "%s starting", v11, 0xCu);
    swift_arrayDestroy();
    uint64_t v14 = v12;
    a1 = v27;
    MEMORY[0x230F7BDF0](v14, -1, -1);
    id v15 = v11;
    a2 = v26;
    MEMORY[0x230F7BDF0](v15, -1, -1);
  }
  else
  {
  }
  type metadata accessor for SignedClinicalDataManager();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  id v17 = (void *)swift_allocObject();
  v17[2] = v8;
  v17[3] = a2;
  v17[4] = a3;
  sub_22D2BC370();
  swift_allocObject();
  id v18 = v8;
  swift_retain();
  uint64_t v19 = sub_22D2BC360();
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45D38]), sel_initWithHealthStore_, v20);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v16;
  *(void *)(v22 + 24) = sub_22D2047EC;
  *(void *)(v22 + 32) = v17;
  *(unsigned char *)(v22 + 40) = 1;
  *(void *)(v22 + 48) = v19;
  *(void *)(v22 + 56) = a1;
  unint64_t v33 = sub_22D1F7F00;
  uint64_t v34 = v22;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v30 = 1107296256;
  id v31 = sub_22D061D84;
  uint64_t v32 = &block_descriptor_41_1;
  unint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  id v24 = a1;
  swift_release();
  objc_msgSend(v21, sel_fetchSignedClinicalDataGroupBackingMedicalRecord_options_completion_, v24, 11, v23);

  _Block_release(v23);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22D201DC8(char a1, uint64_t a2, void *a3, uint64_t (*a4)(void, void))
{
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_22D2BC390();
  __swift_project_value_buffer(v8, (uint64_t)qword_26AEC3C90);
  id v9 = a3;
  os_log_type_t v10 = sub_22D2BC380();
  os_log_type_t v11 = sub_22D2BD080();
  if (os_log_type_enabled(v10, v11))
  {
    id v18 = a4;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v19 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v14 = sub_22D0C60F8();
    sub_22D0A4D24(v14, v15, &v19);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v10, v11, "%s finished", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v13, -1, -1);
    uint64_t v16 = v12;
    a4 = v18;
    MEMORY[0x230F7BDF0](v16, -1, -1);
  }
  else
  {
  }
  return a4(a1 & 1, a2);
}

uint64_t sub_22D202070(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_22D2BC8A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v36 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_22D2BC8D0();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v34 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_22D2BC8B0();
  uint64_t v7 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  id v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_22D2BC390();
  __swift_project_value_buffer(v10, (uint64_t)qword_26AEC3C90);
  id v11 = v1;
  uint64_t v12 = sub_22D2BC380();
  os_log_type_t v13 = sub_22D2BD080();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    unint64_t v30 = a1;
    unint64_t v15 = (uint8_t *)v14;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v38 = v29;
    uint64_t v31 = v4;
    *(_DWORD *)unint64_t v15 = 136315138;
    v28[1] = v15 + 4;
    uint64_t aBlock = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t aBlock = sub_22D2BCC30();
    unint64_t v40 = v16;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_22D0A4D24(aBlock, v40, &v38);
    uint64_t v4 = v31;
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v12, v13, "%s starting", v15, 0xCu);
    uint64_t v17 = v29;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v17, -1, -1);
    id v18 = v15;
    a1 = v30;
    MEMORY[0x230F7BDF0](v18, -1, -1);
  }
  else
  {
  }
  sub_22D030474(0, &qword_268542690);
  uint64_t v19 = v33;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F090], v33);
  id v20 = (void *)sub_22D2BD120();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v11;
  *(void *)(v21 + 24) = a1;
  uint64_t v43 = sub_22D2047E0;
  uint64_t v44 = v21;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v40 = 1107296256;
  uint64_t v41 = sub_22D202854;
  id v42 = &block_descriptor_29_0;
  uint64_t v22 = _Block_copy(&aBlock);
  id v23 = v11;
  id v24 = a1;
  id v25 = v34;
  sub_22D2BC8C0();
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_22D204758(&qword_268542698, MEMORY[0x263F8F030]);
  sub_22D204700();
  sub_22D204758(&qword_2685426A8, (void (*)(uint64_t))sub_22D204700);
  uint64_t v26 = v36;
  sub_22D2BD280();
  MEMORY[0x230F7AD70](0, v25, v26, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v26, v3);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v37);
  return swift_release();
}

void sub_22D20262C(void *a1, void *a2)
{
  type metadata accessor for SignedClinicalDataManager();
  *(void *)(swift_allocObject() + 16) = 0;
  sub_22D1F57CC(a2);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_22D2BC390();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AEC3C90);
  id v11 = a1;
  uint64_t v5 = sub_22D2BC380();
  os_log_type_t v6 = sub_22D2BD080();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = sub_22D0C60F8();
    sub_22D0A4D24(v9, v10, &v12);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v5, v6, "%s finished", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v8, -1, -1);
    MEMORY[0x230F7BDF0](v7, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_22D202854(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_22D202900(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_22D2BC8A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v45 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_22D2BC8D0();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v43 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_22D2BBC90();
  uint64_t v7 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v40 = v8;
  uint64_t v41 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_22D2BC8B0();
  uint64_t v9 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  id v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_22D2BC390();
  __swift_project_value_buffer(v12, (uint64_t)qword_26AEC3C90);
  id v13 = v1;
  uint64_t v14 = sub_22D2BC380();
  os_log_type_t v15 = sub_22D2BD080();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v37 = v3;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v47 = v35;
    uint64_t v36 = a1;
    *(_DWORD *)uint64_t v17 = 136315138;
    v34[1] = v17 + 4;
    uint64_t aBlock = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_22D2BCC30();
    uint64_t ObjectType = v4;
    uint64_t aBlock = v18;
    unint64_t v49 = v19;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    uint64_t v4 = ObjectType;
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_22D0A4D24(aBlock, v49, &v47);
    a1 = v36;
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v14, v15, "%s starting", v17, 0xCu);
    uint64_t v20 = v35;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v20, -1, -1);
    uint64_t v21 = v17;
    uint64_t v3 = v37;
    MEMORY[0x230F7BDF0](v21, -1, -1);
  }
  else
  {
  }
  sub_22D030474(0, &qword_268542690);
  uint64_t v22 = v39;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F090], v39);
  id v23 = (void *)sub_22D2BD120();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  id v24 = v41;
  uint64_t v25 = a1;
  uint64_t v26 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v41, v25, v42);
  unint64_t v27 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v28 + v27, v24, v26);
  uint64_t v52 = sub_22D204684;
  uint64_t v53 = v28;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v49 = 1107296256;
  uint64_t v50 = sub_22D202854;
  uint64_t v51 = &block_descriptor_17;
  uint64_t v29 = _Block_copy(&aBlock);
  id v30 = v13;
  uint64_t v31 = v43;
  sub_22D2BC8C0();
  uint64_t v47 = MEMORY[0x263F8EE78];
  sub_22D204758(&qword_268542698, MEMORY[0x263F8F030]);
  sub_22D204700();
  sub_22D204758(&qword_2685426A8, (void (*)(uint64_t))sub_22D204700);
  uint64_t v32 = v45;
  sub_22D2BD280();
  MEMORY[0x230F7AD70](0, v31, v32, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v32, v3);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v46);
  return swift_release();
}

void sub_22D202F8C(void *a1)
{
  type metadata accessor for SignedClinicalDataManager();
  *(void *)(swift_initStackObject() + 16) = 0;
  sub_22D2BC370();
  swift_allocObject();
  sub_22D2BC360();
  sub_22D2BC350();
  swift_release();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22D2BC390();
  __swift_project_value_buffer(v2, (uint64_t)qword_26AEC3C90);
  id v3 = a1;
  uint64_t v4 = sub_22D2BC380();
  os_log_type_t v5 = sub_22D2BD080();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v10 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_22D0C60F8();
    sub_22D0A4D24(v8, v9, &v10);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v4, v5, "%s finished", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v7, -1, -1);
    MEMORY[0x230F7BDF0](v6, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_22D203290(char a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22D2BC390();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
  id v7 = v3;
  uint64_t v8 = sub_22D2BC380();
  os_log_type_t v9 = sub_22D2BD080();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = a3;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v30 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v28 = sub_22D2BCC30();
    unint64_t v29 = v12;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D0A4D24(v28, v29, &v30);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v8, v9, "%s starting", v10, 0xCu);
    swift_arrayDestroy();
    uint64_t v13 = v11;
    a3 = v26;
    MEMORY[0x230F7BDF0](v13, -1, -1);
    MEMORY[0x230F7BDF0](v10, -1, -1);
  }
  else
  {
  }
  type metadata accessor for IssuerDirectoryDownloadTaskScheduler();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = 0;
  *(void *)(v14 + 16) = 0;
  os_log_type_t v15 = (_DWORD *)swift_slowAlloc();
  *os_log_type_t v15 = 0;
  *(void *)(v14 + 40) = v15;
  *(_OWORD *)(v14 + 48) = xmmword_22D2D0B10;
  sub_22D030474(0, (unint64_t *)&qword_26AEC2FB8);
  id v16 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  id v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 24) = MEMORY[0x263F8EE88];
  id v19 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v16, v17, 0);

  *(void *)(v18 + 16) = v19;
  type metadata accessor for IssuerDirectoryDownloadTaskManager();
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = sub_22D2042B0(v14, v18, 0, v20);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v7;
  v22[3] = a2;
  v22[4] = a3;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v21;
  *(unsigned char *)(v23 + 24) = (a1 & 2) != 0;
  *(void *)(v23 + 32) = sub_22D204518;
  *(void *)(v23 + 40) = v22;
  id v24 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22D0A63F8(a1 & 1, (uint64_t)sub_22D2045A8, v23);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22D2036C4(char a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22D2BC390();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
  id v7 = v3;
  uint64_t v8 = sub_22D2BC380();
  os_log_type_t v9 = sub_22D2BD080();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = a3;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v30 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v28 = sub_22D2BCC30();
    unint64_t v29 = v12;
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D0A4D24(v28, v29, &v30);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v8, v9, "%s starting", v10, 0xCu);
    swift_arrayDestroy();
    uint64_t v13 = v11;
    a3 = v26;
    MEMORY[0x230F7BDF0](v13, -1, -1);
    MEMORY[0x230F7BDF0](v10, -1, -1);
  }
  else
  {
  }
  type metadata accessor for IssuerDirectoryDownloadTaskScheduler();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = 0;
  *(void *)(v14 + 16) = 0;
  os_log_type_t v15 = (_DWORD *)swift_slowAlloc();
  *os_log_type_t v15 = 0;
  *(void *)(v14 + 40) = v15;
  *(_OWORD *)(v14 + 48) = xmmword_22D2D0B10;
  sub_22D030474(0, (unint64_t *)&qword_26AEC2FB8);
  id v16 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  id v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 24) = MEMORY[0x263F8EE88];
  id v19 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v16, v17, 0);

  *(void *)(v18 + 16) = v19;
  type metadata accessor for IssuerDirectoryDownloadTaskManager();
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = sub_22D2042B0(v14, v18, 0, v20);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v7;
  v22[3] = a2;
  v22[4] = a3;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v21;
  *(unsigned char *)(v23 + 24) = (a1 & 2) != 0;
  *(void *)(v23 + 32) = sub_22D2043C0;
  *(void *)(v23 + 40) = v22;
  id v24 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22D0A63F8(a1 & 1, (uint64_t)sub_22D204410, v23);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22D203AC4(unint64_t a1, void *a2, id a3, void *a4, uint64_t (*a5)(unint64_t, void *, id), int a6, int a7, int a8, const char *a9)
{
  if (a3)
  {
    id v14 = a3;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22D2BC390();
    __swift_project_value_buffer(v15, (uint64_t)qword_26AEC3C90);
    id v16 = a4;
    id v17 = a3;
    id v18 = v16;
    id v19 = a3;
    uint64_t v20 = sub_22D2BC380();
    os_log_type_t v21 = sub_22D2BD060();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v51 = v48;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v23 = sub_22D0C60F8();
      uint64_t v53 = sub_22D0A4D24(v23, v24, &v51);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v25 = sub_22D1E40E8(v50);
      uint64_t v53 = sub_22D0A4D24(v25, v26, &v51);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v20, v21, "%s failed with %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v48, -1, -1);
      MEMORY[0x230F7BDF0](v22, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_22D2BC390();
    __swift_project_value_buffer(v27, (uint64_t)qword_26AEC3C90);
    swift_bridgeObjectRetain_n();
    id v28 = a4;
    id v29 = a2;
    unint64_t v49 = a2;
    id v30 = v28;
    id v31 = v29;
    uint64_t v32 = sub_22D2BC380();
    os_log_type_t v33 = sub_22D2BD080();
    if (os_log_type_enabled(v32, v33))
    {
      *(void *)os_log_type_t type = a5;
      unint64_t v34 = a1;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v53 = v46;
      *(_DWORD *)uint64_t v35 = 136315650;
      uint64_t v36 = sub_22D0C60F8();
      sub_22D0A4D24(v36, v37, &v53);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      sub_22D204420();
      id v38 = v31;
      uint64_t v39 = sub_22D2BCC30();
      uint64_t v51 = sub_22D0A4D24(v39, v40, &v53);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2080;
      a2 = v49;
      if (v34)
      {
        unint64_t v41 = v34;
        if (v34 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_22D2BD470();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        unint64_t v41 = 0;
      }
      a5 = *(uint64_t (**)(unint64_t, void *, id))type;
      BOOL v52 = v41 == 0;
      sub_22D0A566C(0, (unint64_t *)&qword_268542670, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
      uint64_t v42 = sub_22D2BCC30();
      uint64_t v51 = sub_22D0A4D24(v42, v43, &v53);
      sub_22D2BD220();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v32, v33, a9, (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v46, -1, -1);
      uint64_t v44 = v35;
      a1 = v41;
      MEMORY[0x230F7BDF0](v44, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      a2 = v49;
    }
  }
  return a5(a1, a2, a3);
}

uint64_t sub_22D2040C8(void *a1, int a2, uint64_t a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  id v13 = a1;
  a7(a3, a6, v12);

  return swift_release();
}

void sub_22D204164(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v8 = a1;
  if (a1)
  {
    sub_22D030474(0, a5);
    uint64_t v8 = (void *)sub_22D2BCDF0();
  }
  if (a3) {
    uint64_t v9 = sub_22D2BB9B0();
  }
  else {
    uint64_t v9 = 0;
  }
  id v10 = (id)v9;
  (*(void (**)(uint64_t, void *, uint64_t))(a4 + 16))(a4, v8, a2);
}

uint64_t sub_22D20424C()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22D204284(void *a1, uint64_t a2, uint64_t a3)
{
  sub_22D204164(a1, a2, a3, *(void *)(v3 + 16), (unint64_t *)&unk_268542680);
}

void *sub_22D2042B0(uint64_t a1, uint64_t a2, id a3, void *a4)
{
  void v14[3] = type metadata accessor for IssuerDirectoryDownloadTaskScheduler();
  v14[4] = &off_26E05EFB0;
  v14[0] = a1;
  sub_22D204488();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = (_DWORD *)swift_slowAlloc();
  uint64_t v10 = MEMORY[0x263F8EE78];
  _DWORD *v9 = 0;
  v8[2] = v9;
  v8[3] = v10;
  v8[4] = 0;
  a4[9] = v8;
  sub_22CFF4B00((uint64_t)v14, (uint64_t)(a4 + 2));
  a4[7] = a2;
  if (!a3)
  {
    id v11 = objc_allocWithZone(MEMORY[0x263F0A410]);
    swift_retain();
    id v12 = objc_msgSend(v11, sel_init);
    a3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45D38]), sel_initWithHealthStore_, v12);
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  a4[8] = a3;
  return a4;
}

uint64_t sub_22D2043C0(unint64_t a1, void *a2, void *a3)
{
  return sub_22D203AC4(a1, a2, a3, *(void **)(v3 + 16), *(uint64_t (**)(unint64_t, void *, id))(v3 + 24), *(void *)(v3 + 32), 53, 0x2D2DD590, "%s finished. Version: %s, public key entries count: %s");
}

void sub_22D204410(void *a1, uint64_t a2)
{
  sub_22D0A5F80(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), *(void (**)(unint64_t, id, uint64_t))(v2 + 32));
}

void sub_22D204420()
{
  if (!qword_268542660)
  {
    sub_22D030474(255, (unint64_t *)&qword_26AEC1F28);
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542660);
    }
  }
}

void sub_22D204488()
{
  if (!qword_26AEC2888)
  {
    unint64_t v0 = type metadata accessor for SingleValuePublisherTaskQueue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2888);
    }
  }
}

void sub_22D2044E8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_22D204164(a1, a2, a3, *(void *)(v3 + 16), &qword_26853ED08);
}

uint64_t sub_22D204518(unint64_t a1, void *a2, void *a3)
{
  return sub_22D203AC4(a1, a2, a3, *(void **)(v3 + 16), *(uint64_t (**)(unint64_t, void *, id))(v3 + 24), *(void *)(v3 + 32), 57, 0x2D2DD5D0, "%s finished. Version: %s, issuer entries count: %s");
}

uint64_t objectdestroy_10Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_22D2045A8(uint64_t *a1, void *a2)
{
  sub_22D0A5B74(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), *(void (**)(unint64_t, id, id))(v2 + 32));
}

uint64_t sub_22D2045B8()
{
  uint64_t v1 = sub_22D2BBC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_22D204684()
{
  sub_22D2BBC90();
  uint64_t v1 = *(void **)(v0 + 16);
  sub_22D202F8C(v1);
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

void sub_22D204700()
{
  if (!qword_2685426A0)
  {
    sub_22D2BC8A0();
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685426A0);
    }
  }
}

uint64_t sub_22D204758(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2047A0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D2047E0()
{
  sub_22D20262C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_22D2047EC(char a1, uint64_t a2)
{
  return sub_22D201DC8(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24));
}

uint64_t sub_22D2047F8()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_22D204854(void **a1)
{
  sub_22D201290(a1, *(void **)(v1 + 16), *(void (**)(void, id))(v1 + 24), *(void *)(v1 + 32), 0xD000000000000031, 0x800000022D2DD6B0, "%s failed with %s)");
}

uint64_t sub_22D204898(uint64_t *a1)
{
  return sub_22D2016E8(a1, *(void **)(v1 + 16), *(uint64_t (**)(void, void))(v1 + 24), *(void *)(v1 + 32), MEMORY[0x263F90290], 0xD000000000000031, 0x800000022D2DD6B0, "%s received a verification result");
}

uint64_t sub_22D2048EC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22D20492C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_22D030474(255, (unint64_t *)&unk_2685426C0);
    unint64_t v7 = sub_22CFF49FC();
    unint64_t v8 = a3(a1, v6, v7, MEMORY[0x263F8E4E0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D2049B4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D20492C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D2049FC(void **a1)
{
  sub_22D201290(a1, *(void **)(v1 + 16), *(void (**)(void, id))(v1 + 24), *(void *)(v1 + 32), 0xD000000000000046, 0x800000022D2DD6F0, "%s failed with %s)");
}

uint64_t sub_22D204A40(uint64_t *a1)
{
  return sub_22D2016E8(a1, *(void **)(v1 + 16), *(uint64_t (**)(void, void))(v1 + 24), *(void *)(v1 + 32), MEMORY[0x263F90278], 0xD000000000000046, 0x800000022D2DD6F0, "%s received a parsing result");
}

void sub_22D204A98(void **a1)
{
  sub_22D201290(a1, *(void **)(v1 + 16), *(void (**)(void, id))(v1 + 24), *(void *)(v1 + 32), 0xD00000000000003DLL, 0x800000022D2DD740, "%s failed with %s)");
}

uint64_t sub_22D204ADC(uint64_t *a1)
{
  return sub_22D2016E8(a1, *(void **)(v1 + 16), *(uint64_t (**)(void, void))(v1 + 24), *(void *)(v1 + 32), MEMORY[0x263F90278], 0xD00000000000003DLL, 0x800000022D2DD740, "%s received a parsing result");
}

void sub_22D204B34(void **a1)
{
  sub_22D201290(a1, *(void **)(v1 + 16), *(void (**)(void, id))(v1 + 24), *(void *)(v1 + 32), 0xD000000000000035, 0x800000022D2DD780, "%s failed with %s");
}

uint64_t sub_22D204B78(uint64_t *a1)
{
  return sub_22D2016E8(a1, *(void **)(v1 + 16), *(uint64_t (**)(void, void))(v1 + 24), *(void *)(v1 + 32), MEMORY[0x263F90278], 0xD000000000000035, 0x800000022D2DD780, "%s received a parsing result");
}

unint64_t PBActor.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 4;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D204C14@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBActor.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D204C1C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D21E37C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D204C68()
{
  qword_2685426E8 = (uint64_t)&unk_26E05B100;
}

uint64_t static PBActor.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D328);
}

uint64_t static PBActor.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D328, &qword_2685426E8);
}

uint64_t (*static PBActor.allCases.modify())()
{
  if (qword_26853D328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D204D4C@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D328, &qword_2685426E8, a1);
}

void PBEventType.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t PBEventType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 0x1C;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBEventType.rawValue.getter()
{
  return *(void *)v0;
}

unint64_t sub_22D204DA8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBEventType.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D204DB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBEventType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22D204DD8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D2218D8();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D204E24()
{
  qword_2685426F0 = (uint64_t)&unk_26E05B160;
}

uint64_t static PBEventType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D330);
}

uint64_t static PBEventType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D330, &qword_2685426F0);
}

uint64_t (*static PBEventType.allCases.modify())()
{
  if (qword_26853D330 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22D204F08@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D330, &qword_2685426F0, a1);
}

unint64_t PBStep.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 0x12;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D204F48@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBStep.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D204F50(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D221884();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D204F9C()
{
  qword_2685426F8 = (uint64_t)&unk_26E05B340;
}

uint64_t static PBStep.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D338);
}

uint64_t static PBStep.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D338, &qword_2685426F8);
}

uint64_t (*static PBStep.allCases.modify())()
{
  if (qword_26853D338 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D205080@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D338, &qword_2685426F8, a1);
}

void PBPollParameters.actor.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t PBPollParameters.actor.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)uint64_t v1 = *(void *)result;
  *(unsigned char *)(v1 + 8) = v2;
  return result;
}

uint64_t (*PBPollParameters.actor.modify())()
{
  return nullsub_1;
}

uint64_t PBPollParameters.mailboxID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBPollParameters.mailboxID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBPollParameters.mailboxID.modify())()
{
  return nullsub_1;
}

uint64_t PBPollParameters.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D2063E4(type metadata accessor for PBPollParameters, a1);
}

uint64_t type metadata accessor for PBPollParameters(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542AB0);
}

uint64_t PBPollParameters.unknownFields.setter(uint64_t a1)
{
  return sub_22D20647C(a1, type metadata accessor for PBPollParameters);
}

uint64_t (*PBPollParameters.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPollParameters.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  type metadata accessor for PBPollParameters(0);
  return sub_22D2BBFE0();
}

uint64_t PBPollStateRequest.blobAuth.getter@<X0>(void *a1@<X8>)
{
  return sub_22D209B84(type metadata accessor for PBPollStateRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, a1);
}

uint64_t type metadata accessor for PBPollStateRequest(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542AC0);
}

uint64_t PBPollStateRequest.blobAuth.setter(uint64_t a1)
{
  return sub_22D209D88(a1, type metadata accessor for PBPollStateRequest, (void (*)(void))type metadata accessor for PBPollStateRequest._StorageClass, sub_22D211B90, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth);
}

uint64_t type metadata accessor for PBPollStateRequest._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542B40);
}

void (*PBPollStateRequest.blobAuth.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBBlobAuth(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v10, (uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = MEMORY[0x263F8EE78];
    v9[1] = sub_22D2BBFC0();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D21E20C((uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_22D221988((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_22D205510;
}

void sub_22D205510(uint64_t a1, char a2)
{
}

BOOL PBPollStateRequest.hasBlobAuth.getter()
{
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v5 = type metadata accessor for PBBlobAuth(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D21E20C((uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  return v6;
}

Swift::Void __swiftcall PBPollStateRequest.clearBlobAuth()()
{
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBPollStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPollStateRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D211B90(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v3, v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
}

uint64_t PBPollStateRequest.pollParameters.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D211E28(0, &qword_268542858, type metadata accessor for PBPollParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542858, type metadata accessor for PBPollParameters);
  uint64_t v7 = type metadata accessor for PBPollParameters(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D221988((uint64_t)v5, a1, type metadata accessor for PBPollParameters);
  }
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D21E20C((uint64_t)v5, &qword_268542858, type metadata accessor for PBPollParameters);
}

uint64_t sub_22D2059D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D211E28(0, &qword_268542858, type metadata accessor for PBPollParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_22D21E18C(v7, (uint64_t)v6, &qword_268542858, type metadata accessor for PBPollParameters);
  uint64_t v8 = type metadata accessor for PBPollParameters(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D221988((uint64_t)v6, a2, type metadata accessor for PBPollParameters);
  }
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D21E20C((uint64_t)v6, &qword_268542858, type metadata accessor for PBPollParameters);
}

uint64_t PBPollStateRequest.pollParameters.setter(uint64_t a1)
{
  sub_22D211E28(0, &qword_268542858, type metadata accessor for PBPollParameters, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBPollStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPollStateRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D211B90(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D221988(a1, (uint64_t)v8, type metadata accessor for PBPollParameters);
  uint64_t v12 = type metadata accessor for PBPollParameters(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D21E27C((uint64_t)v8, (uint64_t)v6, &qword_268542858, type metadata accessor for PBPollParameters);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v6, v13, &qword_268542858, type metadata accessor for PBPollParameters);
  swift_endAccess();
  return swift_release();
}

void (*PBPollStateRequest.pollParameters.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D211E28(0, &qword_268542858, type metadata accessor for PBPollParameters, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBPollParameters(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_22D21E18C(v10, (uint64_t)v5, &qword_268542858, type metadata accessor for PBPollParameters);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v9 = 0;
    void v9[8] = 1;
    *((void *)v9 + 2) = 0;
    *((void *)v9 + 3) = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D21E20C((uint64_t)v5, &qword_268542858, type metadata accessor for PBPollParameters);
  }
  else
  {
    sub_22D221988((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPollParameters);
  }
  return sub_22D205F94;
}

void sub_22D205F94(uint64_t a1, char a2)
{
}

BOOL PBPollStateRequest.hasPollParameters.getter()
{
  sub_22D211E28(0, &qword_268542858, type metadata accessor for PBPollParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBPollStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542858, type metadata accessor for PBPollParameters);
  uint64_t v5 = type metadata accessor for PBPollParameters(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D21E20C((uint64_t)v3, &qword_268542858, type metadata accessor for PBPollParameters);
  return v6;
}

Swift::Void __swiftcall PBPollStateRequest.clearPollParameters()()
{
  sub_22D211E28(0, &qword_268542858, type metadata accessor for PBPollParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBPollStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPollStateRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D211B90(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBPollParameters(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v3, v8, &qword_268542858, type metadata accessor for PBPollParameters);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBPollStateRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBPollStateRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D209ADC(type metadata accessor for PBPollStateRequest, &qword_26853D370, &qword_268542780, a1);
}

uint64_t PBOtherData.version.getter()
{
  return *v0;
}

uint64_t PBOtherData.version.setter(uint64_t result)
{
  _DWORD *v1 = result;
  return result;
}

uint64_t (*PBOtherData.version.modify())()
{
  return nullsub_1;
}

uint64_t PBOtherData.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBOtherData.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*PBOtherData.value.modify())()
{
  return nullsub_1;
}

uint64_t PBOtherData.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D2063E4(type metadata accessor for PBOtherData, a1);
}

uint64_t sub_22D2063E4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PBOtherData.unknownFields.setter(uint64_t a1)
{
  return sub_22D20647C(a1, type metadata accessor for PBOtherData);
}

uint64_t sub_22D20647C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBOtherData.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBOtherData.init()@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  type metadata accessor for PBOtherData(0);
  return sub_22D2BBFE0();
}

uint64_t PBUpdateParameters.actor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 24);
  *(void *)a1 = *(void *)(v3 + 16);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_22D2065DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_22D21DB84(v6);
    swift_release();
    *(void *)(a2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v8 + 16) = v3;
  *(unsigned char *)(v8 + 24) = v4;
  return result;
}

uint64_t PBUpdateParameters.actor.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_22D21DB84(v6);
    swift_release();
    *(void *)(v2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v8 + 16) = v3;
  *(unsigned char *)(v8 + 24) = v4;
  return result;
}

void (*PBUpdateParameters.actor.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D2067DC;
}

void sub_22D2067DC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = sub_22D21DB84(v9);
    swift_release();
    *(void *)(v8 + v7) = v10;
    swift_release();
  }
LABEL_4:
  uint64_t v11 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v11 + 16) = v4;
  *(unsigned char *)(v11 + 24) = v5;
  free((void *)v3);
}

uint64_t PBUpdateParameters.mailboxID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D20692C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D206988(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_22D21DB84(v6);
    swift_release();
    *(void *)(a2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBUpdateParameters.mailboxID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_22D21DB84(v7);
    swift_release();
    *(void *)(v3 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = *(void *)(v3 + v6);
  swift_beginAccess();
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBUpdateParameters.mailboxID.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D206B94;
}

void sub_22D206B94(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBUpdateParameters._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      uint64_t v8 = sub_22D21DB84(v7);
      swift_release();
      *(void *)(v6 + v5) = v8;
      swift_release();
    }
    uint64_t v9 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v9 + 32) = v3;
    *(void *)(v9 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = *(int *)(v2 + 96);
      uint64_t v11 = *(void *)(v2 + 88);
      type metadata accessor for PBUpdateParameters._StorageClass(0);
      swift_allocObject();
      uint64_t v12 = swift_retain();
      uint64_t v13 = sub_22D21DB84(v12);
      swift_release();
      *(void *)(v11 + v10) = v13;
      swift_release();
    }
    uint64_t v14 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v14 + 32) = v3;
    *(void *)(v14 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBUpdateParameters.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  return sub_22D21E18C(v3, a1, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
}

uint64_t sub_22D206D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  return sub_22D21E18C(v3, a2, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
}

uint64_t sub_22D206E10(uint64_t a1, uint64_t a2)
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - v5;
  sub_22D21E18C(a1, (uint64_t)&v12 - v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_22D21DB84(v8);
    swift_release();
    *(void *)(a2 + v7) = v9;
    swift_release();
  }
  uint64_t v10 = *(void *)(a2 + v7)
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v6, v10, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  return swift_release();
}

uint64_t PBUpdateParameters.data.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_22D21DB84(v5);
    swift_release();
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC(a1, v7, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  return swift_release();
}

void (*PBUpdateParameters.data.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  v3[10] = malloc(v5);
  uint64_t v6 = malloc(v5);
  v3[11] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  *((_DWORD *)v3 + 24) = v7;
  uint64_t v8 = *(void *)(v1 + v7)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v8, (uint64_t)v6, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  return sub_22D2071A4;
}

void sub_22D2071A4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    sub_22D21E18C(*(void *)(v2 + 88), *(void *)(v2 + 80), &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v3 = *(int *)(v2 + 96);
      uint64_t v4 = *(void *)(v2 + 72);
      type metadata accessor for PBUpdateParameters._StorageClass(0);
      swift_allocObject();
      uint64_t v5 = swift_retain();
      uint64_t v6 = sub_22D21DB84(v5);
      swift_release();
      *(void *)(v4 + v3) = v6;
      swift_release();
    }
    uint64_t v8 = *(void **)(v2 + 80);
    uint64_t v7 = *(void **)(v2 + 88);
    uint64_t v9 = *(void *)(*(void *)(v2 + 72) + *(int *)(v2 + 96))
       + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    swift_retain();
    sub_22D21E2FC((uint64_t)v8, v9, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    swift_endAccess();
    swift_release();
    sub_22D21E20C((uint64_t)v7, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = *(int *)(v2 + 96);
      uint64_t v11 = *(void *)(v2 + 72);
      type metadata accessor for PBUpdateParameters._StorageClass(0);
      swift_allocObject();
      uint64_t v12 = swift_retain();
      uint64_t v13 = sub_22D21DB84(v12);
      swift_release();
      *(void *)(v11 + v10) = v13;
      swift_release();
    }
    uint64_t v8 = *(void **)(v2 + 80);
    uint64_t v7 = *(void **)(v2 + 88);
    uint64_t v14 = *(void *)(*(void *)(v2 + 72) + *(int *)(v2 + 96))
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    swift_retain();
    sub_22D21E2FC((uint64_t)v7, v14, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    swift_endAccess();
    swift_release();
  }
  free(v7);
  free(v8);
  free((void *)v2);
}

uint64_t PBUpdateParameters.accessCode.getter()
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_22D21E20C((uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_22D211E8C((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
    return 0;
  }
  return *(void *)v3;
}

uint64_t PBUpdateParameters.accessCode.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D2078F0(a1, a2);
}

void (*PBUpdateParameters.accessCode.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = (uint64_t *)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v8 = *v5;
      unint64_t v9 = v5[1];
      goto LABEL_7;
    }
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_22D20773C;
}

void sub_22D20773C(uint64_t a1, char a2)
{
}

uint64_t PBUpdateParameters.confirmationB.getter()
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_22D21E20C((uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return *(void *)v3;
    }
    sub_22D211E8C((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_22D2BBFC0();
}

uint64_t PBUpdateParameters.confirmationB.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D2078F0(a1, a2);
}

uint64_t sub_22D2078F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v19 - v10);
  uint64_t v12 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    uint64_t v14 = sub_22D21DB84(v13);
    swift_release();
    *(void *)(v3 + v12) = v14;
    swift_release();
  }
  uint64_t v15 = *(void *)(v3 + v12);
  *uint64_t v11 = a1;
  v11[1] = a2;
  uint64_t v16 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 0, 1, v16);
  sub_22D21E27C((uint64_t)v11, (uint64_t)v9, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v17 = v15
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v9, v17, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  return swift_release();
}

void (*PBUpdateParameters.confirmationB.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = (uint64_t *)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    uint64_t v8 = sub_22D2BBFC0();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  uint64_t v8 = *v5;
  uint64_t v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_22D207CC8;
}

void sub_22D207CC8(uint64_t *a1, char a2)
{
}

uint64_t PBUpdateParameters.pb.getter()
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_22D21E20C((uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      return *(void *)v3;
    }
    sub_22D211E8C((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_22D2BBFC0();
}

uint64_t PBUpdateParameters.pb.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D2078F0(a1, a2);
}

void (*PBUpdateParameters.pb.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = (uint64_t *)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    uint64_t v8 = sub_22D2BBFC0();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  uint64_t v8 = *v5;
  uint64_t v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_22D20803C;
}

void sub_22D20803C(uint64_t *a1, char a2)
{
}

uint64_t PBUpdateParameters.geoEncrypted.getter()
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_22D21E20C((uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3) {
      return *(void *)v3;
    }
    sub_22D211E8C((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_22D2BBFC0();
}

uint64_t PBUpdateParameters.geoEncrypted.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D2078F0(a1, a2);
}

void (*PBUpdateParameters.geoEncrypted.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = (uint64_t *)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    uint64_t v8 = sub_22D2BBFC0();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  uint64_t v8 = *v5;
  uint64_t v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_22D2083B0;
}

void sub_22D2083B0(uint64_t *a1, char a2)
{
}

uint64_t PBUpdateParameters.confirmationA.getter()
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_22D21E20C((uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4) {
      return *(void *)v3;
    }
    sub_22D211E8C((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_22D2BBFC0();
}

uint64_t PBUpdateParameters.confirmationA.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D2078F0(a1, a2);
}

void (*PBUpdateParameters.confirmationA.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = (uint64_t *)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    uint64_t v8 = sub_22D2BBFC0();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  uint64_t v8 = *v5;
  uint64_t v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_22D208724;
}

void sub_22D208724(uint64_t *a1, char a2)
{
}

uint64_t PBUpdateParameters.lookupinfoEncrypted.getter()
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_22D21E20C((uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5) {
      return *(void *)v3;
    }
    sub_22D211E8C((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_22D2BBFC0();
}

uint64_t PBUpdateParameters.lookupinfoEncrypted.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D2078F0(a1, a2);
}

void (*PBUpdateParameters.lookupinfoEncrypted.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = (uint64_t *)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    uint64_t v8 = sub_22D2BBFC0();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  uint64_t v8 = *v5;
  uint64_t v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_22D208A98;
}

void sub_22D208A98(uint64_t *a1, char a2)
{
}

uint64_t PBUpdateParameters.pa.getter()
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_22D21E20C((uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6) {
      return *(void *)v3;
    }
    sub_22D211E8C((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return sub_22D2BBFC0();
}

uint64_t PBUpdateParameters.pa.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D2078F0(a1, a2);
}

void (*PBUpdateParameters.pa.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = (uint64_t *)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    uint64_t v8 = sub_22D2BBFC0();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  uint64_t v8 = *v5;
  uint64_t v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_22D208E0C;
}

void sub_22D208E0C(uint64_t *a1, char a2)
{
}

void sub_22D208E24(uint64_t *a1, char a2, void (*a3)(uint64_t, unint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 24);
  uint64_t v6 = *(void **)(*a1 + 48);
  unint64_t v7 = *(void *)(*a1 + 32);
  if (a2)
  {
    sub_22CFF9B64(*(void *)(*a1 + 24), v7);
    a3(v5, v7);
    sub_22CFF5630(*(void *)(v4 + 24), *(void *)(v4 + 32));
  }
  else
  {
    a3(*(void *)(*a1 + 24), v7);
  }
  free(v6);
  free((void *)v4);
}

uint64_t PBUpdateParameters.rootDlid.getter()
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v5 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_22D21E20C((uint64_t)v3, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7) {
      return *(void *)v3;
    }
    sub_22D211E8C((uint64_t)v3, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  return 0;
}

uint64_t PBUpdateParameters.rootDlid.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D2078F0(a1, a2);
}

void (*PBUpdateParameters.rootDlid.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = (uint64_t *)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[6] = v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 7)
  {
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  uint64_t v8 = *v5;
  unint64_t v9 = v5[1];
LABEL_7:
  v3[3] = v8;
  v3[4] = v9;
  return sub_22D209224;
}

void sub_22D209224(uint64_t a1, char a2)
{
}

void sub_22D20923C(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 24);
  uint64_t v6 = *(void **)(*(void *)a1 + 48);
  uint64_t v7 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    swift_bridgeObjectRetain();
    a3(v5, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    a3(*(void *)(*(void *)a1 + 24), v7);
  }
  free(v6);
  free(v4);
}

uint64_t PBUpdateParameters.otherData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8) {
      return sub_22D221988((uint64_t)v5, a1, type metadata accessor for PBOtherData);
    }
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
  }
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  type metadata accessor for PBOtherData(0);
  return sub_22D2BBFE0();
}

uint64_t PBUpdateParameters.otherData.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateParameters._StorageClass(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    uint64_t v12 = sub_22D21DB84(v11);
    swift_release();
    *(void *)(v2 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_22D221988(a1, (uint64_t)v9, type metadata accessor for PBOtherData);
  uint64_t v14 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_22D21E27C((uint64_t)v9, (uint64_t)v7, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v7, v15, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  return swift_release();
}

void (*PBUpdateParameters.otherData.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  size_t v6 = *(void *)(*(void *)(type metadata accessor for PBOtherData(0) - 8) + 64);
  v3[5] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[6] = v7;
  uint64_t v8 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v8, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v9 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9) == 1)
  {
    sub_22D21E20C((uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_6:
    *(_DWORD *)uint64_t v7 = 0;
    v7[1] = 0;
    v7[2] = 0xE000000000000000;
    sub_22D2BBFE0();
    return sub_22D2098F8;
  }
  if (swift_getEnumCaseMultiPayload() != 8)
  {
    sub_22D211E8C((uint64_t)v5, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_6;
  }
  sub_22D221988((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBOtherData);
  return sub_22D2098F8;
}

void sub_22D2098F8(uint64_t a1, char a2)
{
}

uint64_t PBUpdateParameters.eventType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D20C3E4(type metadata accessor for PBUpdateParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType, a1);
}

uint64_t PBUpdateParameters.eventType.setter(uint64_t *a1)
{
  return sub_22D20C5FC(a1, type metadata accessor for PBUpdateParameters, (void (*)(void))type metadata accessor for PBUpdateParameters._StorageClass, sub_22D21DB84, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType);
}

void (*PBUpdateParameters.eventType.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBUpdateParameters(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 8);
  v3[9] = *(void *)v5;
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D209A3C;
}

void sub_22D209A3C(uint64_t *a1, char a2)
{
}

uint64_t (*PBUpdateParameters.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBUpdateParameters.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D209ADC(type metadata accessor for PBUpdateParameters, &qword_26853D388, &qword_2685427B8, a1);
}

uint64_t sub_22D209ADC@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(a1(0) + 20);
  if (*a2 != -1) {
    swift_once();
  }
  *(void *)(a4 + v8) = *a3;
  return swift_retain();
}

uint64_t PBUpdateStateRequest.blobAuth.getter@<X0>(void *a1@<X8>)
{
  return sub_22D209B84(type metadata accessor for PBUpdateStateRequest, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, a1);
}

uint64_t sub_22D209B84@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_22D21E18C(v10, (uint64_t)v9, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v11 = type metadata accessor for PBBlobAuth(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1) {
    return sub_22D221988((uint64_t)v9, (uint64_t)a3, type metadata accessor for PBBlobAuth);
  }
  *a3 = MEMORY[0x263F8EE78];
  a3[1] = sub_22D2BBFC0();
  a3[2] = v12;
  a3[3] = 0;
  a3[4] = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D21E20C((uint64_t)v9, &qword_26853F988, type metadata accessor for PBBlobAuth);
}

uint64_t PBUpdateStateRequest.blobAuth.setter(uint64_t a1)
{
  return sub_22D209D88(a1, type metadata accessor for PBUpdateStateRequest, (void (*)(void))type metadata accessor for PBUpdateStateRequest._StorageClass, sub_22D21639C, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth);
}

uint64_t sub_22D209D88(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v18 = swift_retain();
    *(void *)(v5 + v17) = a4(v18);
    swift_release();
  }
  uint64_t v19 = *(void *)(v5 + v17);
  sub_22D221988(a1, (uint64_t)v16, type metadata accessor for PBBlobAuth);
  uint64_t v20 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 0, 1, v20);
  sub_22D21E27C((uint64_t)v16, (uint64_t)v14, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v21 = v19 + *a5;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v14, v21, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  return swift_release();
}

void (*PBUpdateStateRequest.blobAuth.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBBlobAuth(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v10, (uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = MEMORY[0x263F8EE78];
    v9[1] = sub_22D2BBFC0();
    v9[2] = v11;
    v9[3] = 0;
    v9[4] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D21E20C((uint64_t)v5, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_22D221988((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBBlobAuth);
  }
  return sub_22D20A1C8;
}

void sub_22D20A1C8(uint64_t a1, char a2)
{
}

BOOL PBUpdateStateRequest.hasBlobAuth.getter()
{
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v5 = type metadata accessor for PBBlobAuth(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D21E20C((uint64_t)v3, &qword_26853F988, type metadata accessor for PBBlobAuth);
  return v6;
}

Swift::Void __swiftcall PBUpdateStateRequest.clearBlobAuth()()
{
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateStateRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D21639C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v3, v8, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
}

uint64_t PBUpdateStateRequest.updateParameters.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D211E28(0, &qword_268542888, type metadata accessor for PBUpdateParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542888, type metadata accessor for PBUpdateParameters);
  uint64_t v7 = type metadata accessor for PBUpdateParameters(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D221988((uint64_t)v5, a1, type metadata accessor for PBUpdateParameters);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D388 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_2685427B8;
  swift_retain();
  return sub_22D21E20C((uint64_t)v5, &qword_268542888, type metadata accessor for PBUpdateParameters);
}

uint64_t sub_22D20A6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D211E28(0, &qword_268542888, type metadata accessor for PBUpdateParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_22D21E18C(v7, (uint64_t)v6, &qword_268542888, type metadata accessor for PBUpdateParameters);
  uint64_t v8 = type metadata accessor for PBUpdateParameters(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D221988((uint64_t)v6, a2, type metadata accessor for PBUpdateParameters);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D388 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_2685427B8;
  swift_retain();
  return sub_22D21E20C((uint64_t)v6, &qword_268542888, type metadata accessor for PBUpdateParameters);
}

uint64_t PBUpdateStateRequest.updateParameters.setter(uint64_t a1)
{
  sub_22D211E28(0, &qword_268542888, type metadata accessor for PBUpdateParameters, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateStateRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D21639C(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D221988(a1, (uint64_t)v8, type metadata accessor for PBUpdateParameters);
  uint64_t v12 = type metadata accessor for PBUpdateParameters(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D21E27C((uint64_t)v8, (uint64_t)v6, &qword_268542888, type metadata accessor for PBUpdateParameters);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v6, v13, &qword_268542888, type metadata accessor for PBUpdateParameters);
  swift_endAccess();
  return swift_release();
}

void (*PBUpdateStateRequest.updateParameters.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D211E28(0, &qword_268542888, type metadata accessor for PBUpdateParameters, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBUpdateParameters(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_22D21E18C(v10, (uint64_t)v5, &qword_268542888, type metadata accessor for PBUpdateParameters);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D388 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_2685427B8;
    swift_retain();
    sub_22D21E20C((uint64_t)v5, &qword_268542888, type metadata accessor for PBUpdateParameters);
  }
  else
  {
    sub_22D221988((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBUpdateParameters);
  }
  return sub_22D20ACD0;
}

void sub_22D20ACD0(uint64_t a1, char a2)
{
}

BOOL PBUpdateStateRequest.hasUpdateParameters.getter()
{
  sub_22D211E28(0, &qword_268542888, type metadata accessor for PBUpdateParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542888, type metadata accessor for PBUpdateParameters);
  uint64_t v5 = type metadata accessor for PBUpdateParameters(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D21E20C((uint64_t)v3, &qword_268542888, type metadata accessor for PBUpdateParameters);
  return v6;
}

Swift::Void __swiftcall PBUpdateStateRequest.clearUpdateParameters()()
{
  sub_22D211E28(0, &qword_268542888, type metadata accessor for PBUpdateParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBUpdateStateRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBUpdateStateRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D21639C(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBUpdateParameters(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v3, v8, &qword_268542888, type metadata accessor for PBUpdateParameters);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBUpdateStateRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBUpdateStateRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D209ADC(type metadata accessor for PBUpdateStateRequest, &qword_26853D398, &qword_2685427D8, a1);
}

uint64_t PBStateResponse.mailboxID.getter()
{
  return sub_22D20CCC0(type metadata accessor for PBStateResponse);
}

uint64_t sub_22D20B068(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_22D21DE94(v6);
    swift_release();
    *(void *)(a2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBStateResponse.mailboxID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_22D21DE94(v7);
    swift_release();
    *(void *)(v3 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = *(void *)(v3 + v6);
  swift_beginAccess();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBStateResponse.mailboxID.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D20B274;
}

void sub_22D20B274(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBStateResponse._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      uint64_t v8 = sub_22D21DE94(v7);
      swift_release();
      *(void *)(v6 + v5) = v8;
      swift_release();
    }
    uint64_t v9 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v9 + 16) = v3;
    *(void *)(v9 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = *(int *)(v2 + 96);
      uint64_t v11 = *(void *)(v2 + 88);
      type metadata accessor for PBStateResponse._StorageClass(0);
      swift_allocObject();
      uint64_t v12 = swift_retain();
      uint64_t v13 = sub_22D21DE94(v12);
      swift_release();
      *(void *)(v11 + v10) = v13;
      swift_release();
    }
    uint64_t v14 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v14 + 16) = v3;
    *(void *)(v14 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBStateResponse.state.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D211E28(0, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_268542898, type metadata accessor for PBState);
  uint64_t v7 = type metadata accessor for PBState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D221988((uint64_t)v5, a1, type metadata accessor for PBState);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853D3C8 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_268542848;
  swift_retain();
  return sub_22D21E20C((uint64_t)v5, &qword_268542898, type metadata accessor for PBState);
}

uint64_t sub_22D20B5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D211E28(0, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  sub_22D21E18C(v7, (uint64_t)v6, &qword_268542898, type metadata accessor for PBState);
  uint64_t v8 = type metadata accessor for PBState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D221988((uint64_t)v6, a2, type metadata accessor for PBState);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853D3C8 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_268542848;
  swift_retain();
  return sub_22D21E20C((uint64_t)v6, &qword_268542898, type metadata accessor for PBState);
}

uint64_t PBStateResponse.state.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D211E28(0, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    uint64_t v12 = sub_22D21DE94(v11);
    swift_release();
    *(void *)(v2 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_22D221988(a1, (uint64_t)v9, type metadata accessor for PBState);
  uint64_t v14 = type metadata accessor for PBState(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_22D21E27C((uint64_t)v9, (uint64_t)v7, &qword_268542898, type metadata accessor for PBState);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v7, v15, &qword_268542898, type metadata accessor for PBState);
  swift_endAccess();
  return swift_release();
}

uint64_t PBState.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D209ADC(type metadata accessor for PBState, &qword_26853D3C8, &qword_268542848, a1);
}

void (*PBStateResponse.state.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D211E28(0, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBState(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  sub_22D21E18C(v10, (uint64_t)v5, &qword_268542898, type metadata accessor for PBState);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853D3C8 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_268542848;
    swift_retain();
    sub_22D21E20C((uint64_t)v5, &qword_268542898, type metadata accessor for PBState);
  }
  else
  {
    sub_22D221988((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBState);
  }
  return sub_22D20BC10;
}

void sub_22D20BC10(uint64_t a1, char a2)
{
}

BOOL PBStateResponse.hasState.getter()
{
  sub_22D211E28(0, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_268542898, type metadata accessor for PBState);
  uint64_t v5 = type metadata accessor for PBState(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D21E20C((uint64_t)v3, &qword_268542898, type metadata accessor for PBState);
  return v6;
}

Swift::Void __swiftcall PBStateResponse.clearState()()
{
  uint64_t v1 = v0;
  sub_22D211E28(0, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - v3;
  uint64_t v5 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_22D21DE94(v6);
    swift_release();
    *(void *)(v1 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for PBState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v4, v10, &qword_268542898, type metadata accessor for PBState);
  swift_endAccess();
  swift_release();
}

uint64_t PBStateResponse.msg.getter()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D20BF9C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*(void *)(a1 + *(int *)(type metadata accessor for PBStateResponse(0) + 20))
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D20C004(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_22D21DE94(v6);
    swift_release();
    *(void *)(a2 + v5) = v7;
    swift_release();
  }
  uint64_t v8 = (void *)(*(void *)(a2 + v5)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  *uint64_t v8 = v4;
  v8[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBStateResponse.msg.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBStateResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_22D21DE94(v7);
    swift_release();
    *(void *)(v3 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = (void *)(*(void *)(v3 + v6)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  void *v9 = a1;
  v9[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*PBStateResponse.msg.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D20C234;
}

void sub_22D20C234(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBStateResponse._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      uint64_t v8 = sub_22D21DE94(v7);
      swift_release();
      *(void *)(v6 + v5) = v8;
      swift_release();
    }
    uint64_t v9 = (void *)(*(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96))
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
    swift_beginAccess();
    void *v9 = v3;
    v9[1] = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = *(int *)(v2 + 96);
      uint64_t v11 = *(void *)(v2 + 88);
      type metadata accessor for PBStateResponse._StorageClass(0);
      swift_allocObject();
      uint64_t v12 = swift_retain();
      uint64_t v13 = sub_22D21DE94(v12);
      swift_release();
      *(void *)(v11 + v10) = v13;
      swift_release();
    }
    uint64_t v14 = (void *)(*(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96))
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
    swift_beginAccess();
    *uint64_t v14 = v3;
    v14[1] = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBStateResponse.resultCode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D20C3E4(type metadata accessor for PBStateResponse, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode, a1);
}

uint64_t sub_22D20C3E4@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  uint64_t result = swift_beginAccess();
  char v7 = *(unsigned char *)(v5 + 8);
  *(void *)a3 = *(void *)v5;
  *(unsigned char *)(a3 + 8) = v7;
  return result;
}

uint64_t sub_22D20C45C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + *(int *)(a2(0) + 20)) + *a3;
  uint64_t result = swift_beginAccess();
  char v7 = *(unsigned char *)(v5 + 8);
  *(void *)a4 = *(void *)v5;
  *(unsigned char *)(a4 + 8) = v7;
  return result;
}

uint64_t sub_22D20C4D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t), void *a8)
{
  uint64_t v12 = *a1;
  char v13 = *((unsigned char *)a1 + 8);
  uint64_t v14 = *(int *)(a5(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a6(0);
    swift_allocObject();
    uint64_t v15 = swift_retain();
    uint64_t v16 = a7(v15);
    swift_release();
    *(void *)(a2 + v14) = v16;
    swift_release();
  }
  uint64_t v17 = *(void *)(a2 + v14) + *a8;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v17 = v12;
  *(unsigned char *)(v17 + 8) = v13;
  return result;
}

uint64_t PBStateResponse.resultCode.setter(uint64_t *a1)
{
  return sub_22D20C5FC(a1, type metadata accessor for PBStateResponse, (void (*)(void))type metadata accessor for PBStateResponse._StorageClass, sub_22D21DE94, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
}

uint64_t sub_22D20C5FC(uint64_t *a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v9 = v5;
  uint64_t v10 = *a1;
  char v11 = *((unsigned char *)a1 + 8);
  uint64_t v12 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    uint64_t v14 = a4(v13);
    swift_release();
    *(void *)(v9 + v12) = v14;
    swift_release();
  }
  uint64_t v15 = *(void *)(v9 + v12) + *a5;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v15 = v10;
  *(unsigned char *)(v15 + 8) = v11;
  return result;
}

void (*PBStateResponse.resultCode.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBStateResponse(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 8);
  v3[9] = *(void *)v5;
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D20C780;
}

void sub_22D20C780(uint64_t *a1, char a2)
{
}

void sub_22D20C7B4(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 72);
  char v11 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v13 = *(int *)(v9 + 84);
    uint64_t v14 = *(void *)(v9 + 88);
    a3(0);
    swift_allocObject();
    uint64_t v15 = swift_retain();
    uint64_t v16 = a4(v15);
    swift_release();
    *(void *)(v14 + v13) = v16;
    swift_release();
  }
LABEL_4:
  uint64_t v17 = *(void *)(*(void *)(v9 + 88) + *(int *)(v9 + 84)) + *a5;
  swift_beginAccess();
  *(void *)uint64_t v17 = v10;
  *(unsigned char *)(v17 + 8) = v11;
  free((void *)v9);
}

uint64_t (*PBStateResponse.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t PBStateResponse.ResultCode.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 7;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D20C910@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBStateResponse.ResultCode.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D20C918(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D221830();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t PBStateResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_22D209ADC(type metadata accessor for PBStateResponse, &qword_26853D3A8, &qword_2685427F8, a1);
}

void sub_22D20C99C()
{
  qword_268542700 = (uint64_t)&unk_26E05B480;
}

uint64_t static PBStateResponse.ResultCode.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D340);
}

uint64_t static PBStateResponse.ResultCode.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D340, &qword_268542700);
}

uint64_t (*static PBStateResponse.ResultCode.allCases.modify())()
{
  if (qword_26853D340 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D20CA80@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D340, &qword_268542700, a1);
}

double PBGeo.latitude.getter()
{
  return *(double *)v0;
}

void PBGeo.latitude.setter(double a1)
{
  double *v1 = a1;
}

uint64_t (*PBGeo.latitude.modify())()
{
  return nullsub_1;
}

double PBGeo.longitude.getter()
{
  return *(double *)(v0 + 8);
}

void PBGeo.longitude.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*PBGeo.longitude.modify())()
{
  return nullsub_1;
}

uint64_t PBGeo.radius.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t PBGeo.radius.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*PBGeo.radius.modify())()
{
  return nullsub_1;
}

uint64_t PBGeo.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBGeo(0) + 28);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBGeo.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBGeo(0) + 28);
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBGeo.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t PBGeo.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  return sub_22D2BBFE0();
}

uint64_t PBState.mailboxID.getter()
{
  return sub_22D20CCC0(type metadata accessor for PBState);
}

uint64_t sub_22D20CCC0(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_22D20CD24@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + *(int *)(a2(0) + 20));
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  *a3 = *(void *)(v4 + 16);
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D20CD84(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D219EAC(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBState.mailboxID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D219EAC(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBState.mailboxID.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D20CF88;
}

void sub_22D20CF88(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D219EAC(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D219EAC(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBState.actor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 40);
  *(void *)a1 = *(void *)(v3 + 32);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_22D20D154(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D219EAC(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 32) = v3;
  *(unsigned char *)(v7 + 40) = v4;
  return result;
}

uint64_t PBState.actor.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v1 + v4) = sub_22D219EAC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t result = swift_beginAccess();
  *(void *)(v6 + 32) = v2;
  *(unsigned char *)(v6 + 40) = v3;
  return result;
}

void (*PBState.actor.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D20D34C;
}

void sub_22D20D34C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v8 + v7) = sub_22D219EAC(v9);
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v10 + 32) = v4;
  *(unsigned char *)(v10 + 40) = v5;
  free((void *)v3);
}

uint64_t PBState.accessCode.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D20D498@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 56);
  *a2 = *(void *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D20D4F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D219EAC(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBState.accessCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D219EAC(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 48) = a1;
  *(void *)(v7 + 56) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBState.accessCode.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 56);
  v3[9] = *(void *)(v5 + 48);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D20D6F8;
}

void sub_22D20D6F8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D219EAC(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 48) = v3;
    *(void *)(v8 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D219EAC(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 48) = v3;
    *(void *)(v12 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBState.sid.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 64);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_22D20D8C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 72);
  *a2 = *(void *)(v3 + 64);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D20D920(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D219EAC(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 64) = v4;
  *(void *)(v7 + 72) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t PBState.sid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D219EAC(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a2;
  return swift_bridgeObjectRelease();
}

void (*PBState.sid.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 72);
  v3[9] = *(void *)(v5 + 64);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_22D20DB24;
}

void sub_22D20DB24(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D219EAC(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 64) = v3;
    *(void *)(v8 + 72) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = sub_22D219EAC(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 64) = v3;
    *(void *)(v12 + 72) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

uint64_t PBState.compositeCodeTrials.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBState(0) + 20));
  swift_beginAccess();
  return *(unsigned int *)(v1 + 80);
}

uint64_t sub_22D20DCE0(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + v4) = sub_22D219EAC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v6 + 80) = v3;
  return result;
}

uint64_t PBState.compositeCodeTrials.setter(int a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_22D219EAC(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v5 + 80) = a1;
  return result;
}

void (*PBState.compositeCodeTrials.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 20) = *(_DWORD *)(v5 + 80);
  return sub_22D20DEC0;
}

void sub_22D20DEC0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v7 + v6) = sub_22D219EAC(v8);
    swift_release();
  }
LABEL_4:
  uint64_t v9 = (_DWORD *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84)) + 80);
  swift_beginAccess();
  _DWORD *v9 = v4;
  free((void *)v3);
}

uint64_t PBState.expirationTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D211E28(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D21E18C(v7, (uint64_t)v6, &qword_26853F998, v3);
  uint64_t v8 = sub_22D2BBFB0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
  }
  sub_22D2BBFA0();
  return sub_22D21E20C((uint64_t)v6, &qword_26853F998, MEMORY[0x263F502F0]);
}

uint64_t sub_22D20E14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D211E28(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = *(void *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D21E18C(v8, (uint64_t)v7, &qword_26853F998, v4);
  uint64_t v9 = sub_22D2BBFB0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
  }
  sub_22D2BBFA0();
  return sub_22D21E20C((uint64_t)v7, &qword_26853F998, MEMORY[0x263F502F0]);
}

uint64_t sub_22D20E2F0(uint64_t a1)
{
  uint64_t v2 = sub_22D2BBFB0();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return PBState.expirationTime.setter((uint64_t)v4);
}

uint64_t PBState.expirationTime.setter(uint64_t a1)
{
  sub_22D211E28(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D219EAC(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  uint64_t v12 = sub_22D2BBFB0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v8, a1, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D21E27C((uint64_t)v8, (uint64_t)v6, &qword_26853F998, MEMORY[0x263F502F0]);
  uint64_t v15 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v6, v15, &qword_26853F998, v14);
  swift_endAccess();
  return swift_release();
}

void (*PBState.expirationTime.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D211E28(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v3[4] = v6;
  uint64_t v7 = sub_22D2BBFB0();
  v3[5] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  v3[6] = v8;
  size_t v10 = *(void *)(v8 + 64);
  v3[7] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v3[8] = v11;
  uint64_t v12 = *(void *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D21E18C(v12, (uint64_t)v6, &qword_26853F998, v4);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7) == 1)
  {
    sub_22D2BBFA0();
    sub_22D21E20C((uint64_t)v6, &qword_26853F998, MEMORY[0x263F502F0]);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v6, v7);
  }
  return sub_22D20E7EC;
}

void sub_22D20E7EC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 56);
  uint64_t v4 = *(void **)(*(void *)a1 + 64);
  if (a2)
  {
    uint64_t v5 = v2[5];
    uint64_t v6 = v2[6];
    uint64_t v7 = (void *)v2[4];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 56), v4, v5);
    PBState.expirationTime.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v7 = (void *)v2[4];
    PBState.expirationTime.setter(*(void *)(*(void *)a1 + 64));
  }
  free(v4);
  free(v3);
  free(v7);
  free(v2);
}

BOOL PBState.hasExpirationTime.getter()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D211E28(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  sub_22D21E18C(v5, (uint64_t)v4, &qword_26853F998, v1);
  uint64_t v6 = sub_22D2BBFB0();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_22D21E20C((uint64_t)v4, &qword_26853F998, v1);
  return v7;
}

Swift::Void __swiftcall PBState.clearExpirationTime()()
{
  sub_22D211E28(0, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D219EAC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = sub_22D2BBFB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v3, v8, &qword_26853F998, MEMORY[0x263F502F0]);
  swift_endAccess();
  swift_release();
}

uint64_t PBState.geoEncrypted.getter()
{
  return sub_22D20EC58(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
}

uint64_t PBState.geoEncrypted.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D20EE14(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
}

void (*PBState.geoEncrypted.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D20EC40;
}

void sub_22D20EC40(uint64_t *a1, char a2)
{
}

uint64_t PBState.pa.getter()
{
  return sub_22D20EC58(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
}

uint64_t sub_22D20EC58(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20)) + *a1;
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  sub_22CFF9B64(*(void *)v2, *(void *)(v2 + 8));
  return v3;
}

uint64_t sub_22D20ECC4@<X0>(uint64_t a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4 = (uint64_t *)(*(void *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20)) + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  *a3 = *v4;
  a3[1] = v6;
  return sub_22CFF9B64(v5, v6);
}

uint64_t sub_22D20ED34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  uint64_t v9 = *(int *)(type metadata accessor for PBState(0) + 20);
  sub_22CFF9B64(v7, v8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(a2 + v9) = sub_22D219EAC(v10);
    swift_release();
  }
  uint64_t v11 = (uint64_t *)(*(void *)(a2 + v9) + *a5);
  swift_beginAccess();
  uint64_t v12 = *v11;
  unint64_t v13 = v11[1];
  *uint64_t v11 = v7;
  v11[1] = v8;
  return sub_22CFF5630(v12, v13);
}

uint64_t PBState.pa.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D20EE14(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
}

uint64_t sub_22D20EE14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v3 + v7) = sub_22D219EAC(v8);
    swift_release();
  }
  uint64_t v9 = (uint64_t *)(*(void *)(v3 + v7) + *a3);
  swift_beginAccess();
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  uint64_t *v9 = a1;
  v9[1] = a2;
  return sub_22CFF5630(v10, v11);
}

void (*PBState.pa.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D20EF78;
}

void sub_22D20EF78(uint64_t *a1, char a2)
{
}

void sub_22D20EF84(uint64_t *a1, char a2, void *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 72);
  unint64_t v6 = *(void *)(*a1 + 80);
  if (a2)
  {
    sub_22CFF9B64(*(void *)(*a1 + 72), v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = *(int *)(v4 + 96);
      uint64_t v8 = *(void *)(v4 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + v7) = sub_22D219EAC(v9);
      swift_release();
    }
    uint64_t v10 = (uint64_t *)(*(void *)(*(void *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    *uint64_t v10 = v5;
    v10[1] = v6;
    sub_22CFF5630(v11, v12);
    uint64_t v13 = *(void *)(v4 + 72);
    unint64_t v14 = *(void *)(v4 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v15 = *(int *)(v4 + 96);
      uint64_t v16 = *(void *)(v4 + 88);
      type metadata accessor for PBState._StorageClass(0);
      swift_allocObject();
      uint64_t v17 = swift_retain();
      *(void *)(v16 + v15) = sub_22D219EAC(v17);
      swift_release();
    }
    uint64_t v18 = (uint64_t *)(*(void *)(*(void *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    uint64_t v13 = *v18;
    unint64_t v14 = v18[1];
    uint64_t *v18 = v5;
    v18[1] = v6;
  }
  sub_22CFF5630(v13, v14);
  free((void *)v4);
}

uint64_t PBState.pb.getter()
{
  return sub_22D20EC58(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
}

uint64_t PBState.pb.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D20EE14(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
}

void (*PBState.pb.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D20F1C4;
}

void sub_22D20F1C4(uint64_t *a1, char a2)
{
}

uint64_t PBState.confirmationA.getter()
{
  return sub_22D20EC58(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
}

uint64_t PBState.confirmationA.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D20EE14(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
}

void (*PBState.confirmationA.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D20F280;
}

void sub_22D20F280(uint64_t *a1, char a2)
{
}

uint64_t PBState.confirmationB.getter()
{
  return sub_22D20EC58(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
}

uint64_t PBState.confirmationB.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D20EE14(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
}

void (*PBState.confirmationB.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D20F33C;
}

void sub_22D20F33C(uint64_t *a1, char a2)
{
}

uint64_t PBState.lookupinfoEncrypted.getter()
{
  return sub_22D20EC58(&OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
}

uint64_t PBState.lookupinfoEncrypted.setter(uint64_t a1, uint64_t a2)
{
  return sub_22D20EE14(a1, a2, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
}

void (*PBState.lookupinfoEncrypted.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D20F3F8;
}

void sub_22D20F3F8(uint64_t *a1, char a2)
{
}

uint64_t PBState.step.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D20C3E4(type metadata accessor for PBState, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step, a1);
}

uint64_t sub_22D20F424(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D219EAC(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + v5)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v7 = v3;
  *(unsigned char *)(v7 + 8) = v4;
  return result;
}

uint64_t PBState.step.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v1 + v4) = sub_22D219EAC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v6 = v2;
  *(unsigned char *)(v6 + 8) = v3;
  return result;
}

void (*PBState.step.modify(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 8);
  v3[9] = *(void *)v5;
  *((unsigned char *)v3 + 80) = v6;
  return sub_22D20F640;
}

void sub_22D20F640(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v8 + v7) = sub_22D219EAC(v9);
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  swift_beginAccess();
  *(void *)uint64_t v10 = v4;
  *(unsigned char *)(v10 + 8) = v5;
  free((void *)v3);
}

uint64_t PBState.otherData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  char v5 = (char *)&v9 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  sub_22D21E18C(v6, (uint64_t)v5, &qword_2685428F8, type metadata accessor for PBOtherData);
  uint64_t v7 = type metadata accessor for PBOtherData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D221988((uint64_t)v5, a1, type metadata accessor for PBOtherData);
  }
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D21E20C((uint64_t)v5, &qword_2685428F8, type metadata accessor for PBOtherData);
}

uint64_t sub_22D20F8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  sub_22D21E18C(v7, (uint64_t)v6, &qword_2685428F8, type metadata accessor for PBOtherData);
  uint64_t v8 = type metadata accessor for PBOtherData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D221988((uint64_t)v6, a2, type metadata accessor for PBOtherData);
  }
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0xE000000000000000;
  sub_22D2BBFE0();
  return sub_22D21E20C((uint64_t)v6, &qword_2685428F8, type metadata accessor for PBOtherData);
}

uint64_t sub_22D20FA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(char *))
{
  uint64_t v10 = a5(0);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v14 - v11;
  sub_22D221ACC(a1, (uint64_t)&v14 - v11, a6);
  return a7(v12);
}

uint64_t PBState.otherData.setter(uint64_t a1)
{
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D219EAC(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D221988(a1, (uint64_t)v8, type metadata accessor for PBOtherData);
  uint64_t v12 = type metadata accessor for PBOtherData(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D21E27C((uint64_t)v8, (uint64_t)v6, &qword_2685428F8, type metadata accessor for PBOtherData);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v6, v13, &qword_2685428F8, type metadata accessor for PBOtherData);
  swift_endAccess();
  return swift_release();
}

void (*PBState.otherData.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBOtherData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBState(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  sub_22D21E18C(v10, (uint64_t)v5, &qword_2685428F8, type metadata accessor for PBOtherData);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(_DWORD *)uint64_t v9 = 0;
    v9[1] = 0;
    v9[2] = 0xE000000000000000;
    sub_22D2BBFE0();
    sub_22D21E20C((uint64_t)v5, &qword_2685428F8, type metadata accessor for PBOtherData);
  }
  else
  {
    sub_22D221988((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBOtherData);
  }
  return sub_22D20FF2C;
}

void sub_22D20FF2C(uint64_t a1, char a2)
{
}

void sub_22D20FF6C(uint64_t a1, char a2, void (*a3)(void *), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(*(void *)a1 + 40);
  size_t v8 = *(void **)(*(void *)a1 + 48);
  uint64_t v9 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    sub_22D221ACC(*(void *)(*(void *)a1 + 48), (uint64_t)v7, a4);
    a3(v7);
    sub_22D211E8C((uint64_t)v8, a5);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 48));
  }
  free(v8);
  free(v7);
  free(v9);
  free(v6);
}

BOOL PBState.hasOtherData.getter()
{
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBState(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  sub_22D21E18C(v4, (uint64_t)v3, &qword_2685428F8, type metadata accessor for PBOtherData);
  uint64_t v5 = type metadata accessor for PBOtherData(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D21E20C((uint64_t)v3, &qword_2685428F8, type metadata accessor for PBOtherData);
  return v6;
}

Swift::Void __swiftcall PBState.clearOtherData()()
{
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBState(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBState._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D219EAC(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBOtherData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  swift_retain();
  sub_22D21E2FC((uint64_t)v3, v8, &qword_2685428F8, type metadata accessor for PBOtherData);
  swift_endAccess();
  swift_release();
}

uint64_t (*PBState.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_22D210324()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542708);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542708);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "UNDEFINED";
  *(void *)(v7 + 8) = 9;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "HEALTH_APP";
  *(void *)(v11 + 8) = 10;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  *uint64_t v12 = 2;
  *(void *)uint64_t v13 = "DASHBOARD";
  *((void *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  *uint64_t v14 = 3;
  *(void *)uint64_t v15 = "UNIVERSAL";
  *((void *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBActor._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D348, (uint64_t)qword_268542708, a1);
}

uint64_t sub_22D2105A8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D348, (uint64_t)qword_268542708, a1);
}

uint64_t sub_22D2105CC()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542720);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542720);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = xmmword_22D2D0B70;
  unint64_t v5 = v62 + v4;
  unint64_t v6 = v62 + v4 + *(int *)(v2 + 56);
  *(void *)(v62 + v4) = 0;
  *(void *)unint64_t v6 = "UNDEFINED_EVENT";
  *(void *)(v6 + 8) = 15;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v62 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "INITIATE";
  *(void *)(v10 + 8) = 8;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v62 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  *unint64_t v11 = 2;
  *(void *)uint64_t v12 = "ABORT";
  *((void *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v62 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "GEO_ACCEPT";
  *((void *)v14 + 1) = 10;
  unsigned char v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v62 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "GEO_DENY";
  *((void *)v16 + 1) = 8;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v62 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)uint64_t v18 = "PA_DELIVERY";
  *((void *)v18 + 1) = 11;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v62 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)uint64_t v20 = "PA_GENERATE_ERROR";
  *((void *)v20 + 1) = 17;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v62 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)uint64_t v22 = "PB_VERIFY_SUCCESS";
  *((void *)v22 + 1) = 17;
  v22[16] = 2;
  v9();
  uint64_t v23 = v62 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "PB_VERIFY_ERROR";
  *(void *)(v23 + 8) = 15;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  unint64_t v24 = (void *)(v62 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)uint64_t v25 = "CONFIRMATIONA_DELIVERY";
  *((void *)v25 + 1) = 22;
  v25[16] = 2;
  v9();
  unint64_t v26 = (void *)(v62 + v4 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 10;
  *(void *)uint64_t v27 = "CONFIRMATIONA_GENERATE_ERROR";
  *((void *)v27 + 1) = 28;
  v27[16] = 2;
  v9();
  id v28 = (void *)(v62 + v4 + 11 * v3);
  id v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 11;
  *(void *)id v29 = "CONFIRMATIONB_VERIFY_SUCCESS";
  *((void *)v29 + 1) = 28;
  v29[16] = 2;
  v9();
  id v30 = (void *)(v62 + v4 + 12 * v3);
  id v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 12;
  *(void *)id v31 = "CONFIRMATIONB_VERIFY_ERROR";
  *((void *)v31 + 1) = 26;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v62 + v4 + 13 * v3);
  os_log_type_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 13;
  *(void *)os_log_type_t v33 = "LOOKUPINFO_DELIVERY";
  *((void *)v33 + 1) = 19;
  v33[16] = 2;
  v9();
  unint64_t v34 = (void *)(v62 + v4 + 14 * v3);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 14;
  *(void *)uint64_t v35 = "LOOKUPINFO_RECEIVED";
  *((void *)v35 + 1) = 19;
  v35[16] = 2;
  v9();
  uint64_t v36 = (void *)(v62 + v4 + 15 * v3);
  unint64_t v37 = (char *)v36 + *(int *)(v2 + 56);
  *uint64_t v36 = 15;
  *(void *)unint64_t v37 = "ACCESS_CODE_DELIVERY";
  *((void *)v37 + 1) = 20;
  v37[16] = 2;
  v9();
  uint64_t v38 = v62 + v4 + 16 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 16 * v3) = 16;
  *(void *)uint64_t v38 = "GEO_DELIVERY";
  *(void *)(v38 + 8) = 12;
  *(unsigned char *)(v38 + 16) = 2;
  v9();
  uint64_t v39 = (void *)(v62 + v4 + 17 * v3);
  unint64_t v40 = (char *)v39 + *(int *)(v2 + 56);
  void *v39 = 17;
  *(void *)unint64_t v40 = "PB_DELIVERY";
  *((void *)v40 + 1) = 11;
  v40[16] = 2;
  v9();
  unint64_t v41 = (void *)(v62 + v4 + 18 * v3);
  uint64_t v42 = (char *)v41 + *(int *)(v2 + 56);
  *unint64_t v41 = 18;
  *(void *)uint64_t v42 = "PB_GENERATE_ERROR";
  *((void *)v42 + 1) = 17;
  v42[16] = 2;
  v9();
  unint64_t v43 = (void *)(v62 + v4 + 19 * v3);
  uint64_t v44 = (char *)v43 + *(int *)(v2 + 56);
  *unint64_t v43 = 19;
  *(void *)uint64_t v44 = "PA_VERIFY_SUCCESS";
  *((void *)v44 + 1) = 17;
  v44[16] = 2;
  v9();
  uint64_t v45 = (void *)(v62 + v4 + 20 * v3);
  uint64_t v46 = (char *)v45 + *(int *)(v2 + 56);
  void *v45 = 20;
  *(void *)uint64_t v46 = "PA_VERIFY_ERROR";
  *((void *)v46 + 1) = 15;
  v46[16] = 2;
  v9();
  uint64_t v47 = (void *)(v62 + v4 + 21 * v3);
  uint64_t v48 = (char *)v47 + *(int *)(v2 + 56);
  *uint64_t v47 = 21;
  *(void *)uint64_t v48 = "CONFIRMATIONB_DELIVERY";
  *((void *)v48 + 1) = 22;
  v48[16] = 2;
  v9();
  unint64_t v49 = (void *)(v62 + v4 + 22 * v3);
  uint64_t v50 = (char *)v49 + *(int *)(v2 + 56);
  *unint64_t v49 = 22;
  *(void *)uint64_t v50 = "CONFIRMATIONB_GENERATE_ERROR";
  *((void *)v50 + 1) = 28;
  v50[16] = 2;
  v9();
  uint64_t v51 = (void *)(v62 + v4 + 23 * v3);
  BOOL v52 = (char *)v51 + *(int *)(v2 + 56);
  *uint64_t v51 = 23;
  *(void *)BOOL v52 = "CONFIRMATIONA_VERIFY_SUCCESS";
  *((void *)v52 + 1) = 28;
  v52[16] = 2;
  v9();
  uint64_t v53 = (void *)(v62 + v4 + 24 * v3);
  uint64_t v54 = (char *)v53 + *(int *)(v2 + 56);
  *uint64_t v53 = 24;
  *(void *)uint64_t v54 = "CONFIRMATIONA_VERIFY_ERROR";
  *((void *)v54 + 1) = 26;
  v54[16] = 2;
  v9();
  uint64_t v55 = (void *)(v62 + v4 + 25 * v3);
  unint64_t v56 = (char *)v55 + *(int *)(v2 + 56);
  *uint64_t v55 = 25;
  *(void *)unint64_t v56 = "LOOKUPINFO_DEREF_SUCCESS";
  *((void *)v56 + 1) = 24;
  v56[16] = 2;
  v9();
  id v57 = (void *)(v62 + v4 + 26 * v3);
  uint64_t v58 = (char *)v57 + *(int *)(v2 + 56);
  *id v57 = 26;
  *(void *)uint64_t v58 = "LOOKUPINFO_DEREF_FAIL";
  *((void *)v58 + 1) = 21;
  v58[16] = 2;
  v9();
  uint64_t v59 = (void *)(v62 + v4 + 27 * v3);
  uint64_t v60 = (char *)v59 + *(int *)(v2 + 56);
  *uint64_t v59 = 27;
  *(void *)uint64_t v60 = "SHARE_OTHER_DATA";
  *((void *)v60 + 1) = 16;
  v60[16] = 2;
  v9();
  return sub_22D2BC300();
}