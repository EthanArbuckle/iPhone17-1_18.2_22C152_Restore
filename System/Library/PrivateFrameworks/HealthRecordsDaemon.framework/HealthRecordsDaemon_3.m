uint64_t static PBEventType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D350, (uint64_t)qword_268542720, a1);
}

uint64_t sub_22D210DEC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D350, (uint64_t)qword_268542720, a1);
}

uint64_t sub_22D210E10()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542738);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542738);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_22D2C7A10;
  unint64_t v5 = v42 + v4;
  unint64_t v6 = v42 + v4 + *(int *)(v2 + 56);
  *(void *)(v42 + v4) = 0;
  *(void *)unint64_t v6 = "UNDEFINED_STEP";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v42 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "ABORTED";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  v11 = (void *)(v42 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v2 + 56);
  void *v11 = 2;
  *(void *)v12 = "DISPLAY_COMPOSITE_CODE";
  *((void *)v12 + 1) = 22;
  v12[16] = 2;
  v9();
  v13 = (void *)(v42 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v2 + 56);
  void *v13 = 3;
  *(void *)v14 = "PENDING_SUBMIT_GEO";
  *((void *)v14 + 1) = 18;
  v14[16] = 2;
  v9();
  v15 = (void *)(v42 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v2 + 56);
  void *v15 = 4;
  *(void *)v16 = "PENDING_ACKNOWLEDGE_GEO";
  *((void *)v16 + 1) = 23;
  v16[16] = 2;
  v9();
  v17 = (void *)(v42 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)v18 = "GENERATE_PA";
  *((void *)v18 + 1) = 11;
  v18[16] = 2;
  v9();
  v19 = (void *)(v42 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)v20 = "GENERATE_PB";
  *((void *)v20 + 1) = 11;
  v20[16] = 2;
  v9();
  v21 = (void *)(v42 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)v22 = "PENDING_VERIFY_PB";
  *((void *)v22 + 1) = 17;
  v22[16] = 2;
  v9();
  uint64_t v23 = v42 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "PENDING_VERIFY_PA";
  *(void *)(v23 + 8) = 17;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  v24 = (void *)(v42 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)v25 = "GENERATE_CONFIRMATIONA";
  *((void *)v25 + 1) = 22;
  v25[16] = 2;
  v9();
  v26 = (void *)(v42 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 10;
  *(void *)v27 = "GENERATE_CONFIRMATIONB";
  *((void *)v27 + 1) = 22;
  v27[16] = 2;
  v9();
  v28 = (void *)(v42 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 11;
  *(void *)v29 = "PENDING_VERIFY_CONFIRMATIONB";
  *((void *)v29 + 1) = 28;
  v29[16] = 2;
  v9();
  v30 = (void *)(v42 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 12;
  *(void *)v31 = "PENDING_VERIFY_CONFIRMATIONA";
  *((void *)v31 + 1) = 28;
  v31[16] = 2;
  v9();
  v32 = (void *)(v42 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 13;
  *(void *)v33 = "PENDING_LOOKUPINFO_DELIVERY";
  *((void *)v33 + 1) = 27;
  v33[16] = 2;
  v9();
  v34 = (void *)(v42 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 14;
  *(void *)v35 = "VERIFY_LOOKUPINFO_DELIVERED";
  *((void *)v35 + 1) = 27;
  v35[16] = 2;
  v9();
  v36 = (void *)(v42 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v2 + 56);
  void *v36 = 15;
  *(void *)v37 = "PENDING_DATA_TRANSFER_SUCCESS";
  *((void *)v37 + 1) = 29;
  v37[16] = 2;
  v9();
  uint64_t v38 = v42 + v4 + 16 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 16 * v3) = 16;
  *(void *)uint64_t v38 = "DATA_TRANSFER_SUCCESS";
  *(void *)(v38 + 8) = 21;
  *(unsigned char *)(v38 + 16) = 2;
  v9();
  v39 = (void *)(v42 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v2 + 56);
  void *v39 = 17;
  *(void *)v40 = "OTHER_DATA";
  *((void *)v40 + 1) = 10;
  v40[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBStep._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D358, (uint64_t)qword_268542738, a1);
}

uint64_t sub_22D2113E8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D358, (uint64_t)qword_268542738, a1);
}

unint64_t static PBPollParameters.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D211428()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542750);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542750);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 1;
  *(void *)unint64_t v7 = "actor";
  *(void *)(v7 + 8) = 5;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)v11 = "mailbox_id";
  *((void *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBPollParameters._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D360, (uint64_t)qword_268542750, a1);
}

uint64_t PBPollParameters.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_22D2BC170();
      }
      else if (result == 1)
      {
        sub_22D21E37C();
        sub_22D2BC0D0();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBPollParameters.traverse<A>(visitor:)()
{
  if (!*v0 || (sub_22D21E37C(), uint64_t result = sub_22D2BC240(), !v1))
  {
    unint64_t v3 = v0[3];
    uint64_t v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v4 = v0[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v4 || (uint64_t result = sub_22D2BC2B0(), !v1))
    {
      type metadata accessor for PBPollParameters(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t PBPollParameters.hashValue.getter()
{
  return sub_22D21C8F8((void (*)(void))type metadata accessor for PBPollParameters, &qword_268542910, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
}

uint64_t sub_22D211858@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  return sub_22D2BBFE0();
}

unint64_t sub_22D21188C()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_22D2118A8()
{
  return PBPollParameters.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D2118C0()
{
  return PBPollParameters.traverse<A>(visitor:)();
}

uint64_t sub_22D2118D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D21E3D0(&qword_268542BC8, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D211954@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D360, (uint64_t)qword_268542750, a1);
}

uint64_t sub_22D211978(uint64_t a1)
{
  uint64_t v2 = sub_22D21E3D0(&qword_2685429F8, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D2119E4()
{
  sub_22D21E3D0(&qword_2685429F8, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
  return sub_22D2BC200();
}

unint64_t static PBPollStateRequest.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_22D211A80(uint64_t a1)
{
  return sub_22D2160C8(a1, qword_268542768, (uint64_t)"poll_parameters", 15);
}

uint64_t static PBPollStateRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D368, (uint64_t)qword_268542768, a1);
}

uint64_t sub_22D211ABC()
{
  type metadata accessor for PBPollStateRequest._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  uint64_t v2 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  uint64_t v4 = type metadata accessor for PBPollParameters(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_268542780 = v0;
  return result;
}

uint64_t sub_22D211B90(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_268542858, type metadata accessor for PBPollParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v17 - v5;
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, v3);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  uint64_t v11 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  uint64_t v13 = type metadata accessor for PBPollParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v14, (uint64_t)v9, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_beginAccess();
  sub_22D21E2FC((uint64_t)v9, v10, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_22D21E18C(v15, (uint64_t)v6, &qword_268542858, type metadata accessor for PBPollParameters);
  swift_release();
  swift_beginAccess();
  sub_22D21E2FC((uint64_t)v6, v12, &qword_268542858, type metadata accessor for PBPollParameters);
  swift_endAccess();
  return v1;
}

void sub_22D211E28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D211E8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for PBOtherData(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542AD0);
}

uint64_t type metadata accessor for PBUpdateParameters(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542AE0);
}

uint64_t type metadata accessor for PBUpdateParameters._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542B50);
}

uint64_t sub_22D211F4C()
{
  return sub_22D216664(&OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters, &qword_268542858, type metadata accessor for PBPollParameters);
}

uint64_t PBPollStateRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D21A7C4(a1, a2, a3, type metadata accessor for PBPollStateRequest, (void (*)(void))type metadata accessor for PBPollStateRequest._StorageClass, sub_22D211B90, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D211FE4);
}

uint64_t sub_22D211FE4()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBBlobAuth(0);
        sub_22D21E3D0(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBPollParameters(0);
    sub_22D21E3D0(&qword_2685429F8, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
LABEL_5:
    sub_22D2BC1A0();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBPollStateRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D215088(a1, a2, a3, (void (*)(void))type metadata accessor for PBPollStateRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D2121C0);
}

uint64_t sub_22D2121C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v29 = a4;
  uint64_t v28 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_268542858, type metadata accessor for PBPollParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v23 - v7;
  uint64_t v25 = type metadata accessor for PBPollParameters(0);
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v23 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, v5);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for PBBlobAuth(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v18, (uint64_t)v13, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_22D21E20C((uint64_t)v13, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_22D221988((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBBlobAuth);
    sub_22D21E3D0(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
    uint64_t v19 = v26;
    sub_22D2BC2E0();
    uint64_t result = sub_22D211E8C((uint64_t)v17, type metadata accessor for PBBlobAuth);
    if (v19) {
      return result;
    }
  }
  uint64_t v21 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  sub_22D21E18C(v21, (uint64_t)v8, &qword_268542858, type metadata accessor for PBPollParameters);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v25) == 1) {
    return sub_22D21E20C((uint64_t)v8, &qword_268542858, type metadata accessor for PBPollParameters);
  }
  uint64_t v22 = v23;
  sub_22D221988((uint64_t)v8, v23, type metadata accessor for PBPollParameters);
  sub_22D21E3D0(&qword_2685429F8, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
  sub_22D2BC2E0();
  return sub_22D211E8C(v22, type metadata accessor for PBPollParameters);
}

uint64_t static PBPollStateRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D21D7AC(a1, a2, type metadata accessor for PBPollStateRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D212698) & 1;
}

BOOL sub_22D212698(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a2;
  uint64_t v3 = type metadata accessor for PBPollParameters(0);
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x270FA5388](v3);
  v48 = (uint64_t *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D2219F0(0, &qword_268542C08, &qword_268542858, type metadata accessor for PBPollParameters);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (uint64_t)&v47 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_268542858, type metadata accessor for PBPollParameters, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  v49 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v52 = (uint64_t)&v47 - v11;
  uint64_t v12 = type metadata accessor for PBBlobAuth(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v50 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D2219F0(0, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v47 - v17;
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, v7);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  v56 = (uint64_t *)((char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = a1;
  uint64_t v25 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v25, (uint64_t)v23, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v26 = v57;
  uint64_t v27 = v57
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_22D21E18C((uint64_t)v23, (uint64_t)v18, &qword_26853F988, type metadata accessor for PBBlobAuth);
  sub_22D21E18C(v27, v28, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v29((uint64_t)v18, 1, v12) != 1)
  {
    uint64_t v31 = v24;
    uint64_t v32 = v26;
    v33 = v56;
    sub_22D21E18C((uint64_t)v18, (uint64_t)v56, &qword_26853F988, type metadata accessor for PBBlobAuth);
    if (v29(v28, 1, v12) != 1)
    {
      v34 = v50;
      sub_22D221988(v28, (uint64_t)v50, type metadata accessor for PBBlobAuth);
      swift_retain();
      uint64_t v30 = v32;
      swift_retain();
      char v35 = static PBBlobAuth.== infix(_:_:)(v33, v34);
      sub_22D211E8C((uint64_t)v34, type metadata accessor for PBBlobAuth);
      sub_22D21E20C((uint64_t)v23, &qword_26853F988, type metadata accessor for PBBlobAuth);
      sub_22D211E8C((uint64_t)v33, type metadata accessor for PBBlobAuth);
      sub_22D21E20C((uint64_t)v18, &qword_26853F988, type metadata accessor for PBBlobAuth);
      if (v35) {
        goto LABEL_9;
      }
LABEL_7:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_22D21E20C((uint64_t)v23, &qword_26853F988, type metadata accessor for PBBlobAuth);
    sub_22D211E8C((uint64_t)v33, type metadata accessor for PBBlobAuth);
LABEL_6:
    sub_22D22192C((uint64_t)v18, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
    goto LABEL_7;
  }
  swift_retain();
  swift_retain();
  sub_22D21E20C((uint64_t)v23, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v30 = v26;
  uint64_t v31 = v24;
  if (v29(v28, 1, v12) != 1) {
    goto LABEL_6;
  }
  sub_22D21E20C((uint64_t)v18, &qword_26853F988, type metadata accessor for PBBlobAuth);
LABEL_9:
  uint64_t v36 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  uint64_t v37 = v52;
  sub_22D21E18C(v36, v52, &qword_268542858, type metadata accessor for PBPollParameters);
  uint64_t v38 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPollStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pollParameters;
  swift_beginAccess();
  uint64_t v39 = v55;
  uint64_t v40 = v55 + *(int *)(v51 + 48);
  sub_22D21E18C(v37, v55, &qword_268542858, type metadata accessor for PBPollParameters);
  sub_22D21E18C(v38, v40, &qword_268542858, type metadata accessor for PBPollParameters);
  uint64_t v41 = v54;
  uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v42(v39, 1, v54) == 1)
  {
    swift_release();
    swift_release();
    sub_22D21E20C(v37, &qword_268542858, type metadata accessor for PBPollParameters);
    if (v42(v40, 1, v41) == 1)
    {
      sub_22D21E20C(v39, &qword_268542858, type metadata accessor for PBPollParameters);
      return 1;
    }
    goto LABEL_14;
  }
  v43 = v49;
  sub_22D21E18C(v39, (uint64_t)v49, &qword_268542858, type metadata accessor for PBPollParameters);
  if (v42(v40, 1, v41) == 1)
  {
    swift_release();
    swift_release();
    sub_22D21E20C(v37, &qword_268542858, type metadata accessor for PBPollParameters);
    sub_22D211E8C((uint64_t)v43, type metadata accessor for PBPollParameters);
LABEL_14:
    sub_22D22192C(v39, &qword_268542C08, &qword_268542858, type metadata accessor for PBPollParameters);
    return 0;
  }
  v45 = v48;
  sub_22D221988(v40, (uint64_t)v48, type metadata accessor for PBPollParameters);
  char v46 = _s19HealthRecordsDaemon16PBPollParametersV2eeoiySbAC_ACtFZ_0(v43, v45);
  swift_release();
  swift_release();
  sub_22D211E8C((uint64_t)v45, type metadata accessor for PBPollParameters);
  sub_22D21E20C(v37, &qword_268542858, type metadata accessor for PBPollParameters);
  sub_22D211E8C((uint64_t)v43, type metadata accessor for PBPollParameters);
  sub_22D21E20C(v39, &qword_268542858, type metadata accessor for PBPollParameters);
  return (v46 & 1) != 0;
}

uint64_t PBPollStateRequest.hashValue.getter()
{
  return sub_22D21C8F8((void (*)(void))type metadata accessor for PBPollStateRequest, &qword_268542918, (void (*)(uint64_t))type metadata accessor for PBPollStateRequest);
}

uint64_t sub_22D212FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D370, &qword_268542780, a2);
}

unint64_t sub_22D212FD0()
{
  return 0xD000000000000030;
}

uint64_t sub_22D212FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPollStateRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D213004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPollStateRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D21301C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D21E3D0(&qword_268542BC0, (void (*)(uint64_t))type metadata accessor for PBPollStateRequest);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D213098@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D368, (uint64_t)qword_268542768, a1);
}

uint64_t sub_22D2130BC(uint64_t a1)
{
  uint64_t v2 = sub_22D21E3D0(&qword_268542A10, (void (*)(uint64_t))type metadata accessor for PBPollStateRequest);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D213128()
{
  sub_22D21E3D0(&qword_268542A10, (void (*)(uint64_t))type metadata accessor for PBPollStateRequest);
  return sub_22D2BC200();
}

uint64_t sub_22D2131A4(uint64_t a1, uint64_t a2)
{
  return sub_22D21D7AC(a1, a2, type metadata accessor for PBPollStateRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D212698) & 1;
}

unint64_t static PBOtherData.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_22D213204()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542788);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542788);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "version";
  *(void *)(v7 + 8) = 7;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "value";
  *((void *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBOtherData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D378, (uint64_t)qword_268542788, a1);
}

uint64_t PBOtherData.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_22D2BC170();
      }
      else if (result == 1)
      {
        sub_22D2BC130();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBOtherData.traverse<A>(visitor:)()
{
  if (!*(_DWORD *)v0 || (uint64_t result = sub_22D2BC280(), !v1))
  {
    unint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v4 = *(void *)(v0 + 8) & 0xFFFFFFFFFFFFLL;
    }
    if (!v4 || (uint64_t result = sub_22D2BC2B0(), !v1))
    {
      type metadata accessor for PBOtherData(0);
      return sub_22D2BBFD0();
    }
  }
  return result;
}

uint64_t PBOtherData.hashValue.getter()
{
  return sub_22D21C8F8((void (*)(void))type metadata accessor for PBOtherData, &qword_268542920, (void (*)(uint64_t))type metadata accessor for PBOtherData);
}

uint64_t sub_22D2135C0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  return sub_22D2BBFE0();
}

unint64_t sub_22D2135EC()
{
  return 0xD000000000000029;
}

uint64_t sub_22D213608()
{
  return PBOtherData.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D213620()
{
  return PBOtherData.traverse<A>(visitor:)();
}

uint64_t sub_22D213638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D21E3D0(&qword_268542BB8, (void (*)(uint64_t))type metadata accessor for PBOtherData);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D2136B4@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D378, (uint64_t)qword_268542788, a1);
}

uint64_t sub_22D2136D8(uint64_t a1)
{
  uint64_t v2 = sub_22D21E3D0(&qword_268542A28, (void (*)(uint64_t))type metadata accessor for PBOtherData);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D213744()
{
  sub_22D21E3D0(&qword_268542A28, (void (*)(uint64_t))type metadata accessor for PBOtherData);
  return sub_22D2BC200();
}

unint64_t static PBUpdateParameters.protoMessageName.getter()
{
  return 0xD000000000000030;
}

uint64_t sub_22D2137E0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685427A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685427A0);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_22D2D0B80;
  unint64_t v5 = v31 + v4;
  unint64_t v6 = v31 + v4 + *(int *)(v2 + 56);
  *(void *)(v31 + v4) = 1;
  *(void *)unint64_t v6 = "actor";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v31 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "mailbox_id";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v31 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  void *v11 = 3;
  *(void *)uint64_t v12 = "access_code";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v31 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  void *v13 = 4;
  *(void *)uint64_t v14 = "confirmation_b";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v31 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  void *v15 = 5;
  *(void *)uint64_t v16 = "pb";
  *((void *)v16 + 1) = 2;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v31 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)uint64_t v18 = "geo_encrypted";
  *((void *)v18 + 1) = 13;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v31 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "confirmation_a";
  *((void *)v20 + 1) = 14;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v31 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "lookupinfo_encrypted";
  *((void *)v22 + 1) = 20;
  v22[16] = 2;
  v9();
  uint64_t v23 = v31 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "pa";
  *(void *)(v23 + 8) = 2;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v31 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)uint64_t v25 = "root_dlid";
  *((void *)v25 + 1) = 9;
  v25[16] = 2;
  v9();
  uint64_t v26 = (void *)(v31 + v4 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 12;
  *(void *)uint64_t v27 = "other_data";
  *((void *)v27 + 1) = 10;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v31 + v4 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 11;
  *(void *)uint64_t v29 = "event_type";
  *((void *)v29 + 1) = 10;
  v29[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBUpdateParameters._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D380, (uint64_t)qword_2685427A0, a1);
}

uint64_t sub_22D213C5C()
{
  type metadata accessor for PBUpdateParameters._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  uint64_t v2 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v4 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  qword_2685427B8 = v0;
  return result;
}

uint64_t sub_22D213D14()
{
  swift_bridgeObjectRelease();
  sub_22D21E20C(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  return swift_deallocClassInstance();
}

uint64_t PBUpdateParameters.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D217E1C(a1, a2, a3, type metadata accessor for PBUpdateParameters, (void (*)(void))type metadata accessor for PBUpdateParameters._StorageClass, sub_22D21DB84, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D213E04);
}

uint64_t sub_22D213E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v124 = a4;
  uint64_t v119 = type metadata accessor for PBOtherData(0);
  uint64_t v122 = *(void *)(v119 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v119);
  v112 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v108 = (uint64_t)&v99 - v8;
  uint64_t v130 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  v120 = *(void (***)(void *, void, uint64_t, uint64_t))(v130 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v130);
  uint64_t v109 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v110 = (uint64_t)&v99 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v111 = (uint64_t)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v127 = (uint64_t)&v99 - v16;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, v12);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v116 = (uint64_t)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v115 = (uint64_t)&v99 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v114 = (uint64_t)&v99 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v128 = (char *)&v99 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v99 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v99 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v113 = (uint64_t)&v99 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v99 - v35;
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  uint64_t v39 = (char *)&v99 - v38;
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  uint64_t v42 = (char *)&v99 - v41;
  MEMORY[0x270FA5388](v40);
  v44 = (char *)&v99 - v43;
  *(void *)&long long v123 = a1;
  uint64_t v45 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  v117 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
  swift_beginAccess();
  char v46 = v126;
  uint64_t v118 = a3;
  uint64_t result = sub_22D2BC080();
  v49 = v46;
  if (!v46)
  {
    v104 = v44;
    v121 = v42;
    v125 = v39;
    v105 = v36;
    v106 = v31;
    v107 = v28;
    v103 = (char *)v117 + v123;
    uint64_t v102 = v123 + 32;
    uint64_t v101 = v123 + 16;
    v117 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56);
    v126 = (uint64_t (**)(void, void, void))(v120 + 6);
    v100 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
    v120 += 7;
    long long v123 = xmmword_22D2BFCE0;
    uint64_t v50 = v127;
    uint64_t v51 = (uint64_t)v128;
    uint64_t v52 = v45;
    uint64_t v122 = v45;
    while ((v48 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          sub_22D21E37C();
          uint64_t v54 = v49;
          sub_22D2BC0D0();
          goto LABEL_11;
        case 2:
          swift_beginAccess();
          uint64_t v54 = v49;
          sub_22D2BC170();
LABEL_11:
          v49 = v54;
          swift_endAccess();
          goto LABEL_6;
        case 3:
          uint64_t v55 = v52;
          uint64_t v56 = (uint64_t)v104;
          sub_22D21E18C(v55, (uint64_t)v104, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          int v57 = (*v126)(v56, 1, v130);
          sub_22D21E20C(v56, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v57 != 1) {
            sub_22D2BC090();
          }
          uint64_t v51 = (uint64_t)v128;
          uint64_t v58 = (uint64_t)v125;
          uint64_t v52 = v122;
          long long v129 = 0uLL;
          sub_22D2BC160();
          uint64_t v59 = *((void *)&v129 + 1);
          if (!*((void *)&v129 + 1)) {
            goto LABEL_5;
          }
          v60 = v121;
          void *v121 = v129;
          v60[1] = v59;
          uint64_t v61 = v130;
          goto LABEL_4;
        case 4:
          uint64_t v62 = (uint64_t)v105;
          sub_22D21E18C(v52, (uint64_t)v105, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          int v63 = (*v126)(v62, 1, v130);
          sub_22D21E20C(v62, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v63 != 1) {
            sub_22D2BC090();
          }
          uint64_t v51 = (uint64_t)v128;
          uint64_t v58 = (uint64_t)v125;
          long long v129 = v123;
          sub_22D2BC100();
          uint64_t v64 = *((void *)&v129 + 1);
          if (*((void *)&v129 + 1) >> 60 == 15) {
            goto LABEL_5;
          }
          v60 = v121;
          void *v121 = v129;
          v60[1] = v64;
          uint64_t v61 = v130;
          goto LABEL_4;
        case 5:
          uint64_t v65 = v113;
          sub_22D21E18C(v52, v113, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          int v66 = (*v126)(v65, 1, v130);
          sub_22D21E20C(v65, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v66 != 1) {
            sub_22D2BC090();
          }
          uint64_t v51 = (uint64_t)v128;
          uint64_t v58 = (uint64_t)v125;
          long long v129 = v123;
          sub_22D2BC100();
          uint64_t v67 = *((void *)&v129 + 1);
          if (*((void *)&v129 + 1) >> 60 == 15) {
            goto LABEL_5;
          }
          v60 = v121;
          void *v121 = v129;
          v60[1] = v67;
          uint64_t v61 = v130;
          goto LABEL_4;
        case 6:
          uint64_t v68 = (uint64_t)v106;
          sub_22D21E18C(v52, (uint64_t)v106, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          int v69 = (*v126)(v68, 1, v130);
          sub_22D21E20C(v68, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v69 != 1) {
            sub_22D2BC090();
          }
          uint64_t v51 = (uint64_t)v128;
          uint64_t v58 = (uint64_t)v125;
          long long v129 = v123;
          sub_22D2BC100();
          uint64_t v70 = *((void *)&v129 + 1);
          if (*((void *)&v129 + 1) >> 60 == 15) {
            goto LABEL_5;
          }
          v60 = v121;
          void *v121 = v129;
          v60[1] = v70;
          uint64_t v61 = v130;
          goto LABEL_4;
        case 7:
          uint64_t v71 = (uint64_t)v107;
          sub_22D21E18C(v52, (uint64_t)v107, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          int v72 = (*v126)(v71, 1, v130);
          sub_22D21E20C(v71, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v72 != 1) {
            sub_22D2BC090();
          }
          uint64_t v51 = (uint64_t)v128;
          uint64_t v58 = (uint64_t)v125;
          long long v129 = v123;
          sub_22D2BC100();
          uint64_t v73 = *((void *)&v129 + 1);
          if (*((void *)&v129 + 1) >> 60 == 15) {
            goto LABEL_5;
          }
          v60 = v121;
          void *v121 = v129;
          v60[1] = v73;
          uint64_t v61 = v130;
          goto LABEL_4;
        case 8:
          sub_22D21E18C(v52, v51, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          int v74 = (*v126)(v51, 1, v130);
          uint64_t v75 = v51;
          int v76 = v74;
          sub_22D21E20C(v75, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v76 != 1) {
            sub_22D2BC090();
          }
          uint64_t v51 = (uint64_t)v128;
          uint64_t v58 = (uint64_t)v125;
          long long v129 = v123;
          sub_22D2BC100();
          uint64_t v77 = *((void *)&v129 + 1);
          if (*((void *)&v129 + 1) >> 60 == 15) {
            goto LABEL_5;
          }
          v60 = v121;
          void *v121 = v129;
          v60[1] = v77;
          uint64_t v61 = v130;
          goto LABEL_4;
        case 9:
          uint64_t v78 = v114;
          sub_22D21E18C(v52, v114, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          int v79 = (*v126)(v78, 1, v130);
          sub_22D21E20C(v78, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v79 != 1) {
            sub_22D2BC090();
          }
          uint64_t v51 = (uint64_t)v128;
          uint64_t v58 = (uint64_t)v125;
          long long v129 = v123;
          sub_22D2BC100();
          uint64_t v80 = *((void *)&v129 + 1);
          if (*((void *)&v129 + 1) >> 60 == 15) {
            goto LABEL_5;
          }
          v60 = v121;
          void *v121 = v129;
          v60[1] = v80;
          uint64_t v61 = v130;
          goto LABEL_4;
        case 10:
          uint64_t v81 = v115;
          sub_22D21E18C(v52, v115, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          int v82 = (*v126)(v81, 1, v130);
          sub_22D21E20C(v81, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if (v82 != 1) {
            sub_22D2BC090();
          }
          uint64_t v51 = (uint64_t)v128;
          uint64_t v58 = (uint64_t)v125;
          long long v129 = 0uLL;
          sub_22D2BC160();
          uint64_t v83 = *((void *)&v129 + 1);
          if (!*((void *)&v129 + 1)) {
            goto LABEL_5;
          }
          v60 = v121;
          void *v121 = v129;
          v60[1] = v83;
          uint64_t v61 = v130;
LABEL_4:
          swift_storeEnumTagMultiPayload();
          (*v120)(v60, 0, 1, v61);
          uint64_t v53 = (uint64_t)v60;
          uint64_t v52 = v122;
          sub_22D21E27C(v53, v58, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          swift_beginAccess();
          sub_22D21E2FC(v58, v52, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          swift_endAccess();
LABEL_5:
          uint64_t v50 = v127;
          goto LABEL_6;
        case 11:
          swift_beginAccess();
          sub_22D2218D8();
          sub_22D2BC0D0();
          swift_endAccess();
          goto LABEL_6;
        case 12:
          v84 = *v117;
          (*v117)(v50, 1, 1, v119);
          uint64_t v85 = v116;
          sub_22D21E18C(v52, v116, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          if ((*v126)(v85, 1, v130) == 1)
          {
            sub_22D21E20C(v85, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
          }
          else
          {
            uint64_t v86 = v85;
            uint64_t v87 = v110;
            sub_22D221988(v86, v110, type metadata accessor for PBUpdateParameters.OneOf_Data);
            sub_22D2BC090();
            uint64_t v88 = v87;
            uint64_t v89 = v109;
            sub_22D221988(v88, v109, type metadata accessor for PBUpdateParameters.OneOf_Data);
            if (swift_getEnumCaseMultiPayload() == 8)
            {
              sub_22D21E20C(v50, &qword_2685428F8, type metadata accessor for PBOtherData);
              uint64_t v90 = v108;
              sub_22D221988(v89, v108, type metadata accessor for PBOtherData);
              uint64_t v52 = v122;
              uint64_t v50 = v127;
              sub_22D221988(v90, v127, type metadata accessor for PBOtherData);
              uint64_t v91 = v119;
              v84(v50, 0, 1, v119);
              v92 = v112;
              goto LABEL_51;
            }
            sub_22D211E8C(v89, type metadata accessor for PBUpdateParameters.OneOf_Data);
          }
          v92 = v112;
          uint64_t v91 = v119;
LABEL_51:
          sub_22D21E3D0(&qword_268542A28, (void (*)(uint64_t))type metadata accessor for PBOtherData);
          sub_22D2BC1A0();
          uint64_t v93 = (uint64_t)v92;
          uint64_t v94 = v111;
          sub_22D21E27C(v50, v111, &qword_2685428F8, type metadata accessor for PBOtherData);
          if ((*v100)(v94, 1, v91) == 1)
          {
            sub_22D21E20C(v94, &qword_2685428F8, type metadata accessor for PBOtherData);
          }
          else
          {
            sub_22D221988(v94, v93, type metadata accessor for PBOtherData);
            v95 = v121;
            sub_22D221988(v93, (uint64_t)v121, type metadata accessor for PBOtherData);
            uint64_t v96 = v130;
            swift_storeEnumTagMultiPayload();
            (*v120)(v95, 0, 1, v96);
            uint64_t v97 = (uint64_t)v95;
            uint64_t v98 = (uint64_t)v125;
            sub_22D21E27C(v97, (uint64_t)v125, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
            swift_beginAccess();
            uint64_t v50 = v127;
            sub_22D21E2FC(v98, v52, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
            swift_endAccess();
          }
          uint64_t v51 = (uint64_t)v128;
LABEL_6:
          uint64_t result = sub_22D2BC080();
          break;
        default:
          goto LABEL_6;
      }
    }
  }
  return result;
}

uint64_t PBUpdateParameters.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D215088(a1, a2, a3, (void (*)(void))type metadata accessor for PBUpdateParameters, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D215128);
}

uint64_t sub_22D215088(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  a4(0);
  uint64_t v10 = swift_retain();
  a5(v10, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v5) {
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t sub_22D215128(uint64_t a1)
{
  uint64_t v45 = type metadata accessor for PBOtherData(0);
  MEMORY[0x270FA5388](v45);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (uint64_t *)((char *)&v35 - v10);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v35 - v12;
  swift_beginAccess();
  if (!*(void *)(a1 + 16)
    || (v14 = *(unsigned char *)(a1 + 24), v43 = *(void *)(a1 + 16), v44 = v14, sub_22D21E37C(), uint64_t result = sub_22D2BC240(), !v1))
  {
    uint64_t v40 = v4;
    swift_beginAccess();
    unint64_t v16 = *(void *)(a1 + 40);
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
    }
    if (v17)
    {
      swift_bridgeObjectRetain();
      sub_22D2BC2B0();
      if (v1) {
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    uint64_t v39 = v18;
    sub_22D21E18C(v18, (uint64_t)v13, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    uint64_t v19 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    uint64_t v37 = v20 + 48;
    uint64_t v38 = v21;
    if (v21(v13, 1, v19) != 1)
    {
      sub_22D21E18C((uint64_t)v13, (uint64_t)v11, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v27 = *v11;
          unint64_t v28 = v11[1];
          uint64_t v36 = v27;
          goto LABEL_23;
        case 2u:
          uint64_t v29 = *v11;
          unint64_t v28 = v11[1];
          uint64_t v36 = v29;
          goto LABEL_23;
        case 3u:
          uint64_t v30 = *v11;
          unint64_t v28 = v11[1];
          uint64_t v36 = v30;
LABEL_23:
          sub_22D2BC260();
          sub_22CFF5630(v36, v28);
          if (!v1) {
            goto LABEL_10;
          }
          goto LABEL_33;
        case 4u:
          uint64_t v31 = *v11;
          unint64_t v32 = v11[1];
          uint64_t v36 = v31;
          goto LABEL_28;
        case 5u:
          uint64_t v33 = *v11;
          unint64_t v32 = v11[1];
          uint64_t v36 = v33;
          goto LABEL_28;
        case 6u:
          uint64_t v34 = *v11;
          unint64_t v32 = v11[1];
          uint64_t v36 = v34;
LABEL_28:
          sub_22D2BC260();
          if (v1)
          {
            sub_22CFF5630(v36, v32);
            goto LABEL_33;
          }
          sub_22CFF5630(v36, v32);
          goto LABEL_10;
        case 7u:
          sub_22D2BC2B0();
          if (!v1)
          {
            swift_bridgeObjectRelease();
            goto LABEL_10;
          }
          swift_bridgeObjectRelease();
LABEL_33:
          uint64_t v25 = (uint64_t)v13;
          break;
        case 8u:
          sub_22D211E8C((uint64_t)v11, type metadata accessor for PBUpdateParameters.OneOf_Data);
          goto LABEL_10;
        default:
          sub_22D2BC2B0();
          swift_bridgeObjectRelease();
          if (!v1) {
            goto LABEL_10;
          }
          goto LABEL_33;
      }
      return sub_22D21E20C(v25, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    }
LABEL_10:
    sub_22D21E20C((uint64_t)v13, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    uint64_t v22 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
    swift_beginAccess();
    uint64_t v23 = *(void *)v22;
    uint64_t v24 = *(unsigned __int8 *)(v22 + 8);
    if (sub_22D0BC5B8(v23, v24, 0) || (v41 = v23, char v42 = v24, sub_22D2218D8(), result = sub_22D2BC240(), !v1))
    {
      sub_22D21E18C(v39, (uint64_t)v8, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
      if (v38(v8, 1, v19) == 1)
      {
        uint64_t v25 = (uint64_t)v8;
        return sub_22D21E20C(v25, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
      }
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v26 = (uint64_t)v40;
        sub_22D221988((uint64_t)v8, (uint64_t)v40, type metadata accessor for PBOtherData);
        sub_22D21E3D0(&qword_268542A28, (void (*)(uint64_t))type metadata accessor for PBOtherData);
        sub_22D2BC2E0();
        return sub_22D211E8C(v26, type metadata accessor for PBOtherData);
      }
      else
      {
        return sub_22D211E8C((uint64_t)v8, type metadata accessor for PBUpdateParameters.OneOf_Data);
      }
    }
  }
  return result;
}

uint64_t static PBUpdateParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D21D7AC(a1, a2, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))sub_22D2157F4) & 1;
}

BOOL sub_22D2157F4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D2219F0(0, &qword_268542C00, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v37 - v10;
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - v16;
  swift_beginAccess();
  uint64_t v18 = a1[2];
  swift_beginAccess();
  uint64_t v19 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a2 + 24) == 1)
  {
    switch(v19)
    {
      case 1:
        if (v18 == 1) {
          goto LABEL_12;
        }
        return 0;
      case 2:
        if (v18 != 2) {
          return 0;
        }
        goto LABEL_12;
      case 3:
        if (v18 != 3) {
          return 0;
        }
        goto LABEL_12;
      default:
        if (!v18) {
          goto LABEL_12;
        }
        return 0;
    }
  }
  if (v18 != v19) {
    return 0;
  }
LABEL_12:
  uint64_t v39 = v5;
  uint64_t v38 = v7;
  swift_beginAccess();
  uint64_t v20 = a1[4];
  uint64_t v21 = a1[5];
  swift_beginAccess();
  if (v20 == *(void *)(a2 + 32) && v21 == *(void *)(a2 + 40) || (v22 = sub_22D2BD660(), BOOL v23 = 0, (v22 & 1) != 0))
  {
    uint64_t v37 = v15;
    uint64_t v24 = (uint64_t)a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    sub_22D21E18C(v24, (uint64_t)v17, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    uint64_t v25 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
    swift_beginAccess();
    uint64_t v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_22D21E18C((uint64_t)v17, (uint64_t)v11, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    sub_22D21E18C(v25, v26, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
    if (v27((uint64_t)v11, 1, v4) == 1)
    {
      swift_retain();
      swift_retain();
      sub_22D21E20C((uint64_t)v17, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
      if (v27(v26, 1, v4) == 1)
      {
        sub_22D21E20C((uint64_t)v11, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
LABEL_25:
        unint64_t v32 = (char *)a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
        swift_beginAccess();
        uint64_t v33 = *(void *)v32;
        uint64_t v34 = v32[8];
        swift_release();
        uint64_t v35 = (uint64_t *)(a2
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType);
        swift_beginAccess();
        uint64_t v36 = *v35;
        swift_release();
        return sub_22D0BC5B8(v33, v34, v36);
      }
    }
    else
    {
      uint64_t v28 = (uint64_t)v37;
      sub_22D21E18C((uint64_t)v11, (uint64_t)v37, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
      if (v27(v26, 1, v4) != 1)
      {
        uint64_t v30 = v38;
        sub_22D221988(v26, (uint64_t)v38, type metadata accessor for PBUpdateParameters.OneOf_Data);
        swift_retain();
        swift_retain();
        char v31 = _s19HealthRecordsDaemon18PBUpdateParametersV10OneOf_DataO2eeoiySbAE_AEtFZ_0(v28, v30);
        sub_22D211E8C((uint64_t)v30, type metadata accessor for PBUpdateParameters.OneOf_Data);
        sub_22D21E20C((uint64_t)v17, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
        sub_22D211E8C(v28, type metadata accessor for PBUpdateParameters.OneOf_Data);
        sub_22D21E20C((uint64_t)v11, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
        if (v31) {
          goto LABEL_25;
        }
LABEL_21:
        swift_release();
        swift_release();
        return 0;
      }
      swift_retain();
      swift_retain();
      sub_22D21E20C((uint64_t)v17, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
      sub_22D211E8C(v28, type metadata accessor for PBUpdateParameters.OneOf_Data);
    }
    sub_22D22192C((uint64_t)v11, &qword_268542C00, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
    goto LABEL_21;
  }
  return v23;
}

uint64_t PBUpdateParameters.hashValue.getter()
{
  return sub_22D21C8F8((void (*)(void))type metadata accessor for PBUpdateParameters, &qword_268542928, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
}

uint64_t sub_22D215E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D388, &qword_2685427B8, a2);
}

unint64_t sub_22D215E7C()
{
  return 0xD000000000000030;
}

uint64_t sub_22D215E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBUpdateParameters.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D215EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBUpdateParameters.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D215EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D21E3D0(&qword_268542BB0, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D215F44@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D380, (uint64_t)qword_2685427A0, a1);
}

uint64_t sub_22D215F68(uint64_t a1)
{
  uint64_t v2 = sub_22D21E3D0(&qword_268542A40, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D215FD4()
{
  sub_22D21E3D0(&qword_268542A40, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
  return sub_22D2BC200();
}

uint64_t sub_22D216050(uint64_t a1, uint64_t a2)
{
  return sub_22D21D7AC(a1, a2, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))sub_22D2157F4) & 1;
}

unint64_t static PBUpdateStateRequest.protoMessageName.getter()
{
  return 0xD000000000000032;
}

uint64_t sub_22D2160B0(uint64_t a1)
{
  return sub_22D2160C8(a1, qword_2685427C0, (uint64_t)"update_parameters", 17);
}

uint64_t sub_22D2160C8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_22D2BC310();
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v7 = v6 - 8;
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 72);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_22D2C0F10;
  uint64_t v11 = (void *)(v10 + v9);
  unint64_t v12 = v10 + v9 + *(int *)(v7 + 56);
  void *v11 = 1;
  *(void *)unint64_t v12 = "blob_auth";
  *(void *)(v12 + 8) = 9;
  *(unsigned char *)(v12 + 16) = 2;
  uint64_t v13 = *MEMORY[0x263F50728];
  uint64_t v14 = sub_22D2BC2F0();
  uint64_t v15 = *(void (**)(void))(*(void *)(v14 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v15)(v12, v13, v14);
  uint64_t v16 = (char *)v11 + v8 + *(int *)(v7 + 56);
  *(void *)((char *)v11 + v8) = 2;
  *(void *)uint64_t v16 = a3;
  *((void *)v16 + 1) = a4;
  v16[16] = 2;
  v15();
  return sub_22D2BC300();
}

uint64_t static PBUpdateStateRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D390, (uint64_t)qword_2685427C0, a1);
}

uint64_t sub_22D2162C8()
{
  type metadata accessor for PBUpdateStateRequest._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  uint64_t v2 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  uint64_t v4 = type metadata accessor for PBUpdateParameters(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_2685427D8 = v0;
  return result;
}

uint64_t sub_22D21639C(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_268542888, type metadata accessor for PBUpdateParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - v5;
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, v3);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  uint64_t v11 = type metadata accessor for PBBlobAuth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  uint64_t v13 = type metadata accessor for PBUpdateParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v14, (uint64_t)v9, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_beginAccess();
  sub_22D21E2FC((uint64_t)v9, v10, &qword_26853F988, type metadata accessor for PBBlobAuth);
  swift_endAccess();
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_22D21E18C(v15, (uint64_t)v6, &qword_268542888, type metadata accessor for PBUpdateParameters);
  swift_release();
  swift_beginAccess();
  sub_22D21E2FC((uint64_t)v6, v12, &qword_268542888, type metadata accessor for PBUpdateParameters);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D216634()
{
  return sub_22D216664(&OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth, &OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters, &qword_268542888, type metadata accessor for PBUpdateParameters);
}

uint64_t sub_22D216664(void *a1, void *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D21E20C(v4 + *a1, &qword_26853F988, type metadata accessor for PBBlobAuth);
  sub_22D21E20C(v4 + *a2, a3, a4);
  return swift_deallocClassInstance();
}

uint64_t PBUpdateStateRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D21A7C4(a1, a2, a3, type metadata accessor for PBUpdateStateRequest, (void (*)(void))type metadata accessor for PBUpdateStateRequest._StorageClass, sub_22D21639C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D216778);
}

uint64_t sub_22D216778()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBBlobAuth(0);
        sub_22D21E3D0(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    type metadata accessor for PBUpdateParameters(0);
    sub_22D21E3D0(&qword_268542A40, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
LABEL_5:
    sub_22D2BC1A0();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBUpdateStateRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D215088(a1, a2, a3, (void (*)(void))type metadata accessor for PBUpdateStateRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D216954);
}

uint64_t sub_22D216954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v29 = a4;
  uint64_t v28 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_268542888, type metadata accessor for PBUpdateParameters, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v25 = type metadata accessor for PBUpdateParameters(0);
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v23 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, v5);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for PBBlobAuth(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v18 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v18, (uint64_t)v13, &qword_26853F988, type metadata accessor for PBBlobAuth);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_22D21E20C((uint64_t)v13, &qword_26853F988, type metadata accessor for PBBlobAuth);
  }
  else
  {
    sub_22D221988((uint64_t)v13, (uint64_t)v17, type metadata accessor for PBBlobAuth);
    sub_22D21E3D0(&qword_26853FBA0, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
    uint64_t v19 = v26;
    sub_22D2BC2E0();
    uint64_t result = sub_22D211E8C((uint64_t)v17, type metadata accessor for PBBlobAuth);
    if (v19) {
      return result;
    }
  }
  uint64_t v21 = v24
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  sub_22D21E18C(v21, (uint64_t)v8, &qword_268542888, type metadata accessor for PBUpdateParameters);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v25) == 1) {
    return sub_22D21E20C((uint64_t)v8, &qword_268542888, type metadata accessor for PBUpdateParameters);
  }
  uint64_t v22 = v23;
  sub_22D221988((uint64_t)v8, v23, type metadata accessor for PBUpdateParameters);
  sub_22D21E3D0(&qword_268542A40, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
  sub_22D2BC2E0();
  return sub_22D211E8C(v22, type metadata accessor for PBUpdateParameters);
}

uint64_t static PBUpdateStateRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D21D7AC(a1, a2, type metadata accessor for PBUpdateStateRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D216E2C) & 1;
}

BOOL sub_22D216E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a2;
  uint64_t v3 = type metadata accessor for PBUpdateParameters(0);
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2219F0(0, &qword_268542BF8, &qword_268542888, type metadata accessor for PBUpdateParameters);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (uint64_t)&v47 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_268542888, type metadata accessor for PBUpdateParameters, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v49 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v52 = (uint64_t)&v47 - v11;
  uint64_t v12 = type metadata accessor for PBBlobAuth(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v50 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D2219F0(0, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v47 - v17;
  sub_22D211E28(0, &qword_26853F988, type metadata accessor for PBBlobAuth, v7);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v56 = (uint64_t *)((char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = a1;
  uint64_t v25 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  sub_22D21E18C(v25, (uint64_t)v23, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v26 = v57;
  uint64_t v27 = v57
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__blobAuth;
  swift_beginAccess();
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_22D21E18C((uint64_t)v23, (uint64_t)v18, &qword_26853F988, type metadata accessor for PBBlobAuth);
  sub_22D21E18C(v27, v28, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v29((uint64_t)v18, 1, v12) != 1)
  {
    uint64_t v31 = v24;
    uint64_t v32 = v26;
    uint64_t v33 = v56;
    sub_22D21E18C((uint64_t)v18, (uint64_t)v56, &qword_26853F988, type metadata accessor for PBBlobAuth);
    if (v29(v28, 1, v12) != 1)
    {
      uint64_t v34 = v50;
      sub_22D221988(v28, (uint64_t)v50, type metadata accessor for PBBlobAuth);
      swift_retain();
      uint64_t v30 = v32;
      swift_retain();
      char v35 = static PBBlobAuth.== infix(_:_:)(v33, v34);
      sub_22D211E8C((uint64_t)v34, type metadata accessor for PBBlobAuth);
      sub_22D21E20C((uint64_t)v23, &qword_26853F988, type metadata accessor for PBBlobAuth);
      sub_22D211E8C((uint64_t)v33, type metadata accessor for PBBlobAuth);
      sub_22D21E20C((uint64_t)v18, &qword_26853F988, type metadata accessor for PBBlobAuth);
      if (v35) {
        goto LABEL_9;
      }
LABEL_7:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_22D21E20C((uint64_t)v23, &qword_26853F988, type metadata accessor for PBBlobAuth);
    sub_22D211E8C((uint64_t)v33, type metadata accessor for PBBlobAuth);
LABEL_6:
    sub_22D22192C((uint64_t)v18, &qword_26853FF80, &qword_26853F988, type metadata accessor for PBBlobAuth);
    goto LABEL_7;
  }
  swift_retain();
  swift_retain();
  sub_22D21E20C((uint64_t)v23, &qword_26853F988, type metadata accessor for PBBlobAuth);
  uint64_t v30 = v26;
  uint64_t v31 = v24;
  if (v29(v28, 1, v12) != 1) {
    goto LABEL_6;
  }
  sub_22D21E20C((uint64_t)v18, &qword_26853F988, type metadata accessor for PBBlobAuth);
LABEL_9:
  uint64_t v36 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  uint64_t v37 = v52;
  sub_22D21E18C(v36, v52, &qword_268542888, type metadata accessor for PBUpdateParameters);
  uint64_t v38 = v30
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBUpdateStateRequestP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__updateParameters;
  swift_beginAccess();
  uint64_t v39 = v55;
  uint64_t v40 = v55 + *(int *)(v51 + 48);
  sub_22D21E18C(v37, v55, &qword_268542888, type metadata accessor for PBUpdateParameters);
  sub_22D21E18C(v38, v40, &qword_268542888, type metadata accessor for PBUpdateParameters);
  uint64_t v41 = v54;
  char v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v42(v39, 1, v54) == 1)
  {
    swift_release();
    swift_release();
    sub_22D21E20C(v37, &qword_268542888, type metadata accessor for PBUpdateParameters);
    if (v42(v40, 1, v41) == 1)
    {
      sub_22D21E20C(v39, &qword_268542888, type metadata accessor for PBUpdateParameters);
      return 1;
    }
    goto LABEL_14;
  }
  uint64_t v43 = v49;
  sub_22D21E18C(v39, v49, &qword_268542888, type metadata accessor for PBUpdateParameters);
  if (v42(v40, 1, v41) == 1)
  {
    swift_release();
    swift_release();
    sub_22D21E20C(v37, &qword_268542888, type metadata accessor for PBUpdateParameters);
    sub_22D211E8C(v43, type metadata accessor for PBUpdateParameters);
LABEL_14:
    sub_22D22192C(v39, &qword_268542BF8, &qword_268542888, type metadata accessor for PBUpdateParameters);
    return 0;
  }
  uint64_t v45 = v48;
  sub_22D221988(v40, v48, type metadata accessor for PBUpdateParameters);
  char v46 = sub_22D21D7AC(v43, v45, type metadata accessor for PBUpdateParameters, (uint64_t (*)(uint64_t, uint64_t))sub_22D2157F4);
  swift_release();
  swift_release();
  sub_22D211E8C(v45, type metadata accessor for PBUpdateParameters);
  sub_22D21E20C(v37, &qword_268542888, type metadata accessor for PBUpdateParameters);
  sub_22D211E8C(v43, type metadata accessor for PBUpdateParameters);
  sub_22D21E20C(v39, &qword_268542888, type metadata accessor for PBUpdateParameters);
  return (v46 & 1) != 0;
}

uint64_t PBUpdateStateRequest.hashValue.getter()
{
  return sub_22D21C8F8((void (*)(void))type metadata accessor for PBUpdateStateRequest, &qword_268542930, (void (*)(uint64_t))type metadata accessor for PBUpdateStateRequest);
}

uint64_t sub_22D217768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D398, &qword_2685427D8, a2);
}

unint64_t sub_22D21778C()
{
  return 0xD000000000000032;
}

uint64_t sub_22D2177A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBUpdateStateRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D2177C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBUpdateStateRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D2177D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D21E3D0(&qword_268542BA8, (void (*)(uint64_t))type metadata accessor for PBUpdateStateRequest);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D217854@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D390, (uint64_t)qword_2685427C0, a1);
}

uint64_t sub_22D217878(uint64_t a1)
{
  uint64_t v2 = sub_22D21E3D0(&qword_268542A58, (void (*)(uint64_t))type metadata accessor for PBUpdateStateRequest);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D2178E4()
{
  sub_22D21E3D0(&qword_268542A58, (void (*)(uint64_t))type metadata accessor for PBUpdateStateRequest);
  return sub_22D2BC200();
}

uint64_t sub_22D217960(uint64_t a1, uint64_t a2)
{
  return sub_22D21D7AC(a1, a2, type metadata accessor for PBUpdateStateRequest, (uint64_t (*)(uint64_t, uint64_t))sub_22D216E2C) & 1;
}

unint64_t static PBStateResponse.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D2179C0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685427E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685427E0);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 1;
  *(void *)unint64_t v7 = "mailbox_id";
  *(void *)(v7 + 8) = 10;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50728];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 2;
  *(void *)unint64_t v11 = "state";
  *(void *)(v11 + 8) = 5;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  void *v12 = 3;
  *(void *)uint64_t v13 = "msg";
  *((void *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  void *v14 = 4;
  *(void *)uint64_t v15 = "result_code";
  *((void *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBStateResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D3A0, (uint64_t)qword_2685427E0, a1);
}

uint64_t sub_22D217C58()
{
  type metadata accessor for PBStateResponse._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  uint64_t v2 = type metadata accessor for PBState(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  unint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  *unint64_t v4 = 0;
  v4[1] = 0xE000000000000000;
  uint64_t v5 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode;
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  qword_2685427F8 = v0;
  return result;
}

uint64_t sub_22D217D18()
{
  swift_bridgeObjectRelease();
  sub_22D21E20C(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state, &qword_268542898, type metadata accessor for PBState);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PBStateResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D217E1C(a1, a2, a3, type metadata accessor for PBStateResponse, (void (*)(void))type metadata accessor for PBStateResponse._StorageClass, sub_22D21DE94, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D217F20);
}

uint64_t sub_22D217E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = v7;
  uint64_t v14 = *(int *)(a4(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v15 = swift_retain();
    uint64_t v16 = a6(v15);
    swift_release();
    *(void *)(v10 + v14) = v16;
    swift_release();
  }
  uint64_t v17 = swift_retain();
  a7(v17, a1, a2, a3);
  return swift_release();
}

uint64_t sub_22D217F20()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for PBState(0);
          sub_22D21E3D0(&qword_268542AA0, (void (*)(uint64_t))type metadata accessor for PBState);
          uint64_t v4 = v3;
          sub_22D2BC1A0();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          sub_22D221830();
          uint64_t v4 = v3;
          sub_22D2BC0D0();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBStateResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D215088(a1, a2, a3, (void (*)(void))type metadata accessor for PBStateResponse, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D218154);
}

uint64_t sub_22D218154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_22D211E28(0, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)v26 - v10;
  uint64_t v12 = type metadata accessor for PBState(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v26[0] = (uint64_t)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v16 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v28 = a4;
  v26[1] = a3;
  if (!v16 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    uint64_t v18 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
    swift_beginAccess();
    sub_22D21E18C(v18, (uint64_t)v11, &qword_268542898, type metadata accessor for PBState);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_22D21E20C((uint64_t)v11, &qword_268542898, type metadata accessor for PBState);
    }
    else
    {
      uint64_t v19 = v26[0];
      sub_22D221988((uint64_t)v11, v26[0], type metadata accessor for PBState);
      sub_22D21E3D0(&qword_268542AA0, (void (*)(uint64_t))type metadata accessor for PBState);
      sub_22D2BC2E0();
      uint64_t result = sub_22D211E8C(v19, type metadata accessor for PBState);
      if (v4) {
        return result;
      }
    }
    uint64_t v20 = (uint64_t *)(a1
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
    swift_beginAccess();
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    uint64_t v23 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0) {
      uint64_t v23 = v21 & 0xFFFFFFFFFFFFLL;
    }
    if (!v23 || (swift_bridgeObjectRetain(), sub_22D2BC2B0(), uint64_t result = swift_bridgeObjectRelease(), !v5))
    {
      uint64_t v24 = a1
          + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode;
      uint64_t result = swift_beginAccess();
      if (*(void *)v24)
      {
        char v25 = *(unsigned char *)(v24 + 8);
        v26[2] = *(void *)v24;
        char v27 = v25;
        sub_22D221830();
        return sub_22D2BC240();
      }
    }
  }
  return result;
}

uint64_t static PBStateResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D21D7AC(a1, a2, type metadata accessor for PBStateResponse, (uint64_t (*)(uint64_t, uint64_t))sub_22D218544) & 1;
}

BOOL sub_22D218544(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = type metadata accessor for PBState(0);
  uint64_t v4 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  unint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2219F0(0, &qword_268542BF0, &qword_268542898, type metadata accessor for PBState);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v36 - v9;
  sub_22D211E28(0, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v36 - v14;
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v16 == *(void *)(a2 + 16) && v17 == *(void *)(a2 + 24)
    || (v18 = sub_22D2BD660(), BOOL result = 0, (v18 & 1) != 0))
  {
    uint64_t v36 = v6;
    uint64_t v20 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
    swift_beginAccess();
    sub_22D21E18C(v20, (uint64_t)v15, &qword_268542898, type metadata accessor for PBState);
    uint64_t v21 = a2
        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
    swift_beginAccess();
    uint64_t v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_22D21E18C((uint64_t)v15, (uint64_t)v10, &qword_268542898, type metadata accessor for PBState);
    sub_22D21E18C(v21, v22, &qword_268542898, type metadata accessor for PBState);
    uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v24 = v38;
    if (v23((uint64_t)v10, 1, v38) == 1)
    {
      swift_retain();
      swift_retain();
      sub_22D21E20C((uint64_t)v15, &qword_268542898, type metadata accessor for PBState);
      if (v23(v22, 1, v24) == 1)
      {
        sub_22D21E20C((uint64_t)v10, &qword_268542898, type metadata accessor for PBState);
LABEL_11:
        uint64_t v28 = (uint64_t *)(a1
                        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
        swift_beginAccess();
        uint64_t v29 = *v28;
        uint64_t v30 = v28[1];
        uint64_t v31 = (void *)(a2
                       + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
        swift_beginAccess();
        if (v29 == *v31 && v30 == v31[1] || (sub_22D2BD660() & 1) != 0)
        {
          uint64_t v32 = (uint64_t *)(a1
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
          swift_beginAccess();
          uint64_t v33 = *v32;
          swift_release();
          uint64_t v34 = (uint64_t *)(a2
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
          swift_beginAccess();
          uint64_t v35 = *v34;
          LODWORD(v34) = *((unsigned __int8 *)v34 + 8);
          swift_release();
          if (v34 == 1)
          {
            switch(v35)
            {
              case 1:
                return v33 == 1;
              case 2:
                return v33 == 2;
              case 3:
                return v33 == 3;
              case 4:
                return v33 == 4;
              case 5:
                return v33 == 5;
              case 6:
                return v33 == 6;
              default:
                return !v33;
            }
          }
          return v33 == v35;
        }
LABEL_18:
        swift_release();
        swift_release();
        return 0;
      }
    }
    else
    {
      uint64_t v25 = v37;
      sub_22D21E18C((uint64_t)v10, v37, &qword_268542898, type metadata accessor for PBState);
      if (v23(v22, 1, v24) != 1)
      {
        uint64_t v26 = (uint64_t)v36;
        sub_22D221988(v22, (uint64_t)v36, type metadata accessor for PBState);
        swift_retain();
        swift_retain();
        char v27 = sub_22D21D7AC(v25, v26, type metadata accessor for PBState, sub_22D21B8E4);
        sub_22D211E8C(v26, type metadata accessor for PBState);
        sub_22D21E20C((uint64_t)v15, &qword_268542898, type metadata accessor for PBState);
        sub_22D211E8C(v25, type metadata accessor for PBState);
        sub_22D21E20C((uint64_t)v10, &qword_268542898, type metadata accessor for PBState);
        if ((v27 & 1) == 0) {
          goto LABEL_18;
        }
        goto LABEL_11;
      }
      swift_retain();
      swift_retain();
      sub_22D21E20C((uint64_t)v15, &qword_268542898, type metadata accessor for PBState);
      sub_22D211E8C(v25, type metadata accessor for PBState);
    }
    sub_22D22192C((uint64_t)v10, &qword_268542BF0, &qword_268542898, type metadata accessor for PBState);
    goto LABEL_18;
  }
  return result;
}

uint64_t PBStateResponse.hashValue.getter()
{
  return sub_22D21C8F8((void (*)(void))type metadata accessor for PBStateResponse, &qword_268542938, (void (*)(uint64_t))type metadata accessor for PBStateResponse);
}

uint64_t sub_22D218C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D3A8, &qword_2685427F8, a2);
}

unint64_t sub_22D218C44()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_22D218C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBStateResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D218C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBStateResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D218C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D21E3D0(&qword_268542BA0, (void (*)(uint64_t))type metadata accessor for PBStateResponse);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D218D0C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D3A0, (uint64_t)qword_2685427E0, a1);
}

uint64_t sub_22D218D30(uint64_t a1)
{
  uint64_t v2 = sub_22D21E3D0(&qword_268542A70, (void (*)(uint64_t))type metadata accessor for PBStateResponse);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D218D9C()
{
  sub_22D21E3D0(&qword_268542A70, (void (*)(uint64_t))type metadata accessor for PBStateResponse);
  return sub_22D2BC200();
}

uint64_t sub_22D218E18(uint64_t a1, uint64_t a2)
{
  return sub_22D21D7AC(a1, a2, type metadata accessor for PBStateResponse, (uint64_t (*)(uint64_t, uint64_t))sub_22D218544) & 1;
}

uint64_t sub_22D218E5C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542800);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542800);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_22D2C0BB0;
  unint64_t v5 = v21 + v4 + *(int *)(v2 + 56);
  *(void *)(v21 + v4) = 0;
  *(void *)unint64_t v5 = "UNDEFINED";
  *(void *)(v5 + 8) = 9;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_22D2BC2F0();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v21 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v21 + v4 + v3) = 1;
  *(void *)unint64_t v9 = "OK";
  *(void *)(v9 + 8) = 2;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v21 + v4 + 2 * v3);
  uint64_t v11 = (char *)v10 + *(int *)(v2 + 56);
  *uint64_t v10 = 2;
  *(void *)uint64_t v11 = "STATE_UPDATED";
  *((void *)v11 + 1) = 13;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v21 + v4 + 3 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  void *v12 = 3;
  *(void *)uint64_t v13 = "STATE_NOT_UPDATED";
  *((void *)v13 + 1) = 17;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v21 + v4 + 4 * v3);
  unint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  void *v14 = 4;
  *(void *)unint64_t v15 = "SERVER_ERROR";
  *((void *)v15 + 1) = 12;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v21 + v4 + 5 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  void *v16 = 5;
  *(void *)uint64_t v17 = "MAILBOX_NOT_FOUND";
  *((void *)v17 + 1) = 17;
  v17[16] = 2;
  v8();
  char v18 = (void *)(v21 + v4 + 6 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 6;
  *(void *)uint64_t v19 = "UNAUTHORIZED";
  *((void *)v19 + 1) = 12;
  v19[16] = 2;
  v8();
  return sub_22D2BC300();
}

uint64_t static PBStateResponse.ResultCode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D3B0, (uint64_t)qword_268542800, a1);
}

uint64_t sub_22D219190@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D3B0, (uint64_t)qword_268542800, a1);
}

unint64_t static PBGeo.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_22D2191D0()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542818);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542818);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "latitude";
  *(void *)(v7 + 8) = 8;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "longitude";
  *((void *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 3;
  *(void *)uint64_t v12 = "radius";
  *(void *)(v12 + 8) = 6;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBGeo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D3B8, (uint64_t)qword_268542818, a1);
}

uint64_t PBGeo.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_22D2BC080();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_22D2BC130();
      }
      else if (result == 2 || result == 1)
      {
        sub_22D2BC150();
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBGeo.traverse<A>(visitor:)()
{
  if (*(double *)v0 == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
  {
    if (*(double *)(v0 + 8) == 0.0 || (uint64_t result = sub_22D2BC2A0(), !v1))
    {
      if (!*(_DWORD *)(v0 + 16) || (uint64_t result = sub_22D2BC280(), !v1))
      {
        type metadata accessor for PBGeo(0);
        return sub_22D2BBFD0();
      }
    }
  }
  return result;
}

uint64_t PBGeo.hashValue.getter()
{
  return sub_22D21C8F8((void (*)(void))type metadata accessor for PBGeo, &qword_268542940, (void (*)(uint64_t))type metadata accessor for PBGeo);
}

unint64_t sub_22D219614()
{
  return 0xD000000000000023;
}

uint64_t sub_22D219630()
{
  return PBGeo.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D219648()
{
  return PBGeo.traverse<A>(visitor:)();
}

uint64_t sub_22D219660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D21E3D0(&qword_268542B98, (void (*)(uint64_t))type metadata accessor for PBGeo);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D2196DC@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D3B8, (uint64_t)qword_268542818, a1);
}

uint64_t sub_22D219700(uint64_t a1)
{
  uint64_t v2 = sub_22D21E3D0(&qword_268542A88, (void (*)(uint64_t))type metadata accessor for PBGeo);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D21976C()
{
  sub_22D21E3D0(&qword_268542A88, (void (*)(uint64_t))type metadata accessor for PBGeo);
  return sub_22D2BC200();
}

unint64_t static PBState.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_22D219808()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268542830);
  __swift_project_value_buffer(v0, (uint64_t)qword_268542830);
  sub_22D211E28(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_22D2C79E0;
  unint64_t v5 = v35 + v4;
  unint64_t v6 = v35 + v4 + *(int *)(v2 + 56);
  *(void *)(v35 + v4) = 1;
  *(void *)unint64_t v6 = "mailbox_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v35 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 2;
  *(void *)unint64_t v10 = "actor";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v35 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  void *v11 = 3;
  *(void *)uint64_t v12 = "access_code";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v35 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  void *v13 = 4;
  *(void *)uint64_t v14 = "sid";
  *((void *)v14 + 1) = 3;
  v14[16] = 2;
  v9();
  unint64_t v15 = (void *)(v35 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  void *v15 = 5;
  *(void *)uint64_t v16 = "composite_code_trials";
  *((void *)v16 + 1) = 21;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v35 + v4 + 5 * v3);
  char v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 6;
  *(void *)char v18 = "expiration_time";
  *((void *)v18 + 1) = 15;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v35 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 7;
  *(void *)uint64_t v20 = "geo_encrypted";
  *((void *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v35 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 8;
  *(void *)uint64_t v22 = "pa";
  *((void *)v22 + 1) = 2;
  v22[16] = 2;
  v9();
  uint64_t v23 = v35 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 9;
  *(void *)uint64_t v23 = "pb";
  *(void *)(v23 + 8) = 2;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v35 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 10;
  *(void *)uint64_t v25 = "confirmation_a";
  *((void *)v25 + 1) = 14;
  v25[16] = 2;
  v9();
  uint64_t v26 = (void *)(v35 + v4 + 10 * v3);
  char v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 11;
  *(void *)char v27 = "confirmation_b";
  *((void *)v27 + 1) = 14;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v35 + v4 + 11 * v3);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 12;
  *(void *)uint64_t v29 = "lookupinfo_encrypted";
  *((void *)v29 + 1) = 20;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v35 + v4 + 12 * v3);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 13;
  *(void *)uint64_t v31 = "step";
  *((void *)v31 + 1) = 4;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v35 + v4 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 14;
  *(void *)uint64_t v33 = "other_data";
  *((void *)v33 + 1) = 10;
  v33[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBState._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D3C0, (uint64_t)qword_268542830, a1);
}

uint64_t sub_22D219D00()
{
  type metadata accessor for PBState._StorageClass(0);
  swift_allocObject();
  uint64_t result = sub_22D219D40();
  qword_268542848 = result;
  return result;
}

uint64_t sub_22D219D40()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0xE000000000000000;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0xE000000000000000;
  *(_DWORD *)(v0 + 80) = 0;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  uint64_t v2 = sub_22D2BBFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
  *uint64_t v3 = sub_22D2BBFC0();
  v3[1] = v4;
  unint64_t v5 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
  *unint64_t v5 = sub_22D2BBFC0();
  v5[1] = v6;
  uint64_t v7 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
  *uint64_t v7 = sub_22D2BBFC0();
  v7[1] = v8;
  uint64_t v9 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
  *uint64_t v9 = sub_22D2BBFC0();
  v9[1] = v10;
  uint64_t v11 = (uint64_t *)(v0
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
  uint64_t *v11 = sub_22D2BBFC0();
  v11[1] = v12;
  uint64_t v13 = (uint64_t *)(v0
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
  uint64_t *v13 = sub_22D2BBFC0();
  v13[1] = v14;
  uint64_t v15 = v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = v0
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  uint64_t v17 = type metadata accessor for PBOtherData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  return v0;
}

uint64_t sub_22D219EAC(uint64_t a1)
{
  uint64_t v97 = type metadata accessor for PBOtherData;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v96 = (uint64_t)&v84 - v5;
  uint64_t v89 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D211E28(0, &qword_26853F998, MEMORY[0x263F502F0], v3);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v88 = (uint64_t)&v84 - v7;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 48) = 0;
  v84 = (void *)(v1 + 48);
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 56) = 0xE000000000000000;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 72) = 0xE000000000000000;
  *(_DWORD *)(v1 + 80) = 0;
  uint64_t v85 = (void *)(v1 + 64);
  uint64_t v86 = (_DWORD *)(v1 + 80);
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  uint64_t v87 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  uint64_t v9 = sub_22D2BBFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
  *uint64_t v10 = sub_22D2BBFC0();
  v10[1] = v11;
  uint64_t v12 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
  uint64_t *v12 = sub_22D2BBFC0();
  v12[1] = v13;
  uint64_t v14 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
  uint64_t v15 = sub_22D2BBFC0();
  uint64_t v90 = v14;
  uint64_t *v14 = v15;
  v14[1] = v16;
  uint64_t v17 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
  uint64_t v18 = sub_22D2BBFC0();
  uint64_t v91 = v17;
  uint64_t *v17 = v18;
  v17[1] = v19;
  uint64_t v20 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
  uint64_t v21 = sub_22D2BBFC0();
  v92 = v20;
  uint64_t *v20 = v21;
  v20[1] = v22;
  uint64_t v23 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
  *uint64_t v23 = sub_22D2BBFC0();
  v23[1] = v24;
  uint64_t v25 = v1 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
  uint64_t v93 = v23;
  uint64_t v94 = v25;
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  uint64_t v26 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  uint64_t v95 = v1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  uint64_t v27 = type metadata accessor for PBOtherData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  swift_beginAccess();
  uint64_t v29 = *(void *)(a1 + 16);
  uint64_t v28 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v29;
  *(void *)(v1 + 24) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v30 = *(void *)(a1 + 32);
  LOBYTE(v23) = *(unsigned char *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v30;
  *(unsigned char *)(v1 + 40) = (_BYTE)v23;
  swift_beginAccess();
  uint64_t v32 = *(void *)(a1 + 48);
  uint64_t v31 = *(void *)(a1 + 56);
  uint64_t v33 = v84;
  swift_beginAccess();
  void *v33 = v32;
  *(void *)(v1 + 56) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v35 = *(void *)(a1 + 64);
  uint64_t v34 = *(void *)(a1 + 72);
  uint64_t v36 = v85;
  swift_beginAccess();
  void *v36 = v35;
  *(void *)(v1 + 72) = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v34) = *(_DWORD *)(a1 + 80);
  uint64_t v37 = v86;
  swift_beginAccess();
  _DWORD *v37 = v34;
  uint64_t v38 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
  swift_beginAccess();
  uint64_t v40 = v88;
  uint64_t v39 = v89;
  sub_22D21E18C(v38, v88, &qword_26853F998, v89);
  uint64_t v41 = v87;
  swift_beginAccess();
  sub_22D21E2FC(v40, v41, &qword_26853F998, v39);
  swift_endAccess();
  char v42 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
  swift_beginAccess();
  uint64_t v44 = *v42;
  unint64_t v43 = v42[1];
  swift_beginAccess();
  uint64_t v45 = *v10;
  unint64_t v46 = v10[1];
  *uint64_t v10 = v44;
  v10[1] = v43;
  sub_22CFF9B64(v44, v43);
  sub_22CFF5630(v45, v46);
  uint64_t v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
  swift_beginAccess();
  uint64_t v49 = *v47;
  unint64_t v48 = v47[1];
  swift_beginAccess();
  uint64_t v50 = *v12;
  unint64_t v51 = v12[1];
  uint64_t *v12 = v49;
  v12[1] = v48;
  sub_22CFF9B64(v49, v48);
  sub_22CFF5630(v50, v51);
  uint64_t v52 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
  swift_beginAccess();
  uint64_t v54 = *v52;
  unint64_t v53 = v52[1];
  uint64_t v55 = v90;
  swift_beginAccess();
  uint64_t v56 = *v55;
  unint64_t v57 = v55[1];
  *uint64_t v55 = v54;
  v55[1] = v53;
  sub_22CFF9B64(v54, v53);
  sub_22CFF5630(v56, v57);
  uint64_t v58 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
  swift_beginAccess();
  uint64_t v60 = *v58;
  unint64_t v59 = v58[1];
  uint64_t v61 = v91;
  swift_beginAccess();
  uint64_t v62 = *v61;
  unint64_t v63 = v61[1];
  *uint64_t v61 = v60;
  v61[1] = v59;
  sub_22CFF9B64(v60, v59);
  sub_22CFF5630(v62, v63);
  uint64_t v64 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
  swift_beginAccess();
  uint64_t v66 = *v64;
  unint64_t v65 = v64[1];
  uint64_t v67 = v92;
  swift_beginAccess();
  uint64_t v68 = *v67;
  unint64_t v69 = v67[1];
  *uint64_t v67 = v66;
  v67[1] = v65;
  sub_22CFF9B64(v66, v65);
  sub_22CFF5630(v68, v69);
  uint64_t v70 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
  swift_beginAccess();
  uint64_t v72 = *v70;
  unint64_t v71 = v70[1];
  uint64_t v73 = v93;
  swift_beginAccess();
  uint64_t v74 = *v73;
  unint64_t v75 = v73[1];
  *uint64_t v73 = v72;
  v73[1] = v71;
  sub_22CFF9B64(v72, v71);
  sub_22CFF5630(v74, v75);
  int v76 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step);
  swift_beginAccess();
  uint64_t v77 = *v76;
  LOBYTE(v76) = *((unsigned char *)v76 + 8);
  uint64_t v78 = v94;
  swift_beginAccess();
  *(void *)uint64_t v78 = v77;
  *(unsigned char *)(v78 + 8) = (_BYTE)v76;
  uint64_t v79 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
  swift_beginAccess();
  uint64_t v81 = v96;
  uint64_t v80 = v97;
  sub_22D21E18C(v79, v96, &qword_2685428F8, v97);
  swift_release();
  uint64_t v82 = v95;
  swift_beginAccess();
  sub_22D21E2FC(v81, v82, &qword_2685428F8, v80);
  swift_endAccess();
  return v1;
}

uint64_t sub_22D21A608()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D21E20C(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime, &qword_26853F998, MEMORY[0x263F502F0]);
  sub_22CFF5630(*(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted), *(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted+ 8));
  sub_22CFF5630(*(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa), *(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa+ 8));
  sub_22CFF5630(*(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb), *(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb+ 8));
  sub_22CFF5630(*(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA), *(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA+ 8));
  sub_22CFF5630(*(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB), *(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB+ 8));
  sub_22CFF5630(*(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted), *(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted+ 8));
  sub_22D21E20C(v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData, &qword_2685428F8, type metadata accessor for PBOtherData);
  return v0;
}

uint64_t sub_22D21A708()
{
  sub_22D21A608();
  return swift_deallocClassInstance();
}

uint64_t PBState.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D21A7C4(a1, a2, a3, type metadata accessor for PBState, (void (*)(void))type metadata accessor for PBState._StorageClass, sub_22D219EAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D21A8B8);
}

uint64_t sub_22D21A7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = *(int *)(a4(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(v7 + v13) = a6(v14);
    swift_release();
  }
  uint64_t v15 = swift_retain();
  a7(v15, a1, a2, a3);
  return swift_release();
}

uint64_t sub_22D21A8B8()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC170();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          sub_22D21E37C();
          uint64_t v4 = v3;
          sub_22D2BC0D0();
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_22D2BC130();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_22D2BBFB0();
          sub_22D21E3D0(&qword_26853FF78, MEMORY[0x263F502F0]);
          sub_22D2BC1A0();
          goto LABEL_13;
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
          swift_beginAccess();
          sub_22D2BC110();
          goto LABEL_13;
        case 13:
          swift_beginAccess();
          sub_22D221884();
          sub_22D2BC0D0();
LABEL_13:
          swift_endAccess();
          break;
        case 14:
          swift_beginAccess();
          type metadata accessor for PBOtherData(0);
          sub_22D21E3D0(&qword_268542A28, (void (*)(uint64_t))type metadata accessor for PBOtherData);
          sub_22D2BC1A0();
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_22D2BC080();
    }
  }
  return result;
}

uint64_t PBState.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22D215088(a1, a2, a3, (void (*)(void))type metadata accessor for PBState, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22D21AD74);
}

uint64_t sub_22D21AD74(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v60 = (uint64_t)&v58 - v5;
  uint64_t v61 = type metadata accessor for PBOtherData(0);
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v58 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D211E28(0, &qword_26853F998, MEMORY[0x263F502F0], v3);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v58 - v8;
  uint64_t v62 = sub_22D2BBFB0();
  uint64_t v67 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v13 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 32))
  {
    char v14 = *(unsigned char *)(a1 + 40);
    uint64_t v65 = *(void *)(a1 + 32);
    char v66 = v14;
    sub_22D21E37C();
    uint64_t result = sub_22D2BC240();
    if (v1) {
      return result;
    }
  }
  swift_beginAccess();
  unint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFLL;
  }
  if (v17)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (!v1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  swift_beginAccess();
  unint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v19 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFLL;
  }
  if (v19)
  {
    swift_bridgeObjectRetain();
    sub_22D2BC2B0();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_DWORD *)(a1 + 80) || (uint64_t result = sub_22D2BC280(), !v1))
  {
    uint64_t v20 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
    swift_beginAccess();
    sub_22D21E18C(v20, (uint64_t)v9, &qword_26853F998, MEMORY[0x263F502F0]);
    uint64_t v21 = v62;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v9, 1, v62) == 1)
    {
      sub_22D21E20C((uint64_t)v9, &qword_26853F998, MEMORY[0x263F502F0]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v11, v9, v21);
      sub_22D21E3D0(&qword_26853FF78, MEMORY[0x263F502F0]);
      sub_22D2BC2E0();
      if (v1) {
        return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v11, v21);
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v21);
    }
    uint64_t v22 = a1
        + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted;
    swift_beginAccess();
    uint64_t v23 = *(void *)v22;
    unint64_t v24 = *(void *)(v22 + 8);
    switch(v24 >> 62)
    {
      case 1uLL:
        uint64_t v25 = (int)v23;
        uint64_t v26 = v23 >> 32;
        goto LABEL_32;
      case 2uLL:
        uint64_t v25 = *(void *)(v23 + 16);
        uint64_t v26 = *(void *)(v23 + 24);
LABEL_32:
        if (v25 != v26) {
          goto LABEL_33;
        }
        goto LABEL_34;
      case 3uLL:
        goto LABEL_34;
      default:
        if ((v24 & 0xFF000000000000) == 0) {
          goto LABEL_34;
        }
LABEL_33:
        sub_22CFF9B64(*(void *)v22, *(void *)(v22 + 8));
        sub_22D2BC260();
        uint64_t result = sub_22CFF5630(v23, v24);
        if (!v1)
        {
LABEL_34:
          uint64_t v27 = a1
              + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa;
          swift_beginAccess();
          uint64_t v28 = *(void *)v27;
          unint64_t v29 = *(void *)(v27 + 8);
          switch(v29 >> 62)
          {
            case 1uLL:
              uint64_t v30 = (int)v28;
              uint64_t v31 = v28 >> 32;
              goto LABEL_39;
            case 2uLL:
              uint64_t v30 = *(void *)(v28 + 16);
              uint64_t v31 = *(void *)(v28 + 24);
LABEL_39:
              if (v30 != v31) {
                goto LABEL_40;
              }
              goto LABEL_41;
            case 3uLL:
              goto LABEL_41;
            default:
              if ((v29 & 0xFF000000000000) == 0) {
                goto LABEL_41;
              }
LABEL_40:
              sub_22CFF9B64(*(void *)v27, *(void *)(v27 + 8));
              sub_22D2BC260();
              uint64_t result = sub_22CFF5630(v28, v29);
              if (!v1)
              {
LABEL_41:
                uint64_t v32 = a1
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb;
                swift_beginAccess();
                uint64_t v33 = *(void *)v32;
                unint64_t v34 = *(void *)(v32 + 8);
                switch(v34 >> 62)
                {
                  case 1uLL:
                    uint64_t v35 = (int)v33;
                    uint64_t v36 = v33 >> 32;
                    goto LABEL_46;
                  case 2uLL:
                    uint64_t v35 = *(void *)(v33 + 16);
                    uint64_t v36 = *(void *)(v33 + 24);
LABEL_46:
                    if (v35 != v36) {
                      goto LABEL_47;
                    }
                    goto LABEL_48;
                  case 3uLL:
                    goto LABEL_48;
                  default:
                    if ((v34 & 0xFF000000000000) == 0) {
                      goto LABEL_48;
                    }
LABEL_47:
                    sub_22CFF9B64(*(void *)v32, *(void *)(v32 + 8));
                    sub_22D2BC260();
                    uint64_t result = sub_22CFF5630(v33, v34);
                    if (!v1)
                    {
LABEL_48:
                      uint64_t v37 = a1
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA;
                      swift_beginAccess();
                      uint64_t v38 = *(void *)v37;
                      unint64_t v39 = *(void *)(v37 + 8);
                      switch(v39 >> 62)
                      {
                        case 1uLL:
                          uint64_t v40 = (int)v38;
                          uint64_t v41 = v38 >> 32;
                          goto LABEL_53;
                        case 2uLL:
                          uint64_t v40 = *(void *)(v38 + 16);
                          uint64_t v41 = *(void *)(v38 + 24);
LABEL_53:
                          if (v40 != v41) {
                            goto LABEL_54;
                          }
                          goto LABEL_55;
                        case 3uLL:
                          goto LABEL_55;
                        default:
                          if ((v39 & 0xFF000000000000) == 0) {
                            goto LABEL_55;
                          }
LABEL_54:
                          sub_22CFF9B64(*(void *)v37, *(void *)(v37 + 8));
                          sub_22D2BC260();
                          uint64_t result = sub_22CFF5630(v38, v39);
                          if (!v1)
                          {
LABEL_55:
                            uint64_t v42 = a1
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB;
                            swift_beginAccess();
                            uint64_t v43 = *(void *)v42;
                            unint64_t v44 = *(void *)(v42 + 8);
                            switch(v44 >> 62)
                            {
                              case 1uLL:
                                uint64_t v45 = (int)v43;
                                uint64_t v46 = v43 >> 32;
                                goto LABEL_60;
                              case 2uLL:
                                uint64_t v45 = *(void *)(v43 + 16);
                                uint64_t v46 = *(void *)(v43 + 24);
LABEL_60:
                                if (v45 != v46) {
                                  goto LABEL_61;
                                }
                                goto LABEL_62;
                              case 3uLL:
                                goto LABEL_62;
                              default:
                                if ((v44 & 0xFF000000000000) == 0) {
                                  goto LABEL_62;
                                }
LABEL_61:
                                sub_22CFF9B64(*(void *)v42, *(void *)(v42 + 8));
                                sub_22D2BC260();
                                uint64_t result = sub_22CFF5630(v43, v44);
                                if (!v1)
                                {
LABEL_62:
                                  uint64_t v47 = a1
                                      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted;
                                  swift_beginAccess();
                                  uint64_t v48 = *(void *)v47;
                                  unint64_t v49 = *(void *)(v47 + 8);
                                  switch(v49 >> 62)
                                  {
                                    case 1uLL:
                                      uint64_t v50 = (int)v48;
                                      uint64_t v51 = v48 >> 32;
                                      goto LABEL_67;
                                    case 2uLL:
                                      uint64_t v50 = *(void *)(v48 + 16);
                                      uint64_t v51 = *(void *)(v48 + 24);
LABEL_67:
                                      if (v50 != v51) {
                                        goto LABEL_68;
                                      }
                                      goto LABEL_69;
                                    case 3uLL:
                                      goto LABEL_69;
                                    default:
                                      if ((v49 & 0xFF000000000000) == 0) {
                                        goto LABEL_69;
                                      }
LABEL_68:
                                      sub_22CFF9B64(*(void *)v47, *(void *)(v47 + 8));
                                      sub_22D2BC260();
                                      uint64_t result = sub_22CFF5630(v48, v49);
                                      if (!v1)
                                      {
LABEL_69:
                                        uint64_t v52 = (uint64_t *)(a1
                                                        + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step);
                                        swift_beginAccess();
                                        if (!*v52
                                          || (char v53 = *((unsigned char *)v52 + 8),
                                              uint64_t v63 = *v52,
                                              char v64 = v53,
                                              sub_22D221884(),
                                              uint64_t result = sub_22D2BC240(),
                                              !v1))
                                        {
                                          uint64_t v54 = a1
                                              + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
                                          swift_beginAccess();
                                          uint64_t v55 = v60;
                                          sub_22D21E18C(v54, v60, &qword_2685428F8, type metadata accessor for PBOtherData);
                                          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v55, 1, v61) == 1)
                                          {
                                            uint64_t result = sub_22D21E20C(v55, &qword_2685428F8, type metadata accessor for PBOtherData);
                                          }
                                          else
                                          {
                                            uint64_t v56 = v55;
                                            uint64_t v57 = v58;
                                            sub_22D221988(v56, v58, type metadata accessor for PBOtherData);
                                            sub_22D21E3D0(&qword_268542A28, (void (*)(uint64_t))type metadata accessor for PBOtherData);
                                            sub_22D2BC2E0();
                                            uint64_t result = sub_22D211E8C(v57, type metadata accessor for PBOtherData);
                                          }
                                        }
                                      }
                                      break;
                                  }
                                }
                                break;
                            }
                          }
                          break;
                      }
                    }
                    break;
                }
              }
              break;
          }
        }
        break;
    }
  }
  return result;
}

uint64_t static PBState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_22D21D7AC(a1, a2, type metadata accessor for PBState, sub_22D21B8E4) & 1;
}

uint64_t sub_22D21B8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v113 = type metadata accessor for PBOtherData(0);
  uint64_t v110 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v107 = (uint64_t)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2219F0(0, &qword_268542BE8, &qword_2685428F8, type metadata accessor for PBOtherData);
  uint64_t v109 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v112 = (uint64_t)&v105 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D211E28(0, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v108 = (uint64_t)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v111 = (uint64_t)&v105 - v11;
  uint64_t v12 = sub_22D2BBFB0();
  uint64_t v114 = *(void *)(v12 - 8);
  uint64_t v115 = v12;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
  sub_22D2219F0(0, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v105 - v18;
  sub_22D211E28(0, &qword_26853F998, v15, v7);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v105 - v24;
  swift_beginAccess();
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v26 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v27 == *(void *)(a2 + 16) && v26 == *(void *)(a2 + 24)
    || (v28 = sub_22D2BD660(), uint64_t result = 0, (v28 & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v30 = *(void *)(a1 + 32);
    swift_beginAccess();
    uint64_t v31 = *(void *)(a2 + 32);
    if (*(unsigned char *)(a2 + 40) == 1)
    {
      switch(v31)
      {
        case 1:
          if (v30 != 1) {
            return 0;
          }
          goto LABEL_9;
        case 2:
          if (v30 != 2) {
            return 0;
          }
          goto LABEL_9;
        case 3:
          if (v30 != 3) {
            return 0;
          }
          goto LABEL_9;
        default:
          if (!v30) {
            goto LABEL_9;
          }
          return 0;
      }
    }
    if (v30 != v31) {
      return 0;
    }
LABEL_9:
    if ((swift_beginAccess(),
          uint64_t v32 = *(void *)(a1 + 48),
          uint64_t v33 = *(void *)(a1 + 56),
          swift_beginAccess(),
          v32 == *(void *)(a2 + 48))
      && v33 == *(void *)(a2 + 56)
      || (v34 = sub_22D2BD660(), uint64_t result = 0, (v34 & 1) != 0))
    {
      if ((swift_beginAccess(),
            uint64_t v35 = *(void *)(a1 + 64),
            uint64_t v36 = *(void *)(a1 + 72),
            swift_beginAccess(),
            v35 == *(void *)(a2 + 64))
        && v36 == *(void *)(a2 + 72)
        || (v37 = sub_22D2BD660(), uint64_t result = 0, (v37 & 1) != 0))
      {
        swift_beginAccess();
        int v38 = *(_DWORD *)(a1 + 80);
        swift_beginAccess();
        if (v38 != *(_DWORD *)(a2 + 80)) {
          return 0;
        }
        uint64_t v39 = a1
            + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
        swift_beginAccess();
        uint64_t v40 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
        sub_22D21E18C(v39, (uint64_t)v25, &qword_26853F998, MEMORY[0x263F502F0]);
        uint64_t v41 = a2
            + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__expirationTime;
        swift_beginAccess();
        uint64_t v42 = (uint64_t)&v19[*(int *)(v17 + 48)];
        sub_22D21E18C((uint64_t)v25, (uint64_t)v19, &qword_26853F998, v40);
        uint64_t v106 = v42;
        sub_22D21E18C(v41, v42, &qword_26853F998, v40);
        uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48);
        if (v43((uint64_t)v19, 1, v115) == 1)
        {
          swift_retain();
          swift_retain();
          sub_22D21E20C((uint64_t)v25, &qword_26853F998, MEMORY[0x263F502F0]);
          if (v43(v106, 1, v115) == 1)
          {
            sub_22D21E20C((uint64_t)v19, &qword_26853F998, MEMORY[0x263F502F0]);
LABEL_29:
            unint64_t v49 = (uint64_t *)(a1
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
            swift_beginAccess();
            uint64_t v51 = *v49;
            unint64_t v50 = v49[1];
            uint64_t v52 = (uint64_t *)(a2
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
            swift_beginAccess();
            uint64_t v54 = *v52;
            unint64_t v53 = v52[1];
            sub_22CFF9B64(v51, v50);
            sub_22CFF9B64(v54, v53);
            char v55 = sub_22D1158DC(v51, v50, v54, v53);
            sub_22CFF5630(v54, v53);
            sub_22CFF5630(v51, v50);
            if (v55)
            {
              uint64_t v56 = (uint64_t *)(a1
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
              swift_beginAccess();
              uint64_t v58 = *v56;
              unint64_t v57 = v56[1];
              uint64_t v59 = (uint64_t *)(a2
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
              swift_beginAccess();
              uint64_t v61 = *v59;
              unint64_t v60 = v59[1];
              sub_22CFF9B64(v58, v57);
              sub_22CFF9B64(v61, v60);
              char v62 = sub_22D1158DC(v58, v57, v61, v60);
              sub_22CFF5630(v61, v60);
              sub_22CFF5630(v58, v57);
              if (v62)
              {
                uint64_t v63 = (uint64_t *)(a1
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
                swift_beginAccess();
                uint64_t v65 = *v63;
                unint64_t v64 = v63[1];
                char v66 = (uint64_t *)(a2
                                + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
                swift_beginAccess();
                uint64_t v68 = *v66;
                unint64_t v67 = v66[1];
                sub_22CFF9B64(v65, v64);
                sub_22CFF9B64(v68, v67);
                char v69 = sub_22D1158DC(v65, v64, v68, v67);
                sub_22CFF5630(v68, v67);
                sub_22CFF5630(v65, v64);
                if (v69)
                {
                  uint64_t v70 = (uint64_t *)(a1
                                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
                  swift_beginAccess();
                  uint64_t v72 = *v70;
                  unint64_t v71 = v70[1];
                  uint64_t v73 = (uint64_t *)(a2
                                  + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
                  swift_beginAccess();
                  uint64_t v75 = *v73;
                  unint64_t v74 = v73[1];
                  sub_22CFF9B64(v72, v71);
                  sub_22CFF9B64(v75, v74);
                  char v76 = sub_22D1158DC(v72, v71, v75, v74);
                  sub_22CFF5630(v75, v74);
                  sub_22CFF5630(v72, v71);
                  if (v76)
                  {
                    uint64_t v77 = (uint64_t *)(a1
                                    + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
                    swift_beginAccess();
                    uint64_t v79 = *v77;
                    unint64_t v78 = v77[1];
                    uint64_t v80 = (uint64_t *)(a2
                                    + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
                    swift_beginAccess();
                    uint64_t v82 = *v80;
                    unint64_t v81 = v80[1];
                    sub_22CFF9B64(v79, v78);
                    sub_22CFF9B64(v82, v81);
                    char v83 = sub_22D1158DC(v79, v78, v82, v81);
                    sub_22CFF5630(v82, v81);
                    sub_22CFF5630(v79, v78);
                    if (v83)
                    {
                      v84 = (uint64_t *)(a1
                                      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
                      swift_beginAccess();
                      uint64_t v86 = *v84;
                      unint64_t v85 = v84[1];
                      uint64_t v87 = (uint64_t *)(a2
                                      + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
                      swift_beginAccess();
                      uint64_t v89 = *v87;
                      unint64_t v88 = v87[1];
                      sub_22CFF9B64(v86, v85);
                      sub_22CFF9B64(v89, v88);
                      char v90 = sub_22D1158DC(v86, v85, v89, v88);
                      sub_22CFF5630(v89, v88);
                      sub_22CFF5630(v86, v85);
                      if (v90)
                      {
                        uint64_t v91 = a1
                            + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step;
                        swift_beginAccess();
                        uint64_t v92 = *(void *)v91;
                        uint64_t v93 = *(unsigned __int8 *)(v91 + 8);
                        uint64_t v94 = (uint64_t *)(a2
                                        + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step);
                        swift_beginAccess();
                        if (sub_22D0BC5B8(v92, v93, *v94))
                        {
                          uint64_t v95 = a1
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
                          swift_beginAccess();
                          uint64_t v96 = v111;
                          sub_22D21E18C(v95, v111, &qword_2685428F8, type metadata accessor for PBOtherData);
                          uint64_t v97 = a2
                              + OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__otherData;
                          swift_beginAccess();
                          uint64_t v98 = v112;
                          uint64_t v99 = v112 + *(int *)(v109 + 48);
                          sub_22D21E18C(v96, v112, &qword_2685428F8, type metadata accessor for PBOtherData);
                          sub_22D21E18C(v97, v99, &qword_2685428F8, type metadata accessor for PBOtherData);
                          v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
                          uint64_t v101 = v113;
                          if (v100(v98, 1, v113) == 1)
                          {
                            swift_release();
                            swift_release();
                            sub_22D21E20C(v96, &qword_2685428F8, type metadata accessor for PBOtherData);
                            if (v100(v99, 1, v101) == 1)
                            {
                              sub_22D21E20C(v98, &qword_2685428F8, type metadata accessor for PBOtherData);
                              return 1;
                            }
                          }
                          else
                          {
                            uint64_t v102 = v108;
                            sub_22D21E18C(v98, v108, &qword_2685428F8, type metadata accessor for PBOtherData);
                            if (v100(v99, 1, v101) != 1)
                            {
                              uint64_t v103 = v107;
                              sub_22D221988(v99, v107, type metadata accessor for PBOtherData);
                              if (*(_DWORD *)v102 == *(_DWORD *)v103
                                && (*(void *)(v102 + 8) == *(void *)(v103 + 8)
                                 && *(void *)(v102 + 16) == *(void *)(v103 + 16)
                                 || (sub_22D2BD660() & 1) != 0))
                              {
                                sub_22D2BBFF0();
                                sub_22D21E3D0(&qword_26853DB30, MEMORY[0x263F50560]);
                                char v104 = sub_22D2BCB90();
                                swift_release();
                                swift_release();
                                sub_22D211E8C(v103, type metadata accessor for PBOtherData);
                                sub_22D21E20C(v96, &qword_2685428F8, type metadata accessor for PBOtherData);
                                sub_22D211E8C(v102, type metadata accessor for PBOtherData);
                                sub_22D21E20C(v98, &qword_2685428F8, type metadata accessor for PBOtherData);
                                if (v104) {
                                  return 1;
                                }
                              }
                              else
                              {
                                swift_release();
                                swift_release();
                                sub_22D211E8C(v103, type metadata accessor for PBOtherData);
                                sub_22D21E20C(v96, &qword_2685428F8, type metadata accessor for PBOtherData);
                                sub_22D211E8C(v102, type metadata accessor for PBOtherData);
                                sub_22D21E20C(v98, &qword_2685428F8, type metadata accessor for PBOtherData);
                              }
                              return 0;
                            }
                            swift_release();
                            swift_release();
                            sub_22D21E20C(v96, &qword_2685428F8, type metadata accessor for PBOtherData);
                            sub_22D211E8C(v102, type metadata accessor for PBOtherData);
                          }
                          sub_22D22192C(v98, &qword_268542BE8, &qword_2685428F8, type metadata accessor for PBOtherData);
                          return 0;
                        }
                      }
                    }
                  }
                }
              }
            }
LABEL_40:
            swift_release();
            swift_release();
            return 0;
          }
        }
        else
        {
          sub_22D21E18C((uint64_t)v19, (uint64_t)v23, &qword_26853F998, MEMORY[0x263F502F0]);
          uint64_t v44 = v106;
          if (v43(v106, 1, v115) != 1)
          {
            uint64_t v46 = v114;
            uint64_t v45 = v115;
            (*(void (**)(char *, uint64_t, uint64_t))(v114 + 32))(v14, v44, v115);
            sub_22D21E3D0(&qword_26853FF70, MEMORY[0x263F502F0]);
            swift_retain();
            swift_retain();
            LODWORD(v106) = sub_22D2BCB90();
            uint64_t v47 = *(void (**)(char *, uint64_t))(v46 + 8);
            v47(v14, v45);
            uint64_t v48 = (uint64_t (*)(uint64_t))MEMORY[0x263F502F0];
            sub_22D21E20C((uint64_t)v25, &qword_26853F998, MEMORY[0x263F502F0]);
            v47(v23, v45);
            sub_22D21E20C((uint64_t)v19, &qword_26853F998, v48);
            if ((v106 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_29;
          }
          swift_retain();
          swift_retain();
          sub_22D21E20C((uint64_t)v25, &qword_26853F998, MEMORY[0x263F502F0]);
          (*(void (**)(char *, uint64_t))(v114 + 8))(v23, v115);
        }
        sub_22D22192C((uint64_t)v19, &qword_26853FF68, &qword_26853F998, MEMORY[0x263F502F0]);
        goto LABEL_40;
      }
    }
  }
  return result;
}

uint64_t PBState.hashValue.getter()
{
  return sub_22D21C8F8((void (*)(void))type metadata accessor for PBState, &qword_268542948, (void (*)(uint64_t))type metadata accessor for PBState);
}

uint64_t sub_22D21C8F8(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_22D2BD760();
}

uint64_t sub_22D21C980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D00F670(a1, &qword_26853D3C8, &qword_268542848, a2);
}

unint64_t sub_22D21C9A4()
{
  return 0xD000000000000025;
}

uint64_t sub_22D21C9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBState.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_22D21C9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBState.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D21C9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D21E3D0(&qword_268542B90, (void (*)(uint64_t))type metadata accessor for PBState);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D21CA6C@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D3C0, (uint64_t)qword_268542830, a1);
}

uint64_t sub_22D21CA90(uint64_t a1)
{
  uint64_t v2 = sub_22D21E3D0(&qword_268542AA0, (void (*)(uint64_t))type metadata accessor for PBState);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D21CAFC()
{
  sub_22D21E3D0(&qword_268542AA0, (void (*)(uint64_t))type metadata accessor for PBState);
  return sub_22D2BC200();
}

uint64_t _s19HealthRecordsDaemon5PBGeoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16))
  {
    uint64_t v11 = type metadata accessor for PBGeo(0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(v11 + 28), v4);
    v12(v8, a2 + *(int *)(v11 + 28), v4);
    sub_22D21E3D0(&qword_26853DB30, MEMORY[0x263F50560]);
    char v13 = sub_22D2BCB90();
    char v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s19HealthRecordsDaemon18PBUpdateParametersV10OneOf_DataO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v75 = a1;
  char v76 = a2;
  uint64_t v70 = type metadata accessor for PBOtherData(0);
  MEMORY[0x270FA5388](v70);
  uint64_t v71 = (uint64_t)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v74 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v73 = (uint64_t *)((char *)&v69 - v7);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v72 = (uint64_t *)((char *)&v69 - v9);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (uint64_t *)((char *)&v69 - v11);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (uint64_t *)((char *)&v69 - v14);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (uint64_t *)((char *)&v69 - v17);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (uint64_t *)((char *)&v69 - v20);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (uint64_t *)((char *)&v69 - v23);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (uint64_t *)((char *)&v69 - v25);
  sub_22D221A68();
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (uint64_t)&v30[*(int *)(v28 + 56)];
  sub_22D221ACC(v75, (uint64_t)v30, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v32 = (uint64_t)v76;
  char v76 = (uint64_t *)v31;
  sub_22D221ACC(v32, v31, type metadata accessor for PBUpdateParameters.OneOf_Data);
  uint64_t v33 = v30;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v34 = (uint64_t)v30;
      sub_22D221ACC((uint64_t)v30, (uint64_t)v24, type metadata accessor for PBUpdateParameters.OneOf_Data);
      uint64_t v38 = *v24;
      unint64_t v39 = v24[1];
      uint64_t v40 = v76;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_8;
      }
      goto LABEL_5;
    case 2u:
      uint64_t v34 = (uint64_t)v30;
      sub_22D221ACC((uint64_t)v30, (uint64_t)v21, type metadata accessor for PBUpdateParameters.OneOf_Data);
      uint64_t v38 = *v21;
      unint64_t v39 = v21[1];
      uint64_t v40 = v76;
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_8;
      }
      goto LABEL_5;
    case 3u:
      uint64_t v34 = (uint64_t)v30;
      sub_22D221ACC((uint64_t)v30, (uint64_t)v18, type metadata accessor for PBUpdateParameters.OneOf_Data);
      uint64_t v52 = *v18;
      unint64_t v51 = v18[1];
      unint64_t v53 = v76;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v55 = *v53;
        unint64_t v54 = v53[1];
        LOBYTE(v43) = sub_22D1158DC(v52, v51, v55, v54);
        sub_22CFF5630(v55, v54);
        uint64_t v44 = v52;
        unint64_t v45 = v51;
        goto LABEL_6;
      }
      uint64_t v47 = v52;
      unint64_t v48 = v51;
      goto LABEL_9;
    case 4u:
      sub_22D221ACC((uint64_t)v30, (uint64_t)v15, type metadata accessor for PBUpdateParameters.OneOf_Data);
      uint64_t v56 = *v15;
      unint64_t v57 = v15[1];
      uint64_t v58 = v76;
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v60 = *v58;
        unint64_t v59 = v58[1];
        LOBYTE(v43) = sub_22D1158DC(v56, v57, *v58, v59);
        sub_22CFF5630(v60, v59);
        sub_22CFF5630(v56, v57);
        uint64_t v61 = type metadata accessor for PBUpdateParameters.OneOf_Data;
      }
      else
      {
        sub_22CFF5630(v56, v57);
        LOBYTE(v43) = 0;
        uint64_t v61 = (uint64_t (*)(void))sub_22D221A68;
      }
      unint64_t v49 = v61;
      uint64_t v34 = (uint64_t)v33;
      goto LABEL_12;
    case 5u:
      uint64_t v34 = (uint64_t)v30;
      sub_22D221ACC((uint64_t)v30, (uint64_t)v12, type metadata accessor for PBUpdateParameters.OneOf_Data);
      uint64_t v38 = *v12;
      unint64_t v39 = v12[1];
      uint64_t v40 = v76;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_8;
      }
      goto LABEL_5;
    case 6u:
      uint64_t v34 = (uint64_t)v30;
      char v62 = v72;
      sub_22D221ACC((uint64_t)v30, (uint64_t)v72, type metadata accessor for PBUpdateParameters.OneOf_Data);
      uint64_t v38 = *v62;
      unint64_t v39 = v62[1];
      uint64_t v40 = v76;
      if (swift_getEnumCaseMultiPayload() == 6)
      {
LABEL_5:
        uint64_t v42 = *v40;
        unint64_t v41 = v40[1];
        LOBYTE(v43) = sub_22D1158DC(v38, v39, v42, v41);
        sub_22CFF5630(v42, v41);
        uint64_t v44 = v38;
        unint64_t v45 = v39;
LABEL_6:
        sub_22CFF5630(v44, v45);
        uint64_t v46 = type metadata accessor for PBUpdateParameters.OneOf_Data;
        break;
      }
LABEL_8:
      uint64_t v47 = v38;
      unint64_t v48 = v39;
LABEL_9:
      sub_22CFF5630(v47, v48);
      goto LABEL_10;
    case 7u:
      uint64_t v34 = (uint64_t)v30;
      uint64_t v63 = v73;
      sub_22D221ACC((uint64_t)v30, (uint64_t)v73, type metadata accessor for PBUpdateParameters.OneOf_Data);
      uint64_t v36 = *v63;
      uint64_t v35 = v63[1];
      char v37 = v76;
      if (swift_getEnumCaseMultiPayload() == 7) {
        goto LABEL_22;
      }
      goto LABEL_3;
    case 8u:
      uint64_t v34 = (uint64_t)v30;
      uint64_t v66 = v74;
      sub_22D221ACC((uint64_t)v30, v74, type metadata accessor for PBUpdateParameters.OneOf_Data);
      uint64_t v67 = (uint64_t)v76;
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        sub_22D211E8C(v66, type metadata accessor for PBOtherData);
        goto LABEL_10;
      }
      uint64_t v68 = v71;
      sub_22D221988(v67, v71, type metadata accessor for PBOtherData);
      if (*(_DWORD *)v66 == *(_DWORD *)v68
        && (*(void *)(v66 + 8) == *(void *)(v68 + 8) && *(void *)(v66 + 16) == *(void *)(v68 + 16)
         || (sub_22D2BD660() & 1) != 0))
      {
        sub_22D2BBFF0();
        sub_22D21E3D0(&qword_26853DB30, MEMORY[0x263F50560]);
        if (sub_22D2BCB90())
        {
          sub_22D211E8C(v68, type metadata accessor for PBOtherData);
          sub_22D211E8C(v66, type metadata accessor for PBOtherData);
          goto LABEL_39;
        }
      }
      sub_22D211E8C(v68, type metadata accessor for PBOtherData);
      sub_22D211E8C(v66, type metadata accessor for PBOtherData);
      LOBYTE(v43) = 0;
      uint64_t v46 = type metadata accessor for PBUpdateParameters.OneOf_Data;
      break;
    default:
      uint64_t v34 = (uint64_t)v30;
      sub_22D221ACC((uint64_t)v30, (uint64_t)v26, type metadata accessor for PBUpdateParameters.OneOf_Data);
      uint64_t v36 = *v26;
      uint64_t v35 = v26[1];
      char v37 = v76;
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_3:
        swift_bridgeObjectRelease();
LABEL_10:
        LOBYTE(v43) = 0;
        uint64_t v46 = (uint64_t (*)(void))sub_22D221A68;
      }
      else
      {
LABEL_22:
        if (v36 == *v37 && v35 == v37[1])
        {
          swift_bridgeObjectRelease_n();
LABEL_39:
          LOBYTE(v43) = 1;
          uint64_t v46 = type metadata accessor for PBUpdateParameters.OneOf_Data;
        }
        else
        {
          int v65 = sub_22D2BD660();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v43 = v65 << 31 >> 31;
          uint64_t v46 = type metadata accessor for PBUpdateParameters.OneOf_Data;
        }
      }
      break;
  }
  unint64_t v49 = v46;
LABEL_12:
  sub_22D211E8C(v34, v49);
  return v43 & 1;
}

uint64_t _s19HealthRecordsDaemon16PBPollParametersV2eeoiySbAC_ACtFZ_0(char *a1, uint64_t *a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *a2;
  if (*((unsigned char *)a2 + 8) == 1)
  {
    switch(v12)
    {
      case 1:
        if (v11 == 1) {
          goto LABEL_6;
        }
        goto LABEL_4;
      case 2:
        if (v11 == 2) {
          goto LABEL_6;
        }
        goto LABEL_4;
      case 3:
        if (v11 == 3) {
          goto LABEL_6;
        }
        goto LABEL_4;
      default:
        if (v11) {
          goto LABEL_4;
        }
        goto LABEL_6;
    }
  }
  if (v11 == v12)
  {
LABEL_6:
    BOOL v14 = *((void *)a1 + 2) == a2[2] && *((void *)a1 + 3) == a2[3];
    if (v14 || (char v13 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v15 = type metadata accessor for PBPollParameters(0);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, &a1[*(int *)(v15 + 24)], v4);
      v16(v8, (char *)a2 + *(int *)(v15 + 24), v4);
      sub_22D21E3D0(&qword_26853DB30, MEMORY[0x263F50560]);
      char v13 = sub_22D2BCB90();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
  }
  else
  {
LABEL_4:
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_22D21D7AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  BOOL v14 = (char *)&v23 - v13;
  uint64_t v15 = *(int *)(a3(0) + 20);
  uint64_t v16 = *(void *)(a1 + v15);
  uint64_t v17 = *(void *)(a2 + v15);
  if (v16 == v17
    || (swift_retain(), swift_retain(), char v18 = a4(v16, v17), swift_release(), swift_release(), (v18 & 1) != 0))
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v19(v14, a1, v8);
    v19(v12, a2, v8);
    sub_22D21E3D0(&qword_26853DB30, MEMORY[0x263F50560]);
    char v20 = sub_22D2BCB90();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v12, v8);
    v21(v14, v8);
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t _s19HealthRecordsDaemon11PBOtherDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    BOOL v11 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
    if (v11 || (char v12 = 0, (sub_22D2BD660() & 1) != 0))
    {
      uint64_t v13 = type metadata accessor for PBOtherData(0);
      BOOL v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v14(v10, a1 + *(int *)(v13 + 24), v4);
      v14(v8, a2 + *(int *)(v13 + 24), v4);
      sub_22D21E3D0(&qword_26853DB30, MEMORY[0x263F50560]);
      char v12 = sub_22D2BCB90();
      uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v8, v4);
      v15(v10, v4);
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_22D21DB84(uint64_t a1)
{
  sub_22D211E28(0, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v17[-v4];
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  *(void *)(v1 + 40) = 0xE000000000000000;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  uint64_t v7 = type metadata accessor for PBUpdateParameters.OneOf_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType;
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v9;
  *(unsigned char *)(v1 + 24) = v10;
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v11;
  *(void *)(v1 + 40) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__data;
  swift_beginAccess();
  sub_22D21E18C(v13, (uint64_t)v5, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_beginAccess();
  sub_22D21E2FC((uint64_t)v5, v6, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data);
  swift_endAccess();
  BOOL v14 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType);
  swift_beginAccess();
  uint64_t v15 = *v14;
  LOBYTE(v14) = *((unsigned char *)v14 + 8);
  swift_beginAccess();
  *(void *)uint64_t v8 = v15;
  *(unsigned char *)(v8 + 8) = (_BYTE)v14;
  return v1;
}

uint64_t type metadata accessor for PBUpdateParameters.OneOf_Data(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542AF0);
}

uint64_t type metadata accessor for PBUpdateStateRequest(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542B00);
}

uint64_t type metadata accessor for PBUpdateStateRequest._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542B60);
}

uint64_t type metadata accessor for PBStateResponse(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542B10);
}

uint64_t type metadata accessor for PBStateResponse._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542B70);
}

uint64_t sub_22D21DE94(uint64_t a1)
{
  uint64_t v21 = type metadata accessor for PBState;
  sub_22D211E28(0, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v20 - v4;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  uint64_t v7 = type metadata accessor for PBState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  *uint64_t v8 = 0;
  v8[1] = 0xE000000000000000;
  uint64_t v9 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v10;
  *(void *)(v1 + 24) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__state;
  swift_beginAccess();
  uint64_t v13 = v21;
  sub_22D21E18C(v12, (uint64_t)v5, &qword_268542898, v21);
  swift_beginAccess();
  sub_22D21E2FC((uint64_t)v5, v6, &qword_268542898, v13);
  swift_endAccess();
  BOOL v14 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__msg);
  swift_beginAccess();
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  swift_beginAccess();
  *uint64_t v8 = v16;
  v8[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
  swift_beginAccess();
  uint64_t v18 = *v17;
  LOBYTE(v17) = *((unsigned char *)v17 + 8);
  swift_beginAccess();
  *(void *)uint64_t v9 = v18;
  *(unsigned char *)(v9 + 8) = (_BYTE)v17;
  return v1;
}

uint64_t type metadata accessor for PBState(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542B30);
}

uint64_t type metadata accessor for PBGeo(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542B20);
}

uint64_t type metadata accessor for PBState._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542B80);
}

uint64_t sub_22D21E18C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D211E28(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D21E20C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D211E28(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D21E27C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D211E28(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D21E2FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D211E28(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

unint64_t sub_22D21E37C()
{
  unint64_t result = qword_268542908;
  if (!qword_268542908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542908);
  }
  return result;
}

uint64_t sub_22D21E3D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22D21E41C()
{
  unint64_t result = qword_268542950;
  if (!qword_268542950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542950);
  }
  return result;
}

unint64_t sub_22D21E474()
{
  unint64_t result = qword_268542958;
  if (!qword_268542958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542958);
  }
  return result;
}

unint64_t sub_22D21E4CC()
{
  unint64_t result = qword_268542960;
  if (!qword_268542960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542960);
  }
  return result;
}

uint64_t sub_22D21E520()
{
  return sub_22D108E48(&qword_268542968, &qword_268542970);
}

unint64_t sub_22D21E554()
{
  unint64_t result = qword_268542978;
  if (!qword_268542978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542978);
  }
  return result;
}

unint64_t sub_22D21E5AC()
{
  unint64_t result = qword_268542980;
  if (!qword_268542980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542980);
  }
  return result;
}

unint64_t sub_22D21E604()
{
  unint64_t result = qword_268542988;
  if (!qword_268542988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542988);
  }
  return result;
}

uint64_t sub_22D21E658()
{
  return sub_22D108E48(&qword_268542990, &qword_268542998);
}

unint64_t sub_22D21E68C()
{
  unint64_t result = qword_2685429A0;
  if (!qword_2685429A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685429A0);
  }
  return result;
}

unint64_t sub_22D21E6E4()
{
  unint64_t result = qword_2685429A8;
  if (!qword_2685429A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685429A8);
  }
  return result;
}

unint64_t sub_22D21E73C()
{
  unint64_t result = qword_2685429B0;
  if (!qword_2685429B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685429B0);
  }
  return result;
}

uint64_t sub_22D21E790()
{
  return sub_22D108E48(&qword_2685429B8, &qword_2685429C0);
}

unint64_t sub_22D21E7C4()
{
  unint64_t result = qword_2685429C8;
  if (!qword_2685429C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685429C8);
  }
  return result;
}

unint64_t sub_22D21E81C()
{
  unint64_t result = qword_2685429D0;
  if (!qword_2685429D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685429D0);
  }
  return result;
}

unint64_t sub_22D21E874()
{
  unint64_t result = qword_2685429D8;
  if (!qword_2685429D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685429D8);
  }
  return result;
}

uint64_t sub_22D21E8C8()
{
  return sub_22D108E48(&qword_2685429E0, &qword_2685429E8);
}

uint64_t sub_22D21E8F8()
{
  return sub_22D21E3D0(&qword_2685429F0, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
}

uint64_t sub_22D21E940()
{
  return sub_22D21E3D0(&qword_2685429F8, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
}

uint64_t sub_22D21E988()
{
  return sub_22D21E3D0(&qword_268542910, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
}

uint64_t sub_22D21E9D0()
{
  return sub_22D21E3D0(&qword_268542A00, (void (*)(uint64_t))type metadata accessor for PBPollParameters);
}

uint64_t sub_22D21EA18()
{
  return sub_22D21E3D0(&qword_268542A08, (void (*)(uint64_t))type metadata accessor for PBPollStateRequest);
}

uint64_t sub_22D21EA60()
{
  return sub_22D21E3D0(&qword_268542A10, (void (*)(uint64_t))type metadata accessor for PBPollStateRequest);
}

uint64_t sub_22D21EAA8()
{
  return sub_22D21E3D0(&qword_268542918, (void (*)(uint64_t))type metadata accessor for PBPollStateRequest);
}

uint64_t sub_22D21EAF0()
{
  return sub_22D21E3D0(&qword_268542A18, (void (*)(uint64_t))type metadata accessor for PBPollStateRequest);
}

uint64_t sub_22D21EB38()
{
  return sub_22D21E3D0(&qword_268542A20, (void (*)(uint64_t))type metadata accessor for PBOtherData);
}

uint64_t sub_22D21EB80()
{
  return sub_22D21E3D0(&qword_268542A28, (void (*)(uint64_t))type metadata accessor for PBOtherData);
}

uint64_t sub_22D21EBC8()
{
  return sub_22D21E3D0(&qword_268542920, (void (*)(uint64_t))type metadata accessor for PBOtherData);
}

uint64_t sub_22D21EC10()
{
  return sub_22D21E3D0(&qword_268542A30, (void (*)(uint64_t))type metadata accessor for PBOtherData);
}

uint64_t sub_22D21EC58()
{
  return sub_22D21E3D0(&qword_268542A38, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
}

uint64_t sub_22D21ECA0()
{
  return sub_22D21E3D0(&qword_268542A40, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
}

uint64_t sub_22D21ECE8()
{
  return sub_22D21E3D0(&qword_268542928, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
}

uint64_t sub_22D21ED30()
{
  return sub_22D21E3D0(&qword_268542A48, (void (*)(uint64_t))type metadata accessor for PBUpdateParameters);
}

uint64_t sub_22D21ED78()
{
  return sub_22D21E3D0(&qword_268542A50, (void (*)(uint64_t))type metadata accessor for PBUpdateStateRequest);
}

uint64_t sub_22D21EDC0()
{
  return sub_22D21E3D0(&qword_268542A58, (void (*)(uint64_t))type metadata accessor for PBUpdateStateRequest);
}

uint64_t sub_22D21EE08()
{
  return sub_22D21E3D0(&qword_268542930, (void (*)(uint64_t))type metadata accessor for PBUpdateStateRequest);
}

uint64_t sub_22D21EE50()
{
  return sub_22D21E3D0(&qword_268542A60, (void (*)(uint64_t))type metadata accessor for PBUpdateStateRequest);
}

uint64_t sub_22D21EE98()
{
  return sub_22D21E3D0(&qword_268542A68, (void (*)(uint64_t))type metadata accessor for PBStateResponse);
}

uint64_t sub_22D21EEE0()
{
  return sub_22D21E3D0(&qword_268542A70, (void (*)(uint64_t))type metadata accessor for PBStateResponse);
}

uint64_t sub_22D21EF28()
{
  return sub_22D21E3D0(&qword_268542938, (void (*)(uint64_t))type metadata accessor for PBStateResponse);
}

uint64_t sub_22D21EF70()
{
  return sub_22D21E3D0(&qword_268542A78, (void (*)(uint64_t))type metadata accessor for PBStateResponse);
}

uint64_t sub_22D21EFB8()
{
  return sub_22D21E3D0(&qword_268542A80, (void (*)(uint64_t))type metadata accessor for PBGeo);
}

uint64_t sub_22D21F000()
{
  return sub_22D21E3D0(&qword_268542A88, (void (*)(uint64_t))type metadata accessor for PBGeo);
}

uint64_t sub_22D21F048()
{
  return sub_22D21E3D0(&qword_268542940, (void (*)(uint64_t))type metadata accessor for PBGeo);
}

uint64_t sub_22D21F090()
{
  return sub_22D21E3D0(&qword_268542A90, (void (*)(uint64_t))type metadata accessor for PBGeo);
}

uint64_t sub_22D21F0D8()
{
  return sub_22D21E3D0(&qword_268542A98, (void (*)(uint64_t))type metadata accessor for PBState);
}

uint64_t sub_22D21F120()
{
  return sub_22D21E3D0(&qword_268542AA0, (void (*)(uint64_t))type metadata accessor for PBState);
}

uint64_t sub_22D21F168()
{
  return sub_22D21E3D0(&qword_268542948, (void (*)(uint64_t))type metadata accessor for PBState);
}

uint64_t sub_22D21F1B0()
{
  return sub_22D21E3D0(&qword_268542AA8, (void (*)(uint64_t))type metadata accessor for PBState);
}

uint64_t sub_22D21F1F8@<X0>(void *a1@<X8>)
{
  return PBPollStateRequest.blobAuth.getter(a1);
}

uint64_t sub_22D21F21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20FA78(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBPollStateRequest.blobAuth.setter);
}

uint64_t sub_22D21F274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20FA78(a1, a2, a3, a4, type metadata accessor for PBPollParameters, type metadata accessor for PBPollParameters, (uint64_t (*)(char *))PBPollStateRequest.pollParameters.setter);
}

uint64_t sub_22D21F2C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBUpdateParameters(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 24);
  *(void *)a2 = *(void *)(v3 + 16);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_22D21F33C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBUpdateParameters.accessCode.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22D21F368(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_26Tm(a1, a2, a3, a4, PBUpdateParameters.accessCode.setter);
}

uint64_t sub_22D21F380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBUpdateParameters.confirmationB.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22D21F3AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_28Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.confirmationB.setter);
}

uint64_t sub_22D21F3C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBUpdateParameters.pb.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22D21F3F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_28Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.pb.setter);
}

uint64_t sub_22D21F408@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBUpdateParameters.geoEncrypted.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22D21F434(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_28Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.geoEncrypted.setter);
}

uint64_t sub_22D21F44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBUpdateParameters.confirmationA.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22D21F478(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_28Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.confirmationA.setter);
}

uint64_t sub_22D21F490@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBUpdateParameters.lookupinfoEncrypted.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22D21F4BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_28Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.lookupinfoEncrypted.setter);
}

uint64_t sub_22D21F4D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBUpdateParameters.pa.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22D21F500(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_28Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))PBUpdateParameters.pa.setter);
}

uint64_t keypath_set_28Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t))
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  sub_22CFF9B64(*a1, v7);
  return a5(v6, v7);
}

uint64_t sub_22D21F564@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBUpdateParameters.rootDlid.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22D21F590(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_26Tm(a1, a2, a3, a4, PBUpdateParameters.rootDlid.setter);
}

uint64_t keypath_set_26Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

uint64_t sub_22D21F5F0@<X0>(uint64_t a1@<X8>)
{
  return PBUpdateParameters.otherData.getter(a1);
}

uint64_t sub_22D21F614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20FA78(a1, a2, a3, a4, type metadata accessor for PBOtherData, type metadata accessor for PBOtherData, (uint64_t (*)(char *))PBUpdateParameters.otherData.setter);
}

uint64_t sub_22D21F668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D20C45C(a1, type metadata accessor for PBUpdateParameters, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType, a2);
}

uint64_t sub_22D21F69C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20C4D4(a1, a2, a3, a4, type metadata accessor for PBUpdateParameters, (void (*)(void))type metadata accessor for PBUpdateParameters._StorageClass, sub_22D21DB84, &OBJC_IVAR____TtCV19HealthRecordsDaemon18PBUpdateParametersP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__eventType);
}

uint64_t sub_22D21F6F8@<X0>(void *a1@<X8>)
{
  return PBUpdateStateRequest.blobAuth.getter(a1);
}

uint64_t sub_22D21F71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20FA78(a1, a2, a3, a4, type metadata accessor for PBBlobAuth, type metadata accessor for PBBlobAuth, (uint64_t (*)(char *))PBUpdateStateRequest.blobAuth.setter);
}

uint64_t sub_22D21F774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20FA78(a1, a2, a3, a4, type metadata accessor for PBUpdateParameters, type metadata accessor for PBUpdateParameters, (uint64_t (*)(char *))PBUpdateStateRequest.updateParameters.setter);
}

uint64_t sub_22D21F7C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D20CD24(a1, type metadata accessor for PBStateResponse, a2);
}

uint64_t sub_22D21F7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20FA78(a1, a2, a3, a4, type metadata accessor for PBState, type metadata accessor for PBState, (uint64_t (*)(char *))PBStateResponse.state.setter);
}

uint64_t sub_22D21F858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D20C45C(a1, type metadata accessor for PBStateResponse, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode, a2);
}

uint64_t sub_22D21F88C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20C4D4(a1, a2, a3, a4, type metadata accessor for PBStateResponse, (void (*)(void))type metadata accessor for PBStateResponse._StorageClass, sub_22D21DE94, &OBJC_IVAR____TtCV19HealthRecordsDaemon15PBStateResponseP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__resultCode);
}

uint64_t sub_22D21F8E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D20CD24(a1, type metadata accessor for PBState, a2);
}

uint64_t sub_22D21F918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20));
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 40);
  *(void *)a2 = *(void *)(v3 + 32);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_22D21F98C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for PBState(0) + 20));
  uint64_t result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 80);
  return result;
}

uint64_t sub_22D21F9F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D20ECC4(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted, a2);
}

uint64_t sub_22D21FA10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20ED34(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__geoEncrypted);
}

uint64_t sub_22D21FA30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D20ECC4(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa, a2);
}

uint64_t sub_22D21FA50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20ED34(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pa);
}

uint64_t sub_22D21FA70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D20ECC4(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb, a2);
}

uint64_t sub_22D21FA90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20ED34(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__pb);
}

uint64_t sub_22D21FAB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D20ECC4(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA, a2);
}

uint64_t sub_22D21FAD0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20ED34(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationA);
}

uint64_t sub_22D21FAF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D20ECC4(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB, a2);
}

uint64_t sub_22D21FB10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20ED34(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__confirmationB);
}

uint64_t sub_22D21FB30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D20ECC4(a1, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted, a2);
}

uint64_t sub_22D21FB50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20ED34(a1, a2, a3, a4, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__lookupinfoEncrypted);
}

uint64_t sub_22D21FB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D20C45C(a1, type metadata accessor for PBState, &OBJC_IVAR____TtCV19HealthRecordsDaemon7PBStateP33_E538808127C87CE383BCBD536FE36D2A13_StorageClass__step, a2);
}

uint64_t sub_22D21FBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D20FA78(a1, a2, a3, a4, type metadata accessor for PBOtherData, type metadata accessor for PBOtherData, (uint64_t (*)(char *))PBState.otherData.setter);
}

ValueMetadata *type metadata accessor for PBActor()
{
  return &type metadata for PBActor;
}

ValueMetadata *type metadata accessor for PBEventType()
{
  return &type metadata for PBEventType;
}

ValueMetadata *type metadata accessor for PBStep()
{
  return &type metadata for PBStep;
}

void *initializeBufferWithCopyOfBuffer for PBPollParameters(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_22D2BBFF0();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBPollParameters(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBPollParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBPollParameters(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PBPollParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBPollParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPollParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D220030);
}

uint64_t sub_22D220030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBPollParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D2200F4);
}

uint64_t sub_22D2200F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D22019C()
{
  return sub_22D2206B4();
}

uint64_t getEnumTagSinglePayload for PBPollStateRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_38);
}

uint64_t storeEnumTagSinglePayload for PBPollStateRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_38);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBOtherData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_22D2BBFF0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t initializeWithCopy for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_22D2BBFF0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D220538);
}

uint64_t sub_22D220538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBFF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBOtherData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D2205FC);
}

uint64_t sub_22D2205FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBFF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D2206A4()
{
  return sub_22D2206B4();
}

uint64_t sub_22D2206B4()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBUpdateParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_39);
}

uint64_t storeEnumTagSinglePayload for PBUpdateParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_39);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBUpdateParameters.OneOf_Data(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v9 = *a2;
        unint64_t v8 = a2[1];
        sub_22CFF9B64(v9, v8);
        *a1 = v9;
        a1[1] = v8;
        break;
      case 8u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v10 = a2[2];
        a1[1] = a2[1];
        a1[2] = v10;
        uint64_t v11 = *(int *)(type metadata accessor for PBOtherData(0) + 24);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_22D2BBFF0();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PBUpdateParameters.OneOf_Data(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      uint64_t v3 = *a1;
      unint64_t v4 = a1[1];
      uint64_t result = sub_22CFF5630(v3, v4);
      break;
    case 8:
      swift_bridgeObjectRelease();
      int v5 = (char *)a1 + *(int *)(type metadata accessor for PBOtherData(0) + 24);
      uint64_t v6 = sub_22D2BBFF0();
      uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t result = v7(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for PBUpdateParameters.OneOf_Data(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t v5 = *a2;
      unint64_t v4 = a2[1];
      sub_22CFF9B64(v5, v4);
      *a1 = v5;
      a1[1] = v4;
      break;
    case 8u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v7 = a2[2];
      a1[1] = a2[1];
      a1[2] = v7;
      uint64_t v8 = *(int *)(type metadata accessor for PBOtherData(0) + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_22D2BBFF0();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      break;
    default:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for PBUpdateParameters.OneOf_Data(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_22D211E8C((uint64_t)a1, type metadata accessor for PBUpdateParameters.OneOf_Data);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v5 = *a2;
        unint64_t v4 = a2[1];
        sub_22CFF9B64(v5, v4);
        *a1 = v5;
        a1[1] = v4;
        break;
      case 8u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v6 = *(int *)(type metadata accessor for PBOtherData(0) + 24);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_22D2BBFF0();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for PBUpdateParameters.OneOf_Data(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 8)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    uint64_t v6 = *(int *)(type metadata accessor for PBOtherData(0) + 24);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = sub_22D2BBFF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for PBUpdateParameters.OneOf_Data(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22D211E8C((uint64_t)a1, type metadata accessor for PBUpdateParameters.OneOf_Data);
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v6 = *(int *)(type metadata accessor for PBOtherData(0) + 24);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = sub_22D2BBFF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22D221090()
{
  uint64_t result = type metadata accessor for PBOtherData(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBUpdateStateRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_40);
}

uint64_t storeEnumTagSinglePayload for PBUpdateStateRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_40);
}

uint64_t getEnumTagSinglePayload for PBStateResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_41);
}

uint64_t storeEnumTagSinglePayload for PBStateResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_41);
}

ValueMetadata *type metadata accessor for PBStateResponse.ResultCode()
{
  return &type metadata for PBStateResponse.ResultCode;
}

uint64_t getEnumTagSinglePayload for PBGeo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D2211BC);
}

uint64_t sub_22D2211BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = sub_22D2BBFF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PBGeo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D221240);
}

uint64_t sub_22D221240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_22D2212B4()
{
  uint64_t result = sub_22D2BBFF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_52Tm_42);
}

uint64_t storeEnumTagSinglePayload for PBState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_53Tm_42);
}

uint64_t sub_22D221390()
{
  return type metadata accessor for PBPollStateRequest._StorageClass(0);
}

void sub_22D221398(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_22D2213B8()
{
  return type metadata accessor for PBUpdateParameters._StorageClass(0);
}

void sub_22D2213C0()
{
  sub_22D211E28(319, &qword_268542870, type metadata accessor for PBUpdateParameters.OneOf_Data, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D221494()
{
  return type metadata accessor for PBUpdateStateRequest._StorageClass(0);
}

void sub_22D22149C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_22D2214BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  sub_22D211E28(319, &qword_26853F988, type metadata accessor for PBBlobAuth, MEMORY[0x263F8D8F0]);
  if (v7 <= 0x3F)
  {
    sub_22D211E28(319, a4, a5, MEMORY[0x263F8D8F0]);
    if (v8 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_22D2215E4()
{
  return type metadata accessor for PBStateResponse._StorageClass(0);
}

void sub_22D2215EC()
{
  sub_22D211E28(319, &qword_268542898, type metadata accessor for PBState, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_22D2216C4()
{
  return type metadata accessor for PBState._StorageClass(0);
}

void sub_22D2216CC()
{
  sub_22D211E28(319, &qword_26853F998, MEMORY[0x263F502F0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_22D211E28(319, &qword_2685428F8, type metadata accessor for PBOtherData, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

unint64_t sub_22D221830()
{
  unint64_t result = qword_268542BD0;
  if (!qword_268542BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542BD0);
  }
  return result;
}

unint64_t sub_22D221884()
{
  unint64_t result = qword_268542BD8;
  if (!qword_268542BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542BD8);
  }
  return result;
}

unint64_t sub_22D2218D8()
{
  unint64_t result = qword_268542BE0;
  if (!qword_268542BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542BE0);
  }
  return result;
}

uint64_t sub_22D22192C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D2219F0(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_22D221988(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22D2219F0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_22D211E28(255, a3, a4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_22D221A68()
{
  if (!qword_268542C10)
  {
    type metadata accessor for PBUpdateParameters.OneOf_Data(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268542C10);
    }
  }
}

uint64_t sub_22D221ACC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

HealthRecordsDaemon::HTTPHeader_optional __swiftcall HKClinicalGatewayEndpointSchemaParameter.asHTTPHeader(using:)(Swift::OpaquePointer_optional using)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_22D221D78((uint64_t)using.value._rawValue);
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    id v8 = objc_msgSend(v2, sel_param);
    uint64_t v9 = sub_22D2BCBD0();
    uint64_t v11 = v10;

    *uint64_t v3 = v9;
    v3[1] = v11;
    v3[2] = v6;
    v3[3] = v7;
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_22D2BC390();
    __swift_project_value_buffer(v16, (uint64_t)qword_26AEC3C90);
    id v17 = v2;
    uint64_t v18 = sub_22D2BC380();
    os_log_type_t v19 = sub_22D2BD050();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      id v22 = objc_msgSend(v17, sel_param);
      uint64_t v23 = sub_22D2BCBD0();
      unint64_t v25 = v24;

      sub_22D0A4D24(v23, v25, &v26);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v18, v19, "HKClinicalGatewayEndpointSchemaParameter.asHTTPHeader: no value found for parameter %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v21, -1, -1);
      MEMORY[0x230F7BDF0](v20, -1, -1);
    }
    else
    {
    }
    *(_OWORD *)uint64_t v3 = 0u;
    *((_OWORD *)v3 + 1) = 0u;
  }
  result.value.value._object = v15;
  result.value.value._countAndFlagsBits = v14;
  result.value.name._object = v13;
  result.value.name._countAndFlagsBits = v12;
  return result;
}

uint64_t sub_22D221D78(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_literal);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_22D2BCBD0();
  }
  else if (a1)
  {
    return sub_22D221FA8(a1);
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_22D2BC390();
    __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
    id v7 = v1;
    id v8 = sub_22D2BC380();
    os_log_type_t v9 = sub_22D2BD050();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      id v12 = objc_msgSend(v7, sel_param);
      uint64_t v13 = sub_22D2BCBD0();
      unint64_t v15 = v14;

      sub_22D0A4D24(v13, v15, &v17);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v8, v9, "HKClinicalGatewayEndpointSchemaParameter.paramValue: %s has no literal value and no substitusions is nil.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v11, -1, -1);
      MEMORY[0x230F7BDF0](v10, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v5;
}

uint64_t sub_22D221FA8(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_variable);
  if (!v4) {
    goto LABEL_6;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_22D2BCBD0();
  id v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  ContentVariables.init(rawValue:)(v9);
  if (v24 == 12) {
    goto LABEL_6;
  }
  if (*(void *)(a1 + 16) && (unint64_t v10 = sub_22D04ED0C(v24), (v11 & 1) != 0))
  {
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 16 * v10);
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_6:
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_22D2BC390();
    __swift_project_value_buffer(v13, (uint64_t)qword_26AEC3C90);
    id v14 = v2;
    unint64_t v15 = sub_22D2BC380();
    os_log_type_t v16 = sub_22D2BD050();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v24 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      id v19 = objc_msgSend(v14, sel_param);
      uint64_t v20 = sub_22D2BCBD0();
      unint64_t v22 = v21;

      sub_22D0A4D24(v20, v22, &v24);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v15, v16, "HKClinicalGatewayEndpointSchemaParameter.variableValue: %s no substitusions to apply.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v18, -1, -1);
      MEMORY[0x230F7BDF0](v17, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v12;
}

uint64_t sub_22D222200@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((unint64_t)(result - 1) > 0xC) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = qword_22D2D1F00[result - 1];
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_22D222230@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a3;
  unint64_t v45 = a2;
  uint64_t v4 = sub_22D2BBAA0();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D222EEC(0, &qword_26853F978, (void (*)(uint64_t))type metadata accessor for PBBlobs);
  MEMORY[0x270FA5388](v7 - 8);
  Swift::String v9 = (char *)&v37 - v8;
  uint64_t v10 = type metadata accessor for PBBlobs(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PBPushBlobsRequest(0);
  MEMORY[0x270FA5388](v14);
  os_log_type_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D222F40(&qword_26853FB88, (void (*)(uint64_t))type metadata accessor for PBPushBlobsRequest);
  uint64_t v17 = v47;
  uint64_t result = sub_22D2BC1E0();
  if (!v17)
  {
    uint64_t v38 = (uint64_t *)v13;
    unint64_t v39 = v16;
    uint64_t v40 = v11;
    uint64_t v41 = v19;
    uint64_t v42 = result;
    uint64_t v43 = 0;
    uint64_t v47 = v6;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_22D2BC390();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
    uint64_t v21 = (uint64_t)v39;
    sub_22D222F88(a1, (uint64_t)v39, type metadata accessor for PBPushBlobsRequest);
    unint64_t v22 = sub_22D2BC380();
    os_log_type_t v23 = sub_22D2BD050();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v40;
    if (v24)
    {
      uint64_t v26 = (uint64_t)v9;
      os_log_type_t v27 = v23;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134217984;
      uint64_t v29 = *(void *)(v21 + *(int *)(v14 + 20))
          + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
      swift_beginAccess();
      sub_22D222DC4(v29, v26, &qword_26853F978, (void (*)(uint64_t))type metadata accessor for PBBlobs);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v26, 1, v10) == 1)
      {
        uint64_t v30 = v38;
        *uint64_t v38 = MEMORY[0x263F8EE78];
        sub_22D2BBFE0();
        sub_22D222E30(v26, &qword_26853F978, (void (*)(uint64_t))type metadata accessor for PBBlobs);
      }
      else
      {
        uint64_t v30 = v38;
        sub_22D222FF0(v26, (uint64_t)v38, type metadata accessor for PBBlobs);
      }
      uint64_t v31 = *v30;
      swift_bridgeObjectRetain();
      sub_22D222E8C((uint64_t)v30, type metadata accessor for PBBlobs);
      uint64_t v32 = *(void *)(v31 + 16);
      swift_bridgeObjectRelease();
      sub_22D222E8C(v21, type metadata accessor for PBPushBlobsRequest);
      uint64_t v48 = v32;
      sub_22D2BD220();
      _os_log_impl(&dword_22CFEE000, v22, v27, "Creating PushBlobRequest. Count: %ld", v28, 0xCu);
      MEMORY[0x230F7BDF0](v28, -1, -1);
    }
    else
    {
      sub_22D222E8C(v21, type metadata accessor for PBPushBlobsRequest);
    }
    uint64_t v33 = v45;
    uint64_t v34 = v44;
    uint64_t v35 = v47;

    uint64_t v36 = __swift_project_boxed_opaque_existential_1(v33, v33[3]);
    (*(void (**)(char *, void *, uint64_t))(v34 + 16))(v35, v36, v4);
    sub_22D2BB560();
    sub_22D2BB530();
    type metadata accessor for ClinicalSharingCloudStandardAPI();
    swift_bridgeObjectRetain();
    sub_22D2BB520();
    sub_22D2BB5A0();
    sub_22D2BB5A0();
    return sub_22D2BB590();
  }
  return result;
}

uint64_t sub_22D2227B0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_22D222D68(a1, a2, sub_22D08B870, a3);
}

uint64_t sub_22D2227C8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v46 = a2;
  uint64_t v4 = sub_22D2BBAA0();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D222EEC(0, &qword_26853F9C0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
  MEMORY[0x270FA5388](v7 - 8);
  Swift::String v9 = (char *)&v39 - v8;
  uint64_t v10 = type metadata accessor for PBDeleteBlobs(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PBDeleteBlobsRequest(0);
  MEMORY[0x270FA5388](v14);
  os_log_type_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D222F40(&qword_26853FC50, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsRequest);
  uint64_t v17 = v49;
  uint64_t result = sub_22D2BC1E0();
  if (!v17)
  {
    uint64_t v40 = (uint64_t *)v13;
    uint64_t v41 = v16;
    uint64_t v42 = v11;
    uint64_t v43 = v19;
    uint64_t v44 = result;
    uint64_t v45 = 0;
    unint64_t v49 = v6;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_22D2BC390();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
    uint64_t v21 = (uint64_t)v41;
    sub_22D222F88(a1, (uint64_t)v41, type metadata accessor for PBDeleteBlobsRequest);
    unint64_t v22 = sub_22D2BC380();
    os_log_type_t v23 = sub_22D2BD050();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v42;
    if (v24)
    {
      uint64_t v26 = (uint64_t)v9;
      os_log_type_t v27 = v23;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134217984;
      uint64_t v29 = *(void *)(v21 + *(int *)(v14 + 20))
          + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
      swift_beginAccess();
      sub_22D222DC4(v29, v26, &qword_26853F9C0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v26, 1, v10) == 1)
      {
        uint64_t v30 = v40;
        uint64_t *v40 = MEMORY[0x263F8EE78];
        sub_22D2BBFE0();
        sub_22D222E30(v26, &qword_26853F9C0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
      }
      else
      {
        uint64_t v30 = v40;
        sub_22D222FF0(v26, (uint64_t)v40, type metadata accessor for PBDeleteBlobs);
      }
      uint64_t v31 = *v30;
      swift_bridgeObjectRetain();
      sub_22D222E8C((uint64_t)v30, type metadata accessor for PBDeleteBlobs);
      uint64_t v32 = *(void *)(v31 + 16);
      swift_bridgeObjectRelease();
      sub_22D222E8C(v21, type metadata accessor for PBDeleteBlobsRequest);
      uint64_t v50 = v32;
      sub_22D2BD220();
      _os_log_impl(&dword_22CFEE000, v22, v27, "Creating DeleteBlobRequest. Count: %ld", v28, 0xCu);
      MEMORY[0x230F7BDF0](v28, -1, -1);
    }
    else
    {
      sub_22D222E8C(v21, type metadata accessor for PBDeleteBlobsRequest);
    }
    uint64_t v33 = v47;
    uint64_t v34 = v4;
    uint64_t v35 = v49;
    uint64_t v36 = v46;

    uint64_t v37 = (char *)__swift_project_boxed_opaque_existential_1(v36, v36[3]);
    uint64_t v38 = type metadata accessor for ClinicalSharingCloudStandardAPI();
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v35, &v37[*(int *)(v38 + 20)], v34);
    sub_22D2BB560();
    sub_22D2BB530();
    swift_bridgeObjectRetain();
    sub_22D2BB520();
    sub_22D2BB5A0();
    sub_22D2BB5A0();
    return sub_22D2BB590();
  }
  return result;
}

uint64_t sub_22D222D50@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_22D222D68(a1, a2, sub_22D08C7AC, a3);
}

uint64_t sub_22D222D68@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t result = a3(a1, 3);
  *a4 = result;
  return result;
}

uint64_t sub_22D222DC4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D222EEC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D222E30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D222EEC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D222E8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_22D222EEC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D222F40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D222F88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D222FF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D223058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v14 = sub_22D2BBC90();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4B00(a1, (uint64_t)a7);
  a7[5] = a2;
  a7[6] = a3;
  a7[7] = a4;
  a7[8] = a5;
  uint64_t v18 = (int *)type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  uint64_t v19 = (char *)a7 + v18[7];
  uint64_t v20 = sub_22D2BBC30();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a6, v20);
  *((unsigned char *)a7 + v18[8]) = HKImproveHealthAndActivityAnalyticsAllowed();
  uint64_t v36 = (uint64_t)v18;
  sub_22D227368();
  uint64_t v36 = sub_22D2BCC30();
  uint64_t v37 = v22;
  sub_22D2BCCB0();
  sub_22D2BBC80();
  sub_22D2BBC40();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v23 = sub_22D07051C(8);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  MEMORY[0x230F7A8B0](v23, v25, v27, v29);
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  uint64_t v30 = v36;
  uint64_t v31 = v37;
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a6, v20);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v35);
  uint64_t v33 = (void *)((char *)a7 + v18[9]);
  uint64_t *v33 = v30;
  v33[1] = v31;
  return result;
}

uint64_t sub_22D2232B0()
{
  uint64_t v1 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  uint64_t v80 = *(void *)(v1 - 8);
  uint64_t v2 = *(void *)(v80 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = MEMORY[0x263F8D4F8];
  sub_22D226C04(0, &qword_268542C18, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263F8D4F8], (void (*)(void))sub_22D0DFCE8);
  uint64_t v61 = v4;
  uint64_t v64 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v60 = (char *)&v55 - v5;
  sub_22D223CB8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v6);
  char v62 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D223F14(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v68 = v9;
  uint64_t v69 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D223F7C(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v71 = v12;
  uint64_t v72 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v79 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D223FB0(0, &qword_268542C60, sub_22D223F7C, (void (*)(void))sub_22D2240A4);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v73 = v15;
  uint64_t v74 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v67 = (char *)&v55 - v17;
  sub_22D2240D8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v75 = v18;
  uint64_t v76 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v70 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4B00(v0, (uint64_t)v81);
  uint64_t v21 = swift_allocObject();
  sub_22CFF8C10(v81, v21 + 16);
  sub_22D223D94(0, (unint64_t *)&qword_26AEC1E28, v3, MEMORY[0x263EFDE20]);
  swift_allocObject();
  *(void *)&v81[0] = sub_22D2BC6F0();
  sub_22D0E3160();
  uint64_t v22 = sub_22D2BC720();
  swift_release();
  *(void *)&v81[0] = v22;
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D223D94(0, (unint64_t *)&qword_26AEC1DE0, v3, MEMORY[0x263EFDCF0]);
  sub_22D0DFCE8();
  sub_22D2BC780();
  swift_release();
  uint64_t v24 = v0;
  sub_22D2264D4(v0, (uint64_t)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = *(unsigned __int8 *)(v80 + 80);
  uint64_t v26 = (v25 + 16) & ~v25;
  uint64_t v80 = v26;
  uint64_t v77 = v26 + v2;
  uint64_t v57 = v25 | 7;
  uint64_t v27 = swift_allocObject();
  unint64_t v59 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask;
  uint64_t v28 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D22683C((uint64_t)v28, v27 + v26, (uint64_t (*)(void))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  sub_22D223D94(0, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, v23);
  uint64_t v78 = v29;
  sub_22D223E14();
  unint64_t v30 = sub_22D223E98();
  uint64_t v31 = v62;
  uint64_t v32 = v61;
  unint64_t v58 = v30;
  uint64_t v33 = v60;
  sub_22D2BC7A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v33, v32);
  uint64_t v34 = v24;
  uint64_t v56 = v24;
  uint64_t v55 = v28;
  sub_22D2264D4(v24, (uint64_t)v28);
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v80;
  uint64_t v37 = v59;
  sub_22D22683C((uint64_t)v28, v35 + v80, (uint64_t (*)(void))v59);
  sub_22D2BC5D0();
  sub_22D223F48();
  uint64_t v38 = v63;
  uint64_t v39 = v65;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v39);
  uint64_t v40 = (uint64_t)v55;
  sub_22D2264D4(v34, (uint64_t)v55);
  uint64_t v41 = swift_allocObject();
  sub_22D22683C(v40, v41 + v36, (uint64_t (*)(void))v37);
  sub_22D2BC5D0();
  sub_22D224070();
  uint64_t v42 = v68;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v42);
  uint64_t v43 = v56;
  uint64_t v44 = v40;
  sub_22D2264D4(v56, v40);
  uint64_t v45 = swift_allocObject();
  sub_22D22683C(v40, v45 + v80, (uint64_t (*)(void))v37);
  sub_22D2BC5D0();
  sub_22D2240A4();
  uint64_t v46 = v67;
  uint64_t v47 = v71;
  uint64_t v48 = v79;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v47);
  sub_22D2264D4(v43, v44);
  uint64_t v49 = swift_allocObject();
  sub_22D22683C(v44, v49 + v80, (uint64_t (*)(void))v37);
  sub_22D021C20(0, &qword_26AEC1270);
  sub_22D224194();
  uint64_t v50 = v70;
  uint64_t v51 = v73;
  sub_22D2BC780();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v51);
  sub_22D22717C(&qword_268542C80, (void (*)(uint64_t))sub_22D2240D8);
  uint64_t v52 = v75;
  uint64_t v53 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v50, v52);
  return v53;
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSubmissionTask()
{
  uint64_t result = qword_268542D08;
  if (!qword_268542D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22D223CB8()
{
  if (!qword_268542C20)
  {
    sub_22D226C04(255, &qword_268542C18, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263F8D4F8], (void (*)(void))sub_22D0DFCE8);
    sub_22D223D94(255, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDCF0]);
    sub_22D223E14();
    sub_22D223E98();
    unint64_t v0 = sub_22D2BC4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542C20);
    }
  }
}

void sub_22D223D94(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v8 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_22D223E14()
{
  unint64_t result = qword_268542C30;
  if (!qword_268542C30)
  {
    sub_22D226C04(255, &qword_268542C18, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263F8D4F8], (void (*)(void))sub_22D0DFCE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542C30);
  }
  return result;
}

unint64_t sub_22D223E98()
{
  unint64_t result = qword_268542C38;
  if (!qword_268542C38)
  {
    sub_22D223D94(255, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542C38);
  }
  return result;
}

void sub_22D223F14(uint64_t a1)
{
}

uint64_t sub_22D223F48()
{
  return sub_22D22717C(&qword_268542C48, (void (*)(uint64_t))sub_22D223CB8);
}

void sub_22D223F7C(uint64_t a1)
{
}

void sub_22D223FB0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    sub_22D223D94(255, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_22D223E98();
    a4();
    unint64_t v7 = sub_22D2BC520();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D224070()
{
  return sub_22D22717C(&qword_268542C58, sub_22D223F14);
}

uint64_t sub_22D2240A4()
{
  return sub_22D22717C(&qword_268542C68, sub_22D223F7C);
}

void sub_22D2240D8()
{
  if (!qword_268542C70)
  {
    sub_22D223FB0(255, &qword_268542C60, sub_22D223F7C, (void (*)(void))sub_22D2240A4);
    sub_22D021C20(255, &qword_26AEC1270);
    sub_22D224194();
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542C70);
    }
  }
}

unint64_t sub_22D224194()
{
  unint64_t result = qword_268542C78;
  if (!qword_268542C78)
  {
    sub_22D223FB0(255, &qword_268542C60, sub_22D223F7C, (void (*)(void))sub_22D2240A4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542C78);
  }
  return result;
}

unsigned char *sub_22D22421C@<X0>(unsigned char *result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_22D224238@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_22D226B3C(0, &qword_268542CA8, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDDF8]);
  uint64_t v7 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v37 - v8;
  sub_22D223D94(0, &qword_268542CB0, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDEA0]);
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_22D2BC390();
  __swift_project_value_buffer(v17, (uint64_t)qword_26AEC3C90);
  sub_22D2264D4(a2, (uint64_t)v15);
  id v18 = v16;
  id v19 = v16;
  uint64_t v20 = sub_22D2BC380();
  os_log_type_t v21 = sub_22D2BD050();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v44 = v38;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v39 = v7;
    uint64_t v40 = a3;
    uint64_t v23 = (uint64_t *)&v15[*(int *)(v13 + 36)];
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_22D0A4D24(v24, v25, &v44);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D226A04((uint64_t)v15);
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v45 = (uint64_t)v16;
    id v26 = v16;
    id v27 = v16;
    sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
    sub_22D2BD680();
    id v28 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v29 = sub_22D2BCC30();
    unint64_t v31 = v30;

    uint64_t v32 = v29;
    a3 = v40;
    uint64_t v45 = sub_22D0A4D24(v32, v31, &v44);
    sub_22D2BD220();
    uint64_t v7 = v39;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v20, v21, "%s Could not retrieve AnalyticsOptInState %s", (uint8_t *)v22, 0x16u);
    uint64_t v33 = v38;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v33, -1, -1);
    MEMORY[0x230F7BDF0](v22, -1, -1);
  }
  else
  {
    sub_22D226A04((uint64_t)v15);
  }
  LOBYTE(v45) = 2;
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  char v48 = 1;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  sub_22D2BC6B0();
  sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v7);
  sub_22D226B88();
  uint64_t v34 = v42;
  uint64_t v35 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v12, v34);
  *a3 = v35;
  return result;
}

uint64_t sub_22D22472C@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v66 = a3;
  sub_22D021DE0();
  uint64_t v59 = v5;
  uint64_t v58 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D226EDC();
  uint64_t v8 = v7;
  uint64_t v65 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D227064();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v64 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  uint64_t v60 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v61 = v16;
  uint64_t v62 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v53 - v17;
  long long v19 = a1[1];
  long long v69 = *a1;
  long long v70 = v19;
  long long v71 = a1[2];
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_22D2BC390();
  __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
  sub_22D2264D4((uint64_t)a2, (uint64_t)v18);
  os_log_type_t v21 = sub_22D2BC380();
  os_log_type_t v22 = sub_22D2BD050();
  if (os_log_type_enabled(v21, v22))
  {
    unint64_t v54 = a2;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v56 = v11;
    uint64_t v25 = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    v68[0] = v24;
    id v26 = (uint64_t *)&v18[*(int *)(v14 + 36)];
    uint64_t v55 = v8;
    uint64_t v27 = v12;
    uint64_t v28 = *v26;
    unint64_t v29 = v26[1];
    swift_bridgeObjectRetain();
    v73[0] = sub_22D0A4D24(v28, v29, v68);
    a2 = v54;
    sub_22D2BD220();
    uint64_t v12 = v27;
    uint64_t v8 = v55;
    swift_bridgeObjectRelease();
    sub_22D226A04((uint64_t)v18);
    _os_log_impl(&dword_22CFEE000, v21, v22, "%s Retrieving HKClinicalAccount list", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v11 = v56;
    MEMORY[0x230F7BDF0](v30, -1, -1);
    MEMORY[0x230F7BDF0](v23, -1, -1);
  }
  else
  {
    sub_22D226A04((uint64_t)v18);
  }

  unint64_t v31 = (void *)__swift_project_boxed_opaque_existential_1(a2, a2[3])[2];
  v68[3] = (uint64_t)&type metadata for ClinicalSharingAccountStore;
  v68[4] = (uint64_t)&off_26E05DAE8;
  v68[0] = (uint64_t)v31;
  uint64_t v32 = (void *)*__swift_project_boxed_opaque_existential_1(v68, (uint64_t)&type metadata for ClinicalSharingAccountStore);
  uint64_t v33 = (uint64_t)a2;
  *(void *)(swift_allocObject() + 16) = v32;
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDE20];
  sub_22D226F98(0, (unint64_t *)&qword_26AEC1E18, MEMORY[0x263EFDE20]);
  sub_22D227020((unint64_t *)&qword_26AEC1E10, (unint64_t *)&qword_26AEC1E18, v34);
  id v35 = v31;
  id v36 = v32;
  uint64_t v37 = v57;
  sub_22D2BC700();
  sub_22D22717C(&qword_26AEC1E30, (void (*)(uint64_t))sub_22D021DE0);
  uint64_t v38 = v59;
  uint64_t v39 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v38);
  uint64_t v67 = v39;
  sub_22D22683C((uint64_t)&v69 + 8, (uint64_t)v72, (uint64_t (*)(void))sub_22D0E40D4);
  sub_22D226A60((uint64_t)&v71, (uint64_t)v73);
  uint64_t v40 = (_OWORD *)swift_allocObject();
  long long v41 = v70;
  v40[1] = v69;
  v40[2] = v41;
  v40[3] = v71;
  sub_22D0E4188((uint64_t)v72);
  sub_22D226AF4((uint64_t)v73);
  uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D226F98(0, &qword_26AEC1DC8, MEMORY[0x263EFDCF0]);
  sub_22D227020((unint64_t *)&qword_26AEC1DC0, &qword_26AEC1DC8, v42);
  uint64_t v43 = v63;
  sub_22D2BC780();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  uint64_t v44 = v62;
  sub_22D2264D4(v33, v62);
  unint64_t v45 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  unint64_t v46 = (v61 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v47 = swift_allocObject();
  sub_22D22683C(v44, v47 + v45, (uint64_t (*)(void))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  char v48 = (_OWORD *)(v47 + v46);
  long long v49 = v70;
  _OWORD *v48 = v69;
  v48[1] = v49;
  v48[2] = v71;
  sub_22D0E4188((uint64_t)v72);
  sub_22D226AF4((uint64_t)v73);
  sub_22D223D94(0, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDCF0]);
  sub_22D22717C(&qword_268542CF0, (void (*)(uint64_t))sub_22D226EDC);
  sub_22D223E98();
  uint64_t v50 = v64;
  sub_22D2BC7A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v8);
  sub_22D22717C(&qword_268542CF8, (void (*)(uint64_t))sub_22D227064);
  uint64_t v51 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v50, v11);
  *uint64_t v66 = v51;
  return result;
}

uint64_t sub_22D224F7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)a3 = *(unsigned char *)a2;
  *(void *)(a3 + 8) = v3;
  *(void *)(a3 + 16) = v4;
  *(unsigned char *)(a3 + 24) = v5;
  *(void *)(a3 + 32) = v7;
  *(void *)(a3 + 40) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D224FD4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_22D225D08(a1, a2, a3, "%s Could not retrieve HKClinicalAccount list %s", a4);
}

uint64_t sub_22D224FE0@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a3;
  sub_22D226C04(0, &qword_268542CC0, &qword_26AEC2218, MEMORY[0x263F8D6C8], (void (*)(void))sub_22D0E3880);
  uint64_t v48 = v5;
  uint64_t v54 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v52 = (char *)&v45 - v6;
  sub_22D226C94();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v50 = v13;
  uint64_t v51 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v45 - v14;
  long long v16 = a1[1];
  long long v57 = *a1;
  long long v58 = v16;
  long long v59 = a1[2];
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_22D2BC390();
  __swift_project_value_buffer(v17, (uint64_t)qword_26AEC3C90);
  sub_22D2264D4((uint64_t)a2, (uint64_t)v15);
  id v18 = sub_22D2BC380();
  os_log_type_t v19 = sub_22D2BD050();
  if (os_log_type_enabled(v18, v19))
  {
    unint64_t v45 = a2;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315138;
    v61[0] = v21;
    uint64_t v46 = v8;
    uint64_t v47 = v9;
    os_log_type_t v22 = (uint64_t *)&v15[*(int *)(v11 + 36)];
    uint64_t v24 = *v22;
    unint64_t v23 = v22[1];
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_22D0A4D24(v24, v23, v61);
    uint64_t v8 = v46;
    uint64_t v9 = v47;
    sub_22D2BD220();
    a2 = v45;
    swift_bridgeObjectRelease();
    sub_22D226A04((uint64_t)v15);
    _os_log_impl(&dword_22CFEE000, v18, v19, "%s Retrieving Age", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v21, -1, -1);
    MEMORY[0x230F7BDF0](v20, -1, -1);
  }
  else
  {
    sub_22D226A04((uint64_t)v15);
  }

  uint64_t v25 = (id *)__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  id v26 = a2;
  uint64_t v27 = (uint64_t)a2 + *(int *)(v11 + 28);
  id v28 = *v25;
  uint64_t v29 = sub_22D0DCF0C(v27);

  uint64_t v56 = v29;
  sub_22D22683C((uint64_t)&v57 + 8, (uint64_t)&v60, (uint64_t (*)(void))sub_22D0E40D4);
  sub_22D226A60((uint64_t)&v59, (uint64_t)v61);
  uint64_t v30 = (_OWORD *)swift_allocObject();
  long long v31 = v58;
  v30[1] = v57;
  v30[2] = v31;
  v30[3] = v59;
  sub_22D0E4188((uint64_t)&v60);
  sub_22D226AF4((uint64_t)v61);
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D223D94(0, &qword_26AEC2218, MEMORY[0x263F8D6C8], MEMORY[0x263EFDCF0]);
  sub_22D0E3880();
  uint64_t v33 = v52;
  sub_22D2BC780();
  swift_release();
  swift_release();
  uint64_t v34 = (uint64_t)v26;
  uint64_t v35 = v51;
  sub_22D2264D4(v34, v51);
  unint64_t v36 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  unint64_t v37 = (v50 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  sub_22D22683C(v35, v38 + v36, (uint64_t (*)(void))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  uint64_t v39 = (_OWORD *)(v38 + v37);
  long long v40 = v58;
  _OWORD *v39 = v57;
  v39[1] = v40;
  v39[2] = v59;
  sub_22D0E4188((uint64_t)&v60);
  sub_22D226AF4((uint64_t)v61);
  sub_22D223D94(0, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, v32);
  sub_22D226D70();
  sub_22D223E98();
  long long v41 = v53;
  uint64_t v42 = v48;
  sub_22D2BC7A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v42);
  sub_22D22717C(&qword_268542CD8, (void (*)(uint64_t))sub_22D226C94);
  uint64_t v43 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v41, v8);
  *uint64_t v55 = v43;
  return result;
}

uint64_t sub_22D225618@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)a3 = *(unsigned char *)a2;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v3;
  *(unsigned char *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = v6;
  *(void *)(a3 + 40) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D22566C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_22D225D08(a1, a2, a3, "%s Could not retrieve age %s", a4);
}

uint64_t sub_22D225678@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v52 = a3;
  sub_22D226C04(0, &qword_268542C88, (unint64_t *)&qword_26AEC1DA8, MEMORY[0x263F8D310], (void (*)(void))sub_22D0E35B8);
  uint64_t v6 = v5;
  uint64_t v51 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v42 - v7;
  sub_22D2268A4();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v50 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v47 = v14;
  uint64_t v48 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v16 = (char *)&v42 - v15;
  long long v17 = a1[1];
  long long v54 = *a1;
  long long v55 = v17;
  long long v56 = a1[2];
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_22D2BC390();
  __swift_project_value_buffer(v18, (uint64_t)qword_26AEC3C90);
  sub_22D2264D4((uint64_t)a2, (uint64_t)v16);
  os_log_type_t v19 = sub_22D2BC380();
  os_log_type_t v20 = sub_22D2BD050();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v45 = v9;
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = a2;
    uint64_t v44 = v6;
    *(_DWORD *)uint64_t v21 = 136315138;
    v58[0] = v22;
    unint64_t v23 = (uint64_t *)&v16[*(int *)(v12 + 36)];
    uint64_t v25 = *v23;
    unint64_t v24 = v23[1];
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_22D0A4D24(v25, v24, v58);
    a2 = v43;
    uint64_t v6 = v44;
    sub_22D2BD220();
    uint64_t v9 = v45;
    swift_bridgeObjectRelease();
    sub_22D226A04((uint64_t)v16);
    _os_log_impl(&dword_22CFEE000, v19, v20, "%s Retrieving Sex", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v22, -1, -1);
    MEMORY[0x230F7BDF0](v21, -1, -1);
  }
  else
  {
    sub_22D226A04((uint64_t)v16);
  }

  id v26 = (id)*__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v27 = sub_22D0DD2D8();

  uint64_t v53 = v27;
  sub_22D22683C((uint64_t)&v54 + 8, (uint64_t)&v57, (uint64_t (*)(void))sub_22D0E40D4);
  sub_22D226A60((uint64_t)&v56, (uint64_t)v58);
  id v28 = (_OWORD *)swift_allocObject();
  long long v29 = v55;
  v28[1] = v54;
  v28[2] = v29;
  v28[3] = v56;
  sub_22D0E4188((uint64_t)&v57);
  sub_22D226AF4((uint64_t)v58);
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D223D94(0, (unint64_t *)&qword_26AEC1DA8, MEMORY[0x263F8D310], MEMORY[0x263EFDCF0]);
  sub_22D0E35B8();
  long long v31 = v49;
  sub_22D2BC780();
  swift_release();
  swift_release();
  uint64_t v32 = (uint64_t)a2;
  uint64_t v33 = v48;
  sub_22D2264D4(v32, v48);
  unint64_t v34 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  unint64_t v35 = (v47 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_22D22683C(v33, v36 + v34, (uint64_t (*)(void))type metadata accessor for ClinicalSharingOnboardingSubmissionTask);
  unint64_t v37 = (_OWORD *)(v36 + v35);
  long long v38 = v55;
  _OWORD *v37 = v54;
  v37[1] = v38;
  v37[2] = v56;
  sub_22D0E4188((uint64_t)&v57);
  sub_22D226AF4((uint64_t)v58);
  sub_22D223D94(0, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, v30);
  sub_22D226980();
  sub_22D223E98();
  uint64_t v39 = v50;
  sub_22D2BC7A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v6);
  sub_22D22717C(&qword_268542CA0, (void (*)(uint64_t))sub_22D2268A4);
  uint64_t v40 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v39, v9);
  *uint64_t v52 = v40;
  return result;
}

uint64_t sub_22D225CA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  char v5 = *(unsigned char *)(a2 + 24);
  *(unsigned char *)a3 = *(unsigned char *)a2;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a3 + 24) = v5;
  *(void *)(a3 + 32) = v3;
  *(void *)(a3 + 40) = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D225CFC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_22D225D08(a1, a2, a3, "%s Could not retrieve sex %s", a4);
}

uint64_t sub_22D225D08@<X0>(void **a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, const char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v48 = a4;
  sub_22D226B3C(0, &qword_268542CA8, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDDF8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v49 = (char *)&v44 - v12;
  sub_22D223D94(0, &qword_268542CB0, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDEA0]);
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v19 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_22D2BC390();
  __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
  sub_22D2264D4(a2, (uint64_t)v18);
  id v21 = v19;
  id v22 = v19;
  unint64_t v23 = sub_22D2BC380();
  os_log_type_t v24 = sub_22D2BD050();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v45 = v11;
    uint64_t v26 = v25;
    uint64_t v44 = swift_slowAlloc();
    v55[0] = v44;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v46 = v10;
    uint64_t v47 = a5;
    uint64_t v27 = (uint64_t *)&v18[*(int *)(v16 + 36)];
    uint64_t v28 = *v27;
    unint64_t v29 = v27[1];
    swift_bridgeObjectRetain();
    *(void *)&long long v52 = sub_22D0A4D24(v28, v29, v55);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D226A04((uint64_t)v18);
    *(_WORD *)(v26 + 12) = 2080;
    *(void *)&long long v52 = v19;
    id v30 = v19;
    id v31 = v19;
    sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
    sub_22D2BD680();
    id v32 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v33 = sub_22D2BCC30();
    unint64_t v35 = v34;

    uint64_t v36 = v33;
    a5 = v47;
    *(void *)&long long v52 = sub_22D0A4D24(v36, v35, v55);
    sub_22D2BD220();
    uint64_t v10 = v46;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v23, v24, v48, (uint8_t *)v26, 0x16u);
    uint64_t v37 = v44;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v37, -1, -1);
    uint64_t v38 = v26;
    uint64_t v11 = v45;
    MEMORY[0x230F7BDF0](v38, -1, -1);
  }
  else
  {
    sub_22D226A04((uint64_t)v18);
  }
  sub_22D22683C((uint64_t)a3 + 8, (uint64_t)v56, (uint64_t (*)(void))sub_22D0E40D4);
  sub_22D226A60((uint64_t)(a3 + 2), (uint64_t)v55);
  long long v39 = a3[1];
  long long v52 = *a3;
  long long v53 = v39;
  long long v54 = a3[2];
  sub_22D0E4188((uint64_t)v56);
  sub_22D226AF4((uint64_t)v55);
  uint64_t v40 = v49;
  sub_22D2BC6B0();
  sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v40, v10);
  sub_22D226B88();
  uint64_t v41 = v51;
  uint64_t v42 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v15, v41);
  *a5 = v42;
  return result;
}

uint64_t sub_22D226238@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for ClinicalSharingOnboardingMetric();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v33 = *a1;
  uint64_t v13 = *((void *)a1 + 1);
  uint64_t v31 = *((void *)a1 + 2);
  uint64_t v32 = v13;
  int v30 = a1[24];
  uint64_t v14 = *((void *)a1 + 4);
  uint64_t v15 = *((void *)a1 + 5);
  uint64_t v16 = *((void *)a2 + 6);
  uint64_t v28 = *((void *)a2 + 5);
  uint64_t v29 = v14;
  uint64_t v17 = *((void *)a2 + 7);
  uint64_t v18 = *((void *)a2 + 8);
  uint64_t v26 = v15;
  uint64_t v27 = v17;
  uint64_t v19 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, &a2[*(int *)(v19 + 28)], v9);
  LOBYTE(a2) = a2[*(int *)(v19 + 32)];
  a3[3] = (uint64_t)v6;
  a3[4] = (uint64_t)&off_26E066AA8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  uint64_t v20 = &v8[v6[12]];
  *(void *)uint64_t v20 = 0xD000000000000031;
  *((void *)v20 + 1) = 0x800000022D2DE2B0;
  uint64_t v21 = v32;
  *(void *)uint64_t v8 = v31;
  v8[8] = v30;
  uint64_t v22 = v26;
  *((void *)v8 + 2) = v29;
  *((void *)v8 + 3) = v22;
  *((void *)v8 + 4) = v28;
  *((void *)v8 + 5) = v16;
  *((void *)v8 + 6) = v27;
  *((void *)v8 + 7) = v18;
  *((void *)v8 + 8) = v21;
  v8[v6[10]] = (char)a2;
  v8[v6[11]] = v33 & 1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v8[v6[9]], v12, v9);
  sub_22D22683C((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ClinicalSharingOnboardingMetric);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D22649C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22D2264D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D22653C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_22D224238(a1, v6, a2);
}

uint64_t sub_22D2265C0(uint64_t a1)
{
  return sub_22D226610(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22D22472C);
}

uint64_t sub_22D2265DC(uint64_t a1)
{
  return sub_22D226610(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22D224FE0);
}

uint64_t sub_22D2265F8(uint64_t a1)
{
  return sub_22D226610(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22D225678);
}

uint64_t sub_22D226610(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D2267BC@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8);
  uint64_t v6 = (char *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
  return sub_22D226238(a1, v6, a2);
}

uint64_t sub_22D22683C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22D2268A4()
{
  if (!qword_268542C90)
  {
    sub_22D226C04(255, &qword_268542C88, (unint64_t *)&qword_26AEC1DA8, MEMORY[0x263F8D310], (void (*)(void))sub_22D0E35B8);
    sub_22D223D94(255, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDCF0]);
    sub_22D226980();
    sub_22D223E98();
    unint64_t v0 = sub_22D2BC4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542C90);
    }
  }
}

unint64_t sub_22D226980()
{
  unint64_t result = qword_268542C98;
  if (!qword_268542C98)
  {
    sub_22D226C04(255, &qword_268542C88, (unint64_t *)&qword_26AEC1DA8, MEMORY[0x263F8D310], (void (*)(void))sub_22D0E35B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542C98);
  }
  return result;
}

uint64_t sub_22D226A04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D226A60(uint64_t a1, uint64_t a2)
{
  sub_22D226B3C(0, (unint64_t *)&qword_26AEC1E60, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D226AEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D225CA4(a1, v2 + 16, a2);
}

uint64_t sub_22D226AF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_22D226B24(uint64_t a1)
{
  return sub_22D226E1C(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_22D225CFC);
}

void sub_22D226B3C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_22D226B88()
{
  unint64_t result = qword_268542CB8;
  if (!qword_268542CB8)
  {
    sub_22D223D94(255, &qword_268542CB0, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542CB8);
  }
  return result;
}

void sub_22D226C04(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(void))
{
  if (!*a2)
  {
    sub_22D223D94(255, a3, a4, MEMORY[0x263EFDCF0]);
    a5();
    unint64_t v7 = sub_22D2BC450();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_22D226C94()
{
  if (!qword_268542CC8)
  {
    sub_22D226C04(255, &qword_268542CC0, &qword_26AEC2218, MEMORY[0x263F8D6C8], (void (*)(void))sub_22D0E3880);
    sub_22D223D94(255, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDCF0]);
    sub_22D226D70();
    sub_22D223E98();
    unint64_t v0 = sub_22D2BC4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542CC8);
    }
  }
}

unint64_t sub_22D226D70()
{
  unint64_t result = qword_268542CD0;
  if (!qword_268542CD0)
  {
    sub_22D226C04(255, &qword_268542CC0, &qword_26AEC2218, MEMORY[0x263F8D6C8], (void (*)(void))sub_22D0E3880);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542CD0);
  }
  return result;
}

uint64_t sub_22D226DF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D225618(a1, v2 + 16, a2);
}

uint64_t sub_22D226E04(uint64_t a1)
{
  return sub_22D226E1C(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_22D22566C);
}

uint64_t sub_22D226E1C(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a2(a1, v2 + v5, v6);
}

void sub_22D226EDC()
{
  if (!qword_268542CE0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D226F98(255, &qword_26AEC1DC8, MEMORY[0x263EFDCF0]);
    sub_22D227020((unint64_t *)&qword_26AEC1DC0, &qword_26AEC1DC8, v0);
    unint64_t v1 = sub_22D2BC450();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268542CE0);
    }
  }
}

void sub_22D226F98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_22D05BF98();
    uint64_t v7 = v6;
    uint64_t v8 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_22D227020(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D226F98(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D227064()
{
  if (!qword_268542CE8)
  {
    sub_22D226EDC();
    sub_22D223D94(255, &qword_268542C28, (uint64_t)&type metadata for OnboardingMetricDetailList, MEMORY[0x263EFDCF0]);
    sub_22D22717C(&qword_268542CF0, (void (*)(uint64_t))sub_22D226EDC);
    sub_22D223E98();
    unint64_t v0 = sub_22D2BC4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542CE8);
    }
  }
}

uint64_t sub_22D227144()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D22717C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_17Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_22D227208@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D224F7C(a1, v2 + 16, a2);
}

uint64_t objectdestroy_20Tm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingOnboardingSubmissionTask() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 48;
  uint64_t v6 = v0 + v3;
  __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_22D227350(uint64_t a1)
{
  return sub_22D226E1C(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_22D224FD4);
}

unint64_t sub_22D227368()
{
  unint64_t result = qword_268542D00;
  if (!qword_268542D00)
  {
    type metadata accessor for ClinicalSharingOnboardingSubmissionTask();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268542D00);
  }
  return result;
}

uint64_t destroy for OnboardingMetricDetailList()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OnboardingMetricDetailList(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OnboardingMetricDetailList(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OnboardingMetricDetailList(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingMetricDetailList(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingMetricDetailList(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingMetricDetailList()
{
  return &type metadata for OnboardingMetricDetailList;
}

void *sub_22D2275DC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    uint64_t v9 = a2[8];
    v4[7] = a2[7];
    v4[8] = v9;
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_22D2BBC30();
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_22D227740(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D2277DC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_22D2BBC30();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_22D2278E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBC30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = (uint64_t *)((char *)a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D2279E8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_22D227AA0(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D227B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D227B90);
}

uint64_t sub_22D227B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_22D227C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D227C54);
}

uint64_t sub_22D227C54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBC30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22D227CFC()
{
  uint64_t result = sub_22D2BBC30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22D227DAC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_22D05C8D8(0);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_26853D3D0 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_268568488;
    uint64_t v8 = (void *)sub_22D2BCBA0();
    id v9 = objc_msgSend(v7, sel_dateFromString_, v8);

    if (v9)
    {
      sub_22D2BBC00();

      uint64_t v10 = sub_22D2BBC30();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
    }
    else
    {
      uint64_t v14 = sub_22D2BBC30();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    return sub_22D043228((uint64_t)v6, a2);
  }
  else
  {
    uint64_t v11 = sub_22D2BBC30();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a2, 1, 1, v11);
  }
}

id sub_22D227F94()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  qword_268568488 = (uint64_t)result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ClinicalSharingSleepSummaryQuery(void *a1, void *a2)
{
  unint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  id v4 = v3;
  return a1;
}

void destroy for ClinicalSharingSleepSummaryQuery(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for ClinicalSharingSleepSummaryQuery(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for ClinicalSharingSleepSummaryQuery(uint64_t a1, _OWORD *a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingSleepSummaryQuery()
{
  return &type metadata for ClinicalSharingSleepSummaryQuery;
}

uint64_t sub_22D2280E4(uint64_t a1, void *a2)
{
  sub_22D228D18();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4B00(a1 + 16, (uint64_t)v20);
  id v9 = (void *)*__swift_project_boxed_opaque_existential_1(v20, v20[3]);
  id v10 = objc_allocWithZone(MEMORY[0x263F75EA8]);
  id v11 = v9;
  uint64_t v12 = (void *)sub_22D2BCBA0();
  id v13 = objc_msgSend(v10, sel_initWithIdentifier_healthStore_, v12, v11);

  id v14 = sub_22D061320();
  id v19 = v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  sub_22D228DC4();
  type metadata accessor for ClinicalSharingQueryOutput(0);
  sub_22D228E7C(&qword_268542D28, (void (*)(uint64_t))sub_22D228DC4);
  swift_retain();
  id v16 = a2;
  sub_22D2BC730();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  sub_22D228E7C(&qword_268542D30, (void (*)(uint64_t))sub_22D228D18);
  uint64_t v17 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v17;
}

uint64_t sub_22D228354@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_22D228EC4(0, &qword_26853DED0, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for PBTypedData(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1) {
    goto LABEL_4;
  }
  id v15 = *a1;
  sub_22D228578(v15, a2, a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {

    sub_22D2297D0((uint64_t)v10, &qword_26853DED0, (void (*)(uint64_t))type metadata accessor for PBTypedData);
LABEL_4:
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a4, 1, 1, Output);
  }
  sub_22D229768((uint64_t)v10, (uint64_t)v14, type metadata accessor for PBTypedData);
  sub_22D22ACB4((uint64_t)v14, 0, a2, a3, a4);

  return sub_22D228F7C((uint64_t)v14, type metadata accessor for PBTypedData);
}

uint64_t sub_22D228578@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_22D2BBC30();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v44 = (char *)&v40 - v12;
  sub_22D228EC4(0, &qword_26853D7A0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v40 - v14;
  uint64_t v16 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v45 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D228EC4(0, &qword_26853DC28, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v21 = type metadata accessor for PBSleepSummary(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v48 = (uint64_t)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v40 - v25;
  sub_22D228AF0(a1, a3, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_22D2297D0((uint64_t)v20, &qword_26853DC28, (void (*)(uint64_t))type metadata accessor for PBSleepSummary);
    uint64_t v27 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a4, 1, 1, v27);
  }
  else
  {
    uint64_t v42 = v26;
    uint64_t v43 = a3;
    sub_22D229768((uint64_t)v20, (uint64_t)v26, type metadata accessor for PBSleepSummary);
    sub_22D2BBFE0();
    uint64_t v40 = type metadata accessor for PBTypedData(0);
    uint64_t v29 = *(int *)(v40 + 20);
    if (qword_26853CCD0 != -1) {
      swift_once();
    }
    *(void *)(a4 + v29) = qword_26853D990;
    uint64_t v41 = a4;
    uint64_t v30 = a2 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date;
    uint64_t v31 = v47;
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
    v32(v44, a2 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date, v47);
    v32(v11, v30, v31);
    swift_retain();
    sub_22D2BB6A0();
    uint64_t v33 = sub_22D2BB6F0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v15, 0, 1, v33);
    uint64_t v34 = (uint64_t)v45;
    uint64_t v35 = v41;
    sub_22D22BDC4(5, 1, v15, a2);
    sub_22D2297D0((uint64_t)v15, &qword_26853D7A0, MEMORY[0x263F062D0]);
    PBTypedData.dateRange.setter(v34);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v36 = swift_retain();
      *(void *)(v35 + v29) = sub_22D0040E0(v36);
      swift_release();
    }
    uint64_t v37 = *(void *)(v35 + v29);
    swift_beginAccess();
    *(void *)(v37 + 16) = 113;
    *(unsigned char *)(v37 + 24) = 1;
    uint64_t v38 = (uint64_t)v42;
    uint64_t v39 = v48;
    sub_22D228F18((uint64_t)v42, v48);
    PBTypedData.sleepSummary.setter(v39);
    sub_22D228F7C(v38, type metadata accessor for PBSleepSummary);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v35, 0, 1, v40);
  }
}

uint64_t sub_22D228AF0@<X0>(void *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PBSleepSummary(0);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isEnabled))
  {
    sub_22D2BBFE0();
    objc_msgSend(a1, sel_sleepDurationGoal);
    *(float *)&double v9 = v9 / 60.0;
    *((_DWORD *)v8 + 2) = LODWORD(v9);
    id v10 = objc_msgSend(a1, sel_occurrences);
    sub_22D030474(0, &qword_268542D38);
    unint64_t v11 = sub_22D2BCE00();

    swift_retain();
    id v12 = a2;
    uint64_t v13 = sub_22D228FDC(v11);
    swift_bridgeObjectRelease();

    swift_release();
    *(void *)uint64_t v8 = v13;
    sub_22D228F18((uint64_t)v8, a3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a3, 0, 1, v6);
    return sub_22D228F7C((uint64_t)v8, type metadata accessor for PBSleepSummary);
  }
  else
  {
    id v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    return v15(a3, 1, 1, v6);
  }
}

uint64_t sub_22D228D10()
{
  return sub_22D2280E4(*(void *)v0, *(void **)(v0 + 8));
}

void sub_22D228D18()
{
  if (!qword_268542D18)
  {
    sub_22D228DC4();
    type metadata accessor for ClinicalSharingQueryOutput(255);
    sub_22D228E7C(&qword_268542D28, (void (*)(uint64_t))sub_22D228DC4);
    unint64_t v0 = sub_22D2BC3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542D18);
    }
  }
}

void sub_22D228DC4()
{
  if (!qword_268542D20)
  {
    sub_22D061670(255);
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542D20);
    }
  }
}

uint64_t sub_22D228E34()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D228E74@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D228354(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_22D228E7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D228EC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D228F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBSleepSummary(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D228F7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D228FDC(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v67 = sub_22D2BB8E0();
  uint64_t v4 = *(void (***)(char *, uint64_t))(v67 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v67);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (unint64_t)&v56 - v8;
  sub_22D228EC4(0, &qword_268542D40, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v56 - v11;
  unint64_t v13 = type metadata accessor for PBSleepSummary.Schedule(0);
  uint64_t v60 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v68 = (uint64_t)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v70 = (uint64_t)&v56 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v59 = (uint64_t)&v56 - v18;
  if (a1 >> 62)
  {
LABEL_69:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_22D2BD470();
    if (v19) {
      goto LABEL_3;
    }
LABEL_70:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v19) {
    goto LABEL_70;
  }
LABEL_3:
  uint64_t v56 = v2;
  unint64_t v66 = a1 & 0xC000000000000001;
  uint64_t v64 = (void (**)(char *, uint64_t, uint64_t, unint64_t))(v60 + 56);
  uint64_t v62 = v4 + 1;
  uint64_t v63 = (unsigned int (**)(char *, uint64_t, unint64_t))(v60 + 48);
  unint64_t v69 = MEMORY[0x263F8EE78];
  uint64_t v2 = 4;
  unint64_t v57 = v13;
  long long v58 = v12;
  uint64_t v65 = v19;
  while (1)
  {
    if (v66) {
      uint64_t v20 = (void (**)(char *, uint64_t))MEMORY[0x230F7AF90](v2 - 4, a1);
    }
    else {
      uint64_t v20 = (void (**)(char *, uint64_t))*(id *)(a1 + 8 * v2);
    }
    uint64_t v4 = v20;
    uint64_t v21 = v2 - 3;
    if (__OFADD__(v2 - 4, 1))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((objc_msgSend(v20, sel_isSingleDayOverride) & 1) == 0) {
      break;
    }
    (*v64)(v12, 1, 1, v13);
LABEL_48:

    if ((*v63)(v12, 1, v13) == 1)
    {
      sub_22D2297D0((uint64_t)v12, &qword_268542D40, (void (*)(uint64_t))type metadata accessor for PBSleepSummary.Schedule);
    }
    else
    {
      unint64_t v47 = a1;
      uint64_t v48 = v7;
      uint64_t v49 = v21;
      uint64_t v50 = v59;
      sub_22D229768((uint64_t)v12, v59, type metadata accessor for PBSleepSummary.Schedule);
      sub_22D229768(v50, v68, type metadata accessor for PBSleepSummary.Schedule);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v51 = v69;
      }
      else {
        unint64_t v51 = sub_22D281E68(0, *(void *)(v69 + 16) + 1, 1, v69);
      }
      unint64_t v53 = *(void *)(v51 + 16);
      unint64_t v52 = *(void *)(v51 + 24);
      if (v53 >= v52 >> 1) {
        unint64_t v51 = sub_22D281E68(v52 > 1, v53 + 1, 1, v51);
      }
      *(void *)(v51 + 16) = v53 + 1;
      unint64_t v54 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      unint64_t v69 = v51;
      sub_22D229768(v68, v51 + v54 + *(void *)(v60 + 72) * v53, type metadata accessor for PBSleepSummary.Schedule);
      uint64_t v21 = v49;
      uint64_t v7 = v48;
      a1 = v47;
    }
    ++v2;
    if (v21 == v65)
    {
      swift_bridgeObjectRelease();
      return v69;
    }
  }
  uint64_t v61 = v2 - 3;
  uint64_t v22 = (_DWORD *)v70;
  *(void *)(v70 + 8) = 0;
  _DWORD *v22 = 0;
  *(_DWORD *)((char *)v22 + 3) = 0;
  sub_22D2BBFE0();
  id v23 = objc_msgSend(v4, sel_bedtimeComponents);
  sub_22D2BB820();

  uint64_t v24 = sub_22D2BB850();
  if (v25) {
    uint64_t v26 = 0;
  }
  else {
    uint64_t v26 = v24;
  }
  uint64_t v27 = 60 * v26;
  if ((unsigned __int128)(v26 * (__int128)60) >> 64 != (60 * v26) >> 63) {
    goto LABEL_63;
  }
  uint64_t v28 = sub_22D2BB890();
  if (v29) {
    uint64_t v30 = 0;
  }
  else {
    uint64_t v30 = v28;
  }
  BOOL v31 = __OFADD__(v27, v30);
  uint64_t v32 = v27 + v30;
  if (v31) {
    goto LABEL_64;
  }
  uint64_t v33 = sub_22D2BB8B0() / 60;
  if (v34) {
    uint64_t v33 = 0;
  }
  unint64_t v13 = v32 + v33;
  if (__OFADD__(v32, v33)) {
    goto LABEL_65;
  }
  uint64_t v35 = v7;
  uint64_t v36 = *v62;
  id v12 = (char *)v9;
  (*v62)((char *)v9, v67);
  if ((v13 & 0x8000000000000000) == 0 && !HIDWORD(v13))
  {
    uint64_t v7 = (char *)a1;
    *(_DWORD *)(v70 + 8) = v13;
    id v37 = objc_msgSend(v4, sel_wakeUpComponents);
    unint64_t v13 = (unint64_t)v35;
    sub_22D2BB820();

    unint64_t v9 = (unint64_t)v35;
    uint64_t v38 = sub_22D2BB850();
    if (v39) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = v38;
    }
    a1 = 60 * v40;
    if ((unsigned __int128)(v40 * (__int128)60) >> 64 != (60 * v40) >> 63) {
      goto LABEL_66;
    }
    unint64_t v9 = (unint64_t)v35;
    uint64_t v41 = sub_22D2BB890();
    if (v42) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = v41;
    }
    BOOL v31 = __OFADD__(a1, v43);
    a1 += v43;
    if (v31) {
      goto LABEL_67;
    }
    uint64_t v44 = sub_22D2BB8B0() / 60;
    if (v45) {
      uint64_t v44 = 0;
    }
    unint64_t v9 = a1 + v44;
    if (__OFADD__(a1, v44)) {
      goto LABEL_68;
    }
    v36(v35, v67);
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_71;
    }
    unint64_t v13 = v57;
    if (HIDWORD(v9)) {
      goto LABEL_71;
    }
    a1 = (unint64_t)v7;
    *(_DWORD *)(v70 + 12) = v9;
    unsigned __int8 v46 = objc_msgSend(v4, sel_weekdays);
    uint64_t v7 = v35;
    unint64_t v9 = (unint64_t)v12;
    if (v46) {
      *(unsigned char *)(v70 + 1) = 1;
    }
    id v12 = v58;
    uint64_t v21 = v61;
    if ((v46 & 2) != 0)
    {
      *(unsigned char *)(v70 + 2) = 1;
      if ((v46 & 4) == 0)
      {
LABEL_42:
        if ((v46 & 8) == 0) {
          goto LABEL_43;
        }
        goto LABEL_56;
      }
    }
    else if ((v46 & 4) == 0)
    {
      goto LABEL_42;
    }
    *(unsigned char *)(v70 + 3) = 1;
    if ((v46 & 8) == 0)
    {
LABEL_43:
      if ((v46 & 0x10) == 0) {
        goto LABEL_44;
      }
      goto LABEL_57;
    }
LABEL_56:
    *(unsigned char *)(v70 + 4) = 1;
    if ((v46 & 0x10) == 0)
    {
LABEL_44:
      if ((v46 & 0x20) == 0) {
        goto LABEL_45;
      }
      goto LABEL_58;
    }
LABEL_57:
    *(unsigned char *)(v70 + 5) = 1;
    if ((v46 & 0x20) == 0)
    {
LABEL_45:
      if ((v46 & 0x40) == 0)
      {
LABEL_47:
        sub_22D229768(v70, (uint64_t)v12, type metadata accessor for PBSleepSummary.Schedule);
        (*v64)(v12, 0, 1, v13);
        goto LABEL_48;
      }
LABEL_46:
      *(unsigned char *)uint64_t v70 = 1;
      goto LABEL_47;
    }
LABEL_58:
    *(unsigned char *)(v70 + 6) = 1;
    if ((v46 & 0x40) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
LABEL_71:
  uint64_t result = sub_22D2BD450();
  __break(1u);
  return result;
}

uint64_t sub_22D229768(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D2297D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D228EC4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void *initializeWithCopy for ClinicalSharingMultiDeviceInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClinicalSharingMultiDeviceInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for ClinicalSharingMultiDeviceInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingMultiDeviceInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingMultiDeviceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingMultiDeviceInfo()
{
  return &type metadata for ClinicalSharingMultiDeviceInfo;
}

BOOL sub_22D2299F4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_22D229A40(v5, v7);
}

BOOL sub_22D229A40(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_22D2BD660(), result = 0, (v5 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3]) {
      return a1[4] == a2[4];
    }
    char v8 = sub_22D2BD660();
    BOOL result = 0;
    if (v8) {
      return a1[4] == a2[4];
    }
  }
  return result;
}

id sub_22D229AC8(void *a1)
{
  long long v2 = (objc_class *)type metadata accessor for VerifiableHealthRecordsParsingServiceServer();
  long long v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC19HealthRecordsDaemon43VerifiableHealthRecordsParsingServiceServer_cancellables] = MEMORY[0x263F8EE88];
  *(void *)&v3[OBJC_IVAR____TtC19HealthRecordsDaemon43VerifiableHealthRecordsParsingServiceServer_client] = a1;
  v6.receiver = v3;
  v6.super_class = v2;
  id v4 = a1;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for SignedClinicalDataDaemonPlugin()
{
  return self;
}

uint64_t sub_22D229B74()
{
  sub_22D0DCEB4();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22D2BFF40;
  if (qword_26AEC22E8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26AEC3CF0;
  uint64_t v2 = *(void *)algn_26AEC3CF8;
  long long v3 = (objc_class *)type metadata accessor for DefaultDaemonXPCService();
  id v4 = objc_allocWithZone(v3);
  swift_bridgeObjectRetain();
  id v5 = sub_22CFF5CCC(v1, v2, 0xD000000000000041, 0x800000022D2DE3B0, (uint64_t)sub_22D229AC8, 0);
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = &off_26E05CF18;
  *(void *)(v0 + 32) = v5;
  return v0;
}

unint64_t sub_22D229C74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, __int16 a5)
{
  sub_22D2BD310();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  if (a3)
  {
    id v7 = a3;
    objc_msgSend(v7, sel_code);
    sub_22D2BD630();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D2BCCB0();

    swift_bridgeObjectRelease();
  }
  if ((a5 & 0x100) == 0)
  {
    sub_22D2BCC30();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
  }
  return 0xD000000000000011;
}

uint64_t sub_22D229DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22D2BBF00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(*(void *)v3 + 56);
  swift_bridgeObjectRetain();
  sub_22D22E8A4((uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessClassificationQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessClassificationQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessClassificationQuery, v10);
  uint64_t v21 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)v20, v11);
  swift_bridgeObjectRelease_n();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (*(void *)(v12 + 16))
  {
    sub_22D239FCC(a1, a3, type metadata accessor for PBTypedData);
    uint64_t v13 = sub_22D237C78(v12);
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v14 = *(void **)(v3
                     + *(int *)(type metadata accessor for ClinicalSharingWalkingSteadinessClassificationQuery() + 24));
      id v15 = v14;
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a3 + *(int *)(Output + 20)) = v13;
    uint64_t v19 = (void *)(a3 + *(int *)(Output + 24));
    void *v19 = v14;
    v19[1] = a2;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a3, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D22A058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22D2BBF00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(*(void *)v3 + 56);
  swift_bridgeObjectRetain();
  sub_22D22E8A4((uint64_t (*)(void))type metadata accessor for ClinicalSharingSampleQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSampleQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSampleQuery, v10);
  uint64_t v21 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)v20, v11);
  swift_bridgeObjectRelease_n();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (*(void *)(v12 + 16))
  {
    sub_22D239FCC(a1, a3, type metadata accessor for PBTypedData);
    uint64_t v13 = sub_22D237C78(v12);
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v14 = *(void **)(v3 + *(int *)(type metadata accessor for ClinicalSharingSampleQuery() + 24));
      id v15 = v14;
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a3 + *(int *)(Output + 20)) = v13;
    uint64_t v19 = (void *)(a3 + *(int *)(Output + 24));
    void *v19 = v14;
    v19[1] = a2;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a3, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D22A2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22D2BBF00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(*(void *)v3 + 56);
  swift_bridgeObjectRetain();
  sub_22D22EF38(type metadata accessor for ClinicalSharingSleepStatisticsQuery, type metadata accessor for ClinicalSharingSleepStatisticsQuery, type metadata accessor for ClinicalSharingSleepStatisticsQuery, v10);
  uint64_t v21 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)v20, v11);
  swift_bridgeObjectRelease_n();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (*(void *)(v12 + 16))
  {
    sub_22D239FCC(a1, a3, type metadata accessor for PBTypedData);
    uint64_t v13 = sub_22D237C78(v12);
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v14 = *(void **)(v3 + *(int *)(type metadata accessor for ClinicalSharingSleepStatisticsQuery(0) + 32));
      id v15 = v14;
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a3 + *(int *)(Output + 20)) = v13;
    uint64_t v19 = (void *)(a3 + *(int *)(Output + 24));
    void *v19 = v14;
    v19[1] = a2;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a3, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D22A558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22D2BBF00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(*(void *)v3 + 56);
  swift_bridgeObjectRetain();
  sub_22D22E8A4((uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery, v10);
  uint64_t v21 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)v20, v11);
  swift_bridgeObjectRelease_n();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (*(void *)(v12 + 16))
  {
    sub_22D239FCC(a1, a3, type metadata accessor for PBTypedData);
    uint64_t v13 = sub_22D237C78(v12);
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v14 = *(void **)(v3 + *(int *)(type metadata accessor for ClinicalSharingHistogramQuery() + 24));
      id v15 = v14;
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a3 + *(int *)(Output + 20)) = v13;
    uint64_t v19 = (void *)(a3 + *(int *)(Output + 24));
    void *v19 = v14;
    v19[1] = a2;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a3, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D22A7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22D2BBF00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(*(void *)v3 + 56);
  swift_bridgeObjectRetain();
  sub_22D22E8A4((uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery, v10);
  uint64_t v21 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)v20, v11);
  swift_bridgeObjectRelease_n();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (*(void *)(v12 + 16))
  {
    sub_22D239FCC(a1, a3, type metadata accessor for PBTypedData);
    uint64_t v13 = sub_22D237C78(v12);
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v14 = *(void **)(v3 + *(int *)(type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery() + 24));
      id v15 = v14;
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a3 + *(int *)(Output + 20)) = v13;
    uint64_t v19 = (void *)(a3 + *(int *)(Output + 24));
    void *v19 = v14;
    v19[1] = a2;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a3, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D22AA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22D2BBF00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(*(void *)v3 + 56);
  swift_bridgeObjectRetain();
  sub_22D22EB28(v10);
  uint64_t v21 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)v20, v11);
  swift_bridgeObjectRelease_n();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (*(void *)(v12 + 16))
  {
    sub_22D239FCC(a1, a3, type metadata accessor for PBTypedData);
    uint64_t v13 = sub_22D237C78(v12);
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v14 = self;
      swift_bridgeObjectRetain();
      id v15 = objc_msgSend(v14, sel_activitySummaryType);
    }
    else
    {
      id v15 = 0;
    }
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a3 + *(int *)(Output + 20)) = v13;
    uint64_t v19 = (void *)(a3 + *(int *)(Output + 24));
    void *v19 = v15;
    v19[1] = a2;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a3, 0, 1, Output);
  }
  else
  {
    uint64_t v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D22ACB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_22D2BBF00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = *(void *)(a3 + 56);
  swift_bridgeObjectRetain();
  sub_22D22ED38(a4, v13);
  id v23 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)v22, v14);
  swift_bridgeObjectRelease_n();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (*(void *)(v15 + 16))
  {
    sub_22D239FCC(a1, a5, type metadata accessor for PBTypedData);
    uint64_t v16 = sub_22D237C78(v15);
    swift_bridgeObjectRelease();
    if (a2) {
      id v17 = a4;
    }
    else {
      a4 = 0;
    }
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a5 + *(int *)(Output + 20)) = v16;
    uint64_t v21 = (void *)(a5 + *(int *)(Output + 24));
    void *v21 = a4;
    v21[1] = a2;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a5, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a5, 1, 1, v18);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D22AEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22D2BBF00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(*(void *)v3 + 56);
  swift_bridgeObjectRetain();
  sub_22D22EF38(type metadata accessor for ClinicalSharingElectrocardiogramQuery, type metadata accessor for ClinicalSharingElectrocardiogramQuery, type metadata accessor for ClinicalSharingElectrocardiogramQuery, v10);
  uint64_t v21 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D05C90C, (uint64_t)v20, v11);
  swift_bridgeObjectRelease_n();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (*(void *)(v12 + 16))
  {
    sub_22D239FCC(a1, a3, type metadata accessor for PBTypedData);
    uint64_t v13 = sub_22D237C78(v12);
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v14 = *(void **)(v3 + *(int *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) + 32));
      id v15 = v14;
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a3 + *(int *)(Output + 20)) = v13;
    uint64_t v19 = (void *)(a3 + *(int *)(Output + 24));
    void *v19 = v14;
    v19[1] = a2;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a3, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D22B174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v5 = sub_22D2BBF00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(*v3 + 56);
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
  uint64_t v10 = (void *)v3[2];
  sub_22D030474(0, &qword_26853E470);
  uint64_t v11 = (void *)*MEMORY[0x263F09C20];
  swift_bridgeObjectRetain();
  id v12 = v10;
  uint64_t v13 = (void *)MEMORY[0x230F7AD20](v11);
  LOBYTE(v10) = sub_22D2BD1A0();

  if (v10) {
    goto LABEL_3;
  }
  uint64_t v14 = (void *)*MEMORY[0x263F09C28];
  id v15 = v12;
  sub_22D239F40(v4);
  uint64_t v16 = (void *)MEMORY[0x230F7AD20](v14);
  LOBYTE(v14) = sub_22D2BD1A0();

  sub_22D239F84(v4);
  if (v14)
  {
LABEL_3:
    id v17 = objc_msgSend(self, sel_correlationTypeForIdentifier_, *MEMORY[0x263F094C0], v30);
    if (!v17)
    {
      uint64_t result = sub_22D2BD460();
      __break(1u);
      return result;
    }
    *uint64_t v8 = v17;
  }
  else
  {
    *uint64_t v8 = v15;
    id v18 = v15;
  }
  uint64_t v19 = (*(uint64_t (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F44A40], v5);
  MEMORY[0x270FA5388](v19);
  char v29 = v8;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)(&v30 - 4), v9);
  swift_bridgeObjectRelease_n();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (*(void *)(v20 + 16))
  {
    uint64_t v21 = v32;
    sub_22D239FCC(v30, v32, type metadata accessor for PBTypedData);
    uint64_t v22 = sub_22D237C78(v20);
    swift_bridgeObjectRelease();
    uint64_t v23 = v31;
    if (v31) {
      id v24 = v12;
    }
    else {
      id v12 = 0;
    }
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(v21 + *(int *)(Output + 20)) = v22;
    uint64_t v28 = (void *)(v21 + *(int *)(Output + 24));
    void *v28 = v12;
    v28[1] = v23;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(v21, 0, 1, Output);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v25 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v32, 1, 1, v25);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D22B560(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PBECGMeasurement(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v15[1] = v1;
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_22D24BFDC(0, v7, 0);
    uint64_t v8 = v16;
    uint64_t v9 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v9 - 8) + 72);
    do
    {
      sub_22D239FCC(v10 + *(int *)(v9 + 20), (uint64_t)v6, type metadata accessor for PBECGMeasurement);
      uint64_t v16 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_22D24BFDC(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v16;
      }
      *(void *)(v8 + 16) = v13 + 1;
      sub_22D238B28((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, type metadata accessor for PBECGMeasurement);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_22D22B758(uint64_t a1)
{
  uint64_t v3 = sub_22D2BBC30();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = sub_22D2BB6F0();
  uint64_t v5 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  int64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    v18[0] = v1;
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_22D24B8D4(0, v8, 0);
    uint64_t v9 = v21;
    uint64_t v10 = *(void *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0) - 8);
    uint64_t v11 = (id *)(a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));
    uint64_t v19 = *(void *)(v10 + 72);
    v18[1] = v5 + 32;
    do
    {
      id v12 = *v11;
      id v13 = objc_msgSend(*v11, sel_startDate);
      sub_22D2BBC00();

      id v14 = objc_msgSend(v12, sel_endDate);
      sub_22D2BBC00();

      sub_22D2BB6A0();
      uint64_t v21 = v9;
      unint64_t v16 = *(void *)(v9 + 16);
      unint64_t v15 = *(void *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_22D24B8D4(v15 > 1, v16 + 1, 1);
        uint64_t v9 = v21;
      }
      *(void *)(v9 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v16, v7, v20);
      uint64_t v11 = (id *)((char *)v11 + v19);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_22D22BA08@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_22D2BBC30();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  sub_22D2387EC(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v33 - v13;
  uint64_t v15 = sub_22D2BB6F0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0xE000000000000000;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0xE000000000000000;
  type metadata accessor for PBDateRange(0);
  sub_22D2BBFE0();
  *(void *)(a4 + 32) = a1;
  *(unsigned char *)(a4 + 40) = a2 & 1;
  sub_22D238A28(a3, (uint64_t)v14, &qword_26853D7A0, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return sub_22D2389B8((uint64_t)v14, &qword_26853D7A0, MEMORY[0x263F062D0]);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  sub_22D2BB6C0();
  id v20 = *(id *)(*v36 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  uint64_t v21 = (void *)sub_22D2BBBC0();
  id v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

  uint64_t v23 = sub_22D2BCBD0();
  uint64_t v25 = v24;

  uint64_t v26 = v35;
  uint64_t v34 = *(void *)(v34 + 8);
  ((void (*)(char *, uint64_t))v34)(v10, v35);
  swift_bridgeObjectRelease();
  *(void *)a4 = v23;
  *(void *)(a4 + 8) = v25;
  sub_22D2BB690();
  id v27 = *(id *)(*v36 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  uint64_t v28 = (void *)sub_22D2BBBC0();
  id v29 = objc_msgSend(v27, sel_stringFromDate_, v28);

  uint64_t v30 = sub_22D2BCBD0();
  uint64_t v32 = v31;

  ((void (*)(char *, uint64_t))v34)(v10, v26);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a4 + 16) = v30;
  *(void *)(a4 + 24) = v32;
  return result;
}

uint64_t sub_22D22BDC8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  sub_22D2387EC(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = sub_22D2BB6F0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0xE000000000000000;
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = 0xE000000000000000;
  type metadata accessor for PBDateRange(0);
  sub_22D2BBFE0();
  *(void *)(a5 + 32) = a1;
  *(unsigned char *)(a5 + 40) = a2 & 1;
  sub_22D238A28(a3, (uint64_t)v15, &qword_26853D7A0, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    return sub_22D2389B8((uint64_t)v15, &qword_26853D7A0, MEMORY[0x263F062D0]);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  sub_22D2BB6C0();
  id v21 = *(id *)(v34 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  id v22 = (void *)sub_22D2BBBC0();
  id v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

  uint64_t v24 = sub_22D2BCBD0();
  uint64_t v26 = v25;

  uint64_t v35 = *(void *)(v35 + 8);
  ((void (*)(char *, uint64_t))v35)(v11, v36);
  swift_bridgeObjectRelease();
  *(void *)a5 = v24;
  *(void *)(a5 + 8) = v26;
  sub_22D2BB690();
  id v27 = v21;
  uint64_t v28 = (void *)sub_22D2BBBC0();
  id v29 = objc_msgSend(v27, sel_stringFromDate_, v28);

  uint64_t v30 = sub_22D2BCBD0();
  uint64_t v32 = v31;

  ((void (*)(char *, uint64_t))v35)(v11, v36);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a5 + 16) = v30;
  *(void *)(a5 + 24) = v32;
  return result;
}

uint64_t sub_22D22C160@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_22D2BBC30();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  sub_22D2387EC(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = sub_22D2BB6F0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0xE000000000000000;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0xE000000000000000;
  type metadata accessor for PBDateRange(0);
  sub_22D2BBFE0();
  *(void *)(a4 + 32) = a1;
  *(unsigned char *)(a4 + 40) = a2 & 1;
  sub_22D238A28(a3, (uint64_t)v14, &qword_26853D7A0, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return sub_22D2389B8((uint64_t)v14, &qword_26853D7A0, MEMORY[0x263F062D0]);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  sub_22D2BB6C0();
  uint64_t v33 = *(int *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() + 20);
  id v20 = objc_retain(*(id *)(*(void *)(v36 + v33)
                          + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
  id v21 = (void *)sub_22D2BBBC0();
  id v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

  uint64_t v23 = sub_22D2BCBD0();
  uint64_t v25 = v24;

  uint64_t v26 = v35;
  uint64_t v34 = *(void *)(v34 + 8);
  ((void (*)(char *, uint64_t))v34)(v10, v35);
  swift_bridgeObjectRelease();
  *(void *)a4 = v23;
  *(void *)(a4 + 8) = v25;
  sub_22D2BB690();
  id v27 = objc_retain(*(id *)(*(void *)(v36 + v33)
                          + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
  uint64_t v28 = (void *)sub_22D2BBBC0();
  id v29 = objc_msgSend(v27, sel_stringFromDate_, v28);

  uint64_t v30 = sub_22D2BCBD0();
  uint64_t v32 = v31;

  ((void (*)(char *, uint64_t))v34)(v10, v26);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a4 + 16) = v30;
  *(void *)(a4 + 24) = v32;
  return result;
}

uint64_t sub_22D22C530@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_22D2BBC30();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  sub_22D2387EC(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v32 - v13;
  uint64_t v15 = sub_22D2BB6F0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0xE000000000000000;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0xE000000000000000;
  type metadata accessor for PBDateRange(0);
  sub_22D2BBFE0();
  *(void *)(a4 + 32) = a1;
  *(unsigned char *)(a4 + 40) = a2 & 1;
  sub_22D238A28(a3, (uint64_t)v14, &qword_26853D7A0, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return sub_22D2389B8((uint64_t)v14, &qword_26853D7A0, MEMORY[0x263F062D0]);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  sub_22D2BB6C0();
  id v20 = objc_retain(*(id *)(*(void *)v32[1]
                          + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
  id v21 = (void *)sub_22D2BBBC0();
  id v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

  uint64_t v23 = sub_22D2BCBD0();
  uint64_t v25 = v24;

  uint64_t v33 = *(void *)(v33 + 8);
  ((void (*)(char *, uint64_t))v33)(v10, v34);
  swift_bridgeObjectRelease();
  *(void *)a4 = v23;
  *(void *)(a4 + 8) = v25;
  sub_22D2BB690();
  id v26 = v20;
  id v27 = (void *)sub_22D2BBBC0();
  id v28 = objc_msgSend(v26, sel_stringFromDate_, v27);

  uint64_t v29 = sub_22D2BCBD0();
  uint64_t v31 = v30;

  ((void (*)(char *, uint64_t))v33)(v10, v34);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a4 + 16) = v29;
  *(void *)(a4 + 24) = v31;
  return result;
}

uint64_t sub_22D22C8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_22D2BB6F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v52 = (char *)&v40 - v8;
  sub_22D2387EC(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v43 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v40 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  uint64_t v54 = v5 + 56;
  long long v55 = v17;
  v17((char *)a2, 1, 1, v4);
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v40 = a1;
  if (v18)
  {
    uint64_t v49 = v14;
    uint64_t v50 = a2;
    id v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v19 = v5 + 16;
    unint64_t v51 = v20;
    uint64_t v21 = a1 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
    uint64_t v48 = *(void *)(v19 + 56);
    id v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
    uint64_t v23 = (void (**)(char *, char *, uint64_t))(v19 + 16);
    uint64_t v41 = (void (**)(char *, uint64_t))(v19 - 8);
    swift_bridgeObjectRetain();
    unsigned __int8 v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
    uint64_t v47 = v19;
    char v42 = v16;
    char v45 = (void (**)(char *, char *, uint64_t))(v19 + 16);
    uint64_t v24 = v50;
    while (1)
    {
      v51(v16, v21, v4);
      v55(v16, 0, 1, v4);
      id v26 = *v22;
      if ((*v22)(v16, 1, v4) == 1) {
        break;
      }
      uint64_t v53 = v18;
      id v27 = *v23;
      id v28 = v52;
      (*v23)(v52, v16, v4);
      uint64_t v29 = (uint64_t)v49;
      sub_22D238A28(v24, (uint64_t)v49, &qword_26853D7A0, MEMORY[0x263F062D0]);
      if (v26((char *)v29, 1, v4) == 1)
      {
        uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
        sub_22D2389B8(v24, &qword_26853D7A0, MEMORY[0x263F062D0]);
        sub_22D2389B8(v29, &qword_26853D7A0, v25);
        uint64_t v23 = v45;
        v27((char *)v24, v28, v4);
        v55((char *)v24, 0, 1, v4);
        id v22 = v46;
      }
      else
      {
        uint64_t v30 = v28;
        uint64_t v32 = v44;
        uint64_t v31 = v45;
        v27(v44, (char *)v29, v4);
        uint64_t v33 = v31;
        uint64_t v34 = (uint64_t)v43;
        sub_22D2BB6E0();
        uint64_t v35 = *v41;
        (*v41)(v32, v4);
        uint64_t v36 = v30;
        id v37 = (void (*)(uint64_t, void, uint64_t, uint64_t))v55;
        uint64_t v16 = v42;
        v35(v36, v4);
        uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
        sub_22D2389B8(v24, &qword_26853D7A0, MEMORY[0x263F062D0]);
        v37(v34, 0, 1, v4);
        sub_22D238AA8(v34, v24, &qword_26853D7A0, v38);
        id v22 = v46;
        uint64_t v23 = v33;
      }
      v21 += v48;
      uint64_t v18 = v53 - 1;
      if (v53 == 1) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    v55(v16, 1, 1, v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D22CD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D22CD80(a1, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSampleQuery, a2);
}

uint64_t sub_22D22CD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D22CD80(a1, (uint64_t (*)(void))type metadata accessor for ClinicalSharingHistogramQuery, a2);
}

uint64_t sub_22D22CD80@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a1;
  sub_22D2387EC(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v35 = (uint64_t)&v34 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = type metadata accessor for PBDateRange(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v36 = (uint64_t)&v34 - v19;
  sub_22D2BBFE0();
  uint64_t v20 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_26853CCD0 != -1) {
    swift_once();
  }
  *(void *)(a3 + v20) = qword_26853D990;
  uint64_t v21 = *(void **)(v3 + *(int *)(a2(0) + 24));
  swift_retain();
  id v22 = v21;
  sub_22D0D9A20((uint64_t)&v38);

  if ((v40 & 1) == 0)
  {
    uint64_t v34 = v9;
    uint64_t v23 = v38;
    char v24 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v25 = swift_retain();
      *(void *)(a3 + v20) = sub_22D0040E0(v25);
      swift_release();
    }
    uint64_t v26 = *(void *)(a3 + v20);
    swift_beginAccess();
    *(void *)(v26 + 16) = v23;
    *(unsigned char *)(v26 + 24) = v24 & 1;
    uint64_t v9 = v34;
  }
  sub_22D238A28(v37, (uint64_t)v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_22D2389B8((uint64_t)v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  uint64_t v28 = (uint64_t)v13;
  uint64_t v29 = v36;
  sub_22D238B28(v28, v36, type metadata accessor for PBDateRange);
  sub_22D239FCC(v29, (uint64_t)v18, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    uint64_t v30 = swift_retain();
    *(void *)(a3 + v20) = sub_22D0040E0(v30);
    swift_release();
  }
  uint64_t v31 = *(void *)(a3 + v20);
  uint64_t v32 = v35;
  sub_22D238B28((uint64_t)v18, v35, type metadata accessor for PBDateRange);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v32, 0, 1, v14);
  sub_22D238AA8(v32, (uint64_t)v9, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v33 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D083F60((uint64_t)v9, v33);
  swift_endAccess();
  swift_release();
  return sub_22D23A034(v29, type metadata accessor for PBDateRange);
}

uint64_t sub_22D22D1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a1;
  sub_22D2387EC(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v33 = (uint64_t)&v31 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = type metadata accessor for PBDateRange(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v31 - v16;
  sub_22D2BBFE0();
  uint64_t v18 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_26853CCD0 != -1) {
    swift_once();
  }
  *(void *)(a2 + v18) = qword_26853D990;
  uint64_t v19 = self;
  swift_retain();
  id v20 = objc_msgSend(v19, sel_activitySummaryType);
  sub_22D0D9A20((uint64_t)&v35);

  if ((v37 & 1) == 0)
  {
    uint64_t v31 = v15;
    uint64_t v32 = v17;
    uint64_t v21 = v6;
    uint64_t v22 = v35;
    char v23 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v24 = swift_retain();
      *(void *)(a2 + v18) = sub_22D0040E0(v24);
      swift_release();
    }
    uint64_t v25 = *(void *)(a2 + v18);
    swift_beginAccess();
    *(void *)(v25 + 16) = v22;
    *(unsigned char *)(v25 + 24) = v23 & 1;
    uint64_t v6 = v21;
    uint64_t v15 = v31;
    uint64_t v17 = v32;
  }
  sub_22D238A28(v34, (uint64_t)v10, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_22D2389B8((uint64_t)v10, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  sub_22D238B28((uint64_t)v10, (uint64_t)v17, type metadata accessor for PBDateRange);
  sub_22D239FCC((uint64_t)v17, (uint64_t)v15, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)(a2 + v18) = sub_22D0040E0(v27);
    swift_release();
  }
  uint64_t v28 = *(void *)(a2 + v18);
  uint64_t v29 = v33;
  sub_22D238B28((uint64_t)v15, v33, type metadata accessor for PBDateRange);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
  sub_22D238AA8(v29, (uint64_t)v6, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v30 = v28
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D083F60((uint64_t)v6, v30);
  swift_endAccess();
  swift_release();
  return sub_22D23A034((uint64_t)v17, type metadata accessor for PBDateRange);
}

uint64_t sub_22D22D68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a1;
  sub_22D2387EC(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for PBDateRange(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  sub_22D2BBFE0();
  uint64_t v19 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_26853CCD0 != -1) {
    swift_once();
  }
  *(void *)(a2 + v19) = qword_26853D990;
  id v20 = *(void **)(v2 + *(int *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) + 32));
  swift_retain();
  id v21 = v20;
  sub_22D0D9A20((uint64_t)&v35);

  if ((v37 & 1) == 0)
  {
    uint64_t v31 = v18;
    uint64_t v32 = v7;
    uint64_t v22 = v35;
    char v23 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v24 = swift_retain();
      *(void *)(a2 + v19) = sub_22D0040E0(v24);
      swift_release();
    }
    uint64_t v25 = *(void *)(a2 + v19);
    swift_beginAccess();
    *(void *)(v25 + 16) = v22;
    *(unsigned char *)(v25 + 24) = v23 & 1;
    uint64_t v18 = v31;
    uint64_t v7 = v32;
  }
  sub_22D238A28(v34, (uint64_t)v11, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_22D2389B8((uint64_t)v11, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  sub_22D238B28((uint64_t)v11, (uint64_t)v18, type metadata accessor for PBDateRange);
  sub_22D239FCC((uint64_t)v18, (uint64_t)v16, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)(a2 + v19) = sub_22D0040E0(v27);
    swift_release();
  }
  uint64_t v28 = *(void *)(a2 + v19);
  uint64_t v29 = v33;
  sub_22D238B28((uint64_t)v16, v33, type metadata accessor for PBDateRange);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v29, 0, 1, v12);
  sub_22D238AA8(v29, (uint64_t)v7, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v30 = v28
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D083F60((uint64_t)v7, v30);
  swift_endAccess();
  swift_release();
  return sub_22D23A034((uint64_t)v18, type metadata accessor for PBDateRange);
}

uint64_t sub_22D22DB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  sub_22D2387EC(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v29 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = type metadata accessor for PBDateRange(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v29 - v18;
  sub_22D2BBFE0();
  uint64_t v20 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_26853CCD0 != -1) {
    swift_once();
  }
  *(void *)(a2 + v20) = qword_26853D990;
  id v21 = *(void **)(v2 + 16);
  swift_retain();
  id v22 = v21;
  sub_22D0D9A20((uint64_t)&v33);

  if ((v35 & 1) == 0)
  {
    uint64_t v31 = v33;
    int v30 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v29 = v14;
      uint64_t v23 = swift_retain();
      uint64_t v14 = v29;
      *(void *)(a2 + v20) = sub_22D0040E0(v23);
      swift_release();
    }
    uint64_t v24 = *(void *)(a2 + v20);
    swift_beginAccess();
    *(void *)(v24 + 16) = v31;
    *(unsigned char *)(v24 + 24) = v30 & 1;
  }
  sub_22D238A28(v32, (uint64_t)v12, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_22D2389B8((uint64_t)v12, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  sub_22D238B28((uint64_t)v12, (uint64_t)v19, type metadata accessor for PBDateRange);
  sub_22D239FCC((uint64_t)v19, (uint64_t)v17, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    uint64_t v26 = swift_retain();
    *(void *)(a2 + v20) = sub_22D0040E0(v26);
    swift_release();
  }
  uint64_t v27 = *(void *)(a2 + v20);
  sub_22D238B28((uint64_t)v17, (uint64_t)v10, type metadata accessor for PBDateRange);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
  sub_22D238AA8((uint64_t)v10, (uint64_t)v7, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v28 = v27
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D083F60((uint64_t)v7, v28);
  swift_endAccess();
  swift_release();
  return sub_22D23A034((uint64_t)v19, type metadata accessor for PBDateRange);
}

uint64_t sub_22D22DFB4@<X0>(uint64_t a1@<X0>, void *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v32 = a1;
  sub_22D2387EC(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v29 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = type metadata accessor for PBDateRange(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v29 - v19;
  sub_22D2BBFE0();
  uint64_t v21 = *(int *)(type metadata accessor for PBTypedData(0) + 20);
  if (qword_26853CCD0 != -1) {
    swift_once();
  }
  *(void *)(a3 + v21) = qword_26853D990;
  swift_retain();
  id v22 = a2;
  sub_22D0D9A20((uint64_t)&v33);

  if ((v35 & 1) == 0)
  {
    uint64_t v31 = v33;
    int v30 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v29 = v15;
      uint64_t v23 = swift_retain();
      uint64_t v15 = v29;
      *(void *)(a3 + v21) = sub_22D0040E0(v23);
      swift_release();
    }
    uint64_t v24 = *(void *)(a3 + v21);
    swift_beginAccess();
    *(void *)(v24 + 16) = v31;
    *(unsigned char *)(v24 + 24) = v30 & 1;
  }
  sub_22D238A28(v32, (uint64_t)v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_22D2389B8((uint64_t)v13, &qword_26853D7B0, type metadata accessor for PBDateRange);
  }
  sub_22D238B28((uint64_t)v13, (uint64_t)v20, type metadata accessor for PBDateRange);
  sub_22D239FCC((uint64_t)v20, (uint64_t)v18, type metadata accessor for PBDateRange);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    uint64_t v26 = swift_retain();
    *(void *)(a3 + v21) = sub_22D0040E0(v26);
    swift_release();
  }
  uint64_t v27 = *(void *)(a3 + v21);
  sub_22D238B28((uint64_t)v18, (uint64_t)v11, type metadata accessor for PBDateRange);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  sub_22D238AA8((uint64_t)v11, (uint64_t)v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v28 = v27
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__dateRange;
  swift_beginAccess();
  swift_retain();
  sub_22D083F60((uint64_t)v8, v28);
  swift_endAccess();
  swift_release();
  return sub_22D23A034((uint64_t)v20, type metadata accessor for PBDateRange);
}

uint64_t sub_22D22E468(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a2;
  sub_22D2388CC();
  uint64_t v28 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v30 = a1;
  uint64_t v13 = *(void *)(a4 + 64);
  uint64_t v26 = a4 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v27 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    uint64_t v24 = *(void *)(a4 + 48);
    uint64_t v25 = sub_22D2BBC90();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v12, v24 + *(void *)(*(void *)(v25 - 8) + 72) * i, v25);
    *(void *)&v12[*(int *)(v28 + 48)] = *(void *)(*(void *)(a4 + 56) + 8 * i);
    sub_22D238B28((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))sub_22D2388CC);
    swift_bridgeObjectRetain();
    v29(&v30, v10);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_22D23A034((uint64_t)v10, (uint64_t (*)(void))sub_22D2388CC);
      return swift_release();
    }
    uint64_t result = sub_22D23A034((uint64_t)v10, (uint64_t (*)(void))sub_22D2388CC);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v27) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_17:
    unint64_t v16 = (v22 - 1) & v22;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v27) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v27) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v27) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v27)
  {
LABEL_26:
    swift_release();
    return v30;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
LABEL_16:
    int64_t v18 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v27) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22D22E76C(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v15 = a1;
  uint64_t v7 = a1;
  if (a4 >> 62) {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_22D2BD470())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F7AF90](i - 4, a4) : *(id *)(a4 + 8 * i);
      uint64_t v7 = v10;
      uint64_t v11 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v14 = v10;
      a2(&v15, &v14);
      if (v4)
      {
        uint64_t v12 = v15;
        swift_bridgeObjectRelease();

        return v7;
      }

      if (v11 == v8)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_22D22E8A4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - v8;
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
  uint64_t v10 = *(int *)(v7 + 24);
  uint64_t v11 = *(void **)(v4 + v10);
  sub_22D030474(0, &qword_26853E470);
  uint64_t v12 = (void *)*MEMORY[0x263F09C20];
  id v13 = v11;
  id v14 = (void *)MEMORY[0x230F7AD20](v12);
  LOBYTE(v11) = sub_22D2BD1A0();

  sub_22D239FCC(v6, (uint64_t)v9, a2);
  if (v11)
  {
    sub_22D23A034((uint64_t)v9, v25);
  }
  else
  {
    uint64_t v15 = (void *)*MEMORY[0x263F09C28];
    id v16 = *(id *)&v9[*(int *)(v7 + 24)];
    uint64_t v17 = (void *)MEMORY[0x230F7AD20](v15);
    LOBYTE(v15) = sub_22D2BD1A0();

    sub_22D23A034((uint64_t)v9, v25);
    if ((v15 & 1) == 0)
    {
      uint64_t v20 = *(void **)(v6 + v10);
      unint64_t v19 = v26;
      void *v26 = v20;
      id v21 = v20;
      goto LABEL_7;
    }
  }
  id v18 = objc_msgSend(self, sel_correlationTypeForIdentifier_, *MEMORY[0x263F094C0]);
  if (v18)
  {
    unint64_t v19 = v26;
    void *v26 = v18;
LABEL_7:
    uint64_t v22 = *MEMORY[0x263F44A40];
    uint64_t v23 = sub_22D2BBF00();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v19, v22, v23);
  }
  uint64_t result = sub_22D2BD460();
  __break(1u);
  return result;
}

uint64_t sub_22D22EB28@<X0>(void *a1@<X8>)
{
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_activitySummaryType);
  sub_22D030474(0, &qword_26853E470);
  uint64_t v4 = (void *)MEMORY[0x230F7AD20]((id)*MEMORY[0x263F09C20]);
  char v5 = sub_22D2BD1A0();

  if ((v5 & 1) != 0
    || (id v6 = objc_msgSend(v2, sel_activitySummaryType),
        uint64_t v7 = (void *)MEMORY[0x230F7AD20]((id)*MEMORY[0x263F09C28]),
        char v8 = sub_22D2BD1A0(),
        v6,
        v7,
        (v8 & 1) != 0))
  {
    id v9 = objc_msgSend(v2, sel_correlationTypeForIdentifier_, *MEMORY[0x263F094C0]);
    if (v9) {
      goto LABEL_6;
    }
    LODWORD(v15) = 0;
    uint64_t v14 = 76;
    sub_22D2BD460();
    __break(1u);
  }
  id v9 = objc_msgSend(v2, sel_activitySummaryType, v14, v15);
LABEL_6:
  *a1 = v9;
  uint64_t v10 = *MEMORY[0x263F44A40];
  uint64_t v11 = sub_22D2BBF00();
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);
  return v12(a1, v10, v11);
}

uint64_t sub_22D22ED38@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
  sub_22D030474(0, &qword_26853E470);
  uint64_t v4 = (void *)*MEMORY[0x263F09C20];
  id v5 = a1;
  id v6 = (void *)MEMORY[0x230F7AD20](v4);
  LOBYTE(a1) = sub_22D2BD1A0();

  if (a1) {
    goto LABEL_3;
  }
  uint64_t v7 = (void *)*MEMORY[0x263F09C28];
  id v8 = v5;
  swift_retain();
  id v9 = (void *)MEMORY[0x230F7AD20](v7);
  LOBYTE(v7) = sub_22D2BD1A0();
  swift_release();

  if (v7)
  {
LABEL_3:
    id v10 = objc_msgSend(self, sel_correlationTypeForIdentifier_, *MEMORY[0x263F094C0]);
    if (!v10)
    {
      uint64_t result = sub_22D2BD460();
      __break(1u);
      return result;
    }
    *a2 = v10;
  }
  else
  {
    *a2 = v8;
    id v11 = v8;
  }
  uint64_t v12 = *MEMORY[0x263F44A40];
  uint64_t v13 = sub_22D2BBF00();
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  return v14(a2, v12, v13);
}

uint64_t sub_22D22EF38@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v25 - v8;
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
  uint64_t v10 = *(int *)(v7 + 32);
  id v11 = *(void **)(v4 + v10);
  sub_22D030474(0, &qword_26853E470);
  uint64_t v12 = (void *)*MEMORY[0x263F09C20];
  id v13 = v11;
  uint64_t v14 = (void *)MEMORY[0x230F7AD20](v12);
  LOBYTE(v11) = sub_22D2BD1A0();

  sub_22D239FCC(v6, (uint64_t)v9, a2);
  if (v11)
  {
    sub_22D23A034((uint64_t)v9, v25);
  }
  else
  {
    uint64_t v15 = (void *)*MEMORY[0x263F09C28];
    id v16 = *(id *)&v9[*(int *)(v7 + 32)];
    uint64_t v17 = (void *)MEMORY[0x230F7AD20](v15);
    LOBYTE(v15) = sub_22D2BD1A0();

    sub_22D23A034((uint64_t)v9, v25);
    if ((v15 & 1) == 0)
    {
      uint64_t v20 = *(void **)(v6 + v10);
      unint64_t v19 = v26;
      void *v26 = v20;
      id v21 = v20;
      goto LABEL_7;
    }
  }
  id v18 = objc_msgSend(self, sel_correlationTypeForIdentifier_, *MEMORY[0x263F094C0]);
  if (v18)
  {
    unint64_t v19 = v26;
    void *v26 = v18;
LABEL_7:
    uint64_t v22 = *MEMORY[0x263F44A40];
    uint64_t v23 = sub_22D2BBF00();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v19, v22, v23);
  }
  uint64_t result = sub_22D2BD460();
  __break(1u);
  return result;
}

uint64_t sub_22D22F1BC@<X0>(void *a1@<X3>, void *a2@<X8>)
{
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
  sub_22D030474(0, &qword_26853E470);
  uint64_t v4 = (void *)*MEMORY[0x263F09C20];
  id v5 = a1;
  uint64_t v6 = (void *)MEMORY[0x230F7AD20](v4);
  LOBYTE(a1) = sub_22D2BD1A0();

  if (a1) {
    goto LABEL_3;
  }
  uint64_t v7 = (void *)*MEMORY[0x263F09C28];
  id v8 = v5;
  swift_retain();
  id v9 = (void *)MEMORY[0x230F7AD20](v7);
  LOBYTE(v7) = sub_22D2BD1A0();
  swift_release();

  if (v7)
  {
LABEL_3:
    id v10 = objc_msgSend(self, sel_correlationTypeForIdentifier_, *MEMORY[0x263F094C0]);
    if (!v10)
    {
      uint64_t result = sub_22D2BD460();
      __break(1u);
      return result;
    }
    *a2 = v10;
  }
  else
  {
    *a2 = v8;
    id v11 = v8;
  }
  uint64_t v12 = *MEMORY[0x263F44A40];
  uint64_t v13 = sub_22D2BBF00();
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  return v14(a2, v12, v13);
}

BOOL sub_22D22F3BC(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_22D22F3F8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalSharingElectrocardiogramQuery.State()
{
  return self;
}

uint64_t *sub_22D22F42C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22D2BB6F0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v14 = (_OWORD *)((char *)v7 + v13);
    uint64_t v15 = (_OWORD *)((char *)a2 + v13);
    long long v16 = v15[1];
    _OWORD *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[8];
    uint64_t v18 = a3[9];
    unint64_t v19 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v7 + v17) = (uint64_t)v19;
    uint64_t v20 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)v7 + v18) = (uint64_t)v20;
    id v21 = v19;
    id v22 = v20;
  }
  return v7;
}

void sub_22D22F558(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = *(void **)(a1 + a2[9]);
}

void *sub_22D22F5F0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  long long v14 = v13[1];
  _OWORD *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  uint64_t v18 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v18;
  id v19 = v17;
  id v20 = v18;
  return a1;
}

void *sub_22D22F6D0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  uint64_t v13 = a3[8];
  long long v14 = *(void **)((char *)a2 + v13);
  uint64_t v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = a3[9];
  uint64_t v18 = *(void **)((char *)a2 + v17);
  id v19 = *(void **)((char *)a1 + v17);
  *(void *)((char *)a1 + v17) = v18;
  id v20 = v18;

  return a1;
}

void *sub_22D22F7D4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  long long v13 = v12[1];
  _OWORD *v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  return a1;
}

void *sub_22D22F890(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  long long v13 = v12[1];
  _OWORD *v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[8];
  uint64_t v15 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);

  uint64_t v16 = a3[9];
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);

  return a1;
}

uint64_t sub_22D22F968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D22F97C);
}

uint64_t sub_22D22F97C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F062D0]);
}

uint64_t sub_22D22F994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D22F9A8);
}

void *sub_22D22F9A8(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F062D0]);
}

uint64_t type metadata accessor for ClinicalSharingElectrocardiogramQuery(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542D48);
}

uint64_t sub_22D22F9E0()
{
  uint64_t result = sub_22D2BB6F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingElectrocardiogramQuery.WaveformCounts(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingElectrocardiogramQuery.WaveformCounts(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingElectrocardiogramQuery.WaveformCounts()
{
  return &type metadata for ClinicalSharingElectrocardiogramQuery.WaveformCounts;
}

uint64_t sub_22D22FB00()
{
  uint64_t v1 = type metadata accessor for ClinicalSharingElectrocardiogramQuery(0);
  uint64_t v2 = v1 - 8;
  uint64_t v53 = *(void *)(v1 - 8);
  uint64_t v52 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](v1);
  uint64_t v51 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22D2BCFB0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  uint64_t v50 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D231BF4();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (long long *)((char *)v0 + *(int *)(v2 + 36));
  long long v46 = *v14;
  uint64_t v16 = *((void *)v14 + 2);
  uint64_t v15 = *((void *)v14 + 3);
  type metadata accessor for ClinicalSharingElectrocardiogramQuery.State();
  uint64_t v17 = swift_allocObject();
  uint64_t v48 = v17;
  *(_OWORD *)(v17 + 16) = v46;
  *(void *)(v17 + 32) = v16;
  *(void *)(v17 + 40) = v15;
  uint64_t v18 = *(int *)(v2 + 40);
  char v45 = v0;
  *(void *)&long long v46 = v18;
  id v19 = *(void **)((char *)v0 + v18);
  id v20 = self;
  id v21 = v19;
  sub_22D2BB6C0();
  id v22 = (void *)sub_22D2BBBC0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v13, v10);
  sub_22D2BB690();
  uint64_t v24 = (void *)sub_22D2BBBC0();
  v23(v13, v10);
  id v25 = objc_msgSend(v20, sel_predicateForSamplesWithStartDate_endDate_options_, v22, v24, 0);

  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v21, v25);
  int64_t v27 = v45;
  uint64_t v28 = *(void **)((char *)v45 + v46);
  id v29 = v28;
  sub_22D229C74(0x706D61732D676365, 0xEB0000000073656CLL, v28, 5, 1);

  sub_22CFF4B00(*v27 + 16, (uint64_t)v58);
  __swift_project_boxed_opaque_existential_1(v58, v58[3]);
  sub_22D0A1910(0, (unint64_t *)&qword_2685426B0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_22D2BFBE0;
  *(void *)(v30 + 32) = v26;
  uint64_t v57 = v30;
  sub_22D2BCE20();
  id v31 = v26;
  sub_22D090418();
  uint64_t v32 = v47;
  sub_22D2BCFE0();
  sub_22D238010(&qword_26853DEB8, MEMORY[0x263F44AE8]);
  uint64_t v33 = v49;
  uint64_t v34 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = v34;
  uint64_t v35 = v51;
  sub_22D239FCC((uint64_t)v27, v51, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  unint64_t v36 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  unint64_t v37 = (v52 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  sub_22D238B28(v35, v38 + v36, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  *(void *)(v38 + v37) = v48;
  char v39 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D231D14(0, (unint64_t *)&qword_26853D768, (uint64_t (*)(uint64_t))sub_22D231D90, MEMORY[0x263EFDCF0]);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  sub_22D231D14(0, (unint64_t *)&qword_26AEC2E70, type metadata accessor for ClinicalSharingQueryOutput, v39);
  sub_22D2382F0(&qword_26853D780, (unint64_t *)&qword_26853D768, (uint64_t (*)(uint64_t))sub_22D231D90);
  sub_22D2382F0(&qword_26AEC2E68, (unint64_t *)&qword_26AEC2E70, type metadata accessor for ClinicalSharingQueryOutput);
  swift_retain();
  char v40 = v54;
  sub_22D2BC830();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_22D238010(&qword_268542D60, (void (*)(uint64_t))sub_22D231BF4);
  uint64_t v41 = v55;
  uint64_t v42 = sub_22D2BC720();

  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v41);
  return v42;
}

uint64_t sub_22D2301E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ClinicalSharingElectrocardiogramQuery(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D238058();
  uint64_t v39 = v10;
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D238108();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D238354();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v44 = v17;
  uint64_t v45 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v38 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2383E8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v46 = v20;
  uint64_t v47 = v21;
  MEMORY[0x270FA5388](v20);
  char v40 = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a1;
  sub_22D231D90();
  sub_22D238010(&qword_268542D70, (void (*)(uint64_t))sub_22D231D90);
  sub_22D2BCD80();
  unint64_t v36 = type metadata accessor for ClinicalSharingElectrocardiogramQuery;
  sub_22D239FCC(v3, (uint64_t)v9, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  uint64_t v23 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = (v23 + 16) & ~v23;
  v35[1] = (uint64_t (*)(void))(v23 | 7);
  v35[2] = (uint64_t (*)(void))(v24 + v8);
  uint64_t v25 = swift_allocObject();
  v35[0] = type metadata accessor for ClinicalSharingElectrocardiogramQuery;
  sub_22D238B28((uint64_t)v9, v25 + v24, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  *(void *)(v25 + ((v24 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  sub_22D231D14(0, &qword_268542D80, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData, MEMORY[0x263EFDCF0]);
  sub_22D238010(&qword_268542D90, (void (*)(uint64_t))sub_22D238058);
  sub_22D2382F0(&qword_268542D98, &qword_268542D80, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
  swift_retain();
  uint64_t v26 = v39;
  sub_22D2BC880();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v26);
  sub_22D238010(&qword_268542DB0, (void (*)(uint64_t))sub_22D238108);
  int64_t v27 = v38;
  uint64_t v28 = v42;
  sub_22D2BC800();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v28);
  sub_22D239FCC(v37, (uint64_t)v9, v36);
  uint64_t v29 = swift_allocObject();
  sub_22D238B28((uint64_t)v9, v29 + v24, v35[0]);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  sub_22D238010(&qword_268542DC0, (void (*)(uint64_t))sub_22D238354);
  uint64_t v30 = v40;
  uint64_t v31 = v44;
  sub_22D2BC730();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v31);
  sub_22D238010(&qword_268542DC8, (void (*)(uint64_t))sub_22D2383E8);
  uint64_t v32 = v46;
  uint64_t v33 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v32);
  return v33;
}

void sub_22D2307FC(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = v3;
    BOOL v7 = sub_22D230CEC((uint64_t)objc_msgSend(v5, sel_classification));
    uint64_t v8 = sub_22D230D64(v5, v7);

    *a2 = v8;
  }
  else
  {
    sub_22D2BD310();
    id v9 = objc_msgSend(v3, sel_description);
    sub_22D2BCBD0();
    swift_bridgeObjectRelease();

    sub_22D2BCCB0();
    sub_22D2BD460();
    __break(1u);
  }
}

uint64_t sub_22D230940@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D2387EC(0, &qword_26853DED0, type metadata accessor for PBTypedData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v22 - v5;
  uint64_t v7 = type metadata accessor for PBTypedData(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2387EC(0, &qword_26853D7A0, MEMORY[0x263F062D0], v3);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  swift_bridgeObjectRetain();
  sub_22D235E9C(&v24);
  uint64_t v17 = v24;
  uint64_t v18 = sub_22D22B560((uint64_t)v24);
  uint64_t v19 = sub_22D22B758((uint64_t)v17);
  swift_release();
  sub_22D22C8CC(v19, (uint64_t)v13);
  sub_22D22BA08(5, 1, (uint64_t)v13, (uint64_t)v16);
  sub_22D2389B8((uint64_t)v13, &qword_26853D7A0, MEMORY[0x263F062D0]);
  sub_22D231540(v18, (uint64_t)v16, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_22D23A034((uint64_t)v16, type metadata accessor for PBDateRange);
    swift_bridgeObjectRelease();
    sub_22D2389B8((uint64_t)v6, &qword_26853DED0, type metadata accessor for PBTypedData);
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(v23, 1, 1, Output);
  }
  else
  {
    sub_22D238B28((uint64_t)v6, (uint64_t)v10, type metadata accessor for PBTypedData);
    sub_22D22AEF4((uint64_t)v10, v19, v23);
    swift_bridgeObjectRelease();
    sub_22D23A034((uint64_t)v10, type metadata accessor for PBTypedData);
    return sub_22D23A034((uint64_t)v16, type metadata accessor for PBDateRange);
  }
}

BOOL sub_22D230CEC(uint64_t a1)
{
  uint64_t v3 = v1[2];
  BOOL result = v3 > 0;
  BOOL v5 = v3 < 1;
  uint64_t v6 = v3 - 1;
  if (!v5) {
    v1[2] = v6;
  }
  if (a1 == 2)
  {
    uint64_t v10 = v1[4];
    uint64_t v8 = v1 + 4;
    uint64_t v7 = v10;
LABEL_7:
    if (v7 <= 0) {
      return result;
    }
    goto LABEL_8;
  }
  if (a1 == 1)
  {
    uint64_t v9 = v1[3];
    uint64_t v8 = v1 + 3;
    uint64_t v7 = v9;
    goto LABEL_7;
  }
  if ((unint64_t)(a1 - 3) <= 3)
  {
    uint64_t v11 = v1[5];
    uint64_t v8 = v1 + 5;
    uint64_t v7 = v11;
    if (v11 >= 1)
    {
LABEL_8:
      *uint64_t v8 = v7 - 1;
      return 1;
    }
  }
  return result;
}

uint64_t sub_22D230D64(void *a1, int a2)
{
  uint64_t v55 = a1;
  LODWORD(v54) = a2;
  uint64_t v2 = type metadata accessor for PBECGMeasurement(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
  MEMORY[0x270FA5388](v57);
  uint64_t v6 = (uint64_t *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D2387EC(0, &qword_268542DF0, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData, MEMORY[0x263EFDDF8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v50 - v10;
  sub_22D231D14(0, &qword_268542DF8, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData, MEMORY[0x263EFDEA0]);
  uint64_t v13 = v12;
  uint64_t v52 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v50 - v14;
  uint64_t v16 = type metadata accessor for ClinicalSharingElectrocardiogramQuery(0);
  uint64_t v53 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](v16);
  sub_22D238C14();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v54)
  {
    uint64_t v23 = (uint64_t)v56;
    uint64_t v51 = v22;
    uint64_t v52 = v19;
    uint64_t v24 = *v56 + 16;
    uint64_t v54 = v20;
    sub_22CFF4B00(v24, (uint64_t)v59);
    uint64_t v25 = (void **)__swift_project_boxed_opaque_existential_1(v59, v59[3]);
    uint64_t v26 = *(void **)(v23 + *(int *)(v16 + 36));
    int64_t v27 = *v25;
    uint64_t v28 = (void *)swift_allocObject();
    uint64_t v29 = v55;
    v28[2] = v27;
    v28[3] = v29;
    v28[4] = 1;
    v28[5] = v26;
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_22D238CE0(0, &qword_268542E28, MEMORY[0x263EFDE20]);
    swift_allocObject();
    id v31 = v27;
    id v32 = v29;
    id v33 = v26;
    uint64_t v58 = sub_22D2BC6F0();
    sub_22D238E58(&qword_268542E30, &qword_268542E28, v30);
    uint64_t v34 = sub_22D2BC720();
    swift_release();
    uint64_t v58 = v34;
    sub_22D239FCC(v23, (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ClinicalSharingElectrocardiogramQuery);
    unint64_t v35 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    uint64_t v36 = swift_allocObject();
    sub_22D238B28((uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
    *(void *)(v36 + ((v17 + v35 + 7) & 0xFFFFFFFFFFFFFFF8)) = v32;
    uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D238CE0(0, &qword_268542E08, MEMORY[0x263EFDCF0]);
    sub_22D238E58(&qword_268542E18, &qword_268542E08, v37);
    id v38 = v32;
    uint64_t v39 = v51;
    sub_22D2BC780();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    sub_22D238010(&qword_268542E38, (void (*)(uint64_t))sub_22D238C14);
    uint64_t v40 = v52;
    uint64_t v41 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v40);
  }
  else
  {
    uint64_t v42 = *(int *)(v16 + 36);
    uint64_t v54 = v8;
    uint64_t v43 = v9;
    uint64_t v44 = *(void **)((char *)v56 + v42);
    uint64_t v45 = (void *)MEMORY[0x230F7B690](v19);
    uint64_t v46 = v55;
    sub_22D2317FC(v55, MEMORY[0x263F8EE78], v44, (uint64_t)v4);
    sub_22D239FCC((uint64_t)v4, (uint64_t)v6 + *(int *)(v57 + 20), type metadata accessor for PBECGMeasurement);
    *uint64_t v6 = v46;
    id v47 = v46;
    sub_22D23A034((uint64_t)v4, type metadata accessor for PBECGMeasurement);
    sub_22D2BC6B0();
    sub_22CFF49FC();
    uint64_t v48 = v54;
    sub_22D2BC680();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v48);
    sub_22D238D7C();
    uint64_t v41 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v13);
  }
  return v41;
}

void sub_22D23142C(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for PBECGMeasurement(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = *(void **)(a2 + *(int *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) + 36));
  uint64_t v13 = (void *)MEMORY[0x230F7B690]();
  sub_22D2317FC(a3, v11, v12, (uint64_t)v10);
  uint64_t v14 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
  sub_22D239FCC((uint64_t)v10, (uint64_t)a4 + *(int *)(v14 + 20), type metadata accessor for PBECGMeasurement);
  *a4 = a3;
  id v15 = a3;
  sub_22D23A034((uint64_t)v10, type metadata accessor for PBECGMeasurement);
}

uint64_t sub_22D231540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22D2387EC(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = type metadata accessor for PBECGs(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (uint64_t *)((char *)&v20 - v13);
  if (*(void *)(a1 + 16))
  {
    sub_22D2BBFE0();
    void *v14 = a1;
    sub_22D239FCC(a2, (uint64_t)v8, type metadata accessor for PBDateRange);
    uint64_t v15 = type metadata accessor for PBDateRange(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
    swift_bridgeObjectRetain();
    sub_22D22D68C((uint64_t)v8, a3);
    sub_22D2389B8((uint64_t)v8, &qword_26853D7B0, type metadata accessor for PBDateRange);
    sub_22D239FCC((uint64_t)v14, (uint64_t)v12, type metadata accessor for PBECGs);
    PBTypedData.ecgs.setter((uint64_t)v12);
    uint64_t v16 = type metadata accessor for PBTypedData(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 0, 1, v16);
    return sub_22D23A034((uint64_t)v14, type metadata accessor for PBECGs);
  }
  else
  {
    uint64_t v18 = type metadata accessor for PBTypedData(0);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    return v19(a3, 1, 1, v18);
  }
}

uint64_t sub_22D2317FC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0xE000000000000000;
  *(_DWORD *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0;
  *(void *)(a4 + 32) = 0xE000000000000000;
  *(void *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0xE000000000000000;
  *(void *)(a4 + 56) = 0;
  *(void *)(a4 + 64) = 0xE000000000000000;
  *(void *)(a4 + 72) = 0;
  *(void *)(a4 + 80) = 0xE000000000000000;
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)(a4 + 88) = MEMORY[0x263F8EE78];
  *(void *)(a4 + 96) = v13;
  *(_DWORD *)(a4 + 104) = 0;
  *(void *)(a4 + 112) = 0;
  *(unsigned char *)(a4 + 120) = 1;
  type metadata accessor for PBECGMeasurement(0);
  sub_22D2BBFE0();
  id v14 = objc_msgSend(a1, sel_startDate);
  sub_22D2BBC00();

  id v15 = *(id *)(*v4 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  uint64_t v16 = (void *)sub_22D2BBBC0();
  id v17 = objc_msgSend(v15, sel_stringFromDate_, v16);

  uint64_t v18 = sub_22D2BCBD0();
  uint64_t v20 = v19;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_bridgeObjectRelease();
  *(void *)a4 = v18;
  *(void *)(a4 + 8) = v20;
  id v21 = objc_msgSend(a1, sel_samplingFrequency);
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = objc_msgSend(self, sel_hertzUnit);
    objc_msgSend(v22, sel_doubleValueForUnit_, v23);
    double v25 = v24;

    float v26 = v25;
    *(float *)(a4 + 16) = v26;
  }
  id v27 = objc_msgSend(a1, sel_device);
  if (v27)
  {
    uint64_t v28 = v27;
    id v29 = objc_msgSend(v27, sel_name);

    if (v29)
    {
      uint64_t v30 = sub_22D2BCBD0();
      uint64_t v32 = v31;

      swift_bridgeObjectRelease();
      *(void *)(a4 + 24) = v30;
      *(void *)(a4 + 32) = v32;
    }
  }
  id v33 = objc_msgSend(a1, sel__localizedSymptoms);
  uint64_t v34 = sub_22D2BCE00();

  swift_bridgeObjectRelease();
  *(void *)(a4 + 88) = v34;
  sub_22D231BB0((unint64_t)objc_msgSend(a1, sel_classification), (uint64_t)&v46);
  if ((v48 & 1) == 0)
  {
    char v35 = v47;
    *(void *)(a4 + 112) = v46;
    *(unsigned char *)(a4 + 120) = v35 & 1;
  }
  id v36 = objc_msgSend(a1, sel_averageHeartRate);
  if (v36)
  {
    uint64_t v37 = v36;
    objc_msgSend(v36, sel__beatsPerMinute);
    double v39 = v38;

    float v40 = v39;
    *(float *)(a4 + 104) = v40;
  }
  swift_bridgeObjectRelease();
  *(void *)(a4 + 56) = 73;
  *(void *)(a4 + 64) = 0xE100000000000000;
  id v41 = objc_msgSend(a3, sel_unitString);
  uint64_t v42 = sub_22D2BCBD0();
  uint64_t v44 = v43;

  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a4 + 72) = v42;
  *(void *)(a4 + 80) = v44;
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a4 + 96) = a2;
  }
  return result;
}

unint64_t sub_22D231BB0@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = 7;
  if (result != 100) {
    uint64_t v2 = 0;
  }
  BOOL v3 = result != 100;
  if (result >= 7)
  {
    BOOL v4 = result == 100;
  }
  else
  {
    uint64_t v2 = result;
    BOOL v4 = 1;
  }
  *(void *)a2 = v2;
  if (result < 7) {
    BOOL v3 = 0;
  }
  *(unsigned char *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 9) = v3;
  return result;
}

void sub_22D231BF4()
{
  if (!qword_268542D58)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D231D14(255, (unint64_t *)&qword_26AEC2E70, type metadata accessor for ClinicalSharingQueryOutput, MEMORY[0x263EFDCF0]);
    sub_22D231D14(255, (unint64_t *)&qword_26853D768, (uint64_t (*)(uint64_t))sub_22D231D90, v0);
    sub_22D2382F0(&qword_26AEC2E68, (unint64_t *)&qword_26AEC2E70, type metadata accessor for ClinicalSharingQueryOutput);
    sub_22D2382F0(&qword_26853D780, (unint64_t *)&qword_26853D768, (uint64_t (*)(uint64_t))sub_22D231D90);
    unint64_t v1 = sub_22D2BC520();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268542D58);
    }
  }
}

void sub_22D231D14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_22CFF49FC();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_22D231D90()
{
  if (!qword_26853D770)
  {
    sub_22D030474(255, (unint64_t *)&qword_26853D778);
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853D770);
    }
  }
}

uint64_t sub_22D231DF8(uint64_t a1, char *a2)
{
  return sub_22D231EA0(a1, a2, MEMORY[0x263F07508], (void (*)(uint64_t))sub_22D1E57A8, (void (*)(void, void, void))sub_22D233930, (void (*)(uint64_t))sub_22D238850);
}

uint64_t sub_22D231E4C(uint64_t a1, char *a2)
{
  return sub_22D231EA0(a1, a2, MEMORY[0x263F44A78], (void (*)(uint64_t))sub_22D238984, (void (*)(void, void, void))sub_22D233C10, (void (*)(uint64_t))sub_22D239070);
}

uint64_t sub_22D231EA0(uint64_t a1, char *a2, uint64_t (*a3)(void), void (*a4)(uint64_t), void (*a5)(void, void, void), void (*a6)(uint64_t))
{
  uint64_t v45 = a6;
  unint64_t v9 = v6;
  uint64_t v12 = a3(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v37 - v15;
  uint64_t v17 = *v6;
  a4(v14);
  swift_bridgeObjectRetain();
  uint64_t v46 = a2;
  uint64_t v18 = sub_22D2BCB30();
  uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
  unint64_t v20 = v18 & ~v19;
  uint64_t v44 = v17 + 56;
  uint64_t v21 = *(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20;
  uint64_t v41 = a1;
  if (v21)
  {
    double v39 = a5;
    float v40 = v6;
    uint64_t v42 = ~v19;
    uint64_t v38 = v13;
    double v24 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v23 = v13 + 16;
    uint64_t v22 = v24;
    uint64_t v43 = *(void *)(v23 + 56);
    double v25 = (void (**)(char *, uint64_t))(v23 - 8);
    v37[1] = v23 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v26 = v17;
      unint64_t v27 = v43 * v20;
      unint64_t v28 = *(void *)(v17 + 48) + v43 * v20;
      id v29 = v22;
      uint64_t v30 = ((uint64_t (*)(char *, unint64_t, uint64_t))v22)(v16, v28, v12);
      v45(v30);
      char v31 = sub_22D2BCB90();
      uint64_t v32 = *v25;
      (*v25)(v16, v12);
      if (v31) {
        break;
      }
      unint64_t v20 = (v20 + 1) & v42;
      uint64_t v22 = v29;
      uint64_t v17 = v26;
      if (((*(void *)(v44 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a5 = v39;
        unint64_t v9 = v40;
        uint64_t v33 = v38;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v32(v46, v12);
    v29(v41, *(void *)(*v40 + 48) + v27, v12);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v33 = v13;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v35 = v46;
    v22(v16, v46, v12);
    uint64_t v47 = *v9;
    *unint64_t v9 = 0x8000000000000000;
    a5(v16, v20, isUniquelyReferenced_nonNull_native);
    *unint64_t v9 = v47;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v41, v35, v12);
    return 1;
  }
}

uint64_t sub_22D232188(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_22D2BD730();
  swift_bridgeObjectRetain();
  sub_22D2BCC70();
  uint64_t v8 = sub_22D2BD760();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_22D2BD660() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_22D2BD660() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *BOOL v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_22D233EF0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *BOOL v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_22D232338(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v107 = *MEMORY[0x263EF8340];
  uint64_t v10 = *v5;
  sub_22D2BD730();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22D2BCC70();
  swift_bridgeObjectRelease();
  sub_22CFF9B64(a4, a5);
  sub_22D2BBB30();
  sub_22CFF5630(a4, a5);
  uint64_t v11 = sub_22D2BD760();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v99 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v14 = a5 >> 62;
    uint64_t v98 = ~v12;
    BOOL v15 = __OFSUB__(HIDWORD(a4), a4);
    BOOL v92 = v15;
    size_t __n = BYTE6(a5);
    uint64_t v88 = (a4 >> 32) - (int)a4;
    uint64_t v89 = a4 >> 32;
    unint64_t v93 = a5;
    uint64_t v94 = a2;
    uint64_t v95 = v10;
    unint64_t v97 = a5 >> 62;
    do
    {
      uint64_t v16 = (void *)(*(void *)(v10 + 48) + 32 * v13);
      uint64_t v18 = v16[2];
      unint64_t v17 = v16[3];
      if (*v16 != a2 || v16[1] != a3)
      {
        char v20 = sub_22D2BD660();
        LODWORD(v14) = v97;
        if ((v20 & 1) == 0) {
          goto LABEL_7;
        }
      }
      uint64_t v21 = 0;
      switch(v17 >> 62)
      {
        case 1uLL:
          LODWORD(v21) = HIDWORD(v18) - v18;
          if (__OFSUB__(HIDWORD(v18), v18))
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
          }
          uint64_t v21 = (int)v21;
LABEL_18:
          size_t v25 = __n;
          switch((int)v14)
          {
            case 1:
              size_t v25 = HIDWORD(a4) - (int)a4;
              if (v92) {
                goto LABEL_123;
              }
              goto LABEL_22;
            case 2:
              uint64_t v27 = *(void *)(a4 + 16);
              uint64_t v26 = *(void *)(a4 + 24);
              BOOL v24 = __OFSUB__(v26, v27);
              size_t v25 = v26 - v27;
              if (!v24) {
                goto LABEL_22;
              }
              goto LABEL_124;
            case 3:
              if (v21) {
                goto LABEL_7;
              }
              goto LABEL_119;
            default:
LABEL_22:
              if (v21 != v25) {
                goto LABEL_7;
              }
              if (v21 < 1) {
                goto LABEL_119;
              }
              break;
          }
          break;
        case 2uLL:
          uint64_t v23 = *(void *)(v18 + 16);
          uint64_t v22 = *(void *)(v18 + 24);
          BOOL v24 = __OFSUB__(v22, v23);
          uint64_t v21 = v22 - v23;
          if (!v24) {
            goto LABEL_18;
          }
          goto LABEL_122;
        case 3uLL:
          goto LABEL_18;
        default:
          uint64_t v21 = BYTE6(v17);
          goto LABEL_18;
      }
      switch(v17 >> 62)
      {
        case 1uLL:
          if ((int)v18 > v18 >> 32) {
            goto LABEL_125;
          }
          swift_bridgeObjectRetain();
          sub_22CFF9B64(v18, v17);
          sub_22CFF9B64(v18, v17);
          uint64_t v32 = sub_22D2BB7C0();
          if (v32)
          {
            uint64_t v33 = v32;
            uint64_t v34 = sub_22D2BB7F0();
            if (__OFSUB__((int)v18, v34)) {
              goto LABEL_127;
            }
            unint64_t v85 = (void *)(v33 + (int)v18 - v34);
          }
          else
          {
            unint64_t v85 = 0;
          }
          uint64_t v10 = v95;
          sub_22D2BB7E0();
          a2 = v94;
          if (!v97)
          {
            *(void *)__s1 = a4;
            *(_WORD *)&__s1[8] = a5;
            __s1[10] = BYTE2(a5);
            __s1[11] = BYTE3(a5);
            __s1[12] = BYTE4(a5);
            __s1[13] = BYTE5(a5);
            if (!v85) {
              goto LABEL_155;
            }
            int v43 = memcmp(v85, __s1, __n);
            sub_22CFF5630(v18, v17);
            swift_bridgeObjectRelease();
            sub_22CFF5630(v18, v17);
            goto LABEL_118;
          }
          if (v97 == 1)
          {
            if (v89 < (int)a4) {
              goto LABEL_136;
            }
            swift_retain();
            uint64_t v51 = (char *)sub_22D2BB7C0();
            if (v51)
            {
              uint64_t v52 = sub_22D2BB7F0();
              if (__OFSUB__((int)a4, v52)) {
                goto LABEL_143;
              }
              v51 += (int)a4 - v52;
            }
            uint64_t v53 = sub_22D2BB7E0();
            size_t v54 = (a4 >> 32) - (int)a4;
            if (v53 < v88) {
              size_t v54 = v53;
            }
            if (!v85) {
              goto LABEL_148;
            }
            if (!v51) {
              goto LABEL_149;
            }
            int v43 = memcmp(v85, v51, v54);
            sub_22CFF5630(a4, a5);
          }
          else
          {
            uint64_t v72 = *(void *)(a4 + 16);
            uint64_t v71 = *(void *)(a4 + 24);
            swift_retain();
            swift_retain();
            uint64_t v73 = (char *)sub_22D2BB7C0();
            if (v73)
            {
              uint64_t v74 = sub_22D2BB7F0();
              if (__OFSUB__(v72, v74)) {
                goto LABEL_142;
              }
              v73 += v72 - v74;
            }
            BOOL v24 = __OFSUB__(v71, v72);
            int64_t v75 = v71 - v72;
            if (v24) {
              goto LABEL_137;
            }
            uint64_t v76 = sub_22D2BB7E0();
            if (v76 >= v75) {
              size_t v77 = v75;
            }
            else {
              size_t v77 = v76;
            }
            if (!v85) {
              goto LABEL_156;
            }
            a5 = v93;
            a2 = v94;
            if (!v73) {
              goto LABEL_157;
            }
            int v43 = memcmp(v85, v73, v77);
            swift_release();
            swift_release();
          }
          uint64_t v44 = v18;
          unint64_t v45 = v17;
          goto LABEL_116;
        case 2uLL:
          uint64_t v35 = *(void *)(v18 + 16);
          swift_bridgeObjectRetain();
          sub_22CFF9B64(v18, v17);
          swift_retain();
          swift_retain();
          uint64_t v36 = sub_22D2BB7C0();
          if (v36)
          {
            uint64_t v37 = v36;
            uint64_t v38 = sub_22D2BB7F0();
            if (__OFSUB__(v35, v38)) {
              goto LABEL_126;
            }
            uint64_t v86 = (void *)(v37 + v35 - v38);
          }
          else
          {
            uint64_t v86 = 0;
          }
          sub_22D2BB7E0();
          a5 = v93;
          a2 = v94;
          if (!v97)
          {
            *(void *)__s1 = a4;
            *(_WORD *)&__s1[8] = v93;
            *(_DWORD *)&__s1[10] = *(_DWORD *)((char *)&v93 + 2);
            if (!v86) {
              goto LABEL_152;
            }
            int v43 = memcmp(v86, __s1, __n);
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            goto LABEL_117;
          }
          if (v97 == 1)
          {
            if (v89 < (int)a4) {
              goto LABEL_130;
            }
            swift_retain();
            uint64_t v47 = (char *)sub_22D2BB7C0();
            if (v47)
            {
              uint64_t v48 = sub_22D2BB7F0();
              if (__OFSUB__((int)a4, v48)) {
                goto LABEL_141;
              }
              v47 += (int)a4 - v48;
            }
            uint64_t v49 = sub_22D2BB7E0();
            size_t v50 = (a4 >> 32) - (int)a4;
            if (v49 < v88) {
              size_t v50 = v49;
            }
            if (!v86) {
              goto LABEL_146;
            }
            if (!v47) {
              goto LABEL_147;
            }
            int v43 = memcmp(v86, v47, v50);
            sub_22CFF5630(a4, v93);
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            uint64_t v65 = *(void *)(a4 + 16);
            uint64_t v84 = *(void *)(a4 + 24);
            swift_retain();
            swift_retain();
            unint64_t v66 = (char *)sub_22D2BB7C0();
            if (v66)
            {
              uint64_t v67 = sub_22D2BB7F0();
              if (__OFSUB__(v65, v67)) {
                goto LABEL_140;
              }
              v66 += v65 - v67;
            }
            BOOL v24 = __OFSUB__(v84, v65);
            int64_t v68 = v84 - v65;
            if (v24) {
              goto LABEL_135;
            }
            uint64_t v69 = sub_22D2BB7E0();
            if (v69 >= v68) {
              size_t v70 = v68;
            }
            else {
              size_t v70 = v69;
            }
            if (!v86) {
              goto LABEL_153;
            }
            a5 = v93;
            if (!v66) {
              goto LABEL_154;
            }
            int v43 = memcmp(v86, v66, v70);
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
          }
          swift_release();
          sub_22CFF5630(v18, v17);
          a2 = v94;
          uint64_t v10 = v95;
          goto LABEL_118;
        case 3uLL:
          *(void *)&__s1[6] = 0;
          *(void *)__s1 = 0;
          if (!v14) {
            goto LABEL_48;
          }
          if (v14 == 1)
          {
            if (v89 < (int)a4) {
              goto LABEL_129;
            }
            sub_22CFF9B64(a4, a5);
            swift_bridgeObjectRetain();
            sub_22CFF9B64(v18, v17);
            uint64_t v39 = sub_22D2BB7C0();
            if (!v39) {
              goto LABEL_145;
            }
            uint64_t v29 = v39;
            uint64_t v40 = sub_22D2BB7F0();
            uint64_t v31 = (int)a4 - v40;
            if (__OFSUB__((int)a4, v40)) {
              goto LABEL_134;
            }
            goto LABEL_44;
          }
          uint64_t v62 = *(void *)(a4 + 16);
          uint64_t v61 = *(void *)(a4 + 24);
          swift_bridgeObjectRetain();
          sub_22CFF9B64(v18, v17);
          swift_retain();
          swift_retain();
          uint64_t v57 = (char *)sub_22D2BB7C0();
          if (v57)
          {
            uint64_t v63 = sub_22D2BB7F0();
            if (__OFSUB__(v62, v63)) {
              goto LABEL_139;
            }
            v57 += v62 - v63;
          }
          BOOL v24 = __OFSUB__(v61, v62);
          int64_t v59 = v61 - v62;
          if (v24) {
            goto LABEL_132;
          }
          uint64_t v60 = sub_22D2BB7E0();
          if (!v57) {
            goto LABEL_151;
          }
          break;
        default:
          *(void *)__s1 = v18;
          *(_WORD *)&__s1[8] = v17;
          __s1[10] = BYTE2(v17);
          __s1[11] = BYTE3(v17);
          __s1[12] = BYTE4(v17);
          __s1[13] = BYTE5(v17);
          if (!v14)
          {
LABEL_48:
            uint64_t __s2 = a4;
            __int16 v101 = a5;
            char v102 = BYTE2(a5);
            char v103 = BYTE3(a5);
            char v104 = BYTE4(a5);
            char v105 = BYTE5(a5);
            int v46 = memcmp(__s1, &__s2, __n);
            LODWORD(v14) = v97;
            if (!v46) {
              goto LABEL_119;
            }
            goto LABEL_7;
          }
          if (v14 == 1)
          {
            if (v89 < (int)a4) {
              goto LABEL_128;
            }
            sub_22CFF9B64(a4, a5);
            swift_bridgeObjectRetain();
            sub_22CFF9B64(v18, v17);
            uint64_t v28 = sub_22D2BB7C0();
            if (!v28)
            {
              sub_22D2BB7E0();
              __break(1u);
LABEL_145:
              sub_22D2BB7E0();
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
              JUMPOUT(0x22D232ED4);
            }
            uint64_t v29 = v28;
            uint64_t v30 = sub_22D2BB7F0();
            uint64_t v31 = (int)a4 - v30;
            if (__OFSUB__((int)a4, v30)) {
              goto LABEL_133;
            }
LABEL_44:
            uint64_t v41 = sub_22D2BB7E0();
            if (v41 >= v88) {
              size_t v42 = (a4 >> 32) - (int)a4;
            }
            else {
              size_t v42 = v41;
            }
            int v43 = memcmp(__s1, (const void *)(v29 + v31), v42);
            uint64_t v44 = a4;
            a5 = v93;
            unint64_t v45 = v93;
LABEL_116:
            sub_22CFF5630(v44, v45);
            swift_bridgeObjectRelease();
LABEL_117:
            sub_22CFF5630(v18, v17);
            uint64_t v10 = v95;
LABEL_118:
            LODWORD(v14) = v97;
            if (!v43) {
              goto LABEL_119;
            }
            goto LABEL_7;
          }
          uint64_t v56 = *(void *)(a4 + 16);
          uint64_t v55 = *(void *)(a4 + 24);
          swift_bridgeObjectRetain();
          sub_22CFF9B64(v18, v17);
          swift_retain();
          swift_retain();
          uint64_t v57 = (char *)sub_22D2BB7C0();
          if (v57)
          {
            uint64_t v58 = sub_22D2BB7F0();
            if (__OFSUB__(v56, v58)) {
              goto LABEL_138;
            }
            v57 += v56 - v58;
          }
          BOOL v24 = __OFSUB__(v55, v56);
          int64_t v59 = v55 - v56;
          if (v24) {
            goto LABEL_131;
          }
          uint64_t v60 = sub_22D2BB7E0();
          if (!v57) {
            goto LABEL_150;
          }
          break;
      }
      if (v60 >= v59) {
        size_t v64 = v59;
      }
      else {
        size_t v64 = v60;
      }
      int v87 = memcmp(__s1, v57, v64);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_22CFF5630(v18, v17);
      a5 = v93;
      a2 = v94;
      uint64_t v10 = v95;
      LODWORD(v14) = v97;
      if (!v87)
      {
LABEL_119:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22CFF5630(a4, a5);
        uint64_t v78 = (uint64_t *)(*(void *)(*(void *)v90 + 48) + 32 * v13);
        uint64_t v79 = v78[1];
        uint64_t v80 = v78[2];
        unint64_t v81 = v78[3];
        *a1 = *v78;
        a1[1] = v79;
        a1[2] = v80;
        a1[3] = v81;
        swift_bridgeObjectRetain();
        sub_22CFF9B64(v80, v81);
        return 0;
      }
LABEL_7:
      unint64_t v13 = (v13 + 1) & v98;
    }
    while (((*(void *)(v99 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)__s1 = *(void *)v90;
  *(void *)uint64_t v90 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_22CFF9B64(a4, a5);
  sub_22D23408C(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v90 = *(void *)__s1;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  uint64_t result = 1;
  a1[2] = a4;
  a1[3] = a5;
  return result;
}

uint64_t sub_22D232F04(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v47 = a4;
  uint64_t v6 = v4;
  uint64_t v50 = a2(0);
  uint64_t v7 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v41 - v8;
  uint64_t v9 = *v4;
  a3(0);
  uint64_t v10 = sub_22D2BD2E0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v44 = (void *)(v9 + 56);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    size_t v42 = v6;
    int64_t v43 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v46 = v7;
    uint64_t v16 = v10 + 56;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v45 = v11;
    uint64_t v19 = v50;
    uint64_t v20 = v11;
    while (1)
    {
      if (v15)
      {
        unint64_t v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        int64_t v48 = v18;
        unint64_t v23 = v22 | (v18 << 6);
      }
      else
      {
        int64_t v24 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v43) {
          goto LABEL_33;
        }
        unint64_t v25 = v44[v24];
        int64_t v26 = v18 + 1;
        if (!v25)
        {
          int64_t v26 = v18 + 2;
          if (v18 + 2 >= v43) {
            goto LABEL_33;
          }
          unint64_t v25 = v44[v26];
          if (!v25)
          {
            int64_t v26 = v18 + 3;
            if (v18 + 3 >= v43) {
              goto LABEL_33;
            }
            unint64_t v25 = v44[v26];
            if (!v25)
            {
              uint64_t v27 = v18 + 4;
              if (v18 + 4 >= v43)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v42;
                uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
                if (v40 > 63) {
                  bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v44 = -1 << v40;
                }
                *(void *)(v9 + 16) = 0;
                break;
              }
              unint64_t v25 = v44[v27];
              if (!v25)
              {
                while (1)
                {
                  int64_t v26 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_39;
                  }
                  if (v26 >= v43) {
                    goto LABEL_33;
                  }
                  unint64_t v25 = v44[v26];
                  ++v27;
                  if (v25) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v26 = v18 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v15 = (v25 - 1) & v25;
        int64_t v48 = v26;
        unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
      }
      uint64_t v28 = v9;
      uint64_t v29 = *(void *)(v9 + 48);
      uint64_t v30 = *(void *)(v46 + 72);
      uint64_t v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v46 + 32);
      uint64_t v32 = v31(v49, v29 + v30 * v23, v19);
      v47(v32);
      uint64_t result = sub_22D2BCB30();
      uint64_t v11 = v20;
      uint64_t v33 = -1 << *(unsigned char *)(v20 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v16 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v21 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v16 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      uint64_t result = v31((char *)(*(void *)(v20 + 48) + v21 * v30), (unint64_t)v49, v50);
      ++*(void *)(v20 + 16);
      uint64_t v9 = v28;
      int64_t v18 = v48;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v11;
  return result;
}

uint64_t sub_22D2332E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_22D239204(0, &qword_268542E40, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F8DBD8]);
  uint64_t v3 = sub_22D2BD2E0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_22D2BD730();
      sub_22D2BCC70();
      uint64_t result = sub_22D2BD760();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22D2335F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_22D2392A8();
  uint64_t v3 = sub_22D2BD2E0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      unint64_t v23 = v19[3];
      sub_22D2BD730();
      swift_bridgeObjectRetain();
      sub_22D2BCC70();
      swift_bridgeObjectRelease();
      sub_22CFF9B64(v22, v23);
      sub_22D2BBB30();
      sub_22CFF5630(v22, v23);
      uint64_t result = sub_22D2BD760();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
      void *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      v12[3] = v23;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22D233930(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_22D2BBC90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v29 = v3;
  uint64_t v30 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_22D232F04(v12, MEMORY[0x263F07508], sub_22D238884, (void (*)(uint64_t))sub_22D1E57A8);
  }
  else
  {
    if (v11 > v10)
    {
      sub_22D234EC4(MEMORY[0x263F07508], sub_22D238884);
      goto LABEL_12;
    }
    sub_22D235520(v12, MEMORY[0x263F07508], sub_22D238884, (void (*)(uint64_t))sub_22D1E57A8);
  }
  uint64_t v13 = *v3;
  sub_22D1E57A8();
  uint64_t v14 = sub_22D2BCB30();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v9, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_22D238850();
      char v22 = sub_22D2BCB90();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v9, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_22D2BD690();
  __break(1u);
  return result;
}

uint64_t sub_22D233C10(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_22D2BBF00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v29 = v3;
  uint64_t v30 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_22D232F04(v12, MEMORY[0x263F44A78], (void (*)(void))sub_22D05D40C, (void (*)(uint64_t))sub_22D238984);
  }
  else
  {
    if (v11 > v10)
    {
      sub_22D234EC4(MEMORY[0x263F44A78], (void (*)(void))sub_22D05D40C);
      goto LABEL_12;
    }
    sub_22D235520(v12, MEMORY[0x263F44A78], (void (*)(void))sub_22D05D40C, (void (*)(uint64_t))sub_22D238984);
  }
  uint64_t v13 = *v3;
  sub_22D238984();
  uint64_t v14 = sub_22D2BCB30();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v9, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_22D239070();
      char v22 = sub_22D2BCB90();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v9, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_22D2BD690();
  __break(1u);
  return result;
}

uint64_t sub_22D233EF0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_22D2332E8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_22D235178();
      goto LABEL_22;
    }
    sub_22D2358B0();
  }
  uint64_t v11 = *v4;
  sub_22D2BD730();
  sub_22D2BCC70();
  uint64_t result = sub_22D2BD760();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_22D2BD660(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_22D2BD690();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_22D2BD660();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_22D23408C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  uint64_t v11 = result;
  uint64_t v102 = *MEMORY[0x263EF8340];
  unint64_t v12 = *(void *)(*v6 + 16);
  unint64_t v13 = *(void *)(*v6 + 24);
  if (v13 <= v12 || (a6 & 1) == 0)
  {
    if (a6)
    {
      sub_22D2335F0();
    }
    else
    {
      if (v13 > v12)
      {
        uint64_t result = (uint64_t)sub_22D235354();
        goto LABEL_127;
      }
      sub_22D235B88();
    }
    uint64_t v14 = *v6;
    sub_22D2BD730();
    swift_bridgeObjectRetain();
    sub_22D2BCC70();
    swift_bridgeObjectRelease();
    sub_22CFF9B64(a3, a4);
    sub_22D2BBB30();
    sub_22CFF5630(a3, a4);
    uint64_t result = sub_22D2BD760();
    uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
    a5 = result & ~v15;
    uint64_t v94 = v14 + 56;
    if ((*(void *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
    {
      uint64_t v16 = v14;
      unint64_t v17 = a4 >> 62;
      uint64_t v93 = ~v15;
      BOOL v18 = __OFSUB__(HIDWORD(a3), a3);
      BOOL v87 = v18;
      uint64_t v86 = v11;
      size_t __n = BYTE6(a4);
      uint64_t v82 = (a3 >> 32) - (int)a3;
      uint64_t v83 = a3 >> 32;
      unint64_t v88 = a4;
      uint64_t v89 = v14;
      unint64_t v92 = a4 >> 62;
      do
      {
        uint64_t v19 = (uint64_t *)(*(void *)(v16 + 48) + 32 * a5);
        uint64_t result = *v19;
        uint64_t v20 = v19[2];
        unint64_t v21 = v19[3];
        BOOL v22 = *v19 == v11 && v19[1] == a2;
        if (v22 || (uint64_t result = sub_22D2BD660(), LODWORD(v17) = v92, (result & 1) != 0))
        {
          uint64_t v23 = 0;
          switch(v21 >> 62)
          {
            case 1uLL:
              LODWORD(v23) = HIDWORD(v20) - v20;
              if (__OFSUB__(HIDWORD(v20), v20))
              {
                __break(1u);
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
LABEL_132:
                __break(1u);
                goto LABEL_133;
              }
              uint64_t v23 = (int)v23;
LABEL_25:
              size_t v27 = __n;
              switch((int)v17)
              {
                case 1:
                  size_t v27 = HIDWORD(a3) - (int)a3;
                  if (v87) {
                    goto LABEL_132;
                  }
                  goto LABEL_29;
                case 2:
                  uint64_t v29 = *(void *)(a3 + 16);
                  uint64_t v28 = *(void *)(a3 + 24);
                  BOOL v26 = __OFSUB__(v28, v29);
                  size_t v27 = v28 - v29;
                  if (!v26) {
                    goto LABEL_29;
                  }
                  goto LABEL_131;
                case 3:
                  if (v23) {
                    goto LABEL_14;
                  }
                  goto LABEL_126;
                default:
LABEL_29:
                  if (v23 != v27) {
                    goto LABEL_14;
                  }
                  if (v23 < 1) {
                    goto LABEL_126;
                  }
                  break;
              }
              switch(v21 >> 62)
              {
                case 1uLL:
                  if ((int)v20 > v20 >> 32) {
                    goto LABEL_134;
                  }
                  swift_bridgeObjectRetain();
                  sub_22CFF9B64(v20, v21);
                  sub_22CFF9B64(v20, v21);
                  uint64_t v43 = sub_22D2BB7C0();
                  if (v43)
                  {
                    uint64_t v44 = v43;
                    uint64_t v45 = sub_22D2BB7F0();
                    if (__OFSUB__((int)v20, v45)) {
                      goto LABEL_136;
                    }
                    uint64_t v46 = (const void *)(v44 + (int)v20 - v45);
                  }
                  else
                  {
                    uint64_t v46 = 0;
                  }
                  sub_22D2BB7E0();
                  if (v92)
                  {
                    if (v92 == 1)
                    {
                      if (v83 < (int)a3) {
                        goto LABEL_145;
                      }
                      swift_retain();
                      uint64_t v51 = (char *)sub_22D2BB7C0();
                      if (v51)
                      {
                        uint64_t v52 = sub_22D2BB7F0();
                        if (__OFSUB__((int)a3, v52)) {
                          goto LABEL_152;
                        }
                        v51 += (int)a3 - v52;
                      }
                      uint64_t v53 = sub_22D2BB7E0();
                      size_t v54 = (a3 >> 32) - (int)a3;
                      if (v53 < v82) {
                        size_t v54 = v53;
                      }
                      if (!v46) {
                        goto LABEL_157;
                      }
                      uint64_t v16 = v89;
                      if (!v51) {
                        goto LABEL_158;
                      }
                      int v42 = memcmp(v46, v51, v54);
                      sub_22CFF5630(a3, a4);
                    }
                    else
                    {
                      uint64_t v71 = *(void *)(a3 + 16);
                      unint64_t v85 = *(char **)(a3 + 24);
                      swift_retain();
                      swift_retain();
                      uint64_t v72 = (char *)sub_22D2BB7C0();
                      if (v72)
                      {
                        uint64_t v73 = sub_22D2BB7F0();
                        if (__OFSUB__(v71, v73)) {
                          goto LABEL_151;
                        }
                        v72 += v71 - v73;
                      }
                      BOOL v26 = __OFSUB__(v85, v71);
                      uint64_t v74 = &v85[-v71];
                      if (v26) {
                        goto LABEL_146;
                      }
                      uint64_t v75 = sub_22D2BB7E0();
                      if (v75 >= (uint64_t)v74) {
                        size_t v76 = (size_t)v74;
                      }
                      else {
                        size_t v76 = v75;
                      }
                      if (!v46) {
                        goto LABEL_165;
                      }
                      a4 = v88;
                      uint64_t v16 = v89;
                      if (!v72) {
                        goto LABEL_166;
                      }
                      int v42 = memcmp(v46, v72, v76);
                      swift_release();
                      swift_release();
                    }
                  }
                  else
                  {
                    *(void *)__s1 = a3;
                    *(_WORD *)&__s1[8] = a4;
                    __s1[10] = BYTE2(a4);
                    __s1[11] = BYTE3(a4);
                    __s1[12] = BYTE4(a4);
                    __s1[13] = BYTE5(a4);
                    uint64_t v16 = v89;
                    if (!v46) {
                      goto LABEL_164;
                    }
                    int v42 = memcmp(v46, __s1, __n);
                  }
                  sub_22CFF5630(v20, v21);
                  swift_bridgeObjectRelease();
                  goto LABEL_124;
                case 2uLL:
                  uint64_t v34 = *(void *)(v20 + 16);
                  swift_bridgeObjectRetain();
                  sub_22CFF9B64(v20, v21);
                  swift_retain();
                  swift_retain();
                  uint64_t v35 = sub_22D2BB7C0();
                  if (v35)
                  {
                    uint64_t v36 = v35;
                    uint64_t v37 = sub_22D2BB7F0();
                    if (__OFSUB__(v34, v37)) {
                      goto LABEL_135;
                    }
                    uint64_t v84 = (void *)(v36 + v34 - v37);
                  }
                  else
                  {
                    uint64_t v84 = 0;
                  }
                  sub_22D2BB7E0();
                  a4 = v88;
                  if (!v92)
                  {
                    *(void *)__s1 = a3;
                    *(_WORD *)&__s1[8] = v88;
                    *(_DWORD *)&__s1[10] = *(_DWORD *)((char *)&v88 + 2);
                    uint64_t v16 = v89;
                    if (!v84) {
                      goto LABEL_161;
                    }
                    int v42 = memcmp(v84, __s1, __n);
LABEL_99:
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_110;
                  }
                  if (v92 == 1)
                  {
                    if (v83 < (int)a3) {
                      goto LABEL_139;
                    }
                    swift_retain();
                    uint64_t v47 = (char *)sub_22D2BB7C0();
                    if (v47)
                    {
                      uint64_t v48 = sub_22D2BB7F0();
                      if (__OFSUB__((int)a3, v48)) {
                        goto LABEL_150;
                      }
                      v47 += (int)a3 - v48;
                    }
                    uint64_t v49 = sub_22D2BB7E0();
                    size_t v50 = (a3 >> 32) - (int)a3;
                    if (v49 < v82) {
                      size_t v50 = v49;
                    }
                    if (!v84) {
                      goto LABEL_155;
                    }
                    uint64_t v16 = v89;
                    if (!v47) {
                      goto LABEL_156;
                    }
                    int v42 = memcmp(v84, v47, v50);
                    sub_22CFF5630(a3, v88);
                    goto LABEL_99;
                  }
                  uint64_t v65 = *(void *)(a3 + 16);
                  uint64_t v81 = *(void *)(a3 + 24);
                  swift_retain();
                  swift_retain();
                  unint64_t v66 = (char *)sub_22D2BB7C0();
                  if (v66)
                  {
                    uint64_t v67 = sub_22D2BB7F0();
                    if (__OFSUB__(v65, v67)) {
                      goto LABEL_149;
                    }
                    v66 += v65 - v67;
                  }
                  BOOL v26 = __OFSUB__(v81, v65);
                  int64_t v68 = v81 - v65;
                  if (v26) {
                    goto LABEL_144;
                  }
                  uint64_t v69 = sub_22D2BB7E0();
                  if (v69 >= v68) {
                    size_t v70 = v68;
                  }
                  else {
                    size_t v70 = v69;
                  }
                  if (!v84) {
                    goto LABEL_162;
                  }
                  a4 = v88;
                  uint64_t v16 = v89;
                  if (!v66) {
                    goto LABEL_163;
                  }
                  int v42 = memcmp(v84, v66, v70);
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  swift_release();
LABEL_110:
                  swift_release();
LABEL_124:
                  uint64_t result = sub_22CFF5630(v20, v21);
                  uint64_t v11 = v86;
                  goto LABEL_125;
                case 3uLL:
                  *(void *)&__s1[6] = 0;
                  *(void *)__s1 = 0;
                  if (!v17) {
                    goto LABEL_55;
                  }
                  if (v17 == 1)
                  {
                    if (v83 < (int)a3) {
                      goto LABEL_138;
                    }
                    sub_22CFF9B64(a3, a4);
                    swift_bridgeObjectRetain();
                    sub_22CFF9B64(v20, v21);
                    uint64_t v38 = sub_22D2BB7C0();
                    if (!v38) {
                      goto LABEL_154;
                    }
                    uint64_t v31 = v38;
                    uint64_t v39 = sub_22D2BB7F0();
                    uint64_t v33 = (int)a3 - v39;
                    if (__OFSUB__((int)a3, v39)) {
                      goto LABEL_143;
                    }
                    goto LABEL_47;
                  }
                  uint64_t v62 = *(void *)(a3 + 16);
                  uint64_t v61 = *(void *)(a3 + 24);
                  swift_bridgeObjectRetain();
                  sub_22CFF9B64(v20, v21);
                  swift_retain();
                  swift_retain();
                  uint64_t v57 = (char *)sub_22D2BB7C0();
                  if (v57)
                  {
                    uint64_t v63 = sub_22D2BB7F0();
                    if (__OFSUB__(v62, v63)) {
                      goto LABEL_148;
                    }
                    v57 += v62 - v63;
                  }
                  BOOL v26 = __OFSUB__(v61, v62);
                  int64_t v59 = v61 - v62;
                  if (v26) {
                    goto LABEL_141;
                  }
                  uint64_t v60 = sub_22D2BB7E0();
                  uint64_t v11 = v86;
                  if (!v57) {
                    goto LABEL_160;
                  }
                  goto LABEL_92;
                default:
                  *(void *)__s1 = v20;
                  *(_WORD *)&__s1[8] = v21;
                  __s1[10] = BYTE2(v21);
                  __s1[11] = BYTE3(v21);
                  __s1[12] = BYTE4(v21);
                  __s1[13] = BYTE5(v21);
                  if (v17)
                  {
                    if (v17 == 1)
                    {
                      if (v83 < (int)a3) {
                        goto LABEL_137;
                      }
                      sub_22CFF9B64(a3, a4);
                      swift_bridgeObjectRetain();
                      sub_22CFF9B64(v20, v21);
                      uint64_t v30 = sub_22D2BB7C0();
                      if (!v30)
                      {
                        sub_22D2BB7E0();
                        __break(1u);
LABEL_154:
                        sub_22D2BB7E0();
                        __break(1u);
LABEL_155:
                        __break(1u);
LABEL_156:
                        __break(1u);
LABEL_157:
                        __break(1u);
LABEL_158:
                        __break(1u);
LABEL_159:
                        __break(1u);
LABEL_160:
                        __break(1u);
LABEL_161:
                        __break(1u);
LABEL_162:
                        __break(1u);
LABEL_163:
                        __break(1u);
LABEL_164:
                        __break(1u);
LABEL_165:
                        __break(1u);
LABEL_166:
                        __break(1u);
                        JUMPOUT(0x22D234BB4);
                      }
                      uint64_t v31 = v30;
                      uint64_t v32 = sub_22D2BB7F0();
                      uint64_t v33 = (int)a3 - v32;
                      if (__OFSUB__((int)a3, v32)) {
                        goto LABEL_142;
                      }
LABEL_47:
                      uint64_t v40 = sub_22D2BB7E0();
                      if (v40 >= v82) {
                        size_t v41 = (a3 >> 32) - (int)a3;
                      }
                      else {
                        size_t v41 = v40;
                      }
                      int v42 = memcmp(__s1, (const void *)(v31 + v33), v41);
                      a4 = v88;
                      sub_22CFF5630(a3, v88);
                      swift_bridgeObjectRelease();
                      uint64_t result = sub_22CFF5630(v20, v21);
                    }
                    else
                    {
                      uint64_t v56 = *(void *)(a3 + 16);
                      uint64_t v55 = *(void *)(a3 + 24);
                      swift_bridgeObjectRetain();
                      sub_22CFF9B64(v20, v21);
                      swift_retain();
                      swift_retain();
                      uint64_t v57 = (char *)sub_22D2BB7C0();
                      if (v57)
                      {
                        uint64_t v58 = sub_22D2BB7F0();
                        if (__OFSUB__(v56, v58)) {
                          goto LABEL_147;
                        }
                        v57 += v56 - v58;
                      }
                      BOOL v26 = __OFSUB__(v55, v56);
                      int64_t v59 = v55 - v56;
                      if (v26) {
                        goto LABEL_140;
                      }
                      uint64_t v60 = sub_22D2BB7E0();
                      uint64_t v11 = v86;
                      if (!v57) {
                        goto LABEL_159;
                      }
LABEL_92:
                      if (v60 >= v59) {
                        size_t v64 = v59;
                      }
                      else {
                        size_t v64 = v60;
                      }
                      int v42 = memcmp(__s1, v57, v64);
                      swift_bridgeObjectRelease();
                      swift_release();
                      swift_release();
                      uint64_t result = sub_22CFF5630(v20, v21);
                      a4 = v88;
                    }
                    uint64_t v16 = v89;
LABEL_125:
                    LODWORD(v17) = v92;
                    if (!v42)
                    {
LABEL_126:
                      uint64_t result = sub_22D2BD690();
                      __break(1u);
                      goto LABEL_127;
                    }
                  }
                  else
                  {
LABEL_55:
                    uint64_t __s2 = a3;
                    __int16 v96 = a4;
                    char v97 = BYTE2(a4);
                    char v98 = BYTE3(a4);
                    char v99 = BYTE4(a4);
                    char v100 = BYTE5(a4);
                    uint64_t result = memcmp(__s1, &__s2, __n);
                    LODWORD(v17) = v92;
                    if (!result) {
                      goto LABEL_126;
                    }
                  }
                  break;
              }
              break;
            case 2uLL:
              uint64_t v25 = *(void *)(v20 + 16);
              uint64_t v24 = *(void *)(v20 + 24);
              BOOL v26 = __OFSUB__(v24, v25);
              uint64_t v23 = v24 - v25;
              if (!v26) {
                goto LABEL_25;
              }
              goto LABEL_130;
            case 3uLL:
              goto LABEL_25;
            default:
              uint64_t v23 = BYTE6(v21);
              goto LABEL_25;
          }
        }
LABEL_14:
        a5 = (a5 + 1) & v93;
      }
      while (((*(void *)(v94 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
    }
  }
LABEL_127:
  uint64_t v77 = *v90;
  *(void *)(*v90 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v78 = (uint64_t *)(*(void *)(v77 + 48) + 32 * a5);
  *uint64_t v78 = v11;
  v78[1] = a2;
  v78[2] = a3;
  v78[3] = a4;
  uint64_t v79 = *(void *)(v77 + 16);
  BOOL v26 = __OFADD__(v79, 1);
  uint64_t v80 = v79 + 1;
  if (v26)
  {
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
  }
  *(void *)(v77 + 16) = v80;
  return result;
}

uint64_t sub_22D234BE4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_22D2BBDE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_22D232F04(v12, MEMORY[0x263F07908], (void (*)(void))sub_22D0B3738, (void (*)(uint64_t))sub_22D2394C0);
  }
  else
  {
    if (v11 > v10)
    {
      sub_22D234EC4(MEMORY[0x263F07908], (void (*)(void))sub_22D0B3738);
      goto LABEL_12;
    }
    sub_22D235520(v12, MEMORY[0x263F07908], (void (*)(void))sub_22D0B3738, (void (*)(uint64_t))sub_22D2394C0);
  }
  uint64_t v13 = *v3;
  sub_22D2394C0();
  uint64_t v14 = sub_22D2BCB30();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    BOOL v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v9, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_22D2394F4();
      char v22 = sub_22D2BCB90();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v9, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_22D2BD690();
  __break(1u);
  return result;
}

void *sub_22D234EC4(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - v7;
  a2(0);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_22D2BD2D0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  BOOL v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_22D235178()
{
  uint64_t v1 = v0;
  sub_22D239204(0, &qword_268542E40, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F8DBD8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22D2BD2D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22D235354()
{
  uint64_t v1 = v0;
  sub_22D2392A8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22D2BD2D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    unint64_t v20 = v17[3];
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_22CFF9B64(v19, v20);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_22D235520(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v44 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = *v4;
  a3(0);
  uint64_t v12 = sub_22D2BD2E0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v13;
    return result;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 56);
  uint64_t v39 = v4;
  uint64_t v40 = v11 + 56;
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v42 = v8 + 16;
  uint64_t v18 = v12 + 56;
  uint64_t v43 = v8;
  uint64_t v19 = (uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v41) {
      goto LABEL_33;
    }
    unint64_t v26 = *(void *)(v40 + 8 * v25);
    ++v21;
    if (!v26)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v40 + 8 * v21);
      if (!v26)
      {
        int64_t v21 = v25 + 2;
        if (v25 + 2 >= v41) {
          goto LABEL_33;
        }
        unint64_t v26 = *(void *)(v40 + 8 * v21);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    uint64_t v28 = v11;
    uint64_t v29 = *(void *)(v11 + 48);
    uint64_t v30 = *(void *)(v43 + 72);
    uint64_t v31 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v43 + 16))(v10, v29 + v30 * v24, v7);
    v44(v31);
    uint64_t result = sub_22D2BCB30();
    uint64_t v32 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v18 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v22 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t result = (*v19)(*(void *)(v13 + 48) + v22 * v30, v10, v7);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v28;
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v41)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v39;
    goto LABEL_35;
  }
  unint64_t v26 = *(void *)(v40 + 8 * v27);
  if (v26)
  {
    int64_t v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v21 >= v41) {
      goto LABEL_33;
    }
    unint64_t v26 = *(void *)(v40 + 8 * v21);
    ++v27;
    if (v26) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22D2358B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_22D239204(0, &qword_268542E40, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F8DBD8]);
  uint64_t v3 = sub_22D2BD2E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_22D2BD730();
    swift_bridgeObjectRetain();
    sub_22D2BCC70();
    uint64_t result = sub_22D2BD760();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22D235B88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_22D2392A8();
  uint64_t v3 = sub_22D2BD2E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    int64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    unint64_t v22 = v18[3];
    sub_22D2BD730();
    swift_bridgeObjectRetain();
    sub_22CFF9B64(v21, v22);
    swift_bridgeObjectRetain();
    sub_22D2BCC70();
    swift_bridgeObjectRelease();
    sub_22CFF9B64(v21, v22);
    sub_22D2BBB30();
    sub_22CFF5630(v21, v22);
    uint64_t result = sub_22D2BD760();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
    void *v12 = v19;
    v12[1] = v20;
    v12[2] = v21;
    v12[3] = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22D235E9C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_22D237C64(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_22D235F44(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_22D235F44(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v157 = sub_22D2BBC30();
  uint64_t v4 = *(void *)(v157 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v157);
  v156 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v155 = (char *)&v138 - v7;
  uint64_t v8 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
  uint64_t v149 = *(void *)(v8 - 8);
  uint64_t v150 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v160 = (uint64_t)&v138 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v158 = (id *)((char *)&v138 - v15);
  MEMORY[0x270FA5388](v14);
  v163 = (id *)((char *)&v138 - v16);
  uint64_t v17 = a1[1];
  uint64_t result = sub_22D2BD620();
  if (result >= v17)
  {
    if (v17 < 0) {
      goto LABEL_139;
    }
    if (v17) {
      return sub_22D236C50(0, v17, 1, a1);
    }
    return result;
  }
  if (v17 >= 0) {
    uint64_t v19 = v17;
  }
  else {
    uint64_t v19 = v17 + 1;
  }
  if (v17 < -1) {
    goto LABEL_147;
  }
  uint64_t v140 = result;
  if (v17 < 2)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    unint64_t v148 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
    if (v17 != 1)
    {
      unint64_t v24 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v23 = (char *)MEMORY[0x263F8EE78];
LABEL_105:
      if (v24 >= 2)
      {
        uint64_t v132 = *a1;
        do
        {
          unint64_t v133 = v24 - 2;
          if (v24 < 2) {
            goto LABEL_134;
          }
          if (!v132) {
            goto LABEL_146;
          }
          uint64_t v134 = *(void *)&v23[16 * v133 + 32];
          uint64_t v135 = *(void *)&v23[16 * v24 + 24];
          sub_22D23703C(v132 + *(void *)(v149 + 72) * v134, v132 + *(void *)(v149 + 72) * *(void *)&v23[16 * v24 + 16], v132 + *(void *)(v149 + 72) * v135, v148);
          if (v2) {
            break;
          }
          if (v135 < v134) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v23 = sub_22D237C00((uint64_t)v23);
          }
          if (v133 >= *((void *)v23 + 2)) {
            goto LABEL_136;
          }
          v136 = &v23[16 * v133 + 32];
          *(void *)v136 = v134;
          *((void *)v136 + 1) = v135;
          unint64_t v137 = *((void *)v23 + 2);
          if (v24 > v137) {
            goto LABEL_137;
          }
          memmove(&v23[16 * v24 + 16], &v23[16 * v24 + 32], 16 * (v137 - v24));
          *((void *)v23 + 2) = v137 - 1;
          unint64_t v24 = v137 - 1;
        }
        while (v137 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v21 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v144 = v11;
  }
  else
  {
    v144 = v11;
    uint64_t v20 = v19 >> 1;
    uint64_t v21 = sub_22D2BCE40();
    *(void *)(v21 + 16) = v20;
    unint64_t v148 = v21 + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
  }
  uint64_t v141 = v21;
  uint64_t v22 = 0;
  v154 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v23 = (char *)MEMORY[0x263F8EE78];
  v162 = a1;
  while (1)
  {
    v142 = v23;
    uint64_t v25 = v22 + 1;
    uint64_t v147 = v22;
    if (v22 + 1 >= v17)
    {
      uint64_t v40 = v22 + 1;
      uint64_t v23 = v142;
    }
    else
    {
      uint64_t v26 = *a1;
      uint64_t v27 = *a1 + *(void *)(v149 + 72) * v25;
      uint64_t v161 = *(void *)(v149 + 72);
      uint64_t v28 = v161;
      uint64_t v29 = v26;
      uint64_t v143 = v26;
      uint64_t v30 = v163;
      sub_22D239FCC(v27, (uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      uint64_t v31 = v29 + v28 * v22;
      uint64_t v32 = v158;
      sub_22D239FCC(v31, (uint64_t)v158, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      id v33 = objc_msgSend(*v30, sel_endDate);
      unint64_t v34 = v155;
      sub_22D2BBC00();

      uint64_t v22 = v147;
      id v35 = objc_msgSend(*v32, sel_endDate);
      uint64_t v153 = v17;
      unint64_t v36 = v156;
      sub_22D2BBC00();

      LODWORD(v152) = sub_22D2BBBE0();
      BOOL v37 = *v154;
      uint64_t v38 = v36;
      uint64_t v17 = v153;
      uint64_t v39 = v157;
      (*v154)(v38, v157);
      v151 = v37;
      v37(v34, v39);
      sub_22D23A034((uint64_t)v158, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      sub_22D23A034((uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      uint64_t v40 = v22 + 2;
      if (v22 + 2 < v17)
      {
        uint64_t v139 = v2;
        uint64_t v41 = v143;
        uint64_t v145 = v161 * v40;
        uint64_t v146 = v161 * v25;
        while (1)
        {
          uint64_t v159 = v40;
          uint64_t v42 = v163;
          sub_22D239FCC(v41 + v145, (uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          uint64_t v43 = v158;
          sub_22D239FCC(v41 + v146, (uint64_t)v158, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          id v44 = objc_msgSend(*v42, sel_endDate);
          uint64_t v45 = v155;
          sub_22D2BBC00();

          id v46 = objc_msgSend(*v43, sel_endDate);
          uint64_t v47 = v156;
          sub_22D2BBC00();

          LODWORD(v46) = sub_22D2BBBE0();
          uint64_t v48 = v47;
          uint64_t v49 = v157;
          size_t v50 = v151;
          v151(v48, v157);
          v50(v45, v49);
          sub_22D23A034((uint64_t)v43, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          sub_22D23A034((uint64_t)v42, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          if ((v152 ^ v46)) {
            break;
          }
          uint64_t v40 = v159 + 1;
          v41 += v161;
          if (v153 == v159 + 1)
          {
            uint64_t v17 = v153;
            uint64_t v40 = v153;
            uint64_t v2 = v139;
            uint64_t v22 = v147;
            goto LABEL_24;
          }
        }
        uint64_t v2 = v139;
        uint64_t v40 = v159;
        uint64_t v22 = v147;
        uint64_t v17 = v153;
      }
LABEL_24:
      uint64_t v23 = v142;
      if (v152)
      {
        if (v40 < v22) {
          goto LABEL_140;
        }
        if (v22 < v40)
        {
          uint64_t v51 = v22;
          uint64_t v52 = 0;
          uint64_t v53 = v161;
          uint64_t v54 = v161 * (v40 - 1);
          uint64_t v55 = v40 * v161;
          uint64_t v56 = v51;
          uint64_t v57 = v51 * v161;
          uint64_t v159 = v40;
          do
          {
            if (v56 != v40 + v52 - 1)
            {
              uint64_t v58 = v143;
              if (!v143) {
                goto LABEL_145;
              }
              unint64_t v59 = v143 + v57;
              uint64_t v60 = v143 + v54;
              sub_22D238B28(v143 + v57, (uint64_t)v144, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
              if (v57 < v54 || v59 >= v58 + v55)
              {
                swift_arrayInitWithTakeFrontToBack();
                uint64_t v53 = v161;
              }
              else
              {
                uint64_t v53 = v161;
                if (v57 != v54) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_22D238B28((uint64_t)v144, v60, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
              uint64_t v40 = v159;
            }
            ++v56;
            --v52;
            v54 -= v53;
            v55 -= v53;
            v57 += v53;
          }
          while (v56 < v40 + v52);
          a1 = v162;
          uint64_t v23 = v142;
          uint64_t v22 = v147;
          uint64_t v17 = v153;
        }
      }
    }
    if (v40 < v17)
    {
      if (__OFSUB__(v40, v22)) {
        goto LABEL_138;
      }
      if (v40 - v22 < v140) {
        break;
      }
    }
LABEL_56:
    if (v40 < v22) {
      goto LABEL_133;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v159 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v23 = sub_22D23775C(0, *((void *)v23 + 2) + 1, 1, v23);
    }
    unint64_t v82 = *((void *)v23 + 2);
    unint64_t v81 = *((void *)v23 + 3);
    unint64_t v24 = v82 + 1;
    if (v82 >= v81 >> 1) {
      uint64_t v23 = sub_22D23775C((char *)(v81 > 1), v82 + 1, 1, v23);
    }
    *((void *)v23 + 2) = v24;
    uint64_t v83 = v23 + 32;
    uint64_t v84 = &v23[16 * v82 + 32];
    uint64_t v85 = v159;
    *(void *)uint64_t v84 = v147;
    *((void *)v84 + 1) = v85;
    if (v82)
    {
      while (1)
      {
        unint64_t v86 = v24 - 1;
        if (v24 >= 4)
        {
          uint64_t v91 = &v83[16 * v24];
          uint64_t v92 = *((void *)v91 - 8);
          uint64_t v93 = *((void *)v91 - 7);
          BOOL v97 = __OFSUB__(v93, v92);
          uint64_t v94 = v93 - v92;
          if (v97) {
            goto LABEL_122;
          }
          uint64_t v96 = *((void *)v91 - 6);
          uint64_t v95 = *((void *)v91 - 5);
          BOOL v97 = __OFSUB__(v95, v96);
          uint64_t v89 = v95 - v96;
          char v90 = v97;
          if (v97) {
            goto LABEL_123;
          }
          unint64_t v98 = v24 - 2;
          char v99 = &v83[16 * v24 - 32];
          uint64_t v101 = *(void *)v99;
          uint64_t v100 = *((void *)v99 + 1);
          BOOL v97 = __OFSUB__(v100, v101);
          uint64_t v102 = v100 - v101;
          if (v97) {
            goto LABEL_125;
          }
          BOOL v97 = __OFADD__(v89, v102);
          uint64_t v103 = v89 + v102;
          if (v97) {
            goto LABEL_128;
          }
          if (v103 >= v94)
          {
            v121 = &v83[16 * v86];
            uint64_t v123 = *(void *)v121;
            uint64_t v122 = *((void *)v121 + 1);
            BOOL v97 = __OFSUB__(v122, v123);
            uint64_t v124 = v122 - v123;
            if (v97) {
              goto LABEL_132;
            }
            BOOL v114 = v89 < v124;
            goto LABEL_93;
          }
        }
        else
        {
          if (v24 != 3)
          {
            uint64_t v115 = *((void *)v23 + 4);
            uint64_t v116 = *((void *)v23 + 5);
            BOOL v97 = __OFSUB__(v116, v115);
            uint64_t v108 = v116 - v115;
            char v109 = v97;
            goto LABEL_87;
          }
          uint64_t v88 = *((void *)v23 + 4);
          uint64_t v87 = *((void *)v23 + 5);
          BOOL v97 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          char v90 = v97;
        }
        if (v90) {
          goto LABEL_124;
        }
        unint64_t v98 = v24 - 2;
        char v104 = &v83[16 * v24 - 32];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v107 = __OFSUB__(v105, v106);
        uint64_t v108 = v105 - v106;
        char v109 = v107;
        if (v107) {
          goto LABEL_127;
        }
        uint64_t v110 = &v83[16 * v86];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v97 = __OFSUB__(v111, v112);
        uint64_t v113 = v111 - v112;
        if (v97) {
          goto LABEL_130;
        }
        if (__OFADD__(v108, v113)) {
          goto LABEL_131;
        }
        if (v108 + v113 >= v89)
        {
          BOOL v114 = v89 < v113;
LABEL_93:
          if (v114) {
            unint64_t v86 = v98;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v109) {
          goto LABEL_126;
        }
        v117 = &v83[16 * v86];
        uint64_t v119 = *(void *)v117;
        uint64_t v118 = *((void *)v117 + 1);
        BOOL v97 = __OFSUB__(v118, v119);
        uint64_t v120 = v118 - v119;
        if (v97) {
          goto LABEL_129;
        }
        if (v120 < v108) {
          goto LABEL_15;
        }
LABEL_95:
        unint64_t v125 = v86 - 1;
        if (v86 - 1 >= v24)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        uint64_t v126 = *a1;
        if (!*a1) {
          goto LABEL_144;
        }
        uint64_t v127 = &v83[16 * v125];
        uint64_t v128 = *(void *)v127;
        long long v129 = &v83[16 * v86];
        uint64_t v130 = *((void *)v129 + 1);
        sub_22D23703C(v126 + *(void *)(v149 + 72) * *(void *)v127, v126 + *(void *)(v149 + 72) * *(void *)v129, v126 + *(void *)(v149 + 72) * v130, v148);
        if (v2)
        {
          uint64_t v21 = v141;
          goto LABEL_116;
        }
        if (v130 < v128) {
          goto LABEL_119;
        }
        if (v86 > *((void *)v23 + 2)) {
          goto LABEL_120;
        }
        *(void *)uint64_t v127 = v128;
        *(void *)&v83[16 * v125 + 8] = v130;
        unint64_t v131 = *((void *)v23 + 2);
        if (v86 >= v131) {
          goto LABEL_121;
        }
        unint64_t v24 = v131 - 1;
        memmove(&v83[16 * v86], v129 + 16, 16 * (v131 - 1 - v86));
        *((void *)v23 + 2) = v131 - 1;
        a1 = v162;
        if (v131 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v24 = 1;
LABEL_15:
    uint64_t v17 = a1[1];
    uint64_t v22 = v159;
    uint64_t v21 = v141;
    if (v159 >= v17) {
      goto LABEL_105;
    }
  }
  if (__OFADD__(v22, v140)) {
    goto LABEL_141;
  }
  if (v22 + v140 >= v17) {
    uint64_t v61 = v17;
  }
  else {
    uint64_t v61 = v22 + v140;
  }
  if (v61 >= v22)
  {
    if (v40 != v61)
    {
      uint64_t v139 = v2;
      uint64_t v62 = *(void (**)(char *, uint64_t))(v149 + 72);
      uint64_t v63 = (void)v62 * (v40 - 1);
      v151 = v62;
      uint64_t v64 = v40 * (void)v62;
      uint64_t v146 = v61;
      do
      {
        uint64_t v66 = 0;
        uint64_t v159 = v40;
        uint64_t v152 = v64;
        uint64_t v153 = v63;
        while (1)
        {
          uint64_t v67 = *a1;
          uint64_t v161 = v64 + v66;
          uint64_t v68 = v64 + v66 + v67;
          uint64_t v69 = v163;
          sub_22D239FCC(v68, (uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          size_t v70 = v158;
          sub_22D239FCC(v63 + v66 + v67, (uint64_t)v158, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          id v71 = objc_msgSend(*v69, sel_endDate);
          uint64_t v72 = v155;
          sub_22D2BBC00();

          id v73 = objc_msgSend(*v70, sel_endDate);
          uint64_t v74 = v156;
          sub_22D2BBC00();

          LOBYTE(v73) = sub_22D2BBBE0();
          uint64_t v75 = *v154;
          size_t v76 = v74;
          uint64_t v77 = v157;
          (*v154)(v76, v157);
          v75(v72, v77);
          sub_22D23A034((uint64_t)v70, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          sub_22D23A034((uint64_t)v163, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          if ((v73 & 1) == 0) {
            break;
          }
          uint64_t v78 = *v162;
          if (!*v162) {
            goto LABEL_143;
          }
          uint64_t v64 = v152;
          uint64_t v63 = v153;
          uint64_t v79 = v78 + v153 + v66;
          sub_22D238B28(v78 + v152 + v66, v160, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          swift_arrayInitWithTakeFrontToBack();
          sub_22D238B28(v160, v79, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          v66 -= (uint64_t)v151;
          ++v22;
          uint64_t v65 = v159;
          a1 = v162;
          if (v159 == v22) {
            goto LABEL_49;
          }
        }
        a1 = v162;
        uint64_t v65 = v159;
        uint64_t v64 = v152;
        uint64_t v63 = v153;
LABEL_49:
        uint64_t v40 = v65 + 1;
        v63 += (uint64_t)v151;
        v64 += (uint64_t)v151;
        uint64_t v22 = v147;
      }
      while (v40 != v146);
      uint64_t v40 = v146;
      uint64_t v2 = v139;
      uint64_t v23 = v142;
    }
    goto LABEL_56;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  uint64_t result = sub_22D2BD450();
  __break(1u);
  return result;
}

uint64_t sub_22D236C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v41 = a1;
  uint64_t v47 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v47 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v47);
  id v46 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v45 = (char *)&v39 - v10;
  uint64_t v42 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
  uint64_t v11 = MEMORY[0x270FA5388](v42);
  uint64_t v51 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v44 = (id *)((char *)&v39 - v14);
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v55 = (id *)((char *)&v39 - v17);
  uint64_t v50 = a3;
  uint64_t v40 = a2;
  if (a3 != a2)
  {
    uint64_t v18 = *(void *)(v16 + 72);
    uint64_t v43 = v7 + 8;
    uint64_t v19 = v18 * (v50 - 1);
    uint64_t v48 = v18;
    uint64_t v20 = v18 * v50;
    uint64_t v54 = a4;
    uint64_t v21 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v22 = v44;
LABEL_5:
    uint64_t v23 = 0;
    uint64_t v24 = v41;
    uint64_t v49 = v20;
    while (1)
    {
      uint64_t v25 = *v54;
      uint64_t v53 = v20 + v23;
      uint64_t v26 = v20 + v23 + v25;
      uint64_t v27 = v55;
      sub_22D239FCC(v26, (uint64_t)v55, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      uint64_t v52 = v19 + v23;
      sub_22D239FCC(v19 + v23 + v25, (uint64_t)v22, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      id v28 = objc_msgSend(*v27, sel_endDate);
      uint64_t v29 = v45;
      sub_22D2BBC00();

      id v30 = objc_msgSend(*v22, sel_endDate);
      uint64_t v31 = v46;
      sub_22D2BBC00();

      LOBYTE(v30) = sub_22D2BBBE0();
      uint64_t v32 = *v21;
      id v33 = v31;
      uint64_t v34 = v47;
      (*v21)(v33, v47);
      id v35 = v29;
      uint64_t v20 = v49;
      v32(v35, v34);
      sub_22D23A034((uint64_t)v22, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      unint64_t v36 = v54;
      uint64_t result = sub_22D23A034((uint64_t)v55, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      if ((v30 & 1) == 0)
      {
LABEL_4:
        v19 += v48;
        v20 += v48;
        if (++v50 == v40) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v37 = *v36;
      if (!*v36) {
        break;
      }
      uint64_t v38 = v37 + v19 + v23;
      sub_22D238B28(v37 + v20 + v23, v51, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_22D238B28(v51, v38, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
      v23 -= v48;
      if (v50 == ++v24) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22D23703C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v66 = sub_22D2BBC30();
  uint64_t v8 = *(void *)(v66 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v66);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v65 = (char *)&v55 - v12;
  uint64_t v61 = type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(0);
  uint64_t v13 = MEMORY[0x270FA5388](v61);
  uint64_t v64 = (id *)((char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v63 = (id *)((char *)&v55 - v15);
  uint64_t v17 = *(void *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (a2 - a1 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_63;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_64;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v17;
  unint64_t v70 = a1;
  unint64_t v69 = a4;
  uint64_t v20 = v18 / v17;
  if (v19 >= v18 / v17)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v17;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v38 = a4 + v22;
      unint64_t v68 = a4 + v22;
      unint64_t v70 = a2;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v40 = -v17;
        uint64_t v57 = (void (**)(char *, uint64_t))(v8 + 8);
        unint64_t v58 = a4;
        unint64_t v59 = v11;
        unint64_t v56 = a1;
        uint64_t v41 = v64;
        do
        {
          unint64_t v67 = a3;
          unint64_t v62 = a3 + v40;
          uint64_t v42 = v63;
          sub_22D239FCC(v38 + v40, (uint64_t)v63, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          unint64_t v60 = a2 + v40;
          sub_22D239FCC(a2 + v40, (uint64_t)v41, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          id v43 = objc_msgSend(*v42, sel_endDate);
          id v44 = v65;
          sub_22D2BBC00();

          id v45 = objc_msgSend(*v41, sel_endDate);
          sub_22D2BBC00();

          LOBYTE(v45) = sub_22D2BBBE0();
          uint64_t v46 = v40;
          uint64_t v47 = *v57;
          uint64_t v48 = v11;
          uint64_t v49 = v66;
          (*v57)(v48, v66);
          v47(v44, v49);
          sub_22D23A034((uint64_t)v41, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          sub_22D23A034((uint64_t)v42, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
          if (v45)
          {
            uint64_t v40 = v46;
            a3 = v62;
            if (v67 < a2 || v62 >= a2)
            {
              unint64_t v52 = v60;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v50 = v58;
              uint64_t v11 = v59;
              unint64_t v51 = v56;
            }
            else
            {
              unint64_t v50 = v58;
              uint64_t v11 = v59;
              unint64_t v51 = v56;
              unint64_t v52 = v60;
              if (v67 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v70 += v40;
          }
          else
          {
            unint64_t v53 = v68;
            v68 += v46;
            uint64_t v40 = v46;
            a3 = v62;
            if (v67 < v53 || v62 >= v53)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v52 = a2;
              unint64_t v50 = v58;
              uint64_t v11 = v59;
            }
            else
            {
              unint64_t v50 = v58;
              uint64_t v11 = v59;
              if (v67 != v53) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v52 = a2;
            }
            unint64_t v51 = v56;
          }
          unint64_t v38 = v68;
          if (v68 <= v50) {
            break;
          }
          a2 = v52;
        }
        while (v52 > v51);
      }
      goto LABEL_61;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    unint64_t v62 = v17;
    uint64_t v21 = v19 * v17;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v60 = a4 + v21;
    unint64_t v68 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      unint64_t v67 = a3;
      uint64_t v25 = v65;
      do
      {
        uint64_t v26 = v63;
        sub_22D239FCC(a2, (uint64_t)v63, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
        uint64_t v27 = v64;
        sub_22D239FCC(a4, (uint64_t)v64, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
        id v28 = objc_msgSend(*v26, sel_endDate);
        sub_22D2BBC00();

        id v29 = objc_msgSend(*v27, sel_endDate);
        sub_22D2BBC00();

        char v30 = sub_22D2BBBE0();
        uint64_t v31 = *v24;
        uint64_t v32 = v66;
        (*v24)(v11, v66);
        v31(v25, v32);
        sub_22D23A034((uint64_t)v27, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
        sub_22D23A034((uint64_t)v26, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
        unint64_t v33 = v70;
        if (v30)
        {
          unint64_t v34 = v62;
          unint64_t v35 = a2 + v62;
          if (v70 < a2 || v70 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v36 = v67;
          }
          else
          {
            unint64_t v36 = v67;
            if (v70 == a2) {
              unint64_t v33 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v34 = v62;
          unint64_t v37 = v69 + v62;
          if (v70 < v69 || v70 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v36 = v67;
          }
          else
          {
            unint64_t v36 = v67;
            if (v70 != v69) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v69 = v37;
          unint64_t v35 = a2;
        }
        unint64_t v70 = v33 + v34;
        a4 = v69;
        if (v69 >= v60) {
          break;
        }
        a2 = v35;
      }
      while (v35 < v36);
    }
LABEL_61:
    sub_22D237ABC(&v70, &v69, (uint64_t *)&v68, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
    return 1;
  }
LABEL_65:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

char *sub_22D23775C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22D238B90();
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22D237858(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_22D2BD4C0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_22D237914(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_22D2BD4C0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_22D2379D0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -56)
  {
    uint64_t result = (char *)sub_22D2BD4C0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
    {
      return (char *)memmove(result, v3, 56 * v6);
    }
  }
  return result;
}

uint64_t sub_22D237AA4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_22D237ABC(a1, a2, a3, MEMORY[0x263F07508]);
}

uint64_t sub_22D237ABC(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_22D2BD4C0();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_22D237C00(uint64_t a1)
{
  return sub_22D23775C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_22D237C14()
{
}

uint64_t sub_22D237C28(uint64_t a1)
{
  return sub_22D24C424(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22D237C3C(uint64_t a1)
{
  return sub_22D24C8F0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22D237C50(void *a1)
{
  return sub_22D24C1AC(0, a1[2], 0, a1);
}

uint64_t sub_22D237C64(void *a1)
{
  return sub_22D24CFC8(0, a1[2], 0, a1);
}

uint64_t sub_22D237C78(uint64_t a1)
{
  uint64_t v2 = sub_22D2BBC90();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v27 = (char *)v21 - v6;
  sub_22D2387EC(0, &qword_26AEC22D8, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  sub_22D1E57A8();
  uint64_t v29 = sub_22D2BCF30();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_22D231EA0(v18, v17, MEMORY[0x263F07508], (void (*)(uint64_t))sub_22D1E57A8, (void (*)(void, void, void))sub_22D233930, (void (*)(uint64_t))sub_22D238850);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_22D237F6C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) - 8);
  uint64_t result = sub_22D2301E4(*a1, *(void *)(v2+ ((*(void *)(v5 + 64)+ ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)));
  *a2 = result;
  return result;
}

uint64_t sub_22D238010(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D238058()
{
  if (!qword_268542D68)
  {
    sub_22D231D90();
    sub_22D238010(&qword_268542D70, (void (*)(uint64_t))sub_22D231D90);
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542D68);
    }
  }
}

void sub_22D238108()
{
  if (!qword_268542D78)
  {
    sub_22D231D14(255, &qword_268542D80, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData, MEMORY[0x263EFDCF0]);
    sub_22D238234();
    sub_22D2382F0(&qword_268542D98, &qword_268542D80, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
    sub_22D238010(&qword_268542DA0, (void (*)(uint64_t))sub_22D238234);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542D78);
    }
  }
}

uint64_t type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_268542E50);
}

void sub_22D238234()
{
  if (!qword_268542D88)
  {
    sub_22D238058();
    sub_22CFF49FC();
    sub_22D238010(&qword_268542D90, (void (*)(uint64_t))sub_22D238058);
    unint64_t v0 = sub_22D2BC430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542D88);
    }
  }
}

uint64_t sub_22D2382F0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D231D14(255, a2, a3, MEMORY[0x263EFDCF0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D238354()
{
  if (!qword_268542DA8)
  {
    sub_22D238108();
    sub_22D238010(&qword_268542DB0, (void (*)(uint64_t))sub_22D238108);
    unint64_t v0 = sub_22D2BC510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542DA8);
    }
  }
}

void sub_22D2383E8()
{
  if (!qword_268542DB8)
  {
    sub_22D238354();
    type metadata accessor for ClinicalSharingQueryOutput(255);
    sub_22D238010(&qword_268542DC0, (void (*)(uint64_t))sub_22D238354);
    unint64_t v0 = sub_22D2BC3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542DB8);
    }
  }
}

uint64_t objectdestroyTm_10()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  swift_release();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

void sub_22D2385C0(void **a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for ClinicalSharingElectrocardiogramQuery(0);
  sub_22D2307FC(a1, a2);
}

uint64_t sub_22D23866C()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D238778@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D230940(*a1, a2);
}

void sub_22D2387EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D238850()
{
  return sub_22D238010(&qword_26853E318, MEMORY[0x263F07508]);
}

void sub_22D238884(uint64_t a1)
{
}

void sub_22D2388CC()
{
  if (!qword_268542DD8)
  {
    sub_22D2BBC90();
    sub_22D239528(255, (unint64_t *)&qword_26AEC2278, MEMORY[0x263F44A78], sub_22D238984, MEMORY[0x263F8D680]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268542DD8);
    }
  }
}

uint64_t sub_22D238984()
{
  return sub_22D238010(&qword_26AEC2068, MEMORY[0x263F44A78]);
}

uint64_t sub_22D2389B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D2387EC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D238A28(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D2387EC(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D238AA8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D2387EC(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D238B28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22D238B90()
{
  if (!qword_268542DE0)
  {
    sub_22D239204(255, &qword_268542DE8, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6E0], MEMORY[0x263F8D870]);
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542DE0);
    }
  }
}

void sub_22D238C14()
{
  if (!qword_268542E00)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D238CE0(255, &qword_268542E08, MEMORY[0x263EFDCF0]);
    type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData(255);
    sub_22D238E58(&qword_268542E18, &qword_268542E08, v0);
    unint64_t v1 = sub_22D2BC450();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268542E00);
    }
  }
}

void sub_22D238CE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_22D0A1910(255, &qword_268542E10, MEMORY[0x263F8D5C8], MEMORY[0x263F8D488]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_22CFF49FC();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_22D238D7C()
{
  unint64_t result = qword_268542E20;
  if (!qword_268542E20)
  {
    sub_22D231D14(255, &qword_268542DF8, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542E20);
  }
  return result;
}

uint64_t sub_22D238E04()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_22D238E4C(uint64_t a1, uint64_t a2)
{
  sub_22D1F82AC(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_22D238E58(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D238CE0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D238E9C()
{
  unint64_t v1 = (int *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return MEMORY[0x270FA0238](v0, v5 + 8, v4);
}

void sub_22D238FC4(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ClinicalSharingElectrocardiogramQuery(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_22D23142C(a1, v2 + v6, v7, a2);
}

uint64_t sub_22D239070()
{
  return sub_22D238010(&qword_26853DD50, MEMORY[0x263F44A78]);
}

uint64_t sub_22D2390A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_22D239254();
  uint64_t result = sub_22D2BCF30();
  uint64_t v12 = result;
  if (v2)
  {
    uint64_t v4 = (unint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      unint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      sub_22CFF9B64(v7, v8);
      sub_22D232338(v11, v5, v6, v7, v8);
      uint64_t v9 = v11[2];
      unint64_t v10 = v11[3];
      swift_bridgeObjectRelease();
      sub_22CFF5630(v9, v10);
      v4 += 4;
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

uint64_t sub_22D23916C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_22D2BCF30();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_22D232188(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void sub_22D239204(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_22D239254()
{
  unint64_t result = qword_26AEC3058;
  if (!qword_26AEC3058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC3058);
  }
  return result;
}

void sub_22D2392A8()
{
  if (!qword_268542E48)
  {
    sub_22D239254();
    unint64_t v0 = sub_22D2BD300();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542E48);
    }
  }
}

uint64_t sub_22D239304(uint64_t a1)
{
  uint64_t v2 = sub_22D2BBDE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_22D2394C0();
  uint64_t result = sub_22D2BCF30();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_22D231EA0((uint64_t)v8, v6, MEMORY[0x263F07908], (void (*)(uint64_t))sub_22D2394C0, (void (*)(void, void, void))sub_22D234BE4, (void (*)(uint64_t))sub_22D2394F4);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_22D2394C0()
{
  return sub_22D238010(&qword_26853EE08, MEMORY[0x263F07908]);
}

uint64_t sub_22D2394F4()
{
  return sub_22D238010(&qword_26853EE10, MEMORY[0x263F07908]);
}

void sub_22D239528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void **sub_22D2395A8(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *(void *)uint64_t v7 = *(void **)((char *)a2 + v6);
    *((void *)v7 + 1) = v9;
    *((_DWORD *)v7 + 4) = *(_DWORD *)((char *)a2 + v6 + 16);
    uint64_t v10 = *(uint64_t *)((char *)a2 + v6 + 32);
    *((void *)v7 + 3) = *(void **)((char *)a2 + v6 + 24);
    *((void *)v7 + 4) = v10;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v6 + 48);
    *((void *)v7 + 5) = *(void **)((char *)a2 + v6 + 40);
    *((void *)v7 + 6) = v11;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v6 + 64);
    *((void *)v7 + 7) = *(void **)((char *)a2 + v6 + 56);
    *((void *)v7 + 8) = v12;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v6 + 80);
    *((void *)v7 + 9) = *(void **)((char *)a2 + v6 + 72);
    *((void *)v7 + 10) = v13;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v6 + 96);
    *((void *)v7 + 11) = *(void **)((char *)a2 + v6 + 88);
    *((void *)v7 + 12) = v21;
    *((_DWORD *)v7 + 26) = *(_DWORD *)((char *)a2 + v6 + 104);
    v7[120] = *((unsigned char *)a2 + v6 + 120);
    *((void *)v7 + 14) = *(void **)((char *)a2 + v6 + 112);
    uint64_t v14 = *(int *)(type metadata accessor for PBECGMeasurement(0) + 56);
    uint64_t v19 = &v8[v14];
    uint64_t v20 = &v7[v14];
    uint64_t v15 = sub_22D2BBFF0();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    uint64_t v16 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v20, v19, v15);
  }
  return v5;
}

uint64_t sub_22D239740(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = &v4[*(int *)(type metadata accessor for PBECGMeasurement(0) + 56)];
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

void **sub_22D239800(void **a1, void **a2, uint64_t a3)
{
  int v3 = *a2;
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = *(uint64_t *)((char *)a2 + v4 + 8);
  *(void *)uint64_t v5 = *(void **)((char *)a2 + v4);
  *((void *)v5 + 1) = v7;
  *((_DWORD *)v5 + 4) = *(_DWORD *)((char *)a2 + v4 + 16);
  uint64_t v8 = *(uint64_t *)((char *)a2 + v4 + 32);
  *((void *)v5 + 3) = *(void **)((char *)a2 + v4 + 24);
  *((void *)v5 + 4) = v8;
  uint64_t v9 = *(uint64_t *)((char *)a2 + v4 + 48);
  *((void *)v5 + 5) = *(void **)((char *)a2 + v4 + 40);
  *((void *)v5 + 6) = v9;
  uint64_t v10 = *(uint64_t *)((char *)a2 + v4 + 64);
  *((void *)v5 + 7) = *(void **)((char *)a2 + v4 + 56);
  *((void *)v5 + 8) = v10;
  uint64_t v11 = *(uint64_t *)((char *)a2 + v4 + 80);
  *((void *)v5 + 9) = *(void **)((char *)a2 + v4 + 72);
  *((void *)v5 + 10) = v11;
  uint64_t v12 = *(uint64_t *)((char *)a2 + v4 + 96);
  *((void *)v5 + 11) = *(void **)((char *)a2 + v4 + 88);
  *((void *)v5 + 12) = v12;
  *((_DWORD *)v5 + 26) = *(_DWORD *)((char *)a2 + v4 + 104);
  v5[120] = *((unsigned char *)a2 + v4 + 120);
  *((void *)v5 + 14) = *(void **)((char *)a2 + v4 + 112);
  uint64_t v13 = *(int *)(type metadata accessor for PBECGMeasurement(0) + 56);
  uint64_t v18 = &v6[v13];
  uint64_t v19 = &v5[v13];
  uint64_t v14 = sub_22D2BBFF0();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  id v15 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v19, v18, v14);
  return a1;
}

void **sub_22D239948(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_DWORD *)v10 + 4) = *((_DWORD *)v11 + 4);
  *((void *)v10 + 3) = *((void *)v11 + 3);
  *((void *)v10 + 4) = *((void *)v11 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 5) = *((void *)v11 + 5);
  *((void *)v10 + 6) = *((void *)v11 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 7) = *((void *)v11 + 7);
  *((void *)v10 + 8) = *((void *)v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 9) = *((void *)v11 + 9);
  *((void *)v10 + 10) = *((void *)v11 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 11) = *((void *)v11 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 12) = *((void *)v11 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_DWORD *)v10 + 26) = *((_DWORD *)v11 + 26);
  uint64_t v12 = *((void *)v11 + 14);
  v10[120] = v11[120];
  *((void *)v10 + 14) = v12;
  uint64_t v13 = *(int *)(type metadata accessor for PBECGMeasurement(0) + 56);
  uint64_t v14 = &v10[v13];
  id v15 = &v11[v13];
  uint64_t v16 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

void *sub_22D239ADC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(_OWORD *)uint64_t v5 = *(_OWORD *)((char *)a2 + v4);
  *((_DWORD *)v5 + 4) = *(_DWORD *)((char *)a2 + v4 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)((char *)a2 + v4 + 24);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)((char *)a2 + v4 + 40);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)((char *)a2 + v4 + 56);
  *(_OWORD *)(v5 + 72) = *(_OWORD *)((char *)a2 + v4 + 72);
  *(_OWORD *)(v5 + 88) = *(_OWORD *)((char *)a2 + v4 + 88);
  *((_DWORD *)v5 + 26) = *(_DWORD *)((char *)a2 + v4 + 104);
  v5[120] = *((unsigned char *)a2 + v4 + 120);
  *((void *)v5 + 14) = *(void *)((char *)a2 + v4 + 112);
  uint64_t v7 = *(int *)(type metadata accessor for PBECGMeasurement(0) + 56);
  id v8 = &v5[v7];
  uint64_t v9 = &v6[v7];
  uint64_t v10 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

void **sub_22D239BBC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *((void *)v9 + 1);
  *(void *)id v8 = *(void *)v9;
  *((void *)v8 + 1) = v10;
  swift_bridgeObjectRelease();
  *((_DWORD *)v8 + 4) = *((_DWORD *)v9 + 4);
  uint64_t v11 = *((void *)v9 + 4);
  *((void *)v8 + 3) = *((void *)v9 + 3);
  *((void *)v8 + 4) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v9 + 6);
  *((void *)v8 + 5) = *((void *)v9 + 5);
  *((void *)v8 + 6) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)v9 + 8);
  *((void *)v8 + 7) = *((void *)v9 + 7);
  *((void *)v8 + 8) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *((void *)v9 + 10);
  *((void *)v8 + 9) = *((void *)v9 + 9);
  *((void *)v8 + 10) = v14;
  swift_bridgeObjectRelease();
  *((void *)v8 + 11) = *((void *)v9 + 11);
  swift_bridgeObjectRelease();
  *((void *)v8 + 12) = *((void *)v9 + 12);
  swift_bridgeObjectRelease();
  *((_DWORD *)v8 + 26) = *((_DWORD *)v9 + 26);
  *((void *)v8 + 14) = *((void *)v9 + 14);
  v8[120] = v9[120];
  uint64_t v15 = *(int *)(type metadata accessor for PBECGMeasurement(0) + 56);
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  uint64_t v18 = sub_22D2BBFF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_22D239CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D239D00);
}

uint64_t sub_22D239D00(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for PBECGMeasurement);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v5 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = a4(0);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_22D239DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D239DE0);
}

void *sub_22D239DE0(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for PBECGMeasurement);
}

void *__swift_store_extra_inhabitant_indexTm(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = a5(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)v6 + *(int *)(a4 + 20);
    return (void *)v9(v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_22D239EA4()
{
  uint64_t result = type metadata accessor for PBECGMeasurement(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22D239F40(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t sub_22D239F84(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_22D239FCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D23A034(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D23A098(unint64_t *a1, uint64_t a2)
{
  return sub_22D05C90C(a1, a2);
}

uint64_t sub_22D23A0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v41 = a4;
  unint64_t v42 = a5;
  uint64_t v40 = a2;
  uint64_t v38 = a1;
  sub_22D23CA30(0, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = type metadata accessor for PBNode(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v39 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23CA30(0, &qword_26853E140, (void (*)(uint64_t))type metadata accessor for PBPlainText.OneOf_Plaintext);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = type metadata accessor for PBTypedData(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = type metadata accessor for PBPlainText(0);
  uint64_t v24 = v23 - 8;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23CA84(a3, (uint64_t)v22, type metadata accessor for PBTypedData);
  uint64_t v43 = 3;
  char v44 = 1;
  sub_22D060F20(&v43, 0, 0, 0, 0, (uint64_t)v26);
  sub_22D23CA84((uint64_t)v22, (uint64_t)v20, type metadata accessor for PBTypedData);
  uint64_t v27 = *(int *)(v24 + 28);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPlainText._StorageClass(0);
    swift_allocObject();
    uint64_t v28 = swift_retain();
    *(void *)&v26[v27] = sub_22D0378B8(v28);
    swift_release();
  }
  uint64_t v29 = *(void *)&v26[v27];
  sub_22D23CAEC((uint64_t)v20, (uint64_t)v16, type metadata accessor for PBTypedData);
  uint64_t v30 = type metadata accessor for PBPlainText.OneOf_Plaintext(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v16, 0, 1, v30);
  sub_22D23C908((uint64_t)v16, (uint64_t)v14, &qword_26853E140, (void (*)(uint64_t))type metadata accessor for PBPlainText.OneOf_Plaintext);
  uint64_t v31 = v29
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBPlainTextP33_3ECAB67A0DFC3A57AF94D1182EC4571713_StorageClass__plaintext;
  swift_beginAccess();
  swift_retain();
  sub_22D23CB54((uint64_t)v14, v31, &qword_26853E140, (void (*)(uint64_t))type metadata accessor for PBPlainText.OneOf_Plaintext);
  swift_endAccess();
  swift_release();
  sub_22D23C9D0((uint64_t)v22, type metadata accessor for PBTypedData);
  uint64_t v43 = 3;
  char v44 = 1;
  uint64_t v32 = sub_22D2BC9A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v8, 1, 1, v32);
  uint64_t v33 = v39;
  uint64_t v34 = v45;
  id v35 = sub_22D23A5C4(v39, v40, (uint64_t)v26, (uint64_t)&v43, (uint64_t)v8, v41, v42, 0, 0);
  if (v34)
  {
    sub_22D23C974((uint64_t)v8, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
    return sub_22D23C9D0((uint64_t)v26, type metadata accessor for PBPlainText);
  }
  else
  {
    sub_22CFF5630((uint64_t)v35, v36);
    sub_22D23C974((uint64_t)v8, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
    sub_22D23C9D0((uint64_t)v26, type metadata accessor for PBPlainText);
    return sub_22D23CAEC(v33, v38, type metadata accessor for PBNode);
  }
}

id sub_22D23A5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v172 = a8;
  unint64_t v171 = a7;
  uint64_t v175 = a6;
  uint64_t v174 = a5;
  uint64_t v143 = a2;
  uint64_t v142 = a1;
  uint64_t v154 = sub_22D2BCA00();
  uint64_t v155 = *(void *)(v154 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v154);
  v144 = (char *)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v152 = (char *)&v142 - v13;
  uint64_t v14 = sub_22D2BC9C0();
  MEMORY[0x270FA5388](v14 - 8);
  v151 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_22D2BC940();
  uint64_t v150 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  uint64_t v153 = (char *)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23CA30(0, &qword_268542198, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v161 = (uint64_t)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v160 = (uint64_t)&v142 - v20;
  uint64_t v166 = type metadata accessor for PBAssociatedData(0);
  uint64_t v159 = *(void *)(v166 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v166);
  uint64_t v162 = (uint64_t)&v142 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  v168 = (char *)&v142 - v23;
  uint64_t v165 = type metadata accessor for PBNode(0);
  MEMORY[0x270FA5388](v165);
  v169 = (char *)&v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_22D2BCA50();
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  uint64_t v147 = (char *)&v142 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23CA30(0, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v158 = (uint64_t)&v142 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  v164 = (char *)&v142 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v142 - v31;
  uint64_t v178 = sub_22D2BC9A0();
  uint64_t v179 = *(void *)(v178 - 8);
  MEMORY[0x270FA5388](v178);
  v163 = (char *)&v142 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23CA30(0, &qword_268542E68, (void (*)(uint64_t))type metadata accessor for PBPlainText);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v156 = (uint64_t)&v142 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v142 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v142 - v40;
  uint64_t v42 = type metadata accessor for PBPlainText(0);
  unint64_t v173 = *(void *)(v42 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  uint64_t v157 = (uint64_t)&v142 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (char *)&v142 - v45;
  uint64_t v47 = type metadata accessor for PBPayload(0);
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (char *)&v142 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = *(void *)a4;
  int v170 = *(unsigned __int8 *)(a4 + 8);
  sub_22D2BBFE0();
  uint64_t v148 = v47;
  uint64_t v50 = *(int *)(v47 + 20);
  if (qword_26853D3F0 != -1) {
    swift_once();
  }
  *(void *)&v49[v50] = qword_2685439A0;
  sub_22D23CA84(a3, (uint64_t)v46, type metadata accessor for PBPlainText);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPayload._StorageClass(0);
    swift_allocObject();
    uint64_t v51 = swift_retain();
    *(void *)&v49[v50] = sub_22D289964(v51);
    swift_release();
  }
  v176 = v49;
  uint64_t v52 = *(void *)&v49[v50];
  sub_22D23CAEC((uint64_t)v46, (uint64_t)v41, type metadata accessor for PBPlainText);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v173 + 56))(v41, 0, 1, v42);
  sub_22D23C908((uint64_t)v41, (uint64_t)v39, &qword_268542E68, (void (*)(uint64_t))type metadata accessor for PBPlainText);
  uint64_t v53 = v52
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  swift_retain();
  sub_22D23CB54((uint64_t)v39, v53, &qword_268542E68, (void (*)(uint64_t))type metadata accessor for PBPlainText);
  swift_endAccess();
  swift_release();
  sub_22D23CBC0(v174, (uint64_t)v32, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
  uint64_t v54 = v179;
  uint64_t v55 = v178;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48))(v32, 1, v178) == 1)
  {
    sub_22D23C974((uint64_t)v32, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
    uint64_t v56 = (uint64_t)v169;
    uint64_t v57 = v166;
    uint64_t v58 = v175;
    uint64_t v59 = v167;
LABEL_7:
    uint64_t v60 = (uint64_t)v168;
    goto LABEL_14;
  }
  uint64_t v61 = v163;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v163, v32, v55);
  unint64_t v62 = v169;
  uint64_t v58 = v175;
  uint64_t v60 = (uint64_t)v168;
  if (v177 == 1)
  {
    uint64_t v63 = *(void *)&v176[v50]
        + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
    swift_beginAccess();
    uint64_t v64 = v156;
    sub_22D23CBC0(v63, v156, &qword_268542E68, (void (*)(uint64_t))type metadata accessor for PBPlainText);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 48))(v64, 1, v42) == 1)
    {
      uint64_t v65 = v157;
      sub_22D2BBFE0();
      uint64_t v66 = *(int *)(v42 + 20);
      uint64_t v67 = v167;
      uint64_t v56 = (uint64_t)v62;
      if (qword_26853CCF8 != -1) {
        swift_once();
      }
      *(void *)(v65 + v66) = qword_26853E130;
      swift_retain();
      sub_22D23C974(v64, &qword_268542E68, (void (*)(uint64_t))type metadata accessor for PBPlainText);
      uint64_t v68 = (uint64_t)v176;
    }
    else
    {
      uint64_t v65 = v157;
      sub_22D23CAEC(v64, v157, type metadata accessor for PBPlainText);
      uint64_t v68 = (uint64_t)v176;
      uint64_t v67 = v167;
      uint64_t v56 = (uint64_t)v62;
    }
    sub_22D23CE68(&qword_26853E158, (void (*)(uint64_t))type metadata accessor for PBPlainText);
    uint64_t v85 = v65;
    uint64_t v86 = sub_22D2BC1E0();
    if (v67)
    {
      sub_22D23C9D0(v65, type metadata accessor for PBPlainText);
      (*(void (**)(char *, uint64_t))(v179 + 8))(v163, v55);
      uint64_t v83 = v68;
      goto LABEL_21;
    }
    uint64_t v111 = v86;
    unint64_t v112 = v87;
    sub_22D23C9D0(v85, type metadata accessor for PBPlainText);
    uint64_t v184 = v111;
    unint64_t v185 = v112;
    unint64_t v173 = v112;
    sub_22D1DA15C();
    uint64_t v113 = v147;
    sub_22D2BC990();
    uint64_t v59 = 0;
    uint64_t v117 = sub_22D2BCA40();
    uint64_t v119 = v118;
    (*(void (**)(char *, uint64_t))(v145 + 8))(v113, v146);
    sub_22CFF5630(v111, v173);
    uint64_t v120 = (uint64_t)v176;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBPayload._StorageClass(0);
      swift_allocObject();
      uint64_t v121 = swift_retain();
      *(void *)(v120 + v50) = sub_22D289964(v121);
      swift_release();
    }
    uint64_t v122 = (uint64_t *)(*(void *)(v120 + v50)
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
    swift_beginAccess();
    uint64_t v123 = *v122;
    unint64_t v124 = v122[1];
    *uint64_t v122 = v117;
    v122[1] = v119;
    sub_22CFF5630(v123, v124);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v163, v55);
    uint64_t v57 = v166;
    uint64_t v58 = v175;
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(v54 + 8))(v61, v55);
  uint64_t v57 = v166;
  uint64_t v59 = v167;
  uint64_t v56 = (uint64_t)v62;
LABEL_14:
  uint64_t v50 = a9;
  sub_22D2BBFE0();
  uint64_t v69 = *(int *)(v165 + 20);
  char v70 = v170;
  if (qword_26853D320 != -1) {
    swift_once();
  }
  *(void *)(v56 + v69) = qword_268542190;
  uint64_t v184 = v177;
  LOBYTE(v185) = v70;
  uint64_t v71 = (uint64_t)v164;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v179 + 56))(v164, 1, 1, v178);
  swift_retain();
  unint64_t v72 = v171;
  sub_22CFF9B64(v58, v171);
  swift_bridgeObjectRetain();
  sub_22D2B8644(&v184, v58, v72, v71, v172, a9, v60);
  if (v59)
  {
    sub_22D23C9D0(v56, type metadata accessor for PBNode);
    uint64_t v83 = (uint64_t)v176;
LABEL_21:
    sub_22D23C9D0(v83, type metadata accessor for PBPayload);
    return (id)v50;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v73 = swift_retain();
    *(void *)(v56 + v69) = sub_22D1DE7E8(v73);
    swift_release();
  }
  uint64_t v74 = *(void *)(v56 + v69);
  uint64_t v75 = v60;
  uint64_t v76 = v160;
  sub_22D23CAEC(v75, v160, type metadata accessor for PBAssociatedData);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v159 + 56))(v76, 0, 1, v57);
  uint64_t v77 = v69;
  uint64_t v78 = v161;
  sub_22D23C908(v76, v161, &qword_268542198, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
  uint64_t v79 = v74
      + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__associatedData;
  swift_beginAccess();
  swift_retain();
  sub_22D23CB54(v78, v79, &qword_268542198, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
  swift_endAccess();
  swift_release();
  uint64_t v184 = v177;
  LOBYTE(v185) = v170;
  uint64_t v80 = v158;
  sub_22D23CBC0(v174, v158, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
  uint64_t v81 = v175;
  unint64_t v82 = v171;
  sub_22CFF9B64(v175, v171);
  swift_bridgeObjectRetain();
  sub_22D2B8644(&v184, v81, v82, v80, v172, a9, v162);
  sub_22D2BC9B0();
  uint64_t v88 = (uint64_t)v153;
  sub_22D2BC930();
  uint64_t v89 = v152;
  sub_22D2BC9F0();
  uint64_t v90 = v154;
  uint64_t v186 = v154;
  uint64_t v187 = sub_22D23CE68(&qword_268542E70, MEMORY[0x263F046D8]);
  uint64_t v91 = __swift_allocate_boxed_opaque_existential_1(&v184);
  uint64_t v92 = v155;
  (*(void (**)(uint64_t *, char *, uint64_t))(v155 + 16))(v91, v89, v90);
  __swift_project_boxed_opaque_existential_1(&v184, v186);
  sub_22D2BB930();
  uint64_t v93 = v89;
  uint64_t v94 = *(void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v155 = v92 + 8;
  v94(v93, v90);
  uint64_t v95 = v182;
  uint64_t v96 = v183;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v184);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v97 = swift_retain();
    *(void *)(v56 + v77) = sub_22D1DE7E8(v97);
    swift_release();
  }
  uint64_t v98 = *(void *)(v56 + v77);
  swift_beginAccess();
  uint64_t v99 = *(void *)(v98 + 16);
  unint64_t v100 = *(void *)(v98 + 24);
  *(void *)(v98 + 16) = v95;
  *(void *)(v98 + 24) = v96;
  sub_22CFF5630(v99, v100);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v101 = swift_retain();
    *(void *)(v56 + v77) = sub_22D1DE7E8(v101);
    swift_release();
  }
  uint64_t v102 = *(void *)(v56 + v77)
       + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__algorithm;
  swift_beginAccess();
  *(void *)uint64_t v102 = 1;
  *(unsigned char *)(v102 + 8) = 1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBNode._StorageClass(0);
    swift_allocObject();
    uint64_t v103 = swift_retain();
    *(void *)(v56 + v77) = sub_22D1DE7E8(v103);
    swift_release();
  }
  uint64_t v104 = *(void *)(v56 + v77)
       + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__dataProtocolVersion;
  swift_beginAccess();
  *(void *)uint64_t v104 = 2;
  *(unsigned char *)(v104 + 8) = 1;
  id result = objc_msgSend(self, sel_currentOSVersion);
  if (result)
  {
    uint64_t v105 = result;
    uint64_t v106 = sub_22D2BCBD0();
    uint64_t v108 = v107;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      uint64_t v109 = swift_retain();
      *(void *)(v56 + v77) = sub_22D1DE7E8(v109);
      swift_release();
    }
    uint64_t v110 = (uint64_t *)(*(void *)(v56 + v77)
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__clientVersion);
    swift_beginAccess();
    *uint64_t v110 = v106;
    v110[1] = v108;
    swift_bridgeObjectRelease();
    sub_22D23CE68(&qword_268542E78, (void (*)(uint64_t))type metadata accessor for PBPayload);
    uint64_t v114 = sub_22D2BC1E0();
    unint64_t v116 = v115;
    sub_22D23CE68(&qword_268542260, (void (*)(uint64_t))type metadata accessor for PBAssociatedData);
    unint64_t v125 = (void *)sub_22D2BC1E0();
    unint64_t v127 = v126;
    uint64_t v128 = *(void *)&v169[v77];
    swift_beginAccess();
    unint64_t v129 = *(void *)(v128 + 24);
    uint64_t v180 = *(void *)(v128 + 16);
    unint64_t v181 = v129;
    sub_22CFF9B64(v180, v129);
    sub_22D1DA15C();
    uint64_t v130 = (uint64_t)v144;
    sub_22D2BC9E0();
    sub_22D1D9E2C(v114, v116, v125, v127, v88, v130);
    uint64_t v179 = v131;
    uint64_t v133 = v132;
    v94((char *)v130, v154);
    sub_22CFF5630((uint64_t)v125, v127);
    sub_22CFF5630(v114, v116);
    uint64_t v134 = (uint64_t)v169;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      type metadata accessor for PBNode._StorageClass(0);
      swift_allocObject();
      uint64_t v136 = swift_retain();
      *(void *)(v134 + v77) = sub_22D1DE7E8(v136);
      swift_release();
    }
    unint64_t v137 = (uint64_t *)(*(void *)(v134 + v77)
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon6PBNodeP33_A7AC4849202AB7CE22E24A7E30096B6813_StorageClass__cyphertext);
    swift_beginAccess();
    uint64_t v138 = *v137;
    unint64_t v139 = v137[1];
    uint64_t v140 = v179;
    *unint64_t v137 = v133;
    v137[1] = v140;
    sub_22CFF5630(v138, v139);
    sub_22D23C9D0((uint64_t)v176, type metadata accessor for PBPayload);
    sub_22D23CAEC(v134, v142, type metadata accessor for PBNode);
    (*(void (**)(uint64_t, char *, uint64_t))(v150 + 32))(v143, v153, v149);
    uint64_t v141 = v162;
    uint64_t v50 = *(void *)(v162 + 32);
    sub_22CFF9B64(v50, *(void *)(v162 + 40));
    sub_22D23C9D0(v141, type metadata accessor for PBAssociatedData);
    return (id)v50;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D23BE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v45 = a6;
  unint64_t v46 = a7;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v44 = a2;
  uint64_t v40 = a1;
  sub_22D23CA30(0, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = type metadata accessor for PBNode(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23CA30(0, &qword_26853E140, (void (*)(uint64_t))type metadata accessor for PBPlainText.OneOf_Plaintext);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = type metadata accessor for PBReferences(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v40 - v23;
  uint64_t v25 = type metadata accessor for PBPlainText(0);
  uint64_t v26 = v25 - 8;
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23CA84(v41, (uint64_t)v24, type metadata accessor for PBReferences);
  uint64_t v47 = 2;
  char v48 = 1;
  swift_bridgeObjectRetain();
  sub_22D060F20(&v47, v42, a5, 0, 0, (uint64_t)v28);
  sub_22D23CA84((uint64_t)v24, (uint64_t)v22, type metadata accessor for PBReferences);
  uint64_t v29 = *(int *)(v26 + 28);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPlainText._StorageClass(0);
    swift_allocObject();
    uint64_t v30 = swift_retain();
    *(void *)&v28[v29] = sub_22D0378B8(v30);
    swift_release();
  }
  uint64_t v31 = *(void *)&v28[v29];
  sub_22D23CAEC((uint64_t)v22, (uint64_t)v18, type metadata accessor for PBReferences);
  uint64_t v32 = type metadata accessor for PBPlainText.OneOf_Plaintext(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v18, 0, 1, v32);
  sub_22D23C908((uint64_t)v18, (uint64_t)v16, &qword_26853E140, (void (*)(uint64_t))type metadata accessor for PBPlainText.OneOf_Plaintext);
  uint64_t v33 = v31
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBPlainTextP33_3ECAB67A0DFC3A57AF94D1182EC4571713_StorageClass__plaintext;
  swift_beginAccess();
  swift_retain();
  sub_22D23CB54((uint64_t)v16, v33, &qword_26853E140, (void (*)(uint64_t))type metadata accessor for PBPlainText.OneOf_Plaintext);
  swift_endAccess();
  swift_release();
  sub_22D23C9D0((uint64_t)v24, type metadata accessor for PBReferences);
  uint64_t v47 = 2;
  char v48 = 1;
  uint64_t v34 = sub_22D2BC9A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v10, 1, 1, v34);
  uint64_t v35 = v43;
  uint64_t v36 = v49;
  id v37 = sub_22D23A5C4(v43, v44, (uint64_t)v28, (uint64_t)&v47, (uint64_t)v10, v45, v46, 0, 0);
  if (v36)
  {
    sub_22D23C974((uint64_t)v10, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
    return sub_22D23C9D0((uint64_t)v28, type metadata accessor for PBPlainText);
  }
  else
  {
    sub_22CFF5630((uint64_t)v37, v38);
    sub_22D23C974((uint64_t)v10, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
    sub_22D23C9D0((uint64_t)v28, type metadata accessor for PBPlainText);
    return sub_22D23CAEC(v35, v40, type metadata accessor for PBNode);
  }
}

id sub_22D23C338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v63 = a2;
  uint64_t v64 = a8;
  uint64_t v58 = a6;
  uint64_t v54 = a5;
  uint64_t v55 = a4;
  uint64_t v61 = a1;
  unint64_t v62 = a9;
  sub_22D23CA30(0, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v59 = (char *)&v53 - v12;
  sub_22D23CA30(0, &qword_26853E140, (void (*)(uint64_t))type metadata accessor for PBPlainText.OneOf_Plaintext);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v56 = (uint64_t)&v53 - v16;
  uint64_t v17 = type metadata accessor for PBReferences(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v53 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v53 - v20;
  uint64_t v22 = type metadata accessor for PBPlainText(0);
  uint64_t v23 = v22 - 8;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23CA84(a3, (uint64_t)v21, type metadata accessor for PBReferences);
  uint64_t v60 = a7;
  uint64_t v26 = (void *)(a7 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo);
  swift_beginAccess();
  uint64_t v27 = v26[3];
  uint64_t v28 = v26[4];
  uint64_t v29 = __swift_project_boxed_opaque_existential_1(v26, v27);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v53 - v31;
  (*(void (**)(char *))(v30 + 16))((char *)&v53 - v31);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
  uint64_t v35 = v34;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v27);
  uint64_t v65 = 1;
  char v66 = 1;
  uint64_t v36 = v54;
  swift_bridgeObjectRetain();
  uint64_t v37 = v33;
  uint64_t v38 = (uint64_t)v21;
  uint64_t v39 = v35;
  uint64_t v40 = (uint64_t)v53;
  sub_22D060F20(&v65, v55, v36, v37, v39, (uint64_t)v25);
  sub_22D23CA84((uint64_t)v21, v40, type metadata accessor for PBReferences);
  uint64_t v41 = *(int *)(v23 + 28);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPlainText._StorageClass(0);
    swift_allocObject();
    uint64_t v42 = swift_retain();
    *(void *)&v25[v41] = sub_22D0378B8(v42);
    swift_release();
  }
  uint64_t v43 = *(void *)&v25[v41];
  uint64_t v44 = v56;
  sub_22D23CAEC(v40, v56, type metadata accessor for PBReferences);
  uint64_t v45 = type metadata accessor for PBPlainText.OneOf_Plaintext(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
  uint64_t v46 = v57;
  sub_22D23C908(v44, v57, &qword_26853E140, (void (*)(uint64_t))type metadata accessor for PBPlainText.OneOf_Plaintext);
  uint64_t v47 = v43
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBPlainTextP33_3ECAB67A0DFC3A57AF94D1182EC4571713_StorageClass__plaintext;
  swift_beginAccess();
  swift_retain();
  sub_22D23CB54(v46, v47, &qword_26853E140, (void (*)(uint64_t))type metadata accessor for PBPlainText.OneOf_Plaintext);
  swift_endAccess();
  swift_release();
  sub_22D23C9D0(v38, type metadata accessor for PBReferences);
  uint64_t v65 = 1;
  char v66 = 1;
  uint64_t v48 = sub_22D2BC9A0();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v59, v58, v48);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
  id v51 = sub_22D23A5C4(v61, v63, (uint64_t)v25, (uint64_t)&v65, v50, v64, v62, *(void *)(v60 + 40), *(void *)(v60 + 48));
  sub_22D23C974(v50, (unint64_t *)&qword_268542E60, MEMORY[0x263F04698]);
  sub_22D23C9D0((uint64_t)v25, type metadata accessor for PBPlainText);
  return v51;
}

uint64_t sub_22D23C908(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D23CA30(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D23C974(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D23CA30(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D23C9D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_22D23CA30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D23CA84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D23CAEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D23CB54(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D23CA30(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D23CBC0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D23CA30(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unsigned char *sub_22D23CC2C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    id result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    id result = (unsigned char *)sub_22D23CCA4(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    id result = (unsigned char *)sub_22D23CD68((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    id result = (unsigned char *)sub_22D23CDE4((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_22D23CCA4(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_22D23CD68(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_22D2BB800();
  swift_allocObject();
  uint64_t result = sub_22D2BB7B0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_22D2BBAD0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_22D23CDE4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_22D2BB800();
  swift_allocObject();
  uint64_t result = sub_22D2BB7B0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_22D23CE68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D23CEB0(uint64_t a1, uint64_t a2)
{
  sub_22D23EFF8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  uint64_t v26 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23F0A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23F190();
  uint64_t v30 = v12;
  uint64_t v32 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23F27C();
  uint64_t v31 = v15;
  uint64_t v33 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v27 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_22D2A958C(*(void *)(a1 + 56));
  sub_22D022BF8();
  sub_22D23F3A8(&qword_268542F10, (void (*)(uint64_t))sub_22D022BF8);
  sub_22D2BCD80();
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  swift_retain();
  sub_22D2BC5D0();
  sub_22D23E1EC();
  sub_22D23F3A8(&qword_268542F28, (void (*)(uint64_t))sub_22D23EFF8);
  sub_22D23F3A8(&qword_268542F20, (void (*)(uint64_t))sub_22D23E1EC);
  uint64_t v18 = v25;
  sub_22D2BC890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v18);
  uint64_t v34 = sub_22D240544(a1);
  sub_22D23E29C();
  sub_22D23F3A8(&qword_268542F38, (void (*)(uint64_t))sub_22D23F0A8);
  sub_22D23F3A8(&qword_268542EC0, (void (*)(uint64_t))sub_22D23E29C);
  uint64_t v19 = v28;
  sub_22D2BC7D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v19);
  uint64_t v34 = sub_22D2409A4(a1);
  sub_22D23F3A8(&qword_268542F48, (void (*)(uint64_t))sub_22D23F190);
  uint64_t v20 = v27;
  uint64_t v21 = v30;
  sub_22D2BC7D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v21);
  sub_22D23F3A8(&qword_268542F50, (void (*)(uint64_t))sub_22D23F27C);
  uint64_t v22 = v31;
  uint64_t v23 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v22);
  return v23;
}

uint64_t sub_22D23D408(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D23D4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22D23E1EC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23E304();
  uint64_t v22 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23E4A0();
  uint64_t v23 = *(void *)(v15 - 8);
  uint64_t v24 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_22D24845C(a1, a2);
  sub_22D23E29C();
  sub_22D23F3A8(&qword_268542EC0, (void (*)(uint64_t))sub_22D23E29C);
  sub_22D2BCD80();
  swift_bridgeObjectRelease();
  sub_22D01975C();
  sub_22D2BC550();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_22D23F3A8(&qword_268542EF0, (void (*)(uint64_t))sub_22D23E304);
    sub_22D23F3A8(&qword_26AEC2E68, (void (*)(uint64_t))sub_22D01975C);
    uint64_t v19 = v22;
    sub_22D2BC880();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v19);
    sub_22D23F3A8(&qword_268542F00, (void (*)(uint64_t))sub_22D23E4A0);
    uint64_t v20 = v24;
    uint64_t v21 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v20);
    return v21;
  }
  return result;
}

uint64_t sub_22D23D850@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_22D23D8A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_22D23D8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  sub_22D23DCB0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  uint64_t v30 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23DD44();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D23DDF0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_22D0D32AC(MEMORY[0x263F8EE78]);
  uint64_t v31 = a1;
  sub_22D01975C();
  type metadata accessor for ClinicalSharingQueryOutput(0);
  sub_22D23F3A8(&qword_26AEC2E68, (void (*)(uint64_t))sub_22D01975C);
  swift_retain();
  sub_22D2BC780();
  swift_release();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v26;
  void v18[2] = v25;
  v18[3] = v19;
  v18[4] = v17;
  swift_retain();
  swift_retain();
  sub_22D2BC700();
  sub_22D23F3A8(&qword_268542E98, (void (*)(uint64_t))sub_22D23DD44);
  sub_22D23F3A8(&qword_268542EA0, (void (*)(uint64_t))sub_22D23DCB0);
  uint64_t v20 = v29;
  sub_22D2BC7E0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v20);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_22D23F3A8(&qword_268542EA8, (void (*)(uint64_t))sub_22D23DDF0);
  uint64_t v21 = v27;
  uint64_t v22 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v21);
  swift_release();
  return v22;
}

void sub_22D23DCB0()
{
  if (!qword_268542E80)
  {
    sub_22D01975C();
    sub_22D23F3A8(&qword_26AEC2E68, (void (*)(uint64_t))sub_22D01975C);
    unint64_t v0 = sub_22D2BC710();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542E80);
    }
  }
}

void sub_22D23DD44()
{
  if (!qword_268542E88)
  {
    sub_22D01975C();
    type metadata accessor for ClinicalSharingQueryOutput(255);
    sub_22D23F3A8(&qword_26AEC2E68, (void (*)(uint64_t))sub_22D01975C);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542E88);
    }
  }
}

void sub_22D23DDF0()
{
  if (!qword_268542E90)
  {
    sub_22D23DD44();
    sub_22D23DCB0();
    sub_22D23F3A8(&qword_268542E98, (void (*)(uint64_t))sub_22D23DD44);
    sub_22D23F3A8(&qword_268542EA0, (void (*)(uint64_t))sub_22D23DCB0);
    unint64_t v0 = sub_22D2BC3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542E90);
    }
  }
}

uint64_t sub_22D23DEDC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D23DF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void (**)(void *@<X8>))(a1
                                            + *(int *)(type metadata accessor for ClinicalSharingQueryOutput(0) + 24));
  if (!v7)
  {
LABEL_10:
    sub_22D23E658(a1, a3);
    return sub_22D074520((uint64_t)v7);
  }
  uint64_t v8 = (void *)(a2 + 16);
  swift_beginAccess();
  sub_22D1FBFB8(v7);
  uint64_t v9 = v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0x8000000000000000;
  unint64_t v13 = sub_22D04EBF4((uint64_t)v9);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_12;
  }
  char v3 = v12;
  if (*(void *)(v11 + 24) >= v16)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_7;
    }
LABEL_12:
    sub_22D055DC0();
    goto LABEL_7;
  }
  sub_22D0525EC(v16, isUniquelyReferenced_nonNull_native);
  unint64_t v17 = sub_22D04EBF4((uint64_t)v9);
  if ((v3 & 1) == (v18 & 1))
  {
    unint64_t v13 = v17;
LABEL_7:
    *uint64_t v8 = v11;
    swift_bridgeObjectRelease();
    uint64_t v19 = (void *)*v8;
    swift_bridgeObjectRetain();
    if ((v3 & 1) == 0)
    {
      sub_22D0546CC(v13, (uint64_t)v9, MEMORY[0x263F8EE78], v19);
      uint64_t v20 = v9;
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = swift_bridgeObjectRetain();
    sub_22D23EC1C(v21, (uint64_t (*)(void))sub_22D281EB0, MEMORY[0x263F062D0]);
    swift_endAccess();
    swift_bridgeObjectRelease();

    uint64_t v7 = sub_22D23E118;
    goto LABEL_10;
  }
  sub_22D23EFB8();
  uint64_t result = sub_22D2BD6A0();
  __break(1u);
  return result;
}

uint64_t sub_22D23E110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D23DF14(a1, v2, a2);
}

void sub_22D23E118(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
}

uint64_t sub_22D23E128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_22D23D4A4(v6, a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  return result;
}

uint64_t sub_22D23E1A0()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22D23E1E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_22D23E128(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_22D23E1EC()
{
  if (!qword_268542EB0)
  {
    sub_22D23E29C();
    sub_22D23F3A8(&qword_268542EC0, (void (*)(uint64_t))sub_22D23E29C);
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542EB0);
    }
  }
}

void sub_22D23E29C()
{
  if (!qword_268542EB8)
  {
    sub_22D021C20(255, (unint64_t *)&qword_26853DCF8);
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542EB8);
    }
  }
}

void sub_22D23E304()
{
  if (!qword_268542EC8)
  {
    sub_22D23E3B4(255, &qword_268542ED0, (uint64_t (*)(uint64_t))sub_22D01975C, MEMORY[0x263F8D488]);
    sub_22D23E418();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542EC8);
    }
  }
}

void sub_22D23E3B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22D23E418()
{
  unint64_t result = qword_268542ED8;
  if (!qword_268542ED8)
  {
    sub_22D23E3B4(255, &qword_268542ED0, (uint64_t (*)(uint64_t))sub_22D01975C, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542ED8);
  }
  return result;
}

void sub_22D23E4A0()
{
  if (!qword_268542EE0)
  {
    sub_22D01975C();
    sub_22D23E58C();
    sub_22D23F3A8(&qword_26AEC2E68, (void (*)(uint64_t))sub_22D01975C);
    sub_22D23F3A8(&qword_268542EF8, (void (*)(uint64_t))sub_22D23E58C);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542EE0);
    }
  }
}

void sub_22D23E58C()
{
  if (!qword_268542EE8)
  {
    sub_22D23E304();
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    sub_22D23F3A8(&qword_268542EF0, (void (*)(uint64_t))sub_22D23E304);
    unint64_t v0 = sub_22D2BC430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542EE8);
    }
  }
}

uint64_t sub_22D23E658(uint64_t a1, uint64_t a2)
{
  uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Output - 8) + 16))(a2, a1, Output);
  return a2;
}

uint64_t sub_22D23E6BC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  char v3 = sub_22D28124C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_22D021C20(0, (unint64_t *)&qword_26853DCF8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D23E840(unint64_t a1)
{
  return sub_22D23E9F0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_22D249638);
}

uint64_t sub_22D23E858(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  char v3 = sub_22D2812F8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D23E9AC(uint64_t a1)
{
  return sub_22D23EC1C(a1, (uint64_t (*)(void))sub_22D2815DC, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo);
}

uint64_t sub_22D23E9D8(unint64_t a1)
{
  return sub_22D23E9F0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_22D249860);
}

uint64_t sub_22D23E9F0(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x230F7AFA0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_22D2BCE20();
}

uint64_t sub_22D23EBC4(uint64_t a1)
{
  return sub_22D23EC1C(a1, (uint64_t (*)(void))sub_22D2812B0, MEMORY[0x263F07490]);
}

uint64_t sub_22D23EBF0(uint64_t a1)
{
  return sub_22D23EC1C(a1, (uint64_t (*)(void))sub_22D28145C, type metadata accessor for PBTimeSeries.Value);
}

uint64_t sub_22D23EC1C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *char v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D23EDD8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v24 = v4 + v2;
  }
  else {
    int64_t v24 = v4;
  }
  unint64_t v3 = sub_22D282270(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  sub_22D23E3B4(0, &qword_26853DED0, type metadata accessor for PBTypedData, MEMORY[0x263F8D8F0]);
  uint64_t v13 = *(void *)(*(void *)(v11 - 8) + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v14 = (v12 + 32) & ~v12;
  unint64_t v15 = v3 + v14 + v13 * v9;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v8;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v21 = *(void *)(v3 + 16);
  BOOL v22 = __OFADD__(v21, v8);
  uint64_t v23 = v21 + v8;
  if (!v22)
  {
    *(void *)(v3 + 16) = v23;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

unint64_t sub_22D23EFB8()
{
  unint64_t result = qword_26853E2F8;
  if (!qword_26853E2F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26853E2F8);
  }
  return result;
}

void sub_22D23EFF8()
{
  if (!qword_268542F08)
  {
    sub_22D022BF8();
    sub_22D23F3A8(&qword_268542F10, (void (*)(uint64_t))sub_22D022BF8);
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542F08);
    }
  }
}

void sub_22D23F0A8()
{
  if (!qword_268542F18)
  {
    sub_22D23E1EC();
    sub_22D23EFF8();
    sub_22D23F3A8(&qword_268542F20, (void (*)(uint64_t))sub_22D23E1EC);
    sub_22D23F3A8(&qword_268542F28, (void (*)(uint64_t))sub_22D23EFF8);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542F18);
    }
  }
}

void sub_22D23F190()
{
  if (!qword_268542F30)
  {
    sub_22D23F0A8();
    sub_22D23E1EC();
    sub_22D23F3A8(&qword_268542F38, (void (*)(uint64_t))sub_22D23F0A8);
    sub_22D23F3A8(&qword_268542F20, (void (*)(uint64_t))sub_22D23E1EC);
    unint64_t v0 = sub_22D2BC3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542F30);
    }
  }
}

void sub_22D23F27C()
{
  if (!qword_268542F40)
  {
    sub_22D23F190();
    sub_22D23E1EC();
    sub_22D23F3A8(&qword_268542F48, (void (*)(uint64_t))sub_22D23F190);
    sub_22D23F3A8(&qword_268542F20, (void (*)(uint64_t))sub_22D23E1EC);
    unint64_t v0 = sub_22D2BC3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542F40);
    }
  }
}

uint64_t sub_22D23F368()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D23F3A0(uint64_t a1)
{
  return sub_22D23D408(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_22D23F3A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D23F3F0(uint64_t a1, id a2)
{
  uint64_t v2 = (uint64_t)a2;
  if (a1)
  {

    return a1;
  }
  else if (!a2)
  {
    sub_22D04C890();
    uint64_t v2 = swift_allocError();
    *(void *)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    *(unsigned char *)(v4 + 16) = 2;
  }
  return v2;
}

void sub_22D23F464(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a3;
  v7[3] = sub_22D034BAC;
  v7[4] = v6;
  id v8 = objc_allocWithZone(MEMORY[0x263F45120]);
  v12[4] = sub_22D23F6B0;
  v12[5] = v7;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  v12[2] = sub_22D1E3A00;
  v12[3] = &block_descriptor_18;
  uint64_t v9 = _Block_copy(v12);
  swift_retain();
  id v10 = a3;
  id v11 = objc_msgSend(v8, sel_initWithUpdateHandler_, v9);
  _Block_release(v9);
  swift_release();
  objc_msgSend(v10, sel_executeQuery_, v11);
}

uint64_t sub_22D23F5AC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D23F5E4(uint64_t a1, void *a2, void *a3, id a4, void (*a5)(void *, void))
{
  objc_msgSend(a4, sel_stopQuery_, a1);
  id v8 = a2;
  id v9 = a3;
  id v10 = (void *)sub_22D23F3F0((uint64_t)a2, a3);
  a5(v10, v11 & 1);
  sub_22D1E3AB8(v10);
}

uint64_t sub_22D23F670()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22D23F6B0(uint64_t a1, void *a2, void *a3)
{
  sub_22D23F5E4(a1, a2, a3, *(id *)(v3 + 16), *(void (**)(void *, void))(v3 + 24));
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

unint64_t sub_22D23F6D4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D248E38(0, &qword_268542F60, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingCycleTrackingQuery, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (char *)v35 - v8;
  uint64_t v46 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  uint64_t v9 = *(void *)(v46 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v46);
  uint64_t v45 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v38 = (uint64_t)v35 - v12;
  uint64_t v13 = sub_22D2BBC90();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v51 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D248E38(0, &qword_26AEC22D8, MEMORY[0x263F07508], v6);
  MEMORY[0x270FA5388](v16 - 8);
  unint64_t v18 = (char *)v35 - v17;
  uint64_t v19 = *(void *)(a3 + 16);
  if (v19)
  {
    uint64_t v54 = v3;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v21 = v14 + 16;
    uint64_t v22 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v52 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = *(void *)(v21 + 56);
    uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 32);
    uint64_t v48 = v20;
    uint64_t v42 = v23;
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v21 + 16);
    uint64_t v49 = v21;
    uint64_t v44 = (void (**)(char *, uint64_t))(v21 - 8);
    v35[1] = a3;
    uint64_t v36 = v9;
    uint64_t v41 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    unint64_t v53 = MEMORY[0x263F8EE78];
    uint64_t v37 = a1;
    uint64_t v24 = (uint64_t)v39;
    while (1)
    {
      v48(v18, v22, v13);
      uint64_t v40 = *v52;
      v40(v18, 0, 1, v13);
      if ((*v47)(v18, 1, v13) == 1) {
        break;
      }
      uint64_t v25 = a1;
      uint64_t v26 = v51;
      (*v43)(v51, v18, v13);
      uint64_t v27 = v54;
      v25(v26);
      if (v27)
      {
        (*v44)(v26, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v53;
      }
      (*v44)(v26, v13);
      int v28 = (*v41)(v24, 1, v46);
      uint64_t v54 = 0;
      if (v28 == 1)
      {
        sub_22D24AA40(v24, &qword_268542F60, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingCycleTrackingQuery);
        a1 = v25;
      }
      else
      {
        uint64_t v29 = v38;
        sub_22D24AAB0(v24, v38, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
        sub_22D24AAB0(v29, v45, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v53 = sub_22D281204(0, *(void *)(v53 + 16) + 1, 1, v53);
        }
        unint64_t v31 = *(void *)(v53 + 16);
        unint64_t v30 = *(void *)(v53 + 24);
        if (v31 >= v30 >> 1) {
          unint64_t v53 = sub_22D281204(v30 > 1, v31 + 1, 1, v53);
        }
        unint64_t v32 = v53;
        *(void *)(v53 + 16) = v31 + 1;
        sub_22D24AAB0(v45, v32+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v31, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
        a1 = v37;
        uint64_t v24 = (uint64_t)v39;
      }
      v22 += v42;
      if (!--v19)
      {
        v40(v18, 1, 1, v13);
        break;
      }
    }
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    swift_bridgeObjectRetain();
    unint64_t v53 = MEMORY[0x263F8EE78];
    v33(v18, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  return v53;
}

unint64_t sub_22D23FC5C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  sub_22D248E38(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v25 - v7;
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v33 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v30 = (char *)v25 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v15 = *(void *)(type metadata accessor for PBClinicalRecord(0) - 8);
  uint64_t v16 = v10;
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  unint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v27 = v16;
  unint64_t v32 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v31 = *(void *)(v15 + 72);
  v25[1] = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v28 = v9;
  uint64_t v29 = a1;
  uint64_t v26 = v18;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v8, 1, v9) == 1)
    {
      sub_22D24AA40((uint64_t)v8, &qword_26AEC0F48, MEMORY[0x263F07490]);
    }
    else
    {
      uint64_t v20 = *v32;
      uint64_t v21 = v30;
      (*v32)(v30, v8, v9);
      v20(v33, v21, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_22D2812B0(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v23 = *(void *)(v19 + 16);
      unint64_t v22 = *(void *)(v19 + 24);
      if (v23 >= v22 >> 1) {
        unint64_t v19 = sub_22D2812B0(v22 > 1, v23 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v23 + 1;
      uint64_t v9 = v28;
      v20((char *)(v19+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v23), v33, v28);
      a1 = v29;
      unint64_t v18 = v26;
    }
    v17 += v31;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_22D23FFD4(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_22D23FFEC(a1, a2, a3);
}

unint64_t sub_22D23FFEC(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v28 = a1;
  sub_22D248E38(0, &qword_268542F98, type metadata accessor for PBTimeSeries.Value, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v27 = type metadata accessor for PBTimeSeries.Value(0);
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_22D2BD470())
  {
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v25 = a3 & 0xC000000000000001;
    unint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t v13 = 4;
    unint64_t v21 = a3;
    while (1)
    {
      id v14 = v25 ? (id)MEMORY[0x230F7AF90](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v29 = v14;
      v28(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v24)(v7, 1, v27) == 1)
      {
        sub_22D24AA40((uint64_t)v7, &qword_268542F98, type metadata accessor for PBTimeSeries.Value);
      }
      else
      {
        uint64_t v17 = v22;
        sub_22D24AAB0((uint64_t)v7, v22, type metadata accessor for PBTimeSeries.Value);
        sub_22D24AAB0(v17, v26, type metadata accessor for PBTimeSeries.Value);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_22D28145C(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_22D28145C(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_22D24AAB0(v26, v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, type metadata accessor for PBTimeSeries.Value);
        a3 = v21;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_22D24037C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_22D2BBF00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void **)&v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v17 = a1;
  swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v12 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)v16, v10);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRelease();
  if (v13)
  {
    (*(void (**)(void **, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    if ((*(unsigned int (**)(void **, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x263F44A40])
    {
      (*(void (**)(void **, uint64_t))(v7 + 96))(v9, v6);
      id v14 = *v9;
      uint64_t v11 = sub_22D241148(*v9, a2, a3);
    }
    else
    {
      (*(void (**)(void **, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  return v11;
}

uint64_t sub_22D240544(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D248E38(0, &qword_26853DEE0, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v26[-v4];
  sub_22D248E38(0, &qword_26853DEE8, MEMORY[0x263F07920], v2);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v26[-v7];
  uint64_t v9 = sub_22D2BB8E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_22D2BB6F0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_22D2BBE00();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  uint64_t v18 = sub_22D2BBE60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 1, 1, v18);
  sub_22D2BB8C0();
  sub_22D2BB870();
  sub_22D08EB80((uint64_t)v12, 8u, 0, (uint64_t)v16);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v19 = swift_bridgeObjectRetain();
  size_t v20 = sub_22D248EB4(v19);
  swift_bridgeObjectRelease();
  uint64_t v27 = a1;
  uint64_t v28 = v16;
  unint64_t v21 = sub_22D23F6D4((void (*)(char *))sub_22D249394, (uint64_t)v26, v20);
  swift_release();
  sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_22D2BFF40;
  *(void *)(v22 + 56) = &type metadata for ClinicalSharingPatientMetadataQuery;
  *(void *)(v22 + 64) = &off_26E05E1C8;
  *(void *)(v22 + 32) = a1;
  swift_retain();
  uint64_t v23 = sub_22D248004(v21);
  swift_bridgeObjectRelease();
  uint64_t v29 = v22;
  sub_22D23E6BC(v23);
  uint64_t v24 = v29;
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
  return v24;
}

uint64_t sub_22D2409A4(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D248E38(0, &qword_26853DEE0, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v52 = (char *)&v48 - v4;
  sub_22D248E38(0, &qword_26853DEE8, MEMORY[0x263F07920], v2);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v48 - v6;
  uint64_t v8 = sub_22D2BB8E0();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22D2BB6F0();
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v55 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for ClinicalSharingMedicationDoseEventQuery();
  uint64_t v13 = MEMORY[0x270FA5388](v56);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v57 = (uint64_t)&v48 - v16;
  uint64_t v17 = sub_22D2BBF00();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  size_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a1 + 56);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F44A70], v17);
  uint64_t v59 = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v23 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D23A098, (uint64_t)v58, v21);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v23 + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v24)
  {
    unint64_t v25 = self;
    id v48 = v25;
    swift_retain();
    id v49 = objc_msgSend(v25, sel_medicationUserDomainConceptTypeIdentifier);
    uint64_t v26 = sub_22D2BBE00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
    uint64_t v27 = sub_22D2BBE60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v52, 1, 1, v27);
    swift_retain();
    sub_22D2BB8C0();
    sub_22D2BB830();
    uint64_t v28 = v53;
    sub_22D08EB80((uint64_t)v10, 8u, 0, v53);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v51);
    uint64_t v29 = self;
    id v30 = objc_msgSend(v29, sel_medicationDoseEventType);
    *(void *)uint64_t v15 = a1;
    *((void *)v15 + 1) = v30;
    uint64_t v31 = v55;
    uint64_t v32 = v56;
    uint64_t v33 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(&v15[*(int *)(v56 + 28)], v28, v55);
    uint64_t v34 = &v15[*(int *)(v32 + 32)];
    *(void *)uint64_t v34 = 2;
    v34[8] = 1;
    swift_retain();
    id v35 = v30;
    id v36 = objc_msgSend(v35, sel_code);
    swift_release();

    if (v36 == (id)144) {
      uint64_t v37 = 10;
    }
    else {
      uint64_t v37 = 300;
    }
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v31);
    *((void *)v15 + 2) = v37;
    uint64_t v38 = v57;
    sub_22D24AAB0((uint64_t)v15, v57, (uint64_t (*)(void))type metadata accessor for ClinicalSharingMedicationDoseEventQuery);
    swift_retain();
    id v39 = objc_msgSend(v48, sel_medicationUserDomainConceptTypeIdentifier);
    id v40 = objc_msgSend(v29, sel_medicationDoseEventType);
    swift_retain();
    id v41 = v40;
    id v42 = objc_msgSend(v41, sel_code);

    swift_release();
    if (v42 == (id)144) {
      uint64_t v43 = 10;
    }
    else {
      uint64_t v43 = 300;
    }
    sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_22D2C1A90;
    *(void *)(v22 + 56) = &type metadata for ClinicalSharingMedicationTrackingQuery;
    *(void *)(v22 + 64) = &off_26E065B28;
    id v44 = v49;
    *(void *)(v22 + 32) = a1;
    *(void *)(v22 + 40) = v44;
    *(void *)(v22 + 96) = v32;
    *(void *)(v22 + 104) = &off_26E067328;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v22 + 72));
    sub_22D24A958(v38, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ClinicalSharingMedicationDoseEventQuery);
    *(void *)(v22 + 136) = &type metadata for ClinicalSharingMedicationScheduleQuery;
    *(void *)(v22 + 144) = &off_26E05E2B8;
    uint64_t v46 = (void *)swift_allocObject();
    *(void *)(v22 + 112) = v46;
    v46[2] = a1;
    v46[3] = v41;
    v46[4] = v43;
    v46[5] = v39;
    *(void *)(v22 + 176) = &type metadata for ClinicalSharingActiveMedicationQuery;
    *(void *)(v22 + 184) = &off_26E0637C8;
    *(void *)(v22 + 152) = a1;
    swift_retain();
    sub_22D2493B0(v38, (uint64_t (*)(void))type metadata accessor for ClinicalSharingMedicationDoseEventQuery);
  }
  return v22;
}

uint64_t sub_22D241148(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v62 = a2;
  uint64_t v5 = (int *)type metadata accessor for ClinicalSharingElectrocardiogramQuery(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&boxed_opaque_existential_1 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D248E38(0, &qword_26853DEE0, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&boxed_opaque_existential_1 - v10;
  sub_22D248E38(0, &qword_26853DEE8, MEMORY[0x263F07920], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&boxed_opaque_existential_1 - v13;
  uint64_t v15 = sub_22D2BB8E0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&boxed_opaque_existential_1 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_22D2BB6F0();
  uint64_t v61 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v60 = (uint64_t)&boxed_opaque_existential_1 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = objc_msgSend(a1, sel_code);
  if (v21 == (id)80)
  {
    sub_22D030474(0, &qword_26853E470);
    uint64_t v34 = (void *)MEMORY[0x230F7AD20]((id)*MEMORY[0x263F09C28]);
    uint64_t v35 = v62;
    uint64_t v36 = sub_22D241A40(v34, v62, a3);

    uint64_t v37 = (void *)MEMORY[0x230F7AD20]((id)*MEMORY[0x263F09C20]);
    uint64_t v38 = sub_22D241A40(v37, v35, a3);

    uint64_t v63 = v36;
    sub_22D23E6BC(v38);
    return v63;
  }
  else if (v21 == (id)144)
  {
    sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_22D2BFF40;
    boxed_opaque_existential_1 = (uint64_t *)(v22 + 32);
    uint64_t v39 = sub_22D2BBE00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v14, 1, 1, v39);
    uint64_t v40 = sub_22D2BBE60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v11, 1, 1, v40);
    uint64_t v59 = v19;
    uint64_t v41 = v62;
    swift_retain();
    sub_22D2BB8C0();
    sub_22D2BB870();
    uint64_t v42 = v60;
    sub_22D08EB80((uint64_t)v18, 8u, 0, v60);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    *(void *)(v22 + 56) = v5;
    *(void *)(v22 + 64) = &off_26E064438;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(boxed_opaque_existential_1);
    uint64_t v43 = v5[8];
    sub_22D030474(0, &qword_268542F68);
    id v44 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_electrocardiogramType);
    *(uint64_t *)((char *)v7 + v43) = (uint64_t)v44;
    uint64_t v45 = v5[9];
    uint64_t v46 = self;
    id v47 = v44;
    *(uint64_t *)((char *)v7 + v45) = (uint64_t)objc_msgSend(v46, sel_voltUnitWithMetricPrefix_, 4);
    *uint64_t v7 = v41;
    uint64_t v48 = v61;
    uint64_t v49 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))((char *)v7 + v5[5], v42, v59);
    swift_retain();
    id v50 = objc_msgSend(v47, sel_code);
    swift_release();

    if (v50 == (id)144) {
      uint64_t v51 = 10;
    }
    else {
      uint64_t v51 = 300;
    }
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v42, v49);
    *(uint64_t *)((char *)v7 + v5[6]) = v51;
    uint64_t v52 = (int64x2_t *)((char *)v7 + v5[7]);
    *uint64_t v52 = (int64x2_t)xmmword_22D2D21D0;
    v52[1] = vdupq_n_s64(5uLL);
    sub_22D24AAB0((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, type metadata accessor for ClinicalSharingElectrocardiogramQuery);
  }
  else if (v21 == (id)100)
  {
    sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_22D2BFF40;
    uint64_t v23 = sub_22D2BBE00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v14, 1, 1, v23);
    uint64_t v24 = sub_22D2BBE60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 1, 1, v24);
    uint64_t v25 = v19;
    uint64_t v26 = v62;
    swift_retain();
    sub_22D2BB8C0();
    sub_22D2BB870();
    uint64_t v27 = v60;
    sub_22D08EB80((uint64_t)v18, 8u, 0, v60);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v28 = (int *)type metadata accessor for ClinicalSharingActivitySummaryQuery();
    *(void *)(v22 + 56) = v28;
    *(void *)(v22 + 64) = &off_26E0627C8;
    uint64_t v29 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v22 + 32));
    uint64_t *v29 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))((char *)v29 + v28[5], v27, v25);
    uint64_t v30 = v28[6];
    uint64_t v31 = self;
    *(uint64_t *)((char *)v29 + v30) = (uint64_t)objc_msgSend(v31, sel_countUnit);
    uint64_t v32 = v28[7];
    *(uint64_t *)((char *)v29 + v32) = (uint64_t)objc_msgSend(v31, sel_kilocalorieUnit);
    uint64_t v33 = v28[8];
    *(uint64_t *)((char *)v29 + v33) = (uint64_t)objc_msgSend(v31, sel_minuteUnit);
  }
  else
  {
    self;
    uint64_t v53 = swift_dynamicCastObjCClass();
    if (v53)
    {
      uint64_t v54 = (void *)v53;
      id v55 = a1;
      uint64_t v56 = sub_22D241A40(v54, v62, a3);

      return v56;
    }
    return MEMORY[0x263F8EE78];
  }
  return v22;
}

uint64_t sub_22D241A40(void *a1, uint64_t a2, uint64_t *a3)
{
  v449 = a3;
  uint64_t v5 = (int *)type metadata accessor for ClinicalSharingSampleQuery();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (void *)((char *)v434 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = (uint64_t *)sub_22D2BB6F0();
  v457 = (void *)*(v8 - 1);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v434 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D248E38(0, &qword_26853DEE0, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (void *)((char *)v434 - v13);
  sub_22D248E38(0, &qword_26853DEE8, MEMORY[0x263F07920], v11);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v434 - v16;
  uint64_t v456 = sub_22D2BB8E0();
  uint64_t v458 = *(void *)(v456 - 8);
  MEMORY[0x270FA5388](v456);
  id v452 = a1;
  v453 = (char *)v434 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = objc_msgSend(a1, sel_code);
  uint64_t v459 = MEMORY[0x263F8EE78];
  switch((unint64_t)v19)
  {
    case 0uLL:
    case 3uLL:
    case 0x10uLL:
    case 0x11uLL:
      v455 = v8;
      uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_22D2C20F0;
      v449 = (uint64_t *)sub_22D2BBE00();
      uint64_t v22 = *(v449 - 1);
      v446 = *(void (**)(char *, uint64_t, uint64_t, uint64_t *))(v22 + 56);
      v447 = v7;
      uint64_t v459 = v22 + 56;
      v446(v17, 1, 1, v449);
      v443 = (void *)sub_22D2BBE60();
      uint64_t v23 = *(v443 - 1);
      v442 = *(void (**)(uint64_t *, uint64_t, uint64_t, void *))(v23 + 56);
      *(void *)&long long v444 = v23 + 56;
      v454 = v14;
      v442(v14, 1, 1, v443);
      uint64_t v24 = (uint64_t)v453;
      sub_22D2BB8C0();
      v450 = v17;
      sub_22D2BB870();
      v451 = v10;
      sub_22D08EB80(v24, 0, 0, (uint64_t)v10);
      sub_22D248E38(0, &qword_268542F78, MEMORY[0x263F062D0], v20);
      v441 = v25;
      uint64_t v27 = v457;
      uint64_t v26 = v458;
      uint64_t v28 = v457[9];
      uint64_t v29 = *((unsigned __int8 *)v457 + 80);
      *(void *)&long long v448 = v5;
      uint64_t v30 = (v29 + 32) & ~v29;
      *(void *)&long long v440 = v30 + v28;
      *(void *)&long long v439 = v29 | 7;
      uint64_t v31 = swift_allocObject();
      long long v438 = xmmword_22D2BFF40;
      *(_OWORD *)(v31 + 16) = xmmword_22D2BFF40;
      *(void *)&long long v437 = v27[4];
      ((void (*)(uint64_t, char *, uint64_t *))v437)(v31 + v30, v10, v455);
      *(void *)(v21 + 56) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v21 + 64) = &off_26E064DA8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v21 + 32) = v32;
      *(void *)(v32 + 16) = a2;
      *(void *)(v32 + 24) = v31;
      uint64_t v33 = v452;
      *(void *)(v32 + 32) = v452;
      *(void *)(v32 + 40) = 3;
      *(_WORD *)(v32 + 48) = 257;
      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      uint64_t v458 = v26 + 8;
      v445 = v34;
      swift_retain();
      id v35 = v33;
      v34(v24, v456);
      v446(v450, 1, 1, v449);
      uint64_t v36 = v454;
      v442(v454, 1, 1, v443);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v37 = (uint64_t)v451;
      sub_22D08EB80(v24, 8u, 0, (uint64_t)v451);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = v438;
      ((void (*)(uint64_t, uint64_t, uint64_t *))v437)(v38 + v30, v37, v455);
      *(void *)(v21 + 96) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v21 + 104) = &off_26E064DA8;
      uint64_t v39 = swift_allocObject();
      *(void *)(v21 + 72) = v39;
      *(void *)(v39 + 16) = a2;
      *(void *)(v39 + 24) = v38;
      *(void *)(v39 + 32) = v35;
      *(void *)(v39 + 40) = 2;
      *(_WORD *)(v39 + 48) = 257;
      swift_retain();
      id v40 = v35;
      v445(v24, v456);
      v446(v450, 1, 1, v449);
      v442(v36, 1, 1, v443);
      sub_22D2BB8C0();
      sub_22D2BB870();
      swift_retain();
      sub_22D08EB80(v24, 8u, 0, v37);
      uint64_t v41 = (int *)v448;
      *(void *)(v21 + 136) = v448;
      *(void *)(v21 + 144) = &off_26E05D590;
      uint64_t v459 = v21;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v21 + 112));
      uint64_t v43 = (uint64_t)v447;
      uint64_t *v447 = a2;
      id v44 = v457;
      uint64_t v45 = v455;
      ((void (*)(uint64_t, uint64_t, uint64_t *))v457[2])(v43 + v41[5], v37, v455);
      *(void *)(v43 + v41[6]) = v40;
      *(unsigned char *)(v43 + v41[8]) = 0;
      swift_retain();
      id v46 = objc_msgSend(v40, sel_code);
      swift_release();
      if (v46 == (id)144) {
        uint64_t v47 = 10;
      }
      else {
        uint64_t v47 = 300;
      }
      ((void (*)(uint64_t, uint64_t *))v44[1])(v37, v45);
      *(void *)(v43 + v41[7]) = v47;
      uint64_t v48 = v43 + v41[9];
      *(void *)uint64_t v48 = 0;
      *(unsigned char *)(v48 + 8) = 1;
      sub_22D24AAB0(v43, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSampleQuery);
      v445(v24, v456);
      return v459;
    case 5uLL:
      int v170 = v457;
      unint64_t v171 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v172 = swift_allocObject();
      uint64_t v459 = v172;
      *(_OWORD *)(v172 + 16) = xmmword_22D2C20F0;
      *(void *)&long long v448 = sub_22D2BBE00();
      uint64_t v173 = *(void *)(v448 - 8);
      v447 = *(uint64_t **)(v173 + 56);
      v449 = (uint64_t *)(v173 + 56);
      ((void (*)(char *, uint64_t, uint64_t, void))v447)(v17, 1, 1, v448);
      uint64_t v174 = sub_22D2BBE60();
      v455 = v8;
      v445 = (void (*)(uint64_t, uint64_t))v174;
      uint64_t v175 = *(void *)(v174 - 8);
      *(void *)&long long v444 = *(void *)(v175 + 56);
      v446 = (void (*)(char *, uint64_t, uint64_t, uint64_t *))(v175 + 56);
      ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v444)(v14, 1, 1, v174);
      uint64_t v176 = (uint64_t)v453;
      sub_22D2BB8C0();
      v450 = v17;
      sub_22D2BB870();
      uint64_t v177 = a2;
      sub_22D08EB80(v176, 9u, 0, (uint64_t)v10);
      sub_22D248E38(0, &qword_268542F78, MEMORY[0x263F062D0], v171);
      *(void *)&long long v438 = v178;
      uint64_t v179 = v170;
      uint64_t v180 = *((unsigned __int8 *)v170 + 80);
      v443 = (void *)(((v180 + 32) & ~v180) + v170[9]);
      uint64_t v181 = (v180 + 32) & ~v180;
      v441 = (char *)v181;
      v442 = (void (*)(uint64_t *, uint64_t, uint64_t, void *))(v180 | 7);
      uint64_t v182 = swift_allocObject();
      long long v440 = xmmword_22D2BFF40;
      *(_OWORD *)(v182 + 16) = xmmword_22D2BFF40;
      v454 = v14;
      uint64_t v183 = v458;
      uint64_t v184 = v177;
      *(void *)&long long v437 = v179[4];
      v457 = v179 + 4;
      ((void (*)(uint64_t, char *, uint64_t *))v437)(v182 + v181, v10, v455);
      *(void *)(v172 + 56) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v172 + 64) = &off_26E064DA8;
      uint64_t v185 = swift_allocObject();
      *(void *)(v172 + 32) = v185;
      *(void *)(v185 + 16) = v177;
      *(void *)(v185 + 24) = v182;
      uint64_t v186 = v452;
      *(void *)(v185 + 32) = v452;
      *(void *)(v185 + 40) = 4;
      *(_WORD *)(v185 + 48) = 257;
      uint64_t v187 = *(void (**)(uint64_t, uint64_t))(v183 + 8);
      uint64_t v458 = v183 + 8;
      *(void *)&long long v439 = v187;
      swift_retain();
      id v188 = v186;
      v187(v176, v456);
      v189 = v450;
      ((void (*)(char *, uint64_t, uint64_t, void))v447)(v450, 1, 1, v448);
      v190 = v454;
      ((void (*)(uint64_t *, uint64_t, uint64_t, void (*)(uint64_t, uint64_t)))v444)(v454, 1, 1, v445);
      sub_22D2BB8C0();
      sub_22D2BB870();
      v451 = v10;
      sub_22D08EB80(v176, 0, 0, (uint64_t)v10);
      uint64_t v191 = swift_allocObject();
      *(_OWORD *)(v191 + 16) = v440;
      v192 = (void (*)(char *, uint64_t, uint64_t *))v437;
      ((void (*)(char *, char *, uint64_t *))v437)(&v441[v191], v10, v455);
      *(void *)(v172 + 96) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v172 + 104) = &off_26E064DA8;
      uint64_t v193 = swift_allocObject();
      *(void *)(v172 + 72) = v193;
      *(void *)(v193 + 16) = v184;
      *(void *)(v193 + 24) = v191;
      *(void *)(v193 + 32) = v188;
      *(void *)(v193 + 40) = 3;
      *(_WORD *)(v193 + 48) = 257;
      swift_retain();
      id v194 = v188;
      uint64_t v195 = v456;
      ((void (*)(uint64_t, uint64_t))v439)(v176, v456);
      ((void (*)(char *, uint64_t, uint64_t, void))v447)(v189, 1, 1, v448);
      ((void (*)(uint64_t *, uint64_t, uint64_t, void (*)(uint64_t, uint64_t)))v444)(v190, 1, 1, v445);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v196 = (uint64_t)v451;
      sub_22D08EB80(v176, 8u, 0, (uint64_t)v451);
      uint64_t v197 = swift_allocObject();
      *(_OWORD *)(v197 + 16) = v440;
      v192(&v441[v197], v196, v455);
      *(void *)(v172 + 136) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v172 + 144) = &off_26E064DA8;
      uint64_t v198 = swift_allocObject();
      *(void *)(v172 + 112) = v198;
      *(void *)(v198 + 16) = v184;
      *(void *)(v198 + 24) = v197;
      *(void *)(v198 + 32) = v194;
      *(void *)(v198 + 40) = 2;
      *(_WORD *)(v198 + 48) = 257;
      swift_retain();
      id v199 = v194;
      uint64_t v200 = v176;
      uint64_t v201 = v195;
      v202 = &v463;
      goto LABEL_31;
    case 7uLL:
    case 0xAuLL:
    case 0x4BuLL:
      uint64_t v88 = v457;
      uint64_t v89 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v459 = swift_allocObject();
      *(_OWORD *)(v459 + 16) = xmmword_22D2C0F10;
      *(void *)&long long v448 = sub_22D2BBE00();
      uint64_t v90 = *(void *)(v448 - 8);
      v447 = *(uint64_t **)(v90 + 56);
      v449 = (uint64_t *)(v90 + 56);
      ((void (*)(char *, uint64_t, uint64_t, void))v447)(v17, 1, 1, v448);
      uint64_t v91 = sub_22D2BBE60();
      v455 = v8;
      v445 = (void (*)(uint64_t, uint64_t))v91;
      uint64_t v92 = *(void *)(v91 - 8);
      *(void *)&long long v444 = *(void *)(v92 + 56);
      v446 = (void (*)(char *, uint64_t, uint64_t, uint64_t *))(v92 + 56);
      ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v444)(v14, 1, 1, v91);
      uint64_t v93 = (uint64_t)v453;
      sub_22D2BB8C0();
      v454 = v14;
      uint64_t v94 = v458;
      uint64_t v95 = v17;
      sub_22D2BB870();
      v451 = v10;
      sub_22D08EB80(v93, 0, 0, (uint64_t)v10);
      sub_22D248E38(0, &qword_268542F78, MEMORY[0x263F062D0], v89);
      v443 = v96;
      uint64_t v97 = *((unsigned __int8 *)v88 + 80);
      uint64_t v98 = (v97 + 32) & ~v97;
      v442 = (void (*)(uint64_t *, uint64_t, uint64_t, void *))(v98 + v88[9]);
      v441 = (char *)(v97 | 7);
      uint64_t v99 = swift_allocObject();
      long long v440 = xmmword_22D2BFF40;
      *(_OWORD *)(v99 + 16) = xmmword_22D2BFF40;
      v457 = (void *)v88[4];
      ((void (*)(uint64_t, char *, uint64_t *))v457)(v99 + v98, v10, v8);
      uint64_t v100 = v459;
      *(void *)(v459 + 56) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v100 + 64) = &off_26E064DA8;
      uint64_t v101 = swift_allocObject();
      *(void *)(v100 + 32) = v101;
      *(void *)(v101 + 16) = a2;
      *(void *)(v101 + 24) = v99;
      uint64_t v102 = v452;
      *(void *)(v101 + 32) = v452;
      *(void *)(v101 + 40) = 3;
      *(_WORD *)(v101 + 48) = 257;
      uint64_t v103 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
      swift_retain();
      id v104 = v102;
      v103(v93, v456);
      ((void (*)(char *, uint64_t, uint64_t, void))v447)(v95, 1, 1, v448);
      ((void (*)(uint64_t *, uint64_t, uint64_t, void (*)(uint64_t, uint64_t)))v444)(v454, 1, 1, v445);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v105 = (uint64_t)v451;
      sub_22D08EB80(v93, 8u, 0, (uint64_t)v451);
      uint64_t v106 = swift_allocObject();
      *(_OWORD *)(v106 + 16) = v440;
      ((void (*)(uint64_t, uint64_t, uint64_t *))v457)(v106 + v98, v105, v455);
      uint64_t v107 = v459;
      *(void *)(v459 + 96) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v107 + 104) = &off_26E064DA8;
      uint64_t v108 = swift_allocObject();
      *(void *)(v107 + 72) = v108;
      *(void *)(v108 + 16) = a2;
      *(void *)(v108 + 24) = v106;
      *(void *)(v108 + 32) = v104;
      *(void *)(v108 + 40) = 2;
      *(_WORD *)(v108 + 48) = 257;
      swift_retain();
      id v109 = v104;
      v103(v93, v456);
      return v459;
    case 0xFuLL:
      v455 = v8;
      v203 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v459 = swift_allocObject();
      *(_OWORD *)(v459 + 16) = xmmword_22D2D0B80;
      v441 = (char *)sub_22D2BBE00();
      uint64_t v204 = *((void *)v441 - 1);
      *(void *)&long long v440 = *(void *)(v204 + 56);
      v446 = (void (*)(char *, uint64_t, uint64_t, uint64_t *))(v204 + 56);
      v205 = v457;
      *(void *)&long long v448 = v5;
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v17, 1, 1, v441);
      v443 = (void *)sub_22D2BBE60();
      uint64_t v206 = *(v443 - 1);
      v442 = *(void (**)(uint64_t *, uint64_t, uint64_t, void *))(v206 + 56);
      v445 = (void (*)(uint64_t, uint64_t))(v206 + 56);
      v442(v14, 1, 1, v443);
      uint64_t v207 = (uint64_t)v453;
      sub_22D2BB8C0();
      v450 = v17;
      sub_22D2BB870();
      sub_22D08EB80(v207, 9u, 0, (uint64_t)v10);
      sub_22D248E38(0, &qword_268542F78, MEMORY[0x263F062D0], v203);
      v434[2] = v208;
      uint64_t v209 = *((unsigned __int8 *)v205 + 80);
      v210 = v205;
      v434[3] = ((v209 + 32) & ~v209) + v205[9];
      uint64_t v211 = (v209 + 32) & ~v209;
      v435 = (char *)v211;
      v434[1] = v209 | 7;
      uint64_t v212 = swift_allocObject();
      long long v439 = xmmword_22D2BFF40;
      *(_OWORD *)(v212 + 16) = xmmword_22D2BFF40;
      uint64_t v213 = v458;
      v451 = v10;
      *(void *)&long long v437 = v210[4];
      *(void *)&long long v438 = v210 + 4;
      ((void (*)(uint64_t, char *, uint64_t *))v437)(v212 + v211, v10, v455);
      uint64_t v214 = v459;
      *(void *)(v459 + 56) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v214 + 64) = &off_26E064DA8;
      uint64_t v215 = v214;
      uint64_t v216 = swift_allocObject();
      *(void *)(v215 + 32) = v216;
      *(void *)(v216 + 16) = a2;
      *(void *)(v216 + 24) = v212;
      v217 = v452;
      *(void *)(v216 + 32) = v452;
      *(void *)(v216 + 40) = 4;
      *(_WORD *)(v216 + 48) = 257;
      v218 = *(void (**)(uint64_t, uint64_t))(v213 + 8);
      uint64_t v458 = v213 + 8;
      *(void *)&long long v444 = v218;
      swift_retain();
      id v452 = v217;
      v447 = v7;
      v218(v207, v456);
      v219 = v441;
      v220 = (void (*)(char *, uint64_t, uint64_t, char *))v440;
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v450, 1, 1, v441);
      v454 = v14;
      v221 = v443;
      v222 = v442;
      v442(v14, 1, 1, v443);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v223 = (uint64_t)v451;
      sub_22D08EB80(v207, 0, 0, (uint64_t)v451);
      uint64_t v224 = swift_allocObject();
      *(_OWORD *)(v224 + 16) = v439;
      v225 = v455;
      ((void (*)(char *, uint64_t, uint64_t *))v437)(&v435[v224], v223, v455);
      uint64_t v226 = v459;
      *(void *)(v459 + 96) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v226 + 104) = &off_26E064DA8;
      uint64_t v227 = v226;
      uint64_t v228 = swift_allocObject();
      *(void *)(v227 + 72) = v228;
      uint64_t v436 = a2;
      *(void *)(v228 + 16) = a2;
      *(void *)(v228 + 24) = v224;
      v229 = v452;
      *(void *)(v228 + 32) = v452;
      *(void *)(v228 + 40) = 3;
      *(_WORD *)(v228 + 48) = 257;
      swift_retain();
      id v452 = v229;
      ((void (*)(uint64_t, uint64_t))v444)(v207, v456);
      v220(v450, 1, 1, v219);
      v222(v454, 1, 1, v221);
      sub_22D2BB8C0();
      sub_22D2BB830();
      uint64_t v230 = (uint64_t)v451;
      uint64_t v231 = v436;
      sub_22D08EB80(v207, 8u, 0, (uint64_t)v451);
      uint64_t v232 = swift_allocObject();
      *(_OWORD *)(v232 + 16) = v439;
      ((void (*)(char *, uint64_t, uint64_t *))v437)(&v435[v232], v230, v225);
      v233 = (void *)v459;
      *(void *)(v459 + 136) = &type metadata for ClinicalSharingStatisticsQuery;
      v233[18] = &off_26E064DA8;
      uint64_t v234 = swift_allocObject();
      v233[14] = v234;
      uint64_t v235 = v231;
      *(void *)(v234 + 16) = v231;
      *(void *)(v234 + 24) = v232;
      v236 = v452;
      *(void *)(v234 + 32) = v452;
      *(void *)(v234 + 40) = 1;
      *(_WORD *)(v234 + 48) = 257;
      uint64_t v237 = v235;
      swift_retain();
      id v238 = v236;
      uint64_t v239 = v456;
      ((void (*)(uint64_t, uint64_t))v444)(v207, v456);
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v450, 1, 1, v441);
      v442(v454, 1, 1, v443);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v240 = (uint64_t)v451;
      sub_22D08EB80(v207, 8u, 0, (uint64_t)v451);
      uint64_t v241 = swift_allocObject();
      *(_OWORD *)(v241 + 16) = v439;
      ((void (*)(char *, uint64_t, uint64_t *))v437)(&v435[v241], v240, v455);
      v233[22] = &type metadata for ClinicalSharingStatisticsQuery;
      v233[23] = &off_26E064DA8;
      uint64_t v242 = swift_allocObject();
      v233[19] = v242;
      *(void *)(v242 + 16) = v237;
      *(void *)(v242 + 24) = v241;
      *(void *)(v242 + 32) = v238;
      *(void *)(v242 + 40) = 2;
      *(_WORD *)(v242 + 48) = 1;
      uint64_t v243 = v237;
      swift_retain();
      id v452 = v238;
      v244 = (void (*)(uint64_t, uint64_t))v444;
      ((void (*)(uint64_t, uint64_t))v444)(v207, v239);
      v245 = v441;
      v246 = (void (*)(char *, uint64_t, uint64_t, char *))v440;
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v450, 1, 1, v441);
      v442(v454, 1, 1, v443);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v247 = (uint64_t)v451;
      sub_22D08EB80(v207, 8u, 1, (uint64_t)v451);
      uint64_t v248 = swift_allocObject();
      *(_OWORD *)(v248 + 16) = v439;
      uint64_t v249 = v247;
      v250 = v455;
      ((void (*)(char *, uint64_t, uint64_t *))v437)(&v435[v248], v249, v455);
      v233[27] = &type metadata for ClinicalSharingStatisticsQuery;
      v233[28] = &off_26E064DA8;
      uint64_t v251 = swift_allocObject();
      v233[24] = v251;
      *(void *)(v251 + 16) = v243;
      *(void *)(v251 + 24) = v248;
      v252 = v452;
      *(void *)(v251 + 32) = v452;
      *(void *)(v251 + 40) = 2;
      *(_WORD *)(v251 + 48) = 1;
      swift_retain();
      id v452 = v252;
      v244(v207, v456);
      v253 = v450;
      v246(v450, 1, 1, v245);
      v442(v454, 1, 1, v443);
      v254 = v253;
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v255 = (uint64_t)v451;
      sub_22D08EB80(v207, 8u, 2, (uint64_t)v451);
      uint64_t v256 = swift_allocObject();
      *(_OWORD *)(v256 + 16) = v439;
      ((void (*)(char *, uint64_t, uint64_t *))v437)(&v435[v256], v255, v250);
      v233[32] = &type metadata for ClinicalSharingStatisticsQuery;
      v233[33] = &off_26E064DA8;
      uint64_t v257 = swift_allocObject();
      v233[29] = v257;
      *(void *)(v257 + 16) = v243;
      *(void *)(v257 + 24) = v256;
      v258 = v452;
      *(void *)(v257 + 32) = v452;
      *(void *)(v257 + 40) = 2;
      *(_WORD *)(v257 + 48) = 1;
      swift_retain();
      id v452 = v258;
      uint64_t v259 = v456;
      v260 = (void (*)(uint64_t, uint64_t))v444;
      ((void (*)(uint64_t, uint64_t))v444)(v207, v456);
      *(void *)&long long v439 = v233 + 34;
      v261 = v254;
      v262 = v254;
      v263 = v441;
      v246(v262, 1, 1, v441);
      v264 = v442;
      v442(v454, 1, 1, v443);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v460 = 3;
      char v461 = 1;
      sub_22D24794C(v207, &v460, 0, v452, v436, (uint64_t *)v439);
      v260(v207, v259);
      v265 = (uint64_t *)(v459 + 312);
      v246(v261, 1, 1, v263);
      v266 = v443;
      v264(v454, 1, 1, v443);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v460 = 4;
      char v461 = 1;
      v267 = v265;
      v268 = v452;
      uint64_t v269 = v436;
      sub_22D24794C(v207, &v460, 0, v452, v436, v267);
      ((void (*)(uint64_t, uint64_t))v444)(v207, v456);
      *(void *)&long long v439 = v459 + 352;
      v270 = v450;
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v450, 1, 1, v441);
      v264(v454, 1, 1, v266);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v460 = 2;
      char v461 = 1;
      sub_22D24794C(v207, &v460, 0, v268, v269, (uint64_t *)v439);
      uint64_t v271 = v456;
      ((void (*)(uint64_t, uint64_t))v444)(v207, v456);
      uint64_t v272 = v459;
      *(void *)&long long v439 = v459 + 392;
      v273 = v441;
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v270, 1, 1, v441);
      v274 = v443;
      v442(v454, 1, 1, v443);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v460 = 2;
      char v461 = 1;
      sub_22D24794C(v207, &v460, 1, v452, v436, (uint64_t *)v439);
      uint64_t v275 = v271;
      v276 = (void (*)(uint64_t, uint64_t))v444;
      ((void (*)(uint64_t, uint64_t))v444)(v207, v275);
      *(void *)&long long v439 = v272 + 432;
      v277 = (void (*)(char *, uint64_t, uint64_t, char *))v440;
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v270, 1, 1, v273);
      v278 = v454;
      v279 = v442;
      v442(v454, 1, 1, v274);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v460 = 2;
      char v461 = 1;
      uint64_t v280 = v436;
      sub_22D24794C(v207, &v460, 2, v452, v436, (uint64_t *)v439);
      v276(v207, v456);
      uint64_t v281 = v459;
      v449 = (uint64_t *)(v459 + 472);
      v277(v270, 1, 1, v441);
      v279(v278, 1, 1, v443);
      sub_22D2BB8C0();
      sub_22D2BB830();
      swift_retain();
      uint64_t v282 = (uint64_t)v451;
      uint64_t v283 = v280;
      sub_22D08EB80(v207, 8u, 0, (uint64_t)v451);
      uint64_t v284 = v448;
      *(void *)(v281 + 496) = v448;
      *(void *)(v281 + 504) = &off_26E05D590;
      v285 = __swift_allocate_boxed_opaque_existential_1(v449);
      v286 = v447;
      uint64_t *v447 = v283;
      v287 = v457;
      uint64_t v288 = v282;
      v289 = v455;
      ((void (*)(char *, uint64_t, uint64_t *))v457[2])((char *)v286 + *(int *)(v284 + 20), v282, v455);
      uint64_t v290 = v284;
      uint64_t v291 = *(int *)(v284 + 24);
      v292 = v452;
      *(uint64_t *)((char *)v286 + v291) = (uint64_t)v452;
      uint64_t v293 = v290;
      *((unsigned char *)v286 + *(int *)(v290 + 32)) = 1;
      uint64_t v294 = (uint64_t)v286;
      swift_retain();
      id v295 = objc_msgSend(v292, sel_code);
      swift_release();
      if (v295 == (id)144) {
        uint64_t v296 = 10;
      }
      else {
        uint64_t v296 = 300;
      }
      ((void (*)(uint64_t, uint64_t *))v287[1])(v288, v289);
      *(void *)(v294 + *(int *)(v293 + 28)) = v296;
      uint64_t v297 = v294 + *(int *)(v293 + 36);
      *(void *)uint64_t v297 = 40;
      *(unsigned char *)(v297 + 8) = 0;
      sub_22D24AAB0(v294, (uint64_t)v285, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSampleQuery);
      ((void (*)(uint64_t, uint64_t))v444)(v207, v456);
      return v459;
    case 0x39uLL:
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v298 = swift_allocObject();
      *(_OWORD *)(v298 + 16) = xmmword_22D2BFF40;
      v299 = v8;
      v449 = (uint64_t *)(v298 + 32);
      uint64_t v300 = sub_22D2BBE00();
      uint64_t v301 = (uint64_t)v453;
      v302 = v5;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v300 - 8) + 56))(v17, 1, 1, v300);
      uint64_t v303 = sub_22D2BBE60();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v303 - 8) + 56))(v14, 1, 1, v303);
      sub_22D2BB8C0();
      sub_22D2BB870();
      swift_retain();
      sub_22D08EB80(v301, 8u, 0, (uint64_t)v10);
      *(void *)(v298 + 56) = v5;
      *(void *)(v298 + 64) = &off_26E05D590;
      uint64_t v459 = v298;
      v454 = __swift_allocate_boxed_opaque_existential_1(v449);
      *uint64_t v7 = a2;
      v304 = v457;
      v305 = v299;
      ((void (*)(char *, char *, uint64_t *))v457[2])((char *)v7 + v5[5], v10, v299);
      v306 = v452;
      *(uint64_t *)((char *)v7 + v302[6]) = (uint64_t)v452;
      *((unsigned char *)v7 + v302[8]) = 0;
      swift_retain();
      id v307 = objc_msgSend(v306, sel_code);
      swift_release();
      if (v307 == (id)144) {
        uint64_t v308 = 10;
      }
      else {
        uint64_t v308 = 300;
      }
      ((void (*)(char *, uint64_t *))v304[1])(v10, v305);
      *(uint64_t *)((char *)v7 + v302[7]) = v308;
      v309 = (char *)v7 + v302[9];
      *(void *)v309 = 0;
      v309[8] = 1;
      sub_22D24AAB0((uint64_t)v7, (uint64_t)v454, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSampleQuery);
      (*(void (**)(uint64_t, uint64_t))(v458 + 8))(v301, v456);
      return v459;
    case 0x3FuLL:
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v459 = swift_allocObject();
      *(_OWORD *)(v459 + 16) = xmmword_22D2BFF30;
      swift_retain();
      v310 = (void *)sub_22D2BBBC0();
      v311 = (void *)sub_22D2BBD30();
      v312 = (char *)objc_msgSend(v310, sel_hk_morningIndexWithCalendar_, v311);

      v313 = v312 - 28;
      if (__OFSUB__(v312, 28))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        JUMPOUT(0x22D247560);
      }

      sub_22D030474(0, (unint64_t *)&qword_26853EBA0);
      id v314 = (id)*MEMORY[0x263F09410];
      uint64_t v315 = MEMORY[0x230F7ACF0]();
      v316 = (uint64_t *)v459;
      *(void *)(v459 + 56) = &type metadata for ClinicalSharingSleepDaySummaryQuery;
      v316[8] = (uint64_t)&off_26E0667B8;
      v317 = (void *)swift_allocObject();
      v316[4] = (uint64_t)v317;
      v317[2] = a2;
      v317[3] = v313;
      v317[4] = 28;
      v317[5] = v315;
      uint64_t v318 = type metadata accessor for ClinicalSharingSleepStatisticsQuery(0);
      v316[12] = v318;
      v316[13] = (uint64_t)&off_26E05F888;
      v319 = __swift_allocate_boxed_opaque_existential_1(v316 + 9);
      uint64_t v320 = swift_retain();
      sub_22D09CD08(v320, 364, 0, (uint64_t)v319);
      v316[17] = v318;
      v316[18] = (uint64_t)&off_26E05F888;
      v321 = __swift_allocate_boxed_opaque_existential_1(v316 + 14);
      uint64_t v322 = swift_retain();
      sub_22D09CD08(v322, 156, 1, (uint64_t)v321);
      v316[22] = v318;
      v316[23] = (uint64_t)&off_26E05F888;
      v323 = __swift_allocate_boxed_opaque_existential_1(v316 + 19);
      uint64_t v324 = swift_retain();
      sub_22D09CD08(v324, 36, 2, (uint64_t)v323);
      swift_retain();
      uint64_t v325 = MEMORY[0x230F7ACF0](v314);
      v316[27] = (uint64_t)&type metadata for ClinicalSharingSleepSummaryQuery;
      v316[28] = (uint64_t)&off_26E0642C8;
      v316[24] = a2;
      v316[25] = v325;
      break;
    case 0x76uLL:
      v455 = v8;
      v326 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v327 = swift_allocObject();
      *(_OWORD *)(v327 + 16) = xmmword_22D2C79F0;
      v445 = (void (*)(uint64_t, uint64_t))sub_22D2BBE00();
      uint64_t v328 = *((void *)v445 - 1);
      v446 = *(void (**)(char *, uint64_t, uint64_t, uint64_t *))(v328 + 56);
      v447 = (uint64_t *)(v328 + 56);
      v446(v17, 1, 1, (uint64_t *)v445);
      v442 = (void (*)(uint64_t *, uint64_t, uint64_t, void *))sub_22D2BBE60();
      uint64_t v329 = *((void *)v442 - 1);
      v443 = *(void **)(v329 + 56);
      *(void *)&long long v448 = v329 + 56;
      v454 = v14;
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v443)(v14, 1, 1, v442);
      uint64_t v330 = (uint64_t)v453;
      sub_22D2BB8C0();
      v450 = v17;
      sub_22D2BB870();
      sub_22D08EB80(v330, 9u, 0, (uint64_t)v10);
      sub_22D248E38(0, &qword_268542F78, MEMORY[0x263F062D0], v326);
      v441 = v331;
      uint64_t v332 = v457[9];
      uint64_t v333 = *((unsigned __int8 *)v457 + 80);
      v334 = v10;
      v451 = v10;
      v335 = v457;
      *(void *)&long long v440 = ((v333 + 32) & ~v333) + v332;
      uint64_t v336 = (v333 + 32) & ~v333;
      *(void *)&long long v438 = v336;
      uint64_t v337 = v458;
      uint64_t v338 = a2;
      *(void *)&long long v439 = v333 | 7;
      uint64_t v339 = swift_allocObject();
      long long v437 = xmmword_22D2BFF40;
      *(_OWORD *)(v339 + 16) = xmmword_22D2BFF40;
      uint64_t v340 = v339 + v336;
      v341 = (char *)v335[4];
      v457 = v335 + 4;
      v435 = v341;
      v342 = v455;
      ((void (*)(uint64_t, char *, uint64_t *))v341)(v340, v334, v455);
      *(void *)(v327 + 56) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v327 + 64) = &off_26E064DA8;
      uint64_t v459 = v327;
      uint64_t v343 = swift_allocObject();
      *(void *)(v327 + 32) = v343;
      *(void *)(v343 + 16) = a2;
      *(void *)(v343 + 24) = v339;
      v344 = v452;
      *(void *)(v343 + 32) = v452;
      *(void *)(v343 + 40) = 4;
      *(_WORD *)(v343 + 48) = 257;
      v345 = *(void (**)(uint64_t, uint64_t))(v337 + 8);
      uint64_t v458 = v337 + 8;
      *(void *)&long long v444 = v345;
      swift_retain();
      id v452 = v344;
      v345(v330, v456);
      v346 = v445;
      v347 = v446;
      v446(v450, 1, 1, (uint64_t *)v445);
      v348 = (void (*)(void, void, void, void))v442;
      v349 = (void (*)(uint64_t *, uint64_t, uint64_t, void))v443;
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v443)(v454, 1, 1, v442);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v350 = (uint64_t)v451;
      sub_22D08EB80(v330, 0, 0, (uint64_t)v451);
      uint64_t v351 = swift_allocObject();
      *(_OWORD *)(v351 + 16) = v437;
      ((void (*)(void, uint64_t, uint64_t *))v435)(v351 + v438, v350, v342);
      uint64_t v352 = v459;
      *(void *)(v459 + 96) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v352 + 104) = &off_26E064DA8;
      uint64_t v353 = swift_allocObject();
      *(void *)(v352 + 72) = v353;
      uint64_t v354 = v338;
      *(void *)(v353 + 16) = v338;
      *(void *)(v353 + 24) = v351;
      v355 = v452;
      *(void *)(v353 + 32) = v452;
      *(void *)(v353 + 40) = 3;
      *(_WORD *)(v353 + 48) = 257;
      swift_retain();
      id v452 = v355;
      v356 = (void (*)(uint64_t, uint64_t))v444;
      ((void (*)(uint64_t, uint64_t))v444)(v330, v456);
      v357 = v450;
      v347(v450, 1, 1, (uint64_t *)v346);
      v349(v454, 1, 1, v348);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v358 = (uint64_t)v451;
      sub_22D08EB80(v330, 8u, 0, (uint64_t)v451);
      uint64_t v359 = swift_allocObject();
      *(_OWORD *)(v359 + 16) = v437;
      ((void (*)(void, uint64_t, uint64_t *))v435)(v359 + v438, v358, v455);
      uint64_t v360 = v459;
      *(void *)(v459 + 136) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v360 + 144) = &off_26E064DA8;
      uint64_t v361 = v360;
      uint64_t v362 = swift_allocObject();
      *(void *)(v361 + 112) = v362;
      uint64_t v436 = v354;
      *(void *)(v362 + 16) = v354;
      *(void *)(v362 + 24) = v359;
      v363 = v452;
      *(void *)(v362 + 32) = v452;
      *(void *)(v362 + 40) = 2;
      *(_WORD *)(v362 + 48) = 257;
      swift_retain();
      v457 = v363;
      v356(v330, v456);
      v455 = (uint64_t *)(v361 + 152);
      v364 = v445;
      v365 = v446;
      v446(v357, 1, 1, (uint64_t *)v445);
      v366 = (void (*)(void, void, void, void))v442;
      v367 = (void (*)(uint64_t *, uint64_t, uint64_t, void))v443;
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v443)(v454, 1, 1, v442);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v460 = 3;
      char v461 = 1;
      sub_22D24794C(v330, &v460, 0, v457, v436, v455);
      ((void (*)(uint64_t, uint64_t))v444)(v330, v456);
      v455 = (uint64_t *)(v459 + 192);
      v365(v357, 1, 1, (uint64_t *)v364);
      v368 = v454;
      v367(v454, 1, 1, v366);
      v369 = v357;
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v460 = 4;
      char v461 = 1;
      v370 = v457;
      uint64_t v371 = v436;
      sub_22D24794C(v330, &v460, 0, v457, v436, v455);
      v372 = (void (*)(uint64_t, uint64_t))v444;
      ((void (*)(uint64_t, uint64_t))v444)(v330, v456);
      v373 = (uint64_t *)(v459 + 232);
      v446(v369, 1, 1, (uint64_t *)v445);
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v443)(v368, 1, 1, v442);
      sub_22D2BB8C0();
      sub_22D2BB880();
      uint64_t v460 = 2;
      char v461 = 1;
      sub_22D24794C(v330, &v460, 0, v370, v371, v373);
      v372(v330, v456);
      return v459;
    case 0x7CuLL:
      v374 = v457;
      v375 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v459 = swift_allocObject();
      *(_OWORD *)(v459 + 16) = xmmword_22D2C20F0;
      *(void *)&long long v448 = sub_22D2BBE00();
      uint64_t v376 = *(void *)(v448 - 8);
      v447 = *(uint64_t **)(v376 + 56);
      v449 = (uint64_t *)(v376 + 56);
      ((void (*)(char *, uint64_t, uint64_t, void))v447)(v17, 1, 1, v448);
      uint64_t v377 = sub_22D2BBE60();
      v455 = v8;
      v445 = (void (*)(uint64_t, uint64_t))v377;
      uint64_t v378 = *(void *)(v377 - 8);
      *(void *)&long long v444 = *(void *)(v378 + 56);
      v446 = (void (*)(char *, uint64_t, uint64_t, uint64_t *))(v378 + 56);
      ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v444)(v14, 1, 1, v377);
      uint64_t v379 = (uint64_t)v453;
      sub_22D2BB8C0();
      v450 = v17;
      sub_22D2BB870();
      v451 = v10;
      uint64_t v380 = a2;
      sub_22D08EB80(v379, 0, 0, (uint64_t)v10);
      sub_22D248E38(0, &qword_268542F78, MEMORY[0x263F062D0], v375);
      v443 = v381;
      v382 = v374;
      uint64_t v383 = *((unsigned __int8 *)v374 + 80);
      v442 = (void (*)(uint64_t *, uint64_t, uint64_t, void *))(((v383 + 32) & ~v383) + v374[9]);
      uint64_t v384 = (v383 + 32) & ~v383;
      *(void *)&long long v440 = v384;
      v441 = (char *)(v383 | 7);
      uint64_t v385 = swift_allocObject();
      long long v439 = xmmword_22D2BFF40;
      *(_OWORD *)(v385 + 16) = xmmword_22D2BFF40;
      v386 = v14;
      uint64_t v387 = v458;
      *(void *)&long long v437 = v382[4];
      v457 = v382 + 4;
      v388 = v455;
      ((void (*)(uint64_t, char *, uint64_t *))v437)(v385 + v384, v10, v455);
      v389 = (void *)v459;
      *(void *)(v459 + 56) = &type metadata for ClinicalSharingStatisticsQuery;
      v389[8] = &off_26E064DA8;
      uint64_t v390 = swift_allocObject();
      v389[4] = v390;
      *(void *)(v390 + 16) = v380;
      *(void *)(v390 + 24) = v385;
      v391 = v452;
      *(void *)(v390 + 32) = v452;
      *(void *)(v390 + 40) = 3;
      *(_WORD *)(v390 + 48) = 257;
      v392 = *(void (**)(uint64_t, uint64_t))(v387 + 8);
      uint64_t v458 = v387 + 8;
      *(void *)&long long v438 = v392;
      swift_retain();
      id v393 = v391;
      v392(v379, v456);
      v394 = v450;
      ((void (*)(char *, uint64_t, uint64_t, void))v447)(v450, 1, 1, v448);
      ((void (*)(uint64_t *, uint64_t, uint64_t, void (*)(uint64_t, uint64_t)))v444)(v386, 1, 1, v445);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v395 = (uint64_t)v451;
      sub_22D08EB80(v379, 9u, 0, (uint64_t)v451);
      uint64_t v396 = swift_allocObject();
      *(_OWORD *)(v396 + 16) = v439;
      v397 = v388;
      v398 = (void (*)(void, uint64_t, uint64_t *))v437;
      ((void (*)(void, uint64_t, uint64_t *))v437)(v396 + v440, v395, v397);
      v389[12] = &type metadata for ClinicalSharingStatisticsQuery;
      v389[13] = &off_26E064DA8;
      uint64_t v399 = swift_allocObject();
      v389[9] = v399;
      *(void *)(v399 + 16) = v380;
      *(void *)(v399 + 24) = v396;
      *(void *)(v399 + 32) = v393;
      *(void *)(v399 + 40) = 4;
      *(_WORD *)(v399 + 48) = 257;
      swift_retain();
      id v400 = v393;
      uint64_t v401 = v456;
      ((void (*)(uint64_t, uint64_t))v438)(v379, v456);
      ((void (*)(char *, uint64_t, uint64_t, void))v447)(v394, 1, 1, v448);
      ((void (*)(uint64_t *, uint64_t, uint64_t, void (*)(uint64_t, uint64_t)))v444)(v386, 1, 1, v445);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v402 = (uint64_t)v451;
      sub_22D08EB80(v379, 8u, 0, (uint64_t)v451);
      uint64_t v403 = swift_allocObject();
      *(_OWORD *)(v403 + 16) = v439;
      v398(v403 + v440, v402, v455);
      v389[17] = &type metadata for ClinicalSharingStatisticsQuery;
      v389[18] = &off_26E064DA8;
      uint64_t v404 = swift_allocObject();
      v389[14] = v404;
      *(void *)(v404 + 16) = v380;
      *(void *)(v404 + 24) = v403;
      *(void *)(v404 + 32) = v400;
      *(void *)(v404 + 40) = 2;
      *(_WORD *)(v404 + 48) = 257;
      swift_retain();
      id v405 = v400;
      uint64_t v200 = v379;
      uint64_t v201 = v401;
      v202 = &v462;
LABEL_31:
      ((void (*)(uint64_t, uint64_t))*(v202 - 32))(v200, v201);
      return v459;
    case 0x8CuLL:
    case 0x93uLL:
    case 0x9CuLL:
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v110 = swift_allocObject();
      uint64_t v459 = v110;
      *(_OWORD *)(v110 + 16) = xmmword_22D2BFF40;
      v455 = v8;
      uint64_t v111 = sub_22D2BBE00();
      uint64_t v112 = (uint64_t)v453;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v17, 1, 1, v111);
      uint64_t v113 = sub_22D2BBE60();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v14, 1, 1, v113);
      sub_22D2BB8C0();
      sub_22D2BB870();
      swift_retain();
      sub_22D08EB80(v112, 8u, 0, (uint64_t)v10);
      *(void *)(v110 + 56) = v5;
      *(void *)(v110 + 64) = &off_26E05D590;
      uint64_t v114 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v110 + 32));
      *uint64_t v7 = a2;
      unint64_t v115 = v457;
      unint64_t v116 = v455;
      ((void (*)(char *, char *, uint64_t *))v457[2])((char *)v7 + v5[5], v10, v455);
      uint64_t v117 = v452;
      *(uint64_t *)((char *)v7 + v5[6]) = (uint64_t)v452;
      *((unsigned char *)v7 + v5[8]) = 1;
      swift_retain();
      id v118 = objc_msgSend(v117, sel_code);
      swift_release();
      if (v118 == (id)144) {
        uint64_t v119 = 10;
      }
      else {
        uint64_t v119 = 300;
      }
      ((void (*)(char *, uint64_t *))v115[1])(v10, v116);
      *(uint64_t *)((char *)v7 + v5[7]) = v119;
      uint64_t v120 = (char *)v7 + v5[9];
      *(void *)uint64_t v120 = 0;
      v120[8] = 1;
      sub_22D24AAB0((uint64_t)v7, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSampleQuery);
      (*(void (**)(uint64_t, uint64_t))(v458 + 8))(v112, v456);
      return v459;
    case 0x97uLL:
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v459 = swift_allocObject();
      *(_OWORD *)(v459 + 16) = xmmword_22D2BFF40;
      sub_22D030474(0, &qword_268542F70);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      uint64_t v407 = *MEMORY[0x263F0A028];
      swift_retain();
      id v408 = objc_msgSend(ObjCClassFromMetadata, sel_vaccinationRecordTypeForIdentifier_, v407);
      if (!v408) {
        goto LABEL_47;
      }
      uint64_t v409 = (uint64_t)v408;
      v410 = (uint64_t *)v459;
      uint64_t v411 = type metadata accessor for ClinicalSharingMedicalRecordsQuery();
      v410[7] = v411;
      v410[8] = (uint64_t)&off_26E05EDC0;
      v412 = __swift_allocate_boxed_opaque_existential_1(v410 + 4);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v457[7])((char *)v412 + *(int *)(v411 + 28), 1, 1, v8);
      uint64_t *v412 = a2;
      v412[1] = v409;
      uint64_t v413 = 6;
      goto LABEL_37;
    case 0x98uLL:
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v459 = swift_allocObject();
      *(_OWORD *)(v459 + 16) = xmmword_22D2BFF40;
      sub_22D030474(0, &qword_268542F70);
      v414 = (void *)swift_getObjCClassFromMetadata();
      uint64_t v415 = *MEMORY[0x263F09518];
      swift_retain();
      id v416 = objc_msgSend(v414, sel_diagnosticTestResultTypeForIdentifier_, v415);
      if (!v416) {
        goto LABEL_48;
      }
      uint64_t v417 = (uint64_t)v416;
      v418 = (uint64_t *)v459;
      uint64_t v411 = type metadata accessor for ClinicalSharingMedicalRecordsQuery();
      v418[7] = v411;
      v418[8] = (uint64_t)&off_26E05EDC0;
      v412 = __swift_allocate_boxed_opaque_existential_1(v418 + 4);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v457[7])((char *)v412 + *(int *)(v411 + 28), 1, 1, v8);
      uint64_t *v412 = a2;
      v412[1] = v417;
      uint64_t v413 = 2;
LABEL_37:
      v412[2] = v413;
      *((unsigned char *)v412 + *(int *)(v411 + 32)) = 4;
      return v459;
    case 0x99uLL:
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v155 = swift_allocObject();
      *(_OWORD *)(v155 + 16) = xmmword_22D2C20F0;
      sub_22D030474(0, &qword_268542F70);
      uint64_t v156 = (void *)swift_getObjCClassFromMetadata();
      id v157 = objc_msgSend(v156, sel_medicationOrderTypeForIdentifier_, *MEMORY[0x263F099E8]);
      if (!v157) {
        goto LABEL_44;
      }
      uint64_t v158 = (uint64_t)v157;
      uint64_t v159 = type metadata accessor for ClinicalSharingMedicalRecordsQuery();
      *(void *)(v155 + 56) = v159;
      *(void *)(v155 + 64) = &off_26E05EDC0;
      uint64_t v160 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v155 + 32));
      uint64_t v161 = (void (*)(char *, uint64_t, uint64_t, uint64_t *))v457[7];
      v161((char *)v160 + *(int *)(v159 + 28), 1, 1, v8);
      *uint64_t v160 = a2;
      v160[1] = v158;
      v160[2] = 1;
      *((unsigned char *)v160 + *(int *)(v159 + 32)) = 4;
      uint64_t v162 = *MEMORY[0x263F099F0];
      swift_retain();
      id v163 = objc_msgSend(v156, sel_medicationRecordTypeForIdentifier_, v162);
      if (!v163) {
        goto LABEL_45;
      }
      uint64_t v164 = (uint64_t)v163;
      *(void *)(v155 + 96) = v159;
      *(void *)(v155 + 104) = &off_26E05EDC0;
      uint64_t v165 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v155 + 72));
      v161((char *)v165 + *(int *)(v159 + 28), 1, 1, v8);
      *uint64_t v165 = a2;
      v165[1] = v164;
      v165[2] = 1;
      *((unsigned char *)v165 + *(int *)(v159 + 32)) = 4;
      uint64_t v166 = *MEMORY[0x263F099D8];
      swift_retain();
      id v167 = objc_msgSend(v156, sel_medicationDispenseRecordTypeForIdentifier_, v166);
      if (!v167) {
        goto LABEL_46;
      }
      uint64_t v168 = (uint64_t)v167;
      *(void *)(v155 + 136) = v159;
      *(void *)(v155 + 144) = &off_26E05EDC0;
      v169 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v155 + 112));
      v161((char *)v169 + *(int *)(v159 + 28), 1, 1, v8);
      uint64_t *v169 = a2;
      v169[1] = v168;
      v169[2] = 1;
      *((unsigned char *)v169 + *(int *)(v159 + 32)) = 4;
      swift_retain();
      uint64_t v459 = v155;
      break;
    case 0x9BuLL:
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v419 = swift_allocObject();
      *(_OWORD *)(v419 + 16) = xmmword_22D2C1A90;
      sub_22D247BB8(0, a2, (uint64_t *)(v419 + 32));
      sub_22D247BB8(1, a2, (uint64_t *)(v419 + 72));
      sub_22D247BB8(2, a2, (uint64_t *)(v419 + 112));
      uint64_t v459 = v419;
      sub_22D247BB8(3, a2, (uint64_t *)(v419 + 152));
      return v459;
    case 0xB6uLL:
    case 0xBBuLL:
    case 0xBCuLL:
    case 0xC2uLL:
      v455 = v8;
      uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v459 = swift_allocObject();
      *(_OWORD *)(v459 + 16) = xmmword_22D2C1A90;
      *(void *)&long long v439 = sub_22D2BBE00();
      uint64_t v50 = *(void *)(v439 - 8);
      v443 = *(void **)(v50 + 56);
      *(void *)&long long v440 = v50 + 56;
      ((void (*)(char *, uint64_t, uint64_t, void))v443)(v17, 1, 1, v439);
      *(void *)&long long v438 = sub_22D2BBE60();
      uint64_t v51 = *(void *)(v438 - 8);
      v449 = *(uint64_t **)(v51 + 56);
      v442 = (void (*)(uint64_t *, uint64_t, uint64_t, void *))(v51 + 56);
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v449)(v14, 1, 1, v438);
      uint64_t v52 = (uint64_t)v453;
      sub_22D2BB8C0();
      uint64_t v53 = v17;
      sub_22D2BB870();
      v451 = v10;
      sub_22D08EB80(v52, 9u, 0, (uint64_t)v10);
      sub_22D248E38(0, &qword_268542F78, MEMORY[0x263F062D0], v49);
      uint64_t v54 = v457;
      uint64_t v55 = v458;
      uint64_t v56 = *((unsigned __int8 *)v457 + 80);
      v447 = (uint64_t *)(((v56 + 32) & ~v56) + v457[9]);
      *(void *)&long long v448 = v57;
      uint64_t v58 = (v56 + 32) & ~v56;
      v454 = v14;
      v445 = (void (*)(uint64_t, uint64_t))v58;
      v446 = (void (*)(char *, uint64_t, uint64_t, uint64_t *))(v56 | 7);
      uint64_t v59 = swift_allocObject();
      long long v444 = xmmword_22D2BFF40;
      *(_OWORD *)(v59 + 16) = xmmword_22D2BFF40;
      uint64_t v60 = v59 + v58;
      *(void *)&long long v437 = v54[4];
      v457 = v54 + 4;
      uint64_t v61 = v455;
      ((void (*)(uint64_t, char *, uint64_t *))v437)(v60, v10, v455);
      uint64_t v62 = (void *)v459;
      *(void *)(v459 + 56) = &type metadata for ClinicalSharingStatisticsQuery;
      v62[8] = &off_26E064DA8;
      uint64_t v63 = swift_allocObject();
      v62[4] = v63;
      *(void *)(v63 + 16) = a2;
      *(void *)(v63 + 24) = v59;
      uint64_t v64 = v452;
      *(void *)(v63 + 32) = v452;
      *(void *)(v63 + 40) = 4;
      *(_WORD *)(v63 + 48) = 257;
      v441 = *(char **)(v55 + 8);
      uint64_t v65 = (void (*)(uint64_t, uint64_t))v441;
      uint64_t v458 = v55 + 8;
      swift_retain();
      id v452 = v64;
      v65(v52, v456);
      v450 = v53;
      char v66 = v53;
      uint64_t v67 = v439;
      ((void (*)(char *, uint64_t, uint64_t, void))v443)(v66, 1, 1, v439);
      uint64_t v68 = v438;
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v449)(v454, 1, 1, v438);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v69 = (uint64_t)v451;
      sub_22D08EB80(v52, 0, 0, (uint64_t)v451);
      uint64_t v70 = swift_allocObject();
      *(_OWORD *)(v70 + 16) = v444;
      uint64_t v71 = v69;
      unint64_t v72 = (void (*)(char *, uint64_t, uint64_t *))v437;
      ((void (*)(char *, uint64_t, uint64_t *))v437)((char *)v445 + v70, v71, v61);
      v62[12] = &type metadata for ClinicalSharingStatisticsQuery;
      v62[13] = &off_26E064DA8;
      uint64_t v73 = swift_allocObject();
      v62[9] = v73;
      *(void *)(v73 + 16) = a2;
      *(void *)(v73 + 24) = v70;
      uint64_t v74 = v452;
      *(void *)(v73 + 32) = v452;
      *(void *)(v73 + 40) = 3;
      *(_WORD *)(v73 + 48) = 257;
      swift_retain();
      id v452 = v74;
      uint64_t v75 = v456;
      ((void (*)(uint64_t, uint64_t))v441)(v52, v456);
      uint64_t v76 = v450;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v443)(v450, 1, 1, v67);
      ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v449)(v454, 1, 1, v68);
      uint64_t v77 = v76;
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v78 = (uint64_t)v451;
      sub_22D08EB80(v52, 8u, 0, (uint64_t)v451);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = v444;
      v72((char *)v445 + v79, v78, v455);
      v62[17] = &type metadata for ClinicalSharingStatisticsQuery;
      v62[18] = &off_26E064DA8;
      uint64_t v80 = swift_allocObject();
      v62[14] = v80;
      *(void *)(v80 + 16) = a2;
      *(void *)(v80 + 24) = v79;
      uint64_t v81 = v452;
      *(void *)(v80 + 32) = v452;
      *(void *)(v80 + 40) = 2;
      *(_WORD *)(v80 + 48) = 257;
      swift_retain();
      id v82 = v81;
      uint64_t v83 = v75;
      uint64_t v84 = (void (*)(uint64_t, uint64_t))v441;
      ((void (*)(uint64_t, uint64_t))v441)(v52, v83);
      ((void (*)(char *, uint64_t, uint64_t, void))v443)(v77, 1, 1, v439);
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v449)(v454, 1, 1, v438);
      sub_22D2BB8C0();
      sub_22D2BB880();
      sub_22D08EB80(v52, 8u, 0, v78);
      uint64_t v85 = swift_allocObject();
      *(_OWORD *)(v85 + 16) = v444;
      ((void (*)(char *, uint64_t, uint64_t *))v437)((char *)v445 + v85, v78, v455);
      v62[22] = &type metadata for ClinicalSharingStatisticsQuery;
      v62[23] = &off_26E064DA8;
      uint64_t v86 = swift_allocObject();
      v62[19] = v86;
      *(void *)(v86 + 16) = a2;
      *(void *)(v86 + 24) = v85;
      *(void *)(v86 + 32) = v82;
      *(void *)(v86 + 40) = 1;
      *(_WORD *)(v86 + 48) = 257;
      swift_retain();
      id v87 = v82;
      v84(v52, v456);
      return v459;
    case 0xB7uLL:
    case 0xC3uLL:
    case 0xC4uLL:
      v455 = v8;
      uint64_t v121 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v122 = swift_allocObject();
      *(_OWORD *)(v122 + 16) = xmmword_22D2C1A90;
      v441 = (char *)sub_22D2BBE00();
      uint64_t v123 = *((void *)v441 - 1);
      *(void *)&long long v440 = *(void *)(v123 + 56);
      v447 = (uint64_t *)(v123 + 56);
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v17, 1, 1, v441);
      *(void *)&long long v439 = sub_22D2BBE60();
      uint64_t v124 = *(void *)(v439 - 8);
      v445 = *(void (**)(uint64_t, uint64_t))(v124 + 56);
      v446 = (void (*)(char *, uint64_t, uint64_t, uint64_t *))(v124 + 56);
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v445)(v14, 1, 1, v439);
      uint64_t v125 = (uint64_t)v453;
      sub_22D2BB8C0();
      v450 = v17;
      sub_22D2BB870();
      v451 = v10;
      sub_22D08EB80(v125, 9u, 0, (uint64_t)v10);
      sub_22D248E38(0, &qword_268542F78, MEMORY[0x263F062D0], v121);
      *(void *)&long long v438 = v126;
      uint64_t v128 = v457;
      uint64_t v127 = v458;
      uint64_t v129 = *((unsigned __int8 *)v457 + 80);
      *(void *)&long long v444 = ((v129 + 32) & ~v129) + v457[9];
      uint64_t v130 = (uint64_t *)((v129 + 32) & ~v129);
      v449 = v130;
      v454 = v14;
      uint64_t v459 = v129 | 7;
      uint64_t v131 = swift_allocObject();
      long long v448 = xmmword_22D2BFF40;
      *(_OWORD *)(v131 + 16) = xmmword_22D2BFF40;
      v443 = (void *)v128[4];
      v457 = v128 + 4;
      ((void (*)(char *, char *, uint64_t *))v443)((char *)v130 + v131, v10, v455);
      *(void *)(v122 + 56) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v122 + 64) = &off_26E064DA8;
      uint64_t v132 = swift_allocObject();
      *(void *)(v122 + 32) = v132;
      *(void *)(v132 + 16) = a2;
      *(void *)(v132 + 24) = v131;
      uint64_t v133 = v452;
      *(void *)(v132 + 32) = v452;
      *(void *)(v132 + 40) = 4;
      *(_WORD *)(v132 + 48) = 257;
      v442 = *(void (**)(uint64_t *, uint64_t, uint64_t, void *))(v127 + 8);
      uint64_t v134 = (void (*)(uint64_t, uint64_t))v442;
      uint64_t v458 = v127 + 8;
      swift_retain();
      id v452 = v133;
      v134(v125, v456);
      uint64_t v135 = v441;
      uint64_t v136 = (void (*)(char *, uint64_t, uint64_t, char *))v440;
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v450, 1, 1, v441);
      uint64_t v137 = v439;
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v445)(v454, 1, 1, v439);
      sub_22D2BB8C0();
      sub_22D2BB870();
      uint64_t v138 = (uint64_t)v451;
      sub_22D08EB80(v125, 0, 0, (uint64_t)v451);
      uint64_t v139 = swift_allocObject();
      *(_OWORD *)(v139 + 16) = v448;
      uint64_t v140 = v138;
      uint64_t v141 = v455;
      ((void (*)(char *, uint64_t, uint64_t *))v443)((char *)v449 + v139, v140, v455);
      *(void *)(v122 + 96) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v122 + 104) = &off_26E064DA8;
      uint64_t v142 = swift_allocObject();
      *(void *)(v122 + 72) = v142;
      *(void *)(v142 + 16) = a2;
      *(void *)(v142 + 24) = v139;
      uint64_t v143 = v452;
      *(void *)(v142 + 32) = v452;
      *(void *)(v142 + 40) = 3;
      *(_WORD *)(v142 + 48) = 257;
      swift_retain();
      id v452 = v143;
      ((void (*)(uint64_t, uint64_t))v442)(v125, v456);
      v136(v450, 1, 1, v135);
      ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v445)(v454, 1, 1, v137);
      sub_22D2BB8C0();
      sub_22D2BB880();
      uint64_t v144 = (uint64_t)v451;
      sub_22D08EB80(v125, 8u, 0, (uint64_t)v451);
      uint64_t v145 = swift_allocObject();
      *(_OWORD *)(v145 + 16) = v448;
      uint64_t v146 = v144;
      ((void (*)(char *, uint64_t, uint64_t *))v443)((char *)v449 + v145, v144, v141);
      *(void *)(v122 + 136) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v122 + 144) = &off_26E064DA8;
      uint64_t v147 = swift_allocObject();
      *(void *)(v122 + 112) = v147;
      *(void *)(v147 + 16) = a2;
      *(void *)(v147 + 24) = v145;
      uint64_t v148 = v452;
      *(void *)(v147 + 32) = v452;
      *(void *)(v147 + 40) = 2;
      *(_WORD *)(v147 + 48) = 257;
      swift_retain();
      id v149 = v148;
      uint64_t v150 = v456;
      v151 = (void (*)(uint64_t, uint64_t))v442;
      ((void (*)(uint64_t, uint64_t))v442)(v125, v456);
      ((void (*)(char *, uint64_t, uint64_t, char *))v440)(v450, 1, 1, v441);
      ((void (*)(uint64_t *, uint64_t, uint64_t, void))v445)(v454, 1, 1, v439);
      sub_22D2BB8C0();
      sub_22D2BB880();
      sub_22D08EB80(v125, 8u, 0, v146);
      uint64_t v152 = swift_allocObject();
      *(_OWORD *)(v152 + 16) = v448;
      ((void (*)(char *, uint64_t, uint64_t *))v443)((char *)v449 + v152, v146, v455);
      *(void *)(v122 + 176) = &type metadata for ClinicalSharingStatisticsQuery;
      *(void *)(v122 + 184) = &off_26E064DA8;
      uint64_t v153 = swift_allocObject();
      uint64_t v459 = v122;
      *(void *)(v122 + 152) = v153;
      *(void *)(v153 + 16) = a2;
      *(void *)(v153 + 24) = v152;
      *(void *)(v153 + 32) = v149;
      *(void *)(v153 + 40) = 1;
      *(_WORD *)(v153 + 48) = 257;
      swift_retain();
      id v154 = v149;
      v151(v125, v150);
      return v459;
    case 0xF9uLL:
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v420 = swift_allocObject();
      *(_OWORD *)(v420 + 16) = xmmword_22D2BFF40;
      uint64_t v421 = sub_22D2BBE00();
      uint64_t v422 = (uint64_t)v10;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v421 - 8) + 56))(v17, 1, 1, v421);
      uint64_t v423 = sub_22D2BBE60();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v423 - 8) + 56))(v14, 1, 1, v423);
      swift_retain();
      uint64_t v424 = (uint64_t)v453;
      sub_22D2BB8C0();
      sub_22D2BB870();
      sub_22D08EB80(v424, 8u, 0, v422);
      (*(void (**)(uint64_t, uint64_t))(v458 + 8))(v424, v456);
      uint64_t v425 = type metadata accessor for ClinicalSharingWalkingSteadinessClassificationQuery();
      *(void *)(v420 + 56) = v425;
      *(void *)(v420 + 64) = &off_26E05CE88;
      uint64_t v459 = v420;
      v426 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v420 + 32));
      uint64_t v427 = *(int *)(v425 + 24);
      sub_22D030474(0, &qword_26853E470);
      uint64_t v428 = MEMORY[0x230F7AD20]((id)*MEMORY[0x263F09BF0]);
      goto LABEL_41;
    case 0xFAuLL:
      sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
      uint64_t v429 = swift_allocObject();
      *(_OWORD *)(v429 + 16) = xmmword_22D2BFF40;
      uint64_t v430 = sub_22D2BBE00();
      uint64_t v422 = (uint64_t)v10;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v430 - 8) + 56))(v17, 1, 1, v430);
      uint64_t v431 = sub_22D2BBE60();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v431 - 8) + 56))(v14, 1, 1, v431);
      swift_retain();
      uint64_t v432 = (uint64_t)v453;
      sub_22D2BB8C0();
      sub_22D2BB870();
      sub_22D08EB80(v432, 8u, 0, v422);
      (*(void (**)(uint64_t, uint64_t))(v458 + 8))(v432, v456);
      uint64_t v425 = type metadata accessor for ClinicalSharingWalkingSteadinessEventQuery();
      *(void *)(v429 + 56) = v425;
      *(void *)(v429 + 64) = &off_26E061608;
      uint64_t v459 = v429;
      v426 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v429 + 32));
      uint64_t v427 = *(int *)(v425 + 24);
      sub_22D030474(0, (unint64_t *)&qword_26853EBA0);
      uint64_t v428 = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F09248]);
LABEL_41:
      *(uint64_t *)((char *)v426 + v427) = v428;
      uint64_t *v426 = a2;
      ((void (*)(char *, uint64_t, uint64_t *))v457[4])((char *)v426 + *(int *)(v425 + 20), v422, v8);
      return v459;
    default:
      return v459;
  }
  return v459;
}

uint64_t sub_22D24794C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11 = *a2;
  int v12 = *((unsigned __int8 *)a2 + 8);
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {
    sub_22D2BD310();
    id v23 = objc_msgSend(a4, sel_description);
    sub_22D2BCBD0();
    swift_bridgeObjectRelease();

    sub_22D2BCCB0();
LABEL_11:
    uint64_t result = sub_22D2BD460();
    __break(1u);
    return result;
  }
  uint64_t v14 = v13;
  id v15 = a4;
  uint64_t v16 = sub_22D273784();
  if (!v16)
  {
    sub_22D2BD310();
    id v24 = objc_msgSend(v15, sel_description);
    sub_22D2BCBD0();

    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D2BCCB0();
    goto LABEL_11;
  }
  uint64_t v17 = v16;
  if (v12) {
    unsigned int v18 = 0x8080900080808uLL >> (8 * v11);
  }
  else {
    unsigned int v18 = 8;
  }
  id v19 = (int *)type metadata accessor for ClinicalSharingHistogramQuery();
  a6[3] = (uint64_t)v19;
  a6[4] = (uint64_t)&off_26E060DD0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a6);
  sub_22D08EB80(a1, v18, a3, (uint64_t)boxed_opaque_existential_1 + v19[5]);
  uint64_t *boxed_opaque_existential_1 = a5;
  *(uint64_t *)((char *)boxed_opaque_existential_1 + v19[6]) = v14;
  uint64_t v21 = (char *)boxed_opaque_existential_1 + v19[7];
  *(void *)uint64_t v21 = v11;
  v21[8] = v12;
  *(uint64_t *)((char *)boxed_opaque_existential_1 + v19[8]) = v17;
  return swift_retain();
}

id sub_22D247BB8@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v29 = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D248E38(0, &qword_26853DEE0, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v28[-v7];
  sub_22D248E38(0, &qword_26853DEE8, MEMORY[0x263F07920], v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v28[-v10];
  uint64_t v12 = sub_22D2BB8E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = &v28[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22D248E38(0, &qword_26853D7A0, MEMORY[0x263F062D0], v5);
  MEMORY[0x270FA5388](v16 - 8);
  unsigned int v18 = &v28[-v17];
  sub_22D030474(0, &qword_268542F70);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v20 = *MEMORY[0x263F09518];
  swift_retain();
  id result = objc_msgSend(ObjCClassFromMetadata, sel_diagnosticTestResultTypeForIdentifier_, v20);
  if (result)
  {
    uint64_t v22 = (uint64_t)result;
    uint64_t v23 = sub_22D2BBE00();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 1, 1, v23);
    uint64_t v24 = sub_22D2BBE60();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
    sub_22D2BB8C0();
    sub_22D2BB870();
    sub_22D08EB80((uint64_t)v15, 8u, 0, (uint64_t)v18);
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v25 = sub_22D2BB6F0();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 0, 1, v25);
    uint64_t v26 = type metadata accessor for ClinicalSharingMedicalRecordsQuery();
    a3[3] = v26;
    a3[4] = (uint64_t)&off_26E05EDC0;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
    uint64_t *boxed_opaque_existential_1 = a2;
    boxed_opaque_existential_1[1] = v22;
    boxed_opaque_existential_1[2] = 3;
    id result = (id)sub_22D24A9C0((uint64_t)v18, (uint64_t)boxed_opaque_existential_1 + *(int *)(v26 + 28), &qword_26853D7A0, MEMORY[0x263F062D0]);
    *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v26 + 32)) = v29;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22D248004(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_22D24B834(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_22D24A958(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_22D24B834(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = &off_26E0646C0;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_22D24A958((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
      *(void *)(v7 + 16) = v11 + 1;
      sub_22CFF8C10(&v14, v7 + 40 * v11 + 32);
      sub_22D2493B0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_22D2481D4(uint64_t a1)
{
  uint64_t v16 = type metadata accessor for PBTypedData(0);
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D248E38(0, &qword_26853DED0, type metadata accessor for PBTypedData, MEMORY[0x263F8D8F0]);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - v7;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_22D24C164(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    do
    {
      sub_22D24A958(v11, (uint64_t)v4, type metadata accessor for PBTypedData);
      swift_dynamicCast();
      uint64_t v10 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22D24C164(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v17;
      }
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_22D24C164(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v17;
      }
      *(void *)(v10 + 16) = v14 + 1;
      sub_22D24A9C0((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, &qword_26853DED0, type metadata accessor for PBTypedData);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_22D24845C(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v3 = sub_22D2BBF00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(a2 + 56);
  sub_22D030474(0, &qword_26853E470);
  id v8 = (id)*MEMORY[0x263F09E38];
  *uint64_t v6 = MEMORY[0x230F7AD20]();
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F44A40], v3);
  uint64_t v26 = v6;
  swift_bridgeObjectRetain();
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v10 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D05C90C, (uint64_t)v25, v7);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v11)
  {
    sub_22D02D2A4(0, (unint64_t *)&qword_2685426B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22D2D21E0;
    *(void *)(inited + 32) = objc_msgSend(self, sel_electrocardiogramType);
    sub_22D030474(0, (unint64_t *)&qword_26853EBA0);
    *(void *)(inited + 40) = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F09318]);
    *(void *)(inited + 48) = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F09368]);
    *(void *)(inited + 56) = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F09338]);
    unint64_t v27 = inited;
    sub_22D2BCE20();
    unint64_t v13 = v27;
    uint64_t v14 = a2 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar;
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A2C0]), sel_init);
    uint64_t v16 = (void *)MEMORY[0x270FA5388](v15);
    *(&v23 - 2) = v24;
    *(&v23 - 1) = v14;
    uint64_t v17 = sub_22D22E76C(v16, sub_22D248D7C, (uint64_t)(&v23 - 4), v13);
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x230F7AD20](v8);
    sub_22D248E38(0, &qword_268542F58, (uint64_t (*)(uint64_t))sub_22D248D98, MEMORY[0x263F8E0F8]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_22D2BFF40;
    swift_retain();
    id v19 = objc_msgSend(v17, sel_mergedIntervals);
    sub_22D2BB6F0();
    uint64_t v20 = sub_22D2BCE00();

    *(void *)(v9 + 56) = &type metadata for ClinicalSharingStatisticsQuery;
    *(void *)(v9 + 64) = &off_26E064DA8;
    uint64_t v21 = swift_allocObject();
    *(void *)(v9 + 32) = v21;
    *(void *)(v21 + 16) = a2;
    *(void *)(v21 + 24) = v20;
    *(void *)(v21 + 32) = v18;
    *(void *)(v21 + 40) = 6;
    *(_WORD *)(v21 + 48) = 1;
  }
  return v9;
}

void sub_22D248830(id *a1, id *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v67 = a1;
  uint64_t v68 = a4;
  uint64_t v66 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v66 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v66);
  uint64_t v65 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)v49 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)v49 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)v49 - v14;
  uint64_t v15 = sub_22D2BB6F0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v61 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v70 = (char *)v49 - v19;
  sub_22D248E38(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)v49 - v21;
  if (*(void *)(a3 + 16))
  {
    id v23 = *a2;
    unint64_t v24 = sub_22D04EBF4((uint64_t)v23);
    if (v25)
    {
      uint64_t v26 = *(void *)(*(void *)(a3 + 56) + 8 * v24);
      swift_bridgeObjectRetain();

      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        v49[2] = v4;
        int v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
        uint64_t v28 = v16 + 16;
        uint64_t v60 = v29;
        uint64_t v30 = v26 + ((*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64));
        uint64_t v31 = *(void *)(v28 + 56);
        uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 32);
        uint64_t v53 = (void (**)(char *))(v28 + 16);
        uint64_t v54 = v31;
        uint64_t v51 = (void (**)(char *, uint64_t))(v28 - 8);
        uint64_t v52 = (void (**)(char *, uint64_t))(v7 + 8);
        v49[1] = v26;
        swift_bridgeObjectRetain();
        uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 40);
        v49[0] = (v28 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        uint64_t v56 = v22;
        uint64_t v57 = v28;
        uint64_t v55 = v15;
        while (1)
        {
          v60(v22, v30, v15);
          uint64_t v32 = *v59;
          (*v59)(v22, 0, 1, v15);
          if ((*v58)(v22, 1, v15) == 1) {
            break;
          }
          uint64_t v50 = v32;
          (*v53)(v70);
          id v69 = *v67;
          uint64_t v33 = v62;
          sub_22D2BB6C0();
          uint64_t v34 = v63;
          sub_22D2BBBB0();
          id v35 = v65;
          sub_22D2BBCE0();
          sub_22D2BBBA0();
          sub_22D2BBBB0();
          uint64_t v36 = *v52;
          uint64_t v37 = v35;
          uint64_t v38 = v66;
          (*v52)(v37, v66);
          uint64_t v39 = v27;
          id v40 = v61;
          sub_22D2BB6B0();
          uint64_t v41 = v34;
          uint64_t v15 = v55;
          v36(v41, v38);
          uint64_t v42 = v33;
          uint64_t v22 = v56;
          v36(v42, v38);
          uint64_t v43 = (void *)sub_22D2BB670();
          id v44 = *v51;
          uint64_t v45 = v40;
          uint64_t v46 = v39;
          (*v51)(v45, v15);
          id v47 = v69;
          objc_msgSend(v69, sel_insertInterval_, v43, v49[0]);

          v44(v70, v15);
          v30 += v54;
          uint64_t v27 = v46 - 1;
          if (!v27)
          {
            v50(v22, 1, 1, v15);
            break;
          }
        }
      }
      else
      {
        uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
        swift_bridgeObjectRetain();
        v48(v22, 1, 1, v15);
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
    }
  }
}

void sub_22D248D7C(id *a1, id *a2)
{
  sub_22D248830(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_22D248D98()
{
  unint64_t result = qword_26853DCF8;
  if (!qword_26853DCF8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26853DCF8);
  }
  return result;
}

uint64_t sub_22D248DF0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 50, 7);
}

void sub_22D248E38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_22D248E9C(unint64_t a1)
{
  return sub_22D24902C(a1, (void (*)(void *, uint64_t, unint64_t))sub_22D249410);
}

size_t sub_22D248EB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_22D248E38(0, &qword_26853DD48, MEMORY[0x263F07508], MEMORY[0x263F8E0F8]);
  uint64_t v3 = *(void *)(sub_22D2BBC90() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_22D249D9C(&v10, (char *)v6 + v5, v1, a1);
      sub_22D05C83C();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_22D249014(unint64_t a1)
{
  return sub_22D24902C(a1, (void (*)(void *, uint64_t, unint64_t))sub_22D249638);
}

void *sub_22D24902C(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      unint64_t v5 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_22D02D2A4(0, (unint64_t *)&qword_2685426B0);
      unint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      _OWORD v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

void *sub_22D249144(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_22D02D2A4(0, &qword_268542F88);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  int64_t v6 = sub_22D24A27C(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_22D05C83C();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_22D249238(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_22D248E38(0, &qword_268542FA8, (uint64_t (*)(uint64_t))type metadata accessor for HKCategoryValueSleepAnalysis, MEMORY[0x263F8E0F8]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  int64_t v6 = sub_22D24AB88(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_22D05C83C();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_22D24934C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D249394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D24F230(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_22D2493B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D249410(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_22D056DB0(0, (unint64_t *)&qword_26AEC1ED0, (unint64_t *)&qword_26AEC1EE8);
        sub_22D24A20C();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_22D249A90(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_22D030474(0, (unint64_t *)&qword_26AEC1EE8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D249638(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_22D056DB0(0, (unint64_t *)&qword_26853D770, (unint64_t *)&qword_26853D778);
        sub_22D24AB18();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_22D249AFC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_22D030474(0, (unint64_t *)&qword_26853D778);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D249860(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_22D248E38(0, &qword_26AEC1E98, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263F8D488]);
        sub_22D24A4A0();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_22D249B64(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ClinicalSharingSyncContext();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t (*sub_22D249A90(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_22D249C14(v6, a2, a3);
  return sub_22D249AF8;
}

uint64_t (*sub_22D249AFC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_22D249C94(v6, a2, a3);
  return sub_22D249AF8;
}

uint64_t (*sub_22D249B64(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_22D249D14(v6, a2, a3);
  return sub_22D249AF8;
}

void sub_22D249BCC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_22D249C14(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x230F7AF90](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for ClinicalDocumentDownloadRequestError;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_22D249C94(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x230F7AF90](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s19HealthRecordsDaemon36ClinicalDocumentDownloadRequestErrorOwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_22D249D14(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x230F7AF90](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_22D249D94;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D249D94()
{
  return swift_release();
}

uint64_t sub_22D249D9C(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  sub_22D248E38(0, &qword_26AEC22D8, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_22D2BBC90();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11);
  id v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  uint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  id v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  uint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    uint64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_22D24AA40((uint64_t)v10, &qword_26AEC22D8, MEMORY[0x263F07508]);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_22D24A1CC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_22D24A20C()
{
  unint64_t result = qword_268542F80;
  if (!qword_268542F80)
  {
    sub_22D056DB0(255, (unint64_t *)&qword_26AEC1ED0, (unint64_t *)&qword_26AEC1EE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542F80);
  }
  return result;
}

void *sub_22D24A27C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *unint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  int64_t v24 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v19 = (void *)(*(void *)(a4 + 48) + 32 * v15);
    uint64_t v20 = v19[1];
    uint64_t v21 = v19[2];
    unint64_t v22 = v19[3];
    *uint64_t v10 = *v19;
    v10[1] = v20;
    v10[2] = v21;
    v10[3] = v22;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      sub_22CFF9B64(v21, v22);
      goto LABEL_38;
    }
    v10 += 4;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)sub_22CFF9B64(v21, v22);
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v23;
      unint64_t result = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

unint64_t sub_22D24A4A0()
{
  unint64_t result = qword_268542F90;
  if (!qword_268542F90)
  {
    sub_22D248E38(255, &qword_26AEC1E98, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542F90);
  }
  return result;
}

uint64_t sub_22D24A528(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  sub_22D248E38(0, &qword_26AEC22D8, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_22D2BBC90();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11);
  id v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  uint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  id v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  uint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    uint64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_22D24AA40((uint64_t)v10, &qword_26AEC22D8, MEMORY[0x263F07508]);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_22D24A958(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D24A9C0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D248E38(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D24AA40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D248E38(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D24AAB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_22D24AB18()
{
  unint64_t result = qword_268542FA0;
  if (!qword_268542FA0)
  {
    sub_22D056DB0(255, (unint64_t *)&qword_26853D770, (unint64_t *)&qword_26853D778);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542FA0);
  }
  return result;
}

void *sub_22D24AB88(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *unint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t DecodingError.hdhr_friendlyDescription.getter()
{
  uint64_t v1 = sub_22D2BD370();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v40 - v6;
  uint64_t v8 = sub_22D2BD380();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (long long *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(long long *, uint64_t, uint64_t))(v9 + 16))(v11, v0, v8);
  int v12 = (*(uint64_t (**)(long long *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x263F8DCB0])
  {
    (*(void (**)(long long *, uint64_t))(v9 + 96))(v11, v8);
    sub_22D24D1EC(0, &qword_268542FB0, (void (*)(uint64_t))sub_22D24B460, MEMORY[0x263F8DCC8]);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, (char *)v11 + *(int *)(v13 + 48), v1);
    uint64_t v14 = DecodingError.Context.hdhr_keyPathRepresentation.getter();
    unint64_t v16 = v15;
    v43[0] = 0x20746F6E5B2ELL;
    v43[1] = 0xE600000000000000;
    sub_22D2BD800();
LABEL_5:
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D2BCCB0();
    uint64_t v46 = v14;
    unint64_t v47 = v16;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_22D2BCD40();
    unint64_t v47 = v19;
    sub_22D2BCCA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v46;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return v20;
  }
  if (v12 == *MEMORY[0x263F8DCC0])
  {
    (*(void (**)(long long *, uint64_t))(v9 + 96))(v11, v8);
    sub_22D24D1EC(0, &qword_268542FB0, (void (*)(uint64_t))sub_22D24B460, MEMORY[0x263F8DCC8]);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, (char *)v11 + *(int *)(v17 + 48), v1);
    uint64_t v14 = DecodingError.Context.hdhr_keyPathRepresentation.getter();
    unint64_t v16 = v18;
    v43[0] = 0;
    v43[1] = 0xE000000000000000;
    sub_22D2BD310();
    swift_bridgeObjectRelease();
    strcpy((char *)v43, ".[not found; ");
    HIWORD(v43[1]) = -4864;
    sub_22D2BD800();
    goto LABEL_5;
  }
  if (v12 == *MEMORY[0x263F8DCA8])
  {
    (*(void (**)(long long *, uint64_t))(v9 + 96))(v11, v8);
    sub_22D24B6D8();
    unint64_t v23 = (char *)v11 + *(int *)(v22 + 48);
    sub_22CFF8C10(v11, (uint64_t)v43);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v23, v1);
    uint64_t v24 = DecodingError.Context.hdhr_keyPathRepresentation.getter();
    uint64_t v26 = v25;
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    sub_22D2BD310();
    swift_bridgeObjectRelease();
    uint64_t v46 = 46;
    unint64_t v47 = 0xE100000000000000;
    uint64_t v27 = v44;
    uint64_t v28 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    CodingKey.hdhr_keyPathRepresentation.getter(v27, v28);
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D2BCCB0();
    uint64_t v41 = v24;
    uint64_t v42 = v26;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_22D2BCD40();
    uint64_t v42 = v29;
    sub_22D2BCCA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v41;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else if (v12 == *MEMORY[0x263F8DCB8])
  {
    (*(void (**)(long long *, uint64_t))(v9 + 96))(v11, v8);
    (*(void (**)(char *, long long *, uint64_t))(v2 + 32))(v7, v11, v1);
    uint64_t v30 = sub_22D2BD360();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    if ((v32 & 0x2000000000000000) != 0) {
      uint64_t v33 = HIBYTE(v32) & 0xF;
    }
    else {
      uint64_t v33 = v30 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v34 = DecodingError.Context.hdhr_keyPathRepresentation.getter();
    uint64_t v36 = v34;
    unint64_t v37 = v35;
    if (v33)
    {
      v43[0] = 23342;
      v43[1] = 0xE200000000000000;
      sub_22D2BD360();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      sub_22D2BCCB0();
      uint64_t v46 = v36;
      unint64_t v47 = v37;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_22D2BCD40();
      unint64_t v47 = v38;
      sub_22D2BCCA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43[0] = 0xD000000000000011;
      v43[1] = 0x800000022D2DE600;
      uint64_t v46 = v34;
      unint64_t v47 = v35;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_22D2BCD40();
      unint64_t v47 = v39;
      sub_22D2BCCA0();
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v46;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  else
  {
    uint64_t v20 = sub_22D2BD6D0();
    (*(void (**)(long long *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v20;
}

unint64_t sub_22D24B460()
{
  unint64_t result = qword_268542FB8;
  if (!qword_268542FB8)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268542FB8);
  }
  return result;
}

uint64_t CodingKey.hdhr_keyPathRepresentation.getter(uint64_t a1, uint64_t a2)
{
  sub_22D2BD7D0();
  if ((v4 & 1) == 0) {
    return sub_22D2BD630();
  }
  return MEMORY[0x270FA0090](a1, a2);
}

uint64_t DecodingError.Context.hdhr_keyPathRepresentation.getter()
{
  uint64_t v0 = sub_22D2BD350();
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_22D24B86C(0, v1, 0);
    uint64_t v2 = v0 + 32;
    uint64_t v3 = v17;
    do
    {
      sub_22CFF4B00(v2, (uint64_t)v14);
      uint64_t v4 = v15;
      uint64_t v5 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      uint64_t v6 = CodingKey.hdhr_keyPathRepresentation.getter(v4, v5);
      uint64_t v8 = v7;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22D24B86C(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v17;
      }
      unint64_t v10 = *(void *)(v3 + 16);
      unint64_t v9 = *(void *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_22D24B86C(v9 > 1, v10 + 1, 1);
        uint64_t v3 = v17;
      }
      *(void *)(v3 + 16) = v10 + 1;
      uint64_t v11 = v3 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v8;
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  v14[0] = v3;
  sub_22D24D938(0, (unint64_t *)&qword_26AEC1EC0, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_22D084BBC();
  uint64_t v12 = sub_22D2BCB60();
  swift_bridgeObjectRelease();
  return v12;
}

void sub_22D24B6D8()
{
  if (!qword_268542FC0)
  {
    sub_22D021C20(255, &qword_268542FC8);
    sub_22D2BD370();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268542FC0);
    }
  }
}

uint64_t sub_22D24B75C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D86C, type metadata accessor for PBCategorySeries.Event);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24B7A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D0B4, MEMORY[0x263F07508]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24B7EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D080, type metadata accessor for AccountSummary);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24B834(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24CC28(a1, a2, a3, (void *)*v3, &qword_268542F58, (unint64_t *)&qword_26853DCF8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24B86C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C424(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22D24B88C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D560, type metadata accessor for PBTimeSeries.Value);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24B8D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24C5B0, MEMORY[0x263F062D0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24B91C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D490, (uint64_t (*)(void))sub_22D05C8D8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24B964(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D11C, MEMORY[0x263F07490]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24B9AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C5E4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22D24B9CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C764(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22D24B9EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D6CC, type metadata accessor for PBPatientMeta.CHRMeta);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BA34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D664, type metadata accessor for PBMedicationTrackingSchedule);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BA7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D698, type metadata accessor for PBHKMedicationScheduleIntervalData);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BAC4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D0E8, type metadata accessor for PBDeleteBlob);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BB0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D734, type metadata accessor for PBClinicalRecord);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BB54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D79C, type metadata accessor for PBHKCodedValue);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BB9C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D7D0, type metadata accessor for PBHKInspectableValue);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BBE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D804, type metadata accessor for PBHKReferenceRange);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BC2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C8F0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22D24BC4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D4C4, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BC94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D184, type metadata accessor for PBNode);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BCDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D45C, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BD24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D1B8, (uint64_t (*)(void))sub_22D0971BC);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BD6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D268, (uint64_t (*)(void))sub_22D072B5C);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BDB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D150, type metadata accessor for PBBlob);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BDFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24CA9C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22D24BE1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D768, type metadata accessor for PBHKConcept);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BE64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D5FC, type metadata accessor for PBHistogramSeries.Value);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BEAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D8A0, type metadata accessor for PBBucket);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BEF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D838, type metadata accessor for PBMedicationDosage);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BF3C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24CC28(a1, a2, a3, (void *)*v3, &qword_268543048, &qword_268542080);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BF74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D700, type metadata accessor for PBActivitySummarySeries.ActivitySummary);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24BFBC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24CDE8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22D24BFDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24CF94, type metadata accessor for PBECGMeasurement);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24C024(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24D29C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22D24C044(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D594, type metadata accessor for PBMedicationTracking);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24C08C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D4F8, (uint64_t (*)(void))sub_22D24D52C);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24C0D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D428, type metadata accessor for PBReference);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24C11C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D630, type metadata accessor for PBMedicationTrackingDoseEvent);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24C164(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22D24C1D8(a1, a2, a3, (void *)*v3, sub_22D24D5C8, (uint64_t (*)(void))sub_22D0838B4);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22D24C1AC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_22D24C1D8(a1, a2, a3, a4, sub_22D24D0B4, MEMORY[0x263F07508]);
}

uint64_t sub_22D24C1D8(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  a5(0);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D24C424(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22D24D938(0, &qword_26853DED8, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

void sub_22D24C5B0(uint64_t a1)
{
}

uint64_t sub_22D24C5E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22D24D938(0, &qword_2685430D8, MEMORY[0x263F8D6C8], MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D24C764(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22D24D938(0, &qword_268542F88, (uint64_t)&type metadata for ClinicalSharingNodeMetadata, MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D24C8F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22D24D938(0, &qword_268542FF8, (uint64_t)&type metadata for ClinicalSharingFHIRSearchEntry, MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D24CA9C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22D24D938(0, &qword_268542FE8, MEMORY[0x263F06F78], MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D24CC28(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_22D24D028(0, a5, a6);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_22D021C20(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D24CDE8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22D24D938(0, &qword_268543040, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

void sub_22D24CF94(uint64_t a1)
{
}

uint64_t sub_22D24CFC8(char a1, int64_t a2, char a3, void *a4)
{
  return sub_22D24C1D8(a1, a2, a3, a4, sub_22D24CFF4, type metadata accessor for ClinicalSharingElectrocardiogramQuery.ElectrocardiogramData);
}

void sub_22D24CFF4(uint64_t a1)
{
}

void sub_22D24D028(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_22D021C20(255, a3);
    unint64_t v4 = sub_22D2BD640();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_22D24D080(uint64_t a1)
{
}

void sub_22D24D0B4(uint64_t a1)
{
}

void sub_22D24D0E8(uint64_t a1)
{
}

void sub_22D24D11C(uint64_t a1)
{
}

void sub_22D24D150(uint64_t a1)
{
}

void sub_22D24D184(uint64_t a1)
{
}

void sub_22D24D1B8(uint64_t a1)
{
}

void sub_22D24D1EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_22D24D268(uint64_t a1)
{
}

uint64_t sub_22D24D29C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22D24D938(0, &qword_26853EE60, (uint64_t)&type metadata for HTTPHeader, MEMORY[0x263F8E0F8]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

void sub_22D24D428(uint64_t a1)
{
}

void sub_22D24D45C(uint64_t a1)
{
}

void sub_22D24D490(uint64_t a1)
{
}

void sub_22D24D4C4(uint64_t a1)
{
}

void sub_22D24D4F8(uint64_t a1)
{
}

void sub_22D24D52C(uint64_t a1)
{
}

void sub_22D24D560(uint64_t a1)
{
}

void sub_22D24D594(uint64_t a1)
{
}

void sub_22D24D5C8(uint64_t a1)
{
}

void sub_22D24D5FC(uint64_t a1)
{
}

void sub_22D24D630(uint64_t a1)
{
}

void sub_22D24D664(uint64_t a1)
{
}

void sub_22D24D698(uint64_t a1)
{
}

void sub_22D24D6CC(uint64_t a1)
{
}

void sub_22D24D700(uint64_t a1)
{
}

void sub_22D24D734(uint64_t a1)
{
}

void sub_22D24D768(uint64_t a1)
{
}

void sub_22D24D79C(uint64_t a1)
{
}

void sub_22D24D7D0(uint64_t a1)
{
}

void sub_22D24D804(uint64_t a1)
{
}

void sub_22D24D838(uint64_t a1)
{
}

void sub_22D24D86C(uint64_t a1)
{
}

void sub_22D24D8A0(uint64_t a1)
{
}

void sub_22D24D8D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D24D938(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_22D24D988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a2;
  sub_22D255FA8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_22D2BBC30();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v34 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  size_t v17 = (char *)&v34 - v16;
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0xE000000000000000;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0xE000000000000000;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  type metadata accessor for PBDateRange(0);
  sub_22D2BBFE0();
  sub_22D04BDE8(a1, (uint64_t)v11);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v18 = v36(v11, 1, v12);
  unint64_t v35 = v3;
  if (v18 == 1)
  {
    sub_22D256FD4((uint64_t)v11, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    id v19 = *(id *)(*v3 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    unint64_t v20 = (void *)sub_22D2BBBC0();
    uint64_t v21 = v13;
    id v22 = objc_msgSend(v19, sel_stringFromDate_, v20);

    uint64_t v23 = sub_22D2BCBD0();
    uint64_t v25 = v24;

    uint64_t v13 = v21;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v12);
    swift_bridgeObjectRelease();
    *(void *)a3 = v23;
    *(void *)(a3 + 8) = v25;
  }
  sub_22D04BDE8(v37, (uint64_t)v9);
  if (v36(v9, 1, v12) == 1) {
    return sub_22D256FD4((uint64_t)v9, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
  uint64_t v27 = v34;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v34, v9, v12);
  id v28 = *(id *)(*v35 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  uint64_t v29 = (void *)sub_22D2BBBC0();
  id v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

  uint64_t v31 = sub_22D2BCBD0();
  uint64_t v33 = v32;

  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v12);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + 16) = v31;
  *(void *)(a3 + 24) = v33;
  return result;
}

uint64_t sub_22D24DD54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a2;
  sub_22D255FA8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_22D2BBC30();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v34 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  size_t v17 = (char *)&v34 - v16;
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0xE000000000000000;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0xE000000000000000;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  type metadata accessor for PBDateRange(0);
  sub_22D2BBFE0();
  sub_22D04BDE8(a1, (uint64_t)v11);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v18 = v36(v11, 1, v12);
  uint64_t v35 = v3;
  if (v18 == 1)
  {
    sub_22D256FD4((uint64_t)v11, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    id v19 = objc_retain(*(id *)(*(void *)(v3
                                        + *(int *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() + 20))
                            + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
    unint64_t v20 = (void *)sub_22D2BBBC0();
    uint64_t v21 = v13;
    id v22 = objc_msgSend(v19, sel_stringFromDate_, v20);

    uint64_t v23 = sub_22D2BCBD0();
    uint64_t v25 = v24;

    uint64_t v13 = v21;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v12);
    swift_bridgeObjectRelease();
    *(void *)a3 = v23;
    *(void *)(a3 + 8) = v25;
  }
  sub_22D04BDE8(v37, (uint64_t)v9);
  if (v36(v9, 1, v12) == 1) {
    return sub_22D256FD4((uint64_t)v9, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
  uint64_t v27 = v34;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v34, v9, v12);
  id v28 = objc_retain(*(id *)(*(void *)(v35
                                      + *(int *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() + 20))
                          + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
  uint64_t v29 = (void *)sub_22D2BBBC0();
  id v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

  uint64_t v31 = sub_22D2BCBD0();
  uint64_t v33 = v32;

  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v12);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + 16) = v31;
  *(void *)(a3 + 24) = v33;
  return result;
}

uint64_t sub_22D24E138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  sub_22D255FA8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_22D2BBC30();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v35 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  size_t v17 = (char *)&v34 - v16;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0xE000000000000000;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0xE000000000000000;
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 1;
  type metadata accessor for PBDateRange(0);
  sub_22D2BBFE0();
  sub_22D04BDE8(a1, (uint64_t)v11);
  int v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v18(v11, 1, v12) == 1)
  {
    sub_22D256FD4((uint64_t)v11, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    uint64_t v34 = v13;
    id v19 = *(id *)(v37 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    unint64_t v20 = (void *)sub_22D2BBBC0();
    id v21 = objc_msgSend(v19, (SEL)0x1F6957B98, v20);

    uint64_t v22 = sub_22D2BCBD0();
    uint64_t v24 = v23;

    uint64_t v13 = v34;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v12);
    swift_bridgeObjectRelease();
    *(void *)a4 = v22;
    *(void *)(a4 + 8) = v24;
  }
  sub_22D04BDE8(v36, (uint64_t)v9);
  if (v18(v9, 1, v12) == 1) {
    return sub_22D256FD4((uint64_t)v9, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
  uint64_t v26 = v13;
  uint64_t v27 = v35;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v35, v9, v12);
  id v28 = *(id *)(v37 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  uint64_t v29 = (void *)sub_22D2BBBC0();
  id v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

  uint64_t v31 = sub_22D2BCBD0();
  uint64_t v33 = v32;

  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v12);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a4 + 16) = v31;
  *(void *)(a4 + 24) = v33;
  return result;
}

uint64_t sub_22D24E4F8(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v18 = sub_22D2BBC30();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (!v7) {
      return v8;
    }
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t result = sub_22D24B964(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v19;
    v16[1] = v2;
    unint64_t v17 = a1 & 0xC000000000000001;
    unint64_t v11 = a1;
    while (v7 != v10)
    {
      if (v17) {
        id v12 = (id)MEMORY[0x230F7AF90](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_startDate);
      sub_22D2BBC00();

      uint64_t v19 = v8;
      unint64_t v2 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_22D24B964(v15 > 1, v2 + 1, 1);
        uint64_t v8 = v19;
      }
      ++v10;
      *(void *)(v8 + 16) = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v2, v6, v18);
      a1 = v11;
      if (v7 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

int64_t sub_22D24E720(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  int64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    if (v1 >= 5)
    {
      unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int64x2_t v5 = vdupq_n_s64(v2);
      uint64_t v6 = (int64x2_t *)(a1 + 56);
      unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v8 = v5;
      do
      {
        int64x2_t v5 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v5, v6[-1]), (int8x16_t)v6[-1], (int8x16_t)v5);
        int64x2_t v8 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v8, *v6), *(int8x16_t *)v6, (int8x16_t)v8);
        v6 += 2;
        v7 -= 4;
      }
      while (v7);
      int8x16_t v9 = vbslq_s8((int8x16_t)vcgtq_s64(v8, v5), (int8x16_t)v5, (int8x16_t)v8);
      uint64_t v10 = vextq_s8(v9, v9, 8uLL).u64[0];
      int64_t v2 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v10, v9.i64[0]), *(int8x8_t *)v9.i8, (int8x8_t)v10);
      if (v3 == (v3 & 0xFFFFFFFFFFFFFFFCLL)) {
        return v2;
      }
    }
    else
    {
      unint64_t v4 = 1;
    }
    unint64_t v11 = v1 - v4;
    id v12 = (int64_t *)(a1 + 8 * v4 + 32);
    do
    {
      int64_t v14 = *v12++;
      int64_t v13 = v14;
      if (v14 < v2) {
        int64_t v2 = v13;
      }
      --v11;
    }
    while (v11);
  }
  return v2;
}

uint64_t sub_22D24E7D4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_22D255FA8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  int8x16_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  int64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  unint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    uint64_t v19 = v38;
LABEL_5:
    sub_22D256FD4((uint64_t)v9, &qword_26AEC0F48, MEMORY[0x263F07490]);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  id v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_22D256A54((unint64_t *)&qword_26853E1D8, MEMORY[0x263F07490]);
      char v27 = sub_22D2BCB70();
      id v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_22D256FD4((uint64_t)v7, &qword_26AEC0F48, MEMORY[0x263F07490]);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_22D24EC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v7 = sub_22D2BBE00();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_22D2BB6F0();
  uint64_t v36 = *(void *)(v39 - 8);
  uint64_t v9 = v36;
  MEMORY[0x270FA5388](v39);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  id v13 = objc_msgSend(self, sel_hk_gregorianCalendarWithUTCTimeZone);
  sub_22D2BBD40();

  uint64_t v14 = sub_22D2BBC90();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  uint64_t v38 = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a4, a1, v14);
  *(void *)(a4 + *(int *)(v12 + 20)) = a2;
  uint64_t v16 = (int *)v12;
  uint64_t v17 = a4 + *(int *)(v12 + 24);
  unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v19 = v39;
  uint64_t v20 = v40;
  v18(v17, v40, v39);
  v18((uint64_t)v11, v20, v19);
  uint64_t v21 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, a2 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v35);
  swift_retain();
  uint64_t v22 = sub_22D29FC90((uint64_t)v11, v21);
  uint64_t v23 = a4;
  uint64_t v24 = (uint64_t *)(a4 + v16[7]);
  uint64_t *v24 = v22;
  v24[1] = v25;
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_22D254AAC(v26, a1);
  swift_bridgeObjectRelease();
  *(void *)(v23 + v16[8]) = v27;
  uint64_t v28 = *(void *)(a2 + 56);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = 0;
  sub_22D26AFDC(1, (void *)*MEMORY[0x263F09228], v28, a1, v29);
  sub_22D26AFDC(2, (void *)*MEMORY[0x263F09230], v28, a1, v29);
  sub_22D26AFDC(4, (void *)*MEMORY[0x263F09238], v28, a1, v29);
  sub_22D26AFDC(8, (void *)*MEMORY[0x263F09268], v28, a1, v29);
  sub_22D26AFDC(16, (void *)*MEMORY[0x263F09270], v28, a1, v29);
  sub_22D26AFDC(32, (void *)*MEMORY[0x263F09290], v28, a1, v29);
  sub_22D26AFDC(64, (void *)*MEMORY[0x263F092A8], v28, a1, v29);
  sub_22D26AFDC(128, (void *)*MEMORY[0x263F092F8], v28, a1, v29);
  sub_22D26AFDC(256, (void *)*MEMORY[0x263F09320], v28, a1, v29);
  sub_22D26AFDC(512, (void *)*MEMORY[0x263F09370], v28, a1, v29);
  sub_22D26AFDC(1024, (void *)*MEMORY[0x263F09390], v28, a1, v29);
  sub_22D26AFDC(2048, (void *)*MEMORY[0x263F09398], v28, a1, v29);
  sub_22D26AFDC(4096, (void *)*MEMORY[0x263F093B0], v28, a1, v29);
  sub_22D26AFDC(0x2000, (void *)*MEMORY[0x263F09420], v28, a1, v29);
  sub_22D26AFDC(0x4000, (void *)*MEMORY[0x263F092D0], v28, a1, v29);
  sub_22D26AFDC(0x8000, (void *)*MEMORY[0x263F09438], v28, a1, v29);
  sub_22D26AFDC(0x10000, (void *)*MEMORY[0x263F093A0], v28, a1, v29);
  sub_22D26AFDC(0x20000, (void *)*MEMORY[0x263F09288], v28, a1, v29);
  sub_22D26AFDC(0x40000, (void *)*MEMORY[0x263F092E8], v28, a1, v29);
  sub_22D26AFDC(0x80000, (void *)*MEMORY[0x263F092B8], v28, a1, v29);
  sub_22D26AFDC(0x100000, (void *)*MEMORY[0x263F09250], v28, a1, v29);
  sub_22D26AFDC(0x200000, (void *)*MEMORY[0x263F09378], v28, a1, v29);
  swift_beginAccess();
  uint64_t v30 = *(void *)(v29 + 16);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v40, v39);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(a1, v37);
  uint64_t result = swift_release();
  *(void *)(v23 + v16[9]) = v30;
  return result;
}

uint64_t sub_22D24F230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_22D2BB6F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22D2BBC90();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  swift_retain();
  sub_22D24EC4C((uint64_t)v14, a2, (uint64_t)v11, a4);
  uint64_t v16 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a4, 0, 1, v16);
}

uint64_t type metadata accessor for ClinicalSharingCycleTrackingQuery()
{
  uint64_t result = qword_2685430E0;
  if (!qword_2685430E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D24F454()
{
  uint64_t v1 = v0;
  sub_22D2566C8(0, (unint64_t *)&qword_26853E7F8, type metadata accessor for ClinicalSharingQueryOutput, MEMORY[0x263EFDE08]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v51 - v5;
  sub_22D255904();
  uint64_t v8 = v7;
  uint64_t v71 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v67 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D255CD8();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v69 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D255C0C();
  uint64_t v70 = v14;
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v64 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v66 = (char *)&v51 - v17;
  uint64_t v18 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  uint64_t v62 = *(void *)(v18 - 8);
  uint64_t v19 = *(void *)(v62 + 64);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2559F0();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  if ((*(unsigned char *)(v1 + *(int *)(v18 + 32)) & 2) != 0)
  {
    uint64_t v28 = *(void *)(v1 + *(int *)(v18 + 20));
    uint64_t v57 = v1;
    uint64_t v53 = v23;
    uint64_t v59 = (char *)&v51 - v24;
    uint64_t v65 = v25;
    uint64_t v52 = v26;
    sub_22CFF4B00(v28 + 16, (uint64_t)v73);
    uint64_t v29 = (void *)*__swift_project_boxed_opaque_existential_1(v73, v73[3]);
    *(void *)(swift_allocObject() + 16) = v29;
    uint64_t v56 = v12;
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_22D255AFC(0, &qword_268543148, MEMORY[0x263EFDE20]);
    uint64_t v55 = v8;
    swift_allocObject();
    id v31 = v29;
    uint64_t v72 = sub_22D2BC6F0();
    sub_22D255E4C(&qword_268543150, &qword_268543148, v30);
    uint64_t v32 = sub_22D2BC720();
    swift_release();
    uint64_t v72 = v32;
    uint64_t v63 = type metadata accessor for ClinicalSharingCycleTrackingQuery;
    sub_22D2570AC(v1, (uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
    uint64_t v33 = *(unsigned __int8 *)(v62 + 80);
    uint64_t v54 = v11;
    uint64_t v34 = (v33 + 16) & ~v33;
    uint64_t v58 = v34;
    uint64_t v61 = v33 | 7;
    uint64_t v62 = v34 + v19;
    uint64_t v35 = swift_allocObject();
    uint64_t v60 = type metadata accessor for ClinicalSharingCycleTrackingQuery;
    sub_22D257044((uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v34, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
    sub_22D2BC5D0();
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D255AFC(0, &qword_268543108, MEMORY[0x263EFDCF0]);
    type metadata accessor for PBTypedData(0);
    sub_22D2566C8(0, (unint64_t *)&qword_268543100, type metadata accessor for PBTypedData, MEMORY[0x263EFDCF0]);
    sub_22D255E4C(&qword_268543120, &qword_268543108, v36);
    sub_22D255B84();
    uint64_t v37 = v59;
    sub_22D2BC830();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    uint64_t v38 = v57;
    v73[0] = sub_22D2504A4();
    sub_22D2570AC(v38, (uint64_t)v20, (uint64_t (*)(void))v63);
    uint64_t v39 = swift_allocObject();
    sub_22D257044((uint64_t)v20, v39 + v58, (uint64_t (*)(void))v60);
    uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D256034(0, (unint64_t *)&qword_26853D768, MEMORY[0x263EFDCF0]);
    sub_22D2560C4(&qword_26853D780, (unint64_t *)&qword_26853D768, v40);
    uint64_t v41 = v66;
    sub_22D2BC730();
    swift_release();
    swift_release();
    uint64_t v42 = v53;
    (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v52, v37, v53);
    uint64_t v43 = v68;
    uint64_t v44 = v70;
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v64, v41, v70);
    sub_22D256A54(&qword_268543128, (void (*)(uint64_t))sub_22D2559F0);
    sub_22D256A54(&qword_268543130, (void (*)(uint64_t))sub_22D255C0C);
    uint64_t v45 = v67;
    sub_22D2BC4D0();
    sub_22D2570AC(v57, (uint64_t)v20, (uint64_t (*)(void))v63);
    uint64_t v46 = swift_allocObject();
    sub_22D257044((uint64_t)v20, v46 + v58, (uint64_t (*)(void))v60);
    type metadata accessor for ClinicalSharingQueryOutput(0);
    sub_22D256A54(&qword_268543140, (void (*)(uint64_t))sub_22D255904);
    unint64_t v47 = v69;
    uint64_t v48 = v55;
    sub_22D2BC780();
    swift_release();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v48);
    sub_22D256A54(&qword_268543158, (void (*)(uint64_t))sub_22D255CD8);
    uint64_t v49 = v54;
    uint64_t v27 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v47, v49);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v44);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v59, v42);
  }
  else
  {
    type metadata accessor for ClinicalSharingQueryOutput(0);
    sub_22CFF49FC();
    sub_22D2BC6C0();
    sub_22D255D84();
    uint64_t v27 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v27;
}

uint64_t sub_22D24FE3C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_22D256108();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D256210();
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D256440();
  uint64_t v50 = v14;
  uint64_t v48 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v46 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2564D4();
  uint64_t v51 = v16;
  uint64_t v49 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v47 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a1;
  id v18 = objc_msgSend(a1, sel_cycles);
  if (v18)
  {
    uint64_t v19 = v18;
    sub_22D030474(0, &qword_268543188);
    uint64_t v20 = sub_22D2BCE00();
  }
  else
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
  }
  uint64_t v53 = v20;
  sub_22D056DB0(0, &qword_268543180, &qword_268543188);
  sub_22D2561A0();
  sub_22D2BCD80();
  swift_bridgeObjectRelease();
  uint64_t v41 = type metadata accessor for ClinicalSharingCycleTrackingQuery;
  sub_22D2570AC(v2, (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
  uint64_t v21 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v38 = v2;
  uint64_t v22 = (v21 + 16) & ~v21;
  uint64_t v23 = v22 + v6;
  uint64_t v40 = v21 | 7;
  uint64_t v24 = swift_allocObject();
  uint64_t v39 = type metadata accessor for ClinicalSharingCycleTrackingQuery;
  sub_22D257044((uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v22, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
  sub_22D2BC5D0();
  sub_22D2566C8(0, &qword_2685431A0, type metadata accessor for PBCycleTracking.Cycle, MEMORY[0x263EFDCF0]);
  sub_22D256A54(&qword_2685431B0, (void (*)(uint64_t))sub_22D256108);
  uint64_t v25 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2563B8();
  uint64_t v26 = v13;
  uint64_t v27 = v42;
  sub_22D2BC880();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v27);
  sub_22D256A54(&qword_2685431D0, (void (*)(uint64_t))sub_22D256210);
  uint64_t v28 = v45;
  uint64_t v29 = v46;
  sub_22D2BC800();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v28);
  sub_22D2570AC(v38, (uint64_t)v25, (uint64_t (*)(void))v41);
  uint64_t v30 = swift_allocObject();
  sub_22D257044((uint64_t)v25, v30 + v22, (uint64_t (*)(void))v39);
  id v31 = v52;
  *(void *)(v30 + ((v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v52;
  type metadata accessor for PBTypedData(0);
  sub_22D256A54(&qword_2685431E0, (void (*)(uint64_t))sub_22D256440);
  id v32 = v31;
  uint64_t v33 = v47;
  uint64_t v34 = v50;
  sub_22D2BC730();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v34);
  sub_22D256A54(&qword_2685431E8, (void (*)(uint64_t))sub_22D2564D4);
  uint64_t v35 = v51;
  uint64_t v36 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v35);
  return v36;
}

uint64_t sub_22D2504A4()
{
  sub_22D256034(0, &qword_268543168, MEMORY[0x263EFDE08]);
  uint64_t v2 = v1;
  unint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v36 = (char *)&v33 - v4;
  uint64_t v41 = sub_22D2BCF90();
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_22D2BBF00();
  uint64_t v6 = *(char **)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4B64();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22D2D2200;
  sub_22D030474(0, (unint64_t *)&qword_26853EBA0);
  *(void *)(inited + 32) = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F09298]);
  *(void *)(inited + 40) = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F09348]);
  *(void *)(inited + 48) = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F093C0]);
  v52[0] = inited;
  sub_22D2BCE20();
  unint64_t v9 = v52[0];
  uint64_t v10 = *(int *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() + 20);
  uint64_t v38 = v0;
  uint64_t v37 = v10;
  uint64_t v51 = *(void *)(*(void *)(v0 + v10) + 56);
  v52[0] = MEMORY[0x263F8EE78];
  if (v9 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    unint64_t v34 = v3;
    uint64_t v35 = v2;
    unint64_t v3 = 0;
    unint64_t v48 = v9 & 0xC000000000000001;
    uint64_t v47 = v9 & 0xFFFFFFFFFFFFFF8;
    unsigned int v44 = *MEMORY[0x263F44A40];
    uint64_t v43 = (uint64_t (**)(void *, void, uint64_t))(v6 + 104);
    uint64_t v42 = (void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v45 = v11;
    unint64_t v46 = v9;
    uint64_t v13 = v49;
    uint64_t v2 = v50;
    uint64_t v14 = v51;
    while (1)
    {
      if (v48)
      {
        id v15 = (id)MEMORY[0x230F7AF90](v3, v9);
      }
      else
      {
        if (v3 >= *(void *)(v47 + 16))
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          swift_bridgeObjectRetain();
          uint64_t v11 = sub_22D2BD470();
          goto LABEL_3;
        }
        id v15 = *(id *)(v9 + 8 * v3 + 32);
      }
      uint64_t v16 = v15;
      unint64_t v17 = v3 + 1;
      if (__OFADD__(v3, 1)) {
        goto LABEL_26;
      }
      void *v13 = v15;
      uint64_t v18 = (*v43)(v13, v44, v2);
      MEMORY[0x270FA5388](v18);
      *(&v33 - 2) = (uint64_t)v13;
      swift_bridgeObjectRetain();
      uint64_t v6 = v16;
      uint64_t v19 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D05C90C, (uint64_t)(&v33 - 4), v14);
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v19 + 16);
      swift_bridgeObjectRelease();
      (*v42)(v13, v2);
      if (v20)
      {
        sub_22D2BD3A0();
        sub_22D2BD3E0();
        sub_22D2BD3F0();
        sub_22D2BD3B0();
      }
      else
      {
      }
      unint64_t v9 = v46;
      ++v3;
      if (v17 == v45)
      {
        uint64_t v12 = v52[0];
        uint64_t v2 = v35;
        unint64_t v3 = v34;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 0x8000000000000000) == 0 && (v12 & 0x4000000000000000) == 0)
  {
    uint64_t v21 = *(void *)(v12 + 16);
    if (v21)
    {
      v52[0] = MEMORY[0x263F8EE78];
      sub_22D2BD3D0();
      goto LABEL_19;
    }
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_22D2BD470();
  swift_release();
  if (!v30) {
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_22D2BD470();
  swift_release();
  if (v21)
  {
    v52[0] = MEMORY[0x263F8EE78];
    sub_22D2BD3D0();
    if ((v21 & 0x8000000000000000) == 0)
    {
LABEL_19:
      uint64_t v22 = self;
      uint64_t v23 = 0;
      do
      {
        if ((v12 & 0xC000000000000001) != 0) {
          id v24 = (id)MEMORY[0x230F7AF90](v23, v12);
        }
        else {
          id v24 = *(id *)(v12 + 8 * v23 + 32);
        }
        uint64_t v25 = v24;
        ++v23;
        id v26 = objc_msgSend(v22, sel_queryDescriptorWithSampleType_, v24);

        sub_22D2BD3A0();
        sub_22D2BD3E0();
        sub_22D2BD3F0();
        sub_22D2BD3B0();
      }
      while (v21 != v23);
      goto LABEL_24;
    }
    __break(1u);
LABEL_32:
    swift_release();
    sub_22D056DB0(0, (unint64_t *)&qword_26853D770, (unint64_t *)&qword_26853D778);
    sub_22CFF49FC();
    id v31 = v36;
    sub_22D2BC6C0();
    sub_22D2560C4(&qword_268543170, &qword_268543168, MEMORY[0x263EFDE08]);
    uint64_t v29 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v31, v2);
    return v29;
  }
LABEL_24:
  swift_release();
  sub_22D229C70(0x61662D656C637963, 0xED000073726F7463, 0, 5, 1);
  sub_22CFF4B00(*(void *)(v38 + v37) + 16, (uint64_t)v52);
  __swift_project_boxed_opaque_existential_1(v52, v52[3]);
  uint64_t v27 = v39;
  sub_22D2BCFA0();
  sub_22D256A54(&qword_26853D790, MEMORY[0x263F44AA8]);
  uint64_t v28 = v41;
  uint64_t v29 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return v29;
}

uint64_t sub_22D250C80@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D255FA8(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v76 = (char *)&v67 - v6;
  uint64_t v7 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v74 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_22D2BB6F0();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  id v82 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  MEMORY[0x270FA5388](v71);
  uint64_t v70 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D255FA8(0, &qword_26AEC0F48, MEMORY[0x263F07490], v4);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v67 - v12;
  uint64_t v80 = sub_22D2BBC30();
  uint64_t v84 = *(void *)(v80 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v80);
  uint64_t v73 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v72 = (char *)&v67 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v67 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v79 = (char *)&v67 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v81 = (char *)&v67 - v23;
  uint64_t v24 = type metadata accessor for PBCategorySeries(0);
  uint64_t v25 = v24 - 8;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v67 - v29;
  sub_22D2BBFE0();
  uint64_t v31 = *(int *)(v25 + 28);
  if (qword_26853CFA8 != -1) {
    swift_once();
  }
  uint64_t v32 = qword_2685401B0;
  *(void *)&v30[v31] = qword_2685401B0;
  MEMORY[0x270FA5388](v32);
  uint64_t v83 = v2;
  *(&v67 - 2) = v2;
  swift_retain();
  unint64_t v33 = a1;
  unint64_t v34 = sub_22D2543AC(a1, (void (*)(id **))sub_22D25600C);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries._StorageClass(0);
    swift_allocObject();
    uint64_t v35 = swift_retain();
    *(void *)&v30[v31] = sub_22D165828(v35);
    swift_release();
  }
  uint64_t v36 = (unint64_t *)(*(void *)&v30[v31]
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
  swift_beginAccess();
  unint64_t *v36 = v34;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)&v30[v31]
      + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events;
  swift_beginAccess();
  if (*(void *)(*(void *)v37 + 16))
  {
    uint64_t v38 = sub_22D24E4F8(v33);
    sub_22D24E7D4(v38, v13);
    swift_bridgeObjectRelease();
    uint64_t v39 = v70;
    sub_22D2570AC(v83, v70, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
    uint64_t v40 = v84;
    uint64_t v41 = v80;
    int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48))(v13, 1, v80);
    id v69 = v28;
    uint64_t v68 = v30;
    if (v42 == 1)
    {
      uint64_t v43 = v81;
      sub_22D2BB6C0();
      sub_22D257214(v39, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
      sub_22D256FD4((uint64_t)v13, &qword_26AEC0F48, MEMORY[0x263F07490]);
    }
    else
    {
      sub_22D257214(v39, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
      uint64_t v43 = v81;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v81, v13, v41);
    }
    sub_22D2BB690();
    sub_22D256A54((unint64_t *)&qword_26853E1D8, MEMORY[0x263F07490]);
    char v46 = sub_22D2BCB70();
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
    if (v46) {
      unint64_t v48 = v20;
    }
    else {
      unint64_t v48 = v43;
    }
    v47(v79, v48, v41);
    uint64_t v51 = *(char **)(v40 + 8);
    uint64_t v49 = v40 + 8;
    uint64_t v50 = v51;
    ((void (*)(char *, uint64_t))v51)(v20, v41);
    uint64_t v52 = v73;
    sub_22D2BB690();
    if (sub_22D2BCB80()) {
      uint64_t v53 = v52;
    }
    else {
      uint64_t v53 = v43;
    }
    v47(v72, v53, v41);
    uint64_t v73 = v50;
    ((void (*)(char *, uint64_t))v50)(v52, v41);
    sub_22D2BB6A0();
    uint64_t v54 = v78;
    sub_22D2BBFE0();
    uint64_t v55 = type metadata accessor for PBTypedData(0);
    uint64_t v56 = *(int *)(v55 + 20);
    if (qword_26853CCD0 != -1) {
      swift_once();
    }
    uint64_t v84 = v49;
    *(void *)(v54 + v56) = qword_26853D990;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = (uint64_t)v68;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v59 = swift_retain();
      *(void *)(v54 + v56) = sub_22D0040E0(v59);
      swift_release();
    }
    uint64_t v60 = *(void *)(v54 + v56);
    swift_beginAccess();
    *(void *)(v60 + 16) = 116;
    *(unsigned char *)(v60 + 24) = 1;
    uint64_t v62 = v75;
    uint64_t v61 = (uint64_t)v76;
    uint64_t v63 = v82;
    uint64_t v64 = v77;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v76, v82, v77);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v61, 0, 1, v64);
    uint64_t v65 = v74;
    sub_22D22C160(5, 1, v61, v74);
    sub_22D256FD4(v61, &qword_26853D7A0, MEMORY[0x263F062D0]);
    PBTypedData.dateRange.setter(v65);
    uint64_t v66 = (uint64_t)v69;
    sub_22D2570AC(v58, (uint64_t)v69, type metadata accessor for PBCategorySeries);
    PBTypedData.categorySeries.setter(v66);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
    ((void (*)(char *, uint64_t))v73)(v81, v80);
    sub_22D257214(v58, type metadata accessor for PBCategorySeries);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
  }
  else
  {
    sub_22D257214((uint64_t)v30, type metadata accessor for PBCategorySeries);
    uint64_t v44 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v78, 1, 1, v44);
  }
}

uint64_t sub_22D251664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PBTypedData(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2570AC(a1, (uint64_t)v8, type metadata accessor for PBTypedData);
  sub_22D255FA8(0, &qword_26853DD48, MEMORY[0x263F07508], MEMORY[0x263F8E0F8]);
  uint64_t v9 = sub_22D2BBC90();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22D2BFF40;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16))(v12 + v11, a2, v9);
  uint64_t v13 = sub_22D237C78(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_22D257044((uint64_t)v8, a3, type metadata accessor for PBTypedData);
  uint64_t result = type metadata accessor for ClinicalSharingQueryOutput(0);
  *(void *)(a3 + *(int *)(result + 20)) = v13;
  uint64_t v15 = (void *)(a3 + *(int *)(result + 24));
  void *v15 = 0;
  v15[1] = 0;
  return result;
}

uint64_t sub_22D251858(void *a1)
{
  uint64_t v2 = v1;
  sub_22D2566C8(0, &qword_2685431F0, type metadata accessor for PBCycleTracking.Cycle, MEMORY[0x263EFDE08]);
  uint64_t v5 = v4;
  uint64_t v72 = *(uint64_t (**)())(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v58 - v6;
  sub_22D256744();
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v64 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D256914();
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v65 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2569A8();
  uint64_t v70 = *(uint64_t (**)())(v12 - 8);
  uint64_t v71 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v66 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  uint64_t v60 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v60 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v61 = (uint64_t)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v58 - v17;
  id v19 = objc_msgSend(a1, sel_menstruationSegment);
  uint64_t v20 = objc_msgSend(v19, sel_days);

  uint64_t v67 = a1;
  id v21 = objc_msgSend(a1, sel_lastDayIndex);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = objc_msgSend(v21, sel_integerValue);

    sub_22D2570AC(v2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
    uint64_t result = sub_22D257214((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
    uint64_t v25 = v2;
    goto LABEL_6;
  }
  sub_22D2570AC(v2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
  uint64_t v26 = &v18[*(int *)(v14 + 28)];
  uint64_t v27 = *(void *)v26;
  uint64_t v28 = *((void *)v26 + 1);
  uint64_t result = sub_22D257214((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
  uint64_t v29 = v27 + v28;
  if (__OFADD__(v27, v28))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v23 = (unsigned char *)(v29 - 1);
  if (!__OFSUB__(v29, 1))
  {
    uint64_t v25 = v2;
LABEL_6:
    uint64_t v30 = (uint64_t *)(v25 + *(int *)(v14 + 28));
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    BOOL v33 = __OFADD__(v31, v32);
    uint64_t v34 = v31 + v32;
    if (v33)
    {
      __break(1u);
    }
    else
    {
      BOOL v33 = __OFSUB__(v34, 1);
      uint64_t v35 = v34 - 1;
      if (!v33)
      {
        if ((uint64_t)v20 >= v35 || (uint64_t)v23 < v31)
        {
          type metadata accessor for PBCycleTracking.Cycle(0);
          sub_22CFF49FC();
          sub_22D2BC6C0();
          sub_22D256A9C();
          uint64_t v56 = sub_22D2BC720();
          uint64_t v57 = v72;
          goto LABEL_15;
        }
        int64_t v36 = v23 - v20;
        if ((uint64_t)v23 >= (uint64_t)v20)
        {
          if (!__OFSUB__(v23, v20))
          {
            int64_t v37 = v36 + 1;
            if (!__OFADD__(v36, 1))
            {
              sub_22CFF4B00(*(void *)(v25 + *(int *)(v14 + 20)) + 16, (uint64_t)v74);
              uint64_t v38 = (void *)*__swift_project_boxed_opaque_existential_1(v74, v74[3]);
              uint64_t v39 = (void *)swift_allocObject();
              v39[2] = v20;
              v39[3] = v37;
              v39[4] = v38;
              uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
              sub_22D256840(0, &qword_268543248, MEMORY[0x263EFDE20]);
              swift_allocObject();
              id v41 = v38;
              uint64_t v73 = sub_22D2BC6F0();
              sub_22D2568D0(&qword_268543250, &qword_268543248, v40);
              uint64_t v42 = sub_22D2BC720();
              swift_release();
              uint64_t v72 = type metadata accessor for ClinicalSharingCycleTrackingQuery;
              uint64_t v73 = v42;
              uint64_t v43 = v61;
              sub_22D2570AC(v25, v61, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
              uint64_t v44 = *(unsigned __int8 *)(v60 + 80);
              uint64_t v45 = (v44 + 16) & ~v44;
              uint64_t v60 = v44 | 7;
              uint64_t v46 = swift_allocObject();
              sub_22D257044(v43, v46 + v45, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
              uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
              sub_22D256840(0, &qword_268543200, MEMORY[0x263EFDCF0]);
              uint64_t v59 = v25;
              sub_22D255FA8(0, &qword_268543210, type metadata accessor for PBCycleTracking.Event, MEMORY[0x263F8D488]);
              sub_22D2568D0(&qword_268543218, &qword_268543200, v47);
              unint64_t v48 = v62;
              sub_22D2BC780();
              swift_release();
              swift_release();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
              v74[0] = MEMORY[0x263F8EE78];
              sub_22D256A54(&qword_268543228, (void (*)(uint64_t))sub_22D256744);
              uint64_t v49 = v64;
              uint64_t v50 = v65;
              sub_22D2BC760();
              (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v49);
              sub_22D2570AC(v59, v43, (uint64_t (*)(void))v72);
              unint64_t v51 = (v45 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v52 = swift_allocObject();
              sub_22D257044(v43, v52 + v45, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
              uint64_t v53 = v67;
              *(void *)(v52 + v51) = v67;
              type metadata accessor for PBCycleTracking.Cycle(0);
              sub_22D256A54(&qword_268543238, (void (*)(uint64_t))sub_22D256914);
              id v54 = v53;
              uint64_t v7 = v66;
              uint64_t v55 = v69;
              sub_22D2BC730();
              swift_release();
              (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v55);
              sub_22D256A54(&qword_268543258, (void (*)(uint64_t))sub_22D2569A8);
              uint64_t v5 = v71;
              uint64_t v56 = sub_22D2BC720();
              uint64_t v57 = v70;
LABEL_15:
              (*((void (**)(char *, uint64_t))v57 + 1))(v7, v5);
              return v56;
            }
            goto LABEL_20;
          }
LABEL_19:
          __break(1u);
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_22D252124@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D255FA8(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D255FA8(0, &qword_26853DC48, type metadata accessor for PBCycleTracking, v8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = type metadata accessor for PBCycleTracking(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t v24 = *a1;
  id v25 = objc_msgSend(a3, sel_statistics);
  uint64_t v38 = a2;
  sub_22D252614(v25, v24, (uint64_t)v16);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_22D256FD4((uint64_t)v16, &qword_26853DC48, type metadata accessor for PBCycleTracking);
    uint64_t v26 = type metadata accessor for PBTypedData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a4, 1, 1, v26);
  }
  else
  {
    sub_22D257044((uint64_t)v16, (uint64_t)v23, type metadata accessor for PBCycleTracking);
    sub_22D2BBFE0();
    uint64_t v28 = type metadata accessor for PBTypedData(0);
    uint64_t v29 = *(int *)(v28 + 20);
    if (qword_26853CCD0 != -1) {
      swift_once();
    }
    *(void *)(a4 + v29) = qword_26853D990;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v30 = swift_retain();
      *(void *)(a4 + v29) = sub_22D0040E0(v30);
      swift_release();
    }
    uint64_t v31 = *(void *)(a4 + v29);
    swift_beginAccess();
    *(void *)(v31 + 16) = 109;
    *(unsigned char *)(v31 + 24) = 1;
    uint64_t v32 = v38 + *(int *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() + 24);
    uint64_t v33 = sub_22D2BB6F0();
    uint64_t v34 = *(void *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v11, v32, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v11, 0, 1, v33);
    uint64_t v35 = v37;
    sub_22D22C160(5, 1, (uint64_t)v11, v37);
    sub_22D256FD4((uint64_t)v11, &qword_26853D7A0, MEMORY[0x263F062D0]);
    PBTypedData.dateRange.setter(v35);
    sub_22D2570AC((uint64_t)v23, (uint64_t)v21, type metadata accessor for PBCycleTracking);
    PBTypedData.cycleTracking.setter((uint64_t)v21);
    sub_22D257214((uint64_t)v23, type metadata accessor for PBCycleTracking);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a4, 0, 1, v28);
  }
}

uint64_t sub_22D252614@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v87 = a3;
  sub_22D255FA8(0, &qword_268540D80, type metadata accessor for PBCycleTracking.Range, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v79 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v82 = (uint64_t)&v75 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v80 = (uint64_t)&v75 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v75 - v11;
  uint64_t v13 = type metadata accessor for PBCycleTracking.Range(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v76 = (uint64_t)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v81 = (uint64_t)&v75 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v75 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v75 - v22;
  uint64_t v24 = type metadata accessor for PBCycleTracking(0);
  uint64_t v84 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v83 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v75 - v27;
  sub_22D2BBFE0();
  uint64_t v85 = v24;
  uint64_t v29 = *(int *)(v24 + 20);
  if (qword_26853D158 != -1) {
    swift_once();
  }
  *(void *)&v28[v29] = qword_268540560;
  swift_retain();
  sub_22D253A78(objc_msgSend(a1, sel_cycleLengthLowerPercentile), objc_msgSend(a1, sel_cycleLengthUpperPercentile), (uint64_t)v12);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  uint64_t v88 = v13;
  uint64_t v78 = v30;
  unsigned int v31 = v30((uint64_t)v12, 1, v13);
  uint64_t v77 = v14;
  if (v31 == 1)
  {
    sub_22D256FD4((uint64_t)v12, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  }
  else
  {
    uint64_t v32 = v14;
    uint64_t v75 = a1;
    sub_22D257044((uint64_t)v12, (uint64_t)v23, type metadata accessor for PBCycleTracking.Range);
    sub_22D2570AC((uint64_t)v23, (uint64_t)v21, type metadata accessor for PBCycleTracking.Range);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCycleTracking._StorageClass(0);
      swift_allocObject();
      uint64_t v33 = swift_retain();
      *(void *)&v28[v29] = sub_22D19DCBC(v33);
      swift_release();
    }
    uint64_t v34 = *(void *)&v28[v29];
    uint64_t v35 = v80;
    sub_22D257044((uint64_t)v21, v80, type metadata accessor for PBCycleTracking.Range);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v88);
    uint64_t v36 = v35;
    uint64_t v37 = v82;
    sub_22D257114(v36, v82, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    uint64_t v38 = v34
        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalCycleLengthRange;
    swift_beginAccess();
    swift_retain();
    sub_22D257194(v37, v38, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    swift_endAccess();
    swift_release();
    sub_22D257214((uint64_t)v23, type metadata accessor for PBCycleTracking.Range);
    a1 = v75;
  }
  id v39 = objc_msgSend(a1, sel_cycleLengthMedian);
  uint64_t v40 = (uint64_t)v79;
  if (v39)
  {
    id v41 = v39;
    unsigned int v42 = objc_msgSend(v39, sel_intValue);

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCycleTracking._StorageClass(0);
      swift_allocObject();
      uint64_t v43 = swift_retain();
      *(void *)&v28[v29] = sub_22D19DCBC(v43);
      swift_release();
    }
    uint64_t v44 = *(void *)&v28[v29];
    swift_beginAccess();
    *(_DWORD *)(v44 + 24) = v42;
  }
  sub_22D253A78(objc_msgSend(a1, sel_menstruationLengthLowerPercentile), objc_msgSend(a1, sel_menstruationLengthUpperPercentile), v40);
  uint64_t v45 = v88;
  if (v78(v40, 1, v88) == 1)
  {
    sub_22D256FD4(v40, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
  }
  else
  {
    uint64_t v46 = v81;
    sub_22D257044(v40, v81, type metadata accessor for PBCycleTracking.Range);
    uint64_t v47 = v46;
    uint64_t v48 = v76;
    sub_22D2570AC(v47, v76, type metadata accessor for PBCycleTracking.Range);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCycleTracking._StorageClass(0);
      swift_allocObject();
      uint64_t v49 = swift_retain();
      uint64_t v45 = v88;
      *(void *)&v28[v29] = sub_22D19DCBC(v49);
      swift_release();
    }
    uint64_t v50 = *(void *)&v28[v29];
    uint64_t v51 = v80;
    sub_22D257044(v48, v80, type metadata accessor for PBCycleTracking.Range);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v51, 0, 1, v45);
    uint64_t v52 = v82;
    sub_22D257114(v51, v82, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    uint64_t v53 = v50
        + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthRange;
    swift_beginAccess();
    swift_retain();
    sub_22D257194(v52, v53, &qword_268540D80, type metadata accessor for PBCycleTracking.Range);
    swift_endAccess();
    swift_release();
    sub_22D257214(v81, type metadata accessor for PBCycleTracking.Range);
  }
  id v54 = objc_msgSend(a1, sel_menstruationLengthMedian);
  if (v54)
  {
    uint64_t v55 = v54;
    unsigned int v56 = objc_msgSend(v54, sel_intValue);

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCycleTracking._StorageClass(0);
      swift_allocObject();
      uint64_t v57 = swift_retain();
      *(void *)&v28[v29] = sub_22D19DCBC(v57);
      swift_release();
    }
    uint64_t v58 = (unsigned int *)(*(void *)&v28[v29]
                         + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__typicalPeriodLengthDays);
    swift_beginAccess();
    *uint64_t v58 = v56;
  }
  id v59 = objc_msgSend(a1, sel_lastMenstruationStartDayIndex);
  uint64_t v60 = v86;
  if (v59)
  {
    uint64_t v61 = v59;
    uint64_t v62 = sub_22D253BEC((uint64_t)objc_msgSend(v59, sel_integerValue));
    uint64_t v64 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCycleTracking._StorageClass(0);
      swift_allocObject();
      uint64_t v65 = swift_retain();
      *(void *)&v28[v29] = sub_22D19DCBC(v65);
      swift_release();
    }
    uint64_t v66 = (uint64_t *)(*(void *)&v28[v29]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon15PBCycleTrackingP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__lastMenstrualPeriodDate);
    swift_beginAccess();
    *uint64_t v66 = v62;
    v66[1] = v64;

    swift_bridgeObjectRelease();
  }
  if (*(void *)(v60 + 16))
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCycleTracking._StorageClass(0);
      swift_allocObject();
      uint64_t v67 = swift_retain();
      *(void *)&v28[v29] = sub_22D19DCBC(v67);
      swift_release();
    }
    uint64_t v68 = *(void *)&v28[v29];
    swift_beginAccess();
    *(void *)(v68 + 16) = v60;
    swift_bridgeObjectRelease();
  }
  uint64_t v69 = (uint64_t)v83;
  sub_22D2BBFE0();
  uint64_t v70 = v85;
  *(void *)(v69 + *(int *)(v85 + 20)) = qword_268540560;
  swift_retain();
  char v71 = sub_22D1B6AC0((uint64_t)v28, v69);
  sub_22D257214(v69, type metadata accessor for PBCycleTracking);
  if (v71)
  {
    sub_22D257214((uint64_t)v28, type metadata accessor for PBCycleTracking);
    uint64_t v72 = 1;
    uint64_t v73 = v87;
  }
  else
  {
    uint64_t v73 = v87;
    sub_22D257044((uint64_t)v28, v87, type metadata accessor for PBCycleTracking);
    uint64_t v72 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v73, v72, 1, v70);
}

uint64_t sub_22D2530B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v64 = a1;
  sub_22D255FA8(0, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v60 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v59 = (uint64_t)&v54 - v7;
  uint64_t v8 = type metadata accessor for PBCycleTracking.SexualActivity(0);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v56 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v54 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (uint64_t)&v54 - v14;
  uint64_t v15 = type metadata accessor for PBCycleTracking.Event(0);
  uint64_t v63 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v54 - v19;
  sub_22D2BBFE0();
  uint64_t v21 = *(int *)(v15 + 20);
  if (qword_26853D1A8 != -1) {
    swift_once();
  }
  *(void *)&v20[v21] = qword_268540628;
  uint64_t v22 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  uint64_t v23 = *(int *)(v22 + 32);
  uint64_t v62 = v2;
  uint64_t v24 = *(void *)(v2 + v23);
  swift_retain();
  if ((v24 & 2) != 0)
  {
    id v25 = objc_msgSend(v64, sel_menstrualFlow);
    if ((unint64_t)v25 <= 5)
    {
      id v26 = v25;
      uint64_t v55 = a2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBCycleTracking.Event._StorageClass(0);
        swift_allocObject();
        uint64_t v27 = swift_retain();
        *(void *)&v20[v21] = sub_22D1A1150(v27);
        swift_release();
      }
      uint64_t v28 = *(void *)&v20[v21];
      swift_beginAccess();
      *(void *)(v28 + 32) = v26;
      *(unsigned char *)(v28 + 40) = 1;
      a2 = v55;
    }
  }
  if ((v24 & 1) != 0 && objc_msgSend(v64, sel_intermenstrualBleeding))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCycleTracking.Event._StorageClass(0);
      swift_allocObject();
      uint64_t v29 = swift_retain();
      *(void *)&v20[v21] = sub_22D1A1150(v29);
      swift_release();
    }
    uint64_t v30 = (unsigned char *)(*(void *)&v20[v21]
                  + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__hadSpotting);
    swift_beginAccess();
    unsigned char *v30 = 1;
  }
  if ((v24 & 4) != 0)
  {
    id v31 = objc_msgSend(v64, sel_sexualActivity);
    if (v31)
    {
      id v32 = v31;
      uint64_t v55 = a2;
      uint64_t v33 = v58;
      sub_22D2BBFE0();
      char *v13 = 1;
      v13[1] = v32 == (id)1;
      uint64_t v34 = v61;
      sub_22D257044((uint64_t)v13, v61, type metadata accessor for PBCycleTracking.SexualActivity);
      uint64_t v35 = v56;
      sub_22D2570AC(v34, v56, type metadata accessor for PBCycleTracking.SexualActivity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBCycleTracking.Event._StorageClass(0);
        swift_allocObject();
        uint64_t v36 = swift_retain();
        *(void *)&v20[v21] = sub_22D1A1150(v36);
        swift_release();
      }
      uint64_t v37 = *(void *)&v20[v21];
      uint64_t v38 = v59;
      sub_22D257044(v35, v59, type metadata accessor for PBCycleTracking.SexualActivity);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v38, 0, 1, v33);
      uint64_t v39 = v60;
      sub_22D257114(v38, v60, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
      uint64_t v40 = v37
          + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__sexualActivity;
      swift_beginAccess();
      swift_retain();
      sub_22D257194(v39, v40, &qword_268540DA8, type metadata accessor for PBCycleTracking.SexualActivity);
      swift_endAccess();
      swift_release();
      sub_22D257214(v61, type metadata accessor for PBCycleTracking.SexualActivity);
      a2 = v55;
    }
  }
  unint64_t v41 = (unint64_t)objc_msgSend(v64, sel_symptoms);
  unint64_t v42 = *(void *)(v62 + *(int *)(v22 + 36)) & v41;
  if (v42)
  {
    uint64_t v43 = sub_22D26A1E4(v42);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCycleTracking.Event._StorageClass(0);
      swift_allocObject();
      uint64_t v44 = swift_retain();
      *(void *)&v20[v21] = sub_22D1A1150(v44);
      swift_release();
    }
    uint64_t v45 = (void *)(*(void *)&v20[v21]
                   + OBJC_IVAR____TtCVV19HealthRecordsDaemon15PBCycleTracking5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__enumSymptoms);
    swift_beginAccess();
    void *v45 = v43;
    swift_bridgeObjectRelease();
  }
  sub_22D2BBFE0();
  *(void *)&v18[*(int *)(v15 + 20)] = qword_268540628;
  swift_retain();
  char v46 = sub_22D1B6CBC((uint64_t)v20, (uint64_t)v18);
  sub_22D257214((uint64_t)v18, type metadata accessor for PBCycleTracking.Event);
  if (v46)
  {
    sub_22D257214((uint64_t)v20, type metadata accessor for PBCycleTracking.Event);
    uint64_t v47 = 1;
  }
  else
  {
    uint64_t v48 = sub_22D253BEC((uint64_t)objc_msgSend(v64, sel_dayIndex));
    uint64_t v50 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBCycleTracking.Event._StorageClass(0);
      swift_allocObject();
      uint64_t v51 = swift_retain();
      *(void *)&v20[v21] = sub_22D1A1150(v51);
      swift_release();
    }
    uint64_t v52 = *(void *)&v20[v21];
    swift_beginAccess();
    *(void *)(v52 + 16) = v48;
    *(void *)(v52 + 24) = v50;
    swift_bridgeObjectRelease();
    sub_22D257044((uint64_t)v20, a2, type metadata accessor for PBCycleTracking.Event);
    uint64_t v47 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(a2, v47, 1, v15);
}

void sub_22D253828(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PBCycleTracking.Cycle(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v9 + 2) = 0;
  *((void *)v9 + 3) = 0xE000000000000000;
  *((_DWORD *)v9 + 10) = 0;
  sub_22D2BBFE0();
  id v10 = objc_msgSend(a1, sel_menstruationSegment);
  uint64_t v11 = objc_msgSend(v10, sel_days);

  *(void *)uint64_t v9 = sub_22D253BEC((uint64_t)v11);
  *((void *)v9 + 1) = v12;
  id v13 = objc_msgSend(a1, sel_lastDayIndex);
  if (!v13) {
    goto LABEL_7;
  }
  uint64_t v14 = v13;
  uint64_t v15 = objc_msgSend(v13, sel_integerValue);

  *((void *)v9 + 2) = sub_22D253BEC((uint64_t)v15);
  *((void *)v9 + 3) = v16;
  int64_t v17 = v15 - v11;
  if (__OFSUB__(v15, v11))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v19 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v19 <= 0x7FFFFFFF)
  {
    *((_DWORD *)v9 + 10) = v19;
LABEL_7:
    id v20 = objc_msgSend(a1, sel_menstruationSegment);
    objc_msgSend(v20, sel_days);
    uint64_t v22 = v21;

    if (v22 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v22 <= 0x7FFFFFFF)
    {
      *((_DWORD *)v9 + 11) = v22;
      *((void *)v9 + 4) = a2;
      sub_22D2570AC((uint64_t)v9, a3, type metadata accessor for PBCycleTracking.Cycle);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
      swift_bridgeObjectRetain();
      sub_22D257214((uint64_t)v9, type metadata accessor for PBCycleTracking.Cycle);
      return;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_22D253A78@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PBCycleTracking.Range(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = 0;
  sub_22D2BBFE0();
  if (!a1)
  {
    if (!a2)
    {
      sub_22D257214((uint64_t)v9, type metadata accessor for PBCycleTracking.Range);
      uint64_t v11 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, v11, 1, v6);
    }
    goto LABEL_5;
  }
  *(_DWORD *)uint64_t v9 = objc_msgSend(a1, sel_intValue);
  if (a2)
  {
LABEL_5:
    unsigned int v10 = objc_msgSend(a2, sel_intValue);

    *((_DWORD *)v9 + 1) = v10;
    goto LABEL_6;
  }

LABEL_6:
  sub_22D257044((uint64_t)v9, a3, type metadata accessor for PBCycleTracking.Range);
  uint64_t v11 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, v11, 1, v6);
}

uint64_t sub_22D253BEC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_22D2BBC30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = self;
  uint64_t v9 = type metadata accessor for ClinicalSharingCycleTrackingQuery();
  unsigned int v10 = (void *)sub_22D2BBD30();
  id v11 = objc_msgSend(v8, sel_hk_dateOnDayIndex_atHour_calendar_, a1, 0, v10);

  sub_22D2BBC00();
  id v12 = objc_retain(*(id *)(*(void *)(v2 + *(int *)(v9 + 20))
                          + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
  uint64_t v13 = (void *)sub_22D2BBBC0();
  id v14 = objc_msgSend(v12, sel_stringFromDate_, v13);

  uint64_t v15 = sub_22D2BCBD0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_22D253D94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D255FA8(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v23[-v8];
  uint64_t v10 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22D254118(a1, (uint64_t)&v27);
  if (v29)
  {
    uint64_t v13 = type metadata accessor for PBCategorySeries.Event(0);
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a2, 1, 1, v13);
  }
  else
  {
    uint64_t v25 = v27;
    int v24 = v28;
    sub_22D2BBFE0();
    uint64_t v26 = type metadata accessor for PBCategorySeries.Event(0);
    uint64_t v16 = *(int *)(v26 + 20);
    if (qword_26853CFD0 != -1) {
      swift_once();
    }
    *(void *)(a2 + v16) = qword_268540208;
    swift_retain();
    id v17 = objc_msgSend(a1, sel_startDate);
    sub_22D2BBC00();

    uint64_t v18 = sub_22D2BBC30();
    uint64_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v20 = 1;
    v19(v9, 0, 1, v18);
    if ((objc_msgSend(a1, sel_hasUndeterminedDuration) & 1) == 0)
    {
      id v21 = objc_msgSend(a1, sel_endDate);
      sub_22D2BBC00();

      uint64_t v20 = 0;
    }
    v19(v7, v20, 1, v18);
    sub_22D24DD54((uint64_t)v9, (uint64_t)v7, (uint64_t)v12);
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_22D256FD4((uint64_t)v7, &qword_26AEC0F48, MEMORY[0x263F07490]);
    sub_22D256FD4((uint64_t)v9, &qword_26AEC0F48, v22);
    PBCategorySeries.Event.recordedTime.setter((uint64_t)v12);
    uint64_t v27 = v25;
    unsigned __int8 v28 = v24 & 1;
    PBCategorySeries.Event.cycleFactor.setter(&v27);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 56))(a2, 0, 1);
  }
}

void sub_22D254118(void *a1@<X0>, uint64_t a2@<X8>)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4) {
    goto LABEL_10;
  }
  uint64_t v5 = (void *)v4;
  id v6 = a1;
  id v7 = objc_msgSend(v5, sel_categoryType);
  id v8 = objc_msgSend(v7, sel_code);

  if (v8 != (id)193)
  {
    if (v8 == (id)192)
    {

      char v9 = 0;
      uint64_t v11 = 1;
      char v10 = 1;
      goto LABEL_11;
    }
    if (v8 == (id)191)
    {

      char v9 = 0;
      char v10 = 1;
      uint64_t v11 = 2;
      goto LABEL_11;
    }

LABEL_10:
    uint64_t v11 = 0;
    char v10 = 0;
    char v9 = 1;
    goto LABEL_11;
  }
  id v12 = objc_msgSend(v5, sel_value);

  char v9 = 0;
  char v10 = 1;
  uint64_t v11 = 5;
  switch((unint64_t)v12)
  {
    case 1uLL:
      char v9 = 0;
      uint64_t v11 = 3;
      break;
    case 2uLL:
      char v9 = 0;
      uint64_t v11 = 4;
      break;
    case 3uLL:
      break;
    case 4uLL:
      char v9 = 0;
      uint64_t v11 = 6;
      break;
    case 5uLL:
      char v9 = 0;
      uint64_t v11 = 7;
      break;
    case 6uLL:
      char v9 = 0;
      uint64_t v11 = 8;
      break;
    case 7uLL:
      char v9 = 0;
      uint64_t v11 = 9;
      break;
    default:
      char v9 = 0;
      char v10 = 1;
      uint64_t v11 = 3;
      break;
  }
LABEL_11:
  *(void *)a2 = v11;
  *(unsigned char *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 9) = v9;
}

unint64_t sub_22D2542C4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a3 + 16))
  {
    unint64_t v8 = result;
    uint64_t result = sub_22D04EA20(a4);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(a3 + 56) + 8 * result);
      swift_bridgeObjectRetain();
      char v11 = sub_22D2A93A8(a2, v10);
      uint64_t result = swift_bridgeObjectRelease();
      if (v11)
      {
        uint64_t result = swift_beginAccess();
        if ((v8 & ~*(void *)(a5 + 16)) != 0) {
          *(void *)(a5 + 16) |= v8;
        }
      }
    }
  }
  return result;
}

uint64_t sub_22D25436C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_22CFF1BEC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_22D2543AC(unint64_t a1, void (*a2)(id **))
{
  uint64_t v3 = v2;
  unsigned __int8 v28 = a2;
  sub_22D255FA8(0, &qword_268543160, type metadata accessor for PBCategorySeries.Event, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v21 - v6;
  uint64_t v27 = type metadata accessor for PBCategorySeries.Event(0);
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_22D2BD470())
  {
    uint64_t v21 = v3;
    unint64_t v25 = a1 & 0xC000000000000001;
    id v12 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v13 = MEMORY[0x263F8EE78];
    uint64_t v14 = 4;
    int v24 = (id *)a1;
    while (1)
    {
      uint64_t v15 = v25 ? (id *)MEMORY[0x230F7AF90](v14 - 4, a1) : (id *)*(id *)(a1 + 8 * v14);
      a1 = (unint64_t)v15;
      uint64_t v3 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      uint64_t v16 = (void *)MEMORY[0x230F7B690]();
      char v29 = (id *)a1;
      v28(&v29);

      if ((*v12)(v7, 1, v27) == 1)
      {
        sub_22D256FD4((uint64_t)v7, &qword_268543160, type metadata accessor for PBCategorySeries.Event);
      }
      else
      {
        uint64_t v17 = v22;
        sub_22D257044((uint64_t)v7, v22, type metadata accessor for PBCategorySeries.Event);
        sub_22D257044(v17, v26, type metadata accessor for PBCategorySeries.Event);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_22D281EF8(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v19 = *(void *)(v13 + 16);
        unint64_t v18 = *(void *)(v13 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v13 = sub_22D281EF8(v18 > 1, v19 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v19 + 1;
        sub_22D257044(v26, v13+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, type metadata accessor for PBCategorySeries.Event);
      }
      a1 = (unint64_t)v24;
      ++v14;
      if (v3 == v11)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

unint64_t sub_22D25472C(unint64_t a1, void (*a2)(id **))
{
  uint64_t v3 = v2;
  unsigned __int8 v28 = a2;
  sub_22D255FA8(0, &qword_268543260, type metadata accessor for PBCycleTracking.Event, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v21 - v6;
  uint64_t v27 = type metadata accessor for PBCycleTracking.Event(0);
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_22D2BD470())
  {
    uint64_t v21 = v3;
    unint64_t v25 = a1 & 0xC000000000000001;
    id v12 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v13 = MEMORY[0x263F8EE78];
    uint64_t v14 = 4;
    int v24 = (id *)a1;
    while (1)
    {
      uint64_t v15 = v25 ? (id *)MEMORY[0x230F7AF90](v14 - 4, a1) : (id *)*(id *)(a1 + 8 * v14);
      a1 = (unint64_t)v15;
      uint64_t v3 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      uint64_t v16 = (void *)MEMORY[0x230F7B690]();
      char v29 = (id *)a1;
      v28(&v29);

      if ((*v12)(v7, 1, v27) == 1)
      {
        sub_22D256FD4((uint64_t)v7, &qword_268543260, type metadata accessor for PBCycleTracking.Event);
      }
      else
      {
        uint64_t v17 = v22;
        sub_22D257044((uint64_t)v7, v22, type metadata accessor for PBCycleTracking.Event);
        sub_22D257044(v17, v26, type metadata accessor for PBCycleTracking.Event);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_22D281F40(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v19 = *(void *)(v13 + 16);
        unint64_t v18 = *(void *)(v13 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v13 = sub_22D281F40(v18 > 1, v19 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v19 + 1;
        sub_22D257044(v26, v13+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, type metadata accessor for PBCycleTracking.Event);
      }
      a1 = (unint64_t)v24;
      ++v14;
      if (v3 == v11)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_22D254AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBF00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  uint64_t v18 = v8;
  unint64_t v19 = (uint64_t *)(v8 + 16);
  sub_22D030474(0, (unint64_t *)&qword_26853EBA0);
  *id v7 = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F09330]);
  uint64_t v9 = *MEMORY[0x263F44A40];
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, v9, v4);
  uint64_t v17 = a2;
  sub_22D2542C4(1uLL, (uint64_t)v7, a1, a2, v8);
  uint64_t v11 = *(void (**)(void *, uint64_t))(v5 + 8);
  v11(v7, v4);
  *id v7 = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F09380]);
  v10(v7, v9, v4);
  uint64_t v12 = a2;
  uint64_t v13 = v18;
  sub_22D2542C4(2uLL, (uint64_t)v7, a1, v12, v18);
  v11(v7, v4);
  *id v7 = MEMORY[0x230F7ACF0]((id)*MEMORY[0x263F093F0]);
  v10(v7, v9, v4);
  sub_22D2542C4(4uLL, (uint64_t)v7, a1, v17, v13);
  v11(v7, v4);
  uint64_t v14 = v19;
  swift_beginAccess();
  uint64_t v15 = *v14;
  swift_release();
  return v15;
}

uint64_t sub_22D254D0C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t *sub_22D254D1C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22D2BBC90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22D2BB6F0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_22D2BBE00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_22D254EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = sub_22D2BBE00();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t sub_22D254FB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BB6F0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_22D2BBE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t sub_22D2550F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v14 = a3[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_22D2BBE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_22D255250(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_22D2BBE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t sub_22D25537C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_22D2BBE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_22D2554B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D2554C8);
}

uint64_t sub_22D2554C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22D2BBC90();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_22D2BB6F0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[6];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = sub_22D2BBE00();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[10];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_22D255648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D25565C);
}

uint64_t sub_22D25565C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_22D2BBC90();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5]) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_22D2BB6F0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_22D2BBE00();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[10];
  return v16(v18, a2, a2, v17);
}

uint64_t sub_22D2557DC()
{
  uint64_t result = sub_22D2BBC90();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22D2BB6F0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_22D2BBE00();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_22D255904()
{
  if (!qword_2685430F0)
  {
    sub_22D2559F0();
    sub_22D255C0C();
    sub_22D256A54(&qword_268543128, (void (*)(uint64_t))sub_22D2559F0);
    sub_22D256A54(&qword_268543130, (void (*)(uint64_t))sub_22D255C0C);
    unint64_t v0 = sub_22D2BC4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685430F0);
    }
  }
}

void sub_22D2559F0()
{
  if (!qword_2685430F8)
  {
    sub_22D2566C8(255, (unint64_t *)&qword_268543100, type metadata accessor for PBTypedData, MEMORY[0x263EFDCF0]);
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D255AFC(255, &qword_268543108, MEMORY[0x263EFDCF0]);
    sub_22D255B84();
    sub_22D255E4C(&qword_268543120, &qword_268543108, v0);
    unint64_t v1 = sub_22D2BC520();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_2685430F8);
    }
  }
}

void sub_22D255AFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_22D030474(255, &qword_268543110);
    unint64_t v7 = sub_22CFF49FC();
    unint64_t v8 = a3(a1, v6, v7, MEMORY[0x263F8E4E0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22D255B84()
{
  unint64_t result = qword_268543118;
  if (!qword_268543118)
  {
    sub_22D2566C8(255, (unint64_t *)&qword_268543100, type metadata accessor for PBTypedData, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543118);
  }
  return result;
}

void sub_22D255C0C()
{
  if (!qword_26853D760)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D256034(255, (unint64_t *)&qword_26853D768, MEMORY[0x263EFDCF0]);
    type metadata accessor for PBTypedData(255);
    sub_22D2560C4(&qword_26853D780, (unint64_t *)&qword_26853D768, v0);
    unint64_t v1 = sub_22D2BC3D0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26853D760);
    }
  }
}

void sub_22D255CD8()
{
  if (!qword_268543138)
  {
    sub_22D255904();
    type metadata accessor for ClinicalSharingQueryOutput(255);
    sub_22D256A54(&qword_268543140, (void (*)(uint64_t))sub_22D255904);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543138);
    }
  }
}

unint64_t sub_22D255D84()
{
  unint64_t result = qword_26853E828;
  if (!qword_26853E828)
  {
    sub_22D2566C8(255, (unint64_t *)&qword_26853E7F8, type metadata accessor for ClinicalSharingQueryOutput, MEMORY[0x263EFDE08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853E828);
  }
  return result;
}

uint64_t sub_22D255E0C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22D255E44(uint64_t a1, uint64_t a2)
{
  sub_22D23F464(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_22D255E4C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D255AFC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D255E94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D25659C(a1, (uint64_t (*)(void))sub_22D24FE3C, a2);
}

uint64_t sub_22D255EB0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D250C80(*a1, a2);
}

uint64_t sub_22D255F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_22D251664(a1, v6, a2);
}

void sub_22D255FA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D25600C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D253D94(*a1, a2);
}

void sub_22D256034(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_22D056DB0(255, (unint64_t *)&qword_26853D770, (unint64_t *)&qword_26853D778);
    uint64_t v7 = v6;
    unint64_t v8 = sub_22CFF49FC();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_22D2560C4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D256034(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D256108()
{
  if (!qword_268543178)
  {
    sub_22D056DB0(255, &qword_268543180, &qword_268543188);
    sub_22D2561A0();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543178);
    }
  }
}

unint64_t sub_22D2561A0()
{
  unint64_t result = qword_268543190;
  if (!qword_268543190)
  {
    sub_22D056DB0(255, &qword_268543180, &qword_268543188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543190);
  }
  return result;
}

void sub_22D256210()
{
  if (!qword_268543198)
  {
    sub_22D2566C8(255, &qword_2685431A0, type metadata accessor for PBCycleTracking.Cycle, MEMORY[0x263EFDCF0]);
    sub_22D2562FC();
    sub_22D2563B8();
    sub_22D256A54(&qword_2685431C0, (void (*)(uint64_t))sub_22D2562FC);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543198);
    }
  }
}

void sub_22D2562FC()
{
  if (!qword_2685431A8)
  {
    sub_22D256108();
    sub_22CFF49FC();
    sub_22D256A54(&qword_2685431B0, (void (*)(uint64_t))sub_22D256108);
    unint64_t v0 = sub_22D2BC430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685431A8);
    }
  }
}

unint64_t sub_22D2563B8()
{
  unint64_t result = qword_2685431B8;
  if (!qword_2685431B8)
  {
    sub_22D2566C8(255, &qword_2685431A0, type metadata accessor for PBCycleTracking.Cycle, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685431B8);
  }
  return result;
}

void sub_22D256440()
{
  if (!qword_2685431C8)
  {
    sub_22D256210();
    sub_22D256A54(&qword_2685431D0, (void (*)(uint64_t))sub_22D256210);
    unint64_t v0 = sub_22D2BC510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685431C8);
    }
  }
}

void sub_22D2564D4()
{
  if (!qword_2685431D8)
  {
    sub_22D256440();
    type metadata accessor for PBTypedData(255);
    sub_22D256A54(&qword_2685431E0, (void (*)(uint64_t))sub_22D256440);
    unint64_t v0 = sub_22D2BC3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685431D8);
    }
  }
}

uint64_t sub_22D256584@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D25659C(a1, (uint64_t (*)(void))sub_22D251858, a2);
}

uint64_t sub_22D25659C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for ClinicalSharingCycleTrackingQuery();
  uint64_t result = a2(*a1);
  *a3 = result;
  return result;
}

uint64_t sub_22D25661C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_22D252124(a1, v2 + v6, v7, a2);
}

void sub_22D2566C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_22CFF49FC();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_22D256744()
{
  if (!qword_2685431F8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D256840(255, &qword_268543200, MEMORY[0x263EFDCF0]);
    sub_22D255FA8(255, &qword_268543210, type metadata accessor for PBCycleTracking.Event, MEMORY[0x263F8D488]);
    sub_22D2568D0(&qword_268543218, &qword_268543200, v0);
    unint64_t v1 = sub_22D2BC450();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_2685431F8);
    }
  }
}

void sub_22D256840(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_22D056DB0(255, &qword_268543208, (unint64_t *)&qword_26853ED78);
    uint64_t v7 = v6;
    unint64_t v8 = sub_22CFF49FC();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_22D2568D0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D256840(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D256914()
{
  if (!qword_268543220)
  {
    sub_22D256744();
    sub_22D256A54(&qword_268543228, (void (*)(uint64_t))sub_22D256744);
    unint64_t v0 = sub_22D2BC410();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543220);
    }
  }
}

void sub_22D2569A8()
{
  if (!qword_268543230)
  {
    sub_22D256914();
    type metadata accessor for PBCycleTracking.Cycle(255);
    sub_22D256A54(&qword_268543238, (void (*)(uint64_t))sub_22D256914);
    unint64_t v0 = sub_22D2BC3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543230);
    }
  }
}

uint64_t sub_22D256A54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22D256A9C()
{
  unint64_t result = qword_268543240;
  if (!qword_268543240)
  {
    sub_22D2566C8(255, &qword_2685431F0, type metadata accessor for PBCycleTracking.Cycle, MEMORY[0x263EFDE08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543240);
  }
  return result;
}

uint64_t sub_22D256B24()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22D256B5C(uint64_t a1, uint64_t a2)
{
  sub_22D0AF2BC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t objectdestroy_7Tm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  uint64_t v8 = v6 + v1[8];
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v6 + v1[12];
  uint64_t v11 = sub_22D2BBE00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

unint64_t sub_22D256CDC@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  type metadata accessor for ClinicalSharingCycleTrackingQuery();
  unint64_t result = sub_22D25472C(*a1, (void (*)(id **))sub_22D256FAC);
  *a2 = result;
  return result;
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  uint64_t v8 = v6 + v1[8];
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v6 + v1[12];
  uint64_t v11 = sub_22D2BBE00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  return MEMORY[0x270FA0238](v0, v5 + 8, v4);
}

void sub_22D256F08(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ClinicalSharingCycleTrackingQuery() - 8);
  sub_22D253828(*(void **)(v2+ ((*(void *)(v5 + 64)+ ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), *a1, a2);
}

uint64_t sub_22D256FAC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D2530B8(*a1, a2);
}

uint64_t sub_22D256FD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D255FA8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D257044(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D2570AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D257114(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D255FA8(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D257194(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D255FA8(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D257214(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingCycleTrackingQuery.CachedAuthorizations()
{
  return &type metadata for ClinicalSharingCycleTrackingQuery.CachedAuthorizations;
}

unint64_t sub_22D257288()
{
  unint64_t result = qword_268543268;
  if (!qword_268543268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543268);
  }
  return result;
}

unint64_t sub_22D2572E0()
{
  unint64_t result = qword_268543270;
  if (!qword_268543270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543270);
  }
  return result;
}

unint64_t sub_22D257338()
{
  unint64_t result = qword_268543278;
  if (!qword_268543278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543278);
  }
  return result;
}

unint64_t sub_22D257390()
{
  unint64_t result = qword_268543280;
  if (!qword_268543280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543280);
  }
  return result;
}

uint64_t sub_22D2573E4@<X0>(char *a1@<X8>)
{
  sub_22CFF9E78();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22D2BBAA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v21 - v10;
  sub_22D2BBA90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_22D085138((uint64_t)v4);
LABEL_8:
    uint64_t v18 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v18, 1, v5);
  }
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v12(v11, v4, v5);
  sub_22D2BBA80();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  if (!v14)
  {
    unint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19(v9, v5);
    v19(v11, v5);
    goto LABEL_8;
  }
  sub_22D2BBA60();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v9, v5);
  swift_bridgeObjectRelease();
  if (!v16)
  {
    v17(v11, v5);
    goto LABEL_8;
  }
  v12(a1, v11, v5);
  uint64_t v18 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v18, 1, v5);
}

uint64_t sub_22D257654()
{
  unint64_t v1 = *(void *)(sub_22D2BB9F0() + 16);
  swift_bridgeObjectRelease();
  if (v1 < 3) {
    goto LABEL_4;
  }
  uint64_t v2 = sub_22D2BB9F0();
  v10[0] = 0xD000000000000011;
  v10[1] = 0x800000022D2D77A0;
  MEMORY[0x270FA5388](v2);
  v9[2] = v10;
  uint64_t v3 = sub_22D2577CC(sub_22D25788C, (uint64_t)v9, v2);
  char v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0 || (uint64_t v6 = *(void *)(sub_22D2BB9F0() + 16), swift_bridgeObjectRelease(), v6 < v3))
  {
LABEL_4:
    sub_22D0BE8F0();
    swift_allocError();
    *(void *)(v7 + 8) = 0;
    *(void *)(v7 + 16) = 0;
    *(void *)uint64_t v7 = 2;
    *(unsigned char *)(v7 + 24) = 3;
    swift_willThrow();
    return v0;
  }
  uint64_t result = sub_22D2BB9F0();
  if (v3 < -1)
  {
    __break(1u);
  }
  else if ((unint64_t)(v3 + 1) < *(void *)(result + 16))
  {
    uint64_t v0 = *(void *)(result + 16 * (v3 + 1) + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D2577CC(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v6 = (uint64_t *)(a3 + 16 * v4 + 24);
    do
    {
      uint64_t v7 = *v6;
      v10[0] = *(v6 - 1);
      v10[1] = v7;
      swift_bridgeObjectRetain();
      char v8 = a1(v10);
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      v6 -= 2;
      --v4;
    }
    while (!(v8 & 1 | (v4 == 0)));
  }
  return v4;
}

uint64_t sub_22D25788C(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_22D2BD660() & 1;
  }
}

uint64_t Publisher<>.catchAndRefreshToken(accountIdentifier:accountStore:performer:webRequest:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = a4;
  uint64_t v35 = a6;
  char v46 = a2;
  uint64_t v47 = a3;
  uint64_t v37 = a1;
  uint64_t v9 = sub_22D2BBC90();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF7DC0(255);
  uint64_t v14 = v13;
  uint64_t v44 = v13;
  uint64_t v43 = sub_22D257D3C(&qword_26853D880, sub_22CFF7DC0);
  *(void *)&long long v49 = a5;
  *((void *)&v49 + 1) = v14;
  uint64_t v50 = a6;
  uint64_t v51 = v43;
  uint64_t v15 = sub_22D2BC570();
  uint64_t v38 = v15;
  uint64_t v48 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v36 = (char *)&v34 - v16;
  uint64_t v17 = type metadata accessor for WebRequestResponseError(255);
  uint64_t v41 = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v40 = WitnessTable;
  uint64_t v39 = sub_22D257D3C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
  *(void *)&long long v49 = v15;
  *((void *)&v49 + 1) = v17;
  uint64_t v50 = WitnessTable;
  uint64_t v51 = v39;
  uint64_t v42 = sub_22D2BC530();
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v20 = (char *)&v34 - v19;
  sub_22CFF4B00(a4, (uint64_t)&v49);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v37, v9);
  unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v22 = (v11 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v35;
  *(void *)(v23 + 16) = a5;
  *(void *)(v23 + 24) = v24;
  sub_22CFF8C10(&v49, v23 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v23 + v21, v12, v9);
  unint64_t v25 = v46;
  uint64_t v26 = v47;
  *(void *)(v23 + v22) = v46;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v26;
  id v27 = v25;
  swift_retain();
  unsigned __int8 v28 = v36;
  sub_22D2BC850();
  swift_release();
  sub_22CFF4B00(v34, (uint64_t)&v49);
  uint64_t v29 = swift_allocObject();
  sub_22CFF8C10(&v49, v29 + 16);
  uint64_t v30 = v38;
  sub_22D2BC840();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v30);
  uint64_t v31 = v42;
  swift_getWitnessTable();
  uint64_t v32 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v31);
  return v32;
}

uint64_t sub_22D257D3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D257D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v78 = a7;
  uint64_t v79 = a6;
  uint64_t v77 = a5;
  uint64_t v75 = a4;
  uint64_t v82 = a3;
  uint64_t v80 = a8;
  uint64_t v10 = sub_22D2BBC90();
  uint64_t v74 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v89 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for HTTPError();
  uint64_t v12 = MEMORY[0x270FA5388](v83);
  uint64_t v84 = (void *)((char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v71 - v14;
  uint64_t v86 = type metadata accessor for WebRequestResponseError.ErrorType(0);
  MEMORY[0x270FA5388](v86);
  uint64_t v87 = (uint64_t)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_22D2BBAA0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for WebRequestResponseError(0);
  MEMORY[0x270FA5388](v88);
  unint64_t v22 = (char *)v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_22D2BC390();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_26AEC3C90);
  uint64_t v90 = (uint8_t *)a1;
  sub_22D25994C(a1, (uint64_t)v22, type metadata accessor for WebRequestResponseError);
  uint64_t v76 = a2;
  sub_22CFF4B00(a2, (uint64_t)v93);
  uint64_t v85 = v24;
  unint64_t v25 = sub_22D2BC380();
  os_log_type_t v26 = sub_22D2BD050();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v81 = v15;
    uint64_t v28 = v27;
    uint64_t v72 = swift_slowAlloc();
    uint64_t v96 = v72;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v73 = v10;
    uint64_t v29 = WebRequestResponseError.safelyLoggableDescription.getter();
    uint64_t v91 = sub_22D0A4D24(v29, v30, &v96);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D259884((uint64_t)v22, type metadata accessor for WebRequestResponseError);
    *(_WORD *)(v28 + 12) = 2080;
    v71[1] = v28 + 14;
    uint64_t v31 = v94;
    uint64_t v32 = v95;
    __swift_project_boxed_opaque_existential_1(v93, v94);
    (*(void (**)(uint64_t, uint64_t))(v32 + 40))(v31, v32);
    uint64_t v33 = sub_22D2BB9E0();
    unint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v91 = v33;
    unint64_t v92 = v35;
    swift_bridgeObjectRetain();
    sub_22D2BD680();
    id v36 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v37 = sub_22D2BCC30();
    unint64_t v39 = v38;
    uint64_t v10 = v73;
    swift_bridgeObjectRelease();
    uint64_t v91 = sub_22D0A4D24(v37, v39, &v96);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
    _os_log_impl(&dword_22CFEE000, v25, v26, "WebRequestPerformer.catchAndRefreshToken: evaluating error %s for request %s", (uint8_t *)v28, 0x16u);
    uint64_t v40 = v72;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v40, -1, -1);
    uint64_t v41 = v28;
    uint64_t v15 = v81;
    MEMORY[0x230F7BDF0](v41, -1, -1);
  }
  else
  {
    sub_22D259884((uint64_t)v22, type metadata accessor for WebRequestResponseError);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
  }

  uint64_t v42 = v87;
  uint64_t v43 = (uint64_t)v90;
  sub_22D25994C((uint64_t)&v90[*(int *)(v88 + 20)], v87, type metadata accessor for WebRequestResponseError.ErrorType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v45 = v89;
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v59 = sub_22D2BC380();
    os_log_type_t v60 = sub_22D2BD060();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl(&dword_22CFEE000, v59, v60, "WebRequestPerformer.catchAndRefreshToken: re-throwing error", v61, 2u);
      MEMORY[0x230F7BDF0](v61, -1, -1);
    }

    sub_22D257D3C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    swift_allocError();
    sub_22D25994C(v43, v62, type metadata accessor for WebRequestResponseError);
    swift_willThrow();
    uint64_t v63 = type metadata accessor for WebRequestResponseError.ErrorType;
    uint64_t v64 = v42;
    return sub_22D259884(v64, v63);
  }
  sub_22D2598E4(v42, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for HTTPError);
  char v46 = v84;
  sub_22D25994C((uint64_t)v15, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for HTTPError);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_22D259884((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for HTTPError);
LABEL_16:
    uint64_t v65 = sub_22D2BC380();
    os_log_type_t v66 = sub_22D2BD060();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl(&dword_22CFEE000, v65, v66, "WebRequestPerformer.catchAndRefreshToken: re-throwing error", v67, 2u);
      MEMORY[0x230F7BDF0](v67, -1, -1);
    }

    sub_22D257D3C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    swift_allocError();
    sub_22D25994C(v43, v68, type metadata accessor for WebRequestResponseError);
    swift_willThrow();
    uint64_t v63 = (uint64_t (*)(void))type metadata accessor for HTTPError;
    uint64_t v64 = (uint64_t)v15;
    return sub_22D259884(v64, v63);
  }
  uint64_t v47 = v46[1];
  if (!v47) {
    goto LABEL_16;
  }
  v93[0] = *v46;
  v93[1] = v47;
  uint64_t v91 = 0x20726572616542;
  unint64_t v92 = 0xE700000000000000;
  sub_22D0B80BC();
  uint64_t v48 = v10;
  sub_22D0B8110();
  char v49 = sub_22D2BCB50();
  swift_bridgeObjectRelease();
  if ((v49 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v50 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v45, v82, v48);
  uint64_t v51 = sub_22D2BC380();
  os_log_type_t v52 = sub_22D2BD050();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v81 = v15;
    uint64_t v55 = v54;
    v93[0] = v54;
    *(_DWORD *)uint64_t v53 = 136315138;
    uint64_t v90 = v53 + 4;
    sub_22D257D3C((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v56 = sub_22D2BD630();
    uint64_t v91 = sub_22D0A4D24(v56, v57, v93);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v45, v48);
    _os_log_impl(&dword_22CFEE000, v51, v52, "WebRequestPerformer.catchAndRefreshToken: tryCatch: 401 response, requesting new accessToken for account: %s", v53, 0xCu);
    swift_arrayDestroy();
    uint64_t v58 = v55;
    uint64_t v15 = v81;
    MEMORY[0x230F7BDF0](v58, -1, -1);
    MEMORY[0x230F7BDF0](v53, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v45, v48);
  }

  uint64_t v70 = sub_22D2589DC(v82, v75, v77, v76);
  uint64_t result = sub_22D259884((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for HTTPError);
  *uint64_t v80 = v70;
  return result;
}

uint64_t sub_22D258818()
{
  uint64_t v1 = sub_22D2BBC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_22D258910@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(sub_22D2BBC90() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_22D257D84(a1, v2 + 32, v2 + v8, *(void **)(v2 + v9), *(void *)(v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), v5, v6, a2);
}

uint64_t sub_22D2589DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v40 = a3;
  uint64_t v6 = sub_22D2BBC90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2599B4();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  uint64_t v38 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D259B34();
  uint64_t v39 = v14;
  uint64_t v41 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D259C20();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23 + v21, v9, v6);
  *(void *)(v23 + v22) = a2;
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDE20];
  sub_22D259E5C(0, &qword_2685432D8, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v25 = a2;
  *(void *)&v44[0] = sub_22D2BC6F0();
  sub_22D259F14(&qword_2685432E0, &qword_2685432D8, v24);
  uint64_t v26 = sub_22D2BC720();
  swift_release();
  uint64_t v45 = v26;
  uint64_t v27 = v36;
  sub_22CFF4B00(v36, (uint64_t)v44);
  uint64_t v28 = swift_allocObject();
  sub_22CFF8C10(v44, v28 + 16);
  uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D259E5C(0, &qword_2685432A0, MEMORY[0x263EFDCF0]);
  sub_22D021C20(0, &qword_268542080);
  sub_22D259F14(&qword_2685432B0, &qword_2685432A0, v29);
  sub_22D2BC780();
  swift_release();
  swift_release();
  sub_22CFF4B00(v27, (uint64_t)v44);
  uint64_t v30 = swift_allocObject();
  sub_22CFF8C10(v44, v30 + 16);
  type metadata accessor for WebRequestResponseError(0);
  sub_22D257D3C(&qword_2685432C0, (void (*)(uint64_t))sub_22D2599B4);
  sub_22D257D3C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
  uint64_t v31 = v37;
  sub_22D2BC840();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v31);
  swift_retain();
  sub_22D2BC5D0();
  sub_22CFF7DC0(0);
  sub_22D257D3C(&qword_2685432D0, (void (*)(uint64_t))sub_22D259B34);
  sub_22D257D3C(&qword_26853D880, sub_22CFF7DC0);
  uint64_t v32 = v39;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v32);
  sub_22D257D3C(&qword_2685432E8, (void (*)(uint64_t))sub_22D259C20);
  uint64_t v33 = v42;
  uint64_t v34 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v33);
  return v34;
}

uint64_t sub_22D259068@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D259A90(0, &qword_268543288, type metadata accessor for WebRequestResponseError.ErrorType, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = type metadata accessor for WebRequestResponseError.ErrorType(0);
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D259A90(0, &qword_268543290, type metadata accessor for WebRequestResponseError, v6);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_22D2BC390();
  __swift_project_value_buffer(v17, (uint64_t)qword_26AEC3C90);
  id v18 = v16;
  id v19 = v16;
  uint64_t v20 = sub_22D2BC380();
  os_log_type_t v21 = sub_22D2BD060();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v44 = a3;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v49 = v24;
    uint64_t v42 = v9;
    uint64_t v43 = v12;
    *(_DWORD *)uint64_t v23 = 136315138;
    swift_getErrorValue();
    uint64_t v25 = sub_22D1E40E8(v48);
    uint64_t v47 = sub_22D0A4D24(v25, v26, &v49);
    unint64_t v9 = v42;
    uint64_t v12 = v43;
    sub_22D2BD220();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v20, v21, "WebRequestPerformer.catchAndRefreshToken: final error: %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v24, -1, -1);
    uint64_t v27 = v23;
    a3 = v44;
    MEMORY[0x230F7BDF0](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v49 = (uint64_t)v16;
  id v28 = v16;
  sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
  uint64_t v29 = type metadata accessor for WebRequestResponseError(0);
  char v30 = swift_dynamicCast();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  if (v30)
  {
    v31(v15, 0, 1, v29);
    uint64_t v32 = type metadata accessor for WebRequestResponseError;
    uint64_t v33 = (uint64_t)v15;
    uint64_t v34 = a3;
  }
  else
  {
    v31(v15, 1, 1, v29);
    sub_22D259590((uint64_t)v15, &qword_268543290, type metadata accessor for WebRequestResponseError);
    uint64_t v49 = (uint64_t)v16;
    id v35 = v16;
    uint64_t v36 = v46;
    char v37 = swift_dynamicCast();
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
    if (v37)
    {
      v38(v9, 0, 1, v36);
      sub_22D2598E4((uint64_t)v9, (uint64_t)v12, type metadata accessor for WebRequestResponseError.ErrorType);
    }
    else
    {
      v38(v9, 1, 1, v36);
      void *v12 = v16;
      swift_storeEnumTagMultiPayload();
      id v39 = v16;
      sub_22D259590((uint64_t)v9, &qword_268543288, type metadata accessor for WebRequestResponseError.ErrorType);
    }
    sub_22CFF4B00(a2, a3);
    uint64_t v34 = a3 + *(int *)(v29 + 20);
    uint64_t v32 = type metadata accessor for WebRequestResponseError.ErrorType;
    uint64_t v33 = (uint64_t)v12;
  }
  return sub_22D2598E4(v33, v34, v32);
}

uint64_t sub_22D259588@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D259068(a1, v2 + 16, a2);
}

uint64_t sub_22D259590(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D259A90(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_22D259600(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *a1;
  sub_22CFF4B00(a2, a3);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_22D2BD470()) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x230F7AF90](0, v4);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(v4 + 32);
  }
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  HKFHIRCredential.asAuthorizationHeader()();
  uint64_t v8 = v14;
  if (v14)
  {
    uint64_t v9 = v13;
    __swift_mutable_project_boxed_opaque_existential_1(a3, *(void *)(a3 + 24));
    v10._countAndFlagsBits = 0x7A69726F68747541;
    v10._object = (void *)0xED00006E6F697461;
    WebRequest.removeHeader(name:)(v10);
    uint64_t v11 = *(void **)(a3 + 24);
    uint64_t v12 = *(void *)(a3 + 32);
    v16.value._object = (void *)__swift_mutable_project_boxed_opaque_existential_1(a3, (uint64_t)v11);
    v16.name._countAndFlagsBits = (uint64_t)&v13;
    v16.name._object = v11;
    v16.value._countAndFlagsBits = v12;
    WebRequest.add(header:)(v16);

    sub_22D0B82BC(v9, v8);
  }
  else
  {
  }
}

id sub_22D2597AC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *a1;
  sub_22CFF4B00(a2, a3);
  *(void *)(a3 + *(int *)(type metadata accessor for WebRequestResponseError(0) + 20)) = v4;
  type metadata accessor for WebRequestResponseError.ErrorType(0);
  swift_storeEnumTagMultiPayload();
  return v4;
}

uint64_t sub_22D25981C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t result = sub_22D2B6970((uint64_t)v7, 0, 1, 0, 1, 1, a2, v5, v6);
  *a3 = result;
  return result;
}

uint64_t sub_22D259884(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D2598E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D25994C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_22D2599B4()
{
  if (!qword_268543298)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D259E5C(255, &qword_2685432A0, MEMORY[0x263EFDCF0]);
    sub_22D021C20(255, &qword_268542080);
    sub_22D259F14(&qword_2685432B0, &qword_2685432A0, v0);
    unint64_t v1 = sub_22D2BC450();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268543298);
    }
  }
}

void sub_22D259A90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22D259AF4()
{
  unint64_t result = qword_26AEC2FA8;
  if (!qword_26AEC2FA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AEC2FA8);
  }
  return result;
}

void sub_22D259B34()
{
  if (!qword_2685432B8)
  {
    sub_22D2599B4();
    type metadata accessor for WebRequestResponseError(255);
    sub_22D257D3C(&qword_2685432C0, (void (*)(uint64_t))sub_22D2599B4);
    sub_22D257D3C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    unint64_t v0 = sub_22D2BC530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685432B8);
    }
  }
}

void sub_22D259C20()
{
  if (!qword_2685432C8)
  {
    sub_22CFF7DC0(255);
    sub_22D259B34();
    sub_22D257D3C(&qword_26853D880, sub_22CFF7DC0);
    sub_22D257D3C(&qword_2685432D0, (void (*)(uint64_t))sub_22D259B34);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685432C8);
    }
  }
}

uint64_t sub_22D259D0C()
{
  uint64_t v1 = sub_22D2BBC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

void sub_22D259DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_22D2BBC90() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_22D1F1EDC(a1, a2, v2 + v6, v7);
}

void sub_22D259E5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_22D259A90(255, (unint64_t *)&qword_2685432A8, (uint64_t (*)(uint64_t))sub_22D259AF4, MEMORY[0x263F8D488]);
    uint64_t v7 = v6;
    uint64_t v8 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_22D259F14(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D259E5C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D259F58(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D259600(a1, v2 + 16, a2);
}

uint64_t sub_22D259F60()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

id sub_22D259F98@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D2597AC(a1, v2 + 16, a2);
}

uint64_t sub_22D259FA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D25981C(a1, v2, a2);
}

void *HKClinicalGatewayFeature.webRequestsForInteraction(_:substitutions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_msgSend(v3, sel_interactions);
  sub_22D1D3578();
  unint64_t v8 = sub_22D2BCE00();

  swift_bridgeObjectRetain();
  unint64_t v9 = sub_22D1D3904(v8, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_22D1D3710(v9, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_22D25A090()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_22D0D34F0(MEMORY[0x263F8EE78]);
  uint64_t v3 = *v0;
  if (v3)
  {
    sub_22D2BCBD0();
    *((void *)&v29 + 1) = v4;
    id v5 = v3;
    sub_22D2BD2C0();
    unint64_t v30 = sub_22D03490C();
    *(void *)&long long v29 = v5;
    sub_22D056B08(&v29, v28);
    id v6 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053DD0(v28, (uint64_t)v31, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_22D056B18((uint64_t)v31);
  }
  unint64_t v8 = v1[1];
  if (v8)
  {
    *(void *)&long long v29 = sub_22D2BCBD0();
    *((void *)&v29 + 1) = v9;
    id v10 = v8;
    sub_22D2BD2C0();
    unint64_t v30 = sub_22D03490C();
    *(void *)&long long v29 = v10;
    sub_22D056B08(&v29, v28);
    id v11 = v10;
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053DD0(v28, (uint64_t)v31, v12);
    swift_bridgeObjectRelease();
    sub_22D056B18((uint64_t)v31);
  }
  uint64_t v13 = v1[2];
  if (v13)
  {
    *(void *)&long long v29 = sub_22D2BCBD0();
    *((void *)&v29 + 1) = v14;
    id v15 = v13;
    sub_22D2BD2C0();
    unint64_t v30 = sub_22D03490C();
    *(void *)&long long v29 = v15;
    sub_22D056B08(&v29, v28);
    id v16 = v15;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053DD0(v28, (uint64_t)v31, v17);
    swift_bridgeObjectRelease();
    sub_22D056B18((uint64_t)v31);
  }
  unint64_t v18 = MEMORY[0x263F8D310];
  id v19 = v1[4];
  if (v19)
  {
    uint64_t v20 = v1[3];
    *(void *)&long long v29 = sub_22D2BCBD0();
    *((void *)&v29 + 1) = v21;
    swift_bridgeObjectRetain();
    sub_22D2BD2C0();
    unint64_t v30 = v18;
    *(void *)&long long v29 = v20;
    *((void *)&v29 + 1) = v19;
    sub_22D056B08(&v29, v28);
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053DD0(v28, (uint64_t)v31, v22);
    swift_bridgeObjectRelease();
    sub_22D056B18((uint64_t)v31);
  }
  uint64_t v23 = v1[6];
  if (v23)
  {
    uint64_t v24 = v1[5];
    *(void *)&long long v29 = sub_22D2BCBD0();
    *((void *)&v29 + 1) = v25;
    swift_bridgeObjectRetain();
    sub_22D2BD2C0();
    unint64_t v30 = v18;
    *(void *)&long long v29 = v24;
    *((void *)&v29 + 1) = v23;
    sub_22D056B08(&v29, v28);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    sub_22D053DD0(v28, (uint64_t)v31, v26);
    swift_bridgeObjectRelease();
    sub_22D056B18((uint64_t)v31);
  }
  return v2;
}

uint64_t sub_22D25A3C8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = (long long *)v1;
  uint64_t v4 = sub_22D2BC040();
  MEMORY[0x270FA5388](v4 - 8);
  sub_22D25ACFC(v1 + 32, (uint64_t)v37);
  sub_22D25ACFC((uint64_t)v37, (uint64_t)&v38);
  id v5 = v38;
  if (v38)
  {
    uint64_t v6 = v38[2];
    if (v6)
    {
      uint64_t v7 = v38[7];
      if (v38[4] == 0xD000000000000016 && v38[5] == 0x800000022D2D6940 || (sub_22D2BD660() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_20:
        swift_bridgeObjectRelease();
        if (v7)
        {
          sub_22D2BBAC0();
          unint64_t v22 = v21;
          swift_bridgeObjectRelease();
          if (v22 >> 60 != 15)
          {
            uint64_t v34 = type metadata accessor for PBLookupInfo(0);
            sub_22D2BC030();
            sub_22D25AF00();
            sub_22D2BC1D0();
            unint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
            uint64_t v31 = a1;
            uint64_t v32 = 0;
            uint64_t v29 = v34;
            return v30(v31, v32, 1, v29);
          }
        }
        if (qword_26AEC1C58 == -1)
        {
LABEL_23:
          uint64_t v23 = sub_22D2BC390();
          __swift_project_value_buffer(v23, (uint64_t)qword_26AEC3C90);
          sub_22D25AE10(v1);
          sub_22D25AE10(v1);
          uint64_t v13 = sub_22D2BC380();
          os_log_type_t v24 = sub_22D2BD060();
          if (os_log_type_enabled(v13, v24))
          {
            id v15 = (uint8_t *)swift_slowAlloc();
            uint64_t v16 = swift_slowAlloc();
            uint64_t v35 = v16;
            *(_DWORD *)id v15 = 136315138;
            long long v36 = *v2;
            swift_bridgeObjectRetain_n();
            sub_22D2BD680();
            id v25 = (id)HKSensitiveLogItem();
            swift_unknownObjectRelease();
            sub_22D2BD260();
            swift_unknownObjectRelease();
            uint64_t v26 = sub_22D2BCC30();
            unint64_t v28 = v27;
            sub_22D25AED4((uint64_t)&v36);
            sub_22D0A4D24(v26, v28, &v35);
            sub_22D2BD220();
            swift_bridgeObjectRelease();
            sub_22D25AE70((uint64_t)v2);
            sub_22D25AE70((uint64_t)v2);
            _os_log_impl(&dword_22CFEE000, v13, v24, "Could not get data bytes of PBLookupInfo from docRef. ID: %s.", v15, 0xCu);
            goto LABEL_25;
          }
LABEL_26:
          sub_22D25AE70((uint64_t)v2);
          sub_22D25AE70((uint64_t)v2);
          goto LABEL_27;
        }
LABEL_31:
        swift_once();
        goto LABEL_23;
      }
      if (v6 != 1)
      {
        unint64_t v8 = v5 + 11;
        uint64_t v9 = 1;
        while (1)
        {
          uint64_t v10 = a1;
          a1 = v9 + 1;
          if (__OFADD__(v9, 1)) {
            break;
          }
          uint64_t v7 = *v8;
          if (*(v8 - 3) == 0xD000000000000016 && *(v8 - 2) == 0x800000022D2D6940 || (sub_22D2BD660() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            a1 = v10;
            goto LABEL_20;
          }
          v8 += 4;
          ++v9;
          BOOL v11 = a1 == v6;
          a1 = v10;
          if (v11) {
            goto LABEL_15;
          }
        }
        __break(1u);
        goto LABEL_31;
      }
    }
  }
LABEL_15:
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_22D2BC390();
  __swift_project_value_buffer(v12, (uint64_t)qword_26AEC3C90);
  sub_22D25AE10(v1);
  sub_22D25AE10(v1);
  uint64_t v13 = sub_22D2BC380();
  os_log_type_t v14 = sub_22D2BD050();
  if (!os_log_type_enabled(v13, v14)) {
    goto LABEL_26;
  }
  id v15 = (uint8_t *)swift_slowAlloc();
  uint64_t v16 = swift_slowAlloc();
  uint64_t v35 = v16;
  *(_DWORD *)id v15 = 136315138;
  long long v36 = *v2;
  swift_bridgeObjectRetain_n();
  sub_22D2BD680();
  id v17 = (id)HKSensitiveLogItem();
  swift_unknownObjectRelease();
  sub_22D2BD260();
  swift_unknownObjectRelease();
  uint64_t v18 = sub_22D2BCC30();
  unint64_t v20 = v19;
  sub_22D25AED4((uint64_t)&v36);
  sub_22D0A4D24(v18, v20, &v35);
  sub_22D2BD220();
  swift_bridgeObjectRelease();
  sub_22D25AE70((uint64_t)v2);
  sub_22D25AE70((uint64_t)v2);
  _os_log_impl(&dword_22CFEE000, v13, v14, "No attachment with contentType of application/x-protobuf found for docRef. ID: %s", v15, 0xCu);
LABEL_25:
  swift_arrayDestroy();
  MEMORY[0x230F7BDF0](v16, -1, -1);
  MEMORY[0x230F7BDF0](v15, -1, -1);
LABEL_27:

  uint64_t v29 = type metadata accessor for PBLookupInfo(0);
  unint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  uint64_t v31 = a1;
  uint64_t v32 = 1;
  return v30(v31, v32, 1, v29);
}

uint64_t sub_22D25ACFC(uint64_t a1, uint64_t a2)
{
  sub_22D25AD60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22D25AD60()
{
  if (!qword_2685432F0)
  {
    sub_22D25ADB8();
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685432F0);
    }
  }
}

void sub_22D25ADB8()
{
  if (!qword_2685432F8)
  {
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685432F8);
    }
  }
}

uint64_t sub_22D25AE10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22D0C9E9C(v2, v3);
  return a1;
}

uint64_t sub_22D25AE70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22D0C9EB0(v2, v3);
  return a1;
}

uint64_t sub_22D25AED4(uint64_t a1)
{
  return a1;
}

unint64_t sub_22D25AF00()
{
  unint64_t result = qword_26853E268;
  if (!qword_26853E268)
  {
    type metadata accessor for PBLookupInfo(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853E268);
  }
  return result;
}

uint64_t sub_22D25AF58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for PBNode(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PBBlob(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x263F8EE78];
  *a2 = MEMORY[0x263F8EE78];
  type metadata accessor for PBBlobs(0);
  sub_22D2BBFE0();
  int64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    unint64_t v21 = a2;
    uint64_t v24 = v13;
    sub_22D24BDB4(0, v14, 0);
    uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v20 = a1;
    uint64_t v16 = a1 + ((v15 + 32) & ~v15);
    uint64_t v22 = *(void *)(v6 + 72);
    while (1)
    {
      sub_22D25B5F0(v16, (uint64_t)v8);
      sub_22D25B220(&v23, (uint64_t)v12);
      sub_22D25B710((uint64_t)v8, type metadata accessor for PBNode);
      if (v2) {
        break;
      }
      uint64_t v13 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22D24BDB4(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v24;
      }
      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_22D24BDB4(v17 > 1, v18 + 1, 1);
        uint64_t v13 = v24;
      }
      *(void *)(v13 + 16) = v18 + 1;
      sub_22D25B654((uint64_t)v12, v13+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v18);
      v16 += v22;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        a2 = v21;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    return sub_22D25B710((uint64_t)v21, type metadata accessor for PBBlobs);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v13;
  }
  return result;
}

uint64_t sub_22D25B220@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  sub_22D2BBFE0();
  uint64_t v4 = *(int *)(type metadata accessor for PBBlob(0) + 20);
  if (qword_26853CDD8 != -1) {
    swift_once();
  }
  uint64_t v5 = v4;
  *(void *)(a2 + v4) = qword_26853F750;
  type metadata accessor for PBNode(0);
  sub_22D25B6B8();
  swift_retain();
  uint64_t v6 = sub_22D2BC1E0();
  if (v2)
  {
    uint64_t result = sub_22D25B710(a2, type metadata accessor for PBBlob);
    *a1 = v2;
  }
  else
  {
    uint64_t v8 = v6;
    unint64_t v9 = v7;
    uint64_t v10 = sub_22D0B1BD8(v6, v7);
    uint64_t v12 = v11;
    sub_22CFF5630(v8, v9);
    uint64_t v13 = v5;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBBlob._StorageClass(0);
      swift_allocObject();
      int64_t v14 = (void *)swift_retain();
      *(void *)(a2 + v5) = sub_22D0F9658(v14);
      swift_release();
    }
    uint64_t v15 = *(void *)(a2 + v5);
    swift_beginAccess();
    *(void *)(v15 + 16) = v10;
    *(void *)(v15 + 24) = v12;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_22D2BC1E0();
    uint64_t v18 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBBlob._StorageClass(0);
      swift_allocObject();
      unint64_t v19 = (void *)swift_retain();
      *(void *)(a2 + v13) = sub_22D0F9658(v19);
      swift_release();
    }
    uint64_t v20 = *(void *)(a2 + v13);
    swift_beginAccess();
    uint64_t v21 = *(void *)(v20 + 32);
    unint64_t v22 = *(void *)(v20 + 40);
    *(void *)(v20 + 32) = v16;
    *(void *)(v20 + 40) = v18;
    return sub_22CFF5630(v21, v22);
  }
  return result;
}

uint64_t sub_22D25B5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBNode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D25B654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBBlob(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22D25B6B8()
{
  unint64_t result = qword_268542278;
  if (!qword_268542278)
  {
    type metadata accessor for PBNode(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268542278);
  }
  return result;
}

uint64_t sub_22D25B710(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D25B770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v49 = a3;
  uint64_t v46 = a4;
  sub_22D25C87C(0, &qword_268543300, MEMORY[0x263F06370]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v47 = (char *)&v43 - v10;
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D25C87C(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v43 - v18;
  uint64_t v20 = sub_22D2BBAA0();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v48 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D1FE374(a1, (uint64_t)v17);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v45 = v5;
  v23(v13, v5, a2);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v25 = v24(v17, 1, v20);
  uint64_t v44 = a2;
  if (v25 == 1)
  {
    (*(void (**)(uint64_t))(v49 + 40))(a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a2);
    sub_22D25C8D0((uint64_t)v17, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
    if (v24(v19, 1, v20) != 1)
    {
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      goto LABEL_6;
    }
LABEL_5:
    sub_22D25C8D0((uint64_t)v19, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
    type metadata accessor for WebRequestError();
    sub_22D085194();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a2);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v26(v19, v17, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  if (v24(v19, 1, v20) == 1) {
    goto LABEL_5;
  }
LABEL_6:
  unint64_t v28 = v48;
  v26(v48, v19, v20);
  uint64_t v29 = (uint64_t)v47;
  sub_22D2BB730();
  uint64_t v30 = sub_22D2BB790();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_22D25C8D0(v29, &qword_268543300, MEMORY[0x263F06370]);
    type metadata accessor for WebRequestError();
    sub_22D085194();
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v32, v28, v20);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v28, v20);
  }
  else
  {
    uint64_t v43 = v20;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v46, v29, v30);
    uint64_t v33 = v49;
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 48);
    uint64_t v35 = v44;
    uint64_t v36 = *(void *)(v34(v44, v49) + 16);
    swift_bridgeObjectRelease();
    if (v36)
    {
      uint64_t v50 = sub_22D2BB750();
      uint64_t v51 = v37;
      sub_22D2BCCB0();
      uint64_t v52 = v34(v35, v33);
      sub_22D0A1910(0, (unint64_t *)&qword_26AEC1EC0, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
      sub_22D084BBC();
      sub_22D2BCB60();
      swift_bridgeObjectRelease();
      sub_22D2BCCB0();
      unint64_t v28 = v48;
      swift_bridgeObjectRelease();
      sub_22D2BB760();
    }
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 56))(v35, v33);
    if (v38)
    {
      if (*(void *)(v38 + 16)) {
        sub_22D2BB720();
      }
      else {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 64))(v35, v33);
    if (v40)
    {
      uint64_t v41 = HIBYTE(v40) & 0xF;
      if ((v40 & 0x2000000000000000) == 0) {
        uint64_t v41 = v39 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v42 = (uint64_t (**)(char *, uint64_t))(v21 + 8);
      if (v41)
      {
        sub_22D2BB780();
        return (*v42)(v28, v43);
      }
      else
      {
        (*v42)(v28, v43);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v28, v43);
    }
  }
}

Swift::Void __swiftcall FHIRServerRequest.add(header:)(HealthRecordsDaemon::HTTPHeader header)
{
  uint64_t countAndFlagsBits = header.value._countAndFlagsBits;
  object = header.name._object;
  uint64_t v4 = *(void *)header.name._countAndFlagsBits;
  uint64_t v3 = *(void *)(header.name._countAndFlagsBits + 8);
  uint64_t v6 = *(void *)(header.name._countAndFlagsBits + 16);
  uint64_t v5 = *(void *)(header.name._countAndFlagsBits + 24);
  uint64_t v7 = (*(uint64_t (**)(void *, uint64_t))(header.value._countAndFlagsBits + 16))(header.name._object, header.value._countAndFlagsBits);
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v9 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, void *, uint64_t))(countAndFlagsBits + 32))(v18, object, countAndFlagsBits);
    uint64_t v10 = *v8;
    if (*v8)
    {
      uint64_t v11 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      void *v11 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v10 = sub_22D2814A4(0, v10[2] + 1, 1, v10);
        void *v11 = v10;
      }
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        uint64_t v10 = sub_22D2814A4((void *)(v13 > 1), v14 + 1, 1, v10);
        void *v11 = v10;
      }
      void v10[2] = v14 + 1;
      uint64_t v15 = &v10[4 * v14];
      v15[4] = v4;
      v15[5] = v3;
      v15[6] = v6;
      v15[7] = v5;
      v9(v18, 0);
    }
    else
    {
      v9(v18, 0);
    }
  }
  else
  {
    sub_22D0A1910(0, &qword_26853EE60, (uint64_t)&type metadata for HTTPHeader, MEMORY[0x263F8E0F8]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_22D2BFF40;
    *(void *)(v16 + 32) = v4;
    *(void *)(v16 + 40) = v3;
    *(void *)(v16 + 48) = v6;
    *(void *)(v16 + 56) = v5;
    uint64_t v17 = *(void (**)(uint64_t, void *, uint64_t))(countAndFlagsBits + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v16, object, countAndFlagsBits);
  }
}

uint64_t FHIRServerRequest.asWebRequest(against:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v74 = a3;
  uint64_t v65 = a4;
  uint64_t v8 = sub_22D2BBAA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v63 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v64 = (char *)&v59 - v12;
  uint64_t v13 = sub_22D2BB790();
  uint64_t v67 = *(void *)(v13 - 8);
  uint64_t v68 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v73 = (uint64_t)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D25C87C(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  os_log_type_t v66 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v69 = (char *)&v59 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v59 - v25;
  MEMORY[0x270FA5388](v24);
  unint64_t v28 = (char *)&v59 - v27;
  sub_22D1FE374(a1, (uint64_t)v26);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v72 = v5;
  v29(v18, v5, a2);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  unsigned int v31 = v30(v26, 1, v8);
  uint64_t v71 = a2;
  if (v31 == 1)
  {
    (*(void (**)(uint64_t))(v74 + 40))(a2);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a2);
    sub_22D25C8D0((uint64_t)v26, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
    if (v30(v28, 1, v8) != 1)
    {
      uint64_t v32 = v9;
      uint64_t v61 = v30;
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      goto LABEL_7;
    }
LABEL_5:
    sub_22D25C8D0((uint64_t)v28, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
    type metadata accessor for WebRequestError();
    sub_22D085194();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a2);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v33(v28, v26, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v28, 0, 1, v8);
  if (v30(v28, 1, v8) == 1) {
    goto LABEL_5;
  }
  uint64_t v32 = v9;
  uint64_t v61 = v30;
LABEL_7:
  os_log_type_t v60 = (void (*)(char *, uint64_t, uint64_t))v33;
  uint64_t v62 = v8;
  uint64_t v35 = (uint64_t)v69;
  v33(v69, v28, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v8);
  uint64_t v36 = v74;
  uint64_t v37 = v70;
  sub_22D25B770(v35, v71, v74, v73);
  uint64_t result = sub_22D25C8D0(v35, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  if (!v37)
  {
    uint64_t v38 = v60;
    uint64_t v39 = v66;
    sub_22D2BB740();
    uint64_t v40 = (uint64_t)v39;
    uint64_t v41 = v39;
    uint64_t v42 = v62;
    if (v61(v41, 1, v62) == 1)
    {
      sub_22D25C8D0(v40, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
      type metadata accessor for WebRequestError();
      sub_22D085194();
      swift_allocError();
      uint64_t v44 = v67;
      uint64_t v43 = v68;
      uint64_t v45 = v73;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v46, v73, v68);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v45, v43);
    }
    else
    {
      uint64_t v47 = v64;
      v38(v64, v40, v42);
      uint64_t v48 = v42;
      uint64_t v49 = v71;
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v36 + 8))(&v75, v71, v36);
      uint64_t v50 = v32;
      uint64_t v51 = (uint64_t)v63;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v63, v47, v48);
      uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 72))(v49, v36);
      unint64_t v54 = v53;
      uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v49, v36);
      uint64_t v56 = type metadata accessor for FHIRServerWebRequest();
      unint64_t v57 = v65;
      v65[3] = v56;
      v57[4] = (uint64_t)&protocol witness table for FHIRServerWebRequest;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v57);
      FHIRServerWebRequest.init(method:url:body:headers:)(&v75, v51, v52, v54, v55, (uint64_t)boxed_opaque_existential_1);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v62);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v73, v68);
    }
  }
  return result;
}

uint64_t dispatch thunk of FHIRServerRequest.method.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FHIRServerRequest.headers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FHIRServerRequest.headers.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FHIRServerRequest.headers.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FHIRServerRequest.baseURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FHIRServerRequest.pathComponents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FHIRServerRequest.queryItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FHIRServerRequest.fragment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FHIRServerRequest.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FHIRServerRequest.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

void sub_22D25C87C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D25C8D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D25C87C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D25C92C@<X0>(void **a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v157 = a3;
  uint64_t v158 = a4;
  sub_22D25DA6C();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v159 = (uint64_t)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v165 = (uint64_t)&v150 - v9;
  uint64_t v10 = type metadata accessor for PBHKConcept(0);
  uint64_t v163 = *(void *)(v10 - 8);
  uint64_t v164 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v160 = (uint64_t)&v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v162 = (char *)&v150 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v154 = (uint64_t)&v150 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v151 = (uint64_t)&v150 - v17;
  uint64_t v18 = sub_22D2BBC30();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for PBHKVaccinationRecord(0);
  uint64_t v23 = v22 - 8;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v156 = (uint64_t)&v150 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v150 - v26;
  unint64_t v28 = *a1;
  sub_22D2BBFE0();
  uint64_t v29 = *(int *)(v23 + 28);
  if (qword_26853D060 != -1) {
    swift_once();
  }
  *(void *)&v27[v29] = qword_268540348;
  swift_retain();
  id v166 = v28;
  id v30 = objc_msgSend(v28, sel_administrationDate);
  uint64_t v161 = a2;
  uint64_t v31 = *a2;
  uint64_t v32 = (void *)sub_22D2BBD30();
  id v33 = objc_msgSend(v30, sel_adjustedDateForCalendar_, v32);

  sub_22D2BBC00();
  id v34 = *(id *)(v31 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
  uint64_t v35 = (void *)sub_22D2BBBC0();
  id v36 = objc_msgSend(v34, sel_stringFromDate_, v35);

  uint64_t v37 = sub_22D2BCBD0();
  uint64_t v39 = v38;

  uint64_t v40 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v155 = v21;
  uint64_t v152 = v40;
  uint64_t v153 = v19 + 8;
  v40(v21, v18);
  uint64_t v41 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v42 = swift_retain();
    uint64_t v41 = v18;
    *(void *)&v27[v29] = sub_22D17BB54(v42);
    swift_release();
  }
  uint64_t v43 = *(void *)&v27[v29];
  swift_beginAccess();
  *(void *)(v43 + 16) = v37;
  *(void *)(v43 + 24) = v39;
  swift_bridgeObjectRelease();
  id v44 = objc_msgSend(v166, sel_bodySite);
  uint64_t v45 = v155;
  if (v44)
  {
    uint64_t v46 = v44;
    uint64_t v47 = v151;
    sub_22D080C14(v44, 1, v151);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v48 = swift_retain();
      *(void *)&v27[v29] = sub_22D17BB54(v48);
      swift_release();
    }
    uint64_t v49 = *(void *)&v27[v29];
    uint64_t v50 = v165;
    sub_22D25DAC4(v47, v165, type metadata accessor for PBHKConcept);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v163 + 56))(v50, 0, 1, v164);
    uint64_t v51 = v159;
    sub_22D25DAC4(v50, v159, (uint64_t (*)(void))sub_22D25DA6C);
    uint64_t v52 = v49
        + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__bodySite;
    swift_beginAccess();
    swift_retain();
    sub_22D25DB2C(v51, v52);
    swift_endAccess();

    swift_release();
    uint64_t v41 = v18;
  }
  id v53 = v166;
  id v54 = objc_msgSend(v166, sel_doseNumber);
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v56 = sub_22D2BCBD0();
    uint64_t v58 = v57;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v59 = swift_retain();
      uint64_t v41 = v18;
      *(void *)&v27[v29] = sub_22D17BB54(v59);
      swift_release();
    }
    os_log_type_t v60 = (uint64_t *)(*(void *)&v27[v29]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseNumber);
    swift_beginAccess();
    uint64_t *v60 = v56;
    v60[1] = v58;
    swift_bridgeObjectRelease();
    id v53 = v166;
  }
  id v61 = objc_msgSend(v53, sel_doseQuantity);
  if (v61)
  {
    uint64_t v62 = v61;
    uint64_t v63 = sub_22D2BCBD0();
    uint64_t v65 = v64;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v66 = swift_retain();
      uint64_t v41 = v18;
      *(void *)&v27[v29] = sub_22D17BB54(v66);
      swift_release();
    }
    uint64_t v67 = (uint64_t *)(*(void *)&v27[v29]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__doseQuantity);
    swift_beginAccess();
    *uint64_t v67 = v63;
    v67[1] = v65;
    swift_bridgeObjectRelease();
    id v53 = v166;
  }
  id v68 = objc_msgSend(v53, sel_expirationDate);
  if (v68)
  {
    uint64_t v69 = v68;
    uint64_t v70 = *v161;
    uint64_t v71 = (void *)sub_22D2BBD30();
    id v72 = objc_msgSend(v69, sel_adjustedDateForCalendar_, v71);

    sub_22D2BBC00();
    id v73 = *(id *)(v70 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v74 = (void *)sub_22D2BBBC0();
    id v75 = objc_msgSend(v73, sel_stringFromDate_, v74);

    uint64_t v76 = sub_22D2BCBD0();
    uint64_t v77 = v45;
    uint64_t v79 = v78;

    v152(v77, v41);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v80 = swift_retain();
      *(void *)&v27[v29] = sub_22D17BB54(v80);
      swift_release();
    }
    uint64_t v81 = (uint64_t *)(*(void *)&v27[v29]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__expirationDate);
    swift_beginAccess();
    *uint64_t v81 = v76;
    v81[1] = v79;

    swift_bridgeObjectRelease();
    id v53 = v166;
  }
  unsigned __int8 v82 = objc_msgSend(v53, sel_notGiven);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v83 = swift_retain();
    *(void *)&v27[v29] = sub_22D17BB54(v83);
    swift_release();
  }
  uint64_t v84 = (unsigned __int8 *)(*(void *)&v27[v29]
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__notGiven);
  swift_beginAccess();
  unsigned __int8 *v84 = v82;
  unsigned __int8 v85 = objc_msgSend(v53, sel_patientReported);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v87 = v158;
  uint64_t v88 = v159;
  uint64_t v89 = v161;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v90 = swift_retain();
    *(void *)&v27[v29] = sub_22D17BB54(v90);
    swift_release();
  }
  uint64_t v91 = (unsigned __int8 *)(*(void *)&v27[v29]
                          + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__patientReported);
  swift_beginAccess();
  *uint64_t v91 = v85;
  id v92 = objc_msgSend(v53, sel_performer);
  if (v92)
  {
    uint64_t v93 = v92;
    uint64_t v94 = sub_22D2BCBD0();
    uint64_t v96 = v95;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v97 = swift_retain();
      id v53 = v166;
      *(void *)&v27[v29] = sub_22D17BB54(v97);
      swift_release();
    }
    uint64_t v98 = (uint64_t *)(*(void *)&v27[v29]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__performer);
    swift_beginAccess();
    *uint64_t v98 = v94;
    v98[1] = v96;
    swift_bridgeObjectRelease();
  }
  id v99 = objc_msgSend(v53, sel_reaction);
  if (v99)
  {
    uint64_t v100 = v99;
    uint64_t v101 = sub_22D2BCBD0();
    uint64_t v103 = v102;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v104 = swift_retain();
      id v53 = v166;
      *(void *)&v27[v29] = sub_22D17BB54(v104);
      swift_release();
    }
    uint64_t v105 = (uint64_t *)(*(void *)&v27[v29]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reaction);
    swift_beginAccess();
    uint64_t *v105 = v101;
    v105[1] = v103;
    swift_bridgeObjectRelease();
  }
  id v106 = objc_msgSend(v53, sel_reasons);
  if (v106)
  {
    uint64_t v107 = v106;
    sub_22D1DADB0();
    unint64_t v108 = sub_22D2BCE00();

    MEMORY[0x270FA5388](v109);
    *(&v150 - 2) = (uint64_t)v89;
    uint64_t v110 = sub_22D29C85C((void (*)(id *))sub_22D0D8178, (uint64_t)(&v150 - 4), v108, (uint64_t)v167);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v111 = swift_retain();
      *(void *)&v27[v29] = sub_22D17BB54(v111);
      swift_release();
    }
    uint64_t v112 = (uint64_t *)(*(void *)&v27[v29]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasons);
    swift_beginAccess();
    uint64_t *v112 = v110;
    swift_bridgeObjectRelease();
    id v53 = v166;
  }
  id v113 = objc_msgSend(v53, sel_reasonsNotGiven);
  uint64_t v114 = (uint64_t)v162;
  if (v113)
  {
    unint64_t v115 = v113;
    sub_22D1DADB0();
    unint64_t v116 = sub_22D2BCE00();

    MEMORY[0x270FA5388](v117);
    *(&v150 - 2) = (uint64_t)v89;
    uint64_t v118 = sub_22D29C85C((void (*)(id *))sub_22D0AC3D0, (uint64_t)(&v150 - 4), v116, (uint64_t)v168);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v119 = swift_retain();
      *(void *)&v27[v29] = sub_22D17BB54(v119);
      swift_release();
    }
    uint64_t v120 = (uint64_t *)(*(void *)&v27[v29]
                     + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__reasonsNotGiven);
    swift_beginAccess();
    *uint64_t v120 = v118;
    swift_bridgeObjectRelease();
    uint64_t v114 = (uint64_t)v162;
  }
  id v121 = objc_msgSend(v53, sel_route);
  if (v121)
  {
    uint64_t v122 = v121;
    uint64_t v123 = v154;
    sub_22D080C14(v121, 1, v154);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v124 = swift_retain();
      uint64_t v123 = v154;
      *(void *)&v27[v29] = sub_22D17BB54(v124);
      swift_release();
    }
    uint64_t v125 = *(void *)&v27[v29];
    uint64_t v126 = v123;
    uint64_t v127 = v165;
    sub_22D25DAC4(v126, v165, type metadata accessor for PBHKConcept);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v163 + 56))(v127, 0, 1, v164);
    sub_22D25DAC4(v127, v88, (uint64_t (*)(void))sub_22D25DA6C);
    uint64_t v128 = v125
         + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__route;
    swift_beginAccess();
    swift_retain();
    sub_22D25DB2C(v88, v128);
    swift_endAccess();

    swift_release();
    uint64_t v114 = (uint64_t)v162;
  }
  id v129 = objc_msgSend(v53, sel_status);
  if (v129)
  {
    uint64_t v130 = v129;
    sub_22D080C14(v129, 1, v114);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
      swift_allocObject();
      uint64_t v131 = swift_retain();
      uint64_t v114 = (uint64_t)v162;
      *(void *)&v27[v29] = sub_22D17BB54(v131);
      swift_release();
    }
    uint64_t v132 = *(void *)&v27[v29];
    uint64_t v133 = v114;
    uint64_t v134 = v165;
    sub_22D25DAC4(v133, v165, type metadata accessor for PBHKConcept);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v163 + 56))(v134, 0, 1, v164);
    sub_22D25DAC4(v134, v88, (uint64_t (*)(void))sub_22D25DA6C);
    uint64_t v135 = v132
         + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__status;
    swift_beginAccess();
    swift_retain();
    sub_22D25DB2C(v88, v135);
    swift_endAccess();

    swift_release();
  }
  id v136 = objc_msgSend(v53, sel_vaccination);
  sub_22D080C14(v136, 1, v160);

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBHKVaccinationRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v137 = swift_retain();
    *(void *)&v27[v29] = sub_22D17BB54(v137);
    swift_release();
  }
  uint64_t v138 = *(void *)&v27[v29];
  uint64_t v139 = v165;
  sub_22D25DAC4(v160, v165, type metadata accessor for PBHKConcept);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v163 + 56))(v139, 0, 1, v164);
  sub_22D25DAC4(v139, v88, (uint64_t (*)(void))sub_22D25DA6C);
  uint64_t v140 = v138
       + OBJC_IVAR____TtCV19HealthRecordsDaemon21PBHKVaccinationRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__vaccination;
  swift_beginAccess();
  swift_retain();
  sub_22D25DB2C(v88, v140);
  swift_endAccess();
  swift_release();
  sub_22D081588(v53, v157, v87);
  uint64_t v141 = v156;
  sub_22D25DB90((uint64_t)v27, v156);
  PBClinicalRecord.vaccinationRecord.setter(v141);
  uint64_t v142 = sub_22D2B8154();
  uint64_t v144 = v143;
  uint64_t v145 = *(int *)(type metadata accessor for PBClinicalRecord(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBClinicalRecord._StorageClass(0);
    swift_allocObject();
    uint64_t v146 = (void *)swift_retain();
    uint64_t v147 = sub_22D1B90F4(v146);
    swift_release();
    *(void *)(v87 + v145) = v147;
    swift_release();
  }
  uint64_t v148 = (uint64_t *)(*(void *)(v87 + v145)
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBClinicalRecordP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__iosDerivedDisplayName);
  swift_beginAccess();
  *uint64_t v148 = v142;
  v148[1] = v144;
  swift_bridgeObjectRelease();
  return sub_22D25DBF4((uint64_t)v27);
}

void sub_22D25DA6C()
{
  if (!qword_26853E848)
  {
    type metadata accessor for PBHKConcept(255);
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853E848);
    }
  }
}

uint64_t sub_22D25DAC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D25DB2C(uint64_t a1, uint64_t a2)
{
  sub_22D25DA6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D25DB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBHKVaccinationRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D25DBF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PBHKVaccinationRecord(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WellKnownJWKSHandler.init(performer:signedClinicalDataStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_22D1F3FB8();
  uint64_t result = sub_22D2BCC30();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  a3[3] = v7;
  return result;
}

uint64_t WellKnownJWKSHandler.extractAndLoadJWKS(from:)(void *a1)
{
  sub_22D25E62C();
  uint64_t v4 = v3;
  uint64_t v61 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v60 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D25E704(0);
  uint64_t v67 = v6;
  uint64_t v65 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v63 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2643B0(0, &qword_268543330, sub_22D25E704, (void (*)(void))sub_22D25E780);
  uint64_t v66 = v8;
  uint64_t v64 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v54 - v9;
  sub_22D25E7B4();
  uint64_t v70 = *(void *)(v10 - 8);
  uint64_t v71 = v10;
  MEMORY[0x270FA5388](v10);
  id v68 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D25E878();
  uint64_t v13 = v12;
  uint64_t v72 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v69 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D25E934();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D25E99C();
  uint64_t v21 = v20;
  uint64_t v73 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *v1;
  uint64_t v25 = (void *)v1[1];
  uint64_t v56 = v1[2];
  uint64_t v57 = v25;
  uint64_t v58 = v1[3];
  uint64_t v59 = v24;
  if (objc_msgSend(a1, sel_options)) {
    goto LABEL_6;
  }
  uint64_t v55 = v4;
  uint64_t v54 = v13;
  id v26 = objc_msgSend(a1, sel_contextItems);
  sub_22D030474(0, &qword_268543380);
  unint64_t v27 = sub_22D2BCE00();

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = v55;
  if (!v28)
  {
LABEL_6:
    uint64_t v74 = (uint64_t)a1;
    sub_22D030474(0, &qword_268542440);
    id v52 = a1;
    sub_22D2BC6B0();
    sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
    sub_22D2BC680();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    sub_22D2645A4(&qword_268543390, (void (*)(uint64_t))sub_22D25E99C);
    uint64_t v51 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v23, v21);
  }
  else
  {
    id v30 = objc_msgSend(a1, sel_contextItems);
    unint64_t v31 = sub_22D2BCE00();

    id v32 = a1;
    uint64_t v33 = sub_22D263388(v31, v32);
    swift_bridgeObjectRelease();

    uint64_t v74 = v33;
    id v34 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8D488];
    sub_22D2641D8(0, &qword_268543310, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263F8D488]);
    sub_22D264360(&qword_268543318, &qword_268543310, v34);
    uint64_t v35 = v60;
    sub_22D2BCD80();
    swift_bridgeObjectRelease();
    sub_22D25E74C();
    id v36 = v63;
    sub_22D2BC7F0();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v29);
    uint64_t v37 = (void *)swift_allocObject();
    uint64_t v38 = v58;
    uint64_t v39 = v56;
    uint64_t v40 = v57;
    void v37[2] = v59;
    v37[3] = v40;
    v37[4] = v39;
    v37[5] = v38;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_22D263508;
    *(void *)(v41 + 24) = v37;
    id v42 = v40;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22D2BC5D0();
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D263C30(0, &qword_268543338, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDCF0]);
    sub_22D25E780();
    sub_22D2645EC(&qword_268543340, &qword_268543338, v43);
    id v44 = v62;
    uint64_t v45 = v67;
    sub_22D2BC830();
    swift_release();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v45);
    sub_22D264744(&qword_268543358, &qword_268543330, sub_22D25E704, (void (*)(void))sub_22D25E780);
    uint64_t v46 = v68;
    uint64_t v47 = v66;
    sub_22D2BC800();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v44, v47);
    sub_22D030474(0, &qword_268542440);
    sub_22D2645A4(&qword_268543368, (void (*)(uint64_t))sub_22D25E7B4);
    uint64_t v48 = v69;
    uint64_t v49 = v71;
    sub_22D2BC7F0();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v49);
    sub_22D2645A4(&qword_268543388, (void (*)(uint64_t))sub_22D25E878);
    uint64_t v50 = v54;
    uint64_t v51 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v50);
  }
  return v51;
}

void sub_22D25E62C()
{
  if (!qword_268543308)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8D488];
    sub_22D2641D8(255, &qword_268543310, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263F8D488]);
    sub_22D264360(&qword_268543318, &qword_268543310, v0);
    unint64_t v1 = sub_22D2BC560();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268543308);
    }
  }
}

void sub_22D25E704(uint64_t a1)
{
}

uint64_t sub_22D25E74C()
{
  return sub_22D2645A4(&qword_268543328, (void (*)(uint64_t))sub_22D25E62C);
}

uint64_t sub_22D25E780()
{
  return sub_22D2645A4(&qword_268543348, sub_22D25E704);
}

void sub_22D25E7B4()
{
  if (!qword_268543350)
  {
    sub_22D2643B0(255, &qword_268543330, sub_22D25E704, (void (*)(void))sub_22D25E780);
    sub_22D264744(&qword_268543358, &qword_268543330, sub_22D25E704, (void (*)(void))sub_22D25E780);
    unint64_t v0 = sub_22D2BC510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543350);
    }
  }
}

void sub_22D25E878()
{
  if (!qword_268543360)
  {
    sub_22D25E7B4();
    sub_22D030474(255, &qword_268542440);
    sub_22D2645A4(&qword_268543368, (void (*)(uint64_t))sub_22D25E7B4);
    unint64_t v0 = sub_22D2BC500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543360);
    }
  }
}

void sub_22D25E934()
{
  if (!qword_268543370)
  {
    sub_22D030474(255, &qword_268542440);
    unint64_t v0 = sub_22D2BC6A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543370);
    }
  }
}

void sub_22D25E99C()
{
  if (!qword_268543378)
  {
    sub_22D030474(255, &qword_268542440);
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v0 = sub_22D2BD780();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543378);
    }
  }
}

void *sub_22D25EA2C@<X0>(void *a1@<X8>)
{
  return sub_22D25EA50(a1);
}

void *sub_22D25EA50@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = type metadata accessor for WellKnownJWKSRequest();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[1];
  id v10 = objc_msgSend(v9, sel_issuerIdentifier);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_22D2BCBD0();
    uint64_t v14 = v13;

    id v15 = objc_msgSend(v9, sel_sourceType);
    if (v15 == (id)2)
    {
      swift_bridgeObjectRelease();
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_22D2BC390();
      __swift_project_value_buffer(v32, (uint64_t)qword_26AEC3C90);
      sub_22D263B74((uint64_t)v4, v71);
      uint64_t v33 = sub_22D2BC380();
      os_log_type_t v34 = sub_22D2BD040();
      uint64_t v35 = &selRef_isSingleDayOverride;
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v69 = a1;
        id v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        uint64_t v73 = v68;
        *(_DWORD *)id v36 = 136315138;
        id v37 = objc_msgSend(*((id *)&v71[0] + 1), sel_signingKeyID);
        if (v37)
        {
          uint64_t v38 = v37;
          uint64_t v39 = sub_22D2BCBD0();
          uint64_t v41 = v40;

          v70[0] = v39;
          v70[1] = v41;
          swift_bridgeObjectRetain_n();
          sub_22D2BD680();
          id v42 = (id)HKSensitiveLogItem();
          swift_unknownObjectRelease();
          sub_22D2BD260();
          swift_unknownObjectRelease();
          uint64_t v43 = sub_22D2BCC30();
          unint64_t v45 = v44;
          uint64_t v35 = &selRef_isSingleDayOverride;
          swift_bridgeObjectRelease_n();
        }
        else
        {
          unint64_t v45 = 0xE500000000000000;
          uint64_t v43 = 0x7D6C696E7BLL;
        }
        v70[0] = sub_22D0A4D24(v43, v45, &v73);
        sub_22D2BD220();
        swift_bridgeObjectRelease();
        sub_22D263BAC((uint64_t)v71);
        _os_log_impl(&dword_22CFEE000, v33, v34, "WellKnownJWKSProcessingContext: preparing %s for lookup in public key registry", v36, 0xCu);
        uint64_t v54 = v68;
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v54, -1, -1);
        MEMORY[0x230F7BDF0](v36, -1, -1);

        a1 = v69;
      }
      else
      {
        sub_22D263BAC((uint64_t)v71);
      }
      uint64_t v55 = *v4;
      uint64_t v56 = v4[1];
      uint64_t v72 = 0;
      memset(v71, 0, sizeof(v71));
      id v57 = v55;
      id v58 = v56;
      id v59 = [v58 v35[74]];
      if (v59)
      {
        os_log_type_t v60 = v59;
        uint64_t v61 = sub_22D2BCBD0();
        uint64_t v63 = v62;
      }
      else
      {
        uint64_t v61 = 0;
        uint64_t v63 = 0;
      }
      *a1 = v57;
      a1[1] = v58;
      uint64_t result = (void *)sub_22D264B0C((uint64_t)v71, (uint64_t)(a1 + 2), (uint64_t (*)(void))sub_22D263D78);
      a1[7] = v61;
      a1[8] = v63;
    }
    else if (v15 == (id)1)
    {
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_22D2BC390();
      __swift_project_value_buffer(v16, (uint64_t)qword_26AEC3C90);
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_22D2BC380();
      os_log_type_t v18 = sub_22D2BD040();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v68 = v12;
        uint64_t v20 = swift_slowAlloc();
        LODWORD(v67) = v19;
        uint64_t v21 = (uint8_t *)v20;
        uint64_t v66 = swift_slowAlloc();
        v70[0] = v66;
        uint64_t v65 = v21;
        *(_DWORD *)uint64_t v21 = 136315138;
        v64[2] = v21 + 4;
        *(void *)&v71[0] = v68;
        *((void *)&v71[0] + 1) = v14;
        swift_bridgeObjectRetain_n();
        sub_22D2BD680();
        uint64_t v69 = a1;
        id v22 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_22D2BD260();
        swift_unknownObjectRelease();
        v64[1] = MEMORY[0x263F8EE58] + 8;
        uint64_t v23 = sub_22D2BCC30();
        unint64_t v25 = v24;
        swift_bridgeObjectRelease();
        uint64_t v26 = v23;
        a1 = v69;
        *(void *)&v71[0] = sub_22D0A4D24(v26, v25, v70);
        sub_22D2BD220();
        swift_bridgeObjectRelease_n();
        uint64_t v12 = v68;
        swift_bridgeObjectRelease();
        unint64_t v27 = v65;
        _os_log_impl(&dword_22CFEE000, v17, (os_log_type_t)v67, "WellKnownJWKSProcessingContext: instantiating WellKnownJWKSRequest for issuer %s", v65, 0xCu);
        uint64_t v67 = v2;
        uint64_t v28 = v17;
        uint64_t v29 = v66;
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v29, -1, -1);
        MEMORY[0x230F7BDF0](v27, -1, -1);

        uint64_t v3 = v67;
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t result = (void *)WellKnownJWKSRequest.init(baseURLString:)(v12, v14, (uint64_t)v8);
      if (!v3)
      {
        uint64_t v50 = *v4;
        uint64_t v51 = v4[1];
        a1[5] = v6;
        a1[6] = &protocol witness table for WellKnownJWKSRequest;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1 + 2);
        sub_22D264B0C((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for WellKnownJWKSRequest);
        *a1 = v50;
        a1[1] = v51;
        a1[7] = 0;
        a1[8] = 0;
        id v53 = v50;
        return v51;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_22D2BC390();
      __swift_project_value_buffer(v46, (uint64_t)qword_26AEC3C90);
      uint64_t v47 = sub_22D2BC380();
      os_log_type_t v48 = sub_22D2BD070();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v49 = 0;
        _os_log_impl(&dword_22CFEE000, v47, v48, "WellKnownJWKSProcessingContext.contextByCreatingJWKSRequest got unsupported source type", v49, 2u);
        MEMORY[0x230F7BDF0](v49, -1, -1);
      }

      return sub_22D263B74((uint64_t)v4, a1);
    }
  }
  else
  {
    sub_22D263BDC();
    swift_allocError();
    unsigned char *v30 = 1;
    return (void *)swift_willThrow();
  }
  return result;
}

uint64_t sub_22D25F158(uint64_t a1)
{
  sub_22D263C30(0, &qword_2685433A8, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDDE8]);
  uint64_t v32 = v3;
  uint64_t v30 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v28 - v4;
  sub_22D263CB0();
  uint64_t v7 = v6;
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  id v10 = (void *)v1[1];
  uint64_t v12 = a1;
  uint64_t v13 = v1[2];
  uint64_t v14 = v1[3];
  sub_22D264110(a1 + 16, (uint64_t)&v33, (uint64_t (*)(void))sub_22D263D78);
  uint64_t v15 = v36;
  sub_22D264178((uint64_t)&v33, (uint64_t (*)(void))sub_22D263D78);
  if (v15)
  {
    uint64_t v33 = v11;
    os_log_type_t v34 = v10;
    uint64_t v35 = v13;
    uint64_t v36 = v14;
    return sub_22D25F834((id *)v12);
  }
  else
  {
    uint64_t v17 = v10;
    uint64_t v18 = v32;
    uint64_t v29 = v7;
    if (*(void *)(v12 + 64))
    {
      uint64_t v19 = v12;
      uint64_t v33 = v11;
      os_log_type_t v34 = v17;
      uint64_t v20 = v17;
      uint64_t v35 = v13;
      uint64_t v36 = v14;
      uint64_t v33 = sub_22D25FF8C(v19);
      uint64_t v21 = (void *)swift_allocObject();
      void v21[2] = v11;
      v21[3] = v20;
      v21[4] = v13;
      v21[5] = v14;
      id v22 = v20;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_22D2BC5D0();
      uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
      sub_22D263C30(0, &qword_268543338, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDCF0]);
      sub_22D2645EC(&qword_268543340, &qword_268543338, v23);
      sub_22D2BC830();
      swift_release();
      swift_release();
      sub_22D2645A4(&qword_2685433C0, (void (*)(uint64_t))sub_22D263CB0);
      uint64_t v24 = v29;
      uint64_t v16 = sub_22D2BC720();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v24);
    }
    else
    {
      sub_22D263BDC();
      uint64_t v25 = swift_allocError();
      unsigned char *v26 = 5;
      uint64_t v33 = v25;
      sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
      sub_22D2BC650();
      sub_22D2645EC(&qword_2685433B8, &qword_2685433A8, MEMORY[0x263EFDDE8]);
      uint64_t v16 = sub_22D2BC720();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v18);
    }
  }
  return v16;
}

uint64_t sub_22D25F56C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_22D2BBC30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  if (*(void *)(*a1 + 16))
  {
    uint64_t v29 = a2;
    uint64_t v30 = v2;
    uint64_t v11 = v9 + 32;
    id v10 = *(void **)(v9 + 32);
    id v12 = objc_msgSend(v10, sel_receivedDate);
    sub_22D2BBC00();

    id v13 = objc_msgSend(v10, sel_countryCode);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v27 = sub_22D2BCBD0();
      uint64_t v16 = v15;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v16 = 0;
    }
    id v28 = objc_msgSend(v10, sel_options);
    uint64_t v19 = *(void *)(v9 + 16);
    if (v19)
    {
      v31[10] = MEMORY[0x263F8EE78];
      sub_22D2BD3D0();
      do
      {
        sub_22D263B74(v11, v31);
        id v20 = (id)v31[1];
        sub_22D263BAC((uint64_t)v31);
        sub_22D2BD3A0();
        sub_22D2BD3E0();
        sub_22D2BD3F0();
        sub_22D2BD3B0();
        v11 += 72;
        --v19;
      }
      while (v19);
    }
    uint64_t v21 = (void *)sub_22D2BBBC0();
    if (v16)
    {
      id v22 = (void *)sub_22D2BCBA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v22 = 0;
    }
    id v23 = objc_allocWithZone(MEMORY[0x263F45C38]);
    sub_22D030474(0, &qword_268543380);
    uint64_t v24 = (void *)sub_22D2BCDF0();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v23, sel_initWithReceivedDate_countryCode_options_contextItems_, v21, v22, v28, v24);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    void *v29 = v25;
  }
  else
  {
    sub_22D263BDC();
    swift_allocError();
    unsigned char *v17 = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_22D25F834(id *a1)
{
  sub_22D263C30(0, &qword_2685433A8, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDDE8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v46 - v6;
  sub_22D263DF0();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v50 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D263F50(0, &qword_2685433E0, (uint64_t (*)(uint64_t))sub_22D263DF0, sub_22D263FD8, MEMORY[0x263EFDB28]);
  uint64_t v52 = v12;
  uint64_t v49 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  os_log_type_t v48 = (char *)&v46 - v13;
  uint64_t v15 = *v1;
  uint64_t v14 = (void *)v1[1];
  uint64_t v51 = a1;
  uint64_t v16 = (uint64_t)(a1 + 2);
  uint64_t v17 = v1[2];
  unint64_t v18 = v1[3];
  sub_22D264110(v16, (uint64_t)&v55, (uint64_t (*)(void))sub_22D263D78);
  if (*((void *)&v56 + 1))
  {
    sub_22CFF8C10(&v55, (uint64_t)v60);
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v46 = v10;
    uint64_t v47 = v9;
    uint64_t v19 = sub_22D2BC390();
    __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
    id v53 = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    id v20 = sub_22D2BC380();
    os_log_type_t v21 = sub_22D2BD080();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(void *)&long long v55 = v23;
      *(_DWORD *)id v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_22D0A4D24(v17, v18, (uint64_t *)&v55);
      sub_22D2BD220();

      swift_release();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22CFEE000, v20, v21, "%s: preparing to download well-known JWKS", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v23, -1, -1);
      MEMORY[0x230F7BDF0](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v27 = v17;
    uint64_t v28 = (uint64_t)v51;
    id v29 = objc_msgSend(*v51, sel_options);
    uint64_t v30 = v29 & 2;
    uint64_t v31 = ((uint64_t)((void)v29 << 62) >> 63) & 0x4014000000000000;
    uint64_t v32 = v61;
    uint64_t v33 = v62;
    os_log_type_t v34 = __swift_project_boxed_opaque_existential_1(v60, v61);
    *(void *)&long long v55 = sub_22D2B6970((uint64_t)v34, v31, v30 == 0, v30, v30 == 0, 1, v15, v32, v33);
    uint64_t v35 = (void *)swift_allocObject();
    void v35[2] = v15;
    v35[3] = v14;
    v35[4] = v27;
    v35[5] = v18;
    sub_22CFF7DC0(0);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D263C30(0, &qword_2685433D0, (uint64_t)&type metadata for WebRequestResponse, MEMORY[0x263EFDCF0]);
    sub_22D2645A4(&qword_26853D880, sub_22CFF7DC0);
    sub_22D263F00(&qword_2685433D8, &qword_2685433D0, v36);
    swift_retain();
    id v37 = v53;
    swift_bridgeObjectRetain();
    uint64_t v38 = v50;
    sub_22D2BC7A0();
    swift_release();
    swift_release();
    sub_22D263B74(v28, &v55);
    uint64_t v39 = swift_allocObject();
    long long v40 = v58;
    *(_OWORD *)(v39 + 48) = v57;
    *(_OWORD *)(v39 + 64) = v40;
    *(void *)(v39 + 80) = v59;
    long long v41 = v56;
    *(_OWORD *)(v39 + 16) = v55;
    *(_OWORD *)(v39 + 32) = v41;
    sub_22D263FD8();
    id v42 = v48;
    uint64_t v43 = v47;
    sub_22D2BC780();
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v43);
    sub_22D264028();
    uint64_t v44 = v52;
    uint64_t v26 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v44);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  }
  else
  {
    sub_22D264178((uint64_t)&v55, (uint64_t (*)(void))sub_22D263D78);
    sub_22D263BDC();
    uint64_t v24 = swift_allocError();
    unsigned char *v25 = 2;
    *(void *)&long long v55 = v24;
    sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
    sub_22D2BC650();
    sub_22D2645EC(&qword_2685433B8, &qword_2685433A8, MEMORY[0x263EFDDE8]);
    uint64_t v26 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v26;
}

uint64_t sub_22D25FF8C(uint64_t a1)
{
  sub_22D263C30(0, &qword_2685433A8, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDDE8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v48 - v6;
  uint64_t v8 = (void *)v1[1];
  if (v8)
  {
    uint64_t v9 = *v1;
    uint64_t v11 = v1[2];
    unint64_t v10 = v1[3];
    uint64_t v12 = *(void **)(a1 + 8);
    id v13 = v8;
    id v14 = objc_msgSend(v12, sel_signingKeyID);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = v11;
      uint64_t v53 = a1;
      uint64_t v17 = sub_22D2BCBD0();
      uint64_t v19 = v18;

      if (qword_26AEC1C58 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_22D2BC390();
      __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
      swift_retain_n();
      id v21 = v13;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v22 = v21;
      uint64_t v23 = sub_22D2BC380();
      os_log_type_t v24 = sub_22D2BD080();
      int v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v52 = v9;
        uint64_t v27 = v26;
        uint64_t v51 = swift_slowAlloc();
        uint64_t v54 = v51;
        *(_DWORD *)uint64_t v27 = 136315394;
        int v50 = v25;
        swift_bridgeObjectRetain();
        uint64_t v49 = v11;
        *(void *)&v55[0] = sub_22D0A4D24(v11, v10, &v54);
        sub_22D2BD220();

        swift_release_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 12) = 2080;
        uint64_t v48 = v27 + 14;
        *(void *)&v55[0] = v17;
        *((void *)&v55[0] + 1) = v19;
        swift_bridgeObjectRetain_n();
        sub_22D2BD680();
        id v28 = (id)HKSensitiveLogItem();
        uint64_t v29 = v17;
        swift_unknownObjectRelease();
        sub_22D2BD260();
        swift_unknownObjectRelease();
        uint64_t v30 = sub_22D2BCC30();
        unint64_t v32 = v31;
        swift_bridgeObjectRelease();
        uint64_t v33 = v30;
        uint64_t v17 = v29;
        *(void *)&v55[0] = sub_22D0A4D24(v33, v32, &v54);
        sub_22D2BD220();
        swift_bridgeObjectRelease_n();
        uint64_t v16 = v49;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22CFEE000, v23, (os_log_type_t)v50, "%s: about to fetch public key “%s” from registry", (uint8_t *)v27, 0x16u);
        uint64_t v34 = v51;
        swift_arrayDestroy();
        MEMORY[0x230F7BDF0](v34, -1, -1);
        uint64_t v35 = v27;
        uint64_t v9 = v52;
        MEMORY[0x230F7BDF0](v35, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
      sub_22D263B74(v53, v55);
      uint64_t v41 = swift_allocObject();
      long long v42 = v55[0];
      *(_OWORD *)(v41 + 88) = v55[1];
      long long v43 = v55[3];
      *(_OWORD *)(v41 + 104) = v55[2];
      *(_OWORD *)(v41 + 120) = v43;
      *(void *)(v41 + 16) = v22;
      *(void *)(v41 + 24) = v17;
      *(void *)(v41 + 32) = v19;
      *(void *)(v41 + 40) = v9;
      *(void *)(v41 + 48) = v8;
      *(void *)(v41 + 56) = v16;
      *(void *)(v41 + 64) = v10;
      *(void *)(v41 + 136) = v56;
      *(_OWORD *)(v41 + 72) = v42;
      uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDE20];
      sub_22D263C30(0, &qword_268543468, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDE20]);
      swift_allocObject();
      id v45 = v22;
      swift_retain();
      id v46 = v45;
      swift_bridgeObjectRetain();
      *(void *)&v55[0] = sub_22D2BC6F0();
      sub_22D2645EC(&qword_268543470, &qword_268543468, v44);
      uint64_t v38 = sub_22D2BC720();
      swift_release();
    }
    else
    {
      sub_22D263BDC();
      uint64_t v39 = swift_allocError();
      unsigned char *v40 = 6;
      *(void *)&v55[0] = v39;
      sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
      sub_22D2BC650();
      sub_22D2645EC(&qword_2685433B8, &qword_2685433A8, MEMORY[0x263EFDDE8]);
      uint64_t v38 = sub_22D2BC720();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    sub_22D263BDC();
    uint64_t v36 = swift_allocError();
    unsigned char *v37 = 4;
    *(void *)&v55[0] = v36;
    sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
    sub_22D2BC650();
    sub_22D2645EC(&qword_2685433B8, &qword_2685433A8, MEMORY[0x263EFDDE8]);
    uint64_t v38 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v38;
}

uint64_t sub_22D260634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  long long v42 = a3;
  uint64_t v43 = a5;
  uint64_t v44 = a2;
  uint64_t v45 = a4;
  id v46 = a6;
  sub_22D2641D8(0, &qword_268543418, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDDF8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v38 - v10;
  sub_22D263C30(0, &qword_268543420, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDEA0]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v38 - v15;
  sub_22D264224();
  uint64_t v40 = *(void *)(v17 - 8);
  uint64_t v41 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2643B0(0, &qword_268543438, (void (*)(uint64_t))sub_22D2644A4, (void (*)(void))sub_22D264570);
  uint64_t v21 = v20;
  uint64_t v39 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v38 - v22;
  if (objc_msgSend(*(id *)(a1 + 8), sel_JWKSOutcome) == (id)2)
  {
    uint64_t v24 = v44;
    int v25 = v42;
    uint64_t v26 = v43;
    *(void *)&long long v48 = v44;
    *((void *)&v48 + 1) = v42;
    *(void *)&long long v49 = v45;
    *((void *)&v49 + 1) = v43;
    uint64_t v47 = sub_22D260C78(a1);
    sub_22D263B74(a1, &v48);
    uint64_t v27 = swift_allocObject();
    long long v28 = v51;
    *(_OWORD *)(v27 + 48) = v50;
    *(_OWORD *)(v27 + 64) = v28;
    *(void *)(v27 + 80) = v52;
    long long v29 = v49;
    *(_OWORD *)(v27 + 16) = v48;
    *(_OWORD *)(v27 + 32) = v29;
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D263C30(0, &qword_268543338, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDCF0]);
    uint64_t v38 = v21;
    sub_22D2645EC(&qword_268543340, &qword_268543338, v30);
    sub_22D264360(&qword_268543430, &qword_268543418, MEMORY[0x263EFDDF8]);
    sub_22D2BC7A0();
    swift_release();
    swift_release();
    unint64_t v31 = (void *)swift_allocObject();
    v31[2] = v24;
    v31[3] = v25;
    v31[4] = v45;
    v31[5] = v26;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_22D2646E4;
    *(void *)(v32 + 24) = v31;
    id v33 = v25;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22D2BC5D0();
    sub_22D2645A4(&qword_268543448, (void (*)(uint64_t))sub_22D264224);
    uint64_t v34 = v41;
    sub_22D2BC880();
    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v34);
    sub_22D264744(&qword_268543460, &qword_268543438, (void (*)(uint64_t))sub_22D2644A4, (void (*)(void))sub_22D264570);
    uint64_t v35 = v38;
    uint64_t v36 = sub_22D2BC720();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v23, v35);
  }
  else
  {
    sub_22D263B74(a1, &v48);
    sub_22D2BC6B0();
    sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
    sub_22D2BC680();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_22D2645EC(&qword_268543458, &qword_268543420, MEMORY[0x263EFDEA0]);
    uint64_t v36 = sub_22D2BC720();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  *id v46 = v36;
  return result;
}

uint64_t sub_22D260C78(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[1];
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_22D2BC390();
  __swift_project_value_buffer(v7, (uint64_t)qword_26AEC3C90);
  id v8 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = sub_22D2BC380();
  os_log_type_t v10 = sub_22D2BD080();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(void *)&v20[0] = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_22D0A4D24(v6, v5, (uint64_t *)v20);
    sub_22D2BD220();

    swift_release();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22CFEE000, v9, v10, "%s: triggering public key OTA download", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v12, -1, -1);
    MEMORY[0x230F7BDF0](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_22D263B74(a1, v20);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v3;
  *(void *)(v13 + 24) = v4;
  *(void *)(v13 + 32) = v6;
  *(void *)(v13 + 40) = v5;
  long long v14 = v20[3];
  *(_OWORD *)(v13 + 80) = v20[2];
  *(_OWORD *)(v13 + 96) = v14;
  *(void *)(v13 + 112) = v21;
  long long v15 = v20[1];
  *(_OWORD *)(v13 + 48) = v20[0];
  *(_OWORD *)(v13 + 64) = v15;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDE20];
  sub_22D263C30(0, &qword_268543468, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_retain();
  id v17 = v8;
  swift_bridgeObjectRetain();
  *(void *)&v20[0] = sub_22D2BC6F0();
  sub_22D2645EC(&qword_268543470, &qword_268543468, v16);
  uint64_t v18 = sub_22D2BC720();
  swift_release();
  return v18;
}

uint64_t sub_22D260F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v39 = a4;
  uint64_t v44 = a2;
  sub_22D2641D8(0, &qword_268543400, (uint64_t)&type metadata for WebRequestResponse, MEMORY[0x263EFDDF8]);
  uint64_t v11 = v10;
  uint64_t v43 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v41 = (char *)&v36 - v12;
  sub_22D263C30(0, &qword_268543408, (uint64_t)&type metadata for WebRequestResponse, MEMORY[0x263EFDEA0]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  long long v42 = (char *)&v36 - v16;
  uint64_t v17 = type metadata accessor for WebRequestResponseError(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_22D2BC390();
  __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
  uint64_t v40 = a1;
  sub_22D264110(a1, (uint64_t)v19, type metadata accessor for WebRequestResponseError);
  id v21 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v22 = sub_22D2BC380();
  os_log_type_t v23 = sub_22D2BD060();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v37 = v15;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v38 = a6;
    uint64_t v27 = v26;
    v46[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_22D0A4D24(v39, a5, v46);
    uint64_t v39 = v11;
    sub_22D2BD220();

    swift_release();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v28 = WebRequestResponseError.safelyLoggableDescription.getter();
    uint64_t v45 = sub_22D0A4D24(v28, v29, v46);
    uint64_t v11 = v39;
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D264178((uint64_t)v19, type metadata accessor for WebRequestResponseError);
    _os_log_impl(&dword_22CFEE000, v22, v23, "%s: %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v27;
    a6 = v38;
    MEMORY[0x230F7BDF0](v30, -1, -1);
    uint64_t v31 = v25;
    uint64_t v15 = v37;
    MEMORY[0x230F7BDF0](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();

    swift_release();
    sub_22D264178((uint64_t)v19, type metadata accessor for WebRequestResponseError);
  }

  sub_22CFF4B00(v40, (uint64_t)v46);
  long long v47 = xmmword_22D2BFCE0;
  uint64_t v48 = 0;
  uint64_t v32 = v41;
  sub_22D2BC6B0();
  sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
  id v33 = v42;
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v11);
  sub_22D263F00(&qword_268543410, &qword_268543408, MEMORY[0x263EFDEA0]);
  uint64_t v34 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v33, v14);
  *a6 = v34;
  return result;
}

uint64_t sub_22D261480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t v5 = *(void *)(a1 + 48);
  id v7 = *(id *)a2;
  id v8 = sub_22D262EE0(v6, v5, 0);
  sub_22D264110(a2 + 16, (uint64_t)(a3 + 2), (uint64_t (*)(void))sub_22D263D78);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  *a3 = v7;
  a3[1] = v8;
  a3[7] = v10;
  a3[8] = v9;
  return swift_bridgeObjectRetain();
}

void sub_22D261514(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = (void *)sub_22D2BCBA0();
  sub_22D263B74(a10, v25);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a6;
  *(void *)(v18 + 24) = a7;
  *(void *)(v18 + 32) = a8;
  *(void *)(v18 + 40) = a9;
  *(void *)(v18 + 48) = a4;
  *(void *)(v18 + 56) = a5;
  *(void *)(v18 + 64) = a1;
  *(void *)(v18 + 72) = a2;
  long long v19 = v25[3];
  *(_OWORD *)(v18 + 112) = v25[2];
  *(_OWORD *)(v18 + 128) = v19;
  *(void *)(v18 + 144) = v26;
  long long v20 = v25[1];
  *(_OWORD *)(v18 + 80) = v25[0];
  *(_OWORD *)(v18 + 96) = v20;
  aBlock[4] = sub_22D264AB8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22D262624;
  aBlock[3] = &block_descriptor_19;
  id v21 = _Block_copy(aBlock);
  id v22 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchPublicKeyWithKeyID_completion_, v17, v21);
  _Block_release(v21);
}

uint64_t sub_22D261694(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(uint64_t *), uint64_t a10, id *a11)
{
  uint64_t v110 = a5;
  uint64_t v111 = a7;
  uint64_t v112 = a10;
  id v113 = a9;
  uint64_t v16 = sub_22D2BCC20();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  long long v19 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = objc_msgSend(a1, sel_outcome);
  if (v20 == (id)3)
  {
    uint64_t v109 = a11;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_22D2BC390();
    __swift_project_value_buffer(v38, (uint64_t)qword_26AEC3C90);
    id v39 = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v40 = v39;
    uint64_t v41 = sub_22D2BC380();
    os_log_type_t v42 = sub_22D2BD080();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v115 = v44;
      *(_DWORD *)uint64_t v43 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_22D0A4D24(v110, a6, &v115);
      sub_22D2BD220();

      swift_release_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v116 = v111;
      unint64_t v117 = a8;
      swift_bridgeObjectRetain_n();
      sub_22D2BD680();
      id v45 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v46 = sub_22D2BCC30();
      unint64_t v48 = v47;
      swift_bridgeObjectRelease();
      uint64_t v116 = sub_22D0A4D24(v46, v48, &v115);
      sub_22D2BD220();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      long long v49 = "%s: key with ID “%s” has been removed";
LABEL_17:
      _os_log_impl(&dword_22CFEE000, v41, v42, v49, (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v44, -1, -1);
      MEMORY[0x230F7BDF0](v43, -1, -1);

LABEL_25:
      id v76 = objc_msgSend(a1, sel_outcome);
      uint64_t v77 = v109;
      id v78 = *v109;
      id v79 = sub_22D262EE0(0, 0xF000000000000000, (uint64_t)v76);
      sub_22D264110((uint64_t)(v77 + 2), (uint64_t)v118, (uint64_t (*)(void))sub_22D263D78);
      id v81 = v77[7];
      id v80 = v77[8];
      uint64_t v116 = (uint64_t)v78;
      unint64_t v117 = (unint64_t)v79;
      id v119 = v81;
      id v120 = v80;
      char v121 = 0;
      swift_bridgeObjectRetain();
LABEL_41:
      v113(&v116);
      return sub_22D264900((uint64_t)&v116);
    }
LABEL_24:

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_release_n();
    goto LABEL_25;
  }
  if (v20 == (id)2)
  {
    uint64_t v109 = a11;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_22D2BC390();
    __swift_project_value_buffer(v50, (uint64_t)qword_26AEC3C90);
    id v51 = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v40 = v51;
    uint64_t v41 = sub_22D2BC380();
    os_log_type_t v42 = sub_22D2BD080();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v115 = v44;
      *(_DWORD *)uint64_t v43 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_22D0A4D24(v110, a6, &v115);
      sub_22D2BD220();

      swift_release_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v116 = v111;
      unint64_t v117 = a8;
      swift_bridgeObjectRetain_n();
      sub_22D2BD680();
      id v52 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v53 = sub_22D2BCC30();
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      uint64_t v116 = sub_22D0A4D24(v53, v55, &v115);
      sub_22D2BD220();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      long long v49 = "%s: key with ID “%s” not found";
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  if (v20 != (id)1)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_22D2BC390();
    __swift_project_value_buffer(v56, (uint64_t)qword_26AEC3C90);
    swift_retain();
    id v57 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v58 = a2;
    swift_retain();
    id v59 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v60 = a2;
    uint64_t v61 = sub_22D2BC380();
    os_log_type_t v62 = sub_22D2BD080();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v109 = (id *)swift_slowAlloc();
      uint64_t v115 = (uint64_t)v109;
      *(_DWORD *)uint64_t v63 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_22D0A4D24(v110, a6, &v115);
      sub_22D2BD220();

      swift_release_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v63 + 12) = 2080;
      uint64_t v116 = v111;
      unint64_t v117 = a8;
      swift_bridgeObjectRetain_n();
      sub_22D2BD680();
      id v64 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v111 = MEMORY[0x263F8EE58] + 8;
      uint64_t v65 = sub_22D2BCC30();
      unint64_t v67 = v66;
      swift_bridgeObjectRelease();
      uint64_t v116 = sub_22D0A4D24(v65, v67, &v115);
      sub_22D2BD220();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 22) = 2080;
      if (a2)
      {
        uint64_t v116 = (uint64_t)a2;
        id v68 = a2;
        id v69 = a2;
        id v70 = a2;
        sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
        sub_22D030474(0, &qword_268543480);
        if (swift_dynamicCast())
        {
          id v71 = v114;
          id v72 = objc_msgSend(v114, sel_hrs_safelyLoggableDescription);
          uint64_t v73 = sub_22D2BCBD0();
          unint64_t v75 = v74;
        }
        else
        {
          uint64_t v116 = (uint64_t)a2;
          id v97 = a2;
          sub_22D2BD680();
          id v98 = (id)HKSensitiveLogItem();
          swift_unknownObjectRelease();
          sub_22D2BD260();
          swift_unknownObjectRelease();
          uint64_t v73 = sub_22D2BCC30();
          unint64_t v75 = v99;
        }
      }
      else
      {
        unint64_t v75 = 0xE500000000000000;
        uint64_t v73 = 0x7D6C696E7BLL;
      }
      uint64_t v116 = sub_22D0A4D24(v73, v75, &v115);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v61, v62, "%s: error retrieving key with ID “%s”: %s", (uint8_t *)v63, 0x20u);
      uint64_t v100 = v109;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v100, -1, -1);
      MEMORY[0x230F7BDF0](v63, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }

    uint64_t v101 = (uint64_t)a2;
    if (!a2)
    {
      sub_22D263BDC();
      uint64_t v101 = swift_allocError();
      *uint64_t v102 = 0;
    }
    uint64_t v116 = v101;
    char v121 = 1;
    id v103 = a2;
    goto LABEL_41;
  }
  uint64_t v109 = a11;
  id v21 = objc_msgSend(a1, sel_jwkData);
  if (!v21)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v82 = sub_22D2BC390();
    __swift_project_value_buffer(v82, (uint64_t)qword_26AEC3C90);
    uint64_t v83 = sub_22D2BC380();
    os_log_type_t v84 = sub_22D2BD070();
    if (os_log_type_enabled(v83, v84))
    {
      unsigned __int8 v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned __int8 v85 = 0;
      _os_log_impl(&dword_22CFEE000, v83, v84, "WellKnownJWKSHandler.retrieveJWKFromPublicKeyRegistry got a \"retrieved\" result but no JWK data", v85, 2u);
      MEMORY[0x230F7BDF0](v85, -1, -1);
    }

    sub_22D263BDC();
    uint64_t v86 = swift_allocError();
    *uint64_t v87 = 7;
    uint64_t v116 = v86;
    char v121 = 1;
    goto LABEL_41;
  }
  id v22 = v21;
  uint64_t v23 = sub_22D2BBB20();
  unint64_t v108 = v24;

  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_22D2BC390();
  __swift_project_value_buffer(v25, (uint64_t)qword_26AEC3C90);
  id v26 = a4;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v27 = v26;
  uint64_t v28 = sub_22D2BC380();
  os_log_type_t v29 = sub_22D2BD080();
  int v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v31 = swift_slowAlloc();
    int v106 = v30;
    uint64_t v32 = v31;
    uint64_t v105 = swift_slowAlloc();
    uint64_t v115 = v105;
    *(_DWORD *)uint64_t v32 = 136315394;
    uint64_t v107 = v23;
    swift_bridgeObjectRetain();
    uint64_t v116 = sub_22D0A4D24(v110, a6, &v115);
    sub_22D2BD220();

    swift_release_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2080;
    uint64_t v116 = v111;
    unint64_t v117 = a8;
    swift_bridgeObjectRetain_n();
    sub_22D2BD680();
    id v33 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v34 = sub_22D2BCC30();
    unint64_t v36 = v35;
    swift_bridgeObjectRelease();
    uint64_t v116 = sub_22D0A4D24(v34, v36, &v115);
    sub_22D2BD220();
    swift_bridgeObjectRelease_n();
    uint64_t v23 = v107;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v28, (os_log_type_t)v106, "%s: key with ID “%s” found", (uint8_t *)v32, 0x16u);
    uint64_t v37 = v105;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v37, -1, -1);
    MEMORY[0x230F7BDF0](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
  unint64_t v88 = v108;
  sub_22CFF9B64(v23, v108);
  sub_22CFF9B64(v23, v88);
  sub_22D2BCC10();
  sub_22D2BCBF0();
  uint64_t v116 = 0x3A227379656B227BLL;
  unint64_t v117 = 0xE90000000000005BLL;
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  sub_22D2BCC10();
  uint64_t v89 = sub_22D2BCBE0();
  unint64_t v91 = v90;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  id v92 = v109;
  id v93 = *v109;
  id v94 = sub_22D262EE0(v89, v91, 1);
  sub_22D264110((uint64_t)(v92 + 2), (uint64_t)v118, (uint64_t (*)(void))sub_22D263D78);
  id v96 = v92[7];
  id v95 = v92[8];
  uint64_t v116 = (uint64_t)v93;
  unint64_t v117 = (unint64_t)v94;
  id v119 = v96;
  id v120 = v95;
  swift_bridgeObjectRetain();
  sub_22CFF9C10(v89, v91);
  sub_22CFF5630(v23, v88);
  sub_22CFF5630(v23, v88);
  char v121 = 0;
  v113(&v116);
  sub_22CFF5630(v23, v88);
  return sub_22D264900((uint64_t)&v116);
}

void sub_22D262624(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_22D2626B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for IssuerDirectoryDownloadTaskScheduler();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = 0;
  *(void *)(v14 + 16) = 0;
  id v15 = a4;
  swift_retain();
  uint64_t v16 = (_DWORD *)swift_slowAlloc();
  _DWORD *v16 = 0;
  *(void *)(v14 + 40) = v16;
  *(_OWORD *)(v14 + 48) = xmmword_22D2D0B10;
  type metadata accessor for IssuerDirectoryDownloadTaskManager();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = sub_22D2042B0(v14, a3, a4, v17);
  sub_22D263B74(a7, v25);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  *(void *)(v19 + 32) = a5;
  *(void *)(v19 + 40) = a6;
  *(void *)(v19 + 48) = a1;
  *(void *)(v19 + 56) = a2;
  long long v20 = v25[3];
  *(_OWORD *)(v19 + 96) = v25[2];
  *(_OWORD *)(v19 + 112) = v20;
  *(void *)(v19 + 128) = v26;
  long long v21 = v25[1];
  *(_OWORD *)(v19 + 64) = v25[0];
  *(_OWORD *)(v19 + 80) = v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v18;
  *(unsigned char *)(v22 + 24) = 0;
  *(void *)(v22 + 32) = sub_22D26488C;
  *(void *)(v22 + 40) = v19;
  swift_retain();
  id v23 = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22D0A63F8(0, (uint64_t)sub_22D204410, v22);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22D262878(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10)
{
  if (!a1)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_22D2BC390();
    __swift_project_value_buffer(v22, (uint64_t)qword_26AEC3C90);
    swift_retain();
    id v23 = a5;
    swift_bridgeObjectRetain();
    id v24 = a3;
    swift_retain();
    id v25 = v23;
    swift_bridgeObjectRetain();
    id v26 = a3;
    id v27 = sub_22D2BC380();
    os_log_type_t v28 = sub_22D2BD060();
    if (os_log_type_enabled(v27, v28))
    {
      os_log_type_t v46 = v28;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v48 = v44;
      *(_DWORD *)uint64_t v29 = 136315394;
      swift_bridgeObjectRetain();
      v49[0] = sub_22D0A4D24(a6, a7, &v48);
      sub_22D2BD220();

      swift_release_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2080;
      if (a3)
      {
        v49[0] = (uint64_t)a3;
        id v30 = a3;
        id v31 = a3;
        id v32 = a3;
        sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
        sub_22D030474(0, &qword_268543480);
        if (swift_dynamicCast())
        {
          id v33 = objc_msgSend(v47, sel_hrs_safelyLoggableDescription);
          uint64_t v34 = sub_22D2BCBD0();
          unint64_t v36 = v35;
        }
        else
        {
          v49[0] = (uint64_t)a3;
          id v38 = a3;
          sub_22D2BD680();
          id v39 = (id)HKSensitiveLogItem();
          swift_unknownObjectRelease();
          sub_22D2BD260();
          swift_unknownObjectRelease();
          uint64_t v34 = sub_22D2BCC30();
          unint64_t v36 = v40;
        }
      }
      else
      {
        unint64_t v36 = 0xE500000000000000;
        uint64_t v34 = 0x7D6C696E7BLL;
      }
      v49[0] = sub_22D0A4D24(v34, v36, &v48);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v27, v46, "%s: public key OTA download failed: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v44, -1, -1);
      MEMORY[0x230F7BDF0](v29, -1, -1);

      uint64_t v37 = (uint64_t)a3;
      if (a3) {
        goto LABEL_21;
      }
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
      uint64_t v37 = (uint64_t)a3;
      if (a3)
      {
LABEL_21:
        v49[0] = v37;
        char v50 = 1;
        id v42 = a3;
        goto LABEL_22;
      }
    }
    sub_22D263BDC();
    uint64_t v37 = swift_allocError();
    *uint64_t v41 = 0;
    goto LABEL_21;
  }
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_22D2BC390();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
  id v15 = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v16 = sub_22D2BC380();
  os_log_type_t v17 = sub_22D2BD080();
  if (os_log_type_enabled(v16, v17))
  {
    id v45 = a8;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v49[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_22D0A4D24(a6, a7, v49);
    sub_22D2BD220();

    swift_release();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22CFEE000, v16, v17, "%s: public key OTA download completed", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v19, -1, -1);
    long long v20 = v18;
    a8 = v45;
    MEMORY[0x230F7BDF0](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_22D263B74(a10, v49);
  char v50 = 0;
LABEL_22:
  a8(v49);
  return sub_22D264900((uint64_t)v49);
}

BOOL static WellKnownJWKSHandlerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WellKnownJWKSHandlerError.hash(into:)()
{
  return sub_22D2BD740();
}

uint64_t WellKnownJWKSHandlerError.hashValue.getter()
{
  return sub_22D2BD760();
}

id sub_22D262EE0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v35 = a3;
  sub_22CFF9E78();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v4, sel_rawData);
  uint64_t v11 = sub_22D2BBB20();
  unint64_t v33 = v12;
  uint64_t v34 = v11;

  id v13 = objc_msgSend(v4, sel_sourceType);
  id v14 = objc_msgSend(v4, sel_sourceURL);
  if (v14)
  {
    id v15 = v14;
    sub_22D2BBA50();

    uint64_t v16 = sub_22D2BBAA0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
  }
  else
  {
    uint64_t v17 = sub_22D2BBAA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
  }
  id v18 = objc_msgSend(v4, sel_issuerIdentifier);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_22D2BCBD0();
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v22 = 0;
  }
  id v23 = objc_msgSend(v4, sel_signingKeyID);
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = sub_22D2BCBD0();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  id v28 = objc_msgSend(v4, sel_metadata);
  if (v28)
  {
    uint64_t v29 = v28;
    sub_22D2640C4();
    uint64_t v30 = sub_22D2BCB00();
  }
  else
  {
    uint64_t v30 = 0;
  }
  objc_allocWithZone(MEMORY[0x263F45C30]);
  sub_22CFFA158(a1, a2);
  return sub_22D263174(v34, v33, (uint64_t)v13, (uint64_t)v9, v20, v22, v25, v27, a1, a2, v35, v30);
}

id sub_22D263174(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16 = (void *)sub_22D2BBB00();
  uint64_t v17 = sub_22D2BBAA0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(a4, 1, v17) != 1)
  {
    uint64_t v19 = (void *)sub_22D2BBA10();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a4, v17);
  }
  if (a6)
  {
    uint64_t v20 = (void *)sub_22D2BCBA0();
    swift_bridgeObjectRelease();
    unint64_t v21 = a10;
    if (a8)
    {
LABEL_5:
      uint64_t v22 = (void *)sub_22D2BCBA0();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v21 = a10;
    if (a8) {
      goto LABEL_5;
    }
  }
  uint64_t v22 = 0;
LABEL_8:
  if (v21 >> 60 != 15)
  {
    id v23 = (void *)sub_22D2BBB00();
    sub_22CFF9C10(a9, v21);
    uint64_t v24 = a11;
    if (a12) {
      goto LABEL_10;
    }
LABEL_12:
    uint64_t v25 = 0;
    goto LABEL_13;
  }
  id v23 = 0;
  uint64_t v24 = a11;
  if (!a12) {
    goto LABEL_12;
  }
LABEL_10:
  sub_22D2640C4();
  uint64_t v25 = (void *)sub_22D2BCAF0();
  swift_bridgeObjectRelease();
LABEL_13:
  id v26 = objc_msgSend(v29, sel_initWithRawData_sourceType_sourceURL_issuerIdentifier_signingKeyID_JWKSData_JWKSOutcome_metadata_, v16, a3, v19, v20, v22, v23, v24, v25);
  sub_22CFF5630(a1, a2);

  return v26;
}

uint64_t sub_22D263388(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v4 = MEMORY[0x263F8EE78];
    if (!v3) {
      return v4;
    }
    uint64_t v16 = MEMORY[0x263F8EE78];
    uint64_t result = sub_22D24BFBC(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v6 = 0;
    uint64_t v4 = v16;
    unint64_t v14 = v2 & 0xC000000000000001;
    unint64_t v7 = v2;
    while (v3 != v6)
    {
      if (v14) {
        id v8 = (id)MEMORY[0x230F7AF90](v6, v2);
      }
      else {
        id v8 = *(id *)(v2 + 8 * v6 + 32);
      }
      id v9 = v8;
      unint64_t v10 = *(void *)(v16 + 16);
      unint64_t v11 = *(void *)(v16 + 24);
      id v12 = a2;
      if (v10 >= v11 >> 1) {
        sub_22D24BFBC(v11 > 1, v10 + 1, 1);
      }
      ++v6;
      *(void *)(v16 + 16) = v10 + 1;
      uint64_t v13 = v16 + 72 * v10;
      *(void *)(v13 + 32) = v12;
      *(void *)(v13 + 40) = v9;
      *(_OWORD *)(v13 + 48) = 0u;
      *(_OWORD *)(v13 + 64) = 0u;
      *(_OWORD *)(v13 + 80) = 0u;
      *(void *)(v13 + 96) = 0;
      unint64_t v2 = v7;
      if (v3 == v6) {
        return v4;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_22D263508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D2646FC(a1, (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))sub_22D25F158, a3, a4);
}

uint64_t sub_22D263520()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_22D26355C()
{
  unint64_t result = qword_268543398;
  if (!qword_268543398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543398);
  }
  return result;
}

uint64_t destroy for WellKnownJWKSHandler(uint64_t a1)
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WellKnownJWKSHandler(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WellKnownJWKSHandler(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a1[1];
  id v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WellKnownJWKSHandler(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WellKnownJWKSHandler()
{
  return &type metadata for WellKnownJWKSHandler;
}

unsigned char *storeEnumTagSinglePayload for WellKnownJWKSHandlerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D2637E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WellKnownJWKSHandlerError()
{
  return &type metadata for WellKnownJWKSHandlerError;
}

uint64_t destroy for WellKnownJWKSProcessingContext(uint64_t a1)
{
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WellKnownJWKSProcessingContext(void *a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  unsigned int v6 = a1 + 2;
  uint64_t v7 = a2 + 16;
  uint64_t v8 = *(void *)(a2 + 40);
  id v9 = v4;
  id v10 = v5;
  if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 48);
    a1[5] = v8;
    a1[6] = v11;
    (**(void (***)(void *, uint64_t, uint64_t))(v8 - 8))(v6, v7, v8);
  }
  else
  {
    long long v12 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)unsigned int v6 = *(_OWORD *)v7;
    *((_OWORD *)v6 + 1) = v12;
    v6[4] = *(void *)(v7 + 32);
  }
  uint64_t v13 = *(void *)(a2 + 64);
  a1[7] = *(void *)(a2 + 56);
  a1[8] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WellKnownJWKSProcessingContext(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v10)
    {
      *(void *)(a1 + 40) = v10;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    long long v11 = *(_OWORD *)(a2 + 16);
    long long v12 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    goto LABEL_8;
  }
  if (!v10)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for WellKnownJWKSProcessingContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WellKnownJWKSProcessingContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WellKnownJWKSProcessingContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WellKnownJWKSProcessingContext()
{
  return &type metadata for WellKnownJWKSProcessingContext;
}

void *sub_22D263B74(uint64_t a1, void *a2)
{
  return a2;
}

uint64_t sub_22D263BAC(uint64_t a1)
{
  return a1;
}

unint64_t sub_22D263BDC()
{
  unint64_t result = qword_2685433A0;
  if (!qword_2685433A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685433A0);
  }
  return result;
}

void sub_22D263C30(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v8 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_22D263CB0()
{
  if (!qword_2685433B0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D263C30(255, &qword_268543338, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDCF0]);
    sub_22D2645EC(&qword_268543340, &qword_268543338, v0);
    unint64_t v1 = sub_22D2BC520();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_2685433B0);
    }
  }
}

void sub_22D263D78()
{
  if (!qword_268542078)
  {
    sub_22D021C20(255, &qword_268542080);
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542078);
    }
  }
}

uint64_t sub_22D263DE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D260634(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

void sub_22D263DF0()
{
  if (!qword_2685433C8)
  {
    sub_22CFF7DC0(255);
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D263C30(255, &qword_2685433D0, (uint64_t)&type metadata for WebRequestResponse, MEMORY[0x263EFDCF0]);
    sub_22D2645A4(&qword_26853D880, sub_22CFF7DC0);
    sub_22D263F00(&qword_2685433D8, &qword_2685433D0, v0);
    unint64_t v1 = sub_22D2BC4A0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_2685433C8);
    }
  }
}

uint64_t sub_22D263F00(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D263C30(255, a2, (uint64_t)&type metadata for WebRequestResponse, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D263F50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, ValueMetadata *, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, &type metadata for WellKnownJWKSProcessingContext, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_22D263FD8()
{
  return sub_22D2645A4(&qword_2685433E8, (void (*)(uint64_t))sub_22D263DF0);
}

uint64_t sub_22D264010@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D260F80(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_22D264020@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22D261480(a1, v2 + 16, a2);
}

unint64_t sub_22D264028()
{
  unint64_t result = qword_2685433F0;
  if (!qword_2685433F0)
  {
    sub_22D263F50(255, &qword_2685433E0, (uint64_t (*)(uint64_t))sub_22D263DF0, sub_22D263FD8, MEMORY[0x263EFDB28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685433F0);
  }
  return result;
}

unint64_t sub_22D2640C4()
{
  unint64_t result = qword_2685433F8;
  if (!qword_2685433F8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2685433F8);
  }
  return result;
}

uint64_t sub_22D264110(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D264178(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_22D2641D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_22D264224()
{
  if (!qword_268543428)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D263C30(255, &qword_268543338, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDCF0]);
    unint64_t v1 = (uint64_t (*)(void, uint64_t))MEMORY[0x263EFDDF8];
    sub_22D2641D8(255, &qword_268543418, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDDF8]);
    sub_22D2645EC(&qword_268543340, &qword_268543338, v0);
    sub_22D264360(&qword_268543430, &qword_268543418, v1);
    unint64_t v2 = sub_22D2BC4A0();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_268543428);
    }
  }
}

uint64_t sub_22D264360(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D2641D8(255, a2, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D2643B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D263C30(255, &qword_268543338, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_22D2645EC(&qword_268543340, &qword_268543338, v7);
    a4();
    unint64_t v8 = sub_22D2BC520();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D2644A4()
{
  if (!qword_268543440)
  {
    sub_22D264224();
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    sub_22D2645A4(&qword_268543448, (void (*)(uint64_t))sub_22D264224);
    unint64_t v0 = sub_22D2BC430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543440);
    }
  }
}

uint64_t sub_22D264570()
{
  return sub_22D2645A4(&qword_268543450, (void (*)(uint64_t))sub_22D2644A4);
}

uint64_t sub_22D2645A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2645EC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D263C30(255, a2, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_15Tm()
{
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_22D264698()
{
  sub_22D263B74(v0 + 16, v2);
  return sub_22D2BC6B0();
}

uint64_t sub_22D2646E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D2646FC(a1, (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))sub_22D25FF8C, a3, a4);
}

uint64_t sub_22D2646FC(uint64_t a1, uint64_t (*a2)(uint64_t, void, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  return a2(a1, a2, a3, a4);
}

uint64_t sub_22D264744(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D2643B0(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D264794()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_22D264804(uint64_t a1, uint64_t a2)
{
  return sub_22D2626B0(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), v2 + 48);
}

uint64_t sub_22D264814()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  if (*(void *)(v0 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_22D26488C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_22D262878(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void (**)(void))(v3 + 48), *(void *)(v3 + 56), v3 + 64);
}

uint64_t sub_22D2648C0()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D264900(uint64_t a1)
{
  sub_22D263C30(0, &qword_268543478, (uint64_t)&type metadata for WellKnownJWKSProcessingContext, MEMORY[0x263F8E848]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D264980()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 112)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 144, 7);
}

void sub_22D264A00(uint64_t a1, uint64_t a2)
{
  sub_22D261514(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), v2 + 72);
}

uint64_t sub_22D264A38()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 152, 7);
}

uint64_t sub_22D264AB8(void *a1, void *a2)
{
  return sub_22D261694(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void (**)(uint64_t *))(v2 + 64), *(void *)(v2 + 72), (id *)(v2 + 80));
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t sub_22D264B0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22D264B78(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  int v32 = a3;
  uint64_t v9 = sub_22D2BC000();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = type metadata accessor for PBDeleteBlobsResponse(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_22D2BC040();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  sub_22CFF9B64(a1, a2);
  sub_22D2BC030();
  sub_22D264F3C(&qword_26853FC88, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobsResponse);
  sub_22D2BC1D0();
  if (!v4)
  {
    char v25 = v32;
    id v26 = objc_msgSend(v36, sel_statusCode);
    sub_22D264F84(a4, (uint64_t)v16);
    if (v26 != (id)207 || (v25 & 1) == 0)
    {
      sub_22D264FE8((uint64_t)v16);
      return;
    }
    char v27 = sub_22D2B0860();
    sub_22D264FE8((uint64_t)v16);
    if ((v27 & 1) == 0) {
      return;
    }
    sub_22D04344C();
    uint64_t v5 = (void *)swift_allocError();
    *(void *)uint64_t v28 = 1;
    *(void *)(v28 + 8) = 0;
    *(void *)(v28 + 16) = 0;
    *(void *)(v28 + 24) = 0;
    *(unsigned char *)(v28 + 32) = 6;
    swift_willThrow();
    sub_22D264FE8(a4);
  }
  *(void *)&long long v33 = v5;
  id v18 = v5;
  sub_22CFF49FC();
  if (swift_dynamicCast())
  {

    uint64_t v20 = v30;
    uint64_t v19 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v30, v13, v9);
    sub_22D264F3C(&qword_26853E9A0, MEMORY[0x263F50578]);
    uint64_t v21 = sub_22D2BD6D0();
    uint64_t v23 = v22;
    sub_22D04344C();
    swift_allocError();
    *(void *)uint64_t v24 = v21;
    *(void *)(v24 + 8) = v23;
    *(void *)(v24 + 16) = 0xD000000000000015;
    *(void *)(v24 + 24) = 0x800000022D2DE670;
    *(unsigned char *)(v24 + 32) = 4;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v9);
  }
}

uint64_t sub_22D264F3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D264F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBDeleteBlobsResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D264FE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PBDeleteBlobsResponse(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void destroy for ClinicalSharingStatisticsQuery(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for ClinicalSharingStatisticsQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingStatisticsQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ClinicalSharingStatisticsQuery(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingStatisticsQuery(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingStatisticsQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingStatisticsQuery()
{
  return &type metadata for ClinicalSharingStatisticsQuery;
}

uint64_t sub_22D265280(void (*a1)(void *__return_ptr, char *))
{
  void (*v13)(void *__return_ptr, char *);

  uint64_t v13 = a1;
  uint64_t v3 = sub_22D2BBC30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_22D267AEC(0, &qword_26AEC0F48, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v12 - v9;
  sub_22D267DEC(v1, (uint64_t)v12 - v9, &qword_26AEC0F48, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  v13(v12, v6);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v12[0];
}

uint64_t sub_22D265480@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  v18[1] = a2;
  uint64_t v19 = a1;
  uint64_t v7 = sub_22D2BB6F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  sub_22D267AEC(0, &qword_26853D7A0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v18 - v13;
  sub_22D267DEC(v5, (uint64_t)v18 - v13, &qword_26853D7A0, v11);
  uint64_t v15 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
  {
    uint64_t v16 = a3;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
    uint64_t v16 = a3;
    v19(v10);
    if (v4) {
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v15 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, v15, 1, v7);
}

uint64_t sub_22D2656A8()
{
  sub_22D08326C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_22D2BD020();
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  id v95 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0A1854();
  uint64_t v100 = v7;
  uint64_t v99 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v96 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D267AEC(0, &qword_26853D7A0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v93 = (uint64_t)&v85 - v10;
  uint64_t v94 = sub_22D2BB8E0();
  uint64_t v92 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  unint64_t v91 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_22D2BBE00();
  uint64_t v105 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v104 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2678E4(0, &qword_268543488, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v102 = (char *)&v85 - v16;
  sub_22D2678E4(0, &qword_268543490, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  uint64_t v18 = v17;
  uint64_t v103 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v101 = (char *)&v85 - v19;
  uint64_t v114 = sub_22D2BBC30();
  uint64_t v106 = *(void *)(v114 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v114);
  unint64_t v90 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v85 - v22;
  uint64_t v24 = sub_22D2BB6F0();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v120 = *((_WORD *)v0 + 16);
  long long v29 = v0[1];
  long long v118 = *v0;
  long long v119 = v29;
  uint64_t v30 = *(void *)(*((void *)&v118 + 1) + 16);
  if (v30)
  {
    uint64_t v85 = v18;
    uint64_t v86 = v15;
    uint64_t v87 = v14;
    uint64_t v88 = *((void *)&v118 + 1);
    uint64_t v113 = v25;
    if (v30 == 1)
    {
      uint64_t v31 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v32 = v27;
      (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v31, *((void *)&v118 + 1)+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)), v25);
      long long v33 = self;
      sub_22D2BB6C0();
      long long v34 = (void *)sub_22D2BBBC0();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v106 + 8);
      uint64_t v36 = v114;
      v35(v23, v114);
      sub_22D2BB690();
      uint64_t v37 = (void *)sub_22D2BBBC0();
      uint64_t v112 = v35;
      v35(v23, v36);
      id v38 = objc_msgSend(v33, sel_predicateForSamplesWithStartDate_endDate_options_, v34, v37, 0);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v113);
    }
    else
    {
      v117[0] = MEMORY[0x263F8EE78];
      uint64_t v40 = *((void *)&v118 + 1);
      uint64_t v41 = v27;
      swift_bridgeObjectRetain();
      sub_22D2BD3D0();
      id v42 = (void (*)(char *, uint64_t))self;
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
      v41 += 16;
      uint64_t v111 = v43;
      uint64_t v112 = v42;
      uint64_t v44 = v40 + ((*(unsigned __int8 *)(v41 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 64));
      uint64_t v110 = *(void *)(v41 + 56);
      uint64_t v108 = v106 + 8;
      uint64_t v109 = (void (**)(char *, uint64_t))(v41 - 8);
      uint64_t v107 = v41;
      uint64_t v45 = v113;
      os_log_type_t v46 = (void (**)(char *, uint64_t))(v106 + 8);
      do
      {
        v111(v28, v44, v45);
        sub_22D2BB6C0();
        id v47 = (void *)sub_22D2BBBC0();
        uint64_t v48 = *v46;
        uint64_t v49 = v114;
        (*v46)(v23, v114);
        sub_22D2BB690();
        char v50 = (void *)sub_22D2BBBC0();
        v48(v23, v49);
        id v51 = objc_msgSend(v112, sel_predicateForSamplesWithStartDate_endDate_options_, v47, v50, 0);

        (*v109)(v28, v45);
        sub_22D2BD3A0();
        sub_22D2BD3E0();
        sub_22D2BD3F0();
        sub_22D2BD3B0();
        v44 += v110;
        --v30;
      }
      while (v30);
      uint64_t v112 = v48;
      swift_bridgeObjectRelease();
      sub_22D030474(0, &qword_26853E820);
      id v52 = (void *)sub_22D2BCDF0();
      swift_release();
      id v38 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v52);
    }
    uint64_t v53 = v120;
    long long v54 = v119;
    id v55 = (id)v119;
    uint64_t v111 = (void (*)(char *, uint64_t, uint64_t))sub_22D229C70(0x7374617473, 0xE500000000000000, v54, *((void *)&v54 + 1), v53);
    uint64_t v113 = v56;

    uint64_t v57 = v118;
    sub_22CFF4B00(v118 + 16, (uint64_t)v117);
    __swift_project_boxed_opaque_existential_1(v117, v117[3]);
    self;
    id v58 = (void *)swift_dynamicCastObjCClass();
    id v59 = v38;
    uint64_t v60 = (uint64_t)v90;
    uint64_t v61 = v89;
    if (v58 && (unint64_t v62 = (unint64_t)objc_msgSend(v58, sel_aggregationStyle), v62 <= 2))
    {
      uint64_t v63 = v59;
      uint64_t v110 = qword_22D2D25A8[v62];
    }
    else
    {
      uint64_t v63 = v59;
      uint64_t v110 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v104, v57 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v61);
    uint64_t v64 = v57 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_date;
    if (v53 && ((1 << SBYTE8(v54)) & 0x67) == 0)
    {
      sub_22D239F40((uint64_t)&v118);
      if (*((void *)&v54 + 1) == 3)
      {
        uint64_t v83 = v64;
        uint64_t v65 = v104;
        sub_22D0B2984(0, v83, v60);
      }
      else
      {
        uint64_t v84 = v64;
        uint64_t v65 = v104;
        sub_22D0B307C(v84, v60);
      }
    }
    else
    {
      sub_22D239F40((uint64_t)&v118);
      uint64_t v65 = v104;
      sub_22D2BBCE0();
    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v65, v61);
    sub_22D239F84((uint64_t)&v118);
    uint64_t v115 = *((void *)&v54 + 1);
    char v116 = v53;
    unint64_t v66 = v91;
    sub_22D08FCA4();
    uint64_t v67 = swift_bridgeObjectRetain();
    uint64_t v68 = v93;
    sub_22D22C8CC(v67, v93);
    swift_bridgeObjectRelease();
    id v69 = v95;
    sub_22D2BD030();
    sub_22D030474(0, &qword_26853EBC8);
    sub_22D267AA4(&qword_26853EC38, MEMORY[0x263F44B38]);
    id v70 = v96;
    uint64_t v71 = v98;
    sub_22D2BC780();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v69, v71);
    sub_22D267AA4(&qword_26853EC40, (void (*)(uint64_t))sub_22D0A1854);
    uint64_t v72 = v100;
    uint64_t v73 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v70, v72);

    swift_bridgeObjectRelease();
    sub_22D267B4C(v68, &qword_26853D7A0, MEMORY[0x263F062D0]);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v66, v94);
    v112((char *)v60, v114);
    uint64_t v115 = v73;
    uint64_t v74 = swift_allocObject();
    long long v75 = v119;
    *(_OWORD *)(v74 + 16) = v118;
    *(_OWORD *)(v74 + 32) = v75;
    *(_WORD *)(v74 + 48) = v120;
    sub_22D239F40((uint64_t)&v118);
    sub_22D0A0E40();
    type metadata accessor for PBTypedData(0);
    sub_22D267AA4(&qword_26853EBD0, (void (*)(uint64_t))sub_22D0A0E40);
    id v76 = v102;
    sub_22D2BC730();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
    uint64_t v77 = swift_allocObject();
    long long v78 = v119;
    *(_OWORD *)(v77 + 16) = v118;
    *(_OWORD *)(v77 + 32) = v78;
    *(_WORD *)(v77 + 48) = v120;
    sub_22D239F40((uint64_t)&v118);
    type metadata accessor for ClinicalSharingQueryOutput(0);
    id v79 = v101;
    uint64_t v80 = v87;
    sub_22D2BC3C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v76, v80);
    sub_22D267A30();
    uint64_t v81 = v85;
    uint64_t v39 = sub_22D2BC720();

    (*(void (**)(char *, uint64_t))(v103 + 8))(v79, v81);
  }
  else
  {
    type metadata accessor for ClinicalSharingQueryOutput(0);
    sub_22CFF49FC();
    sub_22D2BC6C0();
    sub_22D267AA4((unint64_t *)&qword_26853E828, (void (*)(uint64_t))sub_22D08326C);
    uint64_t v39 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v39;
}

void sub_22D266588(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v56 = a1;
  uint64_t v57 = a2;
  sub_22D267AEC(0, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v52 - v4;
  uint64_t v6 = type metadata accessor for PBDateRange(0);
  uint64_t v54 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PBTimeSeries(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v52 - v13;
  sub_22D267AEC(0, &qword_26853D7A0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v52 - v16;
  long long v18 = v2[1];
  long long v59 = *v2;
  long long v60 = v18;
  __int16 v61 = *((_WORD *)v2 + 16);
  uint64_t v19 = (void *)v18;
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (!v20)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_22D2BC390();
    __swift_project_value_buffer(v37, (uint64_t)qword_26AEC3C90);
    sub_22D239F40((uint64_t)&v59);
    sub_22D239F40((uint64_t)&v59);
    id v38 = sub_22D2BC380();
    os_log_type_t v39 = sub_22D2BD070();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138412290;
      uint64_t v58 = (uint64_t)v19;
      id v42 = v19;
      sub_22D2BD220();
      *uint64_t v41 = v19;
      sub_22D239F84((uint64_t)&v59);
      sub_22D239F84((uint64_t)&v59);
      _os_log_impl(&dword_22CFEE000, v38, v39, "%@ is not a quantity type", v40, 0xCu);
      sub_22D0CD208();
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v41, -1, -1);
      MEMORY[0x230F7BDF0](v40, -1, -1);
    }
    else
    {
      sub_22D239F84((uint64_t)&v59);
      sub_22D239F84((uint64_t)&v59);
    }
    goto LABEL_20;
  }
  uint64_t v21 = v20;
  id v22 = v19;
  id v55 = sub_22D272B14();
  if (!v55)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_22D2BC390();
    __swift_project_value_buffer(v43, (uint64_t)qword_26AEC3C90);
    id v44 = v22;
    id v38 = sub_22D2BC380();
    os_log_type_t v45 = sub_22D2BD070();
    if (!os_log_type_enabled(v38, v45))
    {

      goto LABEL_21;
    }
    os_log_type_t v46 = (uint8_t *)swift_slowAlloc();
    id v47 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v46 = 138412290;
    uint64_t v58 = v21;
    id v48 = v44;
    sub_22D2BD220();
    *id v47 = v21;

    _os_log_impl(&dword_22CFEE000, v38, v45, "Missing encoding unit for %@", v46, 0xCu);
    sub_22D0CD208();
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v47, -1, -1);
    MEMORY[0x230F7BDF0](v46, -1, -1);

LABEL_20:
LABEL_21:
    uint64_t v49 = type metadata accessor for PBTypedData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v57, 1, 1, v49);
    return;
  }
  if ((uint64_t)objc_msgSend(v56, sel_statisticsCount) < 1)
  {
    uint64_t v50 = type metadata accessor for PBTypedData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v57, 1, 1, v50);

    id v51 = v55;
  }
  else
  {
    uint64_t v23 = sub_22D2BB6F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 1, 1, v23);
    sub_22D2BBFE0();
    uint64_t v24 = *(int *)(v9 + 20);
    if (qword_26853CF38 != -1) {
      swift_once();
    }
    id v53 = v22;
    *(void *)&v14[v24] = qword_268540090;
    swift_retain();
    id v25 = objc_msgSend(v55, sel_unitString);
    uint64_t v26 = sub_22D2BCBD0();
    uint64_t v28 = v27;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTimeSeries._StorageClass(0);
      swift_allocObject();
      id v52 = v5;
      uint64_t v29 = swift_retain();
      uint64_t v5 = v52;
      *(void *)&v14[v24] = sub_22D160258(v29);
      swift_release();
    }
    uint64_t v30 = (uint64_t *)(*(void *)&v14[v24]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__unit);
    swift_beginAccess();
    uint64_t *v30 = v26;
    v30[1] = v28;
    uint64_t v31 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v31);
    *(&v52 - 4) = v17;
    *(&v52 - 3) = (char *)&v59;
    *(&v52 - 2) = (char *)v55;
    uint64_t v32 = sub_22D267588((uint64_t)sub_22D267B40, (uint64_t)(&v52 - 6));
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTimeSeries._StorageClass(0);
      swift_allocObject();
      uint64_t v33 = swift_retain();
      *(void *)&v14[v24] = sub_22D160258(v33);
      swift_release();
    }
    long long v34 = (uint64_t *)(*(void *)&v14[v24]
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon12PBTimeSeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__values);
    swift_beginAccess();
    uint64_t *v34 = v32;
    swift_bridgeObjectRelease();
    sub_22D22C530(*((uint64_t *)&v60 + 1), v61, (uint64_t)v17, (uint64_t)v8);
    sub_22D267BA8((uint64_t)v8, (uint64_t)v5, type metadata accessor for PBDateRange);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v5, 0, 1, v6);
    uint64_t v35 = v57;
    sub_22D22DB00((uint64_t)v5, v57);
    sub_22D267B4C((uint64_t)v5, &qword_26853D7B0, (void (*)(uint64_t))type metadata accessor for PBDateRange);
    sub_22D267BA8((uint64_t)v14, (uint64_t)v12, type metadata accessor for PBTimeSeries);
    PBTypedData.timeSeries.setter((uint64_t)v12);

    sub_22D267C10((uint64_t)v8, type metadata accessor for PBDateRange);
    sub_22D267C10((uint64_t)v14, type metadata accessor for PBTimeSeries);
    uint64_t v36 = type metadata accessor for PBTypedData(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    sub_22D267B4C((uint64_t)v17, &qword_26853D7A0, MEMORY[0x263F062D0]);
  }
}

uint64_t sub_22D266EC0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v36 = a3;
  uint64_t v31 = a2;
  uint64_t v33 = a5;
  uint64_t v30 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  sub_22D267AEC(0, &qword_26853D7A0, MEMORY[0x263F062D0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v29 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v32 = (char *)&v29 - v13;
  uint64_t v14 = sub_22D2BBC30();
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_22D2BB6F0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  id v22 = (char *)&v29 - v21;
  id v23 = objc_msgSend(a1, sel_startDate);
  sub_22D2BBC00();

  long long v34 = a1;
  id v24 = objc_msgSend(a1, sel_endDate);
  sub_22D2BBC00();

  uint64_t v25 = v31;
  sub_22D2BB6A0();
  uint64_t v26 = v30;
  sub_22D267DEC(v25, (uint64_t)v9, &qword_26853D7A0, v30);
  id v38 = v22;
  sub_22D265480((void (*)(char *))sub_22D267D40, (uint64_t)v37, (uint64_t)v12);
  sub_22D267B4C((uint64_t)v9, &qword_26853D7A0, v26);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
  {
    uint64_t v27 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v32, v20, v16);
    sub_22D267B4C((uint64_t)v12, &qword_26853D7A0, MEMORY[0x263F062D0]);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    uint64_t v27 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v32, v12, v16);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v27, 0, 1, v16);
  sub_22D267D6C(v27, v25);
  sub_22D2672A0(v34, v35, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v16);
}

uint64_t sub_22D2672A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22D2BBC30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0xE000000000000000;
  *(void *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = 0xE000000000000000;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0xE000000000000000;
  *(_OWORD *)(a3 + 80) = 0u;
  uint64_t v12 = MEMORY[0x263F8EE78];
  *(_OWORD *)(a3 + 96) = 0u;
  *(void *)(a3 + 112) = 0;
  *(void *)(a3 + 120) = v12;
  *(void *)(a3 + 128) = 0;
  *(_WORD *)(a3 + 136) = 256;
  type metadata accessor for PBTimeSeries.Value(0);
  sub_22D2BBFE0();
  id v13 = objc_msgSend(a1, sel_minimumQuantity);
  if (v13)
  {
    uint64_t v14 = v13;
    objc_msgSend(v13, sel_doubleValueForUnit_, a2);
    uint64_t v16 = v15;

    *(void *)(a3 + 80) = v16;
  }
  id v17 = objc_msgSend(a1, sel_maximumQuantity);
  if (v17)
  {
    uint64_t v18 = v17;
    objc_msgSend(v17, sel_doubleValueForUnit_, a2);
    uint64_t v20 = v19;

    *(void *)(a3 + 88) = v20;
  }
  id v21 = objc_msgSend(a1, sel_averageQuantity);
  if (v21)
  {
    id v22 = v21;
    objc_msgSend(v21, sel_doubleValueForUnit_, a2);
    uint64_t v24 = v23;

    *(void *)(a3 + 96) = v24;
  }
  id v25 = objc_msgSend(a1, sel_sumQuantity);
  if (v25)
  {
    uint64_t v26 = v25;
    objc_msgSend(v25, sel_doubleValueForUnit_, a2);
    uint64_t v28 = v27;

    *(void *)(a3 + 104) = v28;
  }
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_dataCount);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    *(_DWORD *)(a3 + 40) = result;
    id v30 = objc_msgSend(a1, sel_startDate);
    sub_22D2BBC00();

    id v31 = *(id *)(v11 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter);
    uint64_t v32 = (void *)sub_22D2BBBC0();
    id v33 = objc_msgSend(v31, sel_stringFromDate_, v32);

    uint64_t v34 = sub_22D2BCBD0();
    uint64_t v36 = v35;

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a3 + 24) = v34;
    *(void *)(a3 + 32) = v36;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D267588(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(v2, sel_statisticsCount);
  uint64_t v7 = MEMORY[0x263F8EE78];
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = v7;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t)v6 > *(void *)(v7 + 24) >> 1)
  {
    if (*(void *)(v7 + 16) <= (uint64_t)v6) {
      int64_t v9 = (int64_t)v6;
    }
    else {
      int64_t v9 = *(void *)(v7 + 16);
    }
    sub_22D24B88C(isUniquelyReferenced_nonNull_native, v9, 0);
  }
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = &v17;
  v10[3] = a1;
  v10[4] = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_22D267C80;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_22D267C9C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22D267888;
  aBlock[3] = &block_descriptor_20;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_enumeratePopulatedStatisticsWithBlock_, v12);
  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v17;
    swift_release();
    return v15;
  }
  return result;
}

uint64_t sub_22D267744(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v7 = type metadata accessor for PBTimeSeries.Value(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(a1);
  uint64_t v11 = *a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_22D24B88C(0, *(void *)(v11 + 16) + 1, 1);
    uint64_t v11 = *a3;
  }
  unint64_t v14 = *(void *)(v11 + 16);
  unint64_t v13 = *(void *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    sub_22D24B88C(v13 > 1, v14 + 1, 1);
    uint64_t v11 = *a3;
  }
  *(void *)(v11 + 16) = v14 + 1;
  return sub_22D267CDC((uint64_t)v10, v11+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v14);
}

void sub_22D267888(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_22D2678E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_22D0A0E40();
    a3(255);
    sub_22D267AA4(&qword_26853EBD0, (void (*)(uint64_t))sub_22D0A0E40);
    unint64_t v5 = sub_22D2BC3D0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_22D267994(void **a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t objectdestroyTm_11()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 50, 7);
}

uint64_t sub_22D267A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D22B174(a1, 0, a2);
}

unint64_t sub_22D267A30()
{
  unint64_t result = qword_268543498;
  if (!qword_268543498)
  {
    sub_22D2678E4(255, &qword_268543490, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543498);
  }
  return result;
}

uint64_t sub_22D267AA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D267AEC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D267B40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D266EC0(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_22D267B4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D267AEC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D267BA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D267C10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D267C70()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22D267C80(uint64_t a1, uint64_t a2)
{
  return sub_22D267744(a1, a2, *(uint64_t **)(v2 + 16), *(void (**)(uint64_t))(v2 + 24));
}

uint64_t sub_22D267C8C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D267C9C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t sub_22D267CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBTimeSeries.Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D267D40()
{
  return sub_22D2BB6E0();
}

uint64_t sub_22D267D6C(uint64_t a1, uint64_t a2)
{
  sub_22D267AEC(0, &qword_26853D7A0, MEMORY[0x263F062D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D267DEC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D267AEC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D267E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = sub_22D0D3D28(MEMORY[0x263F8EE78]);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  uint64_t v63 = v2;
  uint64_t v10 = v9(v4, a2);
  int64_t v64 = 0;
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v54 = v10 + 64;
  uint64_t v59 = v10;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v58 = &v67;
  __int16 v61 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  unint64_t v62 = (long long *)&v72;
  long long v60 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v57 = a2;
  uint64_t v56 = a2 + 24;
  int64_t v55 = (unint64_t)(v12 + 63) >> 6;
  int64_t v53 = v55 - 1;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v64 << 6);
LABEL_9:
      uint64_t v19 = *(void *)(v59 + 56);
      uint64_t v20 = (void *)(*(void *)(v59 + 48) + 16 * v18);
      uint64_t v21 = v20[1];
      *(void *)&long long v66 = *v20;
      *((void *)&v66 + 1) = v21;
      sub_22CFF4B00(v19 + 40 * v18, (uint64_t)v58);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    int64_t v22 = v64 + 1;
    if (__OFADD__(v64, 1)) {
      goto LABEL_46;
    }
    if (v22 < v55)
    {
      unint64_t v23 = *(void *)(v54 + 8 * v22);
      if (v23) {
        goto LABEL_13;
      }
      int64_t v24 = v64 + 2;
      ++v64;
      if (v22 + 1 < v55)
      {
        unint64_t v23 = *(void *)(v54 + 8 * v24);
        if (v23) {
          goto LABEL_16;
        }
        int64_t v64 = v22 + 1;
        if (v22 + 2 < v55)
        {
          unint64_t v23 = *(void *)(v54 + 8 * (v22 + 2));
          if (v23)
          {
            v22 += 2;
            goto LABEL_13;
          }
          int64_t v24 = v22 + 3;
          int64_t v64 = v22 + 2;
          if (v22 + 3 < v55) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v14 = 0;
    uint64_t v69 = 0;
    long long v67 = 0u;
    long long v68 = 0u;
    long long v66 = 0u;
LABEL_28:
    sub_22D26862C((uint64_t)&v66, (uint64_t)&v70);
    uint64_t v25 = v71;
    if (!v71)
    {
      swift_release();
      return v8;
    }
    uint64_t v26 = v70;
    sub_22CFF8C10(v62, (uint64_t)&v66);
    uint64_t v27 = *((void *)&v67 + 1);
    uint64_t v28 = v68;
    __swift_project_boxed_opaque_existential_1(&v66, *((uint64_t *)&v67 + 1));
    LOBYTE(v27) = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
    (*v61)(v7, v63, v4);
    if ((v27 & 1) == 0)
    {
      (*v60)(v7, v4);
LABEL_33:
      id v30 = v7;
      uint64_t v31 = v4;
      uint64_t v32 = *((void *)&v67 + 1);
      uint64_t v33 = v68;
      __swift_project_boxed_opaque_existential_1(&v66, *((uint64_t *)&v67 + 1));
      uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
      unint64_t v35 = v8;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v65 = (void *)v8;
      uint64_t v37 = v26;
      unint64_t v39 = sub_22D04EB7C(v26, v25);
      uint64_t v40 = *(void *)(v35 + 16);
      BOOL v41 = (v38 & 1) == 0;
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41))
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      char v43 = v38;
      if (*(void *)(v35 + 24) >= v42)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          os_log_type_t v46 = v65;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
        }
        else
        {
          sub_22D05608C();
          os_log_type_t v46 = v65;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
        }
      }
      else
      {
        sub_22D0528C0(v42, isUniquelyReferenced_nonNull_native);
        unint64_t v44 = sub_22D04EB7C(v37, v25);
        if ((v43 & 1) != (v45 & 1)) {
          goto LABEL_49;
        }
        unint64_t v39 = v44;
        os_log_type_t v46 = v65;
        if ((v43 & 1) == 0)
        {
LABEL_40:
          v46[(v39 >> 6) + 8] |= 1 << v39;
          id v47 = (uint64_t *)(v46[6] + 16 * v39);
          *id v47 = v37;
          v47[1] = v25;
          *(void *)(v46[7] + 8 * v39) = v34;
          uint64_t v48 = v46[2];
          BOOL v49 = __OFADD__(v48, 1);
          uint64_t v50 = v48 + 1;
          if (v49) {
            goto LABEL_47;
          }
          unint64_t v8 = (unint64_t)v46;
          v46[2] = v50;
          swift_bridgeObjectRetain();
          goto LABEL_5;
        }
      }
      unint64_t v8 = (unint64_t)v46;
      uint64_t v15 = v46[7];
      uint64_t v16 = 8 * v39;

      *(void *)(v15 + v16) = v34;
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v31;
      uint64_t v7 = v30;
      goto LABEL_6;
    }
    char v29 = (*(uint64_t (**)(uint64_t))(v57 + 24))(v4);
    (*v60)(v7, v4);
    if (v29) {
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  }
  unint64_t v23 = *(void *)(v54 + 8 * v24);
  if (v23)
  {
LABEL_16:
    int64_t v22 = v24;
LABEL_13:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v64 = v22;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v22 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v22 >= v55)
    {
      int64_t v64 = v53;
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v54 + 8 * v22);
    ++v24;
    if (v23) {
      goto LABEL_13;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t result = sub_22D2BD6A0();
  __break(1u);
  return result;
}

void sub_22D2683D8(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v6 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  sub_22CFF4B00((uint64_t)a1, (uint64_t)v10);
  uint64_t v7 = swift_allocObject();
  sub_22CFF8C10(v10, v7 + 16);
  aBlock[4] = sub_22D268548;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22D268588;
  aBlock[3] = &block_descriptor_21;
  unint64_t v8 = _Block_copy(aBlock);
  swift_release();
  LOBYTE(v4) = AnalyticsSendEventLazy();
  _Block_release(v8);

  *a2 = v4;
}

uint64_t sub_22D268510()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22D268548()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return sub_22D267E58(v2, v3);
}

id sub_22D268588(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_22D0B0E78();
    uint64_t v4 = (void *)sub_22D2BCAF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t sub_22D26862C(uint64_t a1, uint64_t a2)
{
  sub_22D268690();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22D268690()
{
  if (!qword_26AEC2258)
  {
    sub_22D2686E8();
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2258);
    }
  }
}

void sub_22D2686E8()
{
  if (!qword_26AEC2250)
  {
    sub_22D0C2AE0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AEC2250);
    }
  }
}

uint64_t sub_22D268754(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = (void **)__swift_project_boxed_opaque_existential_1(a3, a3[3]);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_22D2689B4;
  *(void *)(v8 + 24) = v6;
  uint64_t v9 = *v7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_22D2689C0;
  *(void *)(v10 + 24) = v8;
  v13[4] = sub_22D2689C8;
  v13[5] = v10;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_22D061D84;
  v13[3] = &block_descriptor_12_0;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_isImproveHealthRecordsAnalyticsSubmissionAllowedWithCompletion_, v11);
  _Block_release(v11);
  return swift_release();
}

void sub_22D2688BC(char a1, id a2, void (*a3)(uint64_t, void))
{
  if (a1 == 2)
  {
    uint64_t v6 = (uint64_t)a2;
    if (!a2)
    {
      sub_22D04C890();
      uint64_t v6 = swift_allocError();
      *(void *)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      *(unsigned char *)(v7 + 16) = 2;
    }
    id v8 = a2;
  }
  else
  {
    uint64_t v6 = a1 & 1;
  }
  unsigned __int8 v9 = a1 == 2;
  a3(v6, v9);
  sub_22D2689D0((id)v6, v9);
}

uint64_t sub_22D26897C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D2689B4(uint64_t a1, char a2)
{
  return sub_22D1F3210(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

void sub_22D2689C0(char a1, void *a2)
{
  sub_22D2688BC(a1, a2, *(void (**)(uint64_t, void))(v2 + 16));
}

uint64_t sub_22D2689C8(void *a1, uint64_t a2)
{
  return sub_22D10D730(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16));
}

void sub_22D2689D0(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_22D2689EC()
{
  id v1 = objc_msgSend(v0, sel_codings);
  sub_22D030474(0, &qword_26853E868);
  unint64_t v2 = sub_22D2BCE00();

  uint64_t v30 = MEMORY[0x263F8EE78];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_36;
    }
LABEL_21:
    if ((v15 & 0x4000000000000000) != 0) {
      goto LABEL_36;
    }
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t result = swift_retain();
    if (v16) {
      goto LABEL_23;
    }
LABEL_37:
    unint64_t v18 = (void *)MEMORY[0x263F8EE78];
LABEL_38:
    swift_release_n();
    return (uint64_t)v18;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_20;
  }
LABEL_3:
  uint64_t result = self;
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v5 = (void *)result;
  uint64_t v6 = 0;
  unint64_t v7 = v2 & 0xC000000000000001;
  unint64_t v29 = v2 & 0xC000000000000001;
  do
  {
    if (v7) {
      id v8 = (id)MEMORY[0x230F7AF90](v6, v2);
    }
    else {
      id v8 = *(id *)(v2 + 8 * v6 + 32);
    }
    unsigned __int8 v9 = v8;
    id v10 = objc_msgSend(v8, sel_codingSystem, v29);
    id v11 = objc_msgSend(v5, sel_RxNormCodeSystem);
    uint64_t v12 = v11;
    if (v10)
    {
      if (v11)
      {
        sub_22D030474(0, &qword_2685434A0);
        id v13 = v10;
        unint64_t v7 = v29;
        char v14 = sub_22D2BD1A0();

        if (v14) {
          goto LABEL_5;
        }
      }
      else
      {
      }
    }
    else
    {
      if (!v11)
      {
LABEL_5:
        sub_22D2BD3A0();
        sub_22D2BD3E0();
        sub_22D2BD3F0();
        sub_22D2BD3B0();
        goto LABEL_6;
      }
    }
LABEL_6:
    ++v6;
  }
  while (v3 != v6);
  swift_bridgeObjectRelease();
  uint64_t v15 = v30;
  if ((v30 & 0x8000000000000000) == 0) {
    goto LABEL_21;
  }
LABEL_36:
  swift_retain();
  uint64_t result = sub_22D2BD470();
  uint64_t v16 = result;
  if (!result) {
    goto LABEL_37;
  }
LABEL_23:
  if (v16 >= 1)
  {
    uint64_t v17 = 0;
    unint64_t v18 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x230F7AF90](v17, v15);
      }
      else {
        id v19 = *(id *)(v15 + 8 * v17 + 32);
      }
      uint64_t v20 = v19;
      id v21 = objc_msgSend(v19, sel_code);
      if (v21)
      {
        int64_t v22 = v21;
        uint64_t v23 = sub_22D2BCBD0();
        uint64_t v25 = v24;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v18 = sub_22D2810D4(0, v18[2] + 1, 1, v18);
        }
        unint64_t v27 = v18[2];
        unint64_t v26 = v18[3];
        if (v27 >= v26 >> 1) {
          unint64_t v18 = sub_22D2810D4((void *)(v26 > 1), v27 + 1, 1, v18);
        }
        void v18[2] = v27 + 1;
        uint64_t v28 = &v18[2 * v27];
        v28[4] = v23;
        v28[5] = v25;
      }
      else
      {
      }
      ++v17;
    }
    while (v16 != v17);
    goto LABEL_38;
  }
LABEL_40:
  __break(1u);
  return result;
}

void PBNodeType.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t PBNodeType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 4;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBNodeType.rawValue.getter()
{
  return *(void *)v0;
}

unint64_t sub_22D268DA8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBNodeType.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D268DB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D03BAF0();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D268DFC()
{
  qword_2685434A8 = (uint64_t)&unk_26E05B510;
}

uint64_t static PBNodeType.allCases.getter()
{
  if (qword_26853D3D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PBNodeType.allCases.setter(uint64_t a1)
{
  if (qword_26853D3D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_2685434A8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PBNodeType.allCases.modify())()
{
  if (qword_26853D3D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22D268F90@<X0>(void *a1@<X8>)
{
  if (qword_26853D3D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_2685434A8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D269010()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_2685434B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2685434B0);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "NODE_TYPE_X";
  *(void *)(v7 + 8) = 11;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  id v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "ROOT";
  *(void *)(v11 + 8) = 4;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  id v13 = (char *)v12 + *(int *)(v2 + 56);
  void *v12 = 2;
  *(void *)id v13 = "CATEGORY";
  *((void *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  char v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  void *v14 = 3;
  *(void *)uint64_t v15 = "RECORD";
  *((void *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBNodeType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26853D3E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22D2BC310();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2685434B0);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

unint64_t sub_22D2692E8()
{
  unint64_t result = qword_2685434C8;
  if (!qword_2685434C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685434C8);
  }
  return result;
}

unint64_t sub_22D269340()
{
  unint64_t result = qword_2685434D0;
  if (!qword_2685434D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685434D0);
  }
  return result;
}

unint64_t sub_22D269398()
{
  unint64_t result = qword_2685434D8;
  if (!qword_2685434D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685434D8);
  }
  return result;
}

unint64_t sub_22D2693F0()
{
  unint64_t result = qword_2685434E0;
  if (!qword_2685434E0)
  {
    sub_22D269448();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685434E0);
  }
  return result;
}

void sub_22D269448()
{
  if (!qword_2685434E8)
  {
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685434E8);
    }
  }
}

uint64_t sub_22D2694A0@<X0>(uint64_t a1@<X8>)
{
  if (qword_26853D3E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22D2BC310();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2685434B0);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

ValueMetadata *type metadata accessor for PBNodeType()
{
  return &type metadata for PBNodeType;
}

double sub_22D269558@<D0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = a1[1];
  if (v3 >> 60 == 15)
  {
    sub_22D056F94();
    unint64_t v4 = (void *)swift_allocError();
    swift_willThrow();
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_22D2BC390();
    __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
    id v7 = v4;
    id v8 = v4;
    uint64_t v9 = sub_22D2BC380();
    os_log_type_t v10 = sub_22D2BD060();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(void *)&long long v17 = v12;
      *(_DWORD *)unint64_t v11 = 136315138;
      uint64_t v18 = (uint64_t)v4;
      id v13 = v4;
      sub_22CFF49FC();
      uint64_t v14 = sub_22D2BCC30();
      uint64_t v18 = sub_22D0A4D24(v14, v15, (uint64_t *)&v17);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v9, v10, "Could not retrieve ClinicalSharingGraphMetadata: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v12, -1, -1);
      MEMORY[0x230F7BDF0](v11, -1, -1);
    }
    else
    {
    }
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    uint64_t v5 = *a1;
    sub_22D2BB600();
    swift_allocObject();
    sub_22CFF9B64(v5, v3);
    sub_22D2BB5F0();
    sub_22D269810();
    sub_22D2BB5E0();
    sub_22CFF9C10(v5, v3);
    swift_release();
    double result = *(double *)&v17;
    *(_OWORD *)a2 = v17;
  }
  return result;
}

unint64_t sub_22D269810()
{
  unint64_t result = qword_26AEC16F0;
  if (!qword_26AEC16F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC16F0);
  }
  return result;
}

uint64_t sub_22D269864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v53 = a4;
  uint64_t v52 = a3;
  uint64_t v54 = a2;
  uint64_t v56 = a1;
  sub_22D269F88(0, &qword_26853F988, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v51 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v50 = (uint64_t)&v47 - v9;
  uint64_t v10 = type metadata accessor for PBBlobAuth(0);
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v47 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v47 - v13);
  sub_22D269F88(0, &qword_26853F9C0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = type metadata accessor for PBDeleteBlobs(0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2BBFE0();
  uint64_t v25 = *(int *)(type metadata accessor for PBDeleteBlobsRequest(0) + 20);
  if (qword_26853CE38 != -1) {
    swift_once();
  }
  *(void *)(a5 + v25) = qword_26853F840;
  sub_22D26A048(v56, (uint64_t)v24, type metadata accessor for PBDeleteBlobs);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v26 = swift_retain();
    *(void *)(a5 + v25) = sub_22D0FEF20(v26);
    swift_release();
  }
  uint64_t v27 = *(void *)(a5 + v25);
  sub_22D26A0B0((uint64_t)v24, (uint64_t)v20, type metadata accessor for PBDeleteBlobs);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  sub_22D269FDC((uint64_t)v20, (uint64_t)v18, &qword_26853F9C0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
  uint64_t v28 = v27
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__deleteBlobs;
  swift_beginAccess();
  swift_retain();
  sub_22D26A118((uint64_t)v18, v28, &qword_26853F9C0, (void (*)(uint64_t))type metadata accessor for PBDeleteBlobs);
  swift_endAccess();
  swift_release();
  uint64_t v29 = sub_22D2BBFC0();
  unint64_t v31 = v30;
  uint64_t v32 = v49;
  sub_22D2BBFE0();
  uint64_t v34 = v52;
  unint64_t v33 = v53;
  sub_22CFF9B64(v52, v53);
  sub_22CFF5630(v29, v31);
  void *v14 = v54;
  v14[1] = v34;
  v14[2] = v33;
  void v14[3] = 0x6977363532414853;
  v14[4] = 0xEF41534443456874;
  uint64_t v35 = v47;
  sub_22D26A048((uint64_t)v14, v47, type metadata accessor for PBBlobAuth);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBDeleteBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v36 = swift_retain();
    *(void *)(a5 + v25) = sub_22D0FEF20(v36);
    swift_release();
  }
  uint64_t v37 = *(void *)(a5 + v25);
  uint64_t v38 = v50;
  sub_22D26A0B0(v35, v50, type metadata accessor for PBBlobAuth);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v38, 0, 1, v32);
  uint64_t v39 = v51;
  sub_22D269FDC(v38, v51, &qword_26853F988, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  uint64_t v40 = v37
      + OBJC_IVAR____TtCV19HealthRecordsDaemon20PBDeleteBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D26A118(v39, v40, &qword_26853F988, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_22D2BC390();
  __swift_project_value_buffer(v41, (uint64_t)qword_26AEC3C90);
  uint64_t v42 = v54;
  swift_bridgeObjectRetain();
  sub_22CFF9B64(v34, v33);
  char v43 = sub_22D2BC380();
  os_log_type_t v44 = sub_22D2BD050();
  if (os_log_type_enabled(v43, v44))
  {
    char v45 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v45 = 134217984;
    uint64_t v55 = *(void *)(v42 + 16);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22CFF5630(v34, v33);
    _os_log_impl(&dword_22CFEE000, v43, v44, "Generated PBDeleteBlobsRequest containing number of certs: %ld", v45, 0xCu);
    MEMORY[0x230F7BDF0](v45, -1, -1);
    swift_bridgeObjectRelease();
    sub_22CFF5630(v34, v33);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_22CFF5630(v34, v33);
    swift_bridgeObjectRelease();

    sub_22CFF5630(v34, v33);
  }
  sub_22D26A184(v56, type metadata accessor for PBDeleteBlobs);
  return sub_22D26A184((uint64_t)v14, type metadata accessor for PBBlobAuth);
}

void sub_22D269F88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D269FDC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D269F88(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D26A048(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D26A0B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D26A118(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D269F88(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D26A184(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_22D26A1E4(int a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  uint64_t v70 = (void *)MEMORY[0x263F8EE78];
  if (a1)
  {
    swift_beginAccess();
    uint64_t v2 = v70;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
    }
    unint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    if (v4 >= v3 >> 1) {
      uint64_t v2 = sub_22D281F88((void *)(v3 > 1), v4 + 1, 1, v2);
    }
    v2[2] = v4 + 1;
    uint64_t v5 = &v2[2 * v4];
    v5[4] = 1;
    *((unsigned char *)v5 + 40) = 1;
    uint64_t v70 = v2;
    swift_endAccess();
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_34;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v7 = v2[2];
  unint64_t v6 = v2[3];
  if (v7 >= v6 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v6 > 1), v7 + 1, 1, v2);
  }
  v2[2] = v7 + 1;
  uint64_t v8 = &v2[2 * v7];
  v8[4] = 2;
  *((unsigned char *)v8 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_39;
  }
LABEL_34:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v10 = v2[2];
  unint64_t v9 = v2[3];
  if (v10 >= v9 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v9 > 1), v10 + 1, 1, v2);
  }
  v2[2] = v10 + 1;
  uint64_t v11 = &v2[2 * v10];
  uint64_t v11[4] = 3;
  *((unsigned char *)v11 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_44;
  }
LABEL_39:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v13 = v2[2];
  unint64_t v12 = v2[3];
  if (v13 >= v12 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v12 > 1), v13 + 1, 1, v2);
  }
  v2[2] = v13 + 1;
  uint64_t v14 = &v2[2 * v13];
  v14[4] = 4;
  *((unsigned char *)v14 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x10) == 0)
  {
LABEL_6:
    if ((a1 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_49;
  }
LABEL_44:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v16 = v2[2];
  unint64_t v15 = v2[3];
  if (v16 >= v15 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v15 > 1), v16 + 1, 1, v2);
  }
  v2[2] = v16 + 1;
  uint64_t v17 = &v2[2 * v16];
  v17[4] = 5;
  *((unsigned char *)v17 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x20) == 0)
  {
LABEL_7:
    if ((a1 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_54;
  }
LABEL_49:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v19 = v2[2];
  unint64_t v18 = v2[3];
  if (v19 >= v18 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v18 > 1), v19 + 1, 1, v2);
  }
  v2[2] = v19 + 1;
  uint64_t v20 = &v2[2 * v19];
  _OWORD v20[4] = 6;
  *((unsigned char *)v20 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x40) == 0)
  {
LABEL_8:
    if ((a1 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_59;
  }
LABEL_54:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v22 = v2[2];
  unint64_t v21 = v2[3];
  if (v22 >= v21 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v21 > 1), v22 + 1, 1, v2);
  }
  v2[2] = v22 + 1;
  uint64_t v23 = &v2[2 * v22];
  v23[4] = 7;
  *((unsigned char *)v23 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x80) == 0)
  {
LABEL_9:
    if ((a1 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_64;
  }
LABEL_59:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v25 = v2[2];
  unint64_t v24 = v2[3];
  if (v25 >= v24 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v24 > 1), v25 + 1, 1, v2);
  }
  v2[2] = v25 + 1;
  uint64_t v26 = &v2[2 * v25];
  v26[4] = 8;
  *((unsigned char *)v26 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x100) == 0)
  {
LABEL_10:
    if ((a1 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_69;
  }
LABEL_64:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v28 = v2[2];
  unint64_t v27 = v2[3];
  if (v28 >= v27 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v27 > 1), v28 + 1, 1, v2);
  }
  v2[2] = v28 + 1;
  uint64_t v29 = &v2[2 * v28];
  v29[4] = 9;
  *((unsigned char *)v29 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x200) == 0)
  {
LABEL_11:
    if ((a1 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_74;
  }
LABEL_69:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v31 = v2[2];
  unint64_t v30 = v2[3];
  if (v31 >= v30 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v30 > 1), v31 + 1, 1, v2);
  }
  v2[2] = v31 + 1;
  uint64_t v32 = &v2[2 * v31];
  v32[4] = 10;
  *((unsigned char *)v32 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x400) == 0)
  {
LABEL_12:
    if ((a1 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_79;
  }
LABEL_74:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v34 = v2[2];
  unint64_t v33 = v2[3];
  if (v34 >= v33 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v33 > 1), v34 + 1, 1, v2);
  }
  v2[2] = v34 + 1;
  uint64_t v35 = &v2[2 * v34];
  v35[4] = 11;
  *((unsigned char *)v35 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x800) == 0)
  {
LABEL_13:
    if ((a1 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_84;
  }
LABEL_79:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v37 = v2[2];
  unint64_t v36 = v2[3];
  if (v37 >= v36 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v36 > 1), v37 + 1, 1, v2);
  }
  v2[2] = v37 + 1;
  uint64_t v38 = &v2[2 * v37];
  v38[4] = 12;
  *((unsigned char *)v38 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x1000) == 0)
  {
LABEL_14:
    if ((a1 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_89;
  }
LABEL_84:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v40 = v2[2];
  unint64_t v39 = v2[3];
  if (v40 >= v39 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v39 > 1), v40 + 1, 1, v2);
  }
  v2[2] = v40 + 1;
  uint64_t v41 = &v2[2 * v40];
  v41[4] = 13;
  *((unsigned char *)v41 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x2000) == 0)
  {
LABEL_15:
    if ((a1 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_94;
  }
LABEL_89:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v43 = v2[2];
  unint64_t v42 = v2[3];
  if (v43 >= v42 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v42 > 1), v43 + 1, 1, v2);
  }
  v2[2] = v43 + 1;
  os_log_type_t v44 = &v2[2 * v43];
  v44[4] = 14;
  *((unsigned char *)v44 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x4000) == 0)
  {
LABEL_16:
    if ((a1 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_99;
  }
LABEL_94:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v46 = v2[2];
  unint64_t v45 = v2[3];
  if (v46 >= v45 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v45 > 1), v46 + 1, 1, v2);
  }
  v2[2] = v46 + 1;
  uint64_t v47 = &v2[2 * v46];
  v47[4] = 15;
  *((unsigned char *)v47 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x8000) == 0)
  {
LABEL_17:
    if ((a1 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_104;
  }
LABEL_99:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v49 = v2[2];
  unint64_t v48 = v2[3];
  if (v49 >= v48 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v48 > 1), v49 + 1, 1, v2);
  }
  v2[2] = v49 + 1;
  uint64_t v50 = &v2[2 * v49];
  v50[4] = 16;
  *((unsigned char *)v50 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x10000) == 0)
  {
LABEL_18:
    if ((a1 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_109;
  }
LABEL_104:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v52 = v2[2];
  unint64_t v51 = v2[3];
  if (v52 >= v51 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v51 > 1), v52 + 1, 1, v2);
  }
  v2[2] = v52 + 1;
  unint64_t v53 = &v2[2 * v52];
  v53[4] = 17;
  *((unsigned char *)v53 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x20000) == 0)
  {
LABEL_19:
    if ((a1 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_114;
  }
LABEL_109:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v55 = v2[2];
  unint64_t v54 = v2[3];
  if (v55 >= v54 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v54 > 1), v55 + 1, 1, v2);
  }
  v2[2] = v55 + 1;
  uint64_t v56 = &v2[2 * v55];
  v56[4] = 18;
  *((unsigned char *)v56 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x40000) == 0)
  {
LABEL_20:
    if ((a1 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_119;
  }
LABEL_114:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v58 = v2[2];
  unint64_t v57 = v2[3];
  if (v58 >= v57 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v57 > 1), v58 + 1, 1, v2);
  }
  v2[2] = v58 + 1;
  uint64_t v59 = &v2[2 * v58];
  v59[4] = 19;
  *((unsigned char *)v59 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x80000) == 0)
  {
LABEL_21:
    if ((a1 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_124;
  }
LABEL_119:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v61 = v2[2];
  unint64_t v60 = v2[3];
  if (v61 >= v60 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v60 > 1), v61 + 1, 1, v2);
  }
  v2[2] = v61 + 1;
  unint64_t v62 = &v2[2 * v61];
  v62[4] = 20;
  *((unsigned char *)v62 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x100000) == 0)
  {
LABEL_22:
    if ((a1 & 0x200000) == 0) {
      return v2;
    }
    goto LABEL_129;
  }
LABEL_124:
  swift_beginAccess();
  uint64_t v2 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
  }
  unint64_t v64 = v2[2];
  unint64_t v63 = v2[3];
  if (v64 >= v63 >> 1) {
    uint64_t v2 = sub_22D281F88((void *)(v63 > 1), v64 + 1, 1, v2);
  }
  v2[2] = v64 + 1;
  uint64_t v65 = &v2[2 * v64];
  v65[4] = 21;
  *((unsigned char *)v65 + 40) = 1;
  uint64_t v70 = v2;
  swift_endAccess();
  if ((a1 & 0x200000) != 0)
  {
LABEL_129:
    swift_beginAccess();
    uint64_t v2 = v70;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_22D281F88(0, v70[2] + 1, 1, v70);
    }
    unint64_t v67 = v2[2];
    unint64_t v66 = v2[3];
    if (v67 >= v66 >> 1) {
      uint64_t v2 = sub_22D281F88((void *)(v66 > 1), v67 + 1, 1, v2);
    }
    v2[2] = v67 + 1;
    long long v68 = &v2[2 * v67];
    v68[4] = 22;
    *((unsigned char *)v68 + 40) = 1;
    swift_endAccess();
  }
  return v2;
}

uint64_t sub_22D26AFDC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_22D2BBF00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D26B1A8();
  uint64_t v14 = (void *)MEMORY[0x230F7ACF0](a2);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F44A40], v10);
  if (!*(void *)(a3 + 16)) {
    return (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  }
  id v15 = v14;
  unint64_t v16 = sub_22D04EA20(a4);
  if ((v17 & 1) == 0)
  {

    return (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v18 = *(void *)(*(void *)(a3 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  char v19 = sub_22D2A93A8((uint64_t)v13, v18);

  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v19)
  {
    uint64_t result = swift_beginAccess();
    if ((a1 & ~*(void *)(a5 + 16)) != 0) {
      *(void *)(a5 + 16) |= a1;
    }
  }
  return result;
}

unint64_t sub_22D26B1A8()
{
  unint64_t result = qword_26853EBA0;
  if (!qword_26853EBA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26853EBA0);
  }
  return result;
}

uint64_t sub_22D26B1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a3 + 64);
  int64_t v13 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v13) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v13) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v12 + 8 * v8);
      if (!v10)
      {
        int64_t v8 = v9 + 2;
        if (v9 + 2 >= v13) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v12 + 8 * v8);
        if (!v10)
        {
          int64_t v8 = v9 + 3;
          if (v9 + 3 >= v13) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v12 + 8 * v8);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v6 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22D2BCCB0();
    sub_22D2BCCB0();
    sub_22D06014C();
    a1 = sub_22D2BD240();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v13)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  uint64_t v10 = *(void *)(v12 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v13) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_22D26B468@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v133 = a2;
  uint64_t v141 = a1;
  uint64_t v132 = a3;
  uint64_t v148 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_22D2BCC20();
  uint64_t v130 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v131 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22D2BB5B0();
  uint64_t v134 = *(void *)(v7 - 8);
  uint64_t v135 = v7;
  MEMORY[0x270FA5388](v7);
  int64_t v9 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22D2BB790();
  uint64_t v140 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D26CF58(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v118 - v14;
  uint64_t v16 = sub_22D2BBAA0();
  uint64_t v137 = *(void *)(v16 - 8);
  uint64_t v138 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  char v19 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v136 = (char *)&v118 - v20;
  sub_22D26CF58(0, &qword_268543300, MEMORY[0x263F06370]);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v139 = (uint64_t)&v118 - v22;
  if ((uint64_t)objc_msgSend(v3, sel_minCompatibleAPIVersion) < 6)
  {
    id v23 = objc_msgSend(v3, sel_minCompatibleAPIVersion);
    sub_22D0B0DD0();
    swift_allocError();
    *(void *)uint64_t v24 = v23;
    *(void *)(v24 + 8) = 0;
    char v25 = 1;
LABEL_8:
    *(unsigned char *)(v24 + 16) = v25;
    return swift_willThrow();
  }
  if (!objc_msgSend(v3, sel_enabled))
  {
    sub_22D0B0DD0();
    swift_allocError();
    *(void *)uint64_t v24 = 0;
    *(void *)(v24 + 8) = 0;
    char v25 = 8;
    goto LABEL_8;
  }
  uint64_t v120 = v5;
  uint64_t v127 = v9;
  uint64_t v26 = v3;
  id v27 = objc_msgSend(v3, sel_URL);
  uint64_t v28 = sub_22D2BCBD0();
  uint64_t v30 = v29;

  sub_22D26B1E8(v28, v30, v141);
  uint64_t v123 = v4;
  swift_bridgeObjectRelease();
  uint64_t v31 = v139;
  sub_22D2BB770();
  swift_bridgeObjectRelease();
  id v126 = v26;
  id v32 = objc_msgSend(v26, sel_query);
  if (v32)
  {
    unint64_t v33 = v32;
    sub_22D0A5438();
    unint64_t v34 = sub_22D2BCE00();

    uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
    if (v35(v31, 1, v10))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = v141;
      swift_bridgeObjectRetain();
      uint64_t v38 = v123;
      uint64_t v129 = sub_22D26C574(v34, v37);
      uint64_t v123 = v38;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22D2BB720();
    }
  }
  else
  {
    uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
  }
  uint64_t v39 = v139;
  if (!v35(v139, 1, v10))
  {
    uint64_t v40 = v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v12, v39, v10);
    sub_22D2BB740();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v10);
    uint64_t v42 = v137;
    uint64_t v41 = v138;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 48))(v15, 1, v138) == 1) {
      goto LABEL_14;
    }
    unint64_t v48 = v136;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v136, v15, v41);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v19, v48, v41);
    unint64_t v49 = v127;
    sub_22D2BB560();
    sub_22D2BB530();
    id v50 = objc_msgSend(v126, sel_headers);
    if (v50)
    {
      unint64_t v51 = v50;
      sub_22D0A5438();
      unint64_t v52 = sub_22D2BCE00();

      if (v52 >> 62) {
        goto LABEL_100;
      }
      uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
LABEL_19:
      unint64_t v121 = v52;
      if (v53)
      {
        uint64_t v54 = 0;
        unint64_t v124 = v52 & 0xC000000000000001;
        unint64_t v118 = v52 + 32;
        uint64_t v140 = v141 + 64;
        uint64_t v122 = v53;
        while (1)
        {
          while (1)
          {
            if (v124) {
              id v57 = (id)MEMORY[0x230F7AF90](v54, v121);
            }
            else {
              id v57 = *(id *)(v118 + 8 * v54);
            }
            unint64_t v58 = v57;
            BOOL v59 = __OFADD__(v54++, 1);
            if (v59) {
              goto LABEL_97;
            }
            id v60 = objc_msgSend(v57, sel_literal);
            if (v60)
            {
              unint64_t v61 = v60;
              id v128 = v58;
              uint64_t v129 = v54;
              unint64_t v52 = sub_22D2BCBD0();
              unint64_t v63 = v62;

              uint64_t v64 = 1 << *(unsigned char *)(v141 + 32);
              if (v64 < 64) {
                uint64_t v65 = ~(-1 << v64);
              }
              else {
                uint64_t v65 = -1;
              }
              unint64_t v66 = v65 & *(void *)(v141 + 64);
              int64_t v67 = (unint64_t)(v64 + 63) >> 6;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int64_t v68 = 0;
              unint64_t v125 = v63;
              while (1)
              {
                if (v66)
                {
                  unint64_t v69 = __clz(__rbit64(v66));
                  v66 &= v66 - 1;
                  unint64_t v70 = v69 | (v68 << 6);
                }
                else
                {
                  BOOL v59 = __OFADD__(v68++, 1);
                  if (v59)
                  {
                    __break(1u);
                    goto LABEL_96;
                  }
                  if (v68 >= v67) {
                    goto LABEL_21;
                  }
                  unint64_t v76 = *(void *)(v140 + 8 * v68);
                  if (!v76)
                  {
                    int64_t v77 = v68 + 1;
                    if (v68 + 1 >= v67) {
                      goto LABEL_21;
                    }
                    unint64_t v76 = *(void *)(v140 + 8 * v77);
                    if (!v76)
                    {
                      int64_t v77 = v68 + 2;
                      if (v68 + 2 >= v67) {
                        goto LABEL_21;
                      }
                      unint64_t v76 = *(void *)(v140 + 8 * v77);
                      if (!v76)
                      {
                        int64_t v77 = v68 + 3;
                        if (v68 + 3 >= v67) {
                          goto LABEL_21;
                        }
                        unint64_t v76 = *(void *)(v140 + 8 * v77);
                        if (!v76)
                        {
                          int64_t v77 = v68 + 4;
                          if (v68 + 4 >= v67) {
                            goto LABEL_21;
                          }
                          unint64_t v76 = *(void *)(v140 + 8 * v77);
                          if (!v76)
                          {
                            int64_t v77 = v68 + 5;
                            if (v68 + 5 >= v67)
                            {
LABEL_21:
                              uint64_t v53 = v122;
                              swift_bridgeObjectRelease();
                              swift_release();
                              id v55 = v128;
                              id v56 = objc_msgSend(v128, sel_param);
                              sub_22D2BCBD0();

                              unint64_t v52 = (unint64_t)v127;
                              sub_22D2BB5A0();

                              goto LABEL_22;
                            }
                            unint64_t v76 = *(void *)(v140 + 8 * v77);
                            if (!v76)
                            {
                              while (1)
                              {
                                int64_t v68 = v77 + 1;
                                if (__OFADD__(v77, 1)) {
                                  break;
                                }
                                if (v68 >= v67) {
                                  goto LABEL_21;
                                }
                                unint64_t v76 = *(void *)(v140 + 8 * v68);
                                ++v77;
                                if (v76) {
                                  goto LABEL_49;
                                }
                              }
LABEL_98:
                              __break(1u);
LABEL_99:
                              __break(1u);
LABEL_100:
                              swift_bridgeObjectRetain();
                              uint64_t v53 = sub_22D2BD470();
                              goto LABEL_19;
                            }
                          }
                        }
                      }
                    }
                    int64_t v68 = v77;
                  }
LABEL_49:
                  unint64_t v66 = (v76 - 1) & v76;
                  unint64_t v70 = __clz(__rbit64(v76)) + (v68 << 6);
                }
                uint64_t v71 = (uint64_t *)(*(void *)(v141 + 56) + 16 * v70);
                uint64_t v72 = *v71;
                uint64_t v73 = v71[1];
                uint64_t v146 = v52;
                unint64_t v147 = v63;
                uint64_t v144 = 31611;
                unint64_t v145 = 0xE200000000000000;
                sub_22D2BCCB0();
                sub_22D2BCCB0();
                uint64_t v142 = v72;
                uint64_t v143 = v73;
                sub_22D06014C();
                unint64_t v52 = sub_22D2BD240();
                unint64_t v75 = v74;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v63 = v75;
              }
            }
            id v78 = objc_msgSend(v58, sel_variable);
            if (v78) {
              break;
            }

            if (v54 == v53) {
              goto LABEL_83;
            }
          }
          id v79 = v78;
          id v128 = v58;
          uint64_t v129 = v54;
          sub_22D2BCBD0();
          unint64_t v81 = v80;

          uint64_t v146 = 31611;
          unint64_t v147 = 0xE200000000000000;
          unint64_t v125 = v81;
          sub_22D2BCCB0();
          sub_22D2BCCB0();
          unint64_t v52 = v146;
          unint64_t v82 = v147;
          uint64_t v83 = 1 << *(unsigned char *)(v141 + 32);
          uint64_t v84 = v83 < 64 ? ~(-1 << v83) : -1;
          unint64_t v85 = v84 & *(void *)(v141 + 64);
          int64_t v86 = (unint64_t)(v83 + 63) >> 6;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int64_t v87 = 0;
          unint64_t v119 = v82;
          while (1)
          {
            if (v85)
            {
              unint64_t v88 = __clz(__rbit64(v85));
              v85 &= v85 - 1;
              unint64_t v89 = v88 | (v87 << 6);
              goto LABEL_60;
            }
            BOOL v59 = __OFADD__(v87++, 1);
            if (v59)
            {
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              goto LABEL_98;
            }
            if (v87 >= v86) {
              goto LABEL_81;
            }
            unint64_t v95 = *(void *)(v140 + 8 * v87);
            if (!v95) {
              break;
            }
LABEL_76:
            unint64_t v85 = (v95 - 1) & v95;
            unint64_t v89 = __clz(__rbit64(v95)) + (v87 << 6);
LABEL_60:
            unint64_t v90 = (uint64_t *)(*(void *)(v141 + 56) + 16 * v89);
            uint64_t v91 = *v90;
            uint64_t v92 = v90[1];
            uint64_t v146 = v52;
            unint64_t v147 = v82;
            uint64_t v144 = 31611;
            unint64_t v145 = 0xE200000000000000;
            sub_22D2BCCB0();
            sub_22D2BCCB0();
            uint64_t v142 = v91;
            uint64_t v143 = v92;
            sub_22D06014C();
            unint64_t v52 = sub_22D2BD240();
            unint64_t v94 = v93;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v82 = v94;
          }
          int64_t v96 = v87 + 1;
          if (v87 + 1 >= v86) {
            goto LABEL_81;
          }
          unint64_t v95 = *(void *)(v140 + 8 * v96);
          if (v95) {
            break;
          }
          int64_t v96 = v87 + 2;
          if (v87 + 2 >= v86) {
            goto LABEL_81;
          }
          unint64_t v95 = *(void *)(v140 + 8 * v96);
          if (v95) {
            break;
          }
          int64_t v96 = v87 + 3;
          if (v87 + 3 >= v86) {
            goto LABEL_81;
          }
          unint64_t v95 = *(void *)(v140 + 8 * v96);
          if (v95) {
            break;
          }
          int64_t v96 = v87 + 4;
          if (v87 + 4 >= v86) {
            goto LABEL_81;
          }
          unint64_t v95 = *(void *)(v140 + 8 * v96);
          if (v95) {
            break;
          }
          int64_t v96 = v87 + 5;
          if (v87 + 5 >= v86) {
            goto LABEL_81;
          }
          unint64_t v95 = *(void *)(v140 + 8 * v96);
          if (v95) {
            break;
          }
          while (1)
          {
            int64_t v87 = v96 + 1;
            if (__OFADD__(v96, 1)) {
              goto LABEL_99;
            }
            if (v87 >= v86) {
              break;
            }
            unint64_t v95 = *(void *)(v140 + 8 * v87);
            ++v96;
            if (v95) {
              goto LABEL_76;
            }
          }
LABEL_81:
          uint64_t v53 = v122;
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          id v97 = v128;
          id v98 = objc_msgSend(v128, sel_param);
          sub_22D2BCBD0();

          unint64_t v52 = (unint64_t)v127;
          sub_22D2BB5A0();

LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v54 = v129;
          if (v129 == v53) {
            goto LABEL_83;
          }
        }
        int64_t v87 = v96;
        goto LABEL_76;
      }
LABEL_83:
      swift_bridgeObjectRelease_n();
      unint64_t v49 = v127;
    }
    uint64_t v99 = v137;
    if (v133)
    {
      sub_22D2BB5A0();
      sub_22D2BB540();
    }
    id v100 = objc_msgSend(v126, sel_body, v118, v119);
    if (v100)
    {
      uint64_t v101 = v100;
      sub_22D2BCB00();

      uint64_t v102 = self;
      uint64_t v103 = (void *)sub_22D2BCAF0();
      swift_bridgeObjectRelease();
      uint64_t v146 = 0;
      id v104 = objc_msgSend(v102, sel_dataWithJSONObject_options_error_, v103, 0, &v146);

      id v105 = (id)v146;
      if (v104)
      {
        uint64_t v106 = sub_22D2BBB20();
        unint64_t v108 = v107;

        uint64_t v109 = v131;
        sub_22D2BCC10();
        uint64_t v110 = sub_22D2BCBF0();
        if (v111)
        {
          sub_22D26B1E8(v110, v111, v141);
          swift_bridgeObjectRelease();
          sub_22D2BCC10();
          sub_22D2BCBE0();
          unint64_t v113 = v112;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v130 + 8))(v109, v120);
          if (v113 >> 60 == 15)
          {
            sub_22D0B0DD0();
            swift_allocError();
            *(_OWORD *)uint64_t v114 = xmmword_22D2D0110;
            *(unsigned char *)(v114 + 16) = 8;
            swift_willThrow();
            sub_22CFF5630(v106, v108);
            (*(void (**)(char *, uint64_t))(v99 + 8))(v136, v138);
            (*(void (**)(char *, uint64_t))(v134 + 8))(v127, v135);
            return sub_22D26C518(v139, &qword_268543300, MEMORY[0x263F06370]);
          }
          unint64_t v49 = v127;
          sub_22D2BB590();
        }
        sub_22CFF5630(v106, v108);
      }
      else
      {
        uint64_t v115 = v105;
        char v116 = (void *)sub_22D2BB9C0();

        swift_willThrow();
      }
    }
    id v117 = objc_msgSend(v126, sel_method);
    sub_22D2BCBD0();

    sub_22D2BB520();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v136, v138);
    (*(void (**)(uint64_t, char *, uint64_t))(v134 + 32))(v132, v49, v135);
    return sub_22D26C518(v139, &qword_268543300, MEMORY[0x263F06370]);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56))(v15, 1, 1, v138);
LABEL_14:
  sub_22D26C518((uint64_t)v15, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  id v43 = objc_msgSend(v126, sel_URL);
  uint64_t v44 = sub_22D2BCBD0();
  uint64_t v46 = v45;

  sub_22D0B0DD0();
  swift_allocError();
  *(void *)uint64_t v47 = v44;
  *(void *)(v47 + 8) = v46;
  *(unsigned char *)(v47 + 16) = 0;
  swift_willThrow();
  return sub_22D26C518(v139, &qword_268543300, MEMORY[0x263F06370]);
}

uint64_t sub_22D26C518(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D26CF58(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D26C574(unint64_t a1, uint64_t a2)
{
  sub_22D26CF58(0, &qword_2685434F0, MEMORY[0x263F06338]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v68 - v5;
  uint64_t v7 = sub_22D2BB710();
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v81 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (char *)&v68 - v10;
  if (a1 >> 62) {
    goto LABEL_74;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_75:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  uint64_t v12 = 0;
  unint64_t v80 = a1 & 0xC000000000000001;
  unint64_t v69 = a1 + 32;
  uint64_t v95 = a2 + 64;
  unint64_t v76 = (unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
  int64_t v77 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
  uint64_t v13 = MEMORY[0x263F8EE78];
  id v79 = (void (**)(char *, char *, uint64_t))(v72 + 32);
  uint64_t v74 = v7;
  unint64_t v75 = a1;
  uint64_t v73 = v11;
  id v78 = v6;
  do
  {
    while (1)
    {
      if (v80) {
        id v14 = (id)MEMORY[0x230F7AF90](v12, a1);
      }
      else {
        id v14 = *(id *)(v69 + 8 * v12);
      }
      id v15 = v14;
      if (__OFADD__(v12++, 1)) {
        goto LABEL_72;
      }
      unint64_t v87 = v13;
      id v17 = objc_msgSend(v14, sel_literal);
      if (v17)
      {
        uint64_t v18 = v17;
        uint64_t v86 = v12;
        char v19 = v15;
        uint64_t v20 = sub_22D2BCBD0();
        a1 = v21;

        id v85 = v19;
        id v22 = objc_msgSend(v19, sel_param);
        uint64_t v82 = sub_22D2BCBD0();
        uint64_t v83 = v23;

        uint64_t v24 = 1 << *(unsigned char *)(a2 + 32);
        if (v24 < 64) {
          uint64_t v25 = ~(-1 << v24);
        }
        else {
          uint64_t v25 = -1;
        }
        unint64_t v26 = v25 & *(void *)(a2 + 64);
        int64_t v88 = (unint64_t)(v24 + 63) >> 6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int64_t v27 = 0;
        unint64_t v84 = a1;
        while (1)
        {
          if (v26)
          {
            unint64_t v28 = __clz(__rbit64(v26));
            v26 &= v26 - 1;
            unint64_t v29 = v28 | (v27 << 6);
          }
          else
          {
            int64_t v35 = v27 + 1;
            if (__OFADD__(v27, 1))
            {
              __break(1u);
              goto LABEL_70;
            }
            if (v35 >= v88) {
              goto LABEL_33;
            }
            unint64_t v36 = *(void *)(v95 + 8 * v35);
            ++v27;
            if (!v36)
            {
              int64_t v27 = v35 + 1;
              if (v35 + 1 >= v88) {
                goto LABEL_33;
              }
              unint64_t v36 = *(void *)(v95 + 8 * v27);
              if (!v36)
              {
                int64_t v27 = v35 + 2;
                if (v35 + 2 >= v88) {
                  goto LABEL_33;
                }
                unint64_t v36 = *(void *)(v95 + 8 * v27);
                if (!v36)
                {
                  int64_t v27 = v35 + 3;
                  if (v35 + 3 >= v88) {
                    goto LABEL_33;
                  }
                  unint64_t v36 = *(void *)(v95 + 8 * v27);
                  if (!v36)
                  {
                    int64_t v37 = v35 + 4;
                    if (v37 >= v88)
                    {
LABEL_33:
                      swift_release();
                      swift_bridgeObjectRelease();
                      uint64_t v6 = v78;
                      sub_22D2BB700();
                      swift_bridgeObjectRelease();
                      goto LABEL_59;
                    }
                    unint64_t v36 = *(void *)(v95 + 8 * v37);
                    if (!v36)
                    {
                      while (1)
                      {
                        int64_t v27 = v37 + 1;
                        if (__OFADD__(v37, 1)) {
                          break;
                        }
                        if (v27 >= v88) {
                          goto LABEL_33;
                        }
                        unint64_t v36 = *(void *)(v95 + 8 * v27);
                        ++v37;
                        if (v36) {
                          goto LABEL_32;
                        }
                      }
LABEL_71:
                      __break(1u);
LABEL_72:
                      __break(1u);
LABEL_73:
                      __break(1u);
LABEL_74:
                      swift_bridgeObjectRetain();
                      uint64_t v11 = sub_22D2BD470();
                      if (!v11) {
                        goto LABEL_75;
                      }
                      goto LABEL_3;
                    }
                    int64_t v27 = v37;
                  }
                }
              }
            }
LABEL_32:
            unint64_t v26 = (v36 - 1) & v36;
            unint64_t v29 = __clz(__rbit64(v36)) + (v27 << 6);
          }
          uint64_t v30 = 16 * v29;
          uint64_t v7 = *(void *)(*(void *)(a2 + 48) + v30 + 8);
          uint64_t v31 = (uint64_t *)(*(void *)(a2 + 56) + v30);
          uint64_t v33 = *v31;
          uint64_t v32 = v31[1];
          uint64_t v93 = v20;
          unint64_t v94 = a1;
          uint64_t v91 = 31611;
          unint64_t v92 = 0xE200000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_22D2BCCB0();
          sub_22D2BCCB0();
          uint64_t v89 = v33;
          uint64_t v90 = v32;
          sub_22D06014C();
          uint64_t v20 = sub_22D2BD240();
          uint64_t v6 = v34;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = (unint64_t)v6;
        }
      }
      id v38 = objc_msgSend(v15, sel_variable);
      if (!v38)
      {
        uint64_t v6 = v78;
        (*v77)(v78, 1, 1, v7);

        if ((*v76)(v6, 1, v7) != 1) {
          break;
        }
        goto LABEL_4;
      }
      uint64_t v39 = v38;
      uint64_t v86 = v12;
      a1 = sub_22D2BCBD0();
      unint64_t v41 = v40;

      id v85 = v15;
      id v42 = objc_msgSend(v15, sel_param);
      uint64_t v82 = sub_22D2BCBD0();
      uint64_t v83 = v43;

      uint64_t v93 = 31611;
      unint64_t v94 = 0xE200000000000000;
      unint64_t v84 = v41;
      sub_22D2BCCB0();
      sub_22D2BCCB0();
      uint64_t v44 = v93;
      uint64_t v7 = v94;
      uint64_t v45 = 1 << *(unsigned char *)(a2 + 32);
      if (v45 < 64) {
        uint64_t v46 = ~(-1 << v45);
      }
      else {
        uint64_t v46 = -1;
      }
      unint64_t v47 = v46 & *(void *)(a2 + 64);
      int64_t v88 = (unint64_t)(v45 + 63) >> 6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int64_t v48 = 0;
      uint64_t v70 = v7;
      while (1)
      {
        if (v47)
        {
          unint64_t v49 = __clz(__rbit64(v47));
          v47 &= v47 - 1;
          unint64_t v50 = v49 | (v48 << 6);
          goto LABEL_40;
        }
        int64_t v57 = v48 + 1;
        if (__OFADD__(v48, 1))
        {
LABEL_70:
          __break(1u);
          goto LABEL_71;
        }
        if (v57 >= v88) {
          goto LABEL_58;
        }
        unint64_t v58 = *(void *)(v95 + 8 * v57);
        ++v48;
        if (!v58)
        {
          int64_t v48 = v57 + 1;
          if (v57 + 1 >= v88) {
            goto LABEL_58;
          }
          unint64_t v58 = *(void *)(v95 + 8 * v48);
          if (!v58)
          {
            int64_t v48 = v57 + 2;
            if (v57 + 2 >= v88) {
              goto LABEL_58;
            }
            unint64_t v58 = *(void *)(v95 + 8 * v48);
            if (!v58)
            {
              int64_t v48 = v57 + 3;
              if (v57 + 3 >= v88) {
                goto LABEL_58;
              }
              unint64_t v58 = *(void *)(v95 + 8 * v48);
              if (!v58) {
                break;
              }
            }
          }
        }
LABEL_57:
        unint64_t v47 = (v58 - 1) & v58;
        unint64_t v50 = __clz(__rbit64(v58)) + (v48 << 6);
LABEL_40:
        uint64_t v51 = 16 * v50;
        a1 = *(void *)(*(void *)(a2 + 48) + v51 + 8);
        unint64_t v52 = (uint64_t *)(*(void *)(a2 + 56) + v51);
        uint64_t v54 = *v52;
        uint64_t v53 = v52[1];
        uint64_t v93 = v44;
        unint64_t v94 = v7;
        uint64_t v91 = 31611;
        unint64_t v92 = 0xE200000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_22D2BCCB0();
        sub_22D2BCCB0();
        uint64_t v6 = (char *)v92;
        uint64_t v89 = v54;
        uint64_t v90 = v53;
        sub_22D06014C();
        uint64_t v44 = sub_22D2BD240();
        uint64_t v56 = v55;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = v56;
      }
      int64_t v59 = v57 + 4;
      if (v59 >= v88) {
        goto LABEL_58;
      }
      unint64_t v58 = *(void *)(v95 + 8 * v59);
      if (v58)
      {
        int64_t v48 = v59;
        goto LABEL_57;
      }
      while (1)
      {
        int64_t v48 = v59 + 1;
        if (__OFADD__(v59, 1)) {
          goto LABEL_73;
        }
        if (v48 >= v88) {
          break;
        }
        unint64_t v58 = *(void *)(v95 + 8 * v48);
        ++v59;
        if (v58) {
          goto LABEL_57;
        }
      }
LABEL_58:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v78;
      sub_22D2BB700();
      swift_bridgeObjectRelease();
LABEL_59:
      swift_bridgeObjectRelease();
      uint64_t v7 = v74;
      (*v77)(v6, 0, 1, v74);

      unsigned int v60 = (*v76)(v6, 1, v7);
      a1 = v75;
      uint64_t v11 = v73;
      uint64_t v12 = v86;
      if (v60 != 1) {
        break;
      }
LABEL_4:
      sub_22D26C518((uint64_t)v6, &qword_2685434F0, MEMORY[0x263F06338]);
      uint64_t v13 = v87;
      if (v12 == v11) {
        goto LABEL_68;
      }
    }
    unint64_t v61 = *v79;
    unint64_t v62 = v71;
    (*v79)(v71, v6, v7);
    v61(v81, v62, v7);
    unint64_t v63 = v87;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v63 = sub_22D281268(0, *(void *)(v63 + 16) + 1, 1, v63);
    }
    unint64_t v65 = *(void *)(v63 + 16);
    unint64_t v64 = *(void *)(v63 + 24);
    uint64_t v66 = v63;
    if (v65 >= v64 >> 1) {
      uint64_t v66 = sub_22D281268(v64 > 1, v65 + 1, 1, v63);
    }
    *(void *)(v66 + 16) = v65 + 1;
    uint64_t v13 = v66;
    v61((char *)(v66+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v65), v81, v7);
  }
  while (v12 != v11);
LABEL_68:
  swift_bridgeObjectRelease();
  return v13;
}

void sub_22D26CF58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D26CFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v12 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_4;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v8 >= v12) {
      goto LABEL_25;
    }
    uint64_t v9 = *(void *)(v3 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v12) {
        goto LABEL_25;
      }
      uint64_t v9 = *(void *)(v3 + 8 * v7);
      if (!v9)
      {
        int64_t v7 = v8 + 2;
        if (v8 + 2 >= v12) {
          goto LABEL_25;
        }
        uint64_t v9 = *(void *)(v3 + 8 * v7);
        if (!v9)
        {
          int64_t v7 = v8 + 3;
          if (v8 + 3 >= v12) {
            goto LABEL_25;
          }
          uint64_t v9 = *(void *)(v3 + 8 * v7);
          if (!v9)
          {
            int64_t v7 = v8 + 4;
            if (v8 + 4 >= v12) {
              goto LABEL_25;
            }
            uint64_t v9 = *(void *)(v3 + 8 * v7);
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v6 = (v9 - 1) & v9;
LABEL_4:
    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    sub_22D2BCCB0();
    sub_22D06014C();
    a2 = sub_22D2BD240();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  int64_t v10 = v8 + 5;
  if (v10 < v12)
  {
    uint64_t v9 = *(void *)(v3 + 8 * v10);
    if (!v9)
    {
      while (1)
      {
        int64_t v7 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          break;
        }
        if (v7 >= v12) {
          goto LABEL_25;
        }
        uint64_t v9 = *(void *)(v3 + 8 * v7);
        ++v10;
        if (v9) {
          goto LABEL_24;
        }
      }
LABEL_27:
      __break(1u);
      JUMPOUT(0x22D26D34CLL);
    }
    int64_t v7 = v10;
    goto LABEL_24;
  }
LABEL_25:
  swift_release();
  return a2;
}

uint64_t HDHealthRecordsXPCServiceClient.signedClinicalDataFilePreprocessingPublisher(for:options:)(void *a1, uint64_t a2)
{
  return sub_22D26D5D0(a1, a2);
}

uint64_t HDHealthRecordsXPCServiceClient.signedClinicalDataContextCollectionProcessingPublisher(_:)(void *a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = a1;
  sub_22D26DE80(0, &qword_2685426E0, (unint64_t *)&unk_2685426C0);
  swift_allocObject();
  id v4 = v1;
  id v5 = a1;
  sub_22D2BC6F0();
  sub_22D26DEF8(&qword_2685424F0, &qword_2685426E0, (unint64_t *)&unk_2685426C0);
  uint64_t v6 = sub_22D2BC720();
  swift_release();
  return v6;
}

uint64_t HDHealthRecordsXPCServiceClient.reprocessingPublisher(_:options:)(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  sub_22D26DE80(0, &qword_268542468, &qword_268542440);
  swift_allocObject();
  id v6 = v2;
  swift_bridgeObjectRetain();
  sub_22D2BC6F0();
  sub_22D26DEF8(&qword_268542470, &qword_268542468, &qword_268542440);
  uint64_t v7 = sub_22D2BC720();
  swift_release();
  return v7;
}

uint64_t HDHealthRecordsXPCServiceClient.signedClinicalDataFHIRResourceDataPreprocessingPublisher(_:options:)(void *a1, uint64_t a2)
{
  return sub_22D26D5D0(a1, a2);
}

uint64_t sub_22D26D5D0(void *a1, uint64_t a2)
{
  id v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  sub_22D26DE80(0, &qword_268542468, &qword_268542440);
  swift_allocObject();
  id v6 = v2;
  id v7 = a1;
  sub_22D2BC6F0();
  sub_22D26DEF8(&qword_268542470, &qword_268542468, &qword_268542440);
  uint64_t v8 = sub_22D2BC720();
  swift_release();
  return v8;
}

uint64_t HDHealthRecordsXPCServiceClient.originalSignedClinicalDataRecordProcessingPublisher(_:options:)(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  sub_22D26DE80(0, &qword_2685426E0, (unint64_t *)&unk_2685426C0);
  swift_allocObject();
  id v6 = v2;
  swift_bridgeObjectRetain();
  sub_22D2BC6F0();
  sub_22D26DEF8(&qword_2685424F0, &qword_2685426E0, (unint64_t *)&unk_2685426C0);
  uint64_t v7 = sub_22D2BC720();
  swift_release();
  return v7;
}

void sub_22D26D7E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_22D0348C4;
  *(void *)(v11 + 24) = v10;
  v13[4] = sub_22D26E2CC;
  v13[5] = v11;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_22D26D94C;
  v13[3] = &block_descriptor_61;
  int64_t v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_preprocessSignedClinicalData_options_completion_, a4, a5, v12);
  _Block_release(v12);
}

uint64_t sub_22D26D90C()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22D26D950(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_22D0348C4;
  *(void *)(v11 + 24) = v10;
  v13[4] = sub_22D26E26C;
  v13[5] = v11;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_22D26D94C;
  v13[3] = &block_descriptor_31;
  int64_t v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_preprocessSignedClinicalDataFHIRResourceObject_options_completion_, a4, a5, v12);
  _Block_release(v12);
}

void sub_22D26DA78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_22D030474(0, &qword_2685426D8);
  swift_retain();
  uint64_t v10 = (void *)sub_22D2BCDF0();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_22D0348C4;
  *(void *)(v11 + 24) = v9;
  v13[4] = sub_22D26E2CC;
  v13[5] = v11;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_22D26D94C;
  v13[3] = &block_descriptor_41_2;
  int64_t v12 = _Block_copy(v13);
  swift_release();
  objc_msgSend(a3, sel_reprocessOriginalSignedClinicalDataRecords_options_completion_, v10, a5, v12);
  _Block_release(v12);
}

void sub_22D26DBCC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_22D030474(0, &qword_2685426D8);
  swift_retain();
  uint64_t v10 = (void *)sub_22D2BCDF0();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_22D0348C4;
  *(void *)(v11 + 24) = v9;
  v13[4] = sub_22D26E2CC;
  v13[5] = v11;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_22D26D94C;
  v13[3] = &block_descriptor_22;
  int64_t v12 = _Block_copy(v13);
  swift_release();
  objc_msgSend(a3, sel_processOriginalSignedClinicalDataRecords_options_completion_, v10, a5, v12);
  _Block_release(v12);
}

void sub_22D26DD20(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_22D0348C4;
  *(void *)(v9 + 24) = v8;
  uint64_t v11[4] = sub_22D26E2CC;
  v11[5] = v9;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_22D26D94C;
  v11[3] = &block_descriptor_51;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_processSignedClinicalDataContextCollection_completion_, a4, v10);
  _Block_release(v10);
}

uint64_t sub_22D26DE40()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D26DE80(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_22D030474(255, a3);
    sub_22CFF49FC();
    unint64_t v4 = sub_22D2BC6E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D26DEF8(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D26DE80(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D26DF50(void *a1, id a2, void (*a3)(void *, uint64_t))
{
  if (a1)
  {
    id v9 = a1;
    a3(a1, 0);
    uint64_t v5 = v9;
  }
  else
  {
    if (a2)
    {
      id v7 = a2;
    }
    else
    {
      sub_22D26E218();
      id v7 = (id)swift_allocError();
    }
    id v8 = a2;
    a3(v7, 1);
    uint64_t v5 = v7;
  }
}

uint64_t static HDHealthRecordsXPCServiceClientError.== infix(_:_:)()
{
  return 1;
}

uint64_t HDHealthRecordsXPCServiceClientError.hash(into:)()
{
  return sub_22D2BD740();
}

uint64_t HDHealthRecordsXPCServiceClientError.hashValue.getter()
{
  return sub_22D2BD760();
}

unint64_t sub_22D26E0A0()
{
  unint64_t result = qword_2685434F8;
  if (!qword_2685434F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685434F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HDHealthRecordsXPCServiceClientError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22D26E190);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HDHealthRecordsXPCServiceClientError()
{
  return &type metadata for HDHealthRecordsXPCServiceClientError;
}

uint64_t sub_22D26E1C8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

unint64_t sub_22D26E218()
{
  unint64_t result = qword_268543500;
  if (!qword_268543500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543500);
  }
  return result;
}

void sub_22D26E26C(void *a1, void *a2)
{
  sub_22D26DF50(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

id sub_22D26E2D4()
{
  sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  int v3 = (char *)v31 - v2;
  uint64_t v4 = type metadata accessor for EUDCCPublicKey();
  uint64_t v5 = (char *)v0 + *(int *)(v4 + 28);
  uint64_t v6 = *((void *)v5 + 13);
  if (v6)
  {
    uint64_t v7 = v4;
    uint64_t v8 = *((void *)v5 + 12);
    sub_22D2BB660();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_22D2BB650();
    char v9 = v5[24];
    uint64_t v10 = *((void *)v5 + 16);
    LOWORD(v41[0]) = *(_WORD *)v5;
    *(_OWORD *)((char *)v41 + 8) = *(_OWORD *)(v5 + 8);
    BYTE8(v41[1]) = v9;
    long long v11 = *((_OWORD *)v5 + 3);
    long long v42 = *((_OWORD *)v5 + 2);
    long long v43 = v11;
    long long v12 = *((_OWORD *)v5 + 5);
    long long v44 = *((_OWORD *)v5 + 4);
    long long v45 = v12;
    *(void *)&long long v46 = v8;
    *((void *)&v46 + 1) = v6;
    long long v47 = *((_OWORD *)v5 + 7);
    uint64_t v48 = v10;
    long long v38 = v46;
    long long v39 = v47;
    uint64_t v40 = v10;
    long long v34 = v42;
    long long v35 = v43;
    long long v36 = v44;
    long long v37 = v12;
    long long v32 = v41[0];
    long long v33 = v41[1];
    sub_22D1EB630((uint64_t)v41);
    sub_22D26F540();
    uint64_t v17 = sub_22D2BB640();
    unint64_t v19 = v18;
    sub_22D1EB6C4((uint64_t)v41);
    swift_release();
    sub_22D04BDE8((uint64_t)v0 + *(int *)(v7 + 24), (uint64_t)v3);
    v31[1] = *v0;
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)sub_22D2BCBA0();
    swift_bridgeObjectRelease();
    unint64_t v21 = (void *)sub_22D2BBBC0();
    uint64_t v22 = sub_22D2BBC30();
    uint64_t v23 = *(void *)(v22 - 8);
    int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v3, 1, v22);
    uint64_t v25 = 0;
    if (v24 != 1)
    {
      uint64_t v25 = (void *)sub_22D2BBBC0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v22);
    }
    id v26 = objc_allocWithZone(MEMORY[0x263F45D30]);
    int64_t v27 = (void *)sub_22D2BCBA0();
    swift_bridgeObjectRelease();
    unint64_t v28 = (void *)sub_22D2BBB00();
    sub_22CFF5630(v17, v19);
    id v29 = objc_msgSend(v26, sel_initWithKeyID_added_removed_source_jwkData_, v20, v21, v25, v27, v28);
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_22D2BC390();
    __swift_project_value_buffer(v13, (uint64_t)qword_26AEC3C90);
    id v14 = sub_22D2BC380();
    os_log_type_t v15 = sub_22D2BD040();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      MEMORY[0x230F7BDF0](v16, -1, -1);
    }

    return 0;
  }
  return v29;
}

uint64_t EUDCCPublicKeys.v.getter()
{
  return *(void *)v0;
}

uint64_t EUDCCPublicKeys.v.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*EUDCCPublicKeys.v.modify())()
{
  return nullsub_1;
}

uint64_t EUDCCPublicKeys.keys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D26E874()
{
  if (*v0) {
    return 1937335659;
  }
  else {
    return 118;
  }
}

uint64_t sub_22D26E89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22D2711DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22D26E8C4(uint64_t a1)
{
  unint64_t v2 = sub_22D26EB60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D26E900(uint64_t a1)
{
  unint64_t v2 = sub_22D26EB60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EUDCCPublicKeys.encode(to:)(void *a1)
{
  sub_22D26FAE8(0, &qword_268543508, (uint64_t (*)(void))sub_22D26EB60, (uint64_t)&type metadata for EUDCCPublicKeys.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v11 = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D26EB60();
  sub_22D2BD7B0();
  char v15 = 0;
  uint64_t v8 = v12;
  sub_22D2BD5E0();
  if (!v8)
  {
    uint64_t v13 = v11;
    char v14 = 1;
    sub_22D26F040(0, &qword_268543518, (uint64_t (*)(uint64_t))type metadata accessor for EUDCCPublicKey, MEMORY[0x263F8D488]);
    sub_22D26EE64(&qword_268543520, &qword_268543528);
    sub_22D2BD5F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_22D26EB60()
{
  unint64_t result = qword_268543510;
  if (!qword_268543510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543510);
  }
  return result;
}

uint64_t type metadata accessor for EUDCCPublicKey()
{
  uint64_t result = qword_268543568;
  if (!qword_268543568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EUDCCPublicKeys.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v14[0] = a2;
  sub_22D26FAE8(0, &qword_268543530, (uint64_t (*)(void))sub_22D26EB60, (uint64_t)&type metadata for EUDCCPublicKeys.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D26EB60();
  sub_22D2BD7A0();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = (uint64_t *)v14[0];
    char v16 = 0;
    uint64_t v11 = sub_22D2BD550();
    sub_22D26F040(0, &qword_268543518, (uint64_t (*)(uint64_t))type metadata accessor for EUDCCPublicKey, MEMORY[0x263F8D488]);
    char v15 = 1;
    sub_22D26EE64(&qword_268543538, &qword_268543540);
    sub_22D2BD560();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    uint64_t v13 = v14[1];
    *uint64_t v10 = v11;
    v10[1] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_22D26EE64(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D26F040(255, &qword_268543518, (uint64_t (*)(uint64_t))type metadata accessor for EUDCCPublicKey, MEMORY[0x263F8D488]);
    sub_22D26FB50(a2, (void (*)(uint64_t))type metadata accessor for EUDCCPublicKey);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D26EF24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EUDCCPublicKeys.init(from:)(a1, a2);
}

uint64_t sub_22D26EF3C(void *a1)
{
  return EUDCCPublicKeys.encode(to:)(a1);
}

uint64_t EUDCCPublicKey.source.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EUDCCPublicKey.added.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EUDCCPublicKey() + 20);
  uint64_t v4 = sub_22D2BBC30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t EUDCCPublicKey.removed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EUDCCPublicKey() + 24);
  return sub_22D04BDE8(v3, a1);
}

void sub_22D26F040(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t EUDCCPublicKey.jwk.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EUDCCPublicKey() + 28);
  long long v4 = *(_OWORD *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 112);
  long long v21 = *(_OWORD *)(v3 + 96);
  long long v22 = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v9 = *(_OWORD *)(v3 + 48);
  long long v10 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v11 = v19;
  long long v20 = v10;
  long long v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v13 = v16[0];
  v16[1] = v12;
  long long v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  uint64_t v23 = *(void *)(v3 + 128);
  *(void *)(a1 + 128) = *(void *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_22D1EB630((uint64_t)v16);
}

uint64_t sub_22D26F138()
{
  uint64_t result = 0x656372756F73;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465646461;
      break;
    case 2:
      uint64_t result = 0x6465766F6D6572;
      break;
    case 3:
      uint64_t result = 7042922;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22D26F1B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22D2712A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22D26F1E0(uint64_t a1)
{
  unint64_t v2 = sub_22D26F4EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D26F21C(uint64_t a1)
{
  unint64_t v2 = sub_22D26F4EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EUDCCPublicKey.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_22D26FAE8(0, &qword_268543548, (uint64_t (*)(void))sub_22D26F4EC, (uint64_t)&type metadata for EUDCCPublicKey.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v9 = (char *)v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D26F4EC();
  sub_22D2BD7B0();
  LOBYTE(v17[0]) = 0;
  sub_22D2BD5C0();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for EUDCCPublicKey();
    LOBYTE(v17[0]) = 1;
    sub_22D2BBC30();
    sub_22D26FB50(&qword_26AEC0F38, MEMORY[0x263F07490]);
    sub_22D2BD5F0();
    char v20 = 2;
    sub_22D2BD5B0();
    uint64_t v11 = v3 + *(int *)(v10 + 28);
    long long v12 = *(_OWORD *)(v11 + 112);
    v17[6] = *(_OWORD *)(v11 + 96);
    v17[7] = v12;
    uint64_t v18 = *(void *)(v11 + 128);
    long long v13 = *(_OWORD *)(v11 + 48);
    v17[2] = *(_OWORD *)(v11 + 32);
    v17[3] = v13;
    long long v14 = *(_OWORD *)(v11 + 80);
    v17[4] = *(_OWORD *)(v11 + 64);
    v17[5] = v14;
    long long v15 = *(_OWORD *)(v11 + 16);
    v17[0] = *(_OWORD *)v11;
    v17[1] = v15;
    char v19 = 3;
    sub_22D26F540();
    sub_22D2BD5F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_22D26F4EC()
{
  unint64_t result = qword_268543550;
  if (!qword_268543550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543550);
  }
  return result;
}

unint64_t sub_22D26F540()
{
  unint64_t result = qword_268543558;
  if (!qword_268543558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543558);
  }
  return result;
}

uint64_t EUDCCPublicKey.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v30 = (char *)&v27 - v4;
  uint64_t v33 = sub_22D2BBC30();
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D26FAE8(0, &qword_268543560, (uint64_t (*)(void))sub_22D26F4EC, (uint64_t)&type metadata for EUDCCPublicKey.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v34 = v7;
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)&v27 - v8;
  uint64_t v10 = (int *)type metadata accessor for EUDCCPublicKey();
  MEMORY[0x270FA5388](v10);
  long long v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D26F4EC();
  long long v35 = v9;
  uint64_t v13 = (uint64_t)v36;
  sub_22D2BD7A0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v31;
  long long v36 = a1;
  uint64_t v15 = v32;
  uint64_t v17 = v33;
  uint64_t v16 = v34;
  LOBYTE(v37) = 0;
  uint64_t *v12 = sub_22D2BD540();
  v12[1] = v18;
  unint64_t v28 = v12;
  LOBYTE(v37) = 1;
  uint64_t v27 = sub_22D26FB50(&qword_26AEC0F40, MEMORY[0x263F07490]);
  sub_22D2BD560();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v28 + v10[5], v6, v17);
  LOBYTE(v37) = 2;
  uint64_t v19 = (uint64_t)v30;
  sub_22D2BD530();
  sub_22D043228(v19, (uint64_t)v28 + v10[6]);
  char v46 = 3;
  sub_22D1E984C();
  sub_22D2BD560();
  uint64_t v20 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v35, v16);
  uint64_t v21 = v20 + v10[7];
  long long v22 = v44;
  *(_OWORD *)(v21 + 96) = v43;
  *(_OWORD *)(v21 + 112) = v22;
  *(void *)(v21 + 128) = v45;
  long long v23 = v40;
  *(_OWORD *)(v21 + 32) = v39;
  *(_OWORD *)(v21 + 48) = v23;
  long long v24 = v42;
  *(_OWORD *)(v21 + 64) = v41;
  *(_OWORD *)(v21 + 80) = v24;
  long long v25 = v38;
  *(_OWORD *)uint64_t v21 = v37;
  *(_OWORD *)(v21 + 16) = v25;
  sub_22D0A90AC(v20, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_22D0A9110(v20);
}

void sub_22D26FAE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_22D26FB50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D26FB98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EUDCCPublicKey.init(from:)(a1, a2);
}

uint64_t sub_22D26FBB0(void *a1)
{
  return EUDCCPublicKey.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for EUDCCPublicKeys(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EUDCCPublicKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EUDCCPublicKeys()
{
  return &type metadata for EUDCCPublicKeys;
}

void *initializeBufferWithCopyOfBuffer for EUDCCPublicKey(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = &a2[v8];
    uint64_t v11 = sub_22D2BBC30();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = &a2[v19];
    *(_WORD *)uint64_t v20 = *(_WORD *)v21;
    uint64_t v22 = *((void *)v21 + 2);
    *((void *)v20 + 1) = *((void *)v21 + 1);
    *((void *)v20 + 2) = v22;
    v20[24] = v21[24];
    uint64_t v23 = *((void *)v21 + 5);
    *((void *)v20 + 4) = *((void *)v21 + 4);
    *((void *)v20 + 5) = v23;
    uint64_t v24 = *((void *)v21 + 7);
    *((void *)v20 + 6) = *((void *)v21 + 6);
    *((void *)v20 + 7) = v24;
    uint64_t v25 = *((void *)v21 + 9);
    *((void *)v20 + 8) = *((void *)v21 + 8);
    *((void *)v20 + 9) = v25;
    uint64_t v26 = *((void *)v21 + 11);
    *((void *)v20 + 10) = *((void *)v21 + 10);
    *((void *)v20 + 11) = v26;
    uint64_t v27 = *((void *)v21 + 13);
    *((void *)v20 + 12) = *((void *)v21 + 12);
    *((void *)v20 + 13) = v27;
    uint64_t v28 = *((void *)v21 + 15);
    *((void *)v20 + 14) = *((void *)v21 + 14);
    *((void *)v20 + 15) = v28;
    *((void *)v20 + 16) = *((void *)v21 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for EUDCCPublicKey(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_22D2BBC30();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EUDCCPublicKey(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = &a2[v17];
  *(_WORD *)uint64_t v18 = *(_WORD *)v19;
  uint64_t v20 = *((void *)v19 + 2);
  *((void *)v18 + 1) = *((void *)v19 + 1);
  *((void *)v18 + 2) = v20;
  v18[24] = v19[24];
  uint64_t v21 = *((void *)v19 + 5);
  *((void *)v18 + 4) = *((void *)v19 + 4);
  *((void *)v18 + 5) = v21;
  uint64_t v22 = *((void *)v19 + 7);
  *((void *)v18 + 6) = *((void *)v19 + 6);
  *((void *)v18 + 7) = v22;
  uint64_t v23 = *((void *)v19 + 9);
  *((void *)v18 + 8) = *((void *)v19 + 8);
  *((void *)v18 + 9) = v23;
  uint64_t v24 = *((void *)v19 + 11);
  *((void *)v18 + 10) = *((void *)v19 + 10);
  *((void *)v18 + 11) = v24;
  uint64_t v25 = *((void *)v19 + 13);
  *((void *)v18 + 12) = *((void *)v19 + 12);
  *((void *)v18 + 13) = v25;
  uint64_t v26 = *((void *)v19 + 15);
  *((void *)v18 + 14) = *((void *)v19 + 14);
  *((void *)v18 + 15) = v26;
  *((void *)v18 + 16) = *((void *)v19 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EUDCCPublicKey(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v23 = a3;
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v22 = a1;
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(a3) = v15(v13, 1, v9);
  int v16 = v15(v14, 1, v9);
  if (!a3)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  uint64_t v18 = *(int *)(v23 + 28);
  uint64_t v19 = (char *)v22 + v18;
  uint64_t v20 = (char *)a2 + v18;
  char *v19 = *((unsigned char *)a2 + v18);
  v19[1] = *((unsigned char *)a2 + v18 + 1);
  *((void *)v19 + 1) = *(void *)((char *)a2 + v18 + 8);
  *((void *)v19 + 2) = *(void *)((char *)a2 + v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19[24] = v20[24];
  *((void *)v19 + 4) = *((void *)v20 + 4);
  *((void *)v19 + 5) = *((void *)v20 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 6) = *((void *)v20 + 6);
  *((void *)v19 + 7) = *((void *)v20 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 8) = *((void *)v20 + 8);
  *((void *)v19 + 9) = *((void *)v20 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 10) = *((void *)v20 + 10);
  *((void *)v19 + 11) = *((void *)v20 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 12) = *((void *)v20 + 12);
  *((void *)v19 + 13) = *((void *)v20 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 14) = *((void *)v20 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 15) = *((void *)v20 + 15);
  *((void *)v19 + 16) = *((void *)v20 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v22;
}

_OWORD *initializeWithTake for EUDCCPublicKey(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = &a2[v16];
  long long v19 = *((_OWORD *)v18 + 7);
  *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
  *((_OWORD *)v17 + 7) = v19;
  *((void *)v17 + 16) = *((void *)v18 + 16);
  long long v20 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v20;
  long long v21 = *((_OWORD *)v18 + 5);
  *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
  *((_OWORD *)v17 + 5) = v21;
  long long v22 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v22;
  return a1;
}

void *assignWithTake for EUDCCPublicKey(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v33 = a3;
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a2 + v13;
  uint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v32 = (char *)a1 + v13;
  LODWORD(a3) = v15();
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (a3)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v32, v14, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
      goto LABEL_9;
    }
    sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    size_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
    long long v19 = v32;
  }
  else
  {
    if (!v16)
    {
      v12(v32, v14, v10);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v32, v10);
    sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    size_t v18 = *(void *)(*(void *)(v20 - 8) + 64);
    long long v19 = v32;
  }
  memcpy(v19, v14, v18);
LABEL_9:
  uint64_t v21 = *(int *)(v33 + 28);
  long long v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(_WORD *)long long v22 = *(_WORD *)v23;
  uint64_t v24 = *((void *)v23 + 2);
  *((void *)v22 + 1) = *((void *)v23 + 1);
  *((void *)v22 + 2) = v24;
  swift_bridgeObjectRelease();
  v22[24] = v23[24];
  uint64_t v25 = *((void *)v23 + 5);
  *((void *)v22 + 4) = *((void *)v23 + 4);
  *((void *)v22 + 5) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v23 + 7);
  *((void *)v22 + 6) = *((void *)v23 + 6);
  *((void *)v22 + 7) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)v23 + 9);
  *((void *)v22 + 8) = *((void *)v23 + 8);
  *((void *)v22 + 9) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v23 + 11);
  *((void *)v22 + 10) = *((void *)v23 + 10);
  *((void *)v22 + 11) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *((void *)v23 + 13);
  *((void *)v22 + 12) = *((void *)v23 + 12);
  *((void *)v22 + 13) = v29;
  swift_bridgeObjectRelease();
  *((void *)v22 + 14) = *((void *)v23 + 14);
  swift_bridgeObjectRelease();
  uint64_t v30 = *((void *)v23 + 16);
  *((void *)v22 + 15) = *((void *)v23 + 15);
  *((void *)v22 + 16) = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EUDCCPublicKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D2709EC);
}

uint64_t sub_22D2709EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for EUDCCPublicKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D270B5C);
}

uint64_t sub_22D270B5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_22D26F040(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_22D270CB8()
{
  sub_22D2BBC30();
  if (v0 <= 0x3F)
  {
    sub_22D26F040(319, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for EUDCCPublicKey.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D270E90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EUDCCPublicKey.CodingKeys()
{
  return &type metadata for EUDCCPublicKey.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for EUDCCPublicKeys.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D270F94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EUDCCPublicKeys.CodingKeys()
{
  return &type metadata for EUDCCPublicKeys.CodingKeys;
}

unint64_t sub_22D270FD0()
{
  unint64_t result = qword_268543578;
  if (!qword_268543578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543578);
  }
  return result;
}

unint64_t sub_22D271028()
{
  unint64_t result = qword_268543580;
  if (!qword_268543580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543580);
  }
  return result;
}

unint64_t sub_22D271080()
{
  unint64_t result = qword_268543588;
  if (!qword_268543588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543588);
  }
  return result;
}

unint64_t sub_22D2710D8()
{
  unint64_t result = qword_268543590;
  if (!qword_268543590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543590);
  }
  return result;
}

unint64_t sub_22D271130()
{
  unint64_t result = qword_268543598;
  if (!qword_268543598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543598);
  }
  return result;
}

unint64_t sub_22D271188()
{
  unint64_t result = qword_2685435A0;
  if (!qword_2685435A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685435A0);
  }
  return result;
}

uint64_t sub_22D2711DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 118 && a2 == 0xE100000000000000 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1937335659 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22D2712A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465646461 && a2 == 0xE500000000000000 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465766F6D6572 && a2 == 0xE700000000000000 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7042922 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t destroy for ClinicalSharingQueryDefaultDataProvider(id *a1)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 3));
}

uint64_t initializeWithCopy for ClinicalSharingQueryDefaultDataProvider(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  char v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a1 + 24;
  uint64_t v7 = a2 + 24;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  id v11 = v3;
  id v12 = v4;
  id v13 = v5;
  v10(v6, v7, v9);
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingQueryDefaultDataProvider(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  long long v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

uint64_t assignWithTake for ClinicalSharingQueryDefaultDataProvider(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  char v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingQueryDefaultDataProvider(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingQueryDefaultDataProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingQueryDefaultDataProvider()
{
  return &type metadata for ClinicalSharingQueryDefaultDataProvider;
}

id sub_22D2716C8(uint64_t (*a1)(BOOL *))
{
  id result = objc_msgSend(self, sel_sharedInstance);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  int v3 = result;
  id result = objc_msgSend(result, sel_getPairedDevices);
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  unsigned int v4 = result;
  sub_22D030474(0, &qword_2685435B8);
  unint64_t v5 = sub_22D2BCE00();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22D2BD470();

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  BOOL v7 = v6 != 0;
  char v8 = 0;
  return (id)a1(&v7);
}

uint64_t sub_22D2717E4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = a5;
  id v34 = a1;
  uint64_t v31 = a4;
  id v35 = a2;
  uint64_t v7 = sub_22D2BB8E0();
  uint64_t v30 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22D2BBC30();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v31, v7);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + *(unsigned __int8 *)(v8 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  id v19 = v35;
  *(void *)(v18 + 16) = v34;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v15, v14, v11);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v16, v10, v30);
  uint64_t v20 = v32;
  *(void *)(v18 + v17) = v33;
  *(void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v20;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D2728EC(0, &qword_2685435C0, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v22 = v34;
  id v23 = v35;
  swift_bridgeObjectRetain();
  id v24 = v20;
  uint64_t v36 = sub_22D2BC6F0();
  sub_22D272974(&qword_2685435C8, &qword_2685435C0, v21);
  uint64_t v25 = sub_22D2BC720();
  swift_release();
  uint64_t v36 = v25;
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D2728EC(0, (unint64_t *)&qword_26853F258, MEMORY[0x263EFDCF0]);
  sub_22D272974((unint64_t *)&qword_26853F268, (unint64_t *)&qword_26853F258, v26);
  uint64_t v27 = sub_22D2BC720();
  swift_release();
  return v27;
}

uint64_t sub_22D271B50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22D2BD010();
  *a1 = result;
  return result;
}

uint64_t sub_22D271B7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v8 = objc_msgSend(self, sel_predicateForUserDomainConceptsWithTypeIdentifier_, a1);
  uint64_t v9 = *v4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = a3;
  *(unsigned char *)(v10 + 32) = a4 & 1;
  *(void *)(v10 + 40) = a2;
  *(void *)(v10 + 48) = v9;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D271D64(0, &qword_2685435A8, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v12 = v9;
  id v13 = v8;
  sub_22D2BC6F0();
  sub_22D271DDC(&qword_2685435B0, &qword_2685435A8, v11);
  sub_22D2BC720();
  swift_release();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D271D64(0, (unint64_t *)&qword_268542580, MEMORY[0x263EFDCF0]);
  sub_22D271DDC((unint64_t *)&qword_2685425A0, (unint64_t *)&qword_268542580, v14);
  uint64_t v15 = sub_22D2BC720();
  swift_release();

  return v15;
}

void sub_22D271D64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_22D1FDF84();
    uint64_t v7 = v6;
    unint64_t v8 = sub_22CFF49FC();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_22D271DDC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D271D64(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D271E20(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_predicateForListUserDomainConceptWithListType_, 2);
  unsigned int v4 = *v1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = 1;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = v4;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D271D64(0, &qword_2685435A8, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = v3;
  sub_22D2BC6F0();
  sub_22D271DDC(&qword_2685435B0, &qword_2685435A8, v6);
  sub_22D2BC720();
  swift_release();
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D271D64(0, (unint64_t *)&qword_268542580, MEMORY[0x263EFDCF0]);
  sub_22D271DDC((unint64_t *)&qword_2685425A0, (unint64_t *)&qword_268542580, v9);
  uint64_t v10 = sub_22D2BC720();
  swift_release();

  return v10;
}

uint64_t objectdestroyTm_12()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_22D272040(uint64_t a1, uint64_t a2)
{
  sub_22D0788C8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_22D272050()
{
  v18[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v1 = *v0;
  v18[0] = 0;
  id v2 = objc_msgSend(v1, sel_biologicalSexWithError_, v18);
  if (v2)
  {
    id v3 = v2;
    id v4 = v18[0];
    unint64_t v5 = (unint64_t)objc_msgSend(v3, sel_biologicalSex);

    if (v5 > 3) {
      return 24942;
    }
    else {
      return *(void *)&aNotSet_0[8 * v5];
    }
  }
  else
  {
    id v7 = v18[0];
    id v8 = (void *)sub_22D2BB9C0();

    swift_willThrow();
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_22D2BC390();
    __swift_project_value_buffer(v9, (uint64_t)qword_26AEC3C90);
    id v10 = v8;
    id v11 = v8;
    id v12 = sub_22D2BC380();
    os_log_type_t v13 = sub_22D2BD060();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      v18[0] = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_getErrorValue();
      uint64_t v16 = sub_22D2BD6D0();
      sub_22D0A4D24(v16, v17, (uint64_t *)v18);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v12, v13, "Could not get the biologicalSex. Error: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v15, -1, -1);
      MEMORY[0x230F7BDF0](v14, -1, -1);
    }
    else
    {
    }
    return 0;
  }
}

uint64_t sub_22D2722F4@<X0>(uint64_t a1@<X8>)
{
  v26[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_22D2BB8E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  id v7 = *v1;
  v26[0] = 0;
  id v8 = objc_msgSend(v7, sel_dateOfBirthComponentsWithError_, v26);
  id v9 = v26[0];
  if (v8)
  {
    id v10 = v8;
    sub_22D2BB820();
    id v11 = v9;

    sub_22D2BB840();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    id v13 = v26[0];
    uint64_t v14 = (void *)sub_22D2BB9C0();

    swift_willThrow();
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22D2BC390();
    __swift_project_value_buffer(v15, (uint64_t)qword_26AEC3C90);
    id v16 = v14;
    id v17 = v14;
    uint64_t v18 = sub_22D2BC380();
    os_log_type_t v19 = sub_22D2BD060();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      v26[0] = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_getErrorValue();
      uint64_t v22 = sub_22D2BD6D0();
      uint64_t v25 = sub_22D0A4D24(v22, v23, (uint64_t *)v26);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v18, v19, "Could not get the DOB. Error: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v21, -1, -1);
      MEMORY[0x230F7BDF0](v20, -1, -1);
    }
    else
    {
    }
    uint64_t v24 = sub_22D2BBC30();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a1, 1, 1, v24);
  }
}

uint64_t sub_22D27263C()
{
  uint64_t v1 = sub_22D2BBC30();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_22D2BB8E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = (((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v10 + 8, v12);
}

void sub_22D2727CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_22D2BBC30() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_22D2BB8E0() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v11 = *(void **)(v2 + 16);
  uint64_t v12 = *(void **)(v2 + 24);
  uint64_t v13 = *(void *)(v2 + v10);
  uint64_t v14 = *(void **)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_22D1E34C0(a1, a2, v11, v12, v2 + v6, v2 + v9, v13, v14);
}

void sub_22D2728EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_22D030474(255, &qword_26853F260);
    unint64_t v7 = sub_22CFF49FC();
    unint64_t v8 = a3(a1, v6, v7, MEMORY[0x263F8E4E0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D272974(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D2728EC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PairedWatchStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D272A84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PairedWatchStatus()
{
  return &type metadata for PairedWatchStatus;
}

unint64_t sub_22D272AC0()
{
  unint64_t result = qword_2685435D0;
  if (!qword_2685435D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685435D0);
  }
  return result;
}

id sub_22D272B14()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  if (!v1)
  {
    sub_22D2BCBD0();
    id v1 = (id)sub_22D2BCBA0();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = sub_22D2BCBD0();
  uint64_t v4 = v3;
  if (v2 == sub_22D2BCBD0() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v7 = sub_22D2BD660();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_17:

    id v18 = objc_msgSend(self, sel_kilocalorieUnit);
    return v18;
  }
  uint64_t v8 = sub_22D2BCBD0();
  uint64_t v10 = v9;
  if (v8 == sub_22D2BCBD0() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      uint64_t v14 = sub_22D2BCBD0();
      uint64_t v16 = v15;
      if (v14 == sub_22D2BCBD0() && v16 == v17) {
        goto LABEL_15;
      }
      char v21 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_23;
      }
      uint64_t v22 = sub_22D2BCBD0();
      uint64_t v24 = v23;
      if (v22 == sub_22D2BCBD0() && v24 == v25)
      {
LABEL_15:
        swift_bridgeObjectRelease_n();
LABEL_23:

        id v18 = objc_msgSend(self, sel_millimeterOfMercuryUnit);
        return v18;
      }
      char v26 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_23;
      }
      uint64_t v27 = sub_22D2BCBD0();
      uint64_t v29 = v28;
      if (v27 == sub_22D2BCBD0() && v29 == v30)
      {
        swift_bridgeObjectRelease_n();
LABEL_31:

        id v18 = objc_msgSend(self, sel_poundUnit);
        return v18;
      }
      char v31 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_31;
      }
      uint64_t v32 = sub_22D2BCBD0();
      uint64_t v34 = v33;
      if (v32 == sub_22D2BCBD0() && v34 == v35) {
        goto LABEL_38;
      }
      char v36 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_59;
      }
      uint64_t v37 = sub_22D2BCBD0();
      uint64_t v39 = v38;
      if (v37 == sub_22D2BCBD0() && v39 == v40) {
        goto LABEL_38;
      }
      char v41 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_59;
      }
      uint64_t v42 = sub_22D2BCBD0();
      uint64_t v44 = v43;
      if (v42 == sub_22D2BCBD0() && v44 == v45) {
        goto LABEL_77;
      }
      char v46 = sub_22D2BD660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0)
      {
        uint64_t v47 = sub_22D2BCBD0();
        uint64_t v49 = v48;
        if (v47 == sub_22D2BCBD0() && v49 == v50) {
          goto LABEL_77;
        }
        char v51 = sub_22D2BD660();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v51 & 1) == 0)
        {
          uint64_t v52 = sub_22D2BCBD0();
          uint64_t v54 = v53;
          if (v52 != sub_22D2BCBD0() || v54 != v55)
          {
            char v56 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v56) {
              goto LABEL_50;
            }
            uint64_t v58 = sub_22D2BCBD0();
            uint64_t v60 = v59;
            if (v58 == sub_22D2BCBD0() && v60 == v61) {
              goto LABEL_77;
            }
            char v62 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v62) {
              goto LABEL_50;
            }
            uint64_t v63 = sub_22D2BCBD0();
            uint64_t v65 = v64;
            if (v63 == sub_22D2BCBD0() && v65 == v66)
            {
LABEL_38:
              swift_bridgeObjectRelease_n();
LABEL_59:

              id v18 = objc_msgSend(self, sel_countUnit);
              return v18;
            }
            char v67 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v67) {
              goto LABEL_59;
            }
            uint64_t v68 = sub_22D2BCBD0();
            uint64_t v70 = v69;
            if (v68 == sub_22D2BCBD0() && v70 == v71) {
              goto LABEL_77;
            }
            char v72 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v72) {
              goto LABEL_50;
            }
            uint64_t v73 = sub_22D2BCBD0();
            uint64_t v75 = v74;
            if (v73 == sub_22D2BCBD0() && v75 == v76) {
              goto LABEL_77;
            }
            char v77 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v77) {
              goto LABEL_50;
            }
            uint64_t v78 = sub_22D2BCBD0();
            uint64_t v80 = v79;
            if (v78 == sub_22D2BCBD0() && v80 == v81) {
              goto LABEL_77;
            }
            char v82 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v82) {
              goto LABEL_50;
            }
            uint64_t v83 = sub_22D2BCBD0();
            uint64_t v85 = v84;
            if (v83 == sub_22D2BCBD0() && v85 == v86) {
              goto LABEL_77;
            }
            char v87 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v87) {
              goto LABEL_50;
            }
            uint64_t v88 = sub_22D2BCBD0();
            uint64_t v90 = v89;
            if (v88 == sub_22D2BCBD0() && v90 == v91) {
              goto LABEL_77;
            }
            char v92 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v92) {
              goto LABEL_50;
            }
            uint64_t v93 = sub_22D2BCBD0();
            uint64_t v95 = v94;
            if (v93 == sub_22D2BCBD0() && v95 == v96)
            {
              swift_bridgeObjectRelease_n();
LABEL_84:

              id v18 = objc_msgSend(self, sel_inchUnit);
              return v18;
            }
            char v97 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v97) {
              goto LABEL_84;
            }
            uint64_t v98 = sub_22D2BCBD0();
            uint64_t v100 = v99;
            if (v98 == sub_22D2BCBD0() && v100 == v101) {
              goto LABEL_87;
            }
            char v102 = sub_22D2BD660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v102) {
              goto LABEL_89;
            }
            uint64_t v103 = sub_22D2BCBD0();
            uint64_t v105 = v104;
            if (v103 == sub_22D2BCBD0() && v105 == v106)
            {
LABEL_87:
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v107 = sub_22D2BD660();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v107 & 1) == 0)
              {
                uint64_t v108 = sub_22D2BCBD0();
                uint64_t v110 = v109;
                if (v108 == sub_22D2BCBD0() && v110 == v111)
                {

                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  char v112 = sub_22D2BD660();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v112 & 1) == 0) {
                    return 0;
                  }
                }
                goto LABEL_90;
              }
            }
LABEL_89:

LABEL_90:
            id v18 = objc_msgSend(self, sel_percentUnit);
            return v18;
          }
LABEL_77:
          swift_bridgeObjectRelease_n();
        }
      }
LABEL_50:

      int64_t v57 = (void *)sub_22D2BCBA0();
      id v19 = objc_msgSend(self, sel_unitFromString_, v57);

      return v19;
    }
  }

  id v18 = objc_msgSend(self, sel_minuteUnit);
  return v18;
}

uint64_t sub_22D273784()
{
  id v1 = objc_msgSend(v0, sel_code);
  if (v1 == (id)118)
  {
    sub_22CFF4B64();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_22D2D2CF0;
    char v26 = self;
    id v27 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 0.0);
    id v28 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 40.0);
    id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v27, v28, 1, 0);

    *(void *)(v4 + 32) = v29;
    id v30 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 40.0);
    id v31 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 60.0);
    id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v30, v31, 1, 0);

    *(void *)(v4 + 40) = v32;
    id v33 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 60.0);
    id v34 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 100.0);
    id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v33, v34, 1, 0);

    *(void *)(v4 + 48) = v35;
    id v36 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 100.0);
    id v37 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 120.0);
    id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v36, v37, 1, 0);

    *(void *)(v4 + 56) = v38;
    id v39 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 120.0);
    id v40 = objc_msgSend(v26, sel__quantityWithBeatsPerMinute_, 1.79769313e308);
    id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v39, v40, 1, 0);

    *(void *)(v4 + 64) = v41;
    sub_22D2BCE20();
  }
  else if (v1 == (id)15)
  {
    uint64_t v2 = (void *)sub_22D2BCBA0();
    id v3 = objc_msgSend(self, sel_unitFromString_, v2);

    sub_22CFF4B64();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_22D2D2CF0;
    uint64_t v5 = self;
    id v6 = v3;
    id v7 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v6, 0.0);
    id v8 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v6, 55.0);

    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v7, v8, 1, 0);
    *(void *)(v4 + 32) = v9;
    id v10 = v6;
    id v11 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v10, 55.0);
    id v12 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v10, 70.0);

    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v11, v12, 1, 0);
    *(void *)(v4 + 40) = v13;
    id v14 = v10;
    id v15 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v14, 70.0);
    id v16 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v14, 180.0);

    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v15, v16, 1, 1);
    *(void *)(v4 + 48) = v17;
    id v18 = v14;
    id v19 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v18, 180.0);
    id v20 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v18, 250.0);

    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v19, v20, 0, 0);
    *(void *)(v4 + 56) = v21;
    id v22 = v18;
    id v23 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v22, 250.0);
    id v24 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v22, 1.79769313e308);

    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v23, v24, 1, 0);
    *(void *)(v4 + 64) = v25;
    sub_22D2BCE20();
  }
  else
  {
    return 0;
  }
  return v4;
}

__n128 SignedClinicalDataFHIROperationHandler.init(performer:operationGenerator:accountStore:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_22D2BBF60();
  __n128 v10 = *a2;
  uint64_t v8 = sub_22D2BBF50();
  *(void *)a4 = a1;
  __n128 result = v10;
  *(__n128 *)(a4 + 8) = v10;
  *(void *)(a4 + 24) = a3;
  *(void *)(a4 + 32) = v8;
  return result;
}

uint64_t sub_22D273E14(uint64_t a1)
{
  uint64_t v40 = a1;
  sub_22D27841C(0, &qword_268543620, (uint64_t (*)(uint64_t))sub_22D1F75A0, MEMORY[0x263EFDDE8]);
  id v42 = (id)*(v2 - 1);
  uint64_t v43 = v2;
  MEMORY[0x270FA5388](v2);
  sub_22D278354();
  uint64_t v4 = v3;
  uint64_t v41 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *v1;
  id v9 = v1[2];
  __n128 v10 = v1[3];
  id v11 = v1[4];
  uint64_t v44 = v1[1];
  uint64_t v8 = v44;
  id v45 = v9;
  id v12 = SignedClinicalDataFHIROperationGenerator.healthCardsIssueRequests()();
  id v13 = v12;
  id v42 = v8;
  uint64_t v43 = v11;
  id v38 = v10;
  id v39 = v9;
  uint64_t v14 = v4;
  uint64_t v15 = v40;
  id v37 = v6;
  uint64_t v49 = (void *)MEMORY[0x263F8EE78];
  uint64_t v16 = v12[2];
  if (v16)
  {
    uint64_t v36 = v14;
    id v17 = v12 + 4;
    id v18 = v7;
    swift_retain();
    id v19 = v42;
    id v20 = v39;
    id v21 = v38;
    id v22 = v43;
    swift_retain();
    id v35 = v13;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v44 = v18;
      id v45 = v19;
      id v46 = v20;
      id v47 = v21;
      uint64_t v48 = v22;
      sub_22D275B34(v17, v15);
      MEMORY[0x230F7AA40]();
      if (v49[2] >= v49[3] >> 1) {
        sub_22D2BCE30();
      }
      sub_22D2BCE50();
      sub_22D2BCE20();
      v17 += 5;
      --v16;
      id v18 = v7;
      id v22 = v43;
    }
    while (v16);
    swift_bridgeObjectRelease();
    id v23 = v49;
    uint64_t v24 = v36;
    id v25 = v42;
    id v27 = v38;
    id v26 = v39;
  }
  else
  {
    swift_retain();
    id v25 = v42;
    id v28 = v42;
    id v26 = v39;
    id v29 = v39;
    id v27 = v38;
    id v30 = v38;
    swift_retain();
    id v23 = (void *)MEMORY[0x263F8EE78];
    uint64_t v24 = v14;
  }
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  uint64_t v44 = v23;
  id v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D27841C(0, (unint64_t *)&qword_268542488, (uint64_t (*)(uint64_t))sub_22D1F75A0, MEMORY[0x263EFDCF0]);
  sub_22D278504();
  sub_22D2784A8(&qword_2685424A0, (unint64_t *)&qword_268542488, v31);
  sub_22D27858C(&qword_268543640, (void (*)(uint64_t))sub_22D278504);
  id v32 = v37;
  sub_22D2BC590();
  sub_22D27858C(&qword_268543648, (void (*)(uint64_t))sub_22D278354);
  uint64_t v33 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v24);
  return v33;
}

uint64_t sub_22D274304(void *a1)
{
  sub_22D2787F8(0, (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v19 - v4;
  long long v6 = v1[1];
  long long v21 = *v1;
  long long v22 = v6;
  uint64_t v23 = *((void *)v1 + 4);
  if (objc_msgSend(a1, sel_options))
  {
    uint64_t v16 = sub_22D2BCED0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    *(void *)(v13 + 24) = 0;
    long long v17 = v22;
    *(_OWORD *)(v13 + 32) = v21;
    *(_OWORD *)(v13 + 48) = v17;
    *(void *)(v13 + 64) = v23;
    sub_22D2780F4(&v21);
    uint64_t v15 = &unk_2685435F8;
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22D2BC390();
    __swift_project_value_buffer(v7, (uint64_t)qword_26AEC3C90);
    uint64_t v8 = sub_22D2BC380();
    os_log_type_t v9 = sub_22D2BD080();
    if (os_log_type_enabled(v8, v9))
    {
      __n128 v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v20 = v11;
      *(_DWORD *)__n128 v10 = 136315138;
      uint64_t v19 = sub_22D0A4D24(0xD000000000000026, 0x800000022D2D2D90, &v20);
      sub_22D2BD220();
      _os_log_impl(&dword_22CFEE000, v8, v9, "%s will not submit analytics, submission not enabled", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v11, -1, -1);
      MEMORY[0x230F7BDF0](v10, -1, -1);
    }

    uint64_t v12 = sub_22D2BCED0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    *(void *)(v13 + 24) = 0;
    long long v14 = v22;
    *(_OWORD *)(v13 + 32) = v21;
    *(_OWORD *)(v13 + 48) = v14;
    *(void *)(v13 + 64) = v23;
    sub_22D2780F4(&v21);
    uint64_t v15 = &unk_2685435E8;
  }
  sub_22D2772AC((uint64_t)v5, (uint64_t)v15, v13);
  return swift_release();
}

uint64_t sub_22D274638(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a4;
  id v32 = a2;
  uint64_t v33 = a3;
  uint64_t v8 = sub_22D2BBC90();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2785D4();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v35 = sub_22D2785D4;
  id v34 = sub_22D2786F0;
  sub_22D2791A8(0, &qword_2685436A8, (void (*)(uint64_t))sub_22D2785D4, (void (*)(void))sub_22D2786F0);
  uint64_t v36 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v40 = a5;
  sub_22CFF4B00(a4, (uint64_t)v39);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  sub_22CFF8C10(v39, v22 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22 + v20, v11, v8);
  uint64_t v24 = v32;
  uint64_t v23 = v33;
  *(void *)(v22 + v21) = v32;
  *(void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = v23;
  sub_22CFF7DC0(0);
  sub_22D27858C(&qword_26853D880, sub_22CFF7DC0);
  id v25 = v24;
  swift_retain();
  sub_22D2BC850();
  swift_release();
  sub_22CFF4B00(v31, (uint64_t)v39);
  uint64_t v26 = swift_allocObject();
  sub_22CFF8C10(v39, v26 + 16);
  type metadata accessor for WebRequestResponseError(0);
  sub_22D2786F0();
  sub_22D27858C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
  uint64_t v27 = v37;
  sub_22D2BC840();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v27);
  sub_22D27902C(&qword_2685436B0, &qword_2685436A8, (void (*)(uint64_t))v35, (void (*)(void))v34);
  uint64_t v28 = v36;
  uint64_t v29 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v28);
  return v29;
}

NSObject *sub_22D274A70(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v70 = a5;
  uint64_t v68 = a4;
  uint64_t v71 = a3;
  uint64_t v67 = sub_22D2BBC90();
  uint64_t v7 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v66 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for HTTPError();
  uint64_t v9 = MEMORY[0x270FA5388](v73);
  uint64_t v74 = (uint64_t *)((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v63 - v11;
  uint64_t v76 = type metadata accessor for WebRequestResponseError.ErrorType(0);
  MEMORY[0x270FA5388](v76);
  uint64_t v77 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_22D2BBAA0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for WebRequestResponseError(0);
  MEMORY[0x270FA5388](v78);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_22D2BC390();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
  uint64_t v79 = (uint8_t *)a1;
  sub_22D27907C(a1, (uint64_t)v19, type metadata accessor for WebRequestResponseError);
  uint64_t v69 = a2;
  sub_22CFF4B00(a2, (uint64_t)v82);
  uint64_t v75 = v21;
  uint64_t v22 = sub_22D2BC380();
  os_log_type_t v23 = sub_22D2BD050();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    char v72 = v12;
    uint64_t v25 = v24;
    uint64_t v64 = swift_slowAlloc();
    uint64_t v85 = v64;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v65 = v7;
    uint64_t v26 = WebRequestResponseError.safelyLoggableDescription.getter();
    uint64_t v80 = sub_22D0A4D24(v26, v27, &v85);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D278D6C((uint64_t)v19, type metadata accessor for WebRequestResponseError);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v63 = v25 + 14;
    uint64_t v28 = v83;
    uint64_t v29 = v84;
    __swift_project_boxed_opaque_existential_1(v82, v83);
    (*(void (**)(uint64_t, uint64_t))(v29 + 40))(v28, v29);
    uint64_t v30 = sub_22D2BB9E0();
    unint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v80 = v30;
    unint64_t v81 = v32;
    swift_bridgeObjectRetain();
    sub_22D2BD680();
    id v33 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v34 = sub_22D2BCC30();
    unint64_t v36 = v35;
    uint64_t v7 = v65;
    swift_bridgeObjectRelease();
    uint64_t v80 = sub_22D0A4D24(v34, v36, &v85);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    _os_log_impl(&dword_22CFEE000, v22, v23, "WebRequestPerformer.catchAndRefreshToken: evaluating error %s for request %s", (uint8_t *)v25, 0x16u);
    uint64_t v37 = v64;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v37, -1, -1);
    uint64_t v38 = v25;
    uint64_t v12 = v72;
    MEMORY[0x230F7BDF0](v38, -1, -1);
  }
  else
  {
    sub_22D278D6C((uint64_t)v19, type metadata accessor for WebRequestResponseError);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  }

  uint64_t v39 = (uint64_t)v79;
  uint64_t v40 = v77;
  sub_22D27907C((uint64_t)&v79[*(int *)(v78 + 20)], v77, type metadata accessor for WebRequestResponseError.ErrorType);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v53 = sub_22D2BC380();
    os_log_type_t v54 = sub_22D2BD060();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl(&dword_22CFEE000, v53, v54, "WebRequestPerformer.catchAndRefreshToken: re-throwing error", v55, 2u);
      MEMORY[0x230F7BDF0](v55, -1, -1);
    }

    sub_22D27858C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    swift_allocError();
    sub_22D27907C(v39, v56, type metadata accessor for WebRequestResponseError);
    swift_willThrow();
    int64_t v57 = type metadata accessor for WebRequestResponseError.ErrorType;
    uint64_t v58 = v40;
    goto LABEL_19;
  }
  sub_22D1D8F08(v40, (uint64_t)v12);
  uint64_t v41 = v74;
  sub_22D27907C((uint64_t)v12, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for HTTPError);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_22D278D6C((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for HTTPError);
LABEL_16:
    uint64_t v53 = sub_22D2BC380();
    os_log_type_t v59 = sub_22D2BD060();
    if (os_log_type_enabled(v53, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl(&dword_22CFEE000, v53, v59, "WebRequestPerformer.catchAndRefreshToken: re-throwing error", v60, 2u);
      MEMORY[0x230F7BDF0](v60, -1, -1);
    }

    sub_22D27858C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    swift_allocError();
    sub_22D27907C(v39, v61, type metadata accessor for WebRequestResponseError);
    swift_willThrow();
    int64_t v57 = (uint64_t (*)(void))type metadata accessor for HTTPError;
    uint64_t v58 = (uint64_t)v12;
LABEL_19:
    sub_22D278D6C(v58, v57);
    return v53;
  }
  uint64_t v42 = v41[1];
  if (!v42) {
    goto LABEL_16;
  }
  v82[0] = *v41;
  v82[1] = v42;
  uint64_t v80 = 0x20726572616542;
  unint64_t v81 = 0xE700000000000000;
  sub_22D0B80BC();
  uint64_t v43 = v7;
  sub_22D0B8110();
  char v44 = sub_22D2BCB50();
  swift_bridgeObjectRelease();
  if ((v44 & 1) == 0) {
    goto LABEL_16;
  }
  char v72 = v12;
  id v45 = v66;
  uint64_t v46 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v66, v71, v67);
  id v47 = sub_22D2BC380();
  os_log_type_t v48 = sub_22D2BD050();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v82[0] = v50;
    *(_DWORD *)uint64_t v49 = 136315138;
    uint64_t v79 = v49 + 4;
    sub_22D27858C((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v51 = sub_22D2BD630();
    uint64_t v80 = sub_22D0A4D24(v51, v52, v82);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v46);
    _os_log_impl(&dword_22CFEE000, v47, v48, "WebRequestPerformer.catchAndRefreshToken: tryCatch: 401 response, requesting new accessToken for account: %s", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v50, -1, -1);
    MEMORY[0x230F7BDF0](v49, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v45, v46);
  }

  uint64_t v53 = sub_22D2754A8(v71, v68, v70, v69);
  sub_22D278D6C((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for HTTPError);
  return v53;
}

uint64_t sub_22D2754A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  uint64_t v46 = a3;
  uint64_t v6 = sub_22D2BBC90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2599B4();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v38 = v10;
  uint64_t v39 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_22D2599B4;
  uint64_t v40 = sub_22D279270;
  sub_22D2791A8(0, (unint64_t *)&qword_2685432B8, (void (*)(uint64_t))sub_22D2599B4, (void (*)(void))sub_22D279270);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v37 - v16;
  sub_22D259C20();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v44 = v18;
  uint64_t v45 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v22 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v23 = (v8 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24 + v22, v9, v6);
  *(void *)(v24 + v23) = a2;
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDE20];
  sub_22D27841C(0, &qword_2685432D8, (uint64_t (*)(uint64_t))sub_22D2790E4, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v26 = a2;
  *(void *)&v47[0] = sub_22D2BC6F0();
  sub_22D27914C(&qword_2685432E0, &qword_2685432D8, v25);
  uint64_t v27 = sub_22D2BC720();
  swift_release();
  uint64_t v48 = v27;
  uint64_t v28 = v37;
  sub_22CFF4B00(v37, (uint64_t)v47);
  uint64_t v29 = swift_allocObject();
  sub_22CFF8C10(v47, v29 + 16);
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D27841C(0, &qword_2685432A0, (uint64_t (*)(uint64_t))sub_22D2790E4, MEMORY[0x263EFDCF0]);
  sub_22D021C20(0, &qword_268542080);
  sub_22D27914C(&qword_2685432B0, &qword_2685432A0, v30);
  sub_22D2BC780();
  swift_release();
  swift_release();
  sub_22CFF4B00(v28, (uint64_t)v47);
  uint64_t v31 = swift_allocObject();
  sub_22CFF8C10(v47, v31 + 16);
  type metadata accessor for WebRequestResponseError(0);
  sub_22D279270();
  sub_22D27858C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
  uint64_t v32 = v38;
  sub_22D2BC840();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v32);
  swift_retain();
  sub_22D2BC5D0();
  sub_22CFF7DC0(0);
  sub_22D27902C(&qword_2685432D0, (unint64_t *)&qword_2685432B8, (void (*)(uint64_t))v41, (void (*)(void))v40);
  sub_22D27858C(&qword_26853D880, sub_22CFF7DC0);
  uint64_t v33 = v42;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v33);
  sub_22D27858C(&qword_2685432E8, (void (*)(uint64_t))sub_22D259C20);
  uint64_t v34 = v44;
  uint64_t v35 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v34);
  return v35;
}

uint64_t sub_22D275B34(void *a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v4 = sub_22D2BBC90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2785D4();
  uint64_t v37 = v8;
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D278674();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  uint64_t v41 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = v2[1];
  long long v44 = *v2;
  long long v45 = v15;
  uint64_t v46 = *((void *)v2 + 4);
  sub_22D2BBB70();
  uint64_t v17 = v16;
  id v18 = objc_msgSend((id)v45, sel_accountInformation);
  uint64_t v19 = v44;
  uint64_t v21 = a1[3];
  uint64_t v20 = a1[4];
  unint64_t v22 = __swift_project_boxed_opaque_existential_1(a1, v21);
  uint64_t v23 = sub_22D2B6970((uint64_t)v22, 0, 1, 0, 1, 1, v19, v21, v20);
  id v24 = objc_msgSend(v18, sel_accountIdentifier);
  sub_22D2BBC70();

  uint64_t v25 = sub_22D274638((uint64_t)v7, *((void **)&v45 + 1), v19, (uint64_t)a1, v23);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  uint64_t v43 = v25;
  sub_22CFF4B00((uint64_t)a1, (uint64_t)v42);
  uint64_t v26 = swift_allocObject();
  sub_22CFF8C10(v42, v26 + 16);
  *(void *)(v26 + 56) = v17;
  long long v27 = v45;
  *(_OWORD *)(v26 + 64) = v44;
  *(_OWORD *)(v26 + 80) = v27;
  *(void *)(v26 + 96) = v46;
  *(void *)(v26 + 104) = v18;
  sub_22D2780F4(&v44);
  sub_22CFF7DC0(0);
  sub_22D27858C(&qword_26853D880, sub_22CFF7DC0);
  id v28 = v18;
  sub_22D2BC850();
  swift_release();
  swift_release();
  sub_22CFF4B00((uint64_t)a1, (uint64_t)v42);
  uint64_t v29 = swift_allocObject();
  sub_22CFF8C10(v42, v29 + 16);
  *(void *)(v29 + 56) = v17;
  long long v30 = v45;
  *(_OWORD *)(v29 + 64) = v44;
  *(_OWORD *)(v29 + 80) = v30;
  *(void *)(v29 + 96) = v46;
  *(void *)(v29 + 104) = v28;
  *(void *)(v29 + 112) = v38;
  sub_22D2780F4(&v44);
  sub_22D1F75A0();
  sub_22D2786F0();
  id v31 = v28;
  uint64_t v32 = v37;
  sub_22D2BC7F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v32);
  sub_22D27858C(&qword_268543668, (void (*)(uint64_t))sub_22D278674);
  uint64_t v33 = v40;
  uint64_t v34 = sub_22D2BC720();

  (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v33);
  return v34;
}

void sub_22D275FDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  sub_22D2787F8(0, (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v37 = (char *)&v35 - v9;
  uint64_t v10 = type metadata accessor for WebRequestResponseError.ErrorType(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for HTTPError();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v35 - v17;
  uint64_t v19 = type metadata accessor for WebRequestResponseError(0);
  sub_22D27907C(a1 + *(int *)(v19 + 20), (uint64_t)v12, type metadata accessor for WebRequestResponseError.ErrorType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22D1D8F08((uint64_t)v12, (uint64_t)v18);
    sub_22D1D8F08((uint64_t)v18, (uint64_t)v16);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v21 = a1;
    uint64_t v23 = v36;
    uint64_t v22 = (uint64_t)v37;
    uint64_t v24 = v35;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v25 = *v16;
    }
    else
    {
      sub_22D278D6C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for HTTPError);
      uint64_t v25 = 0;
    }
  }
  else
  {
    sub_22D278D6C((uint64_t)v12, type metadata accessor for WebRequestResponseError.ErrorType);
    uint64_t v25 = 0;
    uint64_t v21 = a1;
    uint64_t v23 = v36;
    uint64_t v22 = (uint64_t)v37;
    uint64_t v24 = v35;
  }
  sub_22D030474(0, &qword_268543670);
  sub_22CFF4B00(v24, (uint64_t)v38);
  id v26 = sub_22D2763F4(v38, v25, a5);
  id v27 = objc_msgSend(v26, sel_asErrorEndStateWithErrorCode_, 0);

  id v28 = objc_msgSend(v23, sel_gateway);
  uint64_t v29 = sub_22D2BCED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v22, 1, 1, v29);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  *(void *)(v30 + 32) = v27;
  long long v31 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v30 + 40) = *(_OWORD *)a3;
  *(_OWORD *)(v30 + 56) = v31;
  *(void *)(v30 + 72) = *(void *)(a3 + 32);
  *(void *)(v30 + 80) = v28;
  id v32 = v27;
  sub_22D2780F4((void *)a3);
  id v33 = v28;
  sub_22D2772AC(v22, (uint64_t)&unk_2685436A0, v30);

  swift_release();
  sub_22D27858C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
  swift_allocError();
  sub_22D27907C(v21, v34, type metadata accessor for WebRequestResponseError);
  swift_willThrow();
}

id sub_22D2763F4(void *a1, uint64_t a2, double a3)
{
  uint64_t v22 = a2;
  uint64_t v5 = sub_22D2BBAA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_22D2BBC30();
  uint64_t v9 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2BBC10();
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14);
  uint64_t v15 = (void *)sub_22D2BBA10();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = (void *)sub_22D2BCBA0();
  uint64_t v17 = (void *)sub_22D2BBBC0();
  sub_22D2BBB60();
  id v19 = objc_msgSend(v12, sel_initWithRequestedURL_resourceType_interactionType_responseStatusCode_requestEndTime_requestDuration_hadError_errorCode_, v15, v16, 6, v22, v17, 0, v18 - a3, 0);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v19;
}

void sub_22D276650(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>, double a7@<D0>)
{
  char v92 = a6;
  uint64_t v13 = sub_22D2BCC20();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v94 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_22D2BBC30();
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v98 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  char v97 = (char *)&v83 - v18;
  id v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D2787F8(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v99 = (uint64_t)&v83 - v21;
  uint64_t v22 = sub_22D2BBC90();
  uint64_t v96 = *(ValueMetadata **)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2787F8(0, (unint64_t *)&qword_26853ECE0, MEMORY[0x263F8F520], v19);
  MEMORY[0x270FA5388](v25 - 8);
  id v27 = (char *)&v83 - v26;
  sub_22CFF4B00((uint64_t)a2, (uint64_t)&v101);
  id v28 = (void *)a1[7];
  uint64_t v93 = a5;
  if (v28) {
    uint64_t v29 = (uint64_t)objc_msgSend(v28, sel_statusCode);
  }
  else {
    uint64_t v29 = 200;
  }
  sub_22D030474(0, &qword_268543670);
  id v30 = sub_22D2763F4(&v101, v29, a7);
  long long v31 = v30;
  unint64_t v32 = a1[6];
  if (v32 >> 60 == 15)
  {
    id v33 = objc_msgSend(v30, sel_asErrorEndStateWithErrorCode_, 0);
    id v34 = objc_msgSend(a4, sel_gateway);
    uint64_t v35 = sub_22D2BCED0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v27, 1, 1, v35);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = 0;
    *(void *)(v36 + 24) = 0;
    *(void *)(v36 + 32) = v33;
    long long v37 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v36 + 40) = *(_OWORD *)a3;
    *(_OWORD *)(v36 + 56) = v37;
    *(void *)(v36 + 72) = *(void *)(a3 + 32);
    *(void *)(v36 + 80) = v34;
    id v38 = v33;
    sub_22D2780F4((void *)a3);
    id v39 = v34;
    sub_22D2772AC((uint64_t)v27, (uint64_t)&unk_268543680, v36);

    swift_release();
    sub_22D27891C();
    swift_allocError();
    unsigned char *v40 = 0;
    swift_willThrow();

LABEL_15:
    return;
  }
  uint64_t v90 = a1[5];
  sub_22CFF9B64(v90, v32);
  id v41 = objc_msgSend(a4, sel_gateway);
  uint64_t v42 = sub_22D2BCED0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v27, 1, 1, v42);
  uint64_t v43 = swift_allocObject();
  unint64_t v91 = v32;
  uint64_t v44 = v43;
  *(void *)(v43 + 16) = 0;
  *(void *)(v43 + 24) = 0;
  *(void *)(v43 + 32) = v31;
  long long v45 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v43 + 40) = *(_OWORD *)a3;
  *(_OWORD *)(v43 + 56) = v45;
  *(void *)(v43 + 72) = *(void *)(a3 + 32);
  *(void *)(v43 + 80) = v41;
  sub_22D2780F4((void *)a3);
  id v84 = v31;
  id v46 = v41;
  sub_22D2772AC((uint64_t)v27, (uint64_t)&unk_268543690, v44);

  swift_release();
  uint64_t v101 = 0;
  unint64_t v102 = 0xE000000000000000;
  sub_22D2BD310();
  swift_bridgeObjectRelease();
  uint64_t v101 = (ValueMetadata *)0xD000000000000015;
  unint64_t v102 = 0x800000022D2DE780;
  id v47 = objc_msgSend(a4, sel_accountIdentifier);
  sub_22D2BBC70();

  sub_22D27858C((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
  sub_22D2BD630();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  uint64_t v48 = v22;
  uint64_t v49 = a4;
  ((void (*)(char *, uint64_t))v96->Description)(v24, v48);
  uint64_t v96 = v101;
  unint64_t v89 = v102;
  uint64_t v50 = a2[3];
  uint64_t v51 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v50);
  uint64_t v52 = v99;
  (*(void (**)(uint64_t, uint64_t))(v51 + 40))(v50, v51);
  uint64_t v53 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 0, 1, v53);
  id v54 = objc_msgSend(a4, sel_gateway);
  id v88 = objc_msgSend(v54, sel_FHIRVersion);

  uint64_t v55 = (uint64_t)v97;
  sub_22D2BBC20();
  uint64_t v56 = (uint64_t)v98;
  sub_22D2BBC20();
  int64_t v57 = self;
  objc_msgSend(v57, sel_currentOSVersionStruct);
  unint64_t v86 = v102;
  char v87 = v101;
  uint64_t v85 = v103;
  id v58 = objc_msgSend(v57, sel_currentOSBuild);
  if (v58)
  {
    os_log_type_t v59 = v58;
    sub_22D030474(0, &qword_268542498);
    sub_22D2BCBD0();

    id v60 = objc_msgSend(v49, sel_gateway);
    id v61 = objc_msgSend(v60, sel_country);

    sub_22D2BCBD0();
    uint64_t v63 = v90;
    unint64_t v62 = v91;
    sub_22CFFA158(v90, v91);
    uint64_t v64 = v95;
    id v65 = v88;
    id v66 = sub_22D278A30((uint64_t)v96, v89, v63, v62, v99, (uint64_t)v88, v55, v56, 0, (uint64_t)v87, v86, v85);
    if (!v64)
    {
      id v80 = v66;

      sub_22CFF9C10(v63, v62);
      sub_22CFF9C10(v63, v62);
      char v82 = v92;
      uint64_t v81 = v93;
      void *v92 = v80;
      v82[1] = v81;
      return;
    }

    sub_22CFF9C10(v63, v62);
    sub_22D2BCC10();
    uint64_t v67 = sub_22D2BCBF0();
    unint64_t v69 = v68;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v70 = sub_22D2BC390();
    __swift_project_value_buffer(v70, (uint64_t)qword_26AEC3C90);
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_22D2BC380();
    os_log_type_t v72 = sub_22D2BD060();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      uint64_t v100 = v99;
      *(_DWORD *)uint64_t v73 = 136315394;
      uint64_t v101 = &type metadata for SignedClinicalDataFHIROperationHandler;
      sub_22D278D30();
      uint64_t v74 = sub_22D2BCC30();
      uint64_t v101 = (ValueMetadata *)sub_22D0A4D24(v74, v75, &v100);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2080;
      uint64_t v101 = (ValueMetadata *)v67;
      unint64_t v102 = v69;
      sub_22CFFA100();
      swift_bridgeObjectRetain();
      sub_22D2BD680();
      id v76 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v77 = sub_22D2BCC30();
      uint64_t v101 = (ValueMetadata *)sub_22D0A4D24(v77, v78, &v100);
      uint64_t v63 = v90;
      sub_22D2BD220();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v71, v72, "%s failed to parse response data to original FHIR resource object, response data string: %s", (uint8_t *)v73, 0x16u);
      uint64_t v79 = v99;
      unint64_t v62 = v91;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v79, -1, -1);
      MEMORY[0x230F7BDF0](v73, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v38 = v84;
    swift_willThrow();
    sub_22CFF9C10(v63, v62);
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_22D2770DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  uint64_t v6[2] = a4;
  return MEMORY[0x270FA2498](sub_22D277100, 0, 0);
}

uint64_t sub_22D277100()
{
  uint64_t v1 = v0[3];
  v0[5] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45CF8]), sel_initWithEndState_, v0[2]);
  v0[6] = *(void *)(v1 + 32);
  sub_22D2BBF60();
  sub_22D27858C(&qword_268543600, MEMORY[0x263F45AE8]);
  uint64_t v3 = sub_22D2BCE80();
  return MEMORY[0x270FA2498](sub_22D2771E0, v3, v2);
}

uint64_t sub_22D2771E0()
{
  sub_22D2BBF10();
  return MEMORY[0x270FA2498](sub_22D27724C, 0, 0);
}

uint64_t sub_22D27724C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22D2772AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BCED0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22D2BCEC0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_22D0CED18(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22D2BCE80();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_22D277450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = *(void *)(a4 + 32);
  sub_22D2BBF60();
  sub_22D27858C(&qword_268543600, MEMORY[0x263F45AE8]);
  uint64_t v6 = sub_22D2BCE80();
  return MEMORY[0x270FA2498](sub_22D27750C, v6, v5);
}

uint64_t sub_22D27750C()
{
  sub_22D2BBF40();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22D27756C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_22D2BBF90();
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *(void *)(a4 + 32);
  v4[11] = v7;
  v4[12] = v8;
  sub_22D2BBF60();
  sub_22D27858C(&qword_268543600, MEMORY[0x263F45AE8]);
  uint64_t v10 = sub_22D2BCE80();
  v4[13] = v10;
  v4[14] = v9;
  return MEMORY[0x270FA2498](sub_22D277684, v10, v9);
}

uint64_t sub_22D277684()
{
  *(void *)(v0 + 120) = sub_22D2BBF20();
  *(void *)(v0 + 128) = v1;
  return MEMORY[0x270FA2498](sub_22D2776F0, 0, 0);
}

uint64_t sub_22D2776F0()
{
  uint64_t v24 = v0;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_22D2BC390();
  __swift_project_value_buffer(v1, (uint64_t)qword_26AEC3C90);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_22D2BC380();
  os_log_type_t v3 = sub_22D2BD040();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[16];
  if (v4)
  {
    uint64_t v6 = v0[15];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[6] = v6;
    v0[7] = v5;
    swift_bridgeObjectRetain_n();
    sub_22D2BD680();
    id v9 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v10 = sub_22D2BCC30();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[8] = sub_22D0A4D24(v10, v12, &v23);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22CFEE000, v2, v3, "Analytics to submit: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v8, -1, -1);
    MEMORY[0x230F7BDF0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_22D2787F8(0, &qword_268543608, MEMORY[0x263F45B38], MEMORY[0x263F8E0F8]);
  uint64_t v13 = sub_22D2BBF80();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_22D2C0F10;
  unint64_t v18 = v17 + v16;
  id v19 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
  v19(v18, *MEMORY[0x263F45B28], v13);
  v19(v18 + v15, *MEMORY[0x263F45B30], v13);
  sub_22D2BBF70();
  swift_bridgeObjectRelease();
  uint64_t v20 = v0[13];
  uint64_t v21 = v0[14];
  return MEMORY[0x270FA2498](sub_22D277A6C, v20, v21);
}

uint64_t sub_22D277A6C()
{
  sub_22D2BBF30();
  return MEMORY[0x270FA2498](sub_22D277AEC, 0, 0);
}

uint64_t sub_22D277AEC()
{
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_22D277B68()
{
  uint64_t v0 = (void *)sub_22D2BCBA0();
  sub_22D030474(0, (unint64_t *)&qword_26AEC1F30);
  id v1 = (id)sub_22D2BCAF0();
  AnalyticsSendEvent();
}

BOOL static SignedClinicalDataFHIROperationHandlerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SignedClinicalDataFHIROperationHandlerError.hash(into:)()
{
  return sub_22D2BD740();
}

uint64_t SignedClinicalDataFHIROperationHandlerError.hashValue.getter()
{
  return sub_22D2BD760();
}

unint64_t sub_22D277C88()
{
  unint64_t result = qword_2685435D8;
  if (!qword_2685435D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2685435D8);
  }
  return result;
}

uint64_t destroy for SignedClinicalDataFHIROperationHandler(id *a1)
{
  swift_release();

  return swift_release();
}

void *initializeWithCopy for SignedClinicalDataFHIROperationHandler(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  BOOL v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = a2[4];
  swift_retain();
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  swift_retain();
  return a1;
}

void *assignWithCopy for SignedClinicalDataFHIROperationHandler(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  BOOL v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  id v7 = (void *)a2[2];
  id v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  uint64_t v10 = (void *)a2[3];
  unint64_t v11 = (void *)a1[3];
  a1[3] = v10;
  id v12 = v10;

  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SignedClinicalDataFHIROperationHandler(uint64_t a1, uint64_t a2)
{
  swift_release();
  BOOL v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SignedClinicalDataFHIROperationHandler(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SignedClinicalDataFHIROperationHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataFHIROperationHandler()
{
  return &type metadata for SignedClinicalDataFHIROperationHandler;
}

unsigned char *storeEnumTagSinglePayload for SignedClinicalDataFHIROperationHandlerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D278004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataFHIROperationHandlerError()
{
  return &type metadata for SignedClinicalDataFHIROperationHandlerError;
}

uint64_t sub_22D278040(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *unsigned int v6 = v2;
  v6[1] = sub_22D0A94FC;
  return sub_22D277450(a1, v4, v5, v1 + 32);
}

void *sub_22D2780F4(void *a1)
{
  uint64_t v2 = (void *)a1[1];
  int v3 = (void *)a1[2];
  uint64_t v4 = (void *)a1[3];
  swift_retain();
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;
  swift_retain();
  return a1;
}

uint64_t objectdestroyTm_13()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_22D2781B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  id v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *id v6 = v2;
  v6[1] = sub_22D0A94FC;
  return sub_22D27756C(a1, v4, v5, v1 + 32);
}

uint64_t sub_22D278264()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D27829C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_22D0A8E9C;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268543610 + dword_268543610);
  return v6(a1, v4);
}

void sub_22D278354()
{
  if (!qword_268543628)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D27841C(255, (unint64_t *)&qword_268542488, (uint64_t (*)(uint64_t))sub_22D1F75A0, MEMORY[0x263EFDCF0]);
    sub_22D2784A8(&qword_2685424A0, (unint64_t *)&qword_268542488, v0);
    unint64_t v1 = sub_22D2BC580();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268543628);
    }
  }
}

void sub_22D27841C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_22D2784A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D27841C(255, a2, (uint64_t (*)(uint64_t))sub_22D1F75A0, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D278504()
{
  if (!qword_268543638)
  {
    sub_22D27841C(255, (unint64_t *)&qword_268542488, (uint64_t (*)(uint64_t))sub_22D1F75A0, MEMORY[0x263EFDCF0]);
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543638);
    }
  }
}

uint64_t sub_22D27858C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D2785D4()
{
  if (!qword_268543650)
  {
    sub_22CFF7DC0(255);
    sub_22D27858C(&qword_26853D880, sub_22CFF7DC0);
    unint64_t v0 = sub_22D2BC570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543650);
    }
  }
}

void sub_22D278674()
{
  if (!qword_268543658)
  {
    sub_22D2785D4();
    sub_22D1F75A0();
    sub_22D2786F0();
    unint64_t v0 = sub_22D2BC500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543658);
    }
  }
}

uint64_t sub_22D2786F0()
{
  return sub_22D27858C(&qword_268543660, (void (*)(uint64_t))sub_22D2785D4);
}

uint64_t sub_22D278724()
{
  return objectdestroy_16Tm(112);
}

void sub_22D27872C(uint64_t a1)
{
  sub_22D275FDC(a1, v1 + 16, v1 + 64, *(void **)(v1 + 104), *(double *)(v1 + 56));
}

uint64_t sub_22D278754()
{
  return objectdestroy_16Tm(120);
}

uint64_t objectdestroy_16Tm(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 2));
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

void sub_22D2787D0(void *a1@<X0>, void *a2@<X8>)
{
  sub_22D276650(a1, (void *)(v2 + 16), v2 + 64, *(void **)(v2 + 104), *(void *)(v2 + 112), a2, *(double *)(v2 + 56));
}

void sub_22D2787F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D278860()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = v0 + 40;
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[3] = v3;
  v5[4] = v4;
  v5[1] = sub_22D0A94FC;
  _OWORD v5[2] = v2;
  return MEMORY[0x270FA2498](sub_22D277100, 0, 0);
}

unint64_t sub_22D27891C()
{
  unint64_t result = qword_268543688;
  if (!qword_268543688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543688);
  }
  return result;
}

uint64_t sub_22D278974()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = v0 + 40;
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[3] = v3;
  v5[4] = v4;
  v5[1] = sub_22D0A8E9C;
  _OWORD v5[2] = v2;
  return MEMORY[0x270FA2498](sub_22D277100, 0, 0);
}

id sub_22D278A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  v35[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v13 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_22D2BBB00();
  uint64_t v15 = sub_22D2BBAA0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a5, 1, v15) != 1)
  {
    uint64_t v17 = (void *)sub_22D2BBA10();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a5, v15);
  }
  unint64_t v18 = (void *)sub_22D2BBBC0();
  id v19 = (void *)sub_22D2BBBC0();
  uint64_t v20 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  v35[0] = 0;
  v34[0] = a10;
  v34[1] = a11;
  v34[2] = a12;
  id v22 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_resourceObjectWithStaticIdentifier_data_sourceURL_FHIRVersion_receivedDate_firstSeenDate_extractionHints_originVersion_originBuild_country_error_, v13, v14, v17, a6, v18, v19, a9, v34, v20, v21, v35);

  id v23 = v35[0];
  if (v22)
  {
    uint64_t v24 = sub_22D2BBC30();
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
    id v26 = v23;
    v25(a8, v24);
    v25(a7, v24);
  }
  else
  {
    id v27 = v35[0];
    sub_22D2BB9C0();

    swift_willThrow();
    uint64_t v28 = sub_22D2BBC30();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8);
    v29(a8, v28);
    v29(a7, v28);
  }
  return v22;
}

unint64_t sub_22D278D30()
{
  unint64_t result = qword_268543698;
  if (!qword_268543698)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268543698);
  }
  return result;
}

uint64_t sub_22D278D6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_22Tm()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_22D278E40()
{
  uint64_t v1 = sub_22D2BBC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

NSObject *sub_22D278F38@<X0>(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v6 = *(void *)(sub_22D2BBC90() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t result = sub_22D274A70(a1, v2 + 16, v2 + v7, *(void **)(v2 + v8), *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_22D278FF4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22D27902C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D2791A8(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D27907C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_22D2790E4()
{
  if (!qword_2685432A8)
  {
    sub_22D030474(255, (unint64_t *)&qword_26AEC2FA8);
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685432A8);
    }
  }
}

uint64_t sub_22D27914C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D27841C(255, a2, (uint64_t (*)(uint64_t))sub_22D2790E4, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D2791A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    type metadata accessor for WebRequestResponseError(255);
    a4();
    sub_22D27858C(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    unint64_t v6 = sub_22D2BC530();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_22D279270()
{
  return sub_22D27858C(&qword_2685432C0, (void (*)(uint64_t))sub_22D2599B4);
}

uint64_t sub_22D2792A4()
{
  uint64_t v1 = sub_22D2BBC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

ValueMetadata *type metadata accessor for ClinicalSharingMedicationTrackingQuery()
{
  return &type metadata for ClinicalSharingMedicationTrackingQuery;
}

uint64_t sub_22D279360(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PBMedicationTracking(0);
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v18 = v1;
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_22D24C044(0, v6, 0);
    uint64_t v7 = v20;
    unint64_t v8 = (id *)(a1 + 48);
    do
    {
      uint64_t v9 = *(v8 - 2);
      uint64_t v10 = *(v8 - 1);
      id v11 = *v8;
      id v12 = *v8;
      id v13 = v9;
      id v14 = v10;
      sub_22D27BE48(v13, v10, v11, (uint64_t)v5);

      uint64_t v20 = v7;
      unint64_t v16 = *(void *)(v7 + 16);
      unint64_t v15 = *(void *)(v7 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_22D24C044(v15 > 1, v16 + 1, 1);
        uint64_t v7 = v20;
      }
      v8 += 3;
      *(void *)(v7 + 16) = v16 + 1;
      sub_22D27E200((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v16);
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_22D279508(uint64_t a1, void *a2)
{
  sub_22D27CFF8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27D128();
  uint64_t v50 = v8;
  uint64_t v52 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v45 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27D3DC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  uint64_t v55 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v48 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27D6A8(0, &qword_268543738, (void (*)(uint64_t))type metadata accessor for PBTypedData);
  uint64_t v57 = v13;
  uint64_t v59 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v51 = (char *)&v45 - v14;
  sub_22D27D6A8(0, &qword_268543748, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  uint64_t v56 = v15;
  uint64_t v58 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v53 = (char *)&v45 - v16;
  sub_22D2BCBD0();
  id v17 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v18 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_initWithKey_ascending_, v18, 0);

  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  sub_22CFF4B64();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_22D2BFBE0;
  *(void *)(v20 + 32) = v19;
  uint64_t v60 = v20;
  sub_22D2BCE20();
  uint64_t v21 = v60;
  id v49 = v19;
  uint64_t v22 = sub_22D271B7C((uint64_t)a2, v21, 0, 1);
  swift_bridgeObjectRelease();
  uint64_t v60 = v22;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  sub_22D27E6F8(0, (unint64_t *)&qword_268542580, (unint64_t *)&qword_268542588, &qword_268542590, 0x263F0A848);
  sub_22D27D0C0(0, &qword_2685436C0, &qword_2685436C8, 0x263F44C18, MEMORY[0x263F8D488]);
  sub_22D1FDFEC();
  swift_retain();
  id v24 = a2;
  sub_22D2BC730();
  swift_release();
  swift_release();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  *(void *)(v25 + 24) = v24;
  swift_retain();
  id v26 = v24;
  sub_22D2BC5D0();
  id v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D488];
  sub_22D27D208(0, &qword_2685436E0, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263F8D488]);
  sub_22D27D4BC(0, &qword_2685436D8, &qword_2685436E0, (uint64_t (*)(uint64_t))sub_22D27D26C);
  sub_22D27D394(&qword_2685436F8, (void (*)(uint64_t))sub_22D27CFF8);
  sub_22D27D318();
  uint64_t v28 = v46;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v28);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a1;
  *(void *)(v29 + 24) = v26;
  swift_retain();
  id v30 = v26;
  sub_22D2BC5D0();
  sub_22D27D208(0, &qword_268543710, (uint64_t (*)(uint64_t))sub_22D27D548, v27);
  sub_22D27D4BC(0, &qword_268543708, &qword_268543710, (uint64_t (*)(uint64_t))sub_22D27D548);
  sub_22D27D394(&qword_268543730, (void (*)(uint64_t))sub_22D27D128);
  sub_22D27D62C();
  long long v31 = v48;
  uint64_t v32 = v50;
  id v33 = v45;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v32);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = a1;
  *(void *)(v34 + 24) = v30;
  type metadata accessor for PBTypedData(0);
  sub_22D27D394(&qword_268543740, (void (*)(uint64_t))sub_22D27D3DC);
  swift_retain();
  id v35 = v30;
  uint64_t v36 = v51;
  uint64_t v37 = v54;
  sub_22D2BC730();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v37);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a1;
  *(void *)(v38 + 24) = v35;
  type metadata accessor for ClinicalSharingQueryOutput(0);
  swift_retain();
  id v39 = v35;
  uint64_t v40 = v53;
  uint64_t v41 = v57;
  sub_22D2BC3C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v41);
  sub_22D27D7EC();
  uint64_t v42 = v56;
  uint64_t v43 = sub_22D2BC720();

  (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v42);
  return v43;
}

uint64_t sub_22D279D80@<X0>(unint64_t *a1@<X0>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_22D0A9668(*a1);
  if (result)
  {
    *a3 = result;
  }
  else
  {
    sub_22D2BD310();
    swift_bridgeObjectRelease();
    id v6 = a2;
    id v7 = objc_msgSend(v6, sel_description);
    sub_22D2BCBD0();

    sub_22D2BCCB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22D2BD460();
    __break(1u);
  }
  return result;
}

uint64_t sub_22D279E80(uint64_t a1, uint64_t a2, void *a3)
{
  id v30 = a3;
  sub_22D27E954();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27EA84();
  uint64_t v31 = v10;
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27EB3C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = sub_22D27EB3C;
  uint64_t v32 = sub_22D27ED20;
  sub_22D27ECB0(0, &qword_268543808, (void (*)(uint64_t))sub_22D27EB3C, (void (*)(void))sub_22D27ED20);
  uint64_t v34 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v38 = a1;
  sub_22D27D0C0(0, &qword_2685436C0, &qword_2685436C8, 0x263F44C18, MEMORY[0x263F8D488]);
  sub_22D27EA00();
  sub_22D2BCD80();
  sub_22CFF49FC();
  sub_22D2BC540();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  uint64_t v22 = v30;
  *(void *)(v21 + 24) = v30;
  swift_retain();
  id v23 = v22;
  sub_22D2BC5D0();
  sub_22D27D26C();
  sub_22D27EDA0(0, &qword_2685437F0, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263EFDCF0]);
  sub_22D27D394(&qword_268543800, (void (*)(uint64_t))sub_22D27EA84);
  sub_22D27EC28();
  uint64_t v24 = v31;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v24);
  sub_22D27ED20();
  uint64_t v25 = v35;
  sub_22D2BC800();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v25);
  sub_22D27E624(&qword_268543818, &qword_268543808, (void (*)(uint64_t))v33, (void (*)(void))v32);
  uint64_t v26 = v34;
  uint64_t v27 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v26);
  return v27;
}

uint64_t sub_22D27A314(uint64_t a1, uint64_t a2, void *a3)
{
  id v30 = a3;
  sub_22D27E27C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27E3B4();
  uint64_t v31 = v10;
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27E470();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = sub_22D27E470;
  uint64_t v32 = sub_22D27E5E4;
  sub_22D27ECB0(0, &qword_268543790, (void (*)(uint64_t))sub_22D27E470, (void (*)(void))sub_22D27E5E4);
  uint64_t v34 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v38 = a1;
  sub_22D27D208(0, &qword_2685436E0, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263F8D488]);
  sub_22D27E32C();
  sub_22D2BCD80();
  sub_22CFF49FC();
  sub_22D2BC540();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  uint64_t v22 = v30;
  *(void *)(v21 + 24) = v30;
  swift_retain();
  id v23 = v22;
  sub_22D2BC5D0();
  sub_22D27D548();
  sub_22D27EDA0(0, &qword_268543778, (uint64_t (*)(uint64_t))sub_22D27D548, MEMORY[0x263EFDCF0]);
  sub_22D27D394(&qword_268543788, (void (*)(uint64_t))sub_22D27E3B4);
  sub_22D27E55C();
  uint64_t v24 = v31;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v24);
  sub_22D27E5E4();
  uint64_t v25 = v35;
  sub_22D2BC800();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v25);
  sub_22D27E624(&qword_2685437A0, &qword_268543790, (void (*)(uint64_t))v33, (void (*)(void))v32);
  uint64_t v26 = v34;
  uint64_t v27 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v26);
  return v27;
}

uint64_t sub_22D27A7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22D27D208(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBMedicationTrackings(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (uint64_t *)((char *)&v27 - v16);
  if (*(void *)(a1 + 16))
  {
    uint64_t v18 = sub_22D279360(a1);
    sub_22D2BBFE0();
    uint64_t *v17 = v18;
    sub_22D2BBFE0();
    uint64_t v19 = type metadata accessor for PBTypedData(0);
    uint64_t v20 = *(int *)(v19 + 20);
    if (qword_26853CCD0 != -1) {
      swift_once();
    }
    *(void *)(a3 + v20) = qword_26853D990;
    uint64_t v21 = sub_22D2BB6F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
    swift_retain();
    sub_22D22BDC4(5, 1, v8, a2);
    sub_22D27E0B0((uint64_t)v8);
    PBTypedData.dateRange.setter((uint64_t)v11);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v22 = swift_retain();
      *(void *)(a3 + v20) = sub_22D0040E0(v22);
      swift_release();
    }
    uint64_t v23 = *(void *)(a3 + v20);
    swift_beginAccess();
    *(void *)(v23 + 16) = 127;
    *(unsigned char *)(v23 + 24) = 1;
    sub_22D27E13C((uint64_t)v17, (uint64_t)v15, type metadata accessor for PBMedicationTrackings);
    PBTypedData.medicationTrackings.setter((uint64_t)v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a3, 0, 1, v19);
    return sub_22D27E1A4((uint64_t)v17);
  }
  else
  {
    uint64_t v25 = type metadata accessor for PBTypedData(0);
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    return v26(a3, 1, 1, v25);
  }
}

uint64_t sub_22D27AB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_22D2BBF00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *(void *)(a2 + 56);
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F44A70], v6);
  uint64_t v18 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D05C90C, (uint64_t)v17, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  if (*(void *)(v11 + 16))
  {
    sub_22D27E13C(a1, a3, type metadata accessor for PBTypedData);
    uint64_t v12 = sub_22D237C78(v11);
    swift_bridgeObjectRelease();
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a3 + *(int *)(Output + 20)) = v12;
    uint64_t v14 = (void *)(a3 + *(int *)(Output + 24));
    void *v14 = 0;
    v14[1] = 0;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a3, 0, 1, Output);
  }
  else
  {
    uint64_t v16 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
    return swift_bridgeObjectRelease();
  }
}

void sub_22D27AD84(id *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v62 = a2;
  sub_22D27D208(0, &qword_268543820, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263EFDDF8]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v61 - v8;
  sub_22D27EDA0(0, &qword_268543828, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263EFDEA0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v61 - v13;
  sub_22D27EE1C();
  uint64_t v64 = *(void *)(v15 - 8);
  uint64_t v65 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v63 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27EFB8();
  uint64_t v67 = *(void *)(v17 - 8);
  uint64_t v68 = v17;
  MEMORY[0x270FA5388](v17);
  id v66 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = *a1;
  id v20 = objc_msgSend(*a1, sel_firstOntologyCoding);
  if (!v20) {
    goto LABEL_55;
  }
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v20, sel_code);

  if (!v22) {
    goto LABEL_55;
  }
  id v61 = a3;
  uint64_t v23 = sub_22D2BCBD0();
  unint64_t v25 = v24;

  uint64_t v26 = HIBYTE(v25) & 0xF;
  uint64_t v27 = v23 & 0xFFFFFFFFFFFFLL;
  if ((v25 & 0x2000000000000000) != 0) {
    uint64_t v28 = HIBYTE(v25) & 0xF;
  }
  else {
    uint64_t v28 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (!v28)
  {
    swift_bridgeObjectRelease();
    a3 = v61;
    goto LABEL_55;
  }
  if ((v25 & 0x1000000000000000) != 0)
  {
    uint64_t v30 = (uint64_t)sub_22D27D860(v23, v25, 10);
    LOBYTE(v23) = v60;
    goto LABEL_46;
  }
  if ((v25 & 0x2000000000000000) == 0)
  {
    if ((v23 & 0x1000000000000000) != 0) {
      uint64_t v29 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v29 = (unsigned __int8 *)sub_22D2BD390();
    }
    uint64_t v30 = (uint64_t)sub_22D27D948(v29, v27, 10);
    LOBYTE(v23) = v31 & 1;
LABEL_46:
    swift_bridgeObjectRelease();
    a3 = v61;
    if ((v23 & 1) == 0)
    {
      id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A1F8]), sel_initWithRawIdentifier_, v30);
      uint64_t v42 = (void *)__swift_project_boxed_opaque_existential_1((void *)(v62 + 16), *(void *)(v62 + 40))[2];
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v42;
      *(void *)(v43 + 24) = v41;
      uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
      sub_22D27EED0(0, (unint64_t *)&qword_2685420F0, MEMORY[0x263EFDE20]);
      sub_22D27EF74(&qword_268543838, (unint64_t *)&qword_2685420F0, v44);
      id v45 = v42;
      id v46 = v41;
      uint64_t v47 = v63;
      sub_22D2BC700();
      sub_22D27D394(&qword_268543860, (void (*)(uint64_t))sub_22D27EE1C);
      uint64_t v48 = v65;
      uint64_t v49 = sub_22D2BC720();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v48);
      uint64_t v69 = v49;
      uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
      sub_22D27EED0(0, &qword_268543848, MEMORY[0x263EFDCF0]);
      sub_22D27EF74(&qword_268543850, &qword_268543848, v50);
      uint64_t v51 = sub_22D2BC720();
      swift_release();
      uint64_t v69 = v51;
      *(void *)(swift_allocObject() + 16) = v19;
      sub_22D27D26C();
      id v52 = v19;
      uint64_t v53 = v66;
      a3 = v61;
      sub_22D2BC780();
      swift_release();
      swift_release();
      sub_22D27D394(&qword_268543868, (void (*)(uint64_t))sub_22D27EFB8);
      uint64_t v54 = v68;
      uint64_t v55 = sub_22D2BC720();

      (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v54);
LABEL_56:
      *a3 = v55;
      return;
    }
LABEL_55:
    uint64_t v69 = (uint64_t)v19;
    uint64_t v70 = 0;
    sub_22D27D26C();
    id v59 = v19;
    sub_22D2BC6B0();
    sub_22CFF49FC();
    sub_22D2BC680();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_22D27F084();
    uint64_t v55 = sub_22D2BC720();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_56;
  }
  uint64_t v69 = v23;
  uint64_t v70 = v25 & 0xFFFFFFFFFFFFFFLL;
  if (v23 == 43)
  {
    if (!v26) {
      goto LABEL_60;
    }
    if (v26 == 1 || (BYTE1(v23) - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v30 = (BYTE1(v23) - 48);
    if (v26 != 2)
    {
      if ((BYTE2(v23) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v30 = 10 * (BYTE1(v23) - 48) + (BYTE2(v23) - 48);
      uint64_t v32 = v26 - 3;
      if (v32)
      {
        id v33 = (unsigned __int8 *)&v69 + 3;
        while (1)
        {
          unsigned int v34 = *v33 - 48;
          if (v34 > 9) {
            goto LABEL_33;
          }
          uint64_t v35 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            goto LABEL_33;
          }
          uint64_t v30 = v35 + v34;
          if (__OFADD__(v35, v34)) {
            goto LABEL_33;
          }
          LOBYTE(v23) = 0;
          ++v33;
          if (!--v32) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_45:
    LOBYTE(v23) = 0;
    goto LABEL_46;
  }
  if (v23 != 45)
  {
    if (!v26 || (v23 - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v30 = (v23 - 48);
    if (v26 != 1)
    {
      if ((BYTE1(v23) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v30 = 10 * (v23 - 48) + (BYTE1(v23) - 48);
      uint64_t v36 = v26 - 2;
      if (v36)
      {
        uint64_t v37 = (unsigned __int8 *)&v69 + 2;
        while (1)
        {
          unsigned int v38 = *v37 - 48;
          if (v38 > 9) {
            goto LABEL_33;
          }
          uint64_t v39 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            goto LABEL_33;
          }
          uint64_t v30 = v39 + v38;
          if (__OFADD__(v39, v38)) {
            goto LABEL_33;
          }
          LOBYTE(v23) = 0;
          ++v37;
          if (!--v36) {
            goto LABEL_46;
          }
        }
      }
    }
    goto LABEL_45;
  }
  if (v26)
  {
    if (v26 != 1 && (BYTE1(v23) - 48) <= 9u)
    {
      if (v26 == 2)
      {
        LOBYTE(v23) = 0;
        uint64_t v30 = -(uint64_t)(BYTE1(v23) - 48);
        goto LABEL_46;
      }
      if ((BYTE2(v23) - 48) <= 9u)
      {
        uint64_t v30 = -10 * (BYTE1(v23) - 48) - (BYTE2(v23) - 48);
        uint64_t v40 = v26 - 3;
        if (!v40) {
          goto LABEL_45;
        }
        uint64_t v56 = (unsigned __int8 *)&v69 + 3;
        while (1)
        {
          unsigned int v57 = *v56 - 48;
          if (v57 > 9) {
            break;
          }
          uint64_t v58 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            break;
          }
          uint64_t v30 = v58 - v57;
          if (__OFSUB__(v58, v57)) {
            break;
          }
          LOBYTE(v23) = 0;
          ++v56;
          if (!--v40) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_33:
    uint64_t v30 = 0;
    LOBYTE(v23) = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_60:
  __break(1u);
}

uint64_t sub_22D27B644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v5 = sub_22D2BCF90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27E674();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27E788();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D27E860();
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v46 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void **)a1;
  id v39 = *(id *)(a1 + 8);
  id v40 = v39;
  id v38 = v18;
  id v19 = objc_msgSend(v38, sel_semanticIdentifier);
  id v20 = objc_msgSend(v19, sel_stringValue);

  if (!v20)
  {
    sub_22D2BCBD0();
    id v20 = (id)sub_22D2BCBA0();
    swift_bridgeObjectRelease();
  }
  id v21 = objc_msgSend(self, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v20);
  id v37 = v21;

  id v22 = objc_msgSend(self, sel_medicationDoseEventType);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v22, v21);

  sub_22CFF4B00(a2 + 16, (uint64_t)v50);
  __swift_project_boxed_opaque_existential_1(v50, v50[3]);
  sub_22CFF4B64();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_22D2BFBE0;
  *(void *)(v24 + 32) = v23;
  uint64_t v49 = v24;
  sub_22D2BCE20();
  id v36 = v23;
  sub_22D090418();
  sub_22D2BCFA0();
  sub_22D27D394(&qword_26853D790, MEMORY[0x263F44AA8]);
  uint64_t v25 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = v25;
  uint64_t v48 = MEMORY[0x263F8EE78];
  sub_22D27E6F8(0, (unint64_t *)&qword_26853D768, (unint64_t *)&qword_26853D770, (unint64_t *)&qword_26853D778, 0x263F0A6B8);
  sub_22D02A7B0();
  sub_22D2BC760();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  sub_22D27D0C0(0, &qword_268543720, &qword_26853E388, 0x263F0A508, MEMORY[0x263F8D8F0]);
  sub_22D27D394(&qword_2685437B8, (void (*)(uint64_t))sub_22D27E674);
  uint64_t v26 = v42;
  sub_22D2BC780();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v26);
  uint64_t v27 = swift_allocObject();
  id v29 = v38;
  id v28 = v39;
  *(void *)(v27 + 16) = v38;
  *(void *)(v27 + 24) = v28;
  sub_22D27D548();
  id v30 = v29;
  id v31 = v40;
  uint64_t v32 = v44;
  sub_22D2BC440();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v32);
  sub_22D27D394(&qword_2685437C8, (void (*)(uint64_t))sub_22D27E860);
  uint64_t v33 = v46;
  uint64_t v34 = sub_22D2BC720();

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v33);
  *uint64_t v47 = v34;
  return result;
}

void sub_22D27BC94(unint64_t *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = sub_22D0A9674(*a1);
  if (!v3)
  {
    if (qword_26AEC1C58 == -1)
    {
LABEL_9:
      uint64_t v8 = sub_22D2BC390();
      __swift_project_value_buffer(v8, (uint64_t)qword_26AEC3C90);
      uint64_t v9 = sub_22D2BC380();
      os_log_type_t v10 = sub_22D2BD060();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl(&dword_22CFEE000, v9, v10, "[ClinicalSharingMedicationTrackingQuery] Invalid sample type for samples of HKMedicationDoseEvent", v11, 2u);
        MEMORY[0x230F7BDF0](v11, -1, -1);
      }

      goto LABEL_14;
    }
LABEL_18:
    swift_once();
    goto LABEL_9;
  }
  unint64_t v4 = v3;
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    id v7 = 0;
    goto LABEL_15;
  }
  if (!sub_22D2BD470()) {
    goto LABEL_13;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x230F7AF90](0, v4);
    goto LABEL_7;
  }
  if (!*(void *)(v5 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  id v6 = *(id *)(v4 + 32);
LABEL_7:
  id v7 = v6;
  swift_bridgeObjectRelease();
LABEL_15:
  *a2 = v7;
}

id sub_22D27BDF4@<X0>(void **a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = *a1;
  *a4 = a2;
  a4[1] = a3;
  a4[2] = v5;
  id v6 = v5;
  id v7 = a2;
  return a3;
}

uint64_t sub_22D27BE48@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v188 = a3;
  id v189 = a2;
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v191 = v6;
  uint64_t v192 = v7;
  MEMORY[0x270FA5388](v6);
  v190 = (char *)&v186 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_22D2BBC90();
  uint64_t v9 = *(void *)(v187 - 8);
  MEMORY[0x270FA5388](v187);
  uint64_t v11 = (char *)&v186 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2BBFE0();
  uint64_t v12 = *(int *)(type metadata accessor for PBMedicationTracking(0) + 20);
  if (qword_26853D248 != -1) {
    swift_once();
  }
  *(void *)(a4 + v12) = qword_2685407B0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v193 = *MEMORY[0x263F09FF8];
  uint64_t v14 = sub_22D2BCBD0();
  uint64_t v16 = v15;
  swift_retain();
  id v195 = a1;
  uint64_t v17 = sub_22D0843EC(KeyPath, v14, v16);
  unint64_t v19 = v18;
  swift_release();
  swift_bridgeObjectRelease();
  if (v19) {
    uint64_t v20 = v17;
  }
  else {
    uint64_t v20 = 0;
  }
  if (!v19) {
    unint64_t v19 = 0xE000000000000000;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v21 = swift_retain();
    *(void *)(a4 + v12) = sub_22D1AADD4(v21);
    swift_release();
  }
  uint64_t v22 = *(void *)(a4 + v12);
  swift_beginAccess();
  *(void *)(v22 + 64) = v20;
  *(void *)(v22 + 72) = v19;
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = sub_22D2BCBD0();
  uint64_t v26 = sub_22D0843EC(v23, v24, v25);
  unint64_t v28 = v27;
  swift_release();
  swift_bridgeObjectRelease();
  if (v28) {
    uint64_t v29 = v26;
  }
  else {
    uint64_t v29 = 0;
  }
  if (!v28) {
    unint64_t v28 = 0xE000000000000000;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v30 = swift_retain();
    *(void *)(a4 + v12) = sub_22D1AADD4(v30);
    swift_release();
  }
  uint64_t v31 = *(void *)(a4 + v12);
  swift_beginAccess();
  *(void *)(v31 + 32) = v29;
  *(void *)(v31 + 40) = v28;
  swift_bridgeObjectRelease();
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = sub_22D2BCBD0();
  id v34 = v195;
  uint64_t v36 = sub_22D0843EC(v32, v33, v35);
  unint64_t v38 = v37;
  swift_release();
  swift_bridgeObjectRelease();
  if (v38) {
    uint64_t v39 = v36;
  }
  else {
    uint64_t v39 = 0;
  }
  if (!v38) {
    unint64_t v38 = 0xE000000000000000;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v40 = swift_retain();
    *(void *)(a4 + v12) = sub_22D1AADD4(v40);
    swift_release();
  }
  uint64_t v41 = *(void *)(a4 + v12);
  swift_beginAccess();
  *(void *)(v41 + 48) = v39;
  *(void *)(v41 + 56) = v38;
  swift_bridgeObjectRelease();
  id v42 = objc_msgSend(v34, sel_semanticIdentifier);
  id v43 = objc_msgSend(v42, sel_stringValue);
  uint64_t v44 = sub_22D2BCBD0();
  uint64_t v194 = v12;
  uint64_t v46 = v45;

  uint64_t v204 = v44;
  uint64_t v205 = v46;
  uint64_t v202 = sub_22D2BCBD0();
  uint64_t v203 = v47;
  uint64_t v200 = 124;
  unint64_t v201 = 0xE100000000000000;
  sub_22D06014C();
  uint64_t v48 = sub_22D2BD240();
  uint64_t v50 = v49;

  uint64_t v51 = v194;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v52 = swift_retain();
    *(void *)(a4 + v51) = sub_22D1AADD4(v52);
    swift_release();
  }
  uint64_t v53 = *(void *)(a4 + v51);
  swift_beginAccess();
  *(void *)(v53 + 16) = v48;
  *(void *)(v53 + 24) = v50;
  swift_bridgeObjectRelease();
  id v54 = v195;
  id v55 = objc_msgSend(v195, sel_UUID);
  sub_22D2BBC70();

  uint64_t v56 = sub_22D2BBC40();
  uint64_t v58 = v57;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v187);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v59 = swift_retain();
    *(void *)(a4 + v51) = sub_22D1AADD4(v59);
    swift_release();
  }
  uint64_t v60 = *(void *)(a4 + v51);
  swift_beginAccess();
  *(void *)(v60 + 240) = v56;
  *(void *)(v60 + 248) = v58;
  swift_bridgeObjectRelease();
  id v61 = objc_msgSend(v54, sel_freeTextMedicationStrengthQuantity);
  if (v61)
  {
    uint64_t v62 = v61;
    objc_msgSend(v61, sel__value);
    uint64_t v63 = sub_22D2BCF10();
    uint64_t v65 = v64;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v66 = swift_retain();
      *(void *)(a4 + v51) = sub_22D1AADD4(v66);
      swift_release();
    }
    uint64_t v67 = *(void *)(a4 + v51);
    swift_beginAccess();
    *(void *)(v67 + 112) = v63;
    *(void *)(v67 + 120) = v65;
    swift_bridgeObjectRelease();
    id v68 = objc_msgSend(v62, sel__unit);
    id v69 = objc_msgSend(v68, sel_unitString);

    uint64_t v70 = sub_22D2BCBD0();
    uint64_t v72 = v71;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v73 = swift_retain();
      *(void *)(a4 + v51) = sub_22D1AADD4(v73);
      swift_release();
    }
    uint64_t v74 = *(void *)(a4 + v51);
    swift_beginAccess();
    *(void *)(v74 + 304) = v70;
    *(void *)(v74 + 312) = v72;

    swift_bridgeObjectRelease();
  }
  uint64_t v75 = swift_getKeyPath();
  uint64_t v76 = sub_22D2BCBD0();
  uint64_t v78 = sub_22D0843EC(v75, v76, v77);
  unint64_t v80 = v79;
  swift_release();
  swift_bridgeObjectRelease();
  if (v80) {
    uint64_t v81 = v78;
  }
  else {
    uint64_t v81 = 0;
  }
  unint64_t v82 = 0xE000000000000000;
  if (!v80) {
    unint64_t v80 = 0xE000000000000000;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v83 = swift_retain();
    *(void *)(a4 + v51) = sub_22D1AADD4(v83);
    swift_release();
  }
  uint64_t v84 = *(void *)(a4 + v51);
  swift_beginAccess();
  *(void *)(v84 + 128) = v81;
  *(void *)(v84 + 136) = v80;
  swift_bridgeObjectRelease();
  uint64_t v85 = swift_getKeyPath();
  uint64_t v86 = sub_22D0843EC(v85, 0x53552D6E65, 0xE500000000000000);
  unint64_t v88 = v87;
  swift_release();
  if (v88) {
    uint64_t v89 = v86;
  }
  else {
    uint64_t v89 = 0;
  }
  if (v88) {
    unint64_t v82 = v88;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v90 = swift_retain();
    *(void *)(a4 + v51) = sub_22D1AADD4(v90);
    swift_release();
  }
  uint64_t v91 = *(void *)(a4 + v51);
  swift_beginAccess();
  *(void *)(v91 + 144) = v89;
  *(void *)(v91 + 152) = v82;
  swift_bridgeObjectRelease();
  uint64_t v92 = swift_getKeyPath();
  uint64_t v93 = sub_22D0843EC(v92, 0x53552D6E65, 0xE500000000000000);
  unint64_t v95 = v94;
  swift_release();
  if (v95) {
    uint64_t v96 = v93;
  }
  else {
    uint64_t v96 = 0;
  }
  if (!v95) {
    unint64_t v95 = 0xE000000000000000;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v97 = swift_retain();
    *(void *)(a4 + v51) = sub_22D1AADD4(v97);
    swift_release();
  }
  uint64_t v98 = *(void *)(a4 + v51);
  swift_beginAccess();
  *(void *)(v98 + 160) = v96;
  *(void *)(v98 + 168) = v95;
  swift_bridgeObjectRelease();
  id v99 = objc_msgSend(v54, sel_unlocalizedQuantifiedUnitStrengthPreferredDisplayString);
  if (v99)
  {
    uint64_t v100 = v99;
    uint64_t v101 = sub_22D2BCBD0();
    unint64_t v103 = v102;
  }
  else
  {
    uint64_t v101 = 0;
    unint64_t v103 = 0xE000000000000000;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v104 = swift_retain();
    *(void *)(a4 + v51) = sub_22D1AADD4(v104);
    swift_release();
  }
  uint64_t v105 = *(void *)(a4 + v51);
  char v106 = 1;
  swift_beginAccess();
  *(void *)(v105 + 176) = v101;
  *(void *)(v105 + 184) = v103;
  swift_bridgeObjectRelease();
  id v107 = v195;
  id v108 = objc_msgSend(v195, sel_freeTextMedicationFormCode);
  if (v108)
  {
    uint64_t v109 = v108;
    id v110 = objc_msgSend(v108, sel_longLongValue);

    sub_22D29A590((uint64_t)v110, (uint64_t)&v198);
    uint64_t v111 = v198;
    char v106 = v199;
  }
  else
  {
    uint64_t v111 = 0;
  }
  uint64_t v112 = v194;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v113 = swift_retain();
    *(void *)(a4 + v112) = sub_22D1AADD4(v113);
    swift_release();
  }
  uint64_t v114 = *(void *)(a4 + v112);
  swift_beginAccess();
  *(void *)(v114 + 96) = v111;
  *(unsigned char *)(v114 + 104) = v106;
  id v115 = objc_msgSend(v107, sel_freeTextMedicationName);
  if (v115)
  {
    char v116 = v115;
    uint64_t v117 = sub_22D2BCBD0();
    unint64_t v119 = v118;
  }
  else
  {
    uint64_t v117 = 0;
    unint64_t v119 = 0xE000000000000000;
  }
  uint64_t v120 = v194;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v121 = swift_retain();
    *(void *)(a4 + v120) = sub_22D1AADD4(v121);
    swift_release();
  }
  uint64_t v122 = *(void *)(a4 + v120);
  swift_beginAccess();
  *(void *)(v122 + 272) = v117;
  *(void *)(v122 + 280) = v119;
  swift_bridgeObjectRelease();
  id v123 = objc_msgSend(v195, sel_creationDate);
  unint64_t v124 = v190;
  sub_22D2BBC00();

  if (qword_26853D3D0 != -1) {
    swift_once();
  }
  unint64_t v125 = (void *)qword_268568488;
  id v126 = (void *)sub_22D2BBBC0();
  id v127 = objc_msgSend(v125, sel_stringFromDate_, v126);

  uint64_t v128 = sub_22D2BCBD0();
  uint64_t v130 = v129;

  uint64_t v131 = *(void (**)(char *, uint64_t))(v192 + 8);
  v192 += 8;
  v131(v124, v191);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v132 = swift_retain();
    *(void *)(a4 + v120) = sub_22D1AADD4(v132);
    swift_release();
  }
  uint64_t v133 = *(void *)(a4 + v120);
  swift_beginAccess();
  *(void *)(v133 + 192) = v128;
  *(void *)(v133 + 200) = v130;
  swift_bridgeObjectRelease();
  if (v188)
  {
    id v134 = v188;
    id v135 = objc_msgSend(v134, sel_startDate);
    id v136 = v190;
    sub_22D2BBC00();

    uint64_t v137 = (void *)qword_268568488;
    uint64_t v138 = (void *)sub_22D2BBBC0();
    id v139 = objc_msgSend(v137, sel_stringFromDate_, v138);

    uint64_t v140 = sub_22D2BCBD0();
    uint64_t v142 = v141;

    v131(v136, v191);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBMedicationTracking._StorageClass();
      swift_allocObject();
      uint64_t v143 = swift_retain();
      *(void *)(a4 + v120) = sub_22D1AADD4(v143);
      swift_release();
    }
    uint64_t v144 = *(void *)(a4 + v120);
    swift_beginAccess();
    *(void *)(v144 + 208) = v140;
    *(void *)(v144 + 216) = v142;

    swift_bridgeObjectRelease();
  }
  if (!v189) {
    goto LABEL_104;
  }
  id v145 = v189;
  id v146 = objc_msgSend(v145, sel_RxNormCoding);
  if (v146
    && (unint64_t v147 = v146, v148 = objc_msgSend(v146, sel_code), v147, v148))
  {
    uint64_t v149 = sub_22D2BCBD0();
    unint64_t v151 = v150;
  }
  else
  {
    uint64_t v149 = 0;
    unint64_t v151 = 0xE000000000000000;
  }
  uint64_t v152 = v194;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v153 = swift_retain();
    *(void *)(a4 + v152) = sub_22D1AADD4(v153);
    swift_release();
  }
  uint64_t v154 = *(void *)(a4 + v152);
  swift_beginAccess();
  *(void *)(v154 + 80) = v149;
  *(void *)(v154 + 88) = v151;
  swift_bridgeObjectRelease();
  uint64_t v155 = sub_22D2966AC();
  uint64_t v156 = v155;
  if (v155)
  {
    id v157 = objc_msgSend(v155, sel_RxNormCoding);

    if (v157)
    {
      id v158 = objc_msgSend(v157, sel_code);

      if (v158)
      {
        uint64_t v156 = (void *)sub_22D2BCBD0();
        unint64_t v160 = v159;

        goto LABEL_91;
      }
    }
    uint64_t v156 = 0;
  }
  unint64_t v160 = 0xE000000000000000;
LABEL_91:
  uint64_t v161 = v194;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v162 = swift_retain();
    *(void *)(a4 + v161) = sub_22D1AADD4(v162);
    swift_release();
  }
  uint64_t v163 = *(void *)(a4 + v161);
  swift_beginAccess();
  *(void *)(v163 + 224) = v156;
  *(void *)(v163 + 232) = v160;
  swift_bridgeObjectRelease();
  sub_22D2967C0((id)0x3F5);
  if (!v164)
  {

    goto LABEL_104;
  }
  unint64_t v165 = v164;
  uint64_t v166 = v164 & 0xFFFFFFFFFFFFFF8;
  if (v164 >> 62)
  {
    uint64_t result = sub_22D2BD470();
    if (result) {
      goto LABEL_96;
    }
  }
  else
  {
    uint64_t result = *(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result)
    {
LABEL_96:
      if ((v165 & 0xC000000000000001) != 0)
      {
        id v168 = (id)MEMORY[0x230F7AF90](0, v165);
      }
      else
      {
        if (!*(void *)(v166 + 16))
        {
          __break(1u);
          return result;
        }
        id v168 = *(id *)(v165 + 32);
      }
      v169 = v168;
      swift_bridgeObjectRelease();
      id v170 = objc_msgSend(v169, sel_identifier);
      id v171 = objc_msgSend(v170, sel_rawIdentifier);

      id v196 = v171;
      uint64_t v172 = sub_22D2BD630();
      uint64_t v174 = v173;
      uint64_t v175 = v194;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for PBMedicationTracking._StorageClass();
        swift_allocObject();
        uint64_t v176 = swift_retain();
        *(void *)(a4 + v175) = sub_22D1AADD4(v176);
        swift_release();
      }
      uint64_t v177 = *(void *)(a4 + v175);
      swift_beginAccess();
      *(void *)(v177 + 288) = v172;
      *(void *)(v177 + 296) = v174;
    }
  }

  swift_bridgeObjectRelease();
LABEL_104:
  id v178 = objc_msgSend(v195, sel_freeTextMedicationLoggingUnitCode);
  if (v178)
  {
    uint64_t v179 = v178;
    id v180 = objc_msgSend(v178, sel_longLongValue);

    sub_22D222200((uint64_t)v180, (uint64_t)&v196);
    id v181 = v196;
    char v182 = v197;
  }
  else
  {
    id v181 = 0;
    char v182 = 1;
  }
  uint64_t v183 = v194;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBMedicationTracking._StorageClass();
    swift_allocObject();
    uint64_t v184 = swift_retain();
    *(void *)(a4 + v183) = sub_22D1AADD4(v184);
    swift_release();
  }
  uint64_t v185 = *(void *)(a4 + v183);
  uint64_t result = swift_beginAccess();
  *(void *)(v185 + 256) = v181;
  *(unsigned char *)(v185 + 264) = v182;
  return result;
}

uint64_t sub_22D27CFF0()
{
  return sub_22D279508(*(void *)v0, *(void **)(v0 + 8));
}

void sub_22D27CFF8()
{
  if (!qword_2685436B8)
  {
    sub_22D27E6F8(255, (unint64_t *)&qword_268542580, (unint64_t *)&qword_268542588, &qword_268542590, 0x263F0A848);
    sub_22D27D0C0(255, &qword_2685436C0, &qword_2685436C8, 0x263F44C18, MEMORY[0x263F8D488]);
    sub_22D1FDFEC();
    unint64_t v0 = sub_22D2BC3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685436B8);
    }
  }
}

void sub_22D27D0C0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_22D030474(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_22D27D128()
{
  if (!qword_2685436D0)
  {
    sub_22D27D4BC(255, &qword_2685436D8, &qword_2685436E0, (uint64_t (*)(uint64_t))sub_22D27D26C);
    sub_22D27CFF8();
    sub_22D27D318();
    sub_22D27D394(&qword_2685436F8, (void (*)(uint64_t))sub_22D27CFF8);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685436D0);
    }
  }
}

void sub_22D27D208(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D27D26C()
{
  if (!qword_2685436E8)
  {
    sub_22D030474(255, &qword_2685436C8);
    sub_22D27D0C0(255, (unint64_t *)&qword_2685420F8, (unint64_t *)&qword_26853ED30, 0x263F0A1F0, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2685436E8);
    }
  }
}

unint64_t sub_22D27D318()
{
  unint64_t result = qword_2685436F0;
  if (!qword_2685436F0)
  {
    sub_22D27D4BC(255, &qword_2685436D8, &qword_2685436E0, (uint64_t (*)(uint64_t))sub_22D27D26C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685436F0);
  }
  return result;
}

uint64_t sub_22D27D394(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D27D3DC()
{
  if (!qword_268543700)
  {
    sub_22D27D4BC(255, &qword_268543708, &qword_268543710, (uint64_t (*)(uint64_t))sub_22D27D548);
    sub_22D27D128();
    sub_22D27D62C();
    sub_22D27D394(&qword_268543730, (void (*)(uint64_t))sub_22D27D128);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543700);
    }
  }
}

void sub_22D27D4BC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_22D27D208(255, a3, a4, MEMORY[0x263F8D488]);
    sub_22CFF49FC();
    unint64_t v5 = sub_22D2BC5E0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_22D27D548()
{
  if (!qword_268543718)
  {
    sub_22D030474(255, &qword_2685436C8);
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_22D27D0C0(255, (unint64_t *)&qword_2685420F8, (unint64_t *)&qword_26853ED30, 0x263F0A1F0, MEMORY[0x263F8D8F0]);
    sub_22D27D0C0(255, &qword_268543720, &qword_26853E388, 0x263F0A508, v0);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v2) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268543718);
    }
  }
}

unint64_t sub_22D27D62C()
{
  unint64_t result = qword_268543728;
  if (!qword_268543728)
  {
    sub_22D27D4BC(255, &qword_268543708, &qword_268543710, (uint64_t (*)(uint64_t))sub_22D27D548);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543728);
  }
  return result;
}

void sub_22D27D6A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_22D27D3DC();
    a3(255);
    sub_22D27D394(&qword_268543740, (void (*)(uint64_t))sub_22D27D3DC);
    unint64_t v5 = sub_22D2BC3D0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_22D27D758@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D279D80(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_22D27D764@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D27D798(a1, (uint64_t (*)(void, void, void))sub_22D279E80, a2);
}

uint64_t sub_22D27D780@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D27D798(a1, (uint64_t (*)(void, void, void))sub_22D27A314, a2);
}

uint64_t sub_22D27D798@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1, *(void *)(v3 + 16), *(void *)(v3 + 24));
  *a3 = result;
  return result;
}

uint64_t sub_22D27D7D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D27A7AC(*a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_22D27D7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D27AB60(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_22D27D7EC()
{
  unint64_t result = qword_268543750;
  if (!qword_268543750)
  {
    sub_22D27D6A8(255, &qword_268543748, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543750);
  }
  return result;
}

unsigned __int8 *sub_22D27D860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_22D2BCD40();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_22D27DBC4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_22D2BD390();
  }
LABEL_7:
  uint64_t v11 = sub_22D27D948(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_22D27D948(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_22D27DBC4()
{
  unint64_t v0 = sub_22D2BCD50();
  uint64_t v4 = sub_22D27DC44(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22D27DC44(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_22D27DD9C(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_22D0A51C4(v9, 0);
      unint64_t v12 = sub_22D27DE9C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_22D2BD390();
LABEL_4:
        JUMPOUT(0x230F7A8C0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x230F7A8C0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x230F7A8C0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_22D27DD9C(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_22D0A524C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_22D0A524C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_22D27DE9C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_22D0A524C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_22D2BCD00();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_22D2BD390();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_22D0A524C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_22D2BCCD0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_22D27E0B0(uint64_t a1)
{
  sub_22D27D208(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D27E13C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D27E1A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PBMedicationTrackings(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D27E200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBMedicationTracking(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22D27E27C()
{
  if (!qword_268543758)
  {
    sub_22D27D208(255, &qword_2685436E0, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263F8D488]);
    sub_22D27E32C();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543758);
    }
  }
}

unint64_t sub_22D27E32C()
{
  unint64_t result = qword_268543760;
  if (!qword_268543760)
  {
    sub_22D27D208(255, &qword_2685436E0, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543760);
  }
  return result;
}

void sub_22D27E3B4()
{
  if (!qword_268543768)
  {
    sub_22D27D208(255, &qword_2685436E0, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263F8D488]);
    sub_22CFF49FC();
    sub_22D27E32C();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543768);
    }
  }
}

void sub_22D27E470()
{
  if (!qword_268543770)
  {
    sub_22D27EDA0(255, &qword_268543778, (uint64_t (*)(uint64_t))sub_22D27D548, MEMORY[0x263EFDCF0]);
    sub_22D27E3B4();
    sub_22D27E55C();
    sub_22D27D394(&qword_268543788, (void (*)(uint64_t))sub_22D27E3B4);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543770);
    }
  }
}

unint64_t sub_22D27E55C()
{
  unint64_t result = qword_268543780;
  if (!qword_268543780)
  {
    sub_22D27EDA0(255, &qword_268543778, (uint64_t (*)(uint64_t))sub_22D27D548, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543780);
  }
  return result;
}

uint64_t sub_22D27E5E4()
{
  return sub_22D27D394(&qword_268543798, (void (*)(uint64_t))sub_22D27E470);
}

uint64_t sub_22D27E61C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D27B644(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_22D27E624(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D27ECB0(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D27E674()
{
  if (!qword_2685437A8)
  {
    sub_22D27E6F8(255, (unint64_t *)&qword_26853D768, (unint64_t *)&qword_26853D770, (unint64_t *)&qword_26853D778, 0x263F0A6B8);
    sub_22D02A7B0();
    unint64_t v0 = sub_22D2BC410();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685437A8);
    }
  }
}

void sub_22D27E6F8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_22D27D0C0(255, a3, a4, a5, MEMORY[0x263F8D488]);
    sub_22CFF49FC();
    unint64_t v6 = sub_22D2BC5E0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_22D27E788()
{
  if (!qword_2685437B0)
  {
    sub_22D27E674();
    sub_22D27D0C0(255, &qword_268543720, &qword_26853E388, 0x263F0A508, MEMORY[0x263F8D8F0]);
    sub_22D27D394(&qword_2685437B8, (void (*)(uint64_t))sub_22D27E674);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685437B0);
    }
  }
}

void sub_22D27E860()
{
  if (!qword_2685437C0)
  {
    sub_22D27E674();
    sub_22D27D548();
    sub_22D27D394(&qword_2685437B8, (void (*)(uint64_t))sub_22D27E674);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685437C0);
    }
  }
}

uint64_t sub_22D27E90C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_22D27E94C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_22D27BDF4(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

void sub_22D27E954()
{
  if (!qword_2685437D0)
  {
    sub_22D27D0C0(255, &qword_2685436C0, &qword_2685436C8, 0x263F44C18, MEMORY[0x263F8D488]);
    sub_22D27EA00();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685437D0);
    }
  }
}

unint64_t sub_22D27EA00()
{
  unint64_t result = qword_2685437D8;
  if (!qword_2685437D8)
  {
    sub_22D27D0C0(255, &qword_2685436C0, &qword_2685436C8, 0x263F44C18, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685437D8);
  }
  return result;
}

void sub_22D27EA84()
{
  if (!qword_2685437E0)
  {
    sub_22D27D0C0(255, &qword_2685436C0, &qword_2685436C8, 0x263F44C18, MEMORY[0x263F8D488]);
    sub_22CFF49FC();
    sub_22D27EA00();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685437E0);
    }
  }
}

void sub_22D27EB3C()
{
  if (!qword_2685437E8)
  {
    sub_22D27EDA0(255, &qword_2685437F0, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263EFDCF0]);
    sub_22D27EA84();
    sub_22D27EC28();
    sub_22D27D394(&qword_268543800, (void (*)(uint64_t))sub_22D27EA84);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685437E8);
    }
  }
}

unint64_t sub_22D27EC28()
{
  unint64_t result = qword_2685437F8;
  if (!qword_2685437F8)
  {
    sub_22D27EDA0(255, &qword_2685437F0, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685437F8);
  }
  return result;
}

void sub_22D27ECB0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_22D2BC510();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_22D27ED20()
{
  return sub_22D27D394(&qword_268543810, (void (*)(uint64_t))sub_22D27EB3C);
}

uint64_t objectdestroyTm_14()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D27ED98(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_22D27AD84(a1, *(void *)(v2 + 16), a2);
}

void sub_22D27EDA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_22CFF49FC();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_22D27EE1C()
{
  if (!qword_268543830)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_22D27EED0(255, (unint64_t *)&qword_2685420F0, MEMORY[0x263EFDE20]);
    sub_22D27EF74(&qword_268543838, (unint64_t *)&qword_2685420F0, v0);
    unint64_t v1 = sub_22D2BC710();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268543830);
    }
  }
}

void sub_22D27EED0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_22D27D0C0(255, (unint64_t *)&qword_2685420F8, (unint64_t *)&qword_26853ED30, 0x263F0A1F0, MEMORY[0x263F8D8F0]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_22CFF49FC();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_22D27EF74(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D27EED0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D27EFB8()
{
  if (!qword_268543840)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D27EED0(255, &qword_268543848, MEMORY[0x263EFDCF0]);
    sub_22D27D26C();
    sub_22D27EF74(&qword_268543850, &qword_268543848, v0);
    unint64_t v1 = sub_22D2BC450();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268543840);
    }
  }
}

unint64_t sub_22D27F084()
{
  unint64_t result = qword_268543858;
  if (!qword_268543858)
  {
    sub_22D27EDA0(255, &qword_268543828, (uint64_t (*)(uint64_t))sub_22D27D26C, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543858);
  }
  return result;
}

uint64_t sub_22D27F10C@<X0>(uint64_t *a1@<X8>)
{
  return sub_22D1DAAE4(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_22D27F114()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_22D27F14C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id v6 = *(id *)(v2 + 16);
  unint64_t v3 = *a1;
  *a2 = v6;
  a2[1] = v3;
  id v4 = v3;
  return v6;
}

uint64_t sub_22D27F194@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_22CFF9E78();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v15 - v8;
  if ((a1 & 1) == 0)
  {
    sub_22D2BBA90();
    uint64_t v10 = sub_22D2BBAA0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if (result != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v9, v10);
    }
    __break(1u);
    goto LABEL_8;
  }
  sub_22D2BBA90();
  uint64_t v13 = sub_22D2BBAA0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v7, v13);
}

uint64_t sub_22D27F368(char *a1, char *a2)
{
  return sub_22D0B9118(*a1, *a2);
}

uint64_t sub_22D27F374()
{
  return sub_22D2BD760();
}

uint64_t sub_22D27F3EC()
{
  sub_22D2BCC70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D27F450()
{
  return sub_22D2BD760();
}

uint64_t sub_22D27F4C4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_22D2BD4E0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_22D27F524(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1685025392;
  if (*v1) {
    uint64_t v2 = 0x7972726163;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

ValueMetadata *type metadata accessor for CHRConfigCatalogDownload()
{
  return &type metadata for CHRConfigCatalogDownload;
}

unsigned char *storeEnumTagSinglePayload for CHRConfigCatalogDownload.Environment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D27F634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CHRConfigCatalogDownload.Environment()
{
  return &type metadata for CHRConfigCatalogDownload.Environment;
}

unint64_t sub_22D27F670()
{
  unint64_t result = qword_268543870;
  if (!qword_268543870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543870);
  }
  return result;
}

uint64_t VHRDirectory.v.getter()
{
  return *(void *)v0;
}

uint64_t VHRDirectory.v.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*VHRDirectory.v.modify())()
{
  return nullsub_1;
}

uint64_t VHRDirectory.issuers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D27F6FC()
{
  if (*v0) {
    return 0x73726575737369;
  }
  else {
    return 118;
  }
}

uint64_t sub_22D27F72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22D27FFCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22D27F754(uint64_t a1)
{
  unint64_t v2 = sub_22D27F9A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D27F790(uint64_t a1)
{
  unint64_t v2 = sub_22D27F9A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VHRDirectory.encode(to:)(void *a1)
{
  sub_22D27FC5C(0, &qword_268543878, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v10 - v7;
  v10[0] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D27F9A4();
  sub_22D2BD7B0();
  char v12 = 0;
  sub_22D2BD5E0();
  if (!v2)
  {
    v10[1] = v10[0];
    char v11 = 1;
    sub_22D27F9F8();
    sub_22D27FCC0(&qword_268543890, &qword_268543898);
    sub_22D2BD5F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_22D27F9A4()
{
  unint64_t result = qword_268543880;
  if (!qword_268543880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543880);
  }
  return result;
}

void sub_22D27F9F8()
{
  if (!qword_268543888)
  {
    type metadata accessor for VHRDirectoryIssuer();
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543888);
    }
  }
}

uint64_t VHRDirectory.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_22D27FC5C(0, &qword_2685438A0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D27F9A4();
  sub_22D2BD7A0();
  if (!v2)
  {
    char v15 = 0;
    uint64_t v10 = sub_22D2BD550();
    sub_22D27F9F8();
    char v14 = 1;
    sub_22D27FCC0(&qword_2685438A8, &qword_2685438B0);
    sub_22D2BD560();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v12 = v13[1];
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_22D27FC5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_22D27F9A4();
    unint64_t v7 = a3(a1, &type metadata for VHRDirectory.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D27FCC0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D27F9F8();
    sub_22D27FD3C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D27FD3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for VHRDirectoryIssuer();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D27FD80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return VHRDirectory.init(from:)(a1, a2);
}

uint64_t sub_22D27FD98(void *a1)
{
  return VHRDirectory.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for VHRDirectory()
{
  return &type metadata for VHRDirectory;
}

unsigned char *storeEnumTagSinglePayload for VHRDirectory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D27FE8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VHRDirectory.CodingKeys()
{
  return &type metadata for VHRDirectory.CodingKeys;
}

unint64_t sub_22D27FEC8()
{
  unint64_t result = qword_2685438B8;
  if (!qword_2685438B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685438B8);
  }
  return result;
}

unint64_t sub_22D27FF20()
{
  unint64_t result = qword_2685438C0;
  if (!qword_2685438C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685438C0);
  }
  return result;
}

unint64_t sub_22D27FF78()
{
  unint64_t result = qword_2685438C8;
  if (!qword_2685438C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2685438C8);
  }
  return result;
}

uint64_t sub_22D27FFCC(uint64_t a1, uint64_t a2)
{
  if (a1 == 118 && a2 == 0xE100000000000000 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726575737369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22D2800A8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  type metadata accessor for PBHKMedicationScheduleIntervalData.HKReminderWeekdayOptions(0);
  *(_DWORD *)a2 = 0;
  *(_DWORD *)(a2 + 3) = 0;
  uint64_t result = sub_22D2BBFE0();
  if (a1)
  {
    *(unsigned char *)(a2 + 1) = 1;
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  *(unsigned char *)(a2 + 2) = 1;
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  *(unsigned char *)(a2 + 3) = 1;
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  *(unsigned char *)(a2 + 4) = 1;
  if ((a1 & 0x10) == 0)
  {
LABEL_6:
    if ((a1 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  *(unsigned char *)(a2 + 5) = 1;
  if ((a1 & 0x20) == 0)
  {
LABEL_7:
    if ((a1 & 0x40) == 0) {
      return result;
    }
    goto LABEL_8;
  }
LABEL_15:
  *(unsigned char *)(a2 + 6) = 1;
  if ((a1 & 0x40) == 0) {
    return result;
  }
LABEL_8:
  *(unsigned char *)a2 = 1;
  return result;
}

uint64_t sub_22D280158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBAA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_22D2BD310();
  swift_bridgeObjectRelease();
  uint64_t v11 = 60;
  unint64_t v12 = 0xE100000000000000;
  uint64_t v10 = a1;
  swift_getMetatypeMetadata();
  sub_22D2BCC30();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v10, a1, a2);
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  sub_22D282E84((unint64_t *)&qword_26853D898, MEMORY[0x263F06EA8]);
  sub_22D2BD630();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_22D2BCCB0();
  return v11;
}

uint64_t sub_22D280470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBAA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_22D2BD310();
  uint64_t v13 = v11;
  unint64_t v14 = v12;
  sub_22D2BCCB0();
  uint64_t v11 = a1;
  swift_getMetatypeMetadata();
  sub_22D2BCC30();
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v11, a1, a2);
  sub_22D2BCCB0();
  swift_bridgeObjectRelease();
  sub_22D2BCCB0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  uint64_t v8 = (void *)sub_22D2BBA10();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v9 = (id)HKSensitiveLogItem();

  sub_22D2BD260();
  swift_unknownObjectRelease();
  sub_22D2BD430();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  sub_22D2BCCB0();
  return v13;
}

Swift::Void __swiftcall WebRequest.add(header:)(HealthRecordsDaemon::HTTPHeader header)
{
  uint64_t countAndFlagsBits = header.value._countAndFlagsBits;
  object = header.name._object;
  uint64_t v4 = *(void *)header.name._countAndFlagsBits;
  uint64_t v3 = *(void *)(header.name._countAndFlagsBits + 8);
  uint64_t v6 = *(void *)(header.name._countAndFlagsBits + 16);
  uint64_t v5 = *(void *)(header.name._countAndFlagsBits + 24);
  uint64_t v7 = (*(uint64_t (**)(void *, uint64_t))(header.value._countAndFlagsBits + 16))(header.name._object, header.value._countAndFlagsBits);
  swift_bridgeObjectRelease();
  if (v7)
  {
    id v9 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, void *, uint64_t))(countAndFlagsBits + 32))(v18, object, countAndFlagsBits);
    uint64_t v10 = *v8;
    if (*v8)
    {
      uint64_t v11 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      void *v11 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v10 = sub_22D2814B8(0, v10[2] + 1, 1, v10, &qword_26853EE60);
        void *v11 = v10;
      }
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        uint64_t v10 = sub_22D2814B8((void *)(v13 > 1), v14 + 1, 1, v10, &qword_26853EE60);
        void *v11 = v10;
      }
      void v10[2] = v14 + 1;
      char v15 = &v10[4 * v14];
      v15[4] = v4;
      v15[5] = v3;
      v15[6] = v6;
      v15[7] = v5;
      v9(v18, 0);
    }
    else
    {
      v9(v18, 0);
    }
  }
  else
  {
    sub_22D02D2A4(0, &qword_26853EE60);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_22D2BFF40;
    *(void *)(v16 + 32) = v4;
    *(void *)(v16 + 40) = v3;
    *(void *)(v16 + 48) = v6;
    *(void *)(v16 + 56) = v5;
    unint64_t v17 = *(void (**)(uint64_t, void *, uint64_t))(countAndFlagsBits + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v16, object, countAndFlagsBits);
  }
}

Swift::Void __swiftcall WebRequest.removeHeader(name:)(Swift::String name)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  object = name._object;
  uint64_t countAndFlagsBits = name._countAndFlagsBits;
  uint64_t v7 = (*(uint64_t (**)())(v2 + 16))();
  if (v7)
  {
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_22D282BB8(v8, countAndFlagsBits, (uint64_t)object);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24);
  v10(v9, v4, v3);
}

uint64_t WebRequest.urlRequest(attribution:timeoutInterval:cachePolicy:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = sub_22D2BBAA0();
  MEMORY[0x270FA5388](v11 - 8);
  (*(void (**)(uint64_t, uint64_t))(a7 + 40))(a6, a7);
  sub_22D2BB560();
  sub_22D2BB530();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a7 + 8))(&v15, a6, a7);
  sub_22D2BB520();
  (*(void (**)(uint64_t, uint64_t))(a7 + 48))(a6, a7);
  sub_22D2BB590();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 16))(a6, a7);
  if (result)
  {
    uint64_t v13 = *(void *)(result + 16);
    if (v13)
    {
      uint64_t v14 = result + 56;
      do
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_22D2BB580();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 += 32;
        --v13;
      }
      while (v13);
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  if ((a3 & 1) == 0) {
    uint64_t result = sub_22D2BB550();
  }
  if ((a5 & 1) == 0) {
    return sub_22D2BB540();
  }
  return result;
}

uint64_t WebRequestError.errorDescription.getter()
{
  uint64_t v1 = sub_22D2BB790();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22D2BBAA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WebRequestError();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D282DD8(v0, (uint64_t)v11);
  uint64_t v12 = 0x2065736162206F4ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      strcpy((char *)v14, "Invalid URL: ");
      HIWORD(v14[1]) = -4864;
      sub_22D2BCCB0();
      goto LABEL_4;
    case 2u:
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      v14[0] = 0xD000000000000012;
      v14[1] = 0x800000022D2DE8B0;
      sub_22D282E84((unint64_t *)&qword_26853D898, MEMORY[0x263F06EA8]);
      sub_22D2BD630();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      uint64_t v12 = v14[0];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      break;
    case 3u:
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v11, v1);
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      v14[0] = 0xD000000000000018;
      v14[1] = 0x800000022D2DE890;
      sub_22D282E84(&qword_2685438D0, MEMORY[0x263F06370]);
      sub_22D2BD630();
      sub_22D2BCCB0();
      swift_bridgeObjectRelease();
      uint64_t v12 = v14[0];
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      break;
    case 4u:
      return v12;
    default:
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      sub_22D2BD310();
      swift_bridgeObjectRelease();
      v14[0] = 0xD000000000000015;
      v14[1] = 0x800000022D2DE8D0;
      sub_22D2BCCB0();
LABEL_4:
      swift_bridgeObjectRelease();
      uint64_t v12 = v14[0];
      break;
  }
  return v12;
}

void *sub_22D2810D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22D02D2A4(0, &qword_26853DED8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22D282554(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_22D2811F0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22D2814B8(a1, a2, a3, a4, &qword_2685438F0);
}

uint64_t sub_22D281204(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_2685438F8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingCycleTrackingQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCycleTrackingQuery);
}

void *sub_22D28124C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22D281BF4(a1, a2, a3, a4, &qword_268542F58, (unint64_t *)&qword_26853DCF8, (uint64_t)&protocol descriptor for ClinicalSharingQuery);
}

uint64_t sub_22D281268(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268543900, MEMORY[0x263F06338], MEMORY[0x263F06338], MEMORY[0x263F06338]);
}

uint64_t sub_22D2812B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, (unint64_t *)&unk_26AEC0EB8, MEMORY[0x263F07490], MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

void *sub_22D2812F8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22D02D2A4(0, &qword_268542F88);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22D283850(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D281414(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268543960, type metadata accessor for ClinicalSharingQueryOutput, type metadata accessor for ClinicalSharingQueryOutput, type metadata accessor for ClinicalSharingQueryOutput);
}

uint64_t sub_22D28145C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268543050, type metadata accessor for PBTimeSeries.Value, type metadata accessor for PBTimeSeries.Value, type metadata accessor for PBTimeSeries.Value);
}

void *sub_22D2814A4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22D2814B8(a1, a2, a3, a4, &qword_26853EE60);
}

void *sub_22D2814B8(void *result, int64_t a2, char a3, void *a4, unint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_22D02D2A4(0, a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
          memmove(v14, a4 + 4, 32 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22D282648(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D2815DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_26853EB78, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingDataNodeInfo, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo);
}

uint64_t sub_22D281624(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268543028, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingCategoryNodeInfo, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
}

uint64_t sub_22D28166C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268543978, type metadata accessor for PBSleepSeries.Value, type metadata accessor for PBSleepSeries.Value, type metadata accessor for PBSleepSeries.Value);
}

void *sub_22D2816B4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22D283D30(0, &qword_268543950, (uint64_t (*)(uint64_t))sub_22D0A553C, MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22D282894(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_22D2817F0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22D283D30(0, &qword_268543928, (uint64_t (*)(uint64_t))sub_22D283FF0, MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_22D283A4C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_22D281940(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22D283D94(0, &qword_268543938, (uint64_t)&unk_268543940, (uint64_t)sub_22D2840A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_22D284050);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22D283944(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D281A84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_26AEC1F98, (uint64_t (*)(uint64_t))sub_22D283DF0, (uint64_t (*)(void))sub_22D283DF0, (uint64_t (*)(void))sub_22D283DF0);
}

void *sub_22D281ACC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22D283E50();
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22D283944(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_22D281BD8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22D281BF4(a1, a2, a3, a4, &qword_268543048, &qword_268542080, (uint64_t)&protocol descriptor for WebRequest);
}

void *sub_22D281BF4(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_22D283D94(0, a5, (uint64_t)a6, a7, (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
      uint64_t v14 = (void *)swift_allocObject();
      size_t v15 = _swift_stdlib_malloc_size(v14);
      void v14[2] = v12;
      void v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      uint64_t v16 = v14 + 4;
      if (v9)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
          memmove(v16, a4 + 4, 40 * v12);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_22D28299C(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

char *sub_22D281D4C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22D02D2A4(0, &qword_2685438E8);
      unint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_22D283B58(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D281E68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268543980, type metadata accessor for PBSleepSummary.Schedule, type metadata accessor for PBSleepSummary.Schedule, type metadata accessor for PBSleepSummary.Schedule);
}

uint64_t sub_22D281EB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268542F78, MEMORY[0x263F062D0], MEMORY[0x263F062D0], MEMORY[0x263F062D0]);
}

uint64_t sub_22D281EF8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_2685430C8, type metadata accessor for PBCategorySeries.Event, type metadata accessor for PBCategorySeries.Event, type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_22D281F40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268543968, type metadata accessor for PBCycleTracking.Event, type metadata accessor for PBCycleTracking.Event, type metadata accessor for PBCycleTracking.Event);
}

void *sub_22D281F88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22D02D2A4(0, &qword_268543970);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22D283C44(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_22D2820A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22D283D30(0, &qword_268543908, (uint64_t (*)(uint64_t))sub_22D04C180, MEMORY[0x263F8E0F8]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22D282AB0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D2821E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_26853DD48, MEMORY[0x263F07508], MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

uint64_t sub_22D282228(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268543958, type metadata accessor for PBTypedData, type metadata accessor for PBTypedData, type metadata accessor for PBTypedData);
}

uint64_t sub_22D282270(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22D2822B8(a1, a2, a3, a4, &qword_268543060, (uint64_t (*)(uint64_t))sub_22D0838B4, (uint64_t (*)(void))sub_22D0838B4, (uint64_t (*)(void))sub_22D0838B4);
}

uint64_t sub_22D2822B8(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    char v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_22D283D30(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  char v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_22D2BD450();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_22D282738(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t sub_22D282554(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D282648(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D282738(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D282894(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_22D0A553C();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D28299C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_22D021C20(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D282AB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_22D04C180();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D282BB8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v6 = 0;
  uint64_t v7 = result + 56;
  uint64_t v8 = -(uint64_t)v3;
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v26 = result + 56;
  uint64_t v29 = -(uint64_t)v3;
  do
  {
    uint64_t v28 = v9;
    if (v6 <= v3) {
      unint64_t v10 = v3;
    }
    else {
      unint64_t v10 = v6;
    }
    uint64_t v11 = -(uint64_t)v10;
    for (unint64_t i = (uint64_t *)(v7 + 32 * v6++); ; i += 4)
    {
      if (v11 + v6 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v14 = *(i - 3);
      uint64_t v13 = *(i - 2);
      if (v14 != a2 || v13 != a3)
      {
        uint64_t v16 = *(i - 1);
        uint64_t v17 = *i;
        uint64_t v18 = a2;
        uint64_t v19 = a3;
        uint64_t v20 = v11;
        uint64_t result = sub_22D2BD660();
        uint64_t v11 = v20;
        a2 = v18;
        a3 = v19;
        uint64_t v8 = v29;
        if ((result & 1) == 0) {
          break;
        }
      }
      ++v6;
      if (v8 + v6 == 1) {
        return v28;
      }
    }
    uint64_t v25 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = v28;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_22D24C024(0, *(void *)(v28 + 16) + 1, 1);
      uint64_t v9 = v28;
    }
    uint64_t v21 = v25;
    unint64_t v23 = *(void *)(v9 + 16);
    unint64_t v22 = *(void *)(v9 + 24);
    uint64_t v8 = v29;
    a3 = v19;
    a2 = v18;
    if (v23 >= v22 >> 1)
    {
      uint64_t result = sub_22D24C024(v22 > 1, v23 + 1, 1);
      uint64_t v21 = v25;
      a2 = v18;
      a3 = v19;
      uint64_t v8 = v29;
      uint64_t v9 = v28;
    }
    *(void *)(v9 + 16) = v23 + 1;
    unint64_t v24 = (void *)(v9 + 32 * v23);
    v24[4] = v14;
    v24[5] = v13;
    v24[6] = v21;
    v24[7] = v17;
    unint64_t v3 = v27;
    uint64_t v7 = v26;
  }
  while (v8 + v6);
  return v9;
}

uint64_t type metadata accessor for WebRequestError()
{
  uint64_t result = qword_2685438D8;
  if (!qword_2685438D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D282DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebRequestError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D282E3C()
{
  return sub_22D282E84((unint64_t *)&qword_26853E8A0, (void (*)(uint64_t))type metadata accessor for WebRequestError);
}

uint64_t sub_22D282E84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of WebRequest.method.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WebRequest.headers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WebRequest.headers.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of WebRequest.headers.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of WebRequest.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of WebRequest.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of WebRequest.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t *initializeBufferWithCopyOfBuffer for WebRequestError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v10 = sub_22D2BBAA0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v11 = sub_22D2BB790();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for WebRequestError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
      uint64_t v3 = sub_22D2BBAA0();
      goto LABEL_7;
    case 3:
      uint64_t v3 = sub_22D2BB790();
LABEL_7:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for WebRequestError(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 2u:
      uint64_t v7 = sub_22D2BBAA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_6;
    case 3u:
      uint64_t v8 = sub_22D2BB790();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for WebRequestError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22D2834F4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 2u:
        uint64_t v6 = sub_22D2BBAA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_7;
      case 3u:
        uint64_t v7 = sub_22D2BB790();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_22D2834F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WebRequestError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for WebRequestError(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = sub_22D2BB790();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_22D2BBAA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for WebRequestError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22D2834F4((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v8 = sub_22D2BB790();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = sub_22D2BBAA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22D283780()
{
  uint64_t result = sub_22D2BBAA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22D2BB790();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22D283850(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D283944(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_22D283FAC();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D283A4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      sub_22D283FF0();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

char *sub_22D283B58(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_22D2BD4C0();
  __break(1u);
  return result;
}

char *sub_22D283C44(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_22D2BD4C0();
  __break(1u);
  return result;
}

void sub_22D283D30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D283D94(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_22D2BD640();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_22D283DF0()
{
  if (!qword_26AEC1808)
  {
    type metadata accessor for ClinicalSharingSyncTask();
    unint64_t v0 = type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1808);
    }
  }
}

void sub_22D283E50()
{
  if (!qword_268543910)
  {
    sub_22D284050(255, &qword_268543918, (void (*)(uint64_t))sub_22D283EC4);
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543910);
    }
  }
}

void sub_22D283EC4()
{
  if (!qword_268543920)
  {
    sub_22D283F44();
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v0 = sub_22D2BD790();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543920);
    }
  }
}

void sub_22D283F44()
{
  if (!qword_26AEC2F90)
  {
    sub_22D030474(255, &qword_26AEC2FC0);
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2F90);
    }
  }
}

unint64_t sub_22D283FAC()
{
  unint64_t result = qword_26AEC22C8;
  if (!qword_26AEC22C8)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_26AEC22C8);
  }
  return result;
}

void sub_22D283FF0()
{
  if (!qword_268543930)
  {
    unint64_t v0 = type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543930);
    }
  }
}

uint64_t sub_22D284050(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, a2);
  }
  return result;
}

void sub_22D2840A8()
{
  if (!qword_268543948)
  {
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v0 = sub_22D2BD790();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543948);
    }
  }
}

uint64_t sub_22D284120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v57 = a3;
  unint64_t v58 = a4;
  uint64_t v56 = a2;
  sub_22D284840(0, &qword_26853F988, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v54 = (uint64_t)&v51 - v10;
  uint64_t v11 = type metadata accessor for PBBlobAuth(0);
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v51 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v51 - v14);
  sub_22D284840(0, &qword_26853F978, (void (*)(uint64_t))type metadata accessor for PBBlobs);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v51 - v20;
  uint64_t v22 = type metadata accessor for PBBlobs(0);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2BBFE0();
  uint64_t v26 = *(int *)(type metadata accessor for PBPushBlobsRequest(0) + 20);
  if (qword_26853CDB8 != -1) {
    swift_once();
  }
  *(void *)(a5 + v26) = qword_26853F700;
  uint64_t v59 = a1;
  sub_22D284900(a1, (uint64_t)v25, type metadata accessor for PBBlobs);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)(a5 + v26) = sub_22D0F71BC(v27);
    swift_release();
  }
  uint64_t v28 = *(void *)(a5 + v26);
  sub_22D284968((uint64_t)v25, (uint64_t)v21, type metadata accessor for PBBlobs);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  sub_22D284894((uint64_t)v21, (uint64_t)v19, &qword_26853F978, (void (*)(uint64_t))type metadata accessor for PBBlobs);
  uint64_t v29 = v28
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobs;
  swift_beginAccess();
  swift_retain();
  sub_22D2849D0((uint64_t)v19, v29, &qword_26853F978, (void (*)(uint64_t))type metadata accessor for PBBlobs);
  swift_endAccess();
  swift_release();
  uint64_t v30 = sub_22D2BBFC0();
  unint64_t v32 = v31;
  uint64_t v33 = v53;
  sub_22D2BBFE0();
  uint64_t v34 = v56;
  void *v15 = v56;
  swift_bridgeObjectRetain();
  uint64_t v36 = v57;
  unint64_t v35 = v58;
  sub_22CFF9B64(v57, v58);
  sub_22CFF5630(v30, v32);
  v15[1] = v36;
  void v15[2] = v35;
  v15[3] = 0x6977363532414853;
  v15[4] = 0xEF41534443456874;
  uint64_t v37 = v51;
  sub_22D284900((uint64_t)v15, v51, type metadata accessor for PBBlobAuth);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPushBlobsRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v38 = swift_retain();
    *(void *)(a5 + v26) = sub_22D0F71BC(v38);
    swift_release();
  }
  uint64_t v39 = *(void *)(a5 + v26);
  uint64_t v40 = v37;
  uint64_t v41 = v54;
  sub_22D284968(v40, v54, type metadata accessor for PBBlobAuth);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v41, 0, 1, v33);
  uint64_t v42 = v55;
  sub_22D284894(v41, v55, &qword_26853F988, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  uint64_t v43 = v39
      + OBJC_IVAR____TtCV19HealthRecordsDaemon18PBPushBlobsRequestP33_10BC46EBE4B3F8F600539A521FA688DE13_StorageClass__blobAuth;
  swift_beginAccess();
  swift_retain();
  sub_22D2849D0(v42, v43, &qword_26853F988, (void (*)(uint64_t))type metadata accessor for PBBlobAuth);
  swift_endAccess();
  swift_release();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_22D2BC390();
  __swift_project_value_buffer(v44, (uint64_t)qword_26AEC3C90);
  swift_bridgeObjectRetain();
  sub_22CFF9B64(v36, v35);
  uint64_t v45 = sub_22D2BC380();
  os_log_type_t v46 = sub_22D2BD050();
  BOOL v47 = os_log_type_enabled(v45, v46);
  uint64_t v48 = v59;
  if (v47)
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 134217984;
    uint64_t v60 = *(void *)(v34 + 16);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22CFF5630(v36, v35);
    _os_log_impl(&dword_22CFEE000, v45, v46, "Generated PBPushBlobsRequest containing number of certs: %ld", v49, 0xCu);
    MEMORY[0x230F7BDF0](v49, -1, -1);
    swift_bridgeObjectRelease();
    sub_22CFF5630(v36, v35);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_22CFF5630(v36, v35);
    swift_bridgeObjectRelease();

    sub_22CFF5630(v36, v35);
  }
  sub_22D284A3C(v48, type metadata accessor for PBBlobs);
  return sub_22D284A3C((uint64_t)v15, type metadata accessor for PBBlobAuth);
}

void sub_22D284840(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D284894(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D284840(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D284900(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D284968(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D2849D0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_22D284840(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D284A3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D284A9C(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v18 = sub_22D2BBC90();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (!v7) {
      return v8;
    }
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t result = sub_22D24B7A4(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v19;
    v16[1] = v2;
    unint64_t v17 = a1 & 0xC000000000000001;
    unint64_t v11 = a1;
    while (v7 != v10)
    {
      if (v17) {
        id v12 = (id)MEMORY[0x230F7AF90](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_identifier);
      sub_22D2BBC70();

      uint64_t v19 = v8;
      unint64_t v2 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_22D24B7A4(v15 > 1, v2 + 1, 1);
        uint64_t v8 = v19;
      }
      ++v10;
      *(void *)(v8 + 16) = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v2, v6, v18);
      a1 = v11;
      if (v7 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_22D284CC4(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void *))
{
  v5[0] = a1;
  v5[1] = a2;
  char v6 = a3 & 1;
  return a4(v5);
}

uint64_t sub_22D284D04(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_22D284FB8(a1, a2, a3, (unint64_t *)&qword_26AEC2FC8);
}

uint64_t sub_22D284D18@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_22D074234();
  swift_allocObject();
  id v4 = a1;
  uint64_t result = sub_22D2BC6F0();
  *a2 = result;
  return result;
}

void sub_22D284DA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_22D0348C4;
  *(void *)(v7 + 24) = v6;
  void v9[4] = sub_22D284F9C;
  v9[5] = v7;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_22D284FA4;
  v9[3] = &block_descriptor_23;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAllAccountsWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_22D284EB0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22D284EE8(uint64_t a1, uint64_t a2)
{
  sub_22D284DA0(a1, a2, *(void **)(v2 + 16));
}

void sub_22D284EF0(void *a1, id a2, void (*a3)(id, BOOL))
{
  id v5 = a1;
  if (!a1)
  {
    id v5 = a2;
    if (!a2)
    {
      sub_22D04C890();
      id v5 = (id)swift_allocError();
      *(void *)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      *(unsigned char *)(v7 + 16) = 2;
    }
    id v8 = a2;
  }
  swift_bridgeObjectRetain();
  a3(v5, a1 == 0);
  sub_22D0AF638(v5, a1 == 0);
}

void sub_22D284F9C(void *a1, void *a2)
{
  sub_22D284EF0(a1, a2, *(void (**)(id, BOOL))(v2 + 16));
}

uint64_t sub_22D284FA4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_22D284FB8(a1, a2, a3, (unint64_t *)&qword_26AEC1EE8);
}

uint64_t sub_22D284FB8(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_22D030474(0, a4);
    uint64_t v5 = sub_22D2BCE00();
  }
  swift_retain();
  id v7 = a3;
  v6(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

void sub_22D28506C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  sub_22D284A9C(a3);
  sub_22D2BBC90();
  uint64_t v9 = (void *)sub_22D2BCDF0();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = sub_22D0348C4;
  v10[3] = v8;
  v10[4] = a3;
  v12[4] = sub_22D2863E0;
  v12[5] = v10;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  void v12[2] = sub_22D284D04;
  v12[3] = &block_descriptor_24;
  unint64_t v11 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a4, sel_refreshAccountConnectionInformationForAccountsWithIdentifiers_completion_, v9, v11);
  _Block_release(v11);
}

void sub_22D2851D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  sub_22D24D52C(0);
  uint64_t v42 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v40 = (void (*)(void *, void))a3;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      a2 = sub_22D2BD470();
      swift_bridgeObjectRelease();
    }
    else
    {
      a2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    a3 = MEMORY[0x263F8EE78];
    if (!a2)
    {
LABEL_14:
      if (*(void *)(a3 + 16))
      {
        sub_22D286450();
        uint64_t v21 = sub_22D2BD4A0();
      }
      else
      {
        uint64_t v21 = MEMORY[0x263F8EE80];
      }
      uint64_t v44 = v21;
      uint64_t v32 = swift_bridgeObjectRetain();
      sub_22D2864F8(v32, 1, &v44);
      swift_bridgeObjectRelease();
      uint64_t v33 = v44;
      swift_retain();
      uint64_t v34 = sub_22D286A34(a5, v33);
      swift_release_n();
      v40(v34, 0);
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v44 = MEMORY[0x263F8EE78];
    sub_22D24C08C(0, a2 & ~(a2 >> 63), 0);
    if ((a2 & 0x8000000000000000) == 0)
    {
      unint64_t v39 = a5;
      uint64_t v41 = a4;
      uint64_t v14 = 0;
      a3 = v44;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v15 = (id)MEMORY[0x230F7AF90](v14, a1);
        }
        else {
          id v15 = *(id *)(a1 + 8 * v14 + 32);
        }
        id v16 = v15;
        uint64_t v17 = *(int *)(v42 + 48);
        id v18 = objc_msgSend(v15, sel_accountIdentifier);
        sub_22D2BBC70();

        *(void *)&v13[v17] = v16;
        uint64_t v44 = a3;
        unint64_t v20 = *(void *)(a3 + 16);
        unint64_t v19 = *(void *)(a3 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_22D24C08C(v19 > 1, v20 + 1, 1);
          a3 = v44;
        }
        ++v14;
        *(void *)(a3 + 16) = v20 + 1;
        sub_22D2863EC((uint64_t)v13, a3+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v20);
      }
      while (a2 != v14);
      a5 = v39;
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v41 = a4;
  if (qword_26AEC1C58 != -1) {
LABEL_27:
  }
    swift_once();
  uint64_t v22 = sub_22D2BC390();
  __swift_project_value_buffer(v22, (uint64_t)qword_26AEC3C90);
  id v23 = (id)a2;
  id v24 = (id)a2;
  uint64_t v25 = sub_22D2BC380();
  os_log_type_t v26 = sub_22D2BD060();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v43 = a2;
    uint64_t v44 = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    id v29 = (id)a2;
    sub_22D285CF4(0, &qword_26AEC1FC0, (uint64_t (*)(uint64_t))sub_22CFF49FC, MEMORY[0x263F8D8F0]);
    uint64_t v30 = sub_22D2BCC30();
    uint64_t v43 = sub_22D0A4D24(v30, v31, &v44);
    sub_22D2BD220();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v25, v26, "Could not refresh account connection info for Accounts. Error: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v28, -1, -1);
    MEMORY[0x230F7BDF0](v27, -1, -1);
  }
  else
  {
  }
  unint64_t v35 = (void *)a2;
  if (!a2)
  {
    sub_22D04C890();
    unint64_t v35 = (void *)swift_allocError();
    *(void *)uint64_t v36 = 0;
    *(void *)(v36 + 8) = 0;
    *(unsigned char *)(v36 + 16) = 2;
  }
  id v37 = (id)a2;
  ((void (*)(void *, uint64_t))a3)(v35, 1);
  sub_22D0AF638(v35, 1);
}

void sub_22D2856B4(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_22D2BBC90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v33 - v11;
  id v13 = *a1;
  id v14 = objc_msgSend(*a1, sel_identifier);
  sub_22D2BBC70();

  if (*(void *)(a2 + 16) && (unint64_t v15 = sub_22D04EA20((uint64_t)v12), (v16 & 1) != 0))
  {
    uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    id v18 = *(id *)(*(void *)(a2 + 56) + 8 * v15);
    v17(v12, v6);
    unint64_t v19 = v17;
    id v20 = objc_msgSend(v18, sel_authorization);

    if (v20)
    {
      *a3 = v13;
      a3[1] = v20;
      id v21 = v13;
      return;
    }
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
  }
  uint64_t v36 = v7;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_22D2BC390();
  __swift_project_value_buffer(v22, (uint64_t)qword_26AEC3C90);
  id v23 = v13;
  id v24 = sub_22D2BC380();
  os_log_type_t v25 = sub_22D2BD060();
  if (os_log_type_enabled(v24, v25))
  {
    os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v38 = v34;
    unint64_t v35 = a3;
    *(_DWORD *)os_log_type_t v26 = 136315138;
    id v27 = objc_msgSend(v23, sel_identifier, v26 + 4);
    sub_22D2BBC70();

    sub_22D058D88((unint64_t *)&qword_26853DF20);
    uint64_t v28 = sub_22D2BD630();
    id v29 = v19;
    unint64_t v31 = v30;
    v29(v10, v6);
    uint64_t v37 = sub_22D0A4D24(v28, v31, &v38);
    a3 = v35;
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v24, v25, "Could not refresh connection info. Account: %s", v26, 0xCu);
    uint64_t v32 = v34;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v32, -1, -1);
    MEMORY[0x230F7BDF0](v26, -1, -1);
  }
  else
  {
  }
  *a3 = 0;
  a3[1] = 0;
}

void sub_22D285A54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v21 = a3;
  uint64_t v19 = a2;
  uint64_t v7 = sub_22D2BBC90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  id v20 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_22D285CF4(0, &qword_26853DD48, MEMORY[0x263F07508], MEMORY[0x263F8E0F8]);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22D2BFF40;
  id v13 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16);
  v13(v12 + v11, a4, v7);
  swift_retain();
  uint64_t v19 = sub_22D2BCDF0();
  swift_bridgeObjectRelease();
  id v14 = v20;
  v13((unint64_t)v20, a4, v7);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_22D04C6D0;
  *(void *)(v15 + 24) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v11, v14, v7);
  aBlock[4] = sub_22D2862E4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22D284D04;
  aBlock[3] = &block_descriptor_15_0;
  char v16 = _Block_copy(aBlock);
  swift_release();
  uint64_t v17 = (void *)v19;
  objc_msgSend(v21, sel_refreshAccountConnectionInformationForAccountsWithIdentifiers_completion_, v19, v16);
  _Block_release(v16);
}

void sub_22D285CF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D285D58(unint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_22D2BBC90();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_14;
  }
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  if (!sub_22D2BD470()) {
    goto LABEL_13;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v15 = (id)MEMORY[0x230F7AF90](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v15 = *(id *)(a1 + 32);
  }
  char v16 = v15;
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v16, sel_authorization);

  if (v17)
  {
    id v18 = objc_msgSend(v17, sel_accessToken);

    if (v18)
    {
      uint64_t v19 = sub_22D2BCBD0();
      uint64_t v21 = v20;

      a3(v19, v21, 0);
      swift_bridgeObjectRelease();
      return;
    }
  }
LABEL_14:
  v38[1] = a4;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_22D2BC390();
  __swift_project_value_buffer(v22, (uint64_t)qword_26AEC3C90);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a5, v10);
  id v23 = a2;
  id v24 = a2;
  os_log_type_t v25 = sub_22D2BC380();
  os_log_type_t v26 = sub_22D2BD080();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v38[0] = a3;
    uint64_t v29 = v28;
    uint64_t v40 = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    sub_22D058D88((unint64_t *)&qword_26853DF20);
    uint64_t v30 = sub_22D2BD630();
    uint64_t v39 = sub_22D0A4D24(v30, v31, &v40);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v39 = (uint64_t)a2;
    id v32 = a2;
    sub_22D285CF4(0, &qword_26AEC1FC0, (uint64_t (*)(uint64_t))sub_22CFF49FC, MEMORY[0x263F8D8F0]);
    uint64_t v33 = sub_22D2BCC30();
    uint64_t v39 = sub_22D0A4D24(v33, v34, &v40);
    sub_22D2BD220();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v25, v26, "Could not refreshAccessToken. Account: %s. Error: %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    uint64_t v35 = v29;
    a3 = (void (*)(uint64_t, uint64_t, uint64_t))v38[0];
    MEMORY[0x230F7BDF0](v35, -1, -1);
    MEMORY[0x230F7BDF0](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_22D0BE8F0();
  uint64_t v36 = (void *)swift_allocError();
  *(void *)(v37 + 8) = 0;
  *(void *)(v37 + 16) = 0;
  *(void *)uint64_t v37 = 3;
  *(unsigned char *)(v37 + 24) = 3;
  a3((uint64_t)v36, 0, 1);
}

uint64_t sub_22D286218()
{
  uint64_t v1 = sub_22D2BBC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_22D2862E4(unint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_22D2BBC90() - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  sub_22D285D58(a1, a2, v6, v7, v8);
}

uint64_t sub_22D286368()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D2863A0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22D2863E0(unint64_t a1, uint64_t a2)
{
  sub_22D2851D0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_22D2863EC(uint64_t a1, uint64_t a2)
{
  sub_22D24D52C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22D286450()
{
  if (!qword_26853E348)
  {
    sub_22D2BBC90();
    sub_22D030474(255, (unint64_t *)&qword_26AEC2FC8);
    sub_22D058D88((unint64_t *)&qword_26AEC0F50);
    unint64_t v0 = sub_22D2BD4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853E348);
    }
  }
}

void sub_22D2864F8(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = sub_22D2BBC90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D24D52C(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  id v15 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v57) = a2;
  uint64_t v17 = *(int *)(v12 + 48);
  v54[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v54[1] = v3;
  uint64_t v18 = a1 + v54[0];
  uint64_t v59 = *(void *)(v13 + 72);
  uint64_t v56 = a1;
  swift_bridgeObjectRetain();
  sub_22D286BF4(v18, (uint64_t)v15);
  uint64_t v55 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v60 = v7;
  id v61 = v19;
  v19((unint64_t)v10, v15, v7);
  uint64_t v58 = v17;
  uint64_t v20 = *(void **)&v15[v17];
  uint64_t v62 = a3;
  uint64_t v21 = *a3;
  unint64_t v23 = sub_22D04EA20((uint64_t)v10);
  uint64_t v24 = *(void *)(v21 + 16);
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_24;
  }
  char v27 = v22;
  if (*(void *)(v21 + 24) >= v26)
  {
    if (v57)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_22D05626C();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    unint64_t v34 = (void *)*v62;
    *(void *)(*v62 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    uint64_t v35 = v34[6];
    uint64_t v57 = *(void *)(v55 + 72);
    uint64_t v36 = v60;
    v61(v35 + v57 * v23, v10, v60);
    *(void *)(v34[7] + 8 * v23) = v20;
    uint64_t v37 = v34[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v34[2] = v39;
    uint64_t v40 = v16 - 1;
    if (v16 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v41 = v56 + v59 + v54[0];
    while (1)
    {
      sub_22D286BF4(v41, (uint64_t)v15);
      v61((unint64_t)v10, v15, v36);
      uint64_t v20 = *(void **)&v15[v58];
      uint64_t v42 = (void *)*v62;
      unint64_t v44 = sub_22D04EA20((uint64_t)v10);
      uint64_t v45 = v42[2];
      BOOL v46 = (v43 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46)) {
        break;
      }
      char v48 = v43;
      if (v42[3] < v47)
      {
        sub_22D052BF8(v47, 1);
        unint64_t v49 = sub_22D04EA20((uint64_t)v10);
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_26;
        }
        unint64_t v44 = v49;
      }
      if (v48) {
        goto LABEL_10;
      }
      uint64_t v51 = (void *)*v62;
      *(void *)(*v62 + 8 * (v44 >> 6) + 64) |= 1 << v44;
      uint64_t v36 = v60;
      v61(v51[6] + v57 * v44, v10, v60);
      *(void *)(v51[7] + 8 * v44) = v20;
      uint64_t v52 = v51[2];
      BOOL v38 = __OFADD__(v52, 1);
      uint64_t v53 = v52 + 1;
      if (v38) {
        goto LABEL_25;
      }
      v51[2] = v53;
      v41 += v59;
      if (!--v40) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_22D052BF8(v26, v57 & 1);
  unint64_t v28 = sub_22D04EA20((uint64_t)v10);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v30 = (void *)swift_allocError();
    swift_willThrow();
    id v65 = v30;
    id v31 = v30;
    sub_22CFF49FC();
    char v32 = swift_dynamicCast();
    uint64_t v33 = v60;
    if ((v32 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v33);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_22D2BD6A0();
  __break(1u);
LABEL_27:
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  sub_22D2BD310();
  sub_22D2BCCB0();
  sub_22D2BD430();
  sub_22D2BCCB0();
  sub_22D2BD460();
  __break(1u);
}

void *sub_22D286A34(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_22D2BD470())
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F7AF90](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v18 = v7;
      sub_22D2856B4(&v18, a2, &v17);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      if ((void)v17)
      {
        long long v16 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_22D2820A4(0, v5[2] + 1, 1, v5);
        }
        unint64_t v11 = v5[2];
        unint64_t v10 = v5[3];
        long long v12 = v16;
        if (v11 >= v10 >> 1)
        {
          uint64_t v13 = sub_22D2820A4((void *)(v10 > 1), v11 + 1, 1, v5);
          long long v12 = v16;
          uint64_t v5 = v13;
        }
        void v5[2] = v11 + 1;
        *(_OWORD *)&v5[2 * v11 + 4] = v12;
      }
      if (v9 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

uint64_t sub_22D286BF4(uint64_t a1, uint64_t a2)
{
  sub_22D24D52C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D286C74(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v26 = sub_22D2BBC30();
  uint64_t v1 = *(void *)(v26 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v26);
  BOOL v25 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0E3A78();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D287134();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_22D2BD0D0();
  sub_22D287204(0, &qword_26AEC1DF8, &qword_26AEC0F30, MEMORY[0x263F06F78], MEMORY[0x263EFDE20]);
  sub_22D2870EC(0, (unint64_t *)&qword_26AEC2880);
  sub_22D076DF8();
  sub_22D2BC780();
  swift_release();
  sub_22D2881CC(&qword_26AEC2C98, (void (*)(uint64_t))sub_22D0E3A78);
  uint64_t v12 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v30 = v12;
  uint64_t v14 = v25;
  uint64_t v13 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v25, v27, v26);
  unint64_t v15 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v16 + v15, v14, v13);
  long long v17 = v24;
  *(void *)(v16 + ((v2 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
  id v18 = v17;
  sub_22D2BC5D0();
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D287204(0, &qword_26AEC2E80, (unint64_t *)&qword_26AEC2880, (uint64_t)&type metadata for ClinicalSharingSyncHistory, MEMORY[0x263EFDCF0]);
  sub_22D287284((unint64_t *)&qword_26AEC2E78, &qword_26AEC2E80, v19);
  sub_22D2BC830();
  swift_release();
  swift_release();
  sub_22D2881CC(&qword_26AEC2D98, (void (*)(uint64_t))sub_22D287134);
  uint64_t v20 = v28;
  uint64_t v21 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v20);
  return v21;
}

void sub_22D2870EC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_22D2BD200();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_22D287134()
{
  if (!qword_26AEC2DA0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D287204(255, &qword_26AEC2E80, (unint64_t *)&qword_26AEC2880, (uint64_t)&type metadata for ClinicalSharingSyncHistory, MEMORY[0x263EFDCF0]);
    sub_22D287284((unint64_t *)&qword_26AEC2E78, &qword_26AEC2E80, v0);
    unint64_t v1 = sub_22D2BC520();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AEC2DA0);
    }
  }
}

void sub_22D287204(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_22D2870EC(255, a3);
    uint64_t v9 = v8;
    unint64_t v10 = sub_22CFF49FC();
    unint64_t v11 = a5(a1, v9, v10, MEMORY[0x263F8E4E0]);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_22D287284(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D287204(255, a2, (unint64_t *)&qword_26AEC2880, (uint64_t)&type metadata for ClinicalSharingSyncHistory, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2872DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_22D2BBC30();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v13 + ((v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_22D287204(0, &qword_26AEC2F28, (unint64_t *)&qword_26AEC2880, (uint64_t)&type metadata for ClinicalSharingSyncHistory, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v15 = a3;
  v18[1] = sub_22D2BC6F0();
  sub_22D287284(&qword_26AEC2F20, &qword_26AEC2F28, v14);
  uint64_t v16 = sub_22D2BC720();
  uint64_t result = swift_release();
  *a4 = v16;
  return result;
}

uint64_t sub_22D2874EC(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  v29[0] = a5;
  void aBlock[6] = *MEMORY[0x263EF8340];
  uint64_t v9 = sub_22D2BBC30();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  v29[1] = a2;
  v29[2] = a1;
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  if (!a3)
  {
    id v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    swift_retain();
    v18(v12, a4, v9);
LABEL_5:
    sub_22D28849C(0, (unint64_t *)&unk_26AEC0EB8, MEMORY[0x263F07490], MEMORY[0x263F8E0F8]);
    unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_22D2BFF40;
    v18((char *)(v19 + v20), (uint64_t)v12, v9);
    goto LABEL_6;
  }
  swift_retain();
  uint64_t v14 = sub_22D09C084(a3);
  sub_22D28849C(0, (unint64_t *)&unk_26AEC0EB8, MEMORY[0x263F07490], MEMORY[0x263F8E0F8]);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_22D2BFF40;
  unint64_t v17 = v16 + v15;
  id v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v18((char *)v17, a4, v9);
  aBlock[0] = v14;
  sub_22D23EBC4(v16);
  uint64_t v19 = aBlock[0];
  v18(v12, a4, v9);
  if (!v19) {
    goto LABEL_5;
  }
LABEL_6:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_22D2BB660();
  swift_allocObject();
  sub_22D2BB650();
  aBlock[0] = v19;
  sub_22D2883E4();
  uint64_t v21 = sub_22D2BB640();
  unint64_t v23 = v22;
  swift_release();
  uint64_t v24 = (void *)sub_22D2BBB00();
  BOOL v25 = (void *)sub_22D2BCBA0();
  uint64_t v26 = (void *)swift_allocObject();
  id v26[2] = sub_22D034BAC;
  uint64_t v26[3] = v13;
  v26[4] = v19;
  aBlock[4] = sub_22D288478;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22D1F193C;
  aBlock[3] = &block_descriptor_24;
  uint64_t v27 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v29[0], sel_setData_forKey_completion_, v24, v25, v27);
  _Block_release(v27);

  return sub_22CFF5630(v21, v23);
}

void sub_22D287AD0(char a1, void *a2, void (*a3)(void *, uint64_t), uint64_t a4, void *a5)
{
  if (a1)
  {
    a3(a5, 0);
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22D2BC390();
    __swift_project_value_buffer(v7, (uint64_t)qword_26AEC3C90);
    id v8 = a2;
    id v9 = a2;
    uint64_t v10 = sub_22D2BC380();
    os_log_type_t v11 = sub_22D2BD060();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = v13;
      *(_DWORD *)unint64_t v12 = 136315138;
      id v14 = a2;
      sub_22D28849C(0, &qword_26AEC1FC0, (uint64_t (*)(uint64_t))sub_22CFF49FC, MEMORY[0x263F8D8F0]);
      uint64_t v15 = sub_22D2BCC30();
      sub_22D0A4D24(v15, v16, &v20);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v10, v11, "Could not save ClinicalSharingSyncHistory: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v13, -1, -1);
      MEMORY[0x230F7BDF0](v12, -1, -1);
    }
    else
    {
    }
    unint64_t v17 = a2;
    if (!a2)
    {
      sub_22D04C890();
      unint64_t v17 = (void *)swift_allocError();
      *(void *)uint64_t v18 = 0;
      *(void *)(v18 + 8) = 0;
      *(unsigned char *)(v18 + 16) = 2;
    }
    id v19 = a2;
    a3(v17, 1);
  }
}

void sub_22D287D48(uint64_t *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = a1[1];
  if (v3 >> 60 == 15)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_22D2BC390();
    __swift_project_value_buffer(v4, (uint64_t)qword_26AEC3C90);
    uint64_t v5 = sub_22D2BC380();
    os_log_type_t v6 = sub_22D2BD050();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_22CFEE000, v5, v6, "No sync history available to retrieve", v7, 2u);
      MEMORY[0x230F7BDF0](v7, -1, -1);
    }

    *a2 = 0;
  }
  else
  {
    uint64_t v8 = *a1;
    sub_22D2BB600();
    swift_allocObject();
    sub_22CFF9B64(v8, v3);
    sub_22D2BB5F0();
    sub_22D288500();
    sub_22D2BB5E0();
    sub_22CFF9C10(v8, v3);
    swift_release();
    *a2 = v9;
  }
}

uint64_t sub_22D28807C()
{
  uint64_t v1 = sub_22D2BBC30();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_22D288120@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_22D2BBC30() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_22D2872DC(a1, v2 + v6, v7, a2);
}

uint64_t sub_22D2881CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D288214()
{
  uint64_t v1 = sub_22D2BBC30();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_22D2882FC(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_22D2BBC30() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_22D2874EC(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_22D2883AC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_22D2883E4()
{
  unint64_t result = qword_26AEC2878;
  if (!qword_26AEC2878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2878);
  }
  return result;
}

uint64_t sub_22D288438()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22D288478(char a1, void *a2)
{
  sub_22D287AD0(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

void sub_22D28849C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22D288500()
{
  unint64_t result = qword_26AEC2078;
  if (!qword_26AEC2078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2078);
  }
  return result;
}

uint64_t PBPayload.init()@<X0>(uint64_t a1@<X8>)
{
  sub_22D2BBFE0();
  uint64_t v2 = *(int *)(type metadata accessor for PBPayload(0) + 20);
  if (qword_26853D3F0 != -1) {
    swift_once();
  }
  *(void *)(a1 + v2) = qword_2685439A0;
  return swift_retain();
}

uint64_t type metadata accessor for PBPayload(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685439D0);
}

uint64_t PBPayload.plaintext.setter(uint64_t a1)
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for PBPayload(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPayload._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v1 + v9) = sub_22D289964(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + v9);
  sub_22D289B1C(a1, (uint64_t)v8);
  uint64_t v12 = type metadata accessor for PBPlainText(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_22D289B80((uint64_t)v8, (uint64_t)v6);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  swift_retain();
  sub_22D289C14((uint64_t)v6, v13);
  swift_endAccess();
  return swift_release();
}

uint64_t PBPayload.plaintext.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for PBPayload(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  sub_22D289CA8(v6, (uint64_t)v5);
  uint64_t v7 = type metadata accessor for PBPlainText(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_22D289B1C((uint64_t)v5, a1);
  }
  sub_22D2BBFE0();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_26853CCF8 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_26853E130;
  swift_retain();
  return sub_22D289D3C((uint64_t)v5);
}

uint64_t PBPayload.signature.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for PBPayload(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPayload._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_22D289964(v6);
    swift_release();
  }
  uint64_t v7 = (uint64_t *)(*(void *)(v2 + v5)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  swift_beginAccess();
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  *uint64_t v7 = a1;
  v7[1] = a2;
  return sub_22CFF5630(v8, v9);
}

uint64_t sub_22D288A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for PBPayload(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  sub_22D289CA8(v7, (uint64_t)v6);
  uint64_t v8 = type metadata accessor for PBPlainText(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_22D289B1C((uint64_t)v6, a2);
  }
  sub_22D2BBFE0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_26853CCF8 != -1) {
    swift_once();
  }
  *(void *)(a2 + v9) = qword_26853E130;
  swift_retain();
  return sub_22D289D3C((uint64_t)v6);
}

uint64_t sub_22D288B94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PBPlainText(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D289DC8(a1, (uint64_t)v4);
  return PBPayload.plaintext.setter((uint64_t)v4);
}

void (*PBPayload.plaintext.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PBPlainText(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for PBPayload(0) + 20))
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  sub_22D289CA8(v10, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22D2BBFE0();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_26853CCF8 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_26853E130;
    swift_retain();
    sub_22D289D3C((uint64_t)v5);
  }
  else
  {
    sub_22D289B1C((uint64_t)v5, (uint64_t)v9);
  }
  return sub_22D288E0C;
}

void sub_22D288E0C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v4 = *(void **)(*(void *)a1 + 48);
  uint64_t v5 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    sub_22D289DC8((uint64_t)v4, (uint64_t)v3);
    PBPayload.plaintext.setter((uint64_t)v3);
    sub_22D289E2C((uint64_t)v4, type metadata accessor for PBPlainText);
  }
  else
  {
    PBPayload.plaintext.setter((uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

BOOL PBPayload.hasPlaintext.getter()
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - v2;
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for PBPayload(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  sub_22D289CA8(v4, (uint64_t)v3);
  uint64_t v5 = type metadata accessor for PBPlainText(0);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_22D289D3C((uint64_t)v3);
  return v6;
}

Swift::Void __swiftcall PBPayload.clearPlaintext()()
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = *(int *)(type metadata accessor for PBPayload(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPayload._StorageClass(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v0 + v4) = sub_22D289964(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = type metadata accessor for PBPlainText(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  uint64_t v8 = v6
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  swift_retain();
  sub_22D289C14((uint64_t)v3, v8);
  swift_endAccess();
  swift_release();
}

uint64_t PBPayload.signature.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PBPayload(0) + 20))
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  sub_22CFF9B64(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t sub_22D2891BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*(void *)(a1 + *(int *)(type metadata accessor for PBPayload(0) + 20))
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_22CFF9B64(v4, v5);
}

uint64_t sub_22D289224(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for PBPayload(0) + 20);
  sub_22CFF9B64(v3, v4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPayload._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(a2 + v5) = sub_22D289964(v6);
    swift_release();
  }
  uint64_t v7 = (uint64_t *)(*(void *)(a2 + v5)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  swift_beginAccess();
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  *uint64_t v7 = v3;
  v7[1] = v4;
  return sub_22CFF5630(v8, v9);
}

void (*PBPayload.signature.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for PBPayload(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_22CFF9B64(v6, v7);
  return sub_22D289388;
}

void sub_22D289388(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  unint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    sub_22CFF9B64(*(void *)(*a1 + 72), v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for PBPayload._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_22D289964(v7);
      swift_release();
    }
    uint64_t v8 = (uint64_t *)(*(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96))
                   + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
    swift_beginAccess();
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    *uint64_t v8 = v3;
    v8[1] = v4;
    sub_22CFF5630(v9, v10);
    uint64_t v11 = *(void *)(v2 + 72);
    unint64_t v12 = *(void *)(v2 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v2 + 96);
      uint64_t v14 = *(void *)(v2 + 88);
      type metadata accessor for PBPayload._StorageClass(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = sub_22D289964(v15);
      swift_release();
    }
    unint64_t v16 = (uint64_t *)(*(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96))
                    + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
    swift_beginAccess();
    uint64_t v11 = *v16;
    unint64_t v12 = v16[1];
    uint64_t *v16 = v3;
    v16[1] = v4;
  }
  sub_22CFF5630(v11, v12);
  free((void *)v2);
}

uint64_t PBPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22D2BBFF0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PBPayload.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_22D2BBFF0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*PBPayload.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t static PBPayload.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_22D289620()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543988);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543988);
  sub_22D28B29C(0, (unint64_t *)&qword_26853DB38, (uint64_t (*)(uint64_t))sub_22D018368, MEMORY[0x263F8E0F8]);
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0F10;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *uint64_t v6 = 1;
  *(void *)unint64_t v7 = "plaintext";
  *(void *)(v7 + 8) = 9;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  uint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 2;
  *(void *)uint64_t v11 = "signature";
  *((void *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26853D3E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22D2BC310();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_268543988);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_22D2898A8()
{
  type metadata accessor for PBPayload._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  uint64_t v2 = type metadata accessor for PBPlainText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  uint64_t result = sub_22D2BBFC0();
  *uint64_t v3 = result;
  v3[1] = v5;
  qword_2685439A0 = v0;
  return result;
}

uint64_t type metadata accessor for PBPayload._StorageClass(uint64_t a1)
{
  return sub_22D01234C(a1, (uint64_t *)&unk_2685439E0);
}

uint64_t sub_22D289964(uint64_t a1)
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - v4;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  uint64_t v7 = type metadata accessor for PBPlainText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (uint64_t *)(v1
                 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  *uint64_t v8 = sub_22D2BBFC0();
  v8[1] = v9;
  uint64_t v10 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  sub_22D289CA8(v10, (uint64_t)v5);
  swift_beginAccess();
  sub_22D289C14((uint64_t)v5, v6);
  swift_endAccess();
  uint64_t v11 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  swift_beginAccess();
  uint64_t v13 = *v11;
  unint64_t v12 = v11[1];
  sub_22CFF9B64(v13, v12);
  swift_release();
  swift_beginAccess();
  uint64_t v14 = *v8;
  unint64_t v15 = v8[1];
  *uint64_t v8 = v13;
  v8[1] = v12;
  sub_22CFF5630(v14, v15);
  return v1;
}

uint64_t sub_22D289B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBPlainText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D289B80(uint64_t a1, uint64_t a2)
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D289C14(uint64_t a1, uint64_t a2)
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D289CA8(uint64_t a1, uint64_t a2)
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D289D3C(uint64_t a1)
{
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D289DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBPlainText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D289E2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D289E8C()
{
  sub_22D289D3C(v0 + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext);
  sub_22CFF5630(*(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature), *(void *)(v0+ OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature+ 8));
  return swift_deallocClassInstance();
}

uint64_t PBPayload.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = *(int *)(type metadata accessor for PBPayload(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBPayload._StorageClass(0);
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_22D289964(v2);
    swift_release();
  }
  swift_retain();
  sub_22D289FD0();
  return swift_release();
}

uint64_t sub_22D289FD0()
{
  uint64_t result = sub_22D2BC080();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for PBPlainText(0);
        sub_22D28AE64(&qword_26853E158, (void (*)(uint64_t))type metadata accessor for PBPlainText);
        uint64_t v4 = v3;
        sub_22D2BC1A0();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_22D2BC080();
    }
    swift_beginAccess();
    uint64_t v4 = v3;
    sub_22D2BC110();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t PBPayload.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PBPayload(0);
  uint64_t v7 = swift_retain();
  sub_22D28A1C0(v7, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v3) {
    return sub_22D2BBFD0();
  }
  return result;
}

uint64_t sub_22D28A1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a4;
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v18[-v7];
  uint64_t v9 = type metadata accessor for PBPlainText(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  sub_22D289CA8(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_22D289D3C((uint64_t)v8);
  }
  else
  {
    sub_22D289B1C((uint64_t)v8, (uint64_t)v12);
    sub_22D28AE64(&qword_26853E158, (void (*)(uint64_t))type metadata accessor for PBPlainText);
    sub_22D2BC2E0();
    uint64_t result = sub_22D289E2C((uint64_t)v12, type metadata accessor for PBPlainText);
    if (v4) {
      return result;
    }
  }
  unint64_t v15 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];
  switch(v17 >> 62)
  {
    case 1uLL:
      if ((int)v16 != v16 >> 32) {
        goto LABEL_10;
      }
      break;
    case 2uLL:
      if (*(void *)(v16 + 16) != *(void *)(v16 + 24)) {
        goto LABEL_10;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((v17 & 0xFF000000000000) != 0)
      {
LABEL_10:
        sub_22CFF9B64(v16, v17);
        sub_22D2BC260();
        uint64_t result = sub_22CFF5630(v16, v17);
      }
      break;
  }
  return result;
}

uint64_t sub_22D28A4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBPlainText(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v33 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D28B208();
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D28B29C(0, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = a1
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  sub_22D289CA8(v17, (uint64_t)v16);
  uint64_t v18 = a2;
  uint64_t v19 = a2
      + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__plaintext;
  swift_beginAccess();
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_22D289CA8((uint64_t)v16, (uint64_t)v10);
  sub_22D289CA8(v19, v20);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) != 1)
  {
    sub_22D289CA8((uint64_t)v10, (uint64_t)v14);
    if (v21(v20, 1, v4) != 1)
    {
      uint64_t v22 = v33;
      sub_22D289B1C(v20, v33);
      swift_retain();
      swift_retain();
      char v23 = static PBPlainText.== infix(_:_:)((uint64_t)v14, v22);
      sub_22D289E2C(v22, type metadata accessor for PBPlainText);
      sub_22D289D3C((uint64_t)v16);
      sub_22D289E2C((uint64_t)v14, type metadata accessor for PBPlainText);
      sub_22D289D3C((uint64_t)v10);
      if (v23) {
        goto LABEL_8;
      }
LABEL_9:
      swift_release();
      swift_release();
      char v30 = 0;
      return v30 & 1;
    }
    swift_retain();
    swift_retain();
    sub_22D289D3C((uint64_t)v16);
    sub_22D289E2C((uint64_t)v14, type metadata accessor for PBPlainText);
LABEL_6:
    sub_22D289E2C((uint64_t)v10, (uint64_t (*)(void))sub_22D28B208);
    goto LABEL_9;
  }
  swift_retain();
  swift_retain();
  sub_22D289D3C((uint64_t)v16);
  if (v21(v20, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_22D289D3C((uint64_t)v10);
LABEL_8:
  uint64_t v24 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  swift_beginAccess();
  uint64_t v25 = *v24;
  unint64_t v26 = v24[1];
  uint64_t v27 = (uint64_t *)(v18
                  + OBJC_IVAR____TtCV19HealthRecordsDaemon9PBPayloadP33_573E1C6FBD718883057A9C9269C9449613_StorageClass__signature);
  swift_beginAccess();
  uint64_t v28 = *v27;
  unint64_t v29 = v27[1];
  sub_22CFF9B64(v25, v26);
  sub_22CFF9B64(v28, v29);
  char v30 = sub_22D1158DC(v25, v26, v28, v29);
  swift_release();
  swift_release();
  sub_22CFF5630(v28, v29);
  sub_22CFF5630(v25, v26);
  return v30 & 1;
}

uint64_t PBPayload.hashValue.getter()
{
  return sub_22D2BD760();
}

uint64_t sub_22D28A95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D2BBFE0();
  uint64_t v4 = *(int *)(a1 + 20);
  if (qword_26853D3F0 != -1) {
    swift_once();
  }
  *(void *)(a2 + v4) = qword_2685439A0;
  return swift_retain();
}

unint64_t sub_22D28A9D4()
{
  return 0xD000000000000022;
}

uint64_t sub_22D28A9F0()
{
  return PBPayload.decodeMessage<A>(decoder:)();
}

uint64_t sub_22D28AA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPayload.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_22D28AA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D28AE64(&qword_2685439F0, (void (*)(uint64_t))type metadata accessor for PBPayload);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_22D28AA9C@<X0>(uint64_t a1@<X8>)
{
  if (qword_26853D3E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22D2BC310();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_268543988);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_22D28AB44(uint64_t a1)
{
  uint64_t v2 = sub_22D28AE64(&qword_268542E78, (void (*)(uint64_t))type metadata accessor for PBPayload);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_22D28ABB0()
{
  sub_22D28AE64(&qword_268542E78, (void (*)(uint64_t))type metadata accessor for PBPayload);
  return sub_22D2BC200();
}

uint64_t _s19HealthRecordsDaemon9PBPayloadV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBFF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for PBPayload(0) + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void *)(a2 + v11);
  if (v12 == v13
    || (swift_retain(), swift_retain(), char v14 = sub_22D28A4AC(v12, v13), swift_release(), swift_release(), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
    sub_22D28AE64(&qword_26853DB30, MEMORY[0x263F50560]);
    char v16 = sub_22D2BCB90();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_22D28AE1C()
{
  return sub_22D28AE64(&qword_2685439C0, (void (*)(uint64_t))type metadata accessor for PBPayload);
}

uint64_t sub_22D28AE64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D28AEAC()
{
  return sub_22D28AE64(&qword_268542E78, (void (*)(uint64_t))type metadata accessor for PBPayload);
}

uint64_t sub_22D28AEF4()
{
  return sub_22D28AE64(&qword_2685439B8, (void (*)(uint64_t))type metadata accessor for PBPayload);
}

uint64_t sub_22D28AF3C()
{
  return sub_22D28AE64(&qword_2685439C8, (void (*)(uint64_t))type metadata accessor for PBPayload);
}

uint64_t getEnumTagSinglePayload for PBPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D28AFA8);
}

uint64_t sub_22D28AFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PBPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D28B07C);
}

uint64_t sub_22D28B07C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_22D2BBFF0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_22D28B138()
{
  return type metadata accessor for PBPayload._StorageClass(0);
}

void sub_22D28B140()
{
  sub_22D28B29C(319, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_22D28B208()
{
  if (!qword_2685439F8)
  {
    sub_22D28B29C(255, &qword_268542E68, type metadata accessor for PBPlainText, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2685439F8);
    }
  }
}

void sub_22D28B29C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D28B300()
{
  sub_22D28BB80(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v14[-1] - v2;
  sub_22D2BD1D0();
  uint64_t v4 = sub_22D2BBC30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC19HealthRecordsDaemonP33_BED11DFC9D090ABA600C4282F599AD2323ClinicalSharingDAIState_startTime;
  swift_beginAccess();
  sub_22D0C1C30((uint64_t)v3, v5);
  swift_endAccess();
  sub_22D2BD1E0();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22D2BC390();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AEC3C90);
  uint64_t v7 = sub_22D2BC380();
  os_log_type_t v8 = sub_22D2BD050();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v14[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = sub_22D2BD800();
    uint64_t v13 = sub_22D0A4D24(v11, v12, v14);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v7, v8, "%s finish() startTime is set to nil", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v10, -1, -1);
    MEMORY[0x230F7BDF0](v9, -1, -1);
  }
}

uint64_t sub_22D28B59C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D28BB80(0, (unint64_t *)&qword_26853DF08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  os_log_type_t v8 = (char *)&v29 - v7;
  sub_22D0C17C0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_22D2BC390();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
  swift_retain();
  uint64_t v15 = sub_22D2BC380();
  os_log_type_t v16 = sub_22D2BD050();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = v10;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v30 = swift_slowAlloc();
    id v31 = v13;
    uint64_t v36 = v30;
    uint64_t v32 = v8;
    uint64_t v33 = v6;
    *(_DWORD *)uint64_t v18 = 136315138;
    unint64_t v29 = v18 + 4;
    uint64_t v19 = a1;
    uint64_t v20 = v11;
    uint64_t v21 = v5;
    uint64_t v22 = *(void *)(v2 + 16);
    unint64_t v23 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    uint64_t v24 = v22;
    uint64_t v5 = v21;
    uint64_t v11 = v20;
    a1 = v19;
    uint64_t v35 = sub_22D0A4D24(v24, v23, &v36);
    os_log_type_t v8 = v32;
    sub_22D2BD220();
    swift_release();
    uint64_t v6 = v33;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v15, v16, "%s DAI is disabled (HK_ENABLE_OSLO_DAI=0), will not make DAI DocRef.", v18, 0xCu);
    uint64_t v25 = v30;
    swift_arrayDestroy();
    uint64_t v13 = v31;
    MEMORY[0x230F7BDF0](v25, -1, -1);
    unint64_t v26 = v18;
    uint64_t v10 = v34;
    MEMORY[0x230F7BDF0](v26, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v36 = a1;
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_22D2BC6B0();
  sub_22CFF49FC();
  sub_22D2BC680();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_22D28BBE4();
  uint64_t v27 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v27;
}

uint64_t sub_22D28B938()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  swift_bridgeObjectRelease();
  swift_release();
  sub_22D074520(*(void *)(v0 + 112));
  sub_22D074520(*(void *)(v0 + 128));
  sub_22D074520(*(void *)(v0 + 144));
  return v0;
}

uint64_t sub_22D28B9A0()
{
  sub_22D28B938();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalSharingDAIManager()
{
  return self;
}

uint64_t sub_22D28B9F8()
{
  sub_22D04BD5C(v0 + OBJC_IVAR____TtC19HealthRecordsDaemonP33_BED11DFC9D090ABA600C4282F599AD2323ClinicalSharingDAIState_startTime);
  return swift_deallocClassInstance();
}

uint64_t sub_22D28BA5C()
{
  return type metadata accessor for ClinicalSharingDAIState();
}

uint64_t type metadata accessor for ClinicalSharingDAIState()
{
  uint64_t result = qword_26AEC25A0;
  if (!qword_26AEC25A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22D28BAB0()
{
  sub_22D28BB80(319, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_22D28BB80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22D28BBE4()
{
  unint64_t result = qword_26853DF18;
  if (!qword_26853DF18)
  {
    sub_22D0C17C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26853DF18);
  }
  return result;
}

uint64_t PBDataType.rawValue.getter()
{
  return *(void *)v0;
}

unint64_t PBGranularity.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 7;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D28BC60@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBGranularity.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D28BC68(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1B9EE0();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D28BCB4()
{
  qword_268543A00 = (uint64_t)&unk_26E05B5C0;
}

uint64_t static PBGranularity.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D3F8);
}

uint64_t static PBGranularity.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D3F8, &qword_268543A00);
}

uint64_t (*static PBGranularity.allCases.modify())()
{
  if (qword_26853D3F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28BD98@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D3F8, &qword_268543A00, a1);
}

void PBDataType.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t PBDataType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 0x85;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D28BDEC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBDataType.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D28BDF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PBDataType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22D28BE1C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D0183D0();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

BOOL sub_22D28BE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D28CC3C(a1, a2, a3, a4, PBDataType.rawValue.getter);
}

void sub_22D28BE80()
{
  qword_268543A08 = (uint64_t)&unk_26E05B650;
}

uint64_t static PBDataType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D400);
}

uint64_t static PBDataType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D400, &qword_268543A08);
}

uint64_t (*static PBDataType.allCases.modify())()
{
  if (qword_26853D400 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22D28BF64@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D400, &qword_268543A08, a1);
}

unint64_t PBGlucoseMealTime.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_22D28BFA0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1B9F7C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D28BFEC()
{
  qword_268543A10 = (uint64_t)&unk_26E05BEC0;
}

uint64_t static PBGlucoseMealTime.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D408);
}

uint64_t static PBGlucoseMealTime.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D408, &qword_268543A10);
}

uint64_t (*static PBGlucoseMealTime.allCases.modify())()
{
  if (qword_26853D408 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28C0D0@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D408, &qword_268543A10, a1);
}

unint64_t PBSleepAnalysis.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 4;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D28C110@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBSleepAnalysis.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D28C118(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D084C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D28C164()
{
  qword_268543A18 = (uint64_t)&unk_26E05BF10;
}

uint64_t static PBSleepAnalysis.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D410);
}

uint64_t static PBSleepAnalysis.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D410, &qword_268543A18);
}

uint64_t (*static PBSleepAnalysis.allCases.modify())()
{
  if (qword_26853D410 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28C248@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D410, &qword_268543A18, a1);
}

uint64_t sub_22D28C26C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D0750();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D28C2B8()
{
  qword_268543A20 = (uint64_t)&unk_26E05BF70;
}

uint64_t static PBAppleWalkingSteadinessClassification.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D418);
}

uint64_t static PBAppleWalkingSteadinessClassification.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D418, &qword_268543A20);
}

uint64_t (*static PBAppleWalkingSteadinessClassification.allCases.modify())()
{
  if (qword_26853D418 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28C39C@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D418, &qword_268543A20, a1);
}

unint64_t PBAppleWalkingSteadinessEvent.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 5;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D28C3DC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBAppleWalkingSteadinessEvent.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D28C3E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D07A4();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D28C430()
{
  qword_268543A28 = (uint64_t)&unk_26E05BFD0;
}

uint64_t static PBAppleWalkingSteadinessEvent.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D420);
}

uint64_t static PBAppleWalkingSteadinessEvent.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D420, &qword_268543A28);
}

uint64_t (*static PBAppleWalkingSteadinessEvent.allCases.modify())()
{
  if (qword_26853D420 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28C514@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D420, &qword_268543A28, a1);
}

unint64_t PBCycleFactors.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 0xA;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D28C554@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBCycleFactors.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D28C55C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D07F8();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D28C5A8()
{
  qword_268543A30 = (uint64_t)&unk_26E05C040;
}

uint64_t static PBCycleFactors.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D428);
}

uint64_t static PBCycleFactors.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D428, &qword_268543A30);
}

uint64_t (*static PBCycleFactors.allCases.modify())()
{
  if (qword_26853D428 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28C68C@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D428, &qword_268543A30, a1);
}

unint64_t PBCycleSymptoms.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 0x17;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D28C6CC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBCycleSymptoms.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D28C6D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D0640();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D28C720()
{
  qword_268543A38 = (uint64_t)&unk_26E05C100;
}

uint64_t static PBCycleSymptoms.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D430);
}

uint64_t static PBCycleSymptoms.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D430, &qword_268543A38);
}

uint64_t (*static PBCycleSymptoms.allCases.modify())()
{
  if (qword_26853D430 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28C804@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D430, &qword_268543A38, a1);
}

unint64_t PBECGClassification.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = 7;
  if (result != 100) {
    uint64_t v2 = result;
  }
  if (result < 7) {
    uint64_t v2 = result;
  }
  *(void *)a2 = v2;
  BOOL v3 = result < 7 || result == 100;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t PBECGClassification.rawValue.getter()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_22D2D4A58[result];
  }
  return result;
}

uint64_t sub_22D28C880()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_22D2D4A58[result];
  }
  return result;
}

unint64_t sub_22D28C8A0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBECGClassification.init(rawValue:)(*a1, a2);
}

void sub_22D28C8A8(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8) == 1) {
    uint64_t v2 = qword_22D2D4A58[v2];
  }
  *a1 = v2;
}

uint64_t sub_22D28C8CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1B9FD0();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

BOOL sub_22D28C918(uint64_t a1, uint64_t a2)
{
  return sub_22D0B9338(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

void sub_22D28C934()
{
  qword_268543A40 = (uint64_t)&unk_26E05C290;
}

uint64_t static PBECGClassification.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D438);
}

uint64_t static PBECGClassification.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D438, &qword_268543A40);
}

uint64_t (*static PBECGClassification.allCases.modify())()
{
  if (qword_26853D438 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28CA18@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D438, &qword_268543A40, a1);
}

unint64_t PBClinicalType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 8;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D28CA58@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBClinicalType.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D28CA60(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D292F9C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_22D28CAAC()
{
  qword_268543A48 = (uint64_t)&unk_26E05C330;
}

uint64_t static PBClinicalType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D440);
}

uint64_t static PBClinicalType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D440, &qword_268543A48);
}

uint64_t (*static PBClinicalType.allCases.modify())()
{
  if (qword_26853D440 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28CB90@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D440, &qword_268543A48, a1);
}

unint64_t PBActivityType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 0x51;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_22D28CBD0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return PBActivityType.init(rawValue:)(*a1, a2);
}

uint64_t sub_22D28CBD8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22D1D0694();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

BOOL sub_22D28CC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22D28CC3C(a1, a2, a3, a4, (uint64_t (*)(void))PBActivityType.rawValue.getter);
}

BOOL sub_22D28CC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))a5)(a1, a2, a3, a4);
  return v6 == a5();
}

void sub_22D28CCB0()
{
  qword_268543A50 = (uint64_t)&unk_26E05C3D0;
}

uint64_t static PBActivityType.allCases.getter()
{
  return sub_22D0F6CC4(&qword_26853D448);
}

uint64_t static PBActivityType.allCases.setter(uint64_t a1)
{
  return sub_22D0F6D44(a1, &qword_26853D448, &qword_268543A50);
}

uint64_t (*static PBActivityType.allCases.modify())()
{
  if (qword_26853D448 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22D28CD94@<X0>(void *a1@<X8>)
{
  return sub_22D0F6E58(&qword_26853D448, &qword_268543A50, a1);
}

uint64_t sub_22D28CDB8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543A58);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543A58);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C0BB0;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "GRANULARITY_X";
  *(void *)(v7 + 8) = 13;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  uint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "HOURLY";
  *(void *)(v11 + 8) = 6;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  void *v12 = 2;
  *(void *)uint64_t v13 = "DAILY";
  *((void *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  void *v14 = 3;
  *(void *)uint64_t v15 = "WEEKLY";
  *((void *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  os_log_type_t v16 = (void *)(v6 + 4 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  void *v16 = 4;
  *(void *)uint64_t v17 = "MONTHLY";
  *((void *)v17 + 1) = 7;
  unsigned char v17[16] = 2;
  v10();
  uint64_t v18 = (void *)(v6 + 5 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 5;
  *(void *)uint64_t v19 = "ALL";
  *((void *)v19 + 1) = 3;
  v19[16] = 2;
  v10();
  uint64_t v20 = (void *)(v6 + 6 * v3);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 56);
  void *v20 = 6;
  *(void *)uint64_t v21 = "QUARTER_HOURLY";
  *((void *)v21 + 1) = 14;
  v21[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBGranularity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D450, (uint64_t)qword_268543A58, a1);
}

uint64_t sub_22D28D0C8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D450, (uint64_t)qword_268543A58, a1);
}

uint64_t sub_22D28D0EC()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543A70);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543A70);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v269 = swift_allocObject();
  *(_OWORD *)(v269 + 16) = xmmword_22D2D3660;
  unint64_t v5 = v269 + v4;
  unint64_t v6 = v269 + v4 + *(int *)(v2 + 56);
  *(void *)(v269 + v4) = 0;
  *(void *)unint64_t v6 = "DATA_TYPE_X";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v269 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "BODY_MASS_INDEX";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v269 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  void *v11 = 2;
  *(void *)uint64_t v12 = "BODY_FAT_PERCENTAGE";
  *((void *)v12 + 1) = 19;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v269 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  void *v13 = 3;
  *(void *)uint64_t v14 = "HEIGHT";
  *((void *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v269 + v4 + 4 * v3);
  os_log_type_t v16 = (char *)v15 + *(int *)(v2 + 56);
  void *v15 = 4;
  *(void *)os_log_type_t v16 = "BODY_MASS";
  *((void *)v16 + 1) = 9;
  unsigned char v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v269 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)uint64_t v18 = "LEAN_BODY_MASS";
  *((void *)v18 + 1) = 14;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v269 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)uint64_t v20 = "WAIST_CIRCUMFERENCE";
  *((void *)v20 + 1) = 19;
  unsigned char v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v269 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)uint64_t v22 = "STEP_COUNT";
  *((void *)v22 + 1) = 10;
  unsigned char v22[16] = 2;
  v9();
  uint64_t v23 = v269 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "DISTANCE_WALKING_RUNNING";
  *(void *)(v23 + 8) = 24;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v269 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)uint64_t v25 = "DISTANCE_CYCLING";
  *((void *)v25 + 1) = 16;
  unsigned char v25[16] = 2;
  v9();
  unint64_t v26 = (void *)(v269 + v4 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 10;
  *(void *)uint64_t v27 = "DISTANCE_WHEELCHAIR";
  *((void *)v27 + 1) = 19;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v269 + v4 + 11 * v3);
  unint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 11;
  *(void *)unint64_t v29 = "BASAL_ENERGY_BURNED";
  *((void *)v29 + 1) = 19;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v269 + v4 + 12 * v3);
  id v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 12;
  *(void *)id v31 = "ACTIVE_ENERGY_BURNED";
  *((void *)v31 + 1) = 20;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v269 + v4 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 13;
  *(void *)uint64_t v33 = "FLIGHTS_CLIMBED";
  *((void *)v33 + 1) = 15;
  v33[16] = 2;
  v9();
  uint64_t v34 = (void *)(v269 + v4 + 14 * v3);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 14;
  *(void *)uint64_t v35 = "NIKE_FUEL";
  *((void *)v35 + 1) = 9;
  v35[16] = 2;
  v9();
  uint64_t v36 = (void *)(v269 + v4 + 15 * v3);
  uint64_t v37 = (char *)v36 + *(int *)(v2 + 56);
  void *v36 = 15;
  *(void *)uint64_t v37 = "APPLE_EXERCISE_TIME";
  *((void *)v37 + 1) = 19;
  char v37[16] = 2;
  v9();
  uint64_t v38 = v269 + v4 + 16 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 16 * v3) = 16;
  *(void *)uint64_t v38 = "PUSH_COUNT";
  *(void *)(v38 + 8) = 10;
  *(unsigned char *)(v38 + 16) = 2;
  v9();
  uint64_t v39 = (void *)(v269 + v4 + 17 * v3);
  uint64_t v40 = (char *)v39 + *(int *)(v2 + 56);
  void *v39 = 17;
  *(void *)uint64_t v40 = "DISTANCE_SWIMMING";
  *((void *)v40 + 1) = 17;
  v40[16] = 2;
  v9();
  uint64_t v41 = (void *)(v269 + v4 + 18 * v3);
  uint64_t v42 = (char *)v41 + *(int *)(v2 + 56);
  *uint64_t v41 = 18;
  *(void *)uint64_t v42 = "SWIMMING_STROKE_COUNT";
  *((void *)v42 + 1) = 21;
  v42[16] = 2;
  v9();
  char v43 = (void *)(v269 + v4 + 19 * v3);
  unint64_t v44 = (char *)v43 + *(int *)(v2 + 56);
  void *v43 = 19;
  *(void *)unint64_t v44 = "VO2_MAX";
  *((void *)v44 + 1) = 7;
  v44[16] = 2;
  v9();
  uint64_t v45 = (void *)(v269 + v4 + 20 * v3);
  BOOL v46 = (char *)v45 + *(int *)(v2 + 56);
  void *v45 = 20;
  *(void *)BOOL v46 = "DISTANCE_DOWNHILL_SNOW_SPORTS";
  *((void *)v46 + 1) = 29;
  v46[16] = 2;
  v9();
  uint64_t v47 = (void *)(v269 + v4 + 21 * v3);
  char v48 = (char *)v47 + *(int *)(v2 + 56);
  *uint64_t v47 = 21;
  *(void *)char v48 = "APPLE_STAND_TIME";
  *((void *)v48 + 1) = 16;
  v48[16] = 2;
  v9();
  unint64_t v49 = (void *)(v269 + v4 + 22 * v3);
  char v50 = (char *)v49 + *(int *)(v2 + 56);
  void *v49 = 22;
  *(void *)char v50 = "BODY_TEMPERATURE";
  *((void *)v50 + 1) = 16;
  v50[16] = 2;
  v9();
  uint64_t v51 = (void *)(v269 + v4 + 23 * v3);
  uint64_t v52 = (char *)v51 + *(int *)(v2 + 56);
  *uint64_t v51 = 23;
  *(void *)uint64_t v52 = "BASAL_BODY_TEMPERATURE";
  *((void *)v52 + 1) = 22;
  v52[16] = 2;
  v9();
  uint64_t v53 = (void *)(v269 + v4 + 24 * v3);
  uint64_t v54 = (char *)v53 + *(int *)(v2 + 56);
  *uint64_t v53 = 24;
  *(void *)uint64_t v54 = "OXYGEN_SATURATION";
  *((void *)v54 + 1) = 17;
  v54[16] = 2;
  v9();
  uint64_t v55 = (void *)(v269 + v4 + 25 * v3);
  uint64_t v56 = (char *)v55 + *(int *)(v2 + 56);
  *uint64_t v55 = 25;
  *(void *)uint64_t v56 = "PERIPHERAL_PERFUSION_INDEX";
  *((void *)v56 + 1) = 26;
  v56[16] = 2;
  v9();
  uint64_t v57 = (void *)(v269 + v4 + 26 * v3);
  uint64_t v58 = (char *)v57 + *(int *)(v2 + 56);
  *uint64_t v57 = 26;
  *(void *)uint64_t v58 = "ELECTRODERMAL_ACTIVITY";
  *((void *)v58 + 1) = 22;
  char v58[16] = 2;
  v9();
  uint64_t v59 = (void *)(v269 + v4 + 27 * v3);
  uint64_t v60 = (char *)v59 + *(int *)(v2 + 56);
  *uint64_t v59 = 27;
  *(void *)uint64_t v60 = "BLOOD_PRESSURE_SYSTOLIC";
  *((void *)v60 + 1) = 23;
  v60[16] = 2;
  v9();
  id v61 = (void *)(v269 + v4 + 28 * v3);
  uint64_t v62 = (char *)v61 + *(int *)(v2 + 56);
  *id v61 = 28;
  *(void *)uint64_t v62 = "BLOOD_PRESSURE_DIASTOLIC";
  *((void *)v62 + 1) = 24;
  v62[16] = 2;
  v9();
  uint64_t v63 = (void *)(v269 + v4 + 29 * v3);
  unint64_t v64 = (char *)v63 + *(int *)(v2 + 56);
  *uint64_t v63 = 29;
  *(void *)unint64_t v64 = "BLOOD_ALCOHOL_CONTENT";
  *((void *)v64 + 1) = 21;
  v64[16] = 2;
  v9();
  id v65 = (void *)(v269 + v4 + 30 * v3);
  uint64_t v66 = (char *)v65 + *(int *)(v2 + 56);
  *id v65 = 30;
  *(void *)uint64_t v66 = "BLOOD_GLUCOSE";
  *((void *)v66 + 1) = 13;
  v66[16] = 2;
  v9();
  uint64_t v67 = (void *)(v269 + v4 + 31 * v3);
  id v68 = (char *)v67 + *(int *)(v2 + 56);
  *uint64_t v67 = 31;
  *(void *)id v68 = "INSULIN_DELIVERY";
  *((void *)v68 + 1) = 16;
  v68[16] = 2;
  v9();
  uint64_t v69 = v269 + v4 + 32 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 32 * v3) = 32;
  *(void *)uint64_t v69 = "HEART_RATE";
  *(void *)(v69 + 8) = 10;
  *(unsigned char *)(v69 + 16) = 2;
  v9();
  uint64_t v70 = (void *)(v269 + v4 + 33 * v3);
  uint64_t v71 = (char *)v70 + *(int *)(v2 + 56);
  *uint64_t v70 = 33;
  *(void *)uint64_t v71 = "RESPIRATORY_RATE";
  *((void *)v71 + 1) = 16;
  v71[16] = 2;
  v9();
  uint64_t v72 = (void *)(v269 + v4 + 34 * v3);
  uint64_t v73 = (char *)v72 + *(int *)(v2 + 56);
  *uint64_t v72 = 34;
  *(void *)uint64_t v73 = "RESTING_HEART_RATE";
  *((void *)v73 + 1) = 18;
  v73[16] = 2;
  v9();
  uint64_t v74 = (void *)(v269 + v4 + 35 * v3);
  uint64_t v75 = (char *)v74 + *(int *)(v2 + 56);
  *uint64_t v74 = 35;
  *(void *)uint64_t v75 = "WALKING_HEART_RATE_AVERAGE";
  *((void *)v75 + 1) = 26;
  v75[16] = 2;
  v9();
  uint64_t v76 = (void *)(v269 + v4 + 36 * v3);
  uint64_t v77 = (char *)v76 + *(int *)(v2 + 56);
  *uint64_t v76 = 36;
  *(void *)uint64_t v77 = "HEART_RATE_VARIABILITY_S_D_N_N";
  *((void *)v77 + 1) = 30;
  v77[16] = 2;
  v9();
  uint64_t v78 = (void *)(v269 + v4 + 37 * v3);
  unint64_t v79 = (char *)v78 + *(int *)(v2 + 56);
  *uint64_t v78 = 37;
  *(void *)unint64_t v79 = "INHALER_USAGE";
  *((void *)v79 + 1) = 13;
  v79[16] = 2;
  v9();
  unint64_t v80 = (void *)(v269 + v4 + 38 * v3);
  uint64_t v81 = (char *)v80 + *(int *)(v2 + 56);
  *unint64_t v80 = 38;
  *(void *)uint64_t v81 = "FORCED_VITAL_CAPACITY";
  *((void *)v81 + 1) = 21;
  v81[16] = 2;
  v9();
  unint64_t v82 = (void *)(v269 + v4 + 39 * v3);
  uint64_t v83 = (char *)v82 + *(int *)(v2 + 56);
  *unint64_t v82 = 39;
  *(void *)uint64_t v83 = "FORCED_EXPIRATORY_VOLUME1";
  *((void *)v83 + 1) = 25;
  v83[16] = 2;
  v9();
  uint64_t v84 = (void *)(v269 + v4 + 40 * v3);
  uint64_t v85 = (char *)v84 + *(int *)(v2 + 56);
  void *v84 = 40;
  *(void *)uint64_t v85 = "PEAK_EXPIRATORY_FLOW_RATE";
  *((void *)v85 + 1) = 25;
  v85[16] = 2;
  v9();
  uint64_t v86 = (void *)(v269 + v4 + 41 * v3);
  unint64_t v87 = (char *)v86 + *(int *)(v2 + 56);
  *uint64_t v86 = 41;
  *(void *)unint64_t v87 = "ENVIRONMENTAL_AUDIO_EXPOSURE";
  *((void *)v87 + 1) = 28;
  v87[16] = 2;
  v9();
  unint64_t v88 = (void *)(v269 + v4 + 42 * v3);
  uint64_t v89 = (char *)v88 + *(int *)(v2 + 56);
  *unint64_t v88 = 42;
  *(void *)uint64_t v89 = "HEADPHONE_AUDIO_EXPOSURE";
  *((void *)v89 + 1) = 24;
  v89[16] = 2;
  v9();
  uint64_t v90 = (void *)(v269 + v4 + 43 * v3);
  uint64_t v91 = (char *)v90 + *(int *)(v2 + 56);
  *uint64_t v90 = 43;
  *(void *)uint64_t v91 = "DIETARY_FAT_TOTAL";
  *((void *)v91 + 1) = 17;
  v91[16] = 2;
  v9();
  uint64_t v92 = (void *)(v269 + v4 + 44 * v3);
  uint64_t v93 = (char *)v92 + *(int *)(v2 + 56);
  void *v92 = 44;
  *(void *)uint64_t v93 = "DIETARY_FAT_POLYUNSATURATED";
  *((void *)v93 + 1) = 27;
  v93[16] = 2;
  v9();
  unint64_t v94 = (void *)(v269 + v4 + 45 * v3);
  unint64_t v95 = (char *)v94 + *(int *)(v2 + 56);
  *unint64_t v94 = 45;
  *(void *)unint64_t v95 = "DIETARY_FAT_MONOUNSATURATED";
  *((void *)v95 + 1) = 27;
  v95[16] = 2;
  v9();
  uint64_t v96 = (void *)(v269 + v4 + 46 * v3);
  uint64_t v97 = (char *)v96 + *(int *)(v2 + 56);
  *uint64_t v96 = 46;
  *(void *)uint64_t v97 = "DIETARY_FAT_SATURATED";
  *((void *)v97 + 1) = 21;
  v97[16] = 2;
  v9();
  uint64_t v98 = (void *)(v269 + v4 + 47 * v3);
  id v99 = (char *)v98 + *(int *)(v2 + 56);
  *uint64_t v98 = 47;
  *(void *)id v99 = "DIETARY_CHOLESTEROL";
  *((void *)v99 + 1) = 19;
  v99[16] = 2;
  v9();
  uint64_t v100 = (void *)(v269 + v4 + 48 * v3);
  uint64_t v101 = (char *)v100 + *(int *)(v2 + 56);
  *uint64_t v100 = 48;
  *(void *)uint64_t v101 = "DIETARY_SODIUM";
  *((void *)v101 + 1) = 14;
  v101[16] = 2;
  v9();
  unint64_t v102 = (void *)(v269 + v4 + 49 * v3);
  unint64_t v103 = (char *)v102 + *(int *)(v2 + 56);
  *unint64_t v102 = 49;
  *(void *)unint64_t v103 = "DIETARY_CARBOHYDRATES";
  *((void *)v103 + 1) = 21;
  v103[16] = 2;
  v9();
  uint64_t v104 = (void *)(v269 + v4 + 50 * v3);
  uint64_t v105 = (char *)v104 + *(int *)(v2 + 56);
  void *v104 = 50;
  *(void *)uint64_t v105 = "DIETARY_FIBER";
  *((void *)v105 + 1) = 13;
  v105[16] = 2;
  v9();
  char v106 = (void *)(v269 + v4 + 51 * v3);
  id v107 = (char *)v106 + *(int *)(v2 + 56);
  void *v106 = 51;
  *(void *)id v107 = "DIETARY_SUGAR";
  *((void *)v107 + 1) = 13;
  v107[16] = 2;
  v9();
  id v108 = (void *)(v269 + v4 + 52 * v3);
  uint64_t v109 = (char *)v108 + *(int *)(v2 + 56);
  *id v108 = 52;
  *(void *)uint64_t v109 = "DIETARY_ENERGY_CONSUMED";
  *((void *)v109 + 1) = 23;
  v109[16] = 2;
  v9();
  id v110 = (void *)(v269 + v4 + 53 * v3);
  uint64_t v111 = (char *)v110 + *(int *)(v2 + 56);
  *id v110 = 53;
  *(void *)uint64_t v111 = "DIETARY_PROTEIN";
  *((void *)v111 + 1) = 15;
  v111[16] = 2;
  v9();
  uint64_t v112 = (void *)(v269 + v4 + 54 * v3);
  uint64_t v113 = (char *)v112 + *(int *)(v2 + 56);
  void *v112 = 54;
  *(void *)uint64_t v113 = "DIETARY_VITAMIN_A";
  *((void *)v113 + 1) = 17;
  v113[16] = 2;
  v9();
  uint64_t v114 = (void *)(v269 + v4 + 55 * v3);
  id v115 = (char *)v114 + *(int *)(v2 + 56);
  *uint64_t v114 = 55;
  *(void *)id v115 = "DIETARY_VITAMIN_B6";
  *((void *)v115 + 1) = 18;
  v115[16] = 2;
  v9();
  char v116 = (void *)(v269 + v4 + 56 * v3);
  uint64_t v117 = (char *)v116 + *(int *)(v2 + 56);
  *char v116 = 56;
  *(void *)uint64_t v117 = "DIETARY_VITAMIN_B12";
  *((void *)v117 + 1) = 19;
  v117[16] = 2;
  v9();
  unint64_t v118 = (void *)(v269 + v4 + 57 * v3);
  unint64_t v119 = (char *)v118 + *(int *)(v2 + 56);
  *unint64_t v118 = 57;
  *(void *)unint64_t v119 = "DIETARY_VITAMIN_C";
  *((void *)v119 + 1) = 17;
  v119[16] = 2;
  v9();
  uint64_t v120 = (void *)(v269 + v4 + 58 * v3);
  uint64_t v121 = (char *)v120 + *(int *)(v2 + 56);
  *uint64_t v120 = 58;
  *(void *)uint64_t v121 = "DIETARY_VITAMIN_D";
  *((void *)v121 + 1) = 17;
  v121[16] = 2;
  v9();
  uint64_t v122 = (void *)(v269 + v4 + 59 * v3);
  id v123 = (char *)v122 + *(int *)(v2 + 56);
  *uint64_t v122 = 59;
  *(void *)id v123 = "DIETARY_VITAMIN_E";
  *((void *)v123 + 1) = 17;
  v123[16] = 2;
  v9();
  unint64_t v124 = (void *)(v269 + v4 + 60 * v3);
  unint64_t v125 = (char *)v124 + *(int *)(v2 + 56);
  *unint64_t v124 = 60;
  *(void *)unint64_t v125 = "DIETARY_VITAMIN_K";
  *((void *)v125 + 1) = 17;
  v125[16] = 2;
  v9();
  id v126 = (void *)(v269 + v4 + 61 * v3);
  id v127 = (char *)v126 + *(int *)(v2 + 56);
  *id v126 = 61;
  *(void *)id v127 = "DIETARY_CALCIUM";
  *((void *)v127 + 1) = 15;
  v127[16] = 2;
  v9();
  uint64_t v128 = (void *)(v269 + v4 + 62 * v3);
  uint64_t v129 = (char *)v128 + *(int *)(v2 + 56);
  void *v128 = 62;
  *(void *)uint64_t v129 = "DIETARY_IRON";
  *((void *)v129 + 1) = 12;
  v129[16] = 2;
  v9();
  uint64_t v130 = (void *)(v269 + v4 + 63 * v3);
  uint64_t v131 = (char *)v130 + *(int *)(v2 + 56);
  *uint64_t v130 = 63;
  *(void *)uint64_t v131 = "DIETARY_THIAMIN";
  *((void *)v131 + 1) = 15;
  v131[16] = 2;
  v9();
  unint64_t v132 = v269 + v4 + (v3 << 6) + *(int *)(v2 + 56);
  *(void *)(v5 + (v3 << 6)) = 64;
  *(void *)unint64_t v132 = "DIETARY_RIBOFLAVIN";
  *(void *)(v132 + 8) = 18;
  *(unsigned char *)(v132 + 16) = 2;
  v9();
  uint64_t v133 = (void *)(v269 + v4 + 65 * v3);
  id v134 = (char *)v133 + *(int *)(v2 + 56);
  *uint64_t v133 = 65;
  *(void *)id v134 = "DIETARY_NIACIN";
  *((void *)v134 + 1) = 14;
  v134[16] = 2;
  v9();
  id v135 = (void *)(v269 + v4 + 66 * v3);
  id v136 = (char *)v135 + *(int *)(v2 + 56);
  *id v135 = 66;
  *(void *)id v136 = "DIETARY_FOLATE";
  *((void *)v136 + 1) = 14;
  v136[16] = 2;
  v9();
  uint64_t v137 = (void *)(v269 + v4 + 67 * v3);
  uint64_t v138 = (char *)v137 + *(int *)(v2 + 56);
  *uint64_t v137 = 67;
  *(void *)uint64_t v138 = "DIETARY_BIOTIN";
  *((void *)v138 + 1) = 14;
  v138[16] = 2;
  v9();
  id v139 = (void *)(v269 + v4 + 68 * v3);
  uint64_t v140 = (char *)v139 + *(int *)(v2 + 56);
  *id v139 = 68;
  *(void *)uint64_t v140 = "DIETARY_PANTOTHENIC_ACID";
  *((void *)v140 + 1) = 24;
  v140[16] = 2;
  v9();
  uint64_t v141 = (void *)(v269 + v4 + 69 * v3);
  uint64_t v142 = (char *)v141 + *(int *)(v2 + 56);
  *uint64_t v141 = 69;
  *(void *)uint64_t v142 = "DIETARY_PHOSPHORUS";
  *((void *)v142 + 1) = 18;
  v142[16] = 2;
  v9();
  uint64_t v143 = (void *)(v269 + v4 + 70 * v3);
  uint64_t v144 = (char *)v143 + *(int *)(v2 + 56);
  *uint64_t v143 = 70;
  *(void *)uint64_t v144 = "DIETARY_IODINE";
  *((void *)v144 + 1) = 14;
  v144[16] = 2;
  v9();
  id v145 = (void *)(v269 + v4 + 71 * v3);
  id v146 = (char *)v145 + *(int *)(v2 + 56);
  *id v145 = 71;
  *(void *)id v146 = "DIETARY_MAGNESIUM";
  *((void *)v146 + 1) = 17;
  v146[16] = 2;
  v9();
  unint64_t v147 = (void *)(v269 + v4 + 72 * v3);
  id v148 = (char *)v147 + *(int *)(v2 + 56);
  *unint64_t v147 = 72;
  *(void *)id v148 = "DIETARY_ZINC";
  *((void *)v148 + 1) = 12;
  v148[16] = 2;
  v9();
  uint64_t v149 = (void *)(v269 + v4 + 73 * v3);
  unint64_t v150 = (char *)v149 + *(int *)(v2 + 56);
  *uint64_t v149 = 73;
  *(void *)unint64_t v150 = "DIETARY_SELENIUM";
  *((void *)v150 + 1) = 16;
  v150[16] = 2;
  v9();
  unint64_t v151 = (void *)(v269 + v4 + 74 * v3);
  uint64_t v152 = (char *)v151 + *(int *)(v2 + 56);
  void *v151 = 74;
  *(void *)uint64_t v152 = "DIETARY_COPPER";
  *((void *)v152 + 1) = 14;
  v152[16] = 2;
  v9();
  uint64_t v153 = (void *)(v269 + v4 + 75 * v3);
  uint64_t v154 = (char *)v153 + *(int *)(v2 + 56);
  *uint64_t v153 = 75;
  *(void *)uint64_t v154 = "DIETARY_MANGANESE";
  *((void *)v154 + 1) = 17;
  v154[16] = 2;
  v9();
  uint64_t v155 = (void *)(v269 + v4 + 76 * v3);
  uint64_t v156 = (char *)v155 + *(int *)(v2 + 56);
  void *v155 = 76;
  *(void *)uint64_t v156 = "DIETARY_CHROMIUM";
  *((void *)v156 + 1) = 16;
  v156[16] = 2;
  v9();
  id v157 = (void *)(v269 + v4 + 77 * v3);
  id v158 = (char *)v157 + *(int *)(v2 + 56);
  *id v157 = 77;
  *(void *)id v158 = "DIETARY_MOLYBDENUM";
  *((void *)v158 + 1) = 18;
  v158[16] = 2;
  v9();
  unint64_t v159 = (void *)(v269 + v4 + 78 * v3);
  unint64_t v160 = (char *)v159 + *(int *)(v2 + 56);
  *unint64_t v159 = 78;
  *(void *)unint64_t v160 = "DIETARY_CHLORIDE";
  *((void *)v160 + 1) = 16;
  v160[16] = 2;
  v9();
  uint64_t v161 = (void *)(v269 + v4 + 79 * v3);
  uint64_t v162 = (char *)v161 + *(int *)(v2 + 56);
  *uint64_t v161 = 79;
  *(void *)uint64_t v162 = "DIETARY_POTASSIUM";
  *((void *)v162 + 1) = 17;
  v162[16] = 2;
  v9();
  uint64_t v163 = (void *)(v269 + v4 + 80 * v3);
  unint64_t v164 = (char *)v163 + *(int *)(v2 + 56);
  void *v163 = 80;
  *(void *)unint64_t v164 = "DIETARY_CAFFEINE";
  *((void *)v164 + 1) = 16;
  v164[16] = 2;
  v9();
  unint64_t v165 = (void *)(v269 + v4 + 81 * v3);
  uint64_t v166 = (char *)v165 + *(int *)(v2 + 56);
  *unint64_t v165 = 81;
  *(void *)uint64_t v166 = "DIETARY_WATER";
  *((void *)v166 + 1) = 13;
  v166[16] = 2;
  v9();
  id v167 = (void *)(v269 + v4 + 82 * v3);
  id v168 = (char *)v167 + *(int *)(v2 + 56);
  *id v167 = 82;
  *(void *)id v168 = "UV_EXPOSURE";
  *((void *)v168 + 1) = 11;
  char v168[16] = 2;
  v9();
  v169 = (void *)(v269 + v4 + 83 * v3);
  id v170 = (char *)v169 + *(int *)(v2 + 56);
  void *v169 = 83;
  *(void *)id v170 = "NUMBER_OF_TIMES_FALLEN";
  *((void *)v170 + 1) = 22;
  v170[16] = 2;
  v9();
  id v171 = (void *)(v269 + v4 + 84 * v3);
  uint64_t v172 = (char *)v171 + *(int *)(v2 + 56);
  *id v171 = 84;
  *(void *)uint64_t v172 = "SLEEP_ANALYSIS";
  *((void *)v172 + 1) = 14;
  v172[16] = 2;
  v9();
  uint64_t v173 = (void *)(v269 + v4 + 85 * v3);
  uint64_t v174 = (char *)v173 + *(int *)(v2 + 56);
  *uint64_t v173 = 85;
  *(void *)uint64_t v174 = "APPLE_STAND_HOUR";
  *((void *)v174 + 1) = 16;
  v174[16] = 2;
  v9();
  uint64_t v175 = (void *)(v269 + v4 + 86 * v3);
  uint64_t v176 = (char *)v175 + *(int *)(v2 + 56);
  *uint64_t v175 = 86;
  *(void *)uint64_t v176 = "CERVICAL_MUCUS_QUALITY";
  *((void *)v176 + 1) = 22;
  v176[16] = 2;
  v9();
  uint64_t v177 = (void *)(v269 + v4 + 87 * v3);
  id v178 = (char *)v177 + *(int *)(v2 + 56);
  *uint64_t v177 = 87;
  *(void *)id v178 = "MENSTRUAL_FLOW";
  *((void *)v178 + 1) = 14;
  v178[16] = 2;
  v9();
  uint64_t v179 = (void *)(v269 + v4 + 88 * v3);
  id v180 = (char *)v179 + *(int *)(v2 + 56);
  *uint64_t v179 = 88;
  *(void *)id v180 = "INTERMENSTRUAL_BLEEDING";
  *((void *)v180 + 1) = 23;
  v180[16] = 2;
  v9();
  id v181 = (void *)(v269 + v4 + 89 * v3);
  char v182 = (char *)v181 + *(int *)(v2 + 56);
  *id v181 = 89;
  *(void *)char v182 = "OVULATION_TEST_RESULT";
  *((void *)v182 + 1) = 21;
  v182[16] = 2;
  v9();
  uint64_t v183 = (void *)(v269 + v4 + 90 * v3);
  uint64_t v184 = (char *)v183 + *(int *)(v2 + 56);
  *uint64_t v183 = 90;
  *(void *)uint64_t v184 = "SEXUAL_ACTIVITY";
  *((void *)v184 + 1) = 15;
  v184[16] = 2;
  v9();
  uint64_t v185 = (void *)(v269 + v4 + 91 * v3);
  uint64_t v186 = (char *)v185 + *(int *)(v2 + 56);
  *uint64_t v185 = 91;
  *(void *)uint64_t v186 = "MINDFUL_SESSION";
  *((void *)v186 + 1) = 15;
  v186[16] = 2;
  v9();
  uint64_t v187 = (void *)(v269 + v4 + 92 * v3);
  id v188 = (char *)v187 + *(int *)(v2 + 56);
  *uint64_t v187 = 92;
  *(void *)id v188 = "HIGH_HEART_RATE_EVENT";
  *((void *)v188 + 1) = 21;
  v188[16] = 2;
  v9();
  id v189 = (void *)(v269 + v4 + 93 * v3);
  v190 = (char *)v189 + *(int *)(v2 + 56);
  void *v189 = 93;
  *(void *)v190 = "LOW_HEART_RATE_EVENT";
  *((void *)v190 + 1) = 20;
  v190[16] = 2;
  v9();
  uint64_t v191 = (void *)(v269 + v4 + 94 * v3);
  uint64_t v192 = (char *)v191 + *(int *)(v2 + 56);
  *uint64_t v191 = 94;
  *(void *)uint64_t v192 = "IRREGULAR_HEART_RHYTHM_EVENT";
  *((void *)v192 + 1) = 28;
  v192[16] = 2;
  v9();
  uint64_t v193 = (void *)(v269 + v4 + 95 * v3);
  uint64_t v194 = (char *)v193 + *(int *)(v2 + 56);
  *uint64_t v193 = 95;
  *(void *)uint64_t v194 = "AUDIO_EXPOSURE_EVENT";
  *((void *)v194 + 1) = 20;
  v194[16] = 2;
  v9();
  id v195 = (void *)(v269 + v4 + 96 * v3);
  id v196 = (char *)v195 + *(int *)(v2 + 56);
  *id v195 = 96;
  *(void *)id v196 = "TOOTHBRUSHING_EVENT";
  *((void *)v196 + 1) = 19;
  v196[16] = 2;
  v9();
  char v197 = (void *)(v269 + v4 + 97 * v3);
  uint64_t v198 = (char *)v197 + *(int *)(v2 + 56);
  *char v197 = 97;
  *(void *)uint64_t v198 = "ECG";
  *((void *)v198 + 1) = 3;
  v198[16] = 2;
  v9();
  char v199 = (void *)(v269 + v4 + 98 * v3);
  uint64_t v200 = (char *)v199 + *(int *)(v2 + 56);
  *char v199 = 98;
  *(void *)uint64_t v200 = "WORKOUT";
  *((void *)v200 + 1) = 7;
  v200[16] = 2;
  v9();
  unint64_t v201 = (void *)(v269 + v4 + 99 * v3);
  uint64_t v202 = (char *)v201 + *(int *)(v2 + 56);
  *unint64_t v201 = 99;
  *(void *)uint64_t v202 = "ALLERGY_TYPE";
  *((void *)v202 + 1) = 12;
  v202[16] = 2;
  v9();
  uint64_t v203 = (void *)(v269 + v4 + 100 * v3);
  uint64_t v204 = (char *)v203 + *(int *)(v2 + 56);
  *uint64_t v203 = 100;
  *(void *)uint64_t v204 = "CONDITION_TYPE";
  *((void *)v204 + 1) = 14;
  v204[16] = 2;
  v9();
  uint64_t v205 = (void *)(v269 + v4 + 101 * v3);
  uint64_t v206 = (char *)v205 + *(int *)(v2 + 56);
  void *v205 = 101;
  *(void *)uint64_t v206 = 0x22D2E0000;
  *((void *)v206 + 1) = 17;
  v206[16] = 2;
  v9();
  uint64_t v207 = (void *)(v269 + v4 + 102 * v3);
  uint64_t v208 = (char *)v207 + *(int *)(v2 + 56);
  *uint64_t v207 = 102;
  *(void *)uint64_t v208 = "LAB_TYPE";
  *((void *)v208 + 1) = 8;
  v208[16] = 2;
  v9();
  uint64_t v209 = (void *)(v269 + v4 + 103 * v3);
  v210 = (char *)v209 + *(int *)(v2 + 56);
  *uint64_t v209 = 103;
  *(void *)v210 = "MEDICATION_TYPE";
  *((void *)v210 + 1) = 15;
  v210[16] = 2;
  v9();
  uint64_t v211 = (void *)(v269 + v4 + 104 * v3);
  uint64_t v212 = (char *)v211 + *(int *)(v2 + 56);
  *uint64_t v211 = 104;
  *(void *)uint64_t v212 = "PROCEDURE_TYPE";
  *((void *)v212 + 1) = 14;
  v212[16] = 2;
  v9();
  uint64_t v213 = (void *)(v269 + v4 + 105 * v3);
  uint64_t v214 = (char *)v213 + *(int *)(v2 + 56);
  *uint64_t v213 = 105;
  *(void *)uint64_t v214 = "VITAL_RECORD";
  *((void *)v214 + 1) = 12;
  v214[16] = 2;
  v9();
  uint64_t v215 = (void *)(v269 + v4 + 106 * v3);
  uint64_t v216 = (char *)v215 + *(int *)(v2 + 56);
  *uint64_t v215 = 106;
  *(void *)uint64_t v216 = "BLOOD_PRESSURE_SYSTOLIC_CLINICAL";
  *((void *)v216 + 1) = 32;
  v216[16] = 2;
  v9();
  v217 = (void *)(v269 + v4 + 107 * v3);
  v218 = (char *)v217 + *(int *)(v2 + 56);
  void *v217 = 107;
  *(void *)v218 = "BLOOD_PRESSURE_DIASTOLIC_CLINICAL";
  *((void *)v218 + 1) = 33;
  v218[16] = 2;
  v9();
  v219 = (void *)(v269 + v4 + 108 * v3);
  v220 = (char *)v219 + *(int *)(v2 + 56);
  void *v219 = 108;
  *(void *)v220 = "BODY_MASS_CLINICAL";
  *((void *)v220 + 1) = 18;
  v220[16] = 2;
  v9();
  v221 = (void *)(v269 + v4 + 109 * v3);
  v222 = (char *)v221 + *(int *)(v2 + 56);
  void *v221 = 109;
  *(void *)v222 = "CYCLE_ANALYSIS";
  *((void *)v222 + 1) = 14;
  v222[16] = 2;
  v9();
  uint64_t v223 = (void *)(v269 + v4 + 110 * v3);
  uint64_t v224 = (char *)v223 + *(int *)(v2 + 56);
  *uint64_t v223 = 110;
  *(void *)uint64_t v224 = "BODY_MASS_INDEX_CLINICAL";
  *((void *)v224 + 1) = 24;
  v224[16] = 2;
  v9();
  v225 = (void *)(v269 + v4 + 111 * v3);
  uint64_t v226 = (char *)v225 + *(int *)(v2 + 56);
  void *v225 = 111;
  *(void *)uint64_t v226 = "ACTIVITY_SUMMARY";
  *((void *)v226 + 1) = 16;
  v226[16] = 2;
  v9();
  uint64_t v227 = (void *)(v269 + v4 + 112 * v3);
  uint64_t v228 = (char *)v227 + *(int *)(v2 + 56);
  *uint64_t v227 = 112;
  *(void *)uint64_t v228 = "PATIENT_META";
  *((void *)v228 + 1) = 12;
  v228[16] = 2;
  v9();
  v229 = (void *)(v269 + v4 + 113 * v3);
  uint64_t v230 = (char *)v229 + *(int *)(v2 + 56);
  void *v229 = 113;
  *(void *)uint64_t v230 = "SLEEP_SUMMARY";
  *((void *)v230 + 1) = 13;
  v230[16] = 2;
  v9();
  uint64_t v231 = (void *)(v269 + v4 + 114 * v3);
  uint64_t v232 = (char *)v231 + *(int *)(v2 + 56);
  *uint64_t v231 = 114;
  *(void *)uint64_t v232 = "SLEEP_SERIES";
  *((void *)v232 + 1) = 12;
  v232[16] = 2;
  v9();
  v233 = (void *)(v269 + v4 + 115 * v3);
  uint64_t v234 = (char *)v233 + *(int *)(v2 + 56);
  void *v233 = 115;
  *(void *)uint64_t v234 = "SLEEP_SCHEDULE";
  *((void *)v234 + 1) = 14;
  v234[16] = 2;
  v9();
  uint64_t v235 = (void *)(v269 + v4 + 116 * v3);
  v236 = (char *)v235 + *(int *)(v2 + 56);
  *uint64_t v235 = 116;
  *(void *)v236 = "CYCLE_FACTORS";
  *((void *)v236 + 1) = 13;
  v236[16] = 2;
  v9();
  uint64_t v237 = (void *)(v269 + v4 + 117 * v3);
  id v238 = (char *)v237 + *(int *)(v2 + 56);
  *uint64_t v237 = 117;
  *(void *)id v238 = "WALKING_SPEED";
  *((void *)v238 + 1) = 13;
  v238[16] = 2;
  v9();
  uint64_t v239 = (void *)(v269 + v4 + 118 * v3);
  uint64_t v240 = (char *)v239 + *(int *)(v2 + 56);
  *uint64_t v239 = 118;
  *(void *)uint64_t v240 = "WALKING_STEP_LENGTH";
  *((void *)v240 + 1) = 19;
  v240[16] = 2;
  v9();
  uint64_t v241 = (void *)(v269 + v4 + 119 * v3);
  uint64_t v242 = (char *)v241 + *(int *)(v2 + 56);
  *uint64_t v241 = 119;
  *(void *)uint64_t v242 = "WALKING_DOUBLE_SUPPORT_PERCENTAGE";
  *((void *)v242 + 1) = 33;
  v242[16] = 2;
  v9();
  uint64_t v243 = (void *)(v269 + v4 + 120 * v3);
  v244 = (char *)v243 + *(int *)(v2 + 56);
  *uint64_t v243 = 120;
  *(void *)v244 = "STAIR_ASCENT_SPEED";
  *((void *)v244 + 1) = 18;
  v244[16] = 2;
  v9();
  v245 = (void *)(v269 + v4 + 121 * v3);
  v246 = (char *)v245 + *(int *)(v2 + 56);
  void *v245 = 121;
  *(void *)v246 = "STAIR_DESCENT_SPEED";
  *((void *)v246 + 1) = 19;
  v246[16] = 2;
  v9();
  uint64_t v247 = (void *)(v269 + v4 + 122 * v3);
  uint64_t v248 = (char *)v247 + *(int *)(v2 + 56);
  *uint64_t v247 = 122;
  *(void *)uint64_t v248 = "SIX_MINUTE_WALK_TEST_DISTANCE";
  *((void *)v248 + 1) = 29;
  v248[16] = 2;
  v9();
  uint64_t v249 = (void *)(v269 + v4 + 123 * v3);
  v250 = (char *)v249 + *(int *)(v2 + 56);
  *uint64_t v249 = 123;
  *(void *)v250 = "APPLE_WALKING_STEADINESS";
  *((void *)v250 + 1) = 24;
  v250[16] = 2;
  v9();
  uint64_t v251 = (void *)(v269 + v4 + 124 * v3);
  v252 = (char *)v251 + *(int *)(v2 + 56);
  *uint64_t v251 = 124;
  *(void *)v252 = "WALKING_ASYMMETRY_PERCENTAGE";
  *((void *)v252 + 1) = 28;
  v252[16] = 2;
  v9();
  v253 = (void *)(v269 + v4 + 125 * v3);
  v254 = (char *)v253 + *(int *)(v2 + 56);
  void *v253 = 125;
  *(void *)v254 = "APPLE_WALKING_STEADINESS_CLASSIFICATION";
  *((void *)v254 + 1) = 39;
  v254[16] = 2;
  v9();
  uint64_t v255 = (void *)(v269 + v4 + 126 * v3);
  uint64_t v256 = (char *)v255 + *(int *)(v2 + 56);
  *uint64_t v255 = 126;
  *(void *)uint64_t v256 = "APPLE_WALKING_STEADINESS_EVENT";
  *((void *)v256 + 1) = 30;
  v256[16] = 2;
  v9();
  uint64_t v257 = (void *)(v269 + v4 + 127 * v3);
  v258 = (char *)v257 + *(int *)(v2 + 56);
  *uint64_t v257 = 127;
  *(void *)v258 = "MEDICATION_TRACKING";
  *((void *)v258 + 1) = 19;
  v258[16] = 2;
  v9();
  unint64_t v259 = v269 + v4 + (v3 << 7) + *(int *)(v2 + 56);
  *(void *)(v5 + (v3 << 7)) = 128;
  *(void *)unint64_t v259 = "MEDICATION_TRACKING_DOSE_EVENT";
  *(void *)(v259 + 8) = 30;
  *(unsigned char *)(v259 + 16) = 2;
  v9();
  v260 = (void *)(v269 + v4 + 129 * v3);
  v261 = (char *)v260 + *(int *)(v2 + 56);
  void *v260 = 129;
  *(void *)v261 = "MEDICATION_TRACKING_SCHEDULE";
  *((void *)v261 + 1) = 28;
  v261[16] = 2;
  v9();
  v262 = (void *)(v269 + v4 + 130 * v3);
  v263 = (char *)v262 + *(int *)(v2 + 56);
  void *v262 = 130;
  *(void *)v263 = "BLOOD_GLUCOSE_HISTOGRAM";
  *((void *)v263 + 1) = 23;
  v263[16] = 2;
  v9();
  v264 = (void *)(v269 + v4 + 131 * v3);
  v265 = (char *)v264 + *(int *)(v2 + 56);
  void *v264 = 131;
  *(void *)v265 = "BLOOD_GLUCOSE_LOW_FREQUENCY";
  *((void *)v265 + 1) = 27;
  v265[16] = 2;
  v9();
  v266 = (void *)(v269 + v4 + 132 * v3);
  v267 = (char *)v266 + *(int *)(v2 + 56);
  void *v266 = 132;
  *(void *)v267 = "ACTIVE_MEDICATIONS";
  *((void *)v267 + 1) = 18;
  v267[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBDataType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D458, (uint64_t)qword_268543A70, a1);
}

uint64_t sub_22D28F148@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D458, (uint64_t)qword_268543A70, a1);
}

uint64_t sub_22D28F16C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543A88);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543A88);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C20F0;
  unint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *unint64_t v6 = 0;
  *(void *)unint64_t v7 = "GLUCOSE_MEAL_TIME_NOT_SET";
  *(void *)(v7 + 8) = 25;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = (char *)v6 + v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + v3) = 1;
  *(void *)unint64_t v11 = "BEFORE_MEAL";
  *((void *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  uint64_t v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v2 + 56);
  *(void *)((char *)v6 + 2 * v3) = 2;
  *(void *)uint64_t v12 = "AFTER_MEAL";
  *(void *)(v12 + 8) = 10;
  *(unsigned char *)(v12 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBGlucoseMealTime._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D460, (uint64_t)qword_268543A88, a1);
}

uint64_t sub_22D28F388@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D460, (uint64_t)qword_268543A88, a1);
}

uint64_t sub_22D28F3AC()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543AA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543AA0);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C1A90;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "SLEEP_NOT_SET";
  *(void *)(v7 + 8) = 13;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "IN_BED";
  *(void *)(v11 + 8) = 6;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  void *v12 = 2;
  *(void *)uint64_t v13 = "ASLEEP";
  *((void *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  void *v14 = 3;
  *(void *)uint64_t v15 = "AWAKE";
  *((void *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBSleepAnalysis._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D468, (uint64_t)qword_268543AA0, a1);
}

uint64_t sub_22D28F600@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D468, (uint64_t)qword_268543AA0, a1);
}

uint64_t sub_22D28F624()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543AB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543AB8);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_22D2C1A90;
  unint64_t v5 = v15 + v4 + *(int *)(v2 + 56);
  *(void *)(v15 + v4) = 0;
  *(void *)unint64_t v5 = "WALKING_STEADINESS_CLASSIFICATION_NOT_SET";
  *(void *)(v5 + 8) = 41;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_22D2BC2F0();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v15 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v15 + v4 + v3) = 1;
  *(void *)unint64_t v9 = "OK";
  *(void *)(v9 + 8) = 2;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v15 + v4 + 2 * v3);
  unint64_t v11 = (char *)v10 + *(int *)(v2 + 56);
  *unint64_t v10 = 2;
  *(void *)unint64_t v11 = "LOW";
  *((void *)v11 + 1) = 3;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v15 + v4 + 3 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  void *v12 = 3;
  *(void *)uint64_t v13 = "VERY_LOW";
  *((void *)v13 + 1) = 8;
  v13[16] = 2;
  v8();
  return sub_22D2BC300();
}

uint64_t static PBAppleWalkingSteadinessClassification._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D470, (uint64_t)qword_268543AB8, a1);
}

uint64_t sub_22D28F868@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D470, (uint64_t)qword_268543AB8, a1);
}

uint64_t sub_22D28F88C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543AD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543AD0);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2BFF30;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "WALKING_STEADINESS_EVENT_NOT_SET";
  *(void *)(v7 + 8) = 32;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "INITIAL_LOW";
  *(void *)(v11 + 8) = 11;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  void *v12 = 2;
  *(void *)uint64_t v13 = "INITIAL_VERY_LOW";
  *((void *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  void *v14 = 3;
  *(void *)uint64_t v15 = "REPEAT_LOW";
  *((void *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  uint64_t v16 = v6 + 4 * v3 + *(int *)(v2 + 56);
  *(void *)(v6 + 4 * v3) = 4;
  *(void *)uint64_t v16 = "REPEAT_VERY_LOW";
  *(void *)(v16 + 8) = 15;
  *(unsigned char *)(v16 + 16) = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBAppleWalkingSteadinessEvent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D478, (uint64_t)qword_268543AD0, a1);
}

uint64_t sub_22D28FB28@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D478, (uint64_t)qword_268543AD0, a1);
}

uint64_t sub_22D28FB4C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543AE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543AE8);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_22D2C0F20;
  unint64_t v5 = v27 + v4;
  unint64_t v6 = v27 + v4 + *(int *)(v2 + 56);
  *(void *)(v27 + v4) = 0;
  *(void *)unint64_t v6 = "CYCLE_FACTORS_NOT_SET";
  *(void *)(v6 + 8) = 21;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v27 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "LACTATION";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v27 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  void *v11 = 2;
  *(void *)uint64_t v12 = "PREGNANCY";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v27 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  void *v13 = 3;
  *(void *)uint64_t v14 = "CONTRACEPTIVE_UNSPECIFIED";
  *((void *)v14 + 1) = 25;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v27 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  void *v15 = 4;
  *(void *)uint64_t v16 = "CONTRACEPTIVE_IMPLANT";
  *((void *)v16 + 1) = 21;
  unsigned char v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v27 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)uint64_t v18 = "CONTRACEPTIVE_INJECTION";
  *((void *)v18 + 1) = 23;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v27 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)uint64_t v20 = "CONTRACEPTIVE_INTRAUTERINE_DEVICE";
  *((void *)v20 + 1) = 33;
  unsigned char v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v27 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)uint64_t v22 = "CONTRACEPTIVE_INTRAVAGINAL_RING";
  *((void *)v22 + 1) = 31;
  unsigned char v22[16] = 2;
  v9();
  uint64_t v23 = v27 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "CONTRACEPTIVE_ORAL";
  *(void *)(v23 + 8) = 18;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v27 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)uint64_t v25 = "CONTRACEPTIVE_PATCH";
  *((void *)v25 + 1) = 19;
  unsigned char v25[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBCycleFactors._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D480, (uint64_t)qword_268543AE8, a1);
}

uint64_t sub_22D28FF18@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D480, (uint64_t)qword_268543AE8, a1);
}

uint64_t sub_22D28FF3C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543B00);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543B00);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_22D2D3670;
  unint64_t v5 = v52 + v4;
  unint64_t v6 = v52 + v4 + *(int *)(v2 + 56);
  *(void *)(v52 + v4) = 0;
  *(void *)unint64_t v6 = "SYMPTOMS_NOT_SET";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v52 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "SYMPTOMS_ABDOMINAL_CRAMPS";
  *(void *)(v10 + 8) = 25;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v52 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  void *v11 = 2;
  *(void *)uint64_t v12 = "SYMPTOMS_ACNE";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v52 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  void *v13 = 3;
  *(void *)uint64_t v14 = "SYMPTOMS_APPETITE_CHANGES";
  *((void *)v14 + 1) = 25;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v52 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  void *v15 = 4;
  *(void *)uint64_t v16 = "SYMPTOMS_BLOATING";
  *((void *)v16 + 1) = 17;
  unsigned char v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v52 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)uint64_t v18 = "SYMPTOMS_BREAST_PAIN";
  *((void *)v18 + 1) = 20;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v52 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)uint64_t v20 = "SYMPTOMS_CONSTIPATION";
  *((void *)v20 + 1) = 21;
  unsigned char v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v52 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)uint64_t v22 = "SYMPTOMS_DIARRHEA";
  *((void *)v22 + 1) = 17;
  unsigned char v22[16] = 2;
  v9();
  uint64_t v23 = v52 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "SYMPTOMS_HEADACHE";
  *(void *)(v23 + 8) = 17;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v52 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)uint64_t v25 = "SYMPTOMS_HOT_FLASHES";
  *((void *)v25 + 1) = 20;
  unsigned char v25[16] = 2;
  v9();
  unint64_t v26 = (void *)(v52 + v4 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 10;
  *(void *)uint64_t v27 = "SYMPTOMS_LOWER_BACK_PAIN";
  *((void *)v27 + 1) = 24;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v52 + v4 + 11 * v3);
  unint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 11;
  *(void *)unint64_t v29 = "SYMPTOMS_MOOD_CHANGES";
  *((void *)v29 + 1) = 21;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v52 + v4 + 12 * v3);
  id v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 12;
  *(void *)id v31 = "SYMPTOMS_NAUSEA";
  *((void *)v31 + 1) = 15;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v52 + v4 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 13;
  *(void *)uint64_t v33 = "SYMPTOMS_PELVIC_PAIN";
  *((void *)v33 + 1) = 20;
  v33[16] = 2;
  v9();
  uint64_t v34 = (void *)(v52 + v4 + 14 * v3);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 14;
  *(void *)uint64_t v35 = "SYMPTOMS_SLEEP_CHANGES";
  *((void *)v35 + 1) = 22;
  v35[16] = 2;
  v9();
  uint64_t v36 = (void *)(v52 + v4 + 15 * v3);
  uint64_t v37 = (char *)v36 + *(int *)(v2 + 56);
  void *v36 = 15;
  *(void *)uint64_t v37 = "SYMPTOMS_FATIGUE";
  *((void *)v37 + 1) = 16;
  char v37[16] = 2;
  v9();
  uint64_t v38 = v52 + v4 + 16 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 16 * v3) = 16;
  *(void *)uint64_t v38 = "SYMPTOMS_VAGINAL_DRYNESS";
  *(void *)(v38 + 8) = 24;
  *(unsigned char *)(v38 + 16) = 2;
  v9();
  uint64_t v39 = (void *)(v52 + v4 + 17 * v3);
  uint64_t v40 = (char *)v39 + *(int *)(v2 + 56);
  void *v39 = 17;
  *(void *)uint64_t v40 = "SYMPTOMS_NIGHT_SWEATS";
  *((void *)v40 + 1) = 21;
  v40[16] = 2;
  v9();
  uint64_t v41 = (void *)(v52 + v4 + 18 * v3);
  uint64_t v42 = (char *)v41 + *(int *)(v2 + 56);
  *uint64_t v41 = 18;
  *(void *)uint64_t v42 = "SYMPTOMS_CHILLS";
  *((void *)v42 + 1) = 15;
  v42[16] = 2;
  v9();
  char v43 = (void *)(v52 + v4 + 19 * v3);
  unint64_t v44 = (char *)v43 + *(int *)(v2 + 56);
  void *v43 = 19;
  *(void *)unint64_t v44 = "SYMPTOMS_HAIR_LOSS";
  *((void *)v44 + 1) = 18;
  v44[16] = 2;
  v9();
  uint64_t v45 = (void *)(v52 + v4 + 20 * v3);
  BOOL v46 = (char *)v45 + *(int *)(v2 + 56);
  void *v45 = 20;
  *(void *)BOOL v46 = "SYMPTOMS_DRY_SKIN";
  *((void *)v46 + 1) = 17;
  v46[16] = 2;
  v9();
  uint64_t v47 = (void *)(v52 + v4 + 21 * v3);
  char v48 = (char *)v47 + *(int *)(v2 + 56);
  *uint64_t v47 = 21;
  *(void *)char v48 = "SYMPTOMS_BLADDER_INCONTINENCE";
  *((void *)v48 + 1) = 29;
  v48[16] = 2;
  v9();
  unint64_t v49 = (void *)(v52 + v4 + 22 * v3);
  char v50 = (char *)v49 + *(int *)(v2 + 56);
  void *v49 = 22;
  *(void *)char v50 = "SYMPTOMS_MEMORY_LAPSE";
  *((void *)v50 + 1) = 21;
  v50[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBCycleSymptoms._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D488, (uint64_t)qword_268543B00, a1);
}

uint64_t sub_22D290608@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D488, (uint64_t)qword_268543B00, a1);
}

uint64_t sub_22D29062C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543B18);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543B18);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C39B0;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "NOT_SET";
  *(void *)(v7 + 8) = 7;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "SINUS_RHYTHM";
  *(void *)(v11 + 8) = 12;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  void *v12 = 2;
  *(void *)uint64_t v13 = "ATRIAL_FIBRILLATION";
  *((void *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  void *v14 = 3;
  *(void *)uint64_t v15 = "INCONCLUSIVE_LOW_HEART_RATE";
  *((void *)v15 + 1) = 27;
  v15[16] = 2;
  v10();
  uint64_t v16 = (void *)(v6 + 4 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  void *v16 = 4;
  *(void *)uint64_t v17 = "INCONCLUSIVE_HIGH_HEART_RATE";
  *((void *)v17 + 1) = 28;
  unsigned char v17[16] = 2;
  v10();
  uint64_t v18 = (void *)(v6 + 5 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 5;
  *(void *)uint64_t v19 = "INCONCLUSIVE_POOR_READING";
  *((void *)v19 + 1) = 25;
  v19[16] = 2;
  v10();
  uint64_t v20 = (void *)(v6 + 6 * v3);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 56);
  void *v20 = 6;
  *(void *)uint64_t v21 = "INCONCLUSIVE_OTHER";
  *((void *)v21 + 1) = 18;
  v21[16] = 2;
  v10();
  uint64_t v22 = (void *)(v6 + 7 * v3);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 56);
  void *v22 = 100;
  *(void *)uint64_t v23 = "UNRECOGNIZED_READING";
  *((void *)v23 + 1) = 20;
  v23[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBECGClassification._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D490, (uint64_t)qword_268543B18, a1);
}

uint64_t sub_22D290984@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D490, (uint64_t)qword_268543B18, a1);
}

uint64_t sub_22D2909A8()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543B30);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543B30);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22D2C39B0;
  unint64_t v6 = v5 + v4;
  unint64_t v7 = v5 + v4 + *(int *)(v2 + 56);
  *(void *)(v5 + v4) = 0;
  *(void *)unint64_t v7 = "CLINICAL_TYPE";
  *(void *)(v7 + 8) = 13;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_22D2BC2F0();
  unint64_t v10 = *(void (**)(void))(*(void *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  unint64_t v11 = v6 + v3 + *(int *)(v2 + 56);
  *(void *)(v6 + v3) = 1;
  *(void *)unint64_t v11 = "ALLERGIES";
  *(void *)(v11 + 8) = 9;
  *(unsigned char *)(v11 + 16) = 2;
  v10();
  uint64_t v12 = (void *)(v6 + 2 * v3);
  uint64_t v13 = (char *)v12 + *(int *)(v2 + 56);
  void *v12 = 2;
  *(void *)uint64_t v13 = "CONDITIONS";
  *((void *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  uint64_t v14 = (void *)(v6 + 3 * v3);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 56);
  void *v14 = 3;
  *(void *)uint64_t v15 = "IMMUNIZATIONS";
  *((void *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  uint64_t v16 = (void *)(v6 + 4 * v3);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 56);
  void *v16 = 4;
  *(void *)uint64_t v17 = "LABS";
  *((void *)v17 + 1) = 4;
  unsigned char v17[16] = 2;
  v10();
  uint64_t v18 = (void *)(v6 + 5 * v3);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 56);
  void *v18 = 5;
  *(void *)uint64_t v19 = "MEDICATIONS";
  *((void *)v19 + 1) = 11;
  v19[16] = 2;
  v10();
  uint64_t v20 = (void *)(v6 + 6 * v3);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 56);
  void *v20 = 6;
  *(void *)uint64_t v21 = "PROCEDURES";
  *((void *)v21 + 1) = 10;
  v21[16] = 2;
  v10();
  uint64_t v22 = (void *)(v6 + 7 * v3);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 56);
  void *v22 = 7;
  *(void *)uint64_t v23 = "VITALS";
  *((void *)v23 + 1) = 6;
  v23[16] = 2;
  v10();
  return sub_22D2BC300();
}

uint64_t static PBClinicalType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D498, (uint64_t)qword_268543B30, a1);
}

uint64_t sub_22D290CF8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D498, (uint64_t)qword_268543B30, a1);
}

uint64_t sub_22D290D1C()
{
  uint64_t v0 = sub_22D2BC310();
  __swift_allocate_value_buffer(v0, qword_268543B48);
  __swift_project_value_buffer(v0, (uint64_t)qword_268543B48);
  sub_22D063EBC();
  sub_22D018368();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v166 = swift_allocObject();
  *(_OWORD *)(v166 + 16) = xmmword_22D2D3680;
  unint64_t v5 = v166 + v4;
  unint64_t v6 = v166 + v4 + *(int *)(v2 + 56);
  *(void *)(v166 + v4) = 0;
  *(void *)unint64_t v6 = "UNKNOWN";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_22D2BC2F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v166 + v4 + v3 + *(int *)(v2 + 56);
  *(void *)(v5 + v3) = 1;
  *(void *)unint64_t v10 = "AMERICAN_FOOTBALL";
  *(void *)(v10 + 8) = 17;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v166 + v4 + 2 * v3);
  uint64_t v12 = (char *)v11 + *(int *)(v2 + 56);
  void *v11 = 2;
  *(void *)uint64_t v12 = "ARCHERY";
  *((void *)v12 + 1) = 7;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v166 + v4 + 3 * v3);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 56);
  void *v13 = 3;
  *(void *)uint64_t v14 = "AUSTRALIAN_FOOTBALL";
  *((void *)v14 + 1) = 19;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v166 + v4 + 4 * v3);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 56);
  void *v15 = 4;
  *(void *)uint64_t v16 = "BADMINTON";
  *((void *)v16 + 1) = 9;
  unsigned char v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v166 + v4 + 5 * v3);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 56);
  void *v17 = 5;
  *(void *)uint64_t v18 = "BASEBALL";
  *((void *)v18 + 1) = 8;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v166 + v4 + 6 * v3);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 56);
  void *v19 = 6;
  *(void *)uint64_t v20 = "BASKETBALL";
  *((void *)v20 + 1) = 10;
  unsigned char v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v166 + v4 + 7 * v3);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 56);
  void *v21 = 7;
  *(void *)uint64_t v22 = "BOWLING";
  *((void *)v22 + 1) = 7;
  unsigned char v22[16] = 2;
  v9();
  uint64_t v23 = v166 + v4 + 8 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 8 * v3) = 8;
  *(void *)uint64_t v23 = "BOXING";
  *(void *)(v23 + 8) = 6;
  *(unsigned char *)(v23 + 16) = 2;
  v9();
  uint64_t v24 = (void *)(v166 + v4 + 9 * v3);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 56);
  void *v24 = 9;
  *(void *)uint64_t v25 = "CLIMBING";
  *((void *)v25 + 1) = 8;
  unsigned char v25[16] = 2;
  v9();
  unint64_t v26 = (void *)(v166 + v4 + 10 * v3);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 56);
  void *v26 = 10;
  *(void *)uint64_t v27 = "CRICKET";
  *((void *)v27 + 1) = 7;
  v27[16] = 2;
  v9();
  uint64_t v28 = (void *)(v166 + v4 + 11 * v3);
  unint64_t v29 = (char *)v28 + *(int *)(v2 + 56);
  void *v28 = 11;
  *(void *)unint64_t v29 = "CROSS_TRAINING";
  *((void *)v29 + 1) = 14;
  v29[16] = 2;
  v9();
  uint64_t v30 = (void *)(v166 + v4 + 12 * v3);
  id v31 = (char *)v30 + *(int *)(v2 + 56);
  void *v30 = 12;
  *(void *)id v31 = "CURLING";
  *((void *)v31 + 1) = 7;
  v31[16] = 2;
  v9();
  uint64_t v32 = (void *)(v166 + v4 + 13 * v3);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 56);
  void *v32 = 13;
  *(void *)uint64_t v33 = "CYCLING";
  *((void *)v33 + 1) = 7;
  v33[16] = 2;
  v9();
  uint64_t v34 = (void *)(v166 + v4 + 14 * v3);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 56);
  void *v34 = 14;
  *(void *)uint64_t v35 = "DANCE";
  *((void *)v35 + 1) = 5;
  v35[16] = 2;
  v9();
  uint64_t v36 = (void *)(v166 + v4 + 15 * v3);
  uint64_t v37 = (char *)v36 + *(int *)(v2 + 56);
  void *v36 = 15;
  *(void *)uint64_t v37 = "DANCE_INSPIRED_TRAINING";
  *((void *)v37 + 1) = 23;
  char v37[16] = 2;
  v9();
  uint64_t v38 = v166 + v4 + 16 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 16 * v3) = 16;
  *(void *)uint64_t v38 = "ELLIPTICAL";
  *(void *)(v38 + 8) = 10;
  *(unsigned char *)(v38 + 16) = 2;
  v9();
  uint64_t v39 = (void *)(v166 + v4 + 17 * v3);
  uint64_t v40 = (char *)v39 + *(int *)(v2 + 56);
  void *v39 = 17;
  *(void *)uint64_t v40 = "EQUESTRIAN_SPORTS";
  *((void *)v40 + 1) = 17;
  v40[16] = 2;
  v9();
  uint64_t v41 = (void *)(v166 + v4 + 18 * v3);
  uint64_t v42 = (char *)v41 + *(int *)(v2 + 56);
  *uint64_t v41 = 18;
  *(void *)uint64_t v42 = "FENCING";
  *((void *)v42 + 1) = 7;
  v42[16] = 2;
  v9();
  char v43 = (void *)(v166 + v4 + 19 * v3);
  unint64_t v44 = (char *)v43 + *(int *)(v2 + 56);
  void *v43 = 19;
  *(void *)unint64_t v44 = "FISHING";
  *((void *)v44 + 1) = 7;
  v44[16] = 2;
  v9();
  uint64_t v45 = (void *)(v166 + v4 + 20 * v3);
  BOOL v46 = (char *)v45 + *(int *)(v2 + 56);
  void *v45 = 20;
  *(void *)BOOL v46 = "FUNCTIONAL_STRENGTH_TRAINING";
  *((void *)v46 + 1) = 28;
  v46[16] = 2;
  v9();
  uint64_t v47 = (void *)(v166 + v4 + 21 * v3);
  char v48 = (char *)v47 + *(int *)(v2 + 56);
  *uint64_t v47 = 21;
  *(void *)char v48 = "GOLF";
  *((void *)v48 + 1) = 4;
  v48[16] = 2;
  v9();
  unint64_t v49 = (void *)(v166 + v4 + 22 * v3);
  char v50 = (char *)v49 + *(int *)(v2 + 56);
  void *v49 = 22;
  *(void *)char v50 = "GYMNASTICS";
  *((void *)v50 + 1) = 10;
  v50[16] = 2;
  v9();
  uint64_t v51 = (void *)(v166 + v4 + 23 * v3);
  uint64_t v52 = (char *)v51 + *(int *)(v2 + 56);
  *uint64_t v51 = 23;
  *(void *)uint64_t v52 = "HANDBALL";
  *((void *)v52 + 1) = 8;
  v52[16] = 2;
  v9();
  uint64_t v53 = (void *)(v166 + v4 + 24 * v3);
  uint64_t v54 = (char *)v53 + *(int *)(v2 + 56);
  *uint64_t v53 = 24;
  *(void *)uint64_t v54 = "HIKING";
  *((void *)v54 + 1) = 6;
  v54[16] = 2;
  v9();
  uint64_t v55 = (void *)(v166 + v4 + 25 * v3);
  uint64_t v56 = (char *)v55 + *(int *)(v2 + 56);
  *uint64_t v55 = 25;
  *(void *)uint64_t v56 = "HOCKEY";
  *((void *)v56 + 1) = 6;
  v56[16] = 2;
  v9();
  uint64_t v57 = (void *)(v166 + v4 + 26 * v3);
  uint64_t v58 = (char *)v57 + *(int *)(v2 + 56);
  *uint64_t v57 = 26;
  *(void *)uint64_t v58 = "HUNTING";
  *((void *)v58 + 1) = 7;
  char v58[16] = 2;
  v9();
  uint64_t v59 = (void *)(v166 + v4 + 27 * v3);
  uint64_t v60 = (char *)v59 + *(int *)(v2 + 56);
  *uint64_t v59 = 27;
  *(void *)uint64_t v60 = "LACROSSE";
  *((void *)v60 + 1) = 8;
  v60[16] = 2;
  v9();
  id v61 = (void *)(v166 + v4 + 28 * v3);
  uint64_t v62 = (char *)v61 + *(int *)(v2 + 56);
  *id v61 = 28;
  *(void *)uint64_t v62 = "MARTIAL_ARTS";
  *((void *)v62 + 1) = 12;
  v62[16] = 2;
  v9();
  uint64_t v63 = (void *)(v166 + v4 + 29 * v3);
  unint64_t v64 = (char *)v63 + *(int *)(v2 + 56);
  *uint64_t v63 = 29;
  *(void *)unint64_t v64 = "MIND_AND_BODY";
  *((void *)v64 + 1) = 13;
  v64[16] = 2;
  v9();
  id v65 = (void *)(v166 + v4 + 30 * v3);
  uint64_t v66 = (char *)v65 + *(int *)(v2 + 56);
  *id v65 = 30;
  *(void *)uint64_t v66 = "MIXED_METABOLIC_CARDIO_TRAINING";
  *((void *)v66 + 1) = 31;
  v66[16] = 2;
  v9();
  uint64_t v67 = (void *)(v166 + v4 + 31 * v3);
  id v68 = (char *)v67 + *(int *)(v2 + 56);
  *uint64_t v67 = 31;
  *(void *)id v68 = "PADDLE_SPORTS";
  *((void *)v68 + 1) = 13;
  v68[16] = 2;
  v9();
  uint64_t v69 = v166 + v4 + 32 * v3 + *(int *)(v2 + 56);
  *(void *)(v5 + 32 * v3) = 32;
  *(void *)uint64_t v69 = "PLAY";
  *(void *)(v69 + 8) = 4;
  *(unsigned char *)(v69 + 16) = 2;
  v9();
  uint64_t v70 = (void *)(v166 + v4 + 33 * v3);
  uint64_t v71 = (char *)v70 + *(int *)(v2 + 56);
  *uint64_t v70 = 33;
  *(void *)uint64_t v71 = "PREPARATION_AND_RECOVERY";
  *((void *)v71 + 1) = 24;
  v71[16] = 2;
  v9();
  uint64_t v72 = (void *)(v166 + v4 + 34 * v3);
  uint64_t v73 = (char *)v72 + *(int *)(v2 + 56);
  *uint64_t v72 = 34;
  *(void *)uint64_t v73 = "RACQUETBALL";
  *((void *)v73 + 1) = 11;
  v73[16] = 2;
  v9();
  uint64_t v74 = (void *)(v166 + v4 + 35 * v3);
  uint64_t v75 = (char *)v74 + *(int *)(v2 + 56);
  *uint64_t v74 = 35;
  *(void *)uint64_t v75 = "ROWING";
  *((void *)v75 + 1) = 6;
  v75[16] = 2;
  v9();
  uint64_t v76 = (void *)(v166 + v4 + 36 * v3);
  uint64_t v77 = (char *)v76 + *(int *)(v2 + 56);
  *uint64_t v76 = 36;
  *(void *)uint64_t v77 = "RUGBY";
  *((void *)v77 + 1) = 5;
  v77[16] = 2;
  v9();
  uint64_t v78 = (void *)(v166 + v4 + 37 * v3);
  unint64_t v79 = (char *)v78 + *(int *)(v2 + 56);
  *uint64_t v78 = 37;
  *(void *)unint64_t v79 = "RUNNING";
  *((void *)v79 + 1) = 7;
  v79[16] = 2;
  v9();
  unint64_t v80 = (void *)(v166 + v4 + 38 * v3);
  uint64_t v81 = (char *)v80 + *(int *)(v2 + 56);
  *unint64_t v80 = 38;
  *(void *)uint64_t v81 = "SAILING";
  *((void *)v81 + 1) = 7;
  v81[16] = 2;
  v9();
  unint64_t v82 = (void *)(v166 + v4 + 39 * v3);
  uint64_t v83 = (char *)v82 + *(int *)(v2 + 56);
  *unint64_t v82 = 39;
  *(void *)uint64_t v83 = "SKATING_SPORTS";
  *((void *)v83 + 1) = 14;
  v83[16] = 2;
  v9();
  uint64_t v84 = (void *)(v166 + v4 + 40 * v3);
  uint64_t v85 = (char *)v84 + *(int *)(v2 + 56);
  void *v84 = 40;
  *(void *)uint64_t v85 = "SNOW_SPORTS";
  *((void *)v85 + 1) = 11;
  v85[16] = 2;
  v9();
  uint64_t v86 = (void *)(v166 + v4 + 41 * v3);
  unint64_t v87 = (char *)v86 + *(int *)(v2 + 56);
  *uint64_t v86 = 41;
  *(void *)unint64_t v87 = "SOCCER";
  *((void *)v87 + 1) = 6;
  v87[16] = 2;
  v9();
  unint64_t v88 = (void *)(v166 + v4 + 42 * v3);
  uint64_t v89 = (char *)v88 + *(int *)(v2 + 56);
  *unint64_t v88 = 42;
  *(void *)uint64_t v89 = "SOFTBALL";
  *((void *)v89 + 1) = 8;
  v89[16] = 2;
  v9();
  uint64_t v90 = (void *)(v166 + v4 + 43 * v3);
  uint64_t v91 = (char *)v90 + *(int *)(v2 + 56);
  *uint64_t v90 = 43;
  *(void *)uint64_t v91 = "SQUASH";
  *((void *)v91 + 1) = 6;
  v91[16] = 2;
  v9();
  uint64_t v92 = (void *)(v166 + v4 + 44 * v3);
  uint64_t v93 = (char *)v92 + *(int *)(v2 + 56);
  void *v92 = 44;
  *(void *)uint64_t v93 = "STAIR_CLIMBING";
  *((void *)v93 + 1) = 14;
  v93[16] = 2;
  v9();
  unint64_t v94 = (void *)(v166 + v4 + 45 * v3);
  unint64_t v95 = (char *)v94 + *(int *)(v2 + 56);
  *unint64_t v94 = 45;
  *(void *)unint64_t v95 = "SURFING_SPORTS";
  *((void *)v95 + 1) = 14;
  v95[16] = 2;
  v9();
  uint64_t v96 = (void *)(v166 + v4 + 46 * v3);
  uint64_t v97 = (char *)v96 + *(int *)(v2 + 56);
  *uint64_t v96 = 46;
  *(void *)uint64_t v97 = "SWIMMING";
  *((void *)v97 + 1) = 8;
  v97[16] = 2;
  v9();
  uint64_t v98 = (void *)(v166 + v4 + 47 * v3);
  id v99 = (char *)v98 + *(int *)(v2 + 56);
  *uint64_t v98 = 47;
  *(void *)id v99 = "TABLE_TENNIS";
  *((void *)v99 + 1) = 12;
  v99[16] = 2;
  v9();
  uint64_t v100 = (void *)(v166 + v4 + 48 * v3);
  uint64_t v101 = (char *)v100 + *(int *)(v2 + 56);
  *uint64_t v100 = 48;
  *(void *)uint64_t v101 = "TENNIS";
  *((void *)v101 + 1) = 6;
  v101[16] = 2;
  v9();
  unint64_t v102 = (void *)(v166 + v4 + 49 * v3);
  unint64_t v103 = (char *)v102 + *(int *)(v2 + 56);
  *unint64_t v102 = 49;
  *(void *)unint64_t v103 = "TRACK_AND_FIELD";
  *((void *)v103 + 1) = 15;
  v103[16] = 2;
  v9();
  uint64_t v104 = (void *)(v166 + v4 + 50 * v3);
  uint64_t v105 = (char *)v104 + *(int *)(v2 + 56);
  void *v104 = 50;
  *(void *)uint64_t v105 = "TRADITIONAL_STRENGTH_TRAINING";
  *((void *)v105 + 1) = 29;
  v105[16] = 2;
  v9();
  char v106 = (void *)(v166 + v4 + 51 * v3);
  id v107 = (char *)v106 + *(int *)(v2 + 56);
  void *v106 = 51;
  *(void *)id v107 = "VOLLEYBALL";
  *((void *)v107 + 1) = 10;
  v107[16] = 2;
  v9();
  id v108 = (void *)(v166 + v4 + 52 * v3);
  uint64_t v109 = (char *)v108 + *(int *)(v2 + 56);
  *id v108 = 52;
  *(void *)uint64_t v109 = "WALKING";
  *((void *)v109 + 1) = 7;
  v109[16] = 2;
  v9();
  id v110 = (void *)(v166 + v4 + 53 * v3);
  uint64_t v111 = (char *)v110 + *(int *)(v2 + 56);
  *id v110 = 53;
  *(void *)uint64_t v111 = "WATER_FITNESS";
  *((void *)v111 + 1) = 13;
  v111[16] = 2;
  v9();
  uint64_t v112 = (void *)(v166 + v4 + 54 * v3);
  uint64_t v113 = (char *)v112 + *(int *)(v2 + 56);
  void *v112 = 54;
  *(void *)uint64_t v113 = "WATER_POLO";
  *((void *)v113 + 1) = 10;
  v113[16] = 2;
  v9();
  uint64_t v114 = (void *)(v166 + v4 + 55 * v3);
  id v115 = (char *)v114 + *(int *)(v2 + 56);
  *uint64_t v114 = 55;
  *(void *)id v115 = "WATER_SPORTS";
  *((void *)v115 + 1) = 12;
  v115[16] = 2;
  v9();
  char v116 = (void *)(v166 + v4 + 56 * v3);
  uint64_t v117 = (char *)v116 + *(int *)(v2 + 56);
  *char v116 = 56;
  *(void *)uint64_t v117 = "WRESTLING";
  *((void *)v117 + 1) = 9;
  v117[16] = 2;
  v9();
  unint64_t v118 = (void *)(v166 + v4 + 57 * v3);
  unint64_t v119 = (char *)v118 + *(int *)(v2 + 56);
  *unint64_t v118 = 57;
  *(void *)unint64_t v119 = "YOGA";
  *((void *)v119 + 1) = 4;
  v119[16] = 2;
  v9();
  uint64_t v120 = (void *)(v166 + v4 + 58 * v3);
  uint64_t v121 = (char *)v120 + *(int *)(v2 + 56);
  *uint64_t v120 = 58;
  *(void *)uint64_t v121 = "BARRE";
  *((void *)v121 + 1) = 5;
  v121[16] = 2;
  v9();
  uint64_t v122 = (void *)(v166 + v4 + 59 * v3);
  id v123 = (char *)v122 + *(int *)(v2 + 56);
  *uint64_t v122 = 59;
  *(void *)id v123 = "CORE_TRAINING";
  *((void *)v123 + 1) = 13;
  v123[16] = 2;
  v9();
  unint64_t v124 = (void *)(v166 + v4 + 60 * v3);
  unint64_t v125 = (char *)v124 + *(int *)(v2 + 56);
  *unint64_t v124 = 60;
  *(void *)unint64_t v125 = "CROSS_COUNTRY_SKIING";
  *((void *)v125 + 1) = 20;
  v125[16] = 2;
  v9();
  id v126 = (void *)(v166 + v4 + 61 * v3);
  id v127 = (char *)v126 + *(int *)(v2 + 56);
  *id v126 = 61;
  *(void *)id v127 = "DOWNHILL_SKIING";
  *((void *)v127 + 1) = 15;
  v127[16] = 2;
  v9();
  uint64_t v128 = (void *)(v166 + v4 + 62 * v3);
  uint64_t v129 = (char *)v128 + *(int *)(v2 + 56);
  void *v128 = 62;
  *(void *)uint64_t v129 = "FLEXIBILITY";
  *((void *)v129 + 1) = 11;
  v129[16] = 2;
  v9();
  uint64_t v130 = (void *)(v166 + v4 + 63 * v3);
  uint64_t v131 = (char *)v130 + *(int *)(v2 + 56);
  *uint64_t v130 = 63;
  *(void *)uint64_t v131 = "HIGH_INTENSITY_INTERVAL_TRAINING";
  *((void *)v131 + 1) = 32;
  v131[16] = 2;
  v9();
  unint64_t v132 = v166 + v4 + (v3 << 6) + *(int *)(v2 + 56);
  *(void *)(v5 + (v3 << 6)) = 64;
  *(void *)unint64_t v132 = "JUMP_ROPE";
  *(void *)(v132 + 8) = 9;
  *(unsigned char *)(v132 + 16) = 2;
  v9();
  uint64_t v133 = (void *)(v166 + v4 + 65 * v3);
  id v134 = (char *)v133 + *(int *)(v2 + 56);
  *uint64_t v133 = 65;
  *(void *)id v134 = "KICKBOXING";
  *((void *)v134 + 1) = 10;
  v134[16] = 2;
  v9();
  id v135 = (void *)(v166 + v4 + 66 * v3);
  id v136 = (char *)v135 + *(int *)(v2 + 56);
  *id v135 = 66;
  *(void *)id v136 = "PILATES";
  *((void *)v136 + 1) = 7;
  v136[16] = 2;
  v9();
  uint64_t v137 = (void *)(v166 + v4 + 67 * v3);
  uint64_t v138 = (char *)v137 + *(int *)(v2 + 56);
  *uint64_t v137 = 67;
  *(void *)uint64_t v138 = "SNOWBOARDING";
  *((void *)v138 + 1) = 12;
  v138[16] = 2;
  v9();
  id v139 = (void *)(v166 + v4 + 68 * v3);
  uint64_t v140 = (char *)v139 + *(int *)(v2 + 56);
  *id v139 = 68;
  *(void *)uint64_t v140 = "STAIRS";
  *((void *)v140 + 1) = 6;
  v140[16] = 2;
  v9();
  uint64_t v141 = (void *)(v166 + v4 + 69 * v3);
  uint64_t v142 = (char *)v141 + *(int *)(v2 + 56);
  *uint64_t v141 = 69;
  *(void *)uint64_t v142 = "STEP_TRAINING";
  *((void *)v142 + 1) = 13;
  v142[16] = 2;
  v9();
  uint64_t v143 = (void *)(v166 + v4 + 70 * v3);
  uint64_t v144 = (char *)v143 + *(int *)(v2 + 56);
  *uint64_t v143 = 70;
  *(void *)uint64_t v144 = "WHEELCHAIR_WALK_PACE";
  *((void *)v144 + 1) = 20;
  v144[16] = 2;
  v9();
  id v145 = (void *)(v166 + v4 + 71 * v3);
  id v146 = (char *)v145 + *(int *)(v2 + 56);
  *id v145 = 71;
  *(void *)id v146 = 0x22D2DF000;
  *((void *)v146 + 1) = 19;
  v146[16] = 2;
  v9();
  unint64_t v147 = (void *)(v166 + v4 + 72 * v3);
  id v148 = (char *)v147 + *(int *)(v2 + 56);
  *unint64_t v147 = 72;
  *(void *)id v148 = "TAI_CHI";
  *((void *)v148 + 1) = 7;
  v148[16] = 2;
  v9();
  uint64_t v149 = (void *)(v166 + v4 + 73 * v3);
  unint64_t v150 = (char *)v149 + *(int *)(v2 + 56);
  *uint64_t v149 = 73;
  *(void *)unint64_t v150 = "MIXED_CARDIO";
  *((void *)v150 + 1) = 12;
  v150[16] = 2;
  v9();
  unint64_t v151 = (void *)(v166 + v4 + 74 * v3);
  uint64_t v152 = (char *)v151 + *(int *)(v2 + 56);
  void *v151 = 74;
  *(void *)uint64_t v152 = "HAND_CYCLING";
  *((void *)v152 + 1) = 12;
  v152[16] = 2;
  v9();
  uint64_t v153 = (void *)(v166 + v4 + 75 * v3);
  uint64_t v154 = (char *)v153 + *(int *)(v2 + 56);
  *uint64_t v153 = 75;
  *(void *)uint64_t v154 = "DISC_SPORTS";
  *((void *)v154 + 1) = 11;
  v154[16] = 2;
  v9();
  uint64_t v155 = (void *)(v166 + v4 + 76 * v3);
  uint64_t v156 = (char *)v155 + *(int *)(v2 + 56);
  void *v155 = 76;
  *(void *)uint64_t v156 = "FITNESS_GAMING";
  *((void *)v156 + 1) = 14;
  v156[16] = 2;
  v9();
  id v157 = (void *)(v166 + v4 + 77 * v3);
  id v158 = (char *)v157 + *(int *)(v2 + 56);
  *id v157 = 77;
  *(void *)id v158 = "CARDIO_DANCE";
  *((void *)v158 + 1) = 12;
  v158[16] = 2;
  v9();
  unint64_t v159 = (void *)(v166 + v4 + 78 * v3);
  unint64_t v160 = (char *)v159 + *(int *)(v2 + 56);
  *unint64_t v159 = 78;
  *(void *)unint64_t v160 = "SOCIAL_DANCE";
  *((void *)v160 + 1) = 12;
  v160[16] = 2;
  v9();
  uint64_t v161 = (void *)(v166 + v4 + 79 * v3);
  uint64_t v162 = (char *)v161 + *(int *)(v2 + 56);
  *uint64_t v161 = 79;
  *(void *)uint64_t v162 = "PICKLEBALL";
  *((void *)v162 + 1) = 10;
  v162[16] = 2;
  v9();
  uint64_t v163 = (void *)(v166 + v4 + 80 * v3);
  unint64_t v164 = (char *)v163 + *(int *)(v2 + 56);
  void *v163 = 80;
  *(void *)unint64_t v164 = "COOLDOWN";
  *((void *)v164 + 1) = 8;
  v164[16] = 2;
  v9();
  return sub_22D2BC300();
}

uint64_t static PBActivityType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22D00FAE0(&qword_26853D4A0, (uint64_t)qword_268543B48, a1);
}

unint64_t sub_22D292164()
{
  unint64_t result = qword_268543B60;
  if (!qword_268543B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543B60);
  }
  return result;
}

unint64_t sub_22D2921BC()
{
  unint64_t result = qword_268543B68;
  if (!qword_268543B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543B68);
  }
  return result;
}

unint64_t sub_22D292214()
{
  unint64_t result = qword_268543B70;
  if (!qword_268543B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543B70);
  }
  return result;
}

uint64_t sub_22D292268()
{
  return sub_22D108E48(&qword_268543B78, &qword_268543B80);
}

unint64_t sub_22D29229C()
{
  unint64_t result = qword_268543B88;
  if (!qword_268543B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543B88);
  }
  return result;
}

unint64_t sub_22D2922F4()
{
  unint64_t result = qword_268543B90;
  if (!qword_268543B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543B90);
  }
  return result;
}

unint64_t sub_22D29234C()
{
  unint64_t result = qword_268543B98;
  if (!qword_268543B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543B98);
  }
  return result;
}

uint64_t sub_22D2923A0()
{
  return sub_22D108E48(&qword_268543BA0, &qword_268543BA8);
}

unint64_t sub_22D2923D4()
{
  unint64_t result = qword_268543BB0;
  if (!qword_268543BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543BB0);
  }
  return result;
}

unint64_t sub_22D29242C()
{
  unint64_t result = qword_268543BB8;
  if (!qword_268543BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543BB8);
  }
  return result;
}

unint64_t sub_22D292484()
{
  unint64_t result = qword_268543BC0;
  if (!qword_268543BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543BC0);
  }
  return result;
}

uint64_t sub_22D2924D8()
{
  return sub_22D108E48(&qword_268543BC8, &qword_268543BD0);
}

unint64_t sub_22D29250C()
{
  unint64_t result = qword_268543BD8;
  if (!qword_268543BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543BD8);
  }
  return result;
}

unint64_t sub_22D292564()
{
  unint64_t result = qword_268543BE0;
  if (!qword_268543BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543BE0);
  }
  return result;
}

unint64_t sub_22D2925BC()
{
  unint64_t result = qword_268543BE8;
  if (!qword_268543BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543BE8);
  }
  return result;
}

uint64_t sub_22D292610()
{
  return sub_22D108E48(&qword_268543BF0, &qword_268543BF8);
}

unint64_t sub_22D292644()
{
  unint64_t result = qword_268543C00;
  if (!qword_268543C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C00);
  }
  return result;
}

unint64_t sub_22D29269C()
{
  unint64_t result = qword_268543C08;
  if (!qword_268543C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C08);
  }
  return result;
}

unint64_t sub_22D2926F4()
{
  unint64_t result = qword_268543C10;
  if (!qword_268543C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C10);
  }
  return result;
}

uint64_t sub_22D292748()
{
  return sub_22D108E48(&qword_268543C18, &qword_268543C20);
}

unint64_t sub_22D29277C()
{
  unint64_t result = qword_268543C28;
  if (!qword_268543C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C28);
  }
  return result;
}

unint64_t sub_22D2927D4()
{
  unint64_t result = qword_268543C30;
  if (!qword_268543C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C30);
  }
  return result;
}

unint64_t sub_22D29282C()
{
  unint64_t result = qword_268543C38;
  if (!qword_268543C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C38);
  }
  return result;
}

uint64_t sub_22D292880()
{
  return sub_22D108E48(&qword_268543C40, &qword_268543C48);
}

unint64_t sub_22D2928B4()
{
  unint64_t result = qword_268543C50;
  if (!qword_268543C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C50);
  }
  return result;
}

unint64_t sub_22D29290C()
{
  unint64_t result = qword_268543C58;
  if (!qword_268543C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C58);
  }
  return result;
}

unint64_t sub_22D292964()
{
  unint64_t result = qword_268543C60;
  if (!qword_268543C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C60);
  }
  return result;
}

uint64_t sub_22D2929B8()
{
  return sub_22D108E48(&qword_268543C68, &qword_268543C70);
}

unint64_t sub_22D2929EC()
{
  unint64_t result = qword_268543C78;
  if (!qword_268543C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C78);
  }
  return result;
}

unint64_t sub_22D292A44()
{
  unint64_t result = qword_268543C80;
  if (!qword_268543C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C80);
  }
  return result;
}

unint64_t sub_22D292A9C()
{
  unint64_t result = qword_268543C88;
  if (!qword_268543C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543C88);
  }
  return result;
}

uint64_t sub_22D292AF0()
{
  return sub_22D108E48(&qword_268543C90, &qword_268543C98);
}

unint64_t sub_22D292B24()
{
  unint64_t result = qword_268543CA0;
  if (!qword_268543CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543CA0);
  }
  return result;
}

unint64_t sub_22D292B7C()
{
  unint64_t result = qword_268543CA8;
  if (!qword_268543CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543CA8);
  }
  return result;
}

unint64_t sub_22D292BD4()
{
  unint64_t result = qword_268543CB0;
  if (!qword_268543CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543CB0);
  }
  return result;
}

uint64_t sub_22D292C28()
{
  return sub_22D108E48(&qword_268543CB8, &qword_268543CC0);
}

unint64_t sub_22D292C5C()
{
  unint64_t result = qword_268543CC8;
  if (!qword_268543CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543CC8);
  }
  return result;
}

unint64_t sub_22D292CB4()
{
  unint64_t result = qword_268543CD0;
  if (!qword_268543CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543CD0);
  }
  return result;
}

unint64_t sub_22D292D0C()
{
  unint64_t result = qword_268543CD8;
  if (!qword_268543CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543CD8);
  }
  return result;
}

uint64_t sub_22D292D60()
{
  return sub_22D108E48(&qword_268543CE0, &qword_268543CE8);
}

unint64_t sub_22D292D94()
{
  unint64_t result = qword_268543CF0;
  if (!qword_268543CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543CF0);
  }
  return result;
}

unint64_t sub_22D292DEC()
{
  unint64_t result = qword_268543CF8;
  if (!qword_268543CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543CF8);
  }
  return result;
}

unint64_t sub_22D292E44()
{
  unint64_t result = qword_268543D00;
  if (!qword_268543D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543D00);
  }
  return result;
}

uint64_t sub_22D292E98()
{
  return sub_22D108E48(&qword_268543D08, &qword_268543D10);
}

uint64_t sub_22D292EC8@<X0>(uint64_t a1@<X8>)
{
  return sub_22D010020(&qword_26853D4A0, (uint64_t)qword_268543B48, a1);
}

ValueMetadata *type metadata accessor for PBGranularity()
{
  return &type metadata for PBGranularity;
}

ValueMetadata *type metadata accessor for PBDataType()
{
  return &type metadata for PBDataType;
}

ValueMetadata *type metadata accessor for PBGlucoseMealTime()
{
  return &type metadata for PBGlucoseMealTime;
}

ValueMetadata *type metadata accessor for PBSleepAnalysis()
{
  return &type metadata for PBSleepAnalysis;
}

ValueMetadata *type metadata accessor for PBAppleWalkingSteadinessClassification()
{
  return &type metadata for PBAppleWalkingSteadinessClassification;
}

ValueMetadata *type metadata accessor for PBAppleWalkingSteadinessEvent()
{
  return &type metadata for PBAppleWalkingSteadinessEvent;
}

ValueMetadata *type metadata accessor for PBCycleFactors()
{
  return &type metadata for PBCycleFactors;
}

ValueMetadata *type metadata accessor for PBCycleSymptoms()
{
  return &type metadata for PBCycleSymptoms;
}

ValueMetadata *type metadata accessor for PBECGClassification()
{
  return &type metadata for PBECGClassification;
}

ValueMetadata *type metadata accessor for PBClinicalType()
{
  return &type metadata for PBClinicalType;
}

ValueMetadata *type metadata accessor for PBActivityType()
{
  return &type metadata for PBActivityType;
}

unint64_t sub_22D292F9C()
{
  unint64_t result = qword_268543D18;
  if (!qword_268543D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543D18);
  }
  return result;
}

void destroy for ClinicalSharingSleepDaySummaryQuery(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for ClinicalSharingSleepDaySummaryQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  id v4 = v3;
  return a1;
}

void *assignWithCopy for ClinicalSharingSleepDaySummaryQuery(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  id v4 = (void *)a2[3];
  unint64_t v5 = (void *)a1[3];
  a1[3] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for ClinicalSharingSleepDaySummaryQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  id v4 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for ClinicalSharingSleepDaySummaryQuery()
{
  return &type metadata for ClinicalSharingSleepDaySummaryQuery;
}

uint64_t sub_22D293194(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_22D2BCFD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D294ECC();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v22 = v12;
  uint64_t v23 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF4B00(a1 + 16, (uint64_t)v25);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  sub_22D2BD000();
  sub_22D29578C(&qword_268543D48, MEMORY[0x263F44B20]);
  uint64_t v16 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v24 = v16;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  swift_retain();
  id v18 = a4;
  sub_22D2BC5D0();
  sub_22D294FD0(0, &qword_268543D28, (void (*)(uint64_t))sub_22D295044);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  sub_22D294FD0(0, (unint64_t *)&qword_26AEC2E70, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  sub_22D2950AC(&qword_268543D40, &qword_268543D28, (void (*)(uint64_t))sub_22D295044);
  sub_22D2950AC(&qword_26AEC2E68, (unint64_t *)&qword_26AEC2E70, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
  sub_22D2BC830();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_22D29578C(&qword_268543D50, (void (*)(uint64_t))sub_22D294ECC);
  uint64_t v19 = v22;
  uint64_t v20 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v19);
  return v20;
}

uint64_t sub_22D293508@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v27 = a6;
  sub_22D05C334();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2951AC();
  uint64_t v26 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_22D2937BC(*a1, a2, a3, a4, a5);
  swift_retain();
  id v21 = a5;
  unint64_t v22 = sub_22D295268(v20, (uint64_t)a2, a3, a4, v21);
  swift_bridgeObjectRelease();

  swift_release();
  unint64_t v28 = v22;
  sub_22D295148(0, &qword_26853E408, type metadata accessor for ClinicalSharingQueryOutput, MEMORY[0x263F8D488]);
  sub_22D05C448();
  sub_22D2BCD80();
  swift_bridgeObjectRelease();
  sub_22CFF49FC();
  sub_22D2BC540();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_22D29578C(&qword_268543D60, (void (*)(uint64_t))sub_22D2951AC);
  uint64_t v23 = v26;
  uint64_t v24 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v23);
  uint64_t *v27 = v24;
  return result;
}

uint64_t sub_22D2937BC(unint64_t a1, id a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v107 = a5;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D295148(0, &qword_26853D9D8, type metadata accessor for PBTypedData.OneOf_Raw, MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v115 = (uint64_t)v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v114 = (uint64_t)v98 - v15;
  uint64_t v112 = type metadata accessor for PBCategorySeries(0);
  uint64_t v16 = MEMORY[0x270FA5388](v112);
  unint64_t v103 = (char *)v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v104 = (uint64_t)v98 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v101 = (char *)v98 - v21;
  MEMORY[0x270FA5388](v20);
  unint64_t v102 = (void *)((char *)v98 - v22);
  sub_22D295148(0, &qword_26853D7B0, type metadata accessor for PBDateRange, v11);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v111 = (uint64_t)v98 - v24;
  uint64_t v113 = type metadata accessor for PBTypedData(0);
  uint64_t v105 = *(void *)(v113 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v113);
  uint64_t v27 = (char *)v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  unint64_t v29 = (char *)v98 - v28;
  sub_22D295148(0, &qword_26853D7A0, MEMORY[0x263F062D0], v11);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v100 = (char *)v98 - v31;
  uint64_t v110 = type metadata accessor for PBDateRange(0);
  uint64_t v116 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v117 = (uint64_t)v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v119 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_22D2BD470();
  }
  else
  {
    uint64_t v33 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v118 = v29;
  char v106 = v27;
  uint64_t v109 = a4;
  uint64_t v108 = a3;
  if (v33)
  {
    if (v33 < 1)
    {
      __break(1u);
      goto LABEL_45;
    }
    id v99 = a2;
    for (uint64_t i = 0; i != v33; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v35 = (id)MEMORY[0x230F7AF90](i, a1);
      }
      else {
        id v35 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v36 = v35;
      id v37 = objc_msgSend(v35, sel_periods);
      sub_22D030474(0, &qword_268543D68);
      unint64_t v38 = sub_22D2BCE00();

      if (v38 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_22D2BD470();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v39 > 0) {
        goto LABEL_16;
      }
      id v40 = objc_msgSend(v36, sel_schedules);
      sub_22D030474(0, &qword_268543D70);
      unint64_t v41 = sub_22D2BCE00();

      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_22D2BD470();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v42 > 0
        || (id v43 = objc_msgSend(v36, sel_sleepDurationGoal), v43, v43))
      {
LABEL_16:
        sub_22D2BD3A0();
        sub_22D2BD3E0();
        sub_22D2BD3F0();
        sub_22D2BD3B0();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    a1 = v119;
    unint64_t v29 = v118;
    a2 = v99;
    a4 = v109;
    a3 = v108;
  }
  else
  {
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x263F8EE78];
  }
  uint64_t v33 = (uint64_t)v107;
  if ((a1 & 0x8000000000000000) == 0 && (a1 & 0x4000000000000000) == 0)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_26;
    }
LABEL_42:
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  swift_retain();
  uint64_t v96 = sub_22D2BD470();
  swift_release();
  if (!v96) {
    goto LABEL_42;
  }
LABEL_26:
  unint64_t v44 = self;
  uint64_t v45 = (void *)sub_22D2BBD30();
  id v46 = objc_msgSend(v44, sel_hk_sleepDayIntervalForMorningIndexRange_calendar_, a3, a4, v45);

  uint64_t v47 = (uint64_t)v100;
  id v99 = v46;
  sub_22D2BB680();
  uint64_t v48 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  uint64_t v49 = v117;
  sub_22D22BDC4(5, 1, v47, a2);
  sub_22D29640C(v47, &qword_26853D7A0, MEMORY[0x263F062D0]);
  uint64_t v50 = v49;
  uint64_t v51 = v111;
  sub_22D2965E4(v50, v111, type metadata accessor for PBDateRange);
  uint64_t v52 = *(char **)(v116 + 56);
  v116 += 56;
  uint64_t v100 = v52;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v52)(v51, 0, 1, v110);
  sub_22D22DFB4(v51, (void *)v33, (uint64_t)v29);
  sub_22D29640C(v51, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v6 = (uint64_t)v101;
  sub_22D2BBFE0();
  uint64_t v5 = a3;
  a3 = *(int *)(v112 + 20);
  if (qword_26853CFA8 != -1) {
LABEL_45:
  }
    swift_once();
  *(void *)(v6 + a3) = qword_2685401B0;
  swift_retain();
  id v53 = (id)v33;
  swift_retain();
  unint64_t v54 = sub_22D2957D4(MEMORY[0x263F8EE78], a1, (uint64_t)a2, v5, a4, (uint64_t)v53);
  v98[1] = 0;
  id v107 = v53;

  swift_release();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries._StorageClass(0);
    swift_allocObject();
    uint64_t v55 = swift_retain();
    unint64_t v29 = v118;
    *(void *)(v6 + a3) = sub_22D165828(v55);
    swift_release();
  }
  uint64_t v56 = (unint64_t *)(*(void *)(v6 + a3)
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
  swift_beginAccess();
  unint64_t *v56 = v54;
  swift_bridgeObjectRelease();
  uint64_t v57 = (void (*)(void, void, void, void))v102;
  sub_22D29657C(v6, (uint64_t)v102, type metadata accessor for PBCategorySeries);
  uint64_t v58 = *(int *)(v113 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    uint64_t v59 = swift_retain();
    *(void *)&v29[v58] = sub_22D0040E0(v59);
    swift_release();
  }
  uint64_t v60 = *(void *)&v29[v58];
  uint64_t v61 = (uint64_t)v57;
  uint64_t v62 = v114;
  sub_22D29657C(v61, v114, type metadata accessor for PBCategorySeries);
  uint64_t v63 = type metadata accessor for PBTypedData.OneOf_Raw(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = *(void *)(v63 - 8);
  unint64_t v102 = *(void **)(v64 + 56);
  uint64_t v101 = (char *)(v64 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v102)(v62, 0, 1, v63);
  uint64_t v65 = v62;
  uint64_t v66 = v115;
  sub_22D29647C(v65, v115, &qword_26853D9D8, type metadata accessor for PBTypedData.OneOf_Raw);
  uint64_t v67 = v60
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__raw;
  swift_beginAccess();
  swift_retain();
  uint64_t v68 = (uint64_t)v118;
  sub_22D2964FC(v66, v67, &qword_26853D9D8, type metadata accessor for PBTypedData.OneOf_Raw);
  swift_endAccess();
  swift_release();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    uint64_t v69 = swift_retain();
    *(void *)(v68 + v58) = sub_22D0040E0(v69);
    swift_release();
  }
  uint64_t v70 = *(void *)(v68 + v58);
  swift_beginAccess();
  *(void *)(v70 + 16) = 84;
  *(unsigned char *)(v70 + 24) = 1;
  uint64_t v71 = v111;
  sub_22D2965E4(v117, v111, type metadata accessor for PBDateRange);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v100)(v71, 0, 1, v110);
  uint64_t v72 = (uint64_t)v106;
  uint64_t v73 = v108;
  uint64_t v74 = v109;
  uint64_t v75 = v107;
  sub_22D22DFB4(v71, v107, (uint64_t)v106);
  sub_22D29640C(v71, &qword_26853D7B0, type metadata accessor for PBDateRange);
  uint64_t v76 = (uint64_t)v103;
  sub_22D2BBFE0();
  uint64_t v77 = *(int *)(v112 + 20);
  *(void *)(v76 + v77) = qword_2685401B0;
  swift_retain();
  id v78 = v75;
  swift_retain();
  unint64_t v79 = sub_22D29591C(MEMORY[0x263F8EE78], a1, (uint64_t)a2, v73, v74, (uint64_t)v78);

  swift_release();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries._StorageClass(0);
    swift_allocObject();
    uint64_t v80 = swift_retain();
    *(void *)(v76 + v77) = sub_22D165828(v80);
    swift_release();
  }
  uint64_t v81 = (unint64_t *)(*(void *)(v76 + v77)
                           + OBJC_IVAR____TtCV19HealthRecordsDaemon16PBCategorySeriesP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__events);
  swift_beginAccess();
  *uint64_t v81 = v79;
  swift_bridgeObjectRelease();
  uint64_t v82 = v104;
  sub_22D29657C(v76, v104, type metadata accessor for PBCategorySeries);
  swift_release();
  uint64_t v83 = *(int *)(v113 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    uint64_t v84 = swift_retain();
    *(void *)(v72 + v83) = sub_22D0040E0(v84);
    swift_release();
  }
  uint64_t v85 = *(void *)(v72 + v83);
  uint64_t v86 = v114;
  sub_22D29657C(v82, v114, type metadata accessor for PBCategorySeries);
  swift_storeEnumTagMultiPayload();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v102)(v86, 0, 1, v63);
  uint64_t v87 = v115;
  sub_22D29647C(v86, v115, &qword_26853D9D8, type metadata accessor for PBTypedData.OneOf_Raw);
  uint64_t v88 = v85
      + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBTypedDataP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__raw;
  swift_beginAccess();
  swift_retain();
  sub_22D2964FC(v87, v88, &qword_26853D9D8, type metadata accessor for PBTypedData.OneOf_Raw);
  swift_endAccess();
  swift_release();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBTypedData._StorageClass(0);
    swift_allocObject();
    uint64_t v89 = swift_retain();
    *(void *)(v72 + v83) = sub_22D0040E0(v89);
    swift_release();
  }
  uint64_t v90 = *(void *)(v72 + v83);
  swift_beginAccess();
  *(void *)(v90 + 16) = 115;
  *(unsigned char *)(v90 + 24) = 1;
  sub_22D295148(0, &qword_268543958, type metadata accessor for PBTypedData, MEMORY[0x263F8E0F8]);
  uint64_t v91 = *(void *)(v105 + 72);
  unint64_t v92 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_22D2C0F10;
  uint64_t v94 = v93 + v92;
  uint64_t v95 = (uint64_t)v118;
  sub_22D2965E4((uint64_t)v118, v94, type metadata accessor for PBTypedData);
  sub_22D29657C(v72, v94 + v91, type metadata accessor for PBTypedData);

  sub_22D29664C(v95, type metadata accessor for PBTypedData);
  sub_22D29664C(v117, type metadata accessor for PBDateRange);
  return v93;
}

uint64_t sub_22D294734(unint64_t *a1, id *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v43 = a6;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v40 = a3;
  uint64_t v8 = type metadata accessor for PBCategorySeries.Event(0);
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(*a2, sel_periods);
  sub_22D030474(0, &qword_268543D68);
  unint64_t v12 = sub_22D2BCE00();

  if (v12 >> 62) {
    goto LABEL_29;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v13)
  {
    unint64_t v14 = 0;
    uint64_t v34 = a1;
    unint64_t v35 = v12 & 0xC000000000000001;
    unint64_t v30 = v12 + 32;
    uint64_t v31 = v12 & 0xFFFFFFFFFFFFFF8;
    unint64_t v38 = v10;
    uint64_t v32 = v13;
    unint64_t v33 = v12;
    while (1)
    {
      if (v35)
      {
        id v15 = (id)MEMORY[0x230F7AF90](v14, v12);
      }
      else
      {
        if (v14 >= *(void *)(v31 + 16)) {
          goto LABEL_28;
        }
        id v15 = *(id *)(v30 + 8 * v14);
      }
      uint64_t v16 = v15;
      if (__OFADD__(v14++, 1)) {
        break;
      }
      id v18 = objc_msgSend(v15, sel_segments);
      sub_22D030474(0, &qword_268543D78);
      unint64_t v19 = sub_22D2BCE00();

      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_22D2BD470();
        swift_bridgeObjectRelease();
        if (!v20) {
          goto LABEL_24;
        }
LABEL_12:
        if (v20 < 1) {
          goto LABEL_27;
        }
        id v36 = v16;
        unint64_t v37 = v14;
        uint64_t v21 = 0;
        unint64_t v22 = *a1;
        do
        {
          if ((v19 & 0xC000000000000001) != 0) {
            id v23 = (id)MEMORY[0x230F7AF90](v21, v19);
          }
          else {
            id v23 = *(id *)(v19 + 8 * v21 + 32);
          }
          uint64_t v24 = v23;
          uint64_t v25 = (void *)MEMORY[0x230F7B690]();
          sub_22D294ADC(v24, v40, v41, v42, v43, (uint64_t)v10);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v22 = sub_22D281EF8(0, *(void *)(v22 + 16) + 1, 1, v22);
          }
          unint64_t v27 = *(void *)(v22 + 16);
          unint64_t v26 = *(void *)(v22 + 24);
          if (v27 >= v26 >> 1) {
            unint64_t v22 = sub_22D281EF8(v26 > 1, v27 + 1, 1, v22);
          }
          ++v21;
          *(void *)(v22 + 16) = v27 + 1;
          uint64_t v10 = v38;
          sub_22D29657C((uint64_t)v38, v22+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v27, type metadata accessor for PBCategorySeries.Event);
        }
        while (v20 != v21);

        swift_bridgeObjectRelease();
        unint64_t v12 = v33;
        a1 = v34;
        unint64_t *v34 = v22;
        uint64_t v13 = v32;
        unint64_t v14 = v37;
        if (v37 == v32) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v20) {
          goto LABEL_12;
        }
LABEL_24:

        swift_bridgeObjectRelease();
        if (v14 == v13) {
          return swift_bridgeObjectRelease();
        }
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D294ADC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  sub_22D295148(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_22D2BB6F0();
  uint64_t v32 = *(void *)(v17 - 8);
  uint64_t v33 = v17;
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v38 = a1;
  id v20 = objc_msgSend(a1, sel_dateInterval);
  sub_22D2BB680();

  sub_22D2BBFE0();
  uint64_t v21 = *(int *)(type metadata accessor for PBCategorySeries.Event(0) + 20);
  if (qword_26853CFD0 != -1) {
    swift_once();
  }
  *(void *)(a6 + v21) = qword_268540208;
  swift_retain();
  sub_22D2BB6C0();
  uint64_t v22 = sub_22D2BBC30();
  id v23 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v13, 0, 1, v22);
  sub_22D2BB690();
  v23(v11, 0, 1, v22);
  sub_22D24E138((uint64_t)v13, (uint64_t)v11, v34, (uint64_t)v16);
  uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_22D29640C((uint64_t)v11, &qword_26AEC0F48, MEMORY[0x263F07490]);
  sub_22D29640C((uint64_t)v13, &qword_26AEC0F48, v24);
  PBCategorySeries.Event.recordedTime.setter((uint64_t)v16);
  id v25 = v38;
  uint64_t result = (uint64_t)objc_msgSend(v38, sel_category);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  int v27 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for PBCategorySeries.Event._StorageClass(0);
    swift_allocObject();
    uint64_t v28 = swift_retain();
    *(void *)(a6 + v21) = sub_22D1674C4(v28);
    swift_release();
  }
  uint64_t v29 = *(void *)(a6 + v21);
  swift_beginAccess();
  *(_DWORD *)(v29 + 16) = v27;
  unint64_t v30 = (unint64_t)objc_msgSend(v25, sel_category);
  uint64_t v31 = 0;
  if (v30 <= 5) {
    uint64_t v31 = qword_22D2D4AE8[v30];
  }
  uint64_t v39 = v31;
  char v40 = 1;
  PBCategorySeries.Event.sleepAnalysis.setter(&v39);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v19, v33);
}

uint64_t sub_22D294EC0()
{
  return sub_22D293194(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_22D294ECC()
{
  if (!qword_268543D20)
  {
    sub_22D294FD0(255, (unint64_t *)&qword_26AEC2E70, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    sub_22D294FD0(255, &qword_268543D28, (void (*)(uint64_t))sub_22D295044);
    sub_22D2950AC(&qword_26AEC2E68, (unint64_t *)&qword_26AEC2E70, (void (*)(uint64_t))type metadata accessor for ClinicalSharingQueryOutput);
    sub_22D2950AC(&qword_268543D40, &qword_268543D28, (void (*)(uint64_t))sub_22D295044);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543D20);
    }
  }
}

void sub_22D294FD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_22CFF49FC();
    unint64_t v4 = sub_22D2BC5E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_22D295044()
{
  if (!qword_268543D30)
  {
    sub_22D030474(255, &qword_268543D38);
    unint64_t v0 = sub_22D2BCE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543D30);
    }
  }
}

uint64_t sub_22D2950AC(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D294FD0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2950FC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D29513C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D293508(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), a2);
}

void sub_22D295148(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D2951AC()
{
  if (!qword_268543D58)
  {
    sub_22D295148(255, &qword_26853E408, type metadata accessor for ClinicalSharingQueryOutput, MEMORY[0x263F8D488]);
    sub_22CFF49FC();
    sub_22D05C448();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543D58);
    }
  }
}

unint64_t sub_22D295268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v46 = a3;
  uint64_t v45 = sub_22D2BBF00();
  uint64_t v9 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  id v11 = (void *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D295148(0, &qword_26853E458, type metadata accessor for ClinicalSharingQueryOutput, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v36 - v13;
  uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
  uint64_t v15 = *(void *)(Output - 8);
  uint64_t v16 = MEMORY[0x270FA5388](Output);
  uint64_t v49 = (uint64_t)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v39 = (uint64_t)v36 - v18;
  uint64_t v19 = *(void *)(a1 + 16);
  if (!v19) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v20 = *(void *)(type metadata accessor for PBTypedData(0) - 8);
  uint64_t v21 = v15;
  uint64_t v22 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  uint64_t v23 = *(void *)(a2 + 56);
  uint64_t v42 = *(void *)(v20 + 72);
  char v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v41 = (void (**)(void *, uint64_t))(v9 + 8);
  uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v38 = v21;
  v36[1] = a1;
  swift_bridgeObjectRetain();
  unint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v43 = a2;
  do
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_22D22F1BC(v48, v11);
    MEMORY[0x270FA5388](v25);
    v36[-2] = v11;
    swift_bridgeObjectRetain();
    uint64_t v26 = v6;
    uint64_t v27 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D05C90C, (uint64_t)&v36[-4], v23);
    swift_bridgeObjectRelease_n();
    (*v41)(v11, v45);
    if (*(void *)(v27 + 16))
    {
      sub_22D2965E4(v22, (uint64_t)v14, type metadata accessor for PBTypedData);
      uint64_t v28 = sub_22D237C78(v27);
      swift_bridgeObjectRelease();
      uint64_t v29 = Output;
      *(void *)&v14[*(int *)(Output + 20)] = v28;
      unint64_t v30 = &v14[*(int *)(v29 + 24)];
      *(void *)unint64_t v30 = 0;
      *((void *)v30 + 1) = 0;
      ((void (*)(char *, void, uint64_t))*v40)(v14, 0, 1);
    }
    else
    {
      uint64_t v31 = Output;
      (*v40)(v14, 1, 1, Output);
      swift_bridgeObjectRelease();
      if ((*v37)(v14, 1, v31) == 1)
      {
        sub_22D29640C((uint64_t)v14, &qword_26853E458, type metadata accessor for ClinicalSharingQueryOutput);
        goto LABEL_4;
      }
    }
    uint64_t v32 = v39;
    sub_22D29657C((uint64_t)v14, v39, type metadata accessor for ClinicalSharingQueryOutput);
    sub_22D29657C(v32, v49, type metadata accessor for ClinicalSharingQueryOutput);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v24 = sub_22D281414(0, *(void *)(v24 + 16) + 1, 1, v24);
    }
    unint64_t v34 = *(void *)(v24 + 16);
    unint64_t v33 = *(void *)(v24 + 24);
    if (v34 >= v33 >> 1) {
      unint64_t v24 = sub_22D281414(v33 > 1, v34 + 1, 1, v24);
    }
    *(void *)(v24 + 16) = v34 + 1;
    sub_22D29657C(v49, v24+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v34, type metadata accessor for ClinicalSharingQueryOutput);
LABEL_4:
    v22 += v42;
    --v19;
    uint64_t v6 = v26;
  }
  while (v19);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_22D29578C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22D2957D4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v19 = a1;
  uint64_t v10 = (void *)a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_22D2BD470())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v13 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F7AF90](i - 4, a2) : *(id *)(a2 + 8 * i);
      uint64_t v10 = v13;
      uint64_t v14 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v18 = v13;
      sub_22D294734(&v19, &v18, a3, a4, a5, a6);
      if (v6)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return (unint64_t)v10;
      }

      if (v14 == v11)
      {
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (unint64_t)v10;
}

unint64_t sub_22D29591C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = v6;
  uint64_t v76 = a6;
  uint64_t v75 = a5;
  uint64_t v74 = a4;
  uint64_t v86 = a3;
  unint64_t v90 = a1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_22D295148(0, &qword_26853D7B0, type metadata accessor for PBDateRange, MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v73 = (uint64_t)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v72 = (uint64_t)v64 - v13;
  sub_22D295148(0, &qword_26AEC0F48, MEMORY[0x263F07490], v9);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v71 = (char *)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v70 = (char *)v64 - v17;
  uint64_t v69 = type metadata accessor for PBDateRange(0);
  uint64_t v18 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v83 = (uint64_t)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D295148(0, &qword_26853D7A0, MEMORY[0x263F062D0], v9);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  id v78 = (char *)v64 - v24;
  uint64_t v92 = sub_22D2BB6F0();
  uint64_t v25 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v82 = (char *)v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D295148(0, &qword_268543160, type metadata accessor for PBCategorySeries.Event, v9);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)v64 - v28;
  uint64_t v91 = type metadata accessor for PBCategorySeries.Event(0);
  uint64_t v77 = *(void *)(v91 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v91);
  uint64_t v81 = (uint64_t)v64 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v80 = (uint64_t)v64 - v32;
  if (a2 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_22D2BD470();
    if (v33) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v33 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v33)
    {
LABEL_3:
      v64[1] = v7;
      uint64_t v88 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
      unint64_t v89 = a2 & 0xC000000000000001;
      unint64_t v79 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
      uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v25 + 32);
      uint64_t v66 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56);
      uint64_t v65 = (void (**)(char *, uint64_t))(v25 + 8);
      uint64_t v25 = (uint64_t)v78;
      uint64_t v87 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
      uint64_t v34 = 4;
      unint64_t v85 = a2;
      uint64_t v68 = v23;
      uint64_t v84 = v33;
      do
      {
        if (v89) {
          id v37 = (id)MEMORY[0x230F7AF90](v34 - 4, a2);
        }
        else {
          id v37 = *(id *)(a2 + 8 * v34);
        }
        uint64_t v38 = v37;
        uint64_t v18 = v34 - 3;
        if (__OFADD__(v34 - 4, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        uint64_t v93 = MEMORY[0x230F7B690]();
        unint64_t v7 = (unint64_t)objc_msgSend(v38, sel_primarySchedule);
        uint64_t v94 = v38;
        uint64_t v95 = v34 - 3;
        if (v7)
        {
          uint64_t v39 = v38;
          uint64_t v40 = (uint64_t)v29;
          id v41 = objc_msgSend(v39, sel_morningIndex);
          uint64_t v42 = (void *)sub_22D2BBD30();
          id v43 = objc_msgSend((id)v7, sel_bedtimeDateIntervalForMorningIndex_calendar_, v41, v42);

          if (v43)
          {
            sub_22D2BB680();

            uint64_t v44 = 0;
          }
          else
          {
            uint64_t v44 = 1;
          }
          uint64_t v29 = (char *)v40;
          uint64_t v33 = v84;
          uint64_t v45 = v92;
          (*v88)(v23, v44, 1, v92);
          sub_22D29647C((uint64_t)v23, v25, &qword_26853D7A0, MEMORY[0x263F062D0]);
          int v46 = (*v79)(v25, 1, v45);
          a2 = v85;
          if (v46 != 1)
          {
            (*v67)(v82, v25, v92);
            sub_22D2BBFE0();
            uint64_t v47 = *(int *)(v91 + 20);
            if (qword_26853CFD0 != -1) {
              swift_once();
            }
            *(void *)(v40 + v47) = qword_268540208;
            swift_retain();
            uint64_t v48 = (uint64_t)v70;
            sub_22D2BB6C0();
            uint64_t v49 = sub_22D2BBC30();
            uint64_t v50 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
            v50(v48, 0, 1, v49);
            uint64_t v51 = (uint64_t)v71;
            sub_22D2BB690();
            v50(v51, 0, 1, v49);
            uint64_t v29 = (char *)v40;
            sub_22D24E138(v48, v51, v86, v83);
            uint64_t v52 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
            sub_22D29640C(v51, &qword_26AEC0F48, MEMORY[0x263F07490]);
            sub_22D29640C(v48, &qword_26AEC0F48, v52);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              type metadata accessor for PBCategorySeries.Event._StorageClass(0);
              swift_allocObject();
              uint64_t v53 = swift_retain();
              *(void *)(v40 + v47) = sub_22D1674C4(v53);
              swift_release();
            }
            uint64_t v54 = *(void *)(v40 + v47);
            uint64_t v55 = v72;
            sub_22D29657C(v83, v72, type metadata accessor for PBDateRange);
            (*v66)(v55, 0, 1, v69);
            uint64_t v56 = v55;
            uint64_t v57 = v73;
            sub_22D29647C(v56, v73, &qword_26853D7B0, type metadata accessor for PBDateRange);
            uint64_t v58 = v54
                + OBJC_IVAR____TtCVV19HealthRecordsDaemon16PBCategorySeries5EventP33_F8BD0C5BAFF9793DC2607055D044CB4F13_StorageClass__recordedTime;
            swift_beginAccess();
            swift_retain();
            sub_22D2964FC(v57, v58, &qword_26853D7B0, type metadata accessor for PBDateRange);
            swift_endAccess();
            swift_release();
            (*v65)(v82, v92);
            (*v87)(v40, 0, 1, v91);
            uint64_t v59 = v80;
            sub_22D29657C(v40, v80, type metadata accessor for PBCategorySeries.Event);
            sub_22D2965E4(v59, v81, type metadata accessor for PBCategorySeries.Event);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v36 = (void *)v93;
            uint64_t v35 = v94;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              unint64_t v90 = sub_22D281EF8(0, *(void *)(v90 + 16) + 1, 1, v90);
            }
            a2 = v85;
            uint64_t v23 = v68;
            uint64_t v25 = (uint64_t)v78;
            unint64_t v7 = *(void *)(v90 + 16);
            unint64_t v61 = *(void *)(v90 + 24);
            if (v7 >= v61 >> 1) {
              unint64_t v90 = sub_22D281EF8(v61 > 1, v7 + 1, 1, v90);
            }
            unint64_t v62 = v90;
            *(void *)(v90 + 16) = v7 + 1;
            sub_22D29657C(v81, v62+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v7, type metadata accessor for PBCategorySeries.Event);
            sub_22D29664C(v80, type metadata accessor for PBCategorySeries.Event);
            uint64_t v33 = v84;
            goto LABEL_6;
          }
        }
        else
        {
          (*v88)((char *)v25, 1, 1, v92);
        }
        sub_22D29640C(v25, &qword_26853D7A0, MEMORY[0x263F062D0]);
        (*v87)((uint64_t)v29, 1, 1, v91);
        sub_22D29640C((uint64_t)v29, &qword_268543160, type metadata accessor for PBCategorySeries.Event);
        uint64_t v36 = (void *)v93;
        uint64_t v35 = v94;
LABEL_6:

        ++v34;
      }
      while (v95 != v33);
    }
  }
  swift_bridgeObjectRelease();
  return v90;
}

uint64_t sub_22D29640C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D295148(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D29647C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D295148(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D2964FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_22D295148(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D29657C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D2965E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D29664C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_22D2966AC()
{
  sub_22D2967C0((id)0x31E);
  if (v0)
  {
    unint64_t v1 = v0;
    if (v0 >> 62) {
      goto LABEL_16;
    }
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v2; uint64_t v2 = sub_22D2BD470())
    {
      uint64_t v3 = 4;
      while (1)
      {
        id v4 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F7AF90](v3 - 4, v1) : *(id *)(v1 + 8 * v3);
        uint64_t v5 = v4;
        uint64_t v6 = v3 - 3;
        if (__OFADD__(v3 - 4, 1)) {
          break;
        }
        id v7 = objc_msgSend(v4, sel_RxNormCoding);

        if (v7)
        {
          swift_bridgeObjectRelease_n();
          return v5;
        }

        ++v3;
        if (v6 == v2) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_22D2967C0(id a1)
{
  id v3 = objc_msgSend(v1, sel_relationships);
  if (v3)
  {
    sub_22D296A64();
    unint64_t v4 = sub_22D2BCE00();

    uint64_t v5 = MEMORY[0x263F8EE78];
    uint64_t v16 = MEMORY[0x263F8EE78];
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_22D2BD470();
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          goto LABEL_34;
        }
        for (uint64_t i = 0; i != v6; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v8 = (id)MEMORY[0x230F7AF90](i, v4);
          }
          else {
            id v8 = *(id *)(v4 + 8 * i + 32);
          }
          uint64_t v9 = v8;
          if (objc_msgSend(v8, sel_type) == a1)
          {
            sub_22D2BD3A0();
            sub_22D2BD3E0();
            sub_22D2BD3F0();
            sub_22D2BD3B0();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v10 = v16;
        uint64_t v17 = v5;
        if (v10 < 0) {
          goto LABEL_30;
        }
LABEL_17:
        if ((v10 & 0x4000000000000000) == 0)
        {
          uint64_t v11 = *(void *)(v10 + 16);
          swift_retain();
          if (!v11)
          {
LABEL_31:
            swift_release();
            swift_release();
            return;
          }
          goto LABEL_19;
        }
LABEL_30:
        swift_retain();
        uint64_t v11 = sub_22D2BD470();
        if (!v11) {
          goto LABEL_31;
        }
LABEL_19:
        if (v11 >= 1)
        {
          for (uint64_t j = 0; j != v11; ++j)
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v13 = (id)MEMORY[0x230F7AF90](j, v10);
            }
            else {
              id v13 = *(id *)(v10 + 8 * j + 32);
            }
            uint64_t v14 = v13;
            id v15 = objc_msgSend(v13, sel_destination);

            if (v15)
            {
              MEMORY[0x230F7AA40]();
              if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_22D2BCE30();
              }
              sub_22D2BCE50();
              sub_22D2BCE20();
            }
          }
          goto LABEL_31;
        }
LABEL_34:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v6) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t v17 = v5;
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_30;
    }
    goto LABEL_17;
  }
}

unint64_t sub_22D296A64()
{
  unint64_t result = qword_268543D80;
  if (!qword_268543D80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268543D80);
  }
  return result;
}

uint64_t destroy for ClinicalSharingFHIRResource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 48);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ClinicalSharingFHIRResource(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = a2[4];
  uint64_t v5 = a2 + 5;
  uint64_t v6 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 40) = *v5;
  }
  else
  {
    *(void *)(a1 + 40) = *(void *)v5;
    *(void *)(a1 + 48) = v6;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ClinicalSharingFHIRResource(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  if (a1[6] != 1)
  {
    if (v4 != 1)
    {
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_22D296C94((uint64_t)(a1 + 5));
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    return a1;
  }
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22D296C94(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for ClinicalSharingFHIRResource(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v6 = a2 + 5;
  if (a1[6] != 1)
  {
    uint64_t v7 = a2[6];
    if (v7 != 1)
    {
      a1[5] = *v6;
      a1[6] = v7;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_22D296C94((uint64_t)(a1 + 5));
  }
  *(_OWORD *)(a1 + 5) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingFHIRResource(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingFHIRResource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingFHIRSearchEntry()
{
  return &type metadata for ClinicalSharingFHIRSearchEntry;
}

uint64_t sub_22D296E48()
{
  return 0x656372756F736572;
}

uint64_t sub_22D296E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656372756F736572 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_22D2BD660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22D296EF8(uint64_t a1)
{
  unint64_t v2 = sub_22D2971D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D296F34(uint64_t a1)
{
  unint64_t v2 = sub_22D2971D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_22D296F70@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D296FC0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_22D296FC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D297174();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D2971D0();
  sub_22D2BD7A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_22D297224();
  sub_22D2BD560();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  long long v14 = v17;
  long long v15 = v16;
  long long v13 = v18;
  uint64_t v10 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  long long v12 = v14;
  *(_OWORD *)a2 = v15;
  *(_OWORD *)(a2 + 16) = v12;
  *(_OWORD *)(a2 + 32) = v13;
  *(void *)(a2 + 48) = v10;
  return result;
}

void sub_22D297174()
{
  if (!qword_268543D88)
  {
    sub_22D2971D0();
    unint64_t v0 = sub_22D2BD570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543D88);
    }
  }
}

unint64_t sub_22D2971D0()
{
  unint64_t result = qword_268543D90;
  if (!qword_268543D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543D90);
  }
  return result;
}

unint64_t sub_22D297224()
{
  unint64_t result = qword_268543D98;
  if (!qword_268543D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543D98);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClinicalSharingFHIRSearchEntry.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22D297314);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingFHIRSearchEntry.CodingKeys()
{
  return &type metadata for ClinicalSharingFHIRSearchEntry.CodingKeys;
}

unint64_t sub_22D297350()
{
  unint64_t result = qword_268543DA0;
  if (!qword_268543DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543DA0);
  }
  return result;
}

unint64_t sub_22D2973A8()
{
  unint64_t result = qword_268543DA8;
  if (!qword_268543DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543DA8);
  }
  return result;
}

unint64_t sub_22D297400()
{
  unint64_t result = qword_268543DB0;
  if (!qword_268543DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543DB0);
  }
  return result;
}

uint64_t *sub_22D297454(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22D2BBAA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

void sub_22D297524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_22D297598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_22D297618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_22D2976A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_22D29771C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t sub_22D2977A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D2977B4);
}

uint64_t sub_22D2977B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_22D297874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D297888);
}

uint64_t sub_22D297888(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_22D2BBAA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for PublisherOutputWriter()
{
  uint64_t result = qword_268543DB8;
  if (!qword_268543DB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D297990()
{
  uint64_t result = sub_22D2BBAA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_22D297A28()
{
  id v1 = objc_msgSend(v0, sel_sampleType);
  id v2 = objc_msgSend(v1, sel_code);

  if (v2 != (id)15) {
    return 0;
  }
  id v3 = objc_msgSend(v0, sel_metadata);
  if (v3)
  {
    uint64_t v4 = sub_22D2BCB00();

    uint64_t v5 = sub_22D2BCBD0();
    if (*(void *)(v4 + 16) && (unint64_t v7 = sub_22D04EB7C(v5, v6), (v8 & 1) != 0))
    {
      sub_22CFF5A90(*(void *)(v4 + 56) + 32 * v7, (uint64_t)&v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v12 + 1))
      {
        sub_22D056B08(&v11, v13);
        sub_22CFF5A90((uint64_t)v13, (uint64_t)&v11);
        sub_22D03490C();
        if (swift_dynamicCast())
        {
          id v3 = objc_msgSend(v10, sel_integerValue);

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
          return v3;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
        return 0;
      }
    }
    else
    {
      long long v11 = 0u;
      long long v12 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_22CFF5998((uint64_t)&v11);
    return 0;
  }
  return v3;
}

ValueMetadata *type metadata accessor for ClinicalSharingFHIRContent()
{
  return &type metadata for ClinicalSharingFHIRContent;
}

uint64_t sub_22D297BD8()
{
  return 0x656D686361747461;
}

uint64_t sub_22D297BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656D686361747461 && a2 == 0xEA0000000000746ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_22D2BD660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22D297C98(uint64_t a1)
{
  unint64_t v2 = sub_22D297F2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D297CD4(uint64_t a1)
{
  unint64_t v2 = sub_22D297F2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_22D297D10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_22D297D40(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

void *sub_22D297D40(void *a1)
{
  sub_22D297ED0();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D297F2C();
  sub_22D2BD7A0();
  if (!v1)
  {
    sub_22D297F80();
    sub_22D2BD560();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    char v8 = v10;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void sub_22D297ED0()
{
  if (!qword_268543DC8)
  {
    sub_22D297F2C();
    unint64_t v0 = sub_22D2BD570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543DC8);
    }
  }
}

unint64_t sub_22D297F2C()
{
  unint64_t result = qword_268543DD0;
  if (!qword_268543DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543DD0);
  }
  return result;
}

unint64_t sub_22D297F80()
{
  unint64_t result = qword_268543DD8;
  if (!qword_268543DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543DD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClinicalSharingFHIRContent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22D298070);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingFHIRContent.CodingKeys()
{
  return &type metadata for ClinicalSharingFHIRContent.CodingKeys;
}

unint64_t sub_22D2980AC()
{
  unint64_t result = qword_268543DE0;
  if (!qword_268543DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543DE0);
  }
  return result;
}

unint64_t sub_22D298104()
{
  unint64_t result = qword_268543DE8;
  if (!qword_268543DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543DE8);
  }
  return result;
}

unint64_t sub_22D29815C()
{
  unint64_t result = qword_268543DF0;
  if (!qword_268543DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543DF0);
  }
  return result;
}

uint64_t sub_22D2981B0()
{
  return sub_22D2BD760();
}

uint64_t sub_22D298280()
{
  sub_22D2BCC70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D29838C()
{
  return sub_22D2BD760();
}

uint64_t sub_22D2984A8()
{
  return sub_22D2BD760();
}

uint64_t sub_22D298574(unsigned __int8 *a1, char *a2)
{
  return sub_22D0B91C0(*a1, *a2);
}

uint64_t sub_22D298580()
{
  return sub_22D2981B0();
}

uint64_t sub_22D298588()
{
  sub_22D2BCC70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D298640()
{
  return sub_22D2984A8();
}

uint64_t sub_22D298648@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22D29A544();
  *a1 = result;
  return result;
}

void sub_22D298678(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7566185;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701667182;
      goto LABEL_3;
    case 2:
      *a1 = 0x6972755F6F676F6CLL;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000011;
      a1[1] = 0x800000022D2D58E0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_22D298708()
{
  unint64_t result = 7566185;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6972755F6F676F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22D29878C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22D29A544();
  *a1 = result;
  return result;
}

uint64_t sub_22D2987B4(uint64_t a1)
{
  unint64_t v2 = sub_22D298BE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D2987F0(uint64_t a1)
{
  unint64_t v2 = sub_22D298BE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VHRDirectoryIssuer.iss.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22D2BBAA0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t VHRDirectoryIssuer.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for VHRDirectoryIssuer() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for VHRDirectoryIssuer()
{
  uint64_t result = qword_268543E10;
  if (!qword_268543E10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t VHRDirectoryIssuer.logoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for VHRDirectoryIssuer();
  return sub_22D299194(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))sub_22CFF9E78);
}

uint64_t VHRDirectoryIssuer.softwareLogoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for VHRDirectoryIssuer();
  return sub_22D299194(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))sub_22CFF9E78);
}

uint64_t VHRDirectoryIssuer.encode(to:)(void *a1)
{
  sub_22D299130(0, &qword_268543DF8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D298BE4();
  sub_22D2BD7B0();
  char v13 = 0;
  sub_22D2BBAA0();
  sub_22D0D23C8(&qword_26853F2A0);
  sub_22D2BD5F0();
  if (!v1)
  {
    type metadata accessor for VHRDirectoryIssuer();
    char v12 = 1;
    sub_22D2BD5C0();
    char v11 = 2;
    sub_22D2BD5B0();
    char v10 = 3;
    sub_22D2BD5B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_22D298BE4()
{
  unint64_t result = qword_268543E00;
  if (!qword_268543E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543E00);
  }
  return result;
}

uint64_t VHRDirectoryIssuer.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  sub_22CFF9E78();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)v29 - v7;
  uint64_t v36 = sub_22D2BBAA0();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v35 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D299130(0, &qword_268543E08, MEMORY[0x263F8E040]);
  uint64_t v37 = v10;
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)v29 - v11;
  uint64_t v13 = type metadata accessor for VHRDirectoryIssuer();
  MEMORY[0x270FA5388](v13);
  long long v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D298BE4();
  uint64_t v38 = v12;
  uint64_t v16 = (uint64_t)v39;
  sub_22D2BD7A0();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v30 = v6;
  uint64_t v31 = v8;
  uint64_t v39 = a1;
  uint64_t v17 = (uint64_t)v15;
  uint64_t v18 = v34;
  char v43 = 0;
  uint64_t v19 = sub_22D0D23C8(&qword_26853F2B0);
  uint64_t v20 = v35;
  uint64_t v21 = v36;
  sub_22D2BD560();
  v29[1] = v19;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v20, v21);
  char v42 = 1;
  uint64_t v22 = sub_22D2BD540();
  uint64_t v35 = (char *)v13;
  uint64_t v23 = (uint64_t *)&v15[*(int *)(v13 + 20)];
  *uint64_t v23 = v22;
  v23[1] = v24;
  char v41 = 2;
  uint64_t v25 = (uint64_t)v31;
  sub_22D2BD530();
  sub_22D08A690(v25, (uint64_t)&v15[*((int *)v35 + 6)]);
  char v40 = 3;
  uint64_t v27 = (uint64_t)v30;
  sub_22D2BD530();
  uint64_t v28 = v35;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v37);
  sub_22D08A690(v27, v17 + *((int *)v28 + 7));
  sub_22D299194(v17, v32, (uint64_t (*)(void))type metadata accessor for VHRDirectoryIssuer);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return sub_22D2991FC(v17, (uint64_t (*)(void))type metadata accessor for VHRDirectoryIssuer);
}

void sub_22D299130(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_22D298BE4();
    unint64_t v7 = a3(a1, &type metadata for VHRDirectoryIssuer.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D299194(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D2991FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D29925C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VHRDirectoryIssuer.init(from:)(a1, a2);
}

uint64_t sub_22D299274(void *a1)
{
  return VHRDirectoryIssuer.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for VHRDirectoryIssuer(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22D2BBAA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    char v12 = (uint64_t *)((char *)a1 + v10);
    uint64_t v13 = (uint64_t *)((char *)a2 + v10);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    long long v15 = (char *)a1 + v11;
    uint64_t v16 = (char *)a2 + v11;
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    if (v17(v16, 1, v7))
    {
      sub_22CFF9E78();
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v15, (uint64_t *)v16, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v17(v22, 1, v7))
    {
      sub_22CFF9E78();
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v21, (uint64_t *)v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for VHRDirectoryIssuer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBAA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v7(v6, 1, v4)) {
    v10(v6, v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
  }
  return result;
}

char *initializeWithCopy for VHRDirectoryIssuer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  char v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  long long v15 = &a2[v10];
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  if (v16(v15, 1, v6))
  {
    sub_22CFF9E78();
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v8(v14, v15, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v16(v20, 1, v6))
  {
    sub_22CFF9E78();
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v8(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for VHRDirectoryIssuer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v25 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v25(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  char v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v15 = v14(&a1[v11], 1, v6);
  int v16 = v14(v13, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v13, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_22CFF9E78();
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v25(v12, v13, v6);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v14(&a1[v18], 1, v6);
  int v22 = v14(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      v25(v19, v20, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_22CFF9E78();
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  return a1;
}

char *initializeWithTake for VHRDirectoryIssuer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v18(&a2[v9], 1, v6))
  {
    sub_22CFF9E78();
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  int v15 = &a2[v13];
  if (v18(v15, 1, v6))
  {
    sub_22CFF9E78();
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v8(v14, v15, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for VHRDirectoryIssuer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v27 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v27(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = (uint64_t *)&a2[v8];
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  int v15 = &a2[v13];
  uint64_t v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v17 = v16(&a1[v13], 1, v6);
  int v18 = v16(v15, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_6:
    sub_22CFF9E78();
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v27(v14, v15, v6);
LABEL_7:
  uint64_t v20 = a3[7];
  int v21 = &a1[v20];
  int v22 = &a2[v20];
  int v23 = v16(&a1[v20], 1, v6);
  int v24 = v16(v22, 1, v6);
  if (!v23)
  {
    if (!v24)
    {
      v27(v21, v22, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    sub_22CFF9E78();
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v21, v22, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for VHRDirectoryIssuer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D299FF4);
}

uint64_t sub_22D299FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22D2BBAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_22CFF9E78();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for VHRDirectoryIssuer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D29A138);
}

uint64_t sub_22D29A138(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_22D2BBAA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    sub_22CFF9E78();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_22D29A268()
{
  sub_22D2BBAA0();
  if (v0 <= 0x3F)
  {
    sub_22CFF9E78();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for VHRDirectoryIssuer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D29A404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VHRDirectoryIssuer.CodingKeys()
{
  return &type metadata for VHRDirectoryIssuer.CodingKeys;
}

unint64_t sub_22D29A440()
{
  unint64_t result = qword_268543E20;
  if (!qword_268543E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543E20);
  }
  return result;
}

unint64_t sub_22D29A498()
{
  unint64_t result = qword_268543E28;
  if (!qword_268543E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543E28);
  }
  return result;
}

unint64_t sub_22D29A4F0()
{
  unint64_t result = qword_268543E30;
  if (!qword_268543E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543E30);
  }
  return result;
}

uint64_t sub_22D29A544()
{
  unint64_t v0 = sub_22D2BD4E0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_22D29A590@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((unint64_t)(result - 1) >= 0x11) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = result;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

void *sub_22D29A5AC(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a3[9];
    uint64_t v20 = (uint64_t)a2 + v10;
    uint64_t v21 = a1 + v10;
    *(void *)(a1 + 64) = a2[8];
    uint64_t v11 = sub_22D2BBC30();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v21, v20, v11);
    uint64_t v13 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[12];
    int v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_22D29A718(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D29A7C0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = a3[9];
  uint64_t v18 = a2 + v9;
  uint64_t v19 = a1 + v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v10 = sub_22D2BBC30();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v19, v18, v10);
  uint64_t v12 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[12];
  uint64_t v14 = (void *)(a1 + v13);
  int v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22D29A8DC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v11 = a3[12];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D29AA2C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v11 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_22D29AAF8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[12];
  int v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  void *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D29ABFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D29AC10);
}

uint64_t sub_22D29AC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BBC30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_22D29ACC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D29ACD4);
}

uint64_t sub_22D29ACD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BBC30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingOnboardingMetric()
{
  uint64_t result = qword_268543E38;
  if (!qword_268543E38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D29ADC8()
{
  uint64_t result = sub_22D2BBC30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_22D29AE8C()
{
  sub_22D29B110();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22D2C0F20;
  *(void *)(inited + 32) = 0xD000000000000016;
  *(void *)(inited + 40) = 0x800000022D2E0380;
  *(void *)(inited + 72) = &type metadata for PairedWatchProductTypeMetricField;
  *(void *)(inited + 80) = &off_26E066D80;
  *(void *)(inited + 88) = 6645601;
  *(void *)(inited + 96) = 0xE300000000000000;
  uint64_t v2 = *v0;
  char v3 = *((unsigned char *)v0 + 8);
  *(void *)(inited + 128) = &type metadata for AgeMetricField;
  *(void *)(inited + 136) = &off_26E05DEF0;
  *(void *)(inited + 104) = v2;
  *(unsigned char *)(inited + 112) = v3;
  *(void *)(inited + 144) = 0x747865746E6F63;
  *(void *)(inited + 152) = 0xE700000000000000;
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  *(void *)(inited + 184) = &type metadata for ContextMetricField;
  *(void *)(inited + 192) = &off_26E066D68;
  *(void *)(inited + 160) = v4;
  *(void *)(inited + 168) = v5;
  *(void *)(inited + 200) = 0xD000000000000020;
  *(void *)(inited + 208) = 0x800000022D2E03A0;
  uint64_t v6 = v0[8];
  *(void *)(inited + 240) = &type metadata for ClinicalHealthRecordsOnboardedMetricField;
  *(void *)(inited + 248) = &off_26E066D50;
  *(void *)(inited + 216) = v6;
  *(void *)(inited + 256) = 0xD000000000000021;
  *(void *)(inited + 264) = 0x800000022D2D7360;
  uint64_t v7 = type metadata accessor for ClinicalSharingOnboardingMetric();
  char v8 = *((unsigned char *)v0 + *(int *)(v7 + 40));
  *(void *)(inited + 296) = &type metadata for IHAMetricField;
  *(void *)(inited + 304) = &off_26E05DED8;
  *(unsigned char *)(inited + 272) = v8;
  *(void *)(inited + 312) = 0xD00000000000001DLL;
  *(void *)(inited + 320) = 0x800000022D2D7390;
  char v9 = *((unsigned char *)v0 + *(int *)(v7 + 44));
  *(void *)(inited + 352) = &type metadata for IHRMetricField;
  *(void *)(inited + 360) = &off_26E05DF38;
  *(unsigned char *)(inited + 328) = v9;
  *(void *)(inited + 368) = 0xD000000000000025;
  *(void *)(inited + 376) = 0x800000022D2E03D0;
  *(void *)(inited + 408) = &type metadata for NumberOfProvidersPreviouslySharedWithMetricField;
  *(void *)(inited + 416) = &off_26E066D38;
  *(void *)(inited + 384) = v6;
  *(void *)(inited + 424) = 7890291;
  *(void *)(inited + 432) = 0xE300000000000000;
  uint64_t v11 = v0[2];
  uint64_t v10 = v0[3];
  *(void *)(inited + 464) = &type metadata for SexMetricField;
  *(void *)(inited + 472) = &off_26E05DEC0;
  *(void *)(inited + 440) = v11;
  *(void *)(inited + 448) = v10;
  *(void *)(inited + 480) = 1885697139;
  *(void *)(inited + 488) = 0xE400000000000000;
  uint64_t v12 = v0[4];
  uint64_t v13 = v0[5];
  *(void *)(inited + 520) = &type metadata for StepMetricField;
  *(void *)(inited + 528) = &off_26E066D20;
  *(void *)(inited + 496) = v12;
  *(void *)(inited + 504) = v13;
  *(void *)(inited + 536) = 0x6E6F6973726576;
  *(void *)(inited + 544) = 0xE700000000000000;
  *(void *)(inited + 576) = &type metadata for VersionMetricField;
  *(void *)(inited + 584) = &off_26E066D08;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return sub_22D0D37CC(inited);
}

void sub_22D29B110()
{
  if (!qword_26AEC22B0)
  {
    sub_22D0C2A78();
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC22B0);
    }
  }
}

ValueMetadata *type metadata accessor for VersionMetricField()
{
  return &type metadata for VersionMetricField;
}

ValueMetadata *type metadata accessor for StepMetricField()
{
  return &type metadata for StepMetricField;
}

ValueMetadata *type metadata accessor for NumberOfProvidersPreviouslySharedWithMetricField()
{
  return &type metadata for NumberOfProvidersPreviouslySharedWithMetricField;
}

ValueMetadata *type metadata accessor for ClinicalHealthRecordsOnboardedMetricField()
{
  return &type metadata for ClinicalHealthRecordsOnboardedMetricField;
}

ValueMetadata *type metadata accessor for ContextMetricField()
{
  return &type metadata for ContextMetricField;
}

ValueMetadata *type metadata accessor for PairedWatchProductTypeMetricField()
{
  return &type metadata for PairedWatchProductTypeMetricField;
}

uint64_t HTTPError.errorDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22D2BBEC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HTTPError();
  MEMORY[0x270FA5388](v6);
  char v8 = (void *)((char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D1D8F6C(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *v8;
      strcpy((char *)v13, "HTTP status ");
      BYTE5(v13[1]) = 0;
      HIWORD(v13[1]) = -5120;
      v12[1] = v10;
      sub_22D2BD630();
      goto LABEL_6;
    case 2u:
      uint64_t v9 = 0xD000000000000010;
      if (v8[1])
      {
        v13[0] = 0;
        v13[1] = 0xE000000000000000;
        sub_22D2BD310();
        swift_bridgeObjectRelease();
        v13[0] = 0xD000000000000012;
        v13[1] = 0x800000022D2E0420;
LABEL_6:
        sub_22D2BCCB0();
        swift_bridgeObjectRelease();
        uint64_t v9 = v13[0];
      }
      break;
    case 3u:
      uint64_t v9 = *v8;
      break;
    default:
      (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
      sub_22D29C6C4(&qword_268543E48, MEMORY[0x263F07A20]);
      uint64_t v9 = sub_22D2BD6D0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return v9;
}

uint64_t type metadata accessor for HTTPError()
{
  uint64_t result = qword_268543E50;
  if (!qword_268543E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HTTPError.safelyLoggableDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22D2BBEC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HTTPError();
  MEMORY[0x270FA5388](v6);
  char v8 = (void *)((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D1D8F6C(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *v8;
      strcpy((char *)v18, "HTTP status ");
      BYTE5(v18[1]) = 0;
      HIWORD(v18[1]) = -5120;
      v17[1] = v13;
      sub_22D2BD630();
      goto LABEL_6;
    case 2u:
      uint64_t v12 = 0xD000000000000010;
      if (v8[1])
      {
        v18[0] = 0;
        v18[1] = 0xE000000000000000;
        sub_22D2BD310();
        swift_bridgeObjectRelease();
        v18[0] = 0xD000000000000012;
        v18[1] = 0x800000022D2E0420;
LABEL_6:
        sub_22D2BCCB0();
        swift_bridgeObjectRelease();
        uint64_t v12 = v18[0];
      }
      break;
    case 3u:
      uint64_t v14 = v8[1];
      v18[0] = *v8;
      v18[1] = v14;
      swift_bridgeObjectRetain();
      sub_22D2BD680();
      id v15 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v12 = sub_22D2BCC30();
      swift_bridgeObjectRelease();
      break;
    default:
      (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
      uint64_t v9 = (void *)sub_22D2BBEB0();
      uint64_t v10 = (void *)sub_22D2BB9B0();

      id v11 = objc_msgSend(v10, sel_hrs_safelyLoggableDescription);
      uint64_t v12 = sub_22D2BCBD0();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return v12;
}

Swift::Bool __swiftcall HTTPError.isUnauthorizedErrorAskingForBearerToken()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HTTPError();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (void *)((char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22D1D8F6C(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_22D29C664((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for HTTPError);
    goto LABEL_5;
  }
  uint64_t v5 = v4[1];
  if (!v5)
  {
LABEL_5:
    char v6 = 0;
    return v6 & 1;
  }
  v8[2] = *v4;
  v8[3] = v5;
  v8[0] = 0x20726572616542;
  v8[1] = 0xE700000000000000;
  sub_22D0B80BC();
  sub_22D0B8110();
  char v6 = sub_22D2BCB50();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t NSHTTPURLResponse.asHTTPError()@<X0>(uint64_t *a1@<X8>)
{
  if ((uint64_t)objc_msgSend(v1, sel_statusCode) >= 400)
  {
    if (objc_msgSend(v1, sel_statusCode) == (id)401)
    {
      char v8 = (void *)sub_22D2BCBA0();
      id v9 = objc_msgSend(v1, sel_valueForHTTPHeaderField_, v8);

      if (v9)
      {
        uint64_t v10 = sub_22D2BCBD0();
        uint64_t v12 = v11;
      }
      else
      {
        uint64_t v10 = 0;
        uint64_t v12 = 0;
      }
      *a1 = v10;
      a1[1] = v12;
      uint64_t v13 = type metadata accessor for HTTPError();
    }
    else
    {
      *a1 = (uint64_t)objc_msgSend(v1, sel_statusCode);
      uint64_t v13 = type metadata accessor for HTTPError();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v4 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    char v6 = a1;
    uint64_t v7 = 0;
    uint64_t v5 = v13;
  }
  else
  {
    uint64_t v3 = type metadata accessor for HTTPError();
    uint64_t v4 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    uint64_t v5 = v3;
    char v6 = a1;
    uint64_t v7 = 1;
  }
  return v4(v6, v7, 1, v5);
}

uint64_t _s19HealthRecordsDaemon9HTTPErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBEC0();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  char v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v42 = (char *)&v41 - v7;
  uint64_t v8 = type metadata accessor for HTTPError();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (uint64_t *)((char *)&v41 - v13);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (uint64_t *)((char *)&v41 - v16);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v41 - v18;
  sub_22D29C600();
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  int v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v24 = &v23[*(int *)(v21 + 56)];
  sub_22D1D8F6C(a1, (uint64_t)v23);
  sub_22D1D8F6C(a2, (uint64_t)v24);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_22D1D8F6C((uint64_t)v23, (uint64_t)v17);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v26 = (uint64_t (*)(void))sub_22D29C600;
      if (EnumCaseMultiPayload == 1)
      {
        char v27 = *v17 == *(void *)v24;
        goto LABEL_31;
      }
      char v27 = 0;
      break;
    case 2u:
      sub_22D1D8F6C((uint64_t)v23, (uint64_t)v14);
      uint64_t v29 = *v14;
      uint64_t v28 = v14[1];
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_20;
      }
      uint64_t v30 = *((void *)v24 + 1);
      if (v28)
      {
        if (v30)
        {
          if (v29 == *(void *)v24 && v28 == v30)
          {
            swift_bridgeObjectRelease();
            char v27 = 1;
          }
          else
          {
            char v27 = sub_22D2BD660();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          char v27 = 0;
        }
        goto LABEL_30;
      }
      uint64_t v26 = (uint64_t (*)(void))type metadata accessor for HTTPError;
      if (v30)
      {
        char v27 = 0;
        goto LABEL_30;
      }
      char v27 = 1;
      break;
    case 3u:
      sub_22D1D8F6C((uint64_t)v23, (uint64_t)v11);
      uint64_t v33 = *v11;
      uint64_t v32 = v11[1];
      if (swift_getEnumCaseMultiPayload() != 3)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      if (v33 == *(void *)v24 && v32 == *((void *)v24 + 1)) {
        char v27 = 1;
      }
      else {
        char v27 = sub_22D2BD660();
      }
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    default:
      sub_22D1D8F6C((uint64_t)v23, (uint64_t)v19);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v4);
LABEL_21:
        char v27 = 0;
        uint64_t v26 = (uint64_t (*)(void))sub_22D29C600;
      }
      else
      {
        uint64_t v35 = v44;
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
        uint64_t v37 = v42;
        v36(v42, v19, v4);
        uint64_t v38 = v43;
        v36(v43, v24, v4);
        sub_22D29C6C4(&qword_268542408, MEMORY[0x263F07A20]);
        char v27 = sub_22D2BB970();
        uint64_t v39 = *(void (**)(char *, uint64_t))(v35 + 8);
        v39(v38, v4);
        v39(v37, v4);
LABEL_31:
        uint64_t v26 = (uint64_t (*)(void))type metadata accessor for HTTPError;
      }
      break;
  }
  sub_22D29C664((uint64_t)v23, v26);
  return v27 & 1;
}

uint64_t sub_22D29BF58()
{
  return sub_22D29C6C4(&qword_26853EE70, (void (*)(uint64_t))type metadata accessor for HTTPError);
}

uint64_t *initializeBufferWithCopyOfBuffer for HTTPError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_22D2BBEC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for HTTPError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3 || result == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_22D2BBEC0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for HTTPError(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_22D2BBEC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for HTTPError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22D29C664((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HTTPError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_22D2BBEC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for HTTPError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_22D2BBEC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for HTTPError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22D29C664((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HTTPError);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_22D2BBEC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_22D29C558()
{
  uint64_t result = sub_22D2BBEC0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_22D29C600()
{
  if (!qword_268543E60)
  {
    type metadata accessor for HTTPError();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268543E60);
    }
  }
}

uint64_t sub_22D29C664(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D29C6C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D29C70C(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_22D29CBFC(a1, a2, a3, a4, type metadata accessor for PBCategorySeries.Event, (unint64_t)sub_22D24B75C, type metadata accessor for PBCategorySeries.Event);
}

uint64_t sub_22D29C760(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_22D29CBFC(a1, a2, a3, a4, type metadata accessor for PBHKCodedValue, (unint64_t)sub_22D24BB54, type metadata accessor for PBHKCodedValue);
}

uint64_t sub_22D29C7B4(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_22D29CBFC(a1, a2, a3, a4, type metadata accessor for PBHKInspectableValue, (unint64_t)sub_22D24BB9C, type metadata accessor for PBHKInspectableValue);
}

uint64_t sub_22D29C808(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_22D29CBFC(a1, a2, a3, a4, type metadata accessor for PBHKReferenceRange, (unint64_t)sub_22D24BBE4, type metadata accessor for PBHKReferenceRange);
}

uint64_t sub_22D29C85C(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_22D29CBFC(a1, a2, a3, a4, type metadata accessor for PBHKConcept, (unint64_t)sub_22D24BE1C, type metadata accessor for PBHKConcept);
}

uint64_t sub_22D29C8B0(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_22D29CBFC(a1, a2, a3, a4, type metadata accessor for PBHistogramSeries.Value, (unint64_t)sub_22D24BE64, type metadata accessor for PBHistogramSeries.Value);
}

uint64_t sub_22D29C904(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_22D29CBFC(a1, a2, a3, a4, type metadata accessor for PBMedicationDosage, (unint64_t)sub_22D24BEF4, type metadata accessor for PBMedicationDosage);
}

uint64_t sub_22D29C958(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  sub_22D29FC14(0, (unint64_t *)&qword_26853E650, sub_22D097894, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - v7;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (!v9) {
      return v10;
    }
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t result = sub_22D24BD6C(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v10 = v22;
    unint64_t v17 = a3 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v17)
      {
        uint64_t v13 = MEMORY[0x230F7AF90](v12, a3);
      }
      else
      {
        uint64_t v13 = *(void *)(a3 + 8 * v12 + 32);
        swift_retain();
      }
      uint64_t v21 = v13;
      v19(&v21);
      if (v4)
      {
        swift_release();
        swift_release();
        return v10;
      }
      uint64_t v4 = 0;
      swift_release();
      uint64_t v22 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_22D24BD6C(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v22;
      }
      ++v12;
      *(void *)(v10 + 16) = v15 + 1;
      sub_22D29F4FC((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v15);
      if (v9 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_22D29CBA8(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_22D29CBFC(a1, a2, a3, a4, type metadata accessor for PBMedicationTrackingDoseEvent, (unint64_t)sub_22D24C11C, type metadata accessor for PBMedicationTrackingDoseEvent);
}

uint64_t sub_22D29CBFC(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void), unint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v26 = a7;
  char v27 = a1;
  uint64_t v9 = v7;
  uint64_t v28 = a2;
  uint64_t v11 = a5(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v22 - v13;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    if (!v15) {
      return v16;
    }
    uint64_t v30 = MEMORY[0x263F8EE78];
    uint64_t result = ((uint64_t (*)(void, uint64_t, void))a6)(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0) {
      break;
    }
    int v23 = (void (*)(BOOL, unint64_t, uint64_t))a6;
    unint64_t v24 = a3;
    uint64_t v18 = 0;
    uint64_t v16 = v30;
    unint64_t v25 = a3 & 0xC000000000000001;
    while (v15 != v18)
    {
      if (v25) {
        id v19 = (id)MEMORY[0x230F7AF90](v18, a3);
      }
      else {
        id v19 = *(id *)(a3 + 8 * v18 + 32);
      }
      uint64_t v20 = v19;
      id v29 = v19;
      v27(&v29);
      if (v9)
      {
        swift_release();

        return v16;
      }
      uint64_t v9 = 0;

      uint64_t v30 = v16;
      a6 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (a6 >= v21 >> 1)
      {
        v23(v21 > 1, a6 + 1, 1);
        uint64_t v16 = v30;
      }
      ++v18;
      *(void *)(v16 + 16) = a6 + 1;
      sub_22D29FA14((uint64_t)v14, v16+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * a6, v26);
      a3 = v24;
      if (v15 == v18) {
        return v16;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_22D29CE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v54 = a2;
  uint64_t v56 = a3;
  uint64_t v6 = sub_22D2BC940();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v52 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v59 = (uint64_t)&v49 - v10;
  uint64_t v53 = type metadata accessor for PBNode(0);
  MEMORY[0x270FA5388](v53);
  uint64_t v58 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v62 = type metadata accessor for PBRevocationAuthorization();
  MEMORY[0x270FA5388](v62);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
  uint64_t v15 = MEMORY[0x270FA5388](Output - 8);
  uint64_t v55 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v49 - v17;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_22D2BC390();
  __swift_project_value_buffer(v19, (uint64_t)qword_26AEC3C90);
  uint64_t v57 = a1;
  sub_22D29FB4C(a1, (uint64_t)v18, type metadata accessor for ClinicalSharingQueryOutput);
  uint64_t v20 = sub_22D2BC380();
  os_log_type_t v21 = sub_22D2BD050();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = v6;
    int v23 = v22;
    uint64_t v50 = v7;
    *(_DWORD *)uint64_t v22 = 134217984;
    uint64_t v24 = *(void *)&v18[*(int *)(type metadata accessor for PBTypedData(0) + 20)];
    swift_beginAccess();
    char v25 = *(unsigned char *)(v24 + 24);
    uint64_t v60 = *(void *)(v24 + 16);
    char v61 = v25;
    uint64_t v26 = PBDataType.rawValue.getter();
    sub_22D29FBB4((uint64_t)v18, type metadata accessor for ClinicalSharingQueryOutput);
    uint64_t v60 = v26;
    uint64_t v4 = v3;
    uint64_t v7 = v50;
    sub_22D2BD220();
    _os_log_impl(&dword_22CFEE000, v20, v21, "Preparing to upload ClinicalSharingDataNode. DataType: %ld", v23, 0xCu);
    char v27 = v23;
    uint64_t v6 = v51;
    MEMORY[0x230F7BDF0](v27, -1, -1);
  }
  else
  {
    sub_22D29FBB4((uint64_t)v18, type metadata accessor for ClinicalSharingQueryOutput);
  }

  uint64_t v60 = 3;
  char v61 = 1;
  uint64_t result = sub_22CFF51D0(&v60, 0, 0xE000000000000000, (uint64_t)v13);
  if (!v4)
  {
    sub_22D29FB04((unint64_t *)&qword_26853E5D0, (void (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
    uint64_t v29 = sub_22D2BC1E0();
    unint64_t v31 = v30;
    sub_22D29FBB4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
    uint64_t v32 = sub_22D06037C(v29, v31);
    unint64_t v34 = v33;
    uint64_t v35 = v58;
    uint64_t v36 = v57;
    sub_22D23A0B0(v58, v59, v57, v32, v33);
    unint64_t v62 = v34;
    sub_22D29FB4C(v35, (uint64_t)v56, type metadata accessor for PBNode);
    sub_22D29FB4C(v36, v55, type metadata accessor for ClinicalSharingQueryOutput);
    sub_22D071C5C(v54, (uint64_t)&v60);
    sub_22D29FB04((unint64_t *)&qword_268542278, (void (*)(uint64_t))type metadata accessor for PBNode);
    uint64_t v37 = sub_22D2BC1E0();
    unint64_t v39 = v38;
    uint64_t v40 = v31;
    uint64_t v41 = v7;
    uint64_t v57 = sub_22D0B1BD8(v37, v38);
    uint64_t v43 = v42;
    sub_22CFF5630(v37, v39);
    sub_22D29FC14(0, &qword_26853E710, (void (*)(uint64_t))type metadata accessor for PBNode, (void (*)(uint64_t))type metadata accessor for ClinicalSharingDataNodeInfo);
    uint64_t v56 = (void *)((char *)v56 + *(int *)(v44 + 48));
    uint64_t v45 = v41;
    int v46 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    uint64_t v47 = (uint64_t)v52;
    uint64_t v48 = v59;
    v46(v52, v59, v6);
    sub_22D1E18E4(v55, (uint64_t)&v60, v57, v43, v29, v40, v47, v56);
    sub_22CFF5630(v32, v62);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v6);
    return sub_22D29FBB4(v58, type metadata accessor for PBNode);
  }
  return result;
}

uint64_t sub_22D29D51C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v3 = sub_22D2BBC30();
  uint64_t v74 = *(void *)(v3 - 8);
  uint64_t v75 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v73 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_22D2BC940();
  uint64_t v69 = *(void *)(v70 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v70);
  uint64_t v68 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v67 - v7;
  uint64_t v71 = type metadata accessor for PBNode(0);
  MEMORY[0x270FA5388](v71);
  uint64_t v85 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for ClinicalSharingDataNodeInfo();
  uint64_t v84 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for PBRevocationAuthorization();
  MEMORY[0x270FA5388](v77);
  uint64_t v80 = (uint64_t *)((char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v79 = type metadata accessor for PBReferences(0);
  MEMORY[0x270FA5388](v79);
  uint64_t v82 = (uint64_t *)((char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v83 = type metadata accessor for PBReference(0);
  uint64_t v14 = *(void *)(v83 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v83);
  uint64_t v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v67 - v18;
  uint64_t v20 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_22D2BC390();
  __swift_project_value_buffer(v21, (uint64_t)qword_26AEC3C90);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_22D2BC380();
  os_log_type_t v23 = sub_22D2BD050();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v76 = v8;
  uint64_t v78 = v20;
  if (v24)
  {
    char v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v25 = 134217984;
    uint64_t v26 = v20;
    if (*(void *)(v20 + 16))
    {
      sub_22D29FB4C(v20+ *(int *)(v90 + 20)+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80)), (uint64_t)v19, type metadata accessor for PBReference);
      uint64_t v27 = *(void *)&v19[*(int *)(v83 + 20)]
          + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBReferenceP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__type;
      swift_beginAccess();
      uint64_t v28 = *(void *)v27;
      LOBYTE(v27) = *(unsigned char *)(v27 + 8);
      sub_22D29FBB4((uint64_t)v19, type metadata accessor for PBReference);
      uint64_t v88 = v28;
      char v89 = v27;
      uint64_t v29 = PBDataType.rawValue.getter();
      uint64_t v26 = v78;
    }
    else
    {
      uint64_t v29 = 0;
    }
    uint64_t v88 = v29;
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v22, v23, "Preparing to upload ClinicalSharingCategoryNode. DataType:  %ld", v25, 0xCu);
    MEMORY[0x230F7BDF0](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v26 = v20;
  }
  uint64_t v30 = v84;
  uint64_t v31 = v85;
  if (*(void *)(v26 + 16))
  {
    uint64_t v32 = v26 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
    sub_22D29FB4C(v32 + *(int *)(v90 + 20), (uint64_t)v19, type metadata accessor for PBReference);
    uint64_t v33 = *(void *)&v19[*(int *)(v83 + 20)]
        + OBJC_IVAR____TtCV19HealthRecordsDaemon11PBReferenceP33_0EFE040E969A4F997963A912892EBD4513_StorageClass__type;
    swift_beginAccess();
    uint64_t v84 = *(void *)v33;
    LODWORD(v83) = *(unsigned __int8 *)(v33 + 8);
    sub_22D29FBB4((uint64_t)v19, type metadata accessor for PBReference);
    int64_t v34 = *(void *)(v26 + 16);
    uint64_t v35 = MEMORY[0x263F8EE78];
    if (v34)
    {
      uint64_t v86 = MEMORY[0x263F8EE78];
      sub_22D24C0D4(0, v34, 0);
      uint64_t v36 = *(void *)(v30 + 72);
      uint64_t v35 = v86;
      do
      {
        sub_22D29FB4C(v32, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo);
        sub_22D29FB4C((uint64_t)&v11[*(int *)(v90 + 20)], (uint64_t)v17, type metadata accessor for PBReference);
        sub_22D29FBB4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingDataNodeInfo);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22D24C0D4(0, *(void *)(v35 + 16) + 1, 1);
          uint64_t v35 = v86;
        }
        unint64_t v38 = *(void *)(v35 + 16);
        unint64_t v37 = *(void *)(v35 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_22D24C0D4(v37 > 1, v38 + 1, 1);
          uint64_t v35 = v86;
        }
        *(void *)(v35 + 16) = v38 + 1;
        sub_22D29FA14((uint64_t)v17, v35+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v38, type metadata accessor for PBReference);
        v32 += v36;
        --v34;
      }
      while (v34);
      uint64_t v31 = v85;
    }
    unint64_t v39 = v82;
    sub_22D2BBFE0();
    uint64_t *v39 = v35;
    uint64_t v86 = 3;
    char v87 = 1;
    uint64_t v40 = v80;
    uint64_t v41 = v81;
    sub_22CFF51D0(&v86, 0, 0xE000000000000000, (uint64_t)v80);
    if (v41)
    {
      uint64_t v45 = (uint64_t)v39;
    }
    else
    {
      sub_22D29FB04((unint64_t *)&qword_26853E5D0, (void (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
      uint64_t v42 = sub_22D2BC1E0();
      unint64_t v44 = v43;
      sub_22D29FBB4((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
      uint64_t v48 = sub_22D06037C(v42, v44);
      unint64_t v50 = v49;
      if (qword_26853D3D0 != -1) {
        swift_once();
      }
      uint64_t v51 = (void *)qword_268568488;
      uint64_t v52 = v73;
      sub_22D2BBC20();
      uint64_t v53 = (void *)sub_22D2BBBC0();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v52, v75);
      id v54 = objc_msgSend(v51, sel_stringFromDate_, v53);

      uint64_t v55 = sub_22D2BCBD0();
      uint64_t v57 = v56;

      sub_22D23BE18(v31, (uint64_t)v76, (uint64_t)v82, v55, v57, v48, v50);
      swift_bridgeObjectRelease();
      sub_22D29FB4C(v31, v72, type metadata accessor for PBNode);
      sub_22D29FB04((unint64_t *)&qword_268542278, (void (*)(uint64_t))type metadata accessor for PBNode);
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_22D2BC1E0();
      unint64_t v60 = v59;
      uint64_t v90 = sub_22D0B1BD8(v58, v59);
      uint64_t v81 = v61;
      sub_22CFF5630(v58, v60);
      sub_22D29FC14(0, &qword_26853E6A0, (void (*)(uint64_t))type metadata accessor for PBNode, (void (*)(uint64_t))type metadata accessor for ClinicalSharingCategoryNodeInfo);
      uint64_t v80 = (uint64_t *)(v72 + *(int *)(v62 + 48));
      uint64_t v63 = v69;
      uint64_t v64 = (uint64_t)v68;
      uint64_t v65 = (uint64_t)v76;
      uint64_t v66 = v70;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v68, v76, v70);
      uint64_t v86 = v84;
      char v87 = v83;
      sub_22D03C148(v78, v90, v81, v42, v44, v64, (uint64_t)&v86, v80);
      sub_22CFF5630(v48, v50);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v65, v66);
      sub_22D29FBB4(v85, type metadata accessor for PBNode);
      uint64_t v45 = (uint64_t)v82;
    }
    return sub_22D29FBB4(v45, type metadata accessor for PBReferences);
  }
  else
  {
    sub_22D04344C();
    swift_allocError();
    *(void *)uint64_t v47 = 0xD000000000000018;
    *(void *)(v47 + 8) = 0x800000022D2E0460;
    *(void *)(v47 + 16) = 0;
    *(void *)(v47 + 24) = 0;
    *(unsigned char *)(v47 + 32) = 5;
    return swift_willThrow();
  }
}

uint64_t sub_22D29E0E4@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _OWORD v6[2] = *a1;
  v6[3] = a3;
  uint64_t result = sub_22D29C958((void (*)(uint64_t *))sub_22D29F4DC, (uint64_t)v6, a2);
  *a4 = result;
  return result;
}

uint64_t sub_22D29E14C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v126 = a3;
  uint64_t v122 = a2;
  uint64_t v129 = a4;
  uint64_t v111 = sub_22D2BC940();
  uint64_t v110 = *(void *)(v111 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v111);
  uint64_t v109 = (uint64_t)v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v114 = (uint64_t)v106 - v7;
  uint64_t v131 = type metadata accessor for PBNode(0);
  uint64_t v128 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v113 = (uint64_t)v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for PBRevocationAuthorization();
  MEMORY[0x270FA5388](v115);
  uint64_t v118 = (uint64_t)v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = (int *)type metadata accessor for ClinicalSharingCategoryNodeInfo();
  uint64_t v119 = *((void *)v133 - 1);
  MEMORY[0x270FA5388](v133);
  uint64_t v11 = (char *)v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBReference(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_22D2BC9A0();
  uint64_t v117 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v127 = (uint64_t)v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_22D2BBC30();
  uint64_t v124 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v123 = (uint64_t)v106 - v21;
  uint64_t v121 = type metadata accessor for PBReferences(0);
  MEMORY[0x270FA5388](v121);
  unint64_t v132 = (void *)((char *)v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_22D2BC390();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  uint64_t v120 = v25;
  uint64_t v26 = sub_22D2BC380();
  os_log_type_t v27 = sub_22D2BD050();
  BOOL v28 = os_log_type_enabled(v26, v27);
  id v134 = v20;
  uint64_t v125 = v17;
  if (v28)
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v108 = v30;
    id v107 = v29;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v135 = v30;
    v106[1] = v29 + 4;
    sub_22D2BBC90();
    sub_22D29FB04((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v20 = v134;
    uint64_t v31 = sub_22D2BD630();
    uint64_t v137 = sub_22D0A4D24(v31, v32, &v135);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v33 = v107;
    _os_log_impl(&dword_22CFEE000, v26, v27, "Preparing ClinicalSharingRootNodeInfo. Account: %s", v107, 0xCu);
    uint64_t v34 = v108;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v34, -1, -1);
    MEMORY[0x230F7BDF0](v33, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  char v35 = sub_22D0CB25C();
  swift_retain();
  if ((v35 & 1) == 0)
  {
    swift_retain();
    uint64_t v45 = sub_22D2BC380();
    os_log_type_t v46 = sub_22D2BD050();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v135 = v48;
      sub_22D2BBC90();
      sub_22D29FB04((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v49 = sub_22D2BD630();
      uint64_t v137 = sub_22D0A4D24(v49, v50, &v135);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v45, v46, "Sync is not required. Account: %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v48, -1, -1);
      MEMORY[0x230F7BDF0](v47, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v65 = v128;
    uint64_t v64 = v129;
    sub_22D29FC14(0, (unint64_t *)&qword_26853E650, sub_22D097894, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
    uint64_t v74 = (uint64_t *)(v64 + *(int *)(v66 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v64, 1, 1, v131);
    goto LABEL_24;
  }
  uint64_t v36 = swift_bridgeObjectRetain();
  unint64_t v37 = v130;
  uint64_t v38 = sub_22D29F590(v36, v23);
  uint64_t v130 = v37;
  swift_bridgeObjectRelease();
  uint64_t v112 = v23;
  swift_release();
  int64_t v39 = *(void *)(v38 + 16);
  uint64_t v40 = MEMORY[0x263F8EE78];
  uint64_t v120 = v38;
  if (v39)
  {
    uint64_t v135 = MEMORY[0x263F8EE78];
    sub_22D24C0D4(0, v39, 0);
    uint64_t v41 = v38 + ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80));
    uint64_t v42 = *(void *)(v119 + 72);
    uint64_t v40 = v135;
    do
    {
      sub_22D29FB4C(v41, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
      sub_22D29FB4C((uint64_t)&v11[v133[5]], (uint64_t)v15, type metadata accessor for PBReference);
      sub_22D29FBB4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22D24C0D4(0, *(void *)(v40 + 16) + 1, 1);
        uint64_t v40 = v135;
      }
      unint64_t v44 = *(void *)(v40 + 16);
      unint64_t v43 = *(void *)(v40 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_22D24C0D4(v43 > 1, v44 + 1, 1);
        uint64_t v40 = v135;
      }
      *(void *)(v40 + 16) = v44 + 1;
      sub_22D29FA14((uint64_t)v15, v40+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v44, type metadata accessor for PBReference);
      v41 += v42;
      --v39;
      uint64_t v20 = v134;
    }
    while (v39);
  }
  uint64_t v51 = v132;
  sub_22D2BBFE0();
  *uint64_t v51 = v40;
  uint64_t v23 = v112;
  uint64_t v52 = v124;
  if (qword_26853D3D0 != -1) {
    swift_once();
  }
  uint64_t v53 = (void *)qword_268568488;
  uint64_t v54 = v123;
  sub_22D2BBC20();
  uint64_t v55 = (void *)sub_22D2BBBC0();
  uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  uint64_t v57 = v54;
  uint64_t v58 = v125;
  v56(v57, v125);
  id v59 = objc_msgSend(v53, sel_stringFromDate_, v55);

  uint64_t v60 = sub_22D2BCBD0();
  uint64_t v62 = v61;

  sub_22D2BBC20();
  uint64_t v63 = v130;
  sub_22D091B08((uint64_t)v20, v127);
  if (v63)
  {
    v56((uint64_t)v20, v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = v128;
    uint64_t v70 = v129;
    uint64_t v72 = (uint64_t)v132;
    sub_22D0BF004(v63);

    sub_22D29FBB4(v72, type metadata accessor for PBReferences);
    sub_22D29FC14(0, (unint64_t *)&qword_26853E650, sub_22D097894, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
    uint64_t v74 = (uint64_t *)(v70 + *(int *)(v73 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v70, 1, 1, v131);
LABEL_24:
    *uint64_t v74 = v23;
    return swift_retain();
  }
  id v134 = v62;
  v56((uint64_t)v20, v58);
  uint64_t v135 = 3;
  char v136 = 1;
  uint64_t v68 = *(void *)(v23 + 40);
  uint64_t v67 = *(void *)(v23 + 48);
  swift_bridgeObjectRetain();
  uint64_t v69 = v118;
  sub_22CFF51D0(&v135, v68, v67, v118);
  sub_22D29FB04((unint64_t *)&qword_26853E5D0, (void (*)(uint64_t))type metadata accessor for PBRevocationAuthorization);
  uint64_t v76 = sub_22D2BC1E0();
  uint64_t v77 = (uint64_t)v134;
  uint64_t v78 = v76;
  unint64_t v80 = v79;
  sub_22D29FBB4(v69, (uint64_t (*)(void))type metadata accessor for PBRevocationAuthorization);
  uint64_t v81 = sub_22D06037C(v78, v80);
  uint64_t v82 = v23;
  uint64_t v83 = v81;
  unint64_t v85 = v84;
  uint64_t v86 = (int *)sub_22D23C338(v113, v114, (uint64_t)v132, v60, v77, v127, v82, v81, v84);
  unint64_t v126 = v87;
  uint64_t v130 = (void *)v85;
  uint64_t v133 = v86;
  sub_22D29FB04((unint64_t *)&qword_268542278, (void (*)(uint64_t))type metadata accessor for PBNode);
  uint64_t v88 = sub_22D2BC1E0();
  unint64_t v90 = v89;
  uint64_t v91 = sub_22D0B1BD8(v88, v89);
  uint64_t v123 = v92;
  uint64_t v124 = v91;
  sub_22CFF5630(v88, v90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 16))(v109, v114, v111);
  uint64_t v93 = *(void *)(v112 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID + 8);
  uint64_t v122 = *(void *)(v112 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_deviceID);
  uint64_t v94 = (uint64_t *)(v112 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo);
  uint64_t v95 = *(void *)(v112 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_existingMultiDeviceInfo + 8);
  uint64_t v125 = v93;
  if (v95)
  {
    uint64_t v96 = v94[4];
    uint64_t v118 = v94[3];
    uint64_t v97 = v94[2];
    uint64_t v121 = *v94;
    uint64_t v119 = v97;
    sub_22D0CCD98(v121, v95);
    swift_bridgeObjectRetain();
    sub_22D0CCD98(v121, v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22D0B82BC(v121, v95);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v96 = 0;
  }
  uint64_t v121 = v96 + 1;
  if (!__OFADD__(v96, 1))
  {
    uint64_t v98 = *(void *)(v112 + 48);
    uint64_t v119 = *(void *)(v112 + 40);
    swift_bridgeObjectRetain();
    uint64_t v99 = (uint64_t)v133;
    unint64_t v100 = v126;
    sub_22CFF9B64((uint64_t)v133, v126);
    sub_22CFF9B64(v78, v80);
    sub_22D115CF0(v120, v124, v123, v78, v80, v109, v99, v100, &v135, v122, v125, v60, v77, v121, v119, v98);
    unint64_t v101 = v100;
    sub_22D0BF4E4((uint64_t)&v135);
    uint64_t v103 = v128;
    uint64_t v102 = v129;
    unint64_t v104 = (unint64_t)v130;
    sub_22D29FA7C((uint64_t)&v135);
    sub_22CFF5630(v83, v104);
    sub_22CFF5630(v78, v80);
    sub_22CFF5630((uint64_t)v133, v101);
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v114, v111);
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v127, v116);
    sub_22D29FBB4((uint64_t)v132, type metadata accessor for PBReferences);
    sub_22D29FC14(0, (unint64_t *)&qword_26853E650, sub_22D097894, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
    uint64_t v74 = (uint64_t *)(v102 + *(int *)(v105 + 48));
    sub_22D29FA14(v113, v102, type metadata accessor for PBNode);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v102, 0, 1, v131);
    uint64_t v23 = v112;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D29F4DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D29E14C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_22D29F4FC(uint64_t a1, uint64_t a2)
{
  sub_22D29FC14(0, (unint64_t *)&qword_26853E650, sub_22D097894, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D29F590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ClinicalSharingCategoryNodeInfo() - 8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v33 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v42 = MEMORY[0x263F8EE78];
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    uint64_t v15 = 0;
    uint64_t v41 = a2 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID;
    uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v37 = *(void *)(v11 + 72);
    uint64_t v31 = (v16 + 32) & ~v16;
    uint64_t v32 = v5;
    uint64_t v34 = (char *)&v30 - v12;
    uint64_t v35 = a1 + v31;
    int64_t v39 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v40 = v5 + 16;
    while (1)
    {
      uint64_t v38 = v15;
      sub_22D29FB4C(v35 + v37 * v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
      uint64_t v17 = *(void *)v13;
      if (*(void *)(*(void *)v13 + 16))
      {
        uint64_t v18 = *(void *)(type metadata accessor for ClinicalSharingDataNodeInfo() - 8);
        uint64_t v19 = *(void *)(v17
                        + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)));
        swift_bridgeObjectRetain();
        if (!*(void *)(v19 + 16)) {
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v19 = MEMORY[0x263F8EE88];
        if (!*(void *)(MEMORY[0x263F8EE88] + 16)) {
          goto LABEL_3;
        }
      }
      sub_22D29FB04((unint64_t *)&qword_26AEC0F50, MEMORY[0x263F07508]);
      uint64_t v20 = sub_22D2BCB30();
      uint64_t v21 = -1 << *(unsigned char *)(v19 + 32);
      unint64_t v22 = v20 & ~v21;
      if ((*(void *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
      {
        uint64_t v23 = ~v21;
        uint64_t v24 = *(void *)(v32 + 72);
        uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
        while (1)
        {
          v25(v7, *(void *)(v19 + 48) + v24 * v22, v4);
          sub_22D29FB04(&qword_26853E318, MEMORY[0x263F07508]);
          char v26 = sub_22D2BCB90();
          (*v39)(v7, v4);
          if (v26) {
            break;
          }
          unint64_t v22 = (v22 + 1) & v23;
          if (((*(void *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            goto LABEL_3;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v13 = v34;
        sub_22D29FA14((uint64_t)v34, v33, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
        uint64_t v27 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22D24BCDC(0, *(void *)(v27 + 16) + 1, 1);
          uint64_t v27 = v42;
        }
        unint64_t v29 = *(void *)(v27 + 16);
        unint64_t v28 = *(void *)(v27 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_22D24BCDC(v28 > 1, v29 + 1, 1);
          uint64_t v27 = v42;
        }
        *(void *)(v27 + 16) = v29 + 1;
        sub_22D29FA14(v33, v27 + v31 + v29 * v37, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
        goto LABEL_4;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      uint64_t v13 = v34;
      sub_22D29FBB4((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ClinicalSharingCategoryNodeInfo);
LABEL_4:
      uint64_t v15 = v38 + 1;
      if (v38 + 1 == v36) {
        return v42;
      }
    }
  }
  return result;
}

uint64_t sub_22D29FA14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D29FA7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22CFF5630(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22D29FB04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D29FB4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D29FBB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_22D29FC14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_22D29FC90(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = sub_22D2BBE00();
  uint64_t v2 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_22D2BCAE0();
  uint64_t v35 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22D2BBC30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v24 - v12;
  sub_22D2BB6C0();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v30(v11, v13, v7);
  uint64_t v25 = v2;
  char v26 = v4;
  unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v29(v4, v33, v34);
  sub_22D2BCAA0();
  uint64_t v14 = sub_22D2BCAC0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v35 + 8);
  v35 += 8;
  uint64_t v27 = v15;
  uint64_t v28 = v14;
  uint64_t v16 = v31;
  v15(v6, v31);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v13, v7);
  sub_22D2BB690();
  v30(v11, v13, v7);
  uint64_t v18 = v33;
  v29(v26, v33, v34);
  sub_22D2BCAA0();
  uint64_t v19 = sub_22D2BCAC0();
  uint64_t v20 = v28;
  uint64_t v21 = v19;
  v27(v6, v16);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v13, v7);
  if (v21 < v20)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (__OFSUB__(v21, v20))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (!__OFADD__(v21 - v20, 1))
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v18, v34);
    uint64_t v23 = sub_22D2BB6F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v32, v23);
    return v20;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for CatalogDownloadResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CatalogDownloadResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CatalogDownloadResult()
{
  return &type metadata for CatalogDownloadResult;
}

uint64_t sub_22D2A00D8()
{
  uint64_t v1 = v0;
  type metadata accessor for IssuerDirectoryDownloadTaskScheduler();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 16) = 0;
  unint64_t v3 = (_DWORD *)swift_slowAlloc();
  *unint64_t v3 = 0;
  *(void *)(v2 + 40) = v3;
  *(_OWORD *)(v2 + 48) = xmmword_22D2D0B10;
  sub_22D1D23DC();
  id v4 = static NSURLSessionConfiguration.defaultPublicSessionConfiguration.getter();
  id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  type metadata accessor for WebRequestPerformer();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = MEMORY[0x263F8EE88];
  id v7 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v4, v5, 0);

  *(void *)(v6 + 16) = v7;
  type metadata accessor for IssuerDirectoryDownloadTaskManager();
  uint64_t v8 = (void *)swift_allocObject();
  *(void *)(v1 + 16) = sub_22D2042B0(v2, v6, 0, v8);
  return v1;
}

uint64_t type metadata accessor for IssuerDirectoryDownloadDaemonPlugin()
{
  return self;
}

uint64_t sub_22D2A022C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 16);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  id v5 = *(void (**)(uint64_t (*)(uint64_t (*)(void), uint64_t), uint64_t, uint64_t, uint64_t))(v3 + 8);
  swift_retain();
  v5(sub_22D2A034C, v4, v2, v3);
  return swift_release_n();
}

uint64_t sub_22D2A02E0()
{
  return sub_22D0A5A8C();
}

uint64_t sub_22D2A0308()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_22D2A0314()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D2A034C(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_22D0A56B8(a1, a2);
}

uint64_t sub_22D2A0354(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v18 = sub_22D2BBC90();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (!v7) {
      return v8;
    }
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t result = sub_22D24B7A4(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v19;
    v16[1] = v2;
    unint64_t v17 = a1 & 0xC000000000000001;
    unint64_t v11 = a1;
    while (v7 != v10)
    {
      if (v17) {
        id v12 = (id)MEMORY[0x230F7AF90](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_identifier);
      sub_22D2BBC70();

      uint64_t v19 = v8;
      unint64_t v2 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_22D24B7A4(v15 > 1, v2 + 1, 1);
        uint64_t v8 = v19;
      }
      ++v10;
      *(void *)(v8 + 16) = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v2, v6, v18);
      a1 = v11;
      if (v7 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_22D2A057C(void *a1)
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  sub_22D2A6354(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  sub_22D2BBEE0();
  v7[0] = a1;
  memset(&v7[1], 0, 24);
  char v8 = 1;
  uint64_t v2 = *(void *)(v9 + 16);
  if (v2)
  {
    id v3 = a1;
    swift_bridgeObjectRetain();
    uint64_t v4 = v9 + 40;
    do
    {
      uint64_t v5 = *(void (**)(void *))(v4 - 8);
      swift_retain();
      v5(v7);
      swift_release();
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D2A06AC(void *a1)
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  sub_22D2A6354(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  sub_22D2BBEE0();
  uint64_t v7 = a1;
  char v8 = 1;
  uint64_t v2 = *(void *)(v9 + 16);
  if (v2)
  {
    id v3 = a1;
    swift_bridgeObjectRetain();
    uint64_t v4 = v9 + 40;
    do
    {
      uint64_t v5 = *(void (**)(void **))(v4 - 8);
      swift_retain();
      v5(&v7);
      swift_release();
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D2A07D8(uint64_t a1, void **a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v26 = a1;
    uint64_t v6 = v4 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22D2A6F34(v6, (uint64_t)v27, (uint64_t)&qword_268543930, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A8E2C);
      uint64_t v7 = v28;
      uint64_t v8 = v29;
      swift_retain();
      sub_22D2A7498((uint64_t)v27, (uint64_t)&qword_268543930, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A8E2C);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v8;
      uint64_t v10 = *a2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v10 = sub_22D281940(0, v10[2] + 1, 1, v10);
        *a2 = v10;
      }
      unint64_t v13 = v10[2];
      unint64_t v12 = v10[3];
      if (v13 >= v12 >> 1) {
        uint64_t v10 = sub_22D281940((void *)(v12 > 1), v13 + 1, 1, v10);
      }
      void v10[2] = v13 + 1;
      id v14 = &v10[2 * v13];
      v14[4] = sub_22D2A8E90;
      v14[5] = v9;
      *a2 = v10;
      v6 += 80;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    a1 = v26;
  }
  *(void *)(a1 + 24) = MEMORY[0x263F8EE78];
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    swift_retain();
    uint64_t v16 = sub_22D2A26B0();
    if (v16)
    {
      uint64_t v18 = v16;
      uint64_t v19 = v17;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v18;
      *(void *)(v20 + 24) = v19;
      uint64_t v21 = *a2;
      swift_retain();
      char v22 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v21;
      if ((v22 & 1) == 0)
      {
        uint64_t v21 = sub_22D281940(0, v21[2] + 1, 1, v21);
        *a2 = v21;
      }
      unint64_t v24 = v21[2];
      unint64_t v23 = v21[3];
      if (v24 >= v23 >> 1) {
        uint64_t v21 = sub_22D281940((void *)(v23 > 1), v24 + 1, 1, v21);
      }
      void v21[2] = v24 + 1;
      uint64_t v25 = &v21[2 * v24];
      _OWORD v25[4] = sub_22D2A8E90;
      void v25[5] = v20;
      *a2 = v21;
      sub_22D074520(v18);
    }
    swift_release();
    *(void *)(a1 + 32) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_22D2A0A6C(uint64_t a1, void **a2)
{
  sub_22D2A7430(0, (unint64_t *)&qword_26AEC1808, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - v7;
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    void v32[2] = a1 + 24;
    uint64_t v33 = a1;
    unint64_t v11 = &v8[*(int *)(v5 + 36)];
    uint64_t v12 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v34 = *(void *)(v6 + 72);
    v32[1] = v9;
    swift_bridgeObjectRetain();
    do
    {
      sub_22D2A6F34(v12, (uint64_t)v8, (uint64_t)&qword_26AEC1808, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A7430);
      uint64_t v13 = *(void *)v11;
      uint64_t v14 = *((void *)v11 + 1);
      swift_retain();
      sub_22D2A7498((uint64_t)v8, (uint64_t)&qword_26AEC1808, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A7430);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v13;
      *(void *)(v15 + 24) = v14;
      uint64_t v16 = *a2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v16 = sub_22D281ACC(0, v16[2] + 1, 1, v16);
        *a2 = v16;
      }
      unint64_t v19 = v16[2];
      unint64_t v18 = v16[3];
      if (v19 >= v18 >> 1) {
        uint64_t v16 = sub_22D281ACC((void *)(v18 > 1), v19 + 1, 1, v16);
      }
      void v16[2] = v19 + 1;
      uint64_t v20 = &v16[2 * v19];
      _OWORD v20[4] = sub_22D2A7C14;
      void v20[5] = v15;
      *a2 = v16;
      v12 += v34;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    a1 = v33;
  }
  *(void *)(a1 + 24) = MEMORY[0x263F8EE78];
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    swift_retain();
    uint64_t v22 = sub_22D2A2824();
    if (v22)
    {
      uint64_t v24 = v22;
      uint64_t v25 = v23;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v24;
      *(void *)(v26 + 24) = v25;
      uint64_t v27 = *a2;
      char v28 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v27;
      if ((v28 & 1) == 0)
      {
        uint64_t v27 = sub_22D281ACC(0, v27[2] + 1, 1, v27);
        *a2 = v27;
      }
      unint64_t v30 = v27[2];
      unint64_t v29 = v27[3];
      if (v30 >= v29 >> 1) {
        uint64_t v27 = sub_22D281ACC((void *)(v29 > 1), v30 + 1, 1, v27);
      }
      v27[2] = v30 + 1;
      uint64_t v31 = &v27[2 * v30];
      v31[4] = sub_22D2A7C14;
      v31[5] = v26;
      *a2 = v27;
    }
    swift_release();
    *(void *)(a1 + 32) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_22D2A0D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_22D032454(a1, (uint64_t)v11);
  uint64_t v7 = swift_allocObject();
  long long v8 = v11[1];
  *(_OWORD *)(v7 + 24) = v11[0];
  *(_OWORD *)(v7 + 40) = v8;
  long long v9 = v11[3];
  *(_OWORD *)(v7 + 56) = v11[2];
  *(void *)(v7 + 16) = v4;
  *(_OWORD *)(v7 + 72) = v9;
  *(void *)(v7 + 88) = a2;
  *(void *)(v7 + 96) = a3;
  sub_22D2A6354(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  swift_retain();
  swift_retain();
  sub_22D2BBEE0();
  return swift_release();
}

uint64_t sub_22D2A0EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ClinicalSharingSyncTask();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  sub_22D2A63B8(a1, (uint64_t)&v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v4;
  sub_22D2A6870((uint64_t)&v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v12 + v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
  uint64_t v13 = (void *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v13 = a2;
  v13[1] = a3;
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = 0;
  uint64_t v17 = sub_22D2A68D8;
  uint64_t v18 = v12;
  uint64_t v19 = v4;
  uint64_t v20 = &v22;
  sub_22D2A6354(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  swift_retain();
  swift_retain();
  sub_22D2BBEE0();
  if (v22)
  {
    uint64_t v14 = swift_retain();
    sub_22D2A1C5C(v14);
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_22D2A10E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D032454(a2, (uint64_t)v17);
  *(void *)&long long v18 = a3;
  *((void *)&v18 + 1) = a4;
  uint64_t v7 = (void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v8 = *(void **)(a1 + 24);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 24) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_22D2817F0(0, v8[2] + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v8 = sub_22D2817F0((void *)(v10 > 1), v11 + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  v8[2] = v11 + 1;
  uint64_t v12 = &v8[10 * v11];
  void v12[2] = v17[0];
  long long v13 = v17[1];
  long long v14 = v17[2];
  long long v15 = v18;
  v12[5] = v17[3];
  void v12[6] = v15;
  v12[3] = v13;
  v12[4] = v14;
  return swift_endAccess();
}

uint64_t sub_22D2A11EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22D2A7430(0, (unint64_t *)&qword_26AEC1808, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v20 - v11;
  sub_22D2A63B8(a2, (uint64_t)&v20 - v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
  long long v13 = &v12[*(int *)(v9 + 44)];
  *(void *)long long v13 = a3;
  *((void *)v13 + 1) = a4;
  long long v14 = (unint64_t *)(a1 + 24);
  swift_beginAccess();
  unint64_t v15 = *(void *)(a1 + 24);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 24) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v15 = sub_22D281A84(0, *(void *)(v15 + 16) + 1, 1, v15);
    unint64_t *v14 = v15;
  }
  unint64_t v18 = *(void *)(v15 + 16);
  unint64_t v17 = *(void *)(v15 + 24);
  if (v18 >= v17 >> 1)
  {
    unint64_t v15 = sub_22D281A84(v17 > 1, v18 + 1, 1, v15);
    unint64_t *v14 = v15;
  }
  *(void *)(v15 + 16) = v18 + 1;
  sub_22D2A73B0((uint64_t)v12, v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v18);
  return swift_endAccess();
}

uint64_t sub_22D2A13A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (result)
  {
    uint64_t v6 = (void (*)(uint64_t))result;
    uint64_t v7 = swift_retain();
    v6(v7);
    uint64_t result = sub_22D074520((uint64_t)v6);
  }
  if (!*(void *)(a3 + 32))
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(a3 + 24);
    if (*(void *)(v8 + 16))
    {
      uint64_t result = sub_22D2A6F34(v8 + 32, (uint64_t)&v12, (uint64_t)&qword_268543930, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A8E2C);
      if (!*(void *)(v8 + 16))
      {
        __break(1u);
        return result;
      }
      sub_22D2A6FB4(0, 1);
    }
    else
    {
      long long v15 = 0u;
      long long v16 = 0u;
      long long v13 = 0u;
      long long v14 = 0u;
      long long v12 = 0u;
    }
    swift_endAccess();
    if (*((void *)&v12 + 1))
    {
      void v17[2] = v14;
      v17[3] = v15;
      _OWORD v17[4] = v16;
      v17[0] = v12;
      v17[1] = v13;
      sub_22D2A6F34((uint64_t)v17, (uint64_t)&v12, (uint64_t)&qword_268543930, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A8E2C);
      sub_22D2A8E2C(0, &qword_268543F20, (uint64_t (*)(void, ValueMetadata *, _UNKNOWN **))type metadata accessor for SingleValuePublisherTaskQueue.ActiveTaskWrapper);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 96) = 0u;
      *(_OWORD *)(v9 + 112) = 0u;
      *(void *)(v9 + 128) = 0;
      long long v10 = v13;
      *(_OWORD *)(v9 + 16) = v12;
      *(_OWORD *)(v9 + 32) = v10;
      long long v11 = v15;
      *(_OWORD *)(v9 + 48) = v14;
      *(_OWORD *)(v9 + 64) = v11;
      *(_OWORD *)(v9 + 80) = v16;
      sub_22D074520(0);
      sub_22D2A7498((uint64_t)v17, (uint64_t)&qword_268543930, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A8E2C);
      *a4 = v9;
      swift_release();
      *(void *)(a3 + 32) = *a4;
      swift_retain();
      return swift_release();
    }
    else
    {
      return sub_22D2A8D74((uint64_t)&v12, &qword_268543F18, (uint64_t)&qword_268543930, (uint64_t)type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper, (void (*)(uint64_t, uint64_t, uint64_t))sub_22D2A8E2C);
    }
  }
  return result;
}

uint64_t sub_22D2A15C4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_22D2A6EC0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2A7430(0, (unint64_t *)&qword_26AEC1808, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  long long v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v13);
  unint64_t v18 = (char *)&v27 - v17;
  if (a1)
  {
    uint64_t v19 = swift_retain();
    a1(v19);
    uint64_t result = sub_22D074520((uint64_t)a1);
  }
  if (!*(void *)(a3 + 32))
  {
    swift_beginAccess();
    uint64_t v20 = *(void *)(a3 + 24);
    if (*(void *)(v20 + 16))
    {
      uint64_t result = sub_22D2A6F34(v20 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v9, (uint64_t)&qword_26AEC1808, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A7430);
      if (!*(void *)(v20 + 16))
      {
        __break(1u);
        return result;
      }
      sub_22D2A714C(0, 1);
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v9, v21, 1, v11);
    swift_endAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
    {
      return sub_22D2A7350((uint64_t)v9, (uint64_t (*)(void))sub_22D2A6EC0);
    }
    else
    {
      sub_22D2A73B0((uint64_t)v9, (uint64_t)v18);
      sub_22D2A6F34((uint64_t)v18, (uint64_t)v15, (uint64_t)&qword_26AEC1808, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A7430);
      sub_22D2A7430(0, qword_26AEC1780, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for SingleValuePublisherTaskQueue.ActiveTaskWrapper);
      uint64_t v22 = swift_allocObject();
      uint64_t v23 = (void *)(v22 + *(void *)(*(void *)v22 + 104));
      *uint64_t v23 = 0;
      v23[1] = 0;
      uint64_t v24 = v22 + *(void *)(*(void *)v22 + 112);
      *(_OWORD *)uint64_t v24 = 0u;
      *(_OWORD *)(v24 + 16) = 0u;
      *(void *)(v24 + 32) = 0;
      sub_22D2A6870((uint64_t)v15, v22 + *(void *)(*(void *)v22 + 96), (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
      uint64_t v25 = (uint64_t *)(v22 + *(void *)(*(void *)v22 + 104));
      uint64_t v26 = *v25;
      *(_OWORD *)uint64_t v25 = *(_OWORD *)&v15[*(int *)(v11 + 36)];
      sub_22D074520(v26);
      sub_22D2A7498((uint64_t)v18, (uint64_t)&qword_26AEC1808, (uint64_t (*)(void, uint64_t, uint64_t (*)()))sub_22D2A7430);
      *a4 = v22;
      swift_release();
      *(void *)(a3 + 32) = *a4;
      swift_retain();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_22D2A1964(uint64_t a1)
{
  sub_22D2A8A38();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v15 = v3;
  uint64_t v16 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_22D2C2D80;
  *(void *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = 0;
  *(void *)&v20[0] = sub_22D030DAC();
  sub_22D2A7B48(0, &qword_268543F00, (uint64_t)&type metadata for CatalogDownloadResult, MEMORY[0x263EFDCF0]);
  sub_22D2A8AC0();
  uint64_t v8 = sub_22D2BC720();
  swift_release();
  *(void *)&v20[0] = v8;
  sub_22D2BC7B0();
  swift_release();
  sub_22D032454(a1 + 16, (uint64_t)v20);
  uint64_t v9 = swift_allocObject();
  long long v10 = v20[1];
  *(_OWORD *)(v9 + 16) = v20[0];
  *(_OWORD *)(v9 + 32) = v10;
  long long v11 = v20[3];
  *(_OWORD *)(v9 + 48) = v20[2];
  *(_OWORD *)(v9 + 64) = v11;
  *(void *)(v9 + 80) = v7;
  *(void *)(v9 + 88) = v1;
  *(void *)(v9 + 96) = a1;
  sub_22D2A6D94(&qword_268543F10, (void (*)(uint64_t))sub_22D2A8A38);
  swift_retain_n();
  swift_retain();
  swift_retain();
  uint64_t v12 = v15;
  uint64_t v13 = sub_22D2BC790();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v12);
  *(void *)&v20[0] = *(void *)(v1 + 16);
  uint64_t v17 = a1;
  uint64_t v18 = v1;
  uint64_t v19 = v13;
  sub_22D2A6354(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  sub_22D2BBEE0();
  swift_release();
  return swift_release();
}

uint64_t sub_22D2A1C5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalSharingSyncTask();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2A6978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  uint64_t v11 = a1 + *(void *)(*(void *)a1 + 96);
  uint64_t v29 = sub_22D068FA0();
  sub_22D2A7510(0, (unint64_t *)&unk_26AEC2EF0, (uint64_t (*)(uint64_t))sub_22D283F44, MEMORY[0x263EFDCF0]);
  sub_22D0706E8();
  sub_22D2BC7B0();
  swift_release();
  sub_22D2A63B8(v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v13 = (v4 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  sub_22D2A6870((uint64_t)v5, v15 + v12, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
  *(void *)(v15 + v13) = v10;
  uint64_t v16 = v23;
  *(void *)(v15 + v14) = v23;
  *(void *)(v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)) = a1;
  sub_22D2A6D94(&qword_26AEC2CC8, (void (*)(uint64_t))sub_22D2A6978);
  swift_retain_n();
  uint64_t v17 = v16;
  swift_retain();
  swift_retain();
  uint64_t v18 = v24;
  uint64_t v19 = sub_22D2BC790();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v18);
  uint64_t v20 = *(void *)(v17 + 16);
  uint64_t v28 = v19;
  uint64_t v29 = v20;
  uint64_t v26 = a1;
  uint64_t v27 = v17;
  sub_22D2A6354(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  sub_22D2BBEE0();
  swift_release();
  return swift_release();
}

void sub_22D2A2000(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    uint64_t v15 = a1;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    char v19 = 1;
    id v7 = a1;
    sub_22D2A2318(a5, (uint64_t)&v15);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = a3[2];
    uint64_t v10 = a3[3];
    if (v10 == 1) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = (void *)a3[2];
    }
    if (v10 == 1) {
      uint64_t v12 = 0;
    }
    else {
      uint64_t v12 = a3[3];
    }
    if (v10 == 1) {
      uint64_t v13 = 0;
    }
    else {
      uint64_t v13 = a3[4];
    }
    if (v10 == 1) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = a3[5];
    }
    uint64_t v15 = v11;
    uint64_t v16 = v12;
    uint64_t v17 = v13;
    uint64_t v18 = v14;
    char v19 = 0;
    sub_22D2A8C5C(v9, v10);
    sub_22D2A2318(a5, (uint64_t)&v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_22D2A20E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    id v7 = a1;
    sub_22D2A24A4(a5, (uint64_t)a1, 1);
  }
  else
  {
    swift_beginAccess();
    if (*(void *)(a3 + 16)) {
      uint64_t v9 = *(void *)(a3 + 16);
    }
    else {
      uint64_t v9 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRetain();
    sub_22D2A24A4(a5, v9, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D2A21A4(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a2 + 32);
  if (v3) {
    BOOL v4 = v3 == result;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    uint64_t v5 = result;
    v7[3] = *a3;
    void v7[4] = MEMORY[0x263EFDD10];
    v7[0] = a3;
    sub_22D2A6234((uint64_t)v7, (uint64_t)v6);
    swift_beginAccess();
    swift_retain();
    sub_22D2A62C4((uint64_t)v6, v5 + 96);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_22D2A2254(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a2 + 32);
  if (v3) {
    BOOL v4 = v3 == result;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    uint64_t v5 = result;
    v8[3] = *a3;
    void v8[4] = MEMORY[0x263EFDD10];
    v8[0] = a3;
    sub_22D2A6234((uint64_t)v8, (uint64_t)v7);
    uint64_t v6 = v5 + *(void *)(*(void *)v5 + 112);
    swift_beginAccess();
    swift_retain();
    sub_22D2A62C4((uint64_t)v7, v6);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_22D2A2318(uint64_t a1, uint64_t a2)
{
  sub_22D2A8CA4(a2, (uint64_t)v4);
  sub_22D2A6354(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  uint64_t v2 = sub_22D2BBEE0();
  MEMORY[0x270FA5388](v2);
  sub_22D2BBEE0();
  return sub_22D074520(0);
}

uint64_t sub_22D2A24A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = a2;
  char v6 = a3 & 1;
  sub_22D2A6354(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
  sub_22D086B58();
  uint64_t v3 = sub_22D2BBEE0();
  MEMORY[0x270FA5388](v3);
  sub_22D2BBEE0();
  return sub_22D074520(0);
}

uint64_t sub_22D2A2624(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2 + 32);
  if (v5) {
    BOOL v6 = v5 == result;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    uint64_t v10 = a4();
    uint64_t v11 = *a3;
    uint64_t v12 = a3[1];
    *a3 = v10;
    a3[1] = v13;
    a5(v11, v12);
    *(void *)(a2 + 32) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_22D2A26B0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_beginAccess();
  sub_22D2A6E30(v0 + 96, (uint64_t)&v5);
  if (*((void *)&v6 + 1))
  {
    sub_22CFF4B00((uint64_t)&v5, (uint64_t)v4);
    sub_22D074424(v1);
    sub_22D2A8D74((uint64_t)&v5, (unint64_t *)&qword_26AEC1D20, (uint64_t)&qword_26AEC1D18, MEMORY[0x263EFDCC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
    __swift_project_boxed_opaque_existential_1(v4, v4[3]);
    sub_22D2BC5A0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    sub_22D074424(v1);
    sub_22D2A8D74((uint64_t)&v5, (unint64_t *)&qword_26AEC1D20, (uint64_t)&qword_26AEC1D18, MEMORY[0x263EFDCC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
  }
  uint64_t v7 = 0;
  long long v5 = 0u;
  long long v6 = 0u;
  swift_beginAccess();
  sub_22D2A62C4((uint64_t)&v5, v0 + 96);
  swift_endAccess();
  uint64_t v2 = *(void *)(v0 + 80);
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 0;
  sub_22D074520(v2);
  return v1;
}

uint64_t sub_22D2A2824()
{
  uint64_t v1 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 104));
  uint64_t v2 = *v1;
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 112);
  swift_beginAccess();
  sub_22D2A6E30(v3, (uint64_t)&v7);
  if (*((void *)&v8 + 1))
  {
    sub_22CFF4B00((uint64_t)&v7, (uint64_t)v6);
    sub_22D074424(v2);
    sub_22D2A8D74((uint64_t)&v7, (unint64_t *)&qword_26AEC1D20, (uint64_t)&qword_26AEC1D18, MEMORY[0x263EFDCC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    sub_22D2BC5A0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    sub_22D074424(v2);
    sub_22D2A8D74((uint64_t)&v7, (unint64_t *)&qword_26AEC1D20, (uint64_t)&qword_26AEC1D18, MEMORY[0x263EFDCC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
  }
  uint64_t v9 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  swift_beginAccess();
  sub_22D2A62C4((uint64_t)&v7, v3);
  swift_endAccess();
  uint64_t v4 = *v1;
  *uint64_t v1 = 0;
  v1[1] = 0;
  sub_22D074520(v4);
  return v2;
}

void sub_22D2A29C0(void *a1, uint64_t a2, uint64_t a3)
{
  long long v5 = a1;
  if (a1)
  {
    sub_22D030474(0, &qword_26AEC2FC0);
    long long v5 = (void *)sub_22D2BCDF0();
  }
  if (a2) {
    uint64_t v6 = sub_22D2BB9B0();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_22D2A2A6C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  sub_22D2A6354(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  long long v8 = (char *)&v13 - v7;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return a2();
  }
  uint64_t v10 = (void *)Strong;
  uint64_t v11 = sub_22D2BBC30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  swift_retain();
  sub_22D2A82DC(0, a1, (uint64_t)v8, v10, (void (*)(void))a2, a3);
  swift_release();
  swift_release();
  return sub_22D2A642C((uint64_t)v8, &qword_26AEC0F48, MEMORY[0x263F07490]);
}

void sub_22D2A2BEC()
{
  swift_getMetatypeMetadata();
  uint64_t v1 = sub_22D2BCC30();
  uint64_t v3 = v2;
  sub_22D04C890();
  uint64_t v4 = (void *)swift_allocError();
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 16) = 1;
  sub_22D2A06AC(v4);

  sub_22D1ED4E0();
  uint64_t v6 = *(void *)(v0 + 64);
  objc_msgSend(*(id *)(v6 + 88), sel_invalidate);
  uint64_t v7 = *(void **)(v6 + 88);
  *(void *)(v6 + 88) = 0;

  sub_22D28B300();
}

void sub_22D2A2CD4(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_22D2BC390();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_22D2BC380();
  os_log_type_t v6 = sub_22D2BD080();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v11 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v9 = *(void *)(a2 + 72);
    unint64_t v10 = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    sub_22D0A4D24(v9, v10, &v11);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_22D2BD470();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v5, v6, "%s: Paused %ld accounts successfully", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v8, -1, -1);
    MEMORY[0x230F7BDF0](v7, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_22D2A2F10()
{
  sub_22D021DE0();
  uint64_t v24 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D021F18();
  uint64_t v26 = v5;
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2A7624();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  uint64_t v30 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v27 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v0;
  uint64_t v11 = (void *)__swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40))[2];
  void v32[3] = &type metadata for ClinicalSharingAccountStore;
  v32[4] = &off_26E05DAE8;
  v32[0] = v11;
  uint64_t v12 = (void *)*__swift_project_boxed_opaque_existential_1(v32, (uint64_t)&type metadata for ClinicalSharingAccountStore);
  *(void *)(swift_allocObject() + 16) = v12;
  sub_22D2A7510(0, (unint64_t *)&qword_26AEC1E18, (uint64_t (*)(uint64_t))sub_22D05BF98, MEMORY[0x263EFDE20]);
  sub_22D2A759C();
  id v13 = v11;
  id v14 = v12;
  sub_22D2BC700();
  sub_22D2A6D94(&qword_26AEC1E30, (void (*)(uint64_t))sub_22D021DE0);
  uint64_t v15 = v24;
  uint64_t v16 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  uint64_t v31 = v16;
  sub_22D2A7510(0, &qword_26AEC1DC8, (uint64_t (*)(uint64_t))sub_22D05BF98, MEMORY[0x263EFDCF0]);
  sub_22D05BF98();
  sub_22D0741BC();
  sub_22D2BC780();
  swift_release();
  sub_22D2A6D94(&qword_26AEC1CA8, (void (*)(uint64_t))sub_22D021F18);
  uint64_t v17 = v26;
  uint64_t v18 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v17);
  uint64_t v31 = v18;
  swift_retain();
  sub_22D2BC5D0();
  char v19 = v27;
  sub_22D2BC830();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  sub_22D2A6D94(&qword_268543E80, (void (*)(uint64_t))sub_22D2A7624);
  uint64_t v20 = v29;
  uint64_t v21 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v20);
  return v21;
}

uint64_t sub_22D2A33A4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_22D2A7704();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2A77B4();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v9);
  int64_t v39 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2A7880();
  uint64_t v12 = v11;
  uint64_t v44 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2A79FC();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v41 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *a1;
  uint64_t v46 = MEMORY[0x263F8EE78];
  if (!(v18 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v45 = a3;
    if (v19) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x263F8EE78];
LABEL_15:
    uint64_t v46 = v26;
    sub_22D05BF98();
    sub_22D2A6D94(&qword_268543E90, (void (*)(uint64_t))sub_22D05BF98);
    sub_22D2BCD80();
    swift_release();
    sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
    uint64_t v27 = v38;
    uint64_t v28 = v39;
    sub_22D2BC540();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v27);
    swift_retain();
    sub_22D2BC5D0();
    sub_22D030474(0, (unint64_t *)&qword_26AEC1EE8);
    sub_22D2A796C();
    sub_22D2A6D94(&qword_268543EB8, (void (*)(uint64_t))sub_22D2A77B4);
    sub_22D2A6D94(&qword_268543EB0, (void (*)(uint64_t))sub_22D2A796C);
    uint64_t v29 = v40;
    uint64_t v30 = v43;
    sub_22D2BC830();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v30);
    sub_22D2A6D94(&qword_268543EC8, (void (*)(uint64_t))sub_22D2A7880);
    uint64_t v31 = v41;
    sub_22D2BC800();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v12);
    sub_22D2A6D94(&qword_268543ED0, (void (*)(uint64_t))sub_22D2A79FC);
    uint64_t v32 = sub_22D2BC720();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v31, v15);
    uint64_t *v45 = v32;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_22D2BD470();
  uint64_t v19 = result;
  uint64_t v45 = a3;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v19 >= 1)
  {
    uint64_t v33 = v12;
    uint64_t v34 = v16;
    uint64_t v35 = v15;
    uint64_t v36 = a2;
    for (uint64_t i = 0; i != v19; ++i)
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x230F7AF90](i, v18);
      }
      else {
        id v22 = *(id *)(v18 + 8 * i + 32);
      }
      uint64_t v23 = v22;
      id v24 = objc_msgSend(v22, sel_clinicalSharingStatus, v33, v34, v35, v36);
      id v25 = objc_msgSend(v24, sel_multiDeviceStatus);

      if (v25 == (id)1)
      {
        sub_22D2BD3A0();
        sub_22D2BD3E0();
        sub_22D2BD3F0();
        sub_22D2BD3B0();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = v46;
    uint64_t v15 = v35;
    uint64_t v12 = v33;
    uint64_t v16 = v34;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_22D2A399C@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v56 = a3;
  sub_22D2A6354(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v47 - v9;
  sub_22D2A7A98();
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v55 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22D2BBC90();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  id v52 = (id)sub_22D2BCF50();
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v57 = v13;
  uint64_t v18 = sub_22D2BC390();
  __swift_project_value_buffer(v18, (uint64_t)qword_26AEC3C90);
  id v19 = v17;
  swift_retain();
  uint64_t v20 = sub_22D2BC380();
  os_log_type_t v21 = sub_22D2BD080();
  int v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    int v48 = v22;
    uint64_t v24 = v23;
    uint64_t v49 = swift_slowAlloc();
    v59[0] = v49;
    *(_DWORD *)uint64_t v24 = 136315394;
    unint64_t v50 = v10;
    uint64_t v51 = v8;
    uint64_t v25 = a2[9];
    unint64_t v26 = a2[10];
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_22D0A4D24(v25, v26, v59);
    sub_22D2BD220();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    v47[1] = v24 + 14;
    id v27 = objc_msgSend(v19, sel_identifier);
    sub_22D2BBC70();

    sub_22D2A6D94((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v28 = v57;
    uint64_t v29 = sub_22D2BD630();
    unint64_t v31 = v30;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v28);
    uint64_t v58 = sub_22D0A4D24(v29, v31, v59);
    uint64_t v8 = v51;
    sub_22D2BD220();

    uint64_t v10 = v50;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v20, (os_log_type_t)v48, "%s: Pausing sync for %s", (uint8_t *)v24, 0x16u);
    uint64_t v32 = v49;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v32, -1, -1);
    MEMORY[0x230F7BDF0](v24, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v33 = (void *)__swift_project_boxed_opaque_existential_1(a2 + 2, a2[5])[2];
  v59[3] = (uint64_t)&type metadata for ClinicalSharingAccountStore;
  v59[4] = (uint64_t)&off_26E05DAE8;
  v59[0] = (uint64_t)v33;
  __swift_project_boxed_opaque_existential_1(v59, (uint64_t)&type metadata for ClinicalSharingAccountStore);
  id v34 = v33;
  id v35 = objc_msgSend(v19, sel_identifier);
  sub_22D2BBC70();

  uint64_t v36 = sub_22D2BBC30();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
  v37(v10, 1, 1, v36);
  v37(v8, 1, 1, v36);
  id v38 = v52;
  id v39 = v52;
  uint64_t v40 = sub_22D1F163C((uint64_t)v16, (uint64_t)v10, (uint64_t)v8, 0, v38, 0, 0);
  uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_22D2A642C((uint64_t)v8, &qword_26AEC0F48, MEMORY[0x263F07490]);
  sub_22D2A642C((uint64_t)v10, &qword_26AEC0F48, v41);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v57);
  uint64_t v58 = v40;
  *(void *)(swift_allocObject() + 16) = v19;
  sub_22D2A7B48(0, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263F8D4F8], MEMORY[0x263EFDCF0]);
  sub_22D030474(0, (unint64_t *)&qword_26AEC1EE8);
  sub_22D0DFCE8();
  id v42 = v19;
  uint64_t v43 = v53;
  sub_22D2BC780();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  sub_22D2A6D94(&qword_268543EE0, (void (*)(uint64_t))sub_22D2A7A98);
  uint64_t v44 = v55;
  uint64_t v45 = sub_22D2BC720();

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v43, v44);
  uint64_t *v56 = v45;
  return result;
}

uint64_t sub_22D2A406C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v10 = type metadata accessor for ClinicalSharingSyncTask();
  MEMORY[0x270FA5388](v10);
  uint64_t v47 = (uint64_t)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2A6354(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v43 - v13;
  uint64_t v15 = sub_22D2BBC30();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D04BDE8(a3, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_22D2BBC20();
    sub_22D2A642C((uint64_t)v14, &qword_26AEC0F48, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  }
  uint64_t v19 = swift_allocBox();
  uint64_t v21 = v20;
  uint64_t v22 = v6[8];
  sub_22CFF4B00((uint64_t)(v6 + 2), (uint64_t)v51);
  swift_retain();
  uint64_t v23 = v48;
  sub_22D068920(a1, a2, (uint64_t)v18, v22, v51, v21);
  if (v23) {
    return swift_deallocBox();
  }
  uint64_t v25 = (uint64_t *)(v21 + *(int *)(v10 + 60));
  uint64_t v26 = *v25;
  uint64_t *v25 = (uint64_t)sub_22D2A649C;
  v25[1] = (uint64_t)v6;
  swift_retain();
  sub_22D074520(v26);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_22D2BC390();
  __swift_project_value_buffer(v27, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  swift_retain_n();
  uint64_t v28 = sub_22D2BC380();
  os_log_type_t v29 = sub_22D2BD080();
  int v30 = v29;
  BOOL v31 = os_log_type_enabled(v28, v29);
  uint64_t v32 = v47;
  if (v31)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v51[0] = v48;
    *(_DWORD *)uint64_t v33 = 136315650;
    int v44 = v30;
    uint64_t v34 = v6[9];
    unint64_t v35 = v6[10];
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_22D0A4D24(v34, v35, v51);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    swift_beginAccess();
    sub_22D2A63B8(v21, v32, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
    uint64_t v36 = sub_22D06DE14();
    unint64_t v38 = v37;
    sub_22D2A7350(v47, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
    v51[6] = sub_22D0A4D24(v36, v38, v51);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 22) = 2048;
    v43[1] = v33 + 24;
    uint64_t v49 = *(void *)(v6[12] + 16);
    sub_22D2A6354(0, &qword_26AEC1F40, (uint64_t (*)(uint64_t))type metadata accessor for os_unfair_lock_s, MEMORY[0x263F8D8D0]);
    sub_22D086B58();
    uint64_t v32 = v47;
    sub_22D2BBED0();
    swift_release();
    sub_22D2BD220();
    swift_release();
    _os_log_impl(&dword_22CFEE000, v28, (os_log_type_t)v44, "%s: Enqueuing sync task %s (%ld tasks already enqueued)", (uint8_t *)v33, 0x20u);
    uint64_t v39 = v48;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v39, -1, -1);
    MEMORY[0x230F7BDF0](v33, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  swift_beginAccess();
  sub_22D2A63B8(v21, v32, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
  uint64_t v40 = v32;
  uint64_t v41 = (void *)swift_allocObject();
  _OWORD v41[2] = v6;
  v41[3] = v19;
  uint64_t v42 = v46;
  v41[4] = v45;
  v41[5] = v42;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22D2A0EE8(v40, (uint64_t)sub_22D2A64EC, (uint64_t)v41);
  swift_release();
  sub_22D2A7350(v40, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
  return swift_release();
}

void sub_22D2A46C8(unint64_t a1)
{
  uint64_t v2 = sub_22D2BBC30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2BBC20();
  uint64_t v6 = sub_22D2A0354(a1);
  sub_22D237C78(v6);
  swift_bridgeObjectRelease();
  id v7 = objc_allocWithZone(MEMORY[0x263F45CC0]);
  uint64_t v8 = (void *)sub_22D2BBBC0();
  sub_22D2BBC90();
  sub_22D2A6D94((unint64_t *)&qword_26AEC0F50, MEMORY[0x263F07508]);
  uint64_t v9 = (void *)sub_22D2BCF20();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v7, sel_initWithStartDate_accountIdentifiers_, v8, v9);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v12 = v10;
  char v13 = 0;
  id v11 = v10;
  sub_22D2BC620();
}

uint64_t sub_22D2A4884(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for ClinicalSharingSyncTask();
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(void **)a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  uint64_t v12 = swift_projectBox();
  swift_beginAccess();
  sub_22D2A63B8(v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
  sub_22D2A4994((uint64_t)v10, v11, a1, a4, a5);
  return sub_22D2A7350((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
}

void sub_22D2A4994(uint64_t a1, void *a2, char a3, char *a4, uint64_t a5)
{
  uint64_t v49 = a5;
  uint64_t v10 = type metadata accessor for ClinicalSharingSyncTask();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  char v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v45 - v14;
  sub_22D1EE524();
  uint64_t v16 = 0;
  if (a3)
  {
    uint64_t v48 = v15;
    uint64_t v51 = (uint64_t)a2;
    id v17 = a2;
    sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
    uint64_t v18 = sub_22D2BD650();
    if (v18)
    {
      uint64_t v16 = (void *)v18;
      sub_22D0AF638(a2, 1);
    }
    else
    {
      uint64_t v16 = (void *)swift_allocError();
      uint64_t *v19 = v51;
    }
    uint64_t v15 = v48;
  }
  uint64_t v51 = (uint64_t)v16;
  char v52 = 1;
  sub_22D2BC620();

  uint64_t v51 = 0;
  char v52 = 2;
  sub_22D2BC620();
  if (a3)
  {
    id v29 = a2;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_22D2BC390();
    __swift_project_value_buffer(v30, (uint64_t)qword_26AEC3C90);
    sub_22D2A63B8(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
    sub_22D2A6420(a2, 1);
    sub_22D2A6420(a2, 1);
    swift_retain();
    BOOL v31 = sub_22D2BC380();
    os_log_type_t v32 = sub_22D2BD060();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v47 = a1;
      uint64_t v34 = v33;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v51 = v46;
      *(_DWORD *)uint64_t v34 = 136315650;
      uint64_t v48 = a4;
      uint64_t v36 = *(void *)(v5 + 72);
      unint64_t v35 = *(void *)(v5 + 80);
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_22D0A4D24(v36, v35, &v51);
      sub_22D2BD220();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      uint64_t v37 = sub_22D06DE14();
      uint64_t v50 = sub_22D0A4D24(v37, v38, &v51);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D2A7350((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
      *(_WORD *)(v34 + 22) = 2080;
      uint64_t v50 = (uint64_t)a2;
      id v39 = a2;
      sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
      uint64_t v40 = sub_22D2BCC30();
      uint64_t v50 = sub_22D0A4D24(v40, v41, &v51);
      a4 = v48;
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D0AF638(a2, 1);
      sub_22D0AF638(a2, 1);
      _os_log_impl(&dword_22CFEE000, v31, v32, "%s: Sync task %s failed: %s", (uint8_t *)v34, 0x20u);
      uint64_t v42 = v46;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v42, -1, -1);
      uint64_t v43 = v34;
      a1 = v47;
      MEMORY[0x230F7BDF0](v43, -1, -1);
    }
    else
    {
      swift_release();
      sub_22D2A7350((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
      sub_22D0AF638(a2, 1);
      sub_22D0AF638(a2, 1);
    }

    sub_22D1EDA84(a2, *(void *)(a1 + 8));
    id v44 = a2;
    ((void (*)(void, void *))a4)(0, a2);
    sub_22D0AF638(a2, 1);
    sub_22D0AF638(a2, 1);
  }
  else
  {
    uint64_t v48 = a4;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_22D2BC390();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
    sub_22D2A63B8(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
    swift_retain();
    uint64_t v21 = sub_22D2BC380();
    os_log_type_t v22 = sub_22D2BD080();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v51 = v24;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v5 + 80);
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_22D0A4D24(v25, v26, &v51);
      sub_22D2BD220();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v27 = sub_22D06DE14();
      uint64_t v50 = sub_22D0A4D24(v27, v28, &v51);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D2A7350((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
      _os_log_impl(&dword_22CFEE000, v21, v22, "%s: Sync task %s finished successfully", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v24, -1, -1);
      MEMORY[0x230F7BDF0](v23, -1, -1);
    }
    else
    {
      swift_release();
      sub_22D2A7350((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSyncTask);
    }

    ((void (*)(void *, void))v48)(a2, 0);
  }
}

uint64_t sub_22D2A5054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v8 = sub_22D2BBC30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DiagnosticsTask = type metadata accessor for ClinicalSharingQueryDiagnosticsTask(0);
  uint64_t v38 = *(void *)(DiagnosticsTask - 8);
  uint64_t v13 = *(void *)(v38 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](DiagnosticsTask - 8);
  uint64_t v39 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v36 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v36 - v18;
  sub_22CFF4B00(v5 + 16, (uint64_t)&v43);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_22D01895C(&v43, a1, (uint64_t)v11, (uint64_t)v19);
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_22D2BC390();
  __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
  sub_22D2A63B8((uint64_t)v19, (uint64_t)v17, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
  swift_retain();
  uint64_t v21 = sub_22D2BC380();
  os_log_type_t v22 = sub_22D2BD080();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(void *)&long long v43 = v37;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v25 = *(void *)(v5 + 72);
    unint64_t v24 = *(void *)(v5 + 80);
    swift_bridgeObjectRetain();
    v42[0] = sub_22D0A4D24(v25, v24, (uint64_t *)&v43);
    sub_22D2BD220();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v36 = v23 + 14;
    sub_22D2BBC90();
    sub_22D2A6D94((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v26 = sub_22D2BD630();
    v42[0] = sub_22D0A4D24(v26, v27, (uint64_t *)&v43);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    sub_22D2A7350((uint64_t)v17, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
    _os_log_impl(&dword_22CFEE000, v21, v22, "%s: Diagnostic query task %s beginning", (uint8_t *)v23, 0x16u);
    uint64_t v28 = v37;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v28, -1, -1);
    MEMORY[0x230F7BDF0](v23, -1, -1);
  }
  else
  {
    swift_release();
    sub_22D2A7350((uint64_t)v17, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
  }

  *(void *)&long long v43 = sub_22D018D3C();
  uint64_t v29 = v39;
  sub_22D2A63B8((uint64_t)v19, v39, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
  unint64_t v30 = (*(unsigned __int8 *)(v38 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v5;
  sub_22D2A6870(v29, v31 + v30, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
  os_log_type_t v32 = (void *)(v31 + ((v13 + v30 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v33 = v41;
  void *v32 = v40;
  v32[1] = v33;
  sub_22D2A7B48(0, &qword_268543E68, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
  sub_22D2A61B4();
  swift_retain();
  swift_retain();
  uint64_t v34 = sub_22D2BC790();
  swift_release();
  swift_release();
  uint64_t v44 = sub_22D2BC610();
  uint64_t v45 = MEMORY[0x263EFDD10];
  *(void *)&long long v43 = v34;
  sub_22D2A7350((uint64_t)v19, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
  sub_22D2A6234((uint64_t)&v43, (uint64_t)v42);
  swift_beginAccess();
  sub_22D2A62C4((uint64_t)v42, v5 + 104);
  return swift_endAccess();
}

uint64_t sub_22D2A55E8(void **a1, uint64_t a2, uint64_t a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v54 = a5;
  sub_22D2A6354(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v50[-v10];
  uint64_t DiagnosticsTask = type metadata accessor for ClinicalSharingQueryDiagnosticsTask(0);
  uint64_t v13 = MEMORY[0x270FA5388](DiagnosticsTask);
  uint64_t v15 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  id v17 = &v50[-v16];
  uint64_t v18 = *a1;
  if (*a1)
  {
    id v19 = v18;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_22D2BC390();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AEC3C90);
    sub_22D2A63B8(a3, (uint64_t)v15, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
    id v21 = v18;
    swift_retain();
    id v22 = v18;
    uint64_t v23 = sub_22D2BC380();
    os_log_type_t v24 = sub_22D2BD060();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v56 = v52;
      *(_DWORD *)uint64_t v25 = 136315650;
      uint64_t v53 = a4;
      uint64_t v27 = *(void *)(a2 + 72);
      unint64_t v26 = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_22D0A4D24(v27, v26, &v56);
      sub_22D2BD220();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      sub_22D2BBC90();
      sub_22D2A6D94((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v28 = sub_22D2BD630();
      uint64_t v55 = sub_22D0A4D24(v28, v29, &v56);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D2A7350((uint64_t)v15, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
      *(_WORD *)(v25 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v30 = sub_22D2BD6D0();
      uint64_t v55 = sub_22D0A4D24(v30, v31, &v56);
      a4 = v53;
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, v23, v24, "%s: Query task %s failed: %s", (uint8_t *)v25, 0x20u);
      uint64_t v32 = v52;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v32, -1, -1);
      MEMORY[0x230F7BDF0](v25, -1, -1);
    }
    else
    {
      swift_release();
      sub_22D2A7350((uint64_t)v15, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
    }
    uint64_t v44 = sub_22D2BBAA0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v11, 1, 1, v44);
    id v45 = v18;
    a4(v11, v18);
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v53 = a4;
    uint64_t v33 = sub_22D2BC390();
    __swift_project_value_buffer(v33, (uint64_t)qword_26AEC3C90);
    sub_22D2A63B8(a3, (uint64_t)v17, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
    swift_retain();
    uint64_t v34 = sub_22D2BC380();
    os_log_type_t v35 = sub_22D2BD080();
    int v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v37 = swift_slowAlloc();
      int v51 = v36;
      uint64_t v38 = v37;
      uint64_t v52 = swift_slowAlloc();
      uint64_t v56 = v52;
      *(_DWORD *)uint64_t v38 = 136315394;
      uint64_t v39 = *(void *)(a2 + 72);
      unint64_t v40 = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_22D0A4D24(v39, v40, &v56);
      sub_22D2BD220();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      sub_22D2BBC90();
      sub_22D2A6D94((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v41 = sub_22D2BD630();
      uint64_t v55 = sub_22D0A4D24(v41, v42, &v56);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D2A7350((uint64_t)v17, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
      _os_log_impl(&dword_22CFEE000, v34, (os_log_type_t)v51, "%s: Query task %s finished successfully", (uint8_t *)v38, 0x16u);
      uint64_t v43 = v52;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v43, -1, -1);
      MEMORY[0x230F7BDF0](v38, -1, -1);
    }
    else
    {
      swift_release();
      sub_22D2A7350((uint64_t)v17, type metadata accessor for ClinicalSharingQueryDiagnosticsTask);
    }

    uint64_t v46 = a3 + *(int *)(DiagnosticsTask + 28);
    uint64_t v47 = sub_22D2BBAA0();
    uint64_t v48 = *(void *)(v47 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v48 + 16))(v11, v46, v47);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v48 + 56))(v11, 0, 1, v47);
    v53(v11, 0);
  }
  return sub_22D2A642C((uint64_t)v11, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
}

uint64_t sub_22D2A5D7C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_22D2A8D74(v0 + 104, (unint64_t *)&qword_26AEC1D20, (uint64_t)&qword_26AEC1D18, MEMORY[0x263EFDCC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalSharingSyncTaskCoordinator()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for ClinicalSharingSyncState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_22D0DE9EC(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for ClinicalSharingSyncState(uint64_t a1)
{
}

uint64_t assignWithCopy for ClinicalSharingSyncState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_22D0DE9EC(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_22D0DE904(v5, v6);
  return a1;
}

uint64_t assignWithTake for ClinicalSharingSyncState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_22D0DE904(v4, v5);
  return a1;
}

uint64_t sub_22D2A5F20(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_22D2A5F38(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingSyncState()
{
  return &type metadata for ClinicalSharingSyncState;
}

uint64_t sub_22D2A5F60()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingQueryDiagnosticsTask(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  uint64_t v8 = v6 + v1[9];
  uint64_t v9 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  __swift_destroy_boxed_opaque_existential_1(v6 + v1[10]);
  uint64_t v10 = v6 + v1[12];
  uint64_t v11 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_22D2A6110(void **a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ClinicalSharingQueryDiagnosticsTask(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void (**)(void, void))v7;
  uint64_t v9 = *(void *)(v7 + 8);
  return sub_22D2A55E8(a1, v5, v6, v8, v9);
}

unint64_t sub_22D2A61B4()
{
  unint64_t result = qword_268543E70;
  if (!qword_268543E70)
  {
    sub_22D2A7B48(255, &qword_268543E68, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543E70);
  }
  return result;
}

uint64_t sub_22D2A6234(uint64_t a1, uint64_t a2)
{
  sub_22D2A8DD0(0, (unint64_t *)&qword_26AEC1D20, (uint64_t)&qword_26AEC1D18, MEMORY[0x263EFDCC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D2A62C4(uint64_t a1, uint64_t a2)
{
  sub_22D2A8DD0(0, (unint64_t *)&qword_26AEC1D20, (uint64_t)&qword_26AEC1D18, MEMORY[0x263EFDCC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_22D2A6354(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D2A63B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_22D2A6420(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_22D2A642C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D2A6354(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_22D2A649C(unint64_t a1)
{
}

uint64_t sub_22D2A64A4()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D2A64EC(uint64_t a1)
{
  return sub_22D2A4884(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_22D2A64F8(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  swift_beginAccess();
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  a2[2] = v4;
  a2[3] = v3;
  a2[4] = v6;
  a2[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_22D2A8C14(v7, v8);
}

uint64_t sub_22D2A6590(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *(void *)(a2 + 16) = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22D2A65F0()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalSharingSyncTask() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v14 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v4 = v0 + v3 + v1[8];
  uint64_t v5 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(v0 + v3 + v1[9]);
  uint64_t v6 = v0 + v3 + v1[10];
  uint64_t v7 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  uint64_t v8 = v0 + v3 + v1[13];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v8 + 48);
  uint64_t v9 = v0 + v3 + v1[14];
  uint64_t v10 = sub_22D2BBAA0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  uint64_t v12 = type metadata accessor for ClinicalSharingCloudStandardAPI();
  v11(v9 + *(int *)(v12 + 20), v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  if (*(void *)(v0 + v3 + v1[17])) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v14 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_22D2A6870(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D2A68D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ClinicalSharingSyncTask() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  return sub_22D2A11EC(v3, v4, v6, v7);
}

uint64_t sub_22D2A696C()
{
  return sub_22D2A15C4(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

void sub_22D2A6978()
{
  if (!qword_26AEC2CD0)
  {
    sub_22D2A7510(255, (unint64_t *)&unk_26AEC2EF0, (uint64_t (*)(uint64_t))sub_22D283F44, MEMORY[0x263EFDCF0]);
    sub_22D0706E8();
    unint64_t v0 = sub_22D2BC4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2CD0);
    }
  }
}

uint64_t sub_22D2A6A0C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D2A6A44()
{
  uint64_t v1 = type metadata accessor for ClinicalSharingSyncTask();
  unint64_t v2 = (int *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v15 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v4 + *(int *)(v1 + 24);
  uint64_t v6 = sub_22D2BBC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + v2[9]);
  uint64_t v7 = v0 + v4 + v2[10];
  uint64_t v8 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();

  uint64_t v9 = v0 + v4 + v2[13];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v9 + 48);
  uint64_t v10 = v0 + v4 + v2[14];
  uint64_t v11 = sub_22D2BBAA0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = type metadata accessor for ClinicalSharingCloudStandardAPI();
  v12(v10 + *(int *)(v13 + 20), v11);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  if (*(void *)(v0 + v4 + v2[17])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, ((((((v15 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_22D2A6CD8(void **a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ClinicalSharingSyncTask() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *a1;
  sub_22D2A20E4(v10, v1 + v4, v7, v8, v9);
}

uint64_t sub_22D2A6D8C(uint64_t *a1)
{
  return sub_22D2A6590(a1, v1);
}

uint64_t sub_22D2A6D94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2A6DDC()
{
  return sub_22D2A2254(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_22D2A6DE8()
{
  return sub_22D2A2624(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32), sub_22D2A2824, (void (*)(uint64_t, uint64_t))sub_22D2A8EE4);
}

uint64_t sub_22D2A6E30(uint64_t a1, uint64_t a2)
{
  sub_22D2A8DD0(0, (unint64_t *)&qword_26AEC1D20, (uint64_t)&qword_26AEC1D18, MEMORY[0x263EFDCC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_22D021C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22D2A6EC0()
{
  if (!qword_26AEC1810[0])
  {
    sub_22D2A7430(255, (unint64_t *)&qword_26AEC1808, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, qword_26AEC1810);
    }
  }
}

uint64_t sub_22D2A6F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, uint64_t (*)()))
{
  uint64_t v6 = a4(0, a3, type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22D2A6FB4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_22D2817F0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_22D2A8E2C(0, (unint64_t *)&qword_268543930, (uint64_t (*)(void, ValueMetadata *, _UNKNOWN **))type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[10 * a2 + 4];
    if (a1 != a2 || &v4[10 * a1 + 4] >= (void *)&v16[80 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[10 * a1 + 4], v16, 80 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D2A714C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_22D281A84(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_22D2A7430(0, (unint64_t *)&qword_26AEC1808, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
  unint64_t v13 = v4
      + ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80));
  uint64_t v14 = *(void *)(*(void *)(v12 - 8) + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_22D2BD4C0();
  __break(1u);
  return result;
}

uint64_t sub_22D2A7350(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D2A73B0(uint64_t a1, uint64_t a2)
{
  sub_22D2A7430(0, (unint64_t *)&qword_26AEC1808, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22D2A7430(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _UNKNOWN **))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for ClinicalSharingSyncTask();
    unint64_t v7 = a3(a1, v6, &off_26B7134D0);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22D2A7498(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t, uint64_t (*)()))
{
  uint64_t v4 = a3(0, a2, type metadata accessor for SingleValuePublisherTaskQueue.PendingTaskWrapper);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_22D2A7510(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_22D2A759C()
{
  unint64_t result = qword_26AEC1E10;
  if (!qword_26AEC1E10)
  {
    sub_22D2A7510(255, (unint64_t *)&qword_26AEC1E18, (uint64_t (*)(uint64_t))sub_22D05BF98, MEMORY[0x263EFDE20]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1E10);
  }
  return result;
}

void sub_22D2A7624()
{
  if (!qword_268543E78)
  {
    sub_22D2A7510(255, &qword_26AEC1DC8, (uint64_t (*)(uint64_t))sub_22D05BF98, MEMORY[0x263EFDCF0]);
    sub_22D0741BC();
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543E78);
    }
  }
}

uint64_t sub_22D2A76C4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D2A76FC@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D2A33A4(a1, v2, a2);
}

void sub_22D2A7704()
{
  if (!qword_268543E88)
  {
    sub_22D05BF98();
    sub_22D2A6D94(&qword_268543E90, (void (*)(uint64_t))sub_22D05BF98);
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543E88);
    }
  }
}

void sub_22D2A77B4()
{
  if (!qword_268543E98)
  {
    sub_22D05BF98();
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    sub_22D2A6D94(&qword_268543E90, (void (*)(uint64_t))sub_22D05BF98);
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543E98);
    }
  }
}

void sub_22D2A7880()
{
  if (!qword_268543EA0)
  {
    sub_22D2A796C();
    sub_22D2A77B4();
    sub_22D2A6D94(&qword_268543EB0, (void (*)(uint64_t))sub_22D2A796C);
    sub_22D2A6D94(&qword_268543EB8, (void (*)(uint64_t))sub_22D2A77B4);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543EA0);
    }
  }
}

void sub_22D2A796C()
{
  if (!qword_268543EA8)
  {
    sub_22D030474(255, (unint64_t *)&qword_26AEC1EE8);
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543EA8);
    }
  }
}

void sub_22D2A79FC()
{
  if (!qword_268543EC0)
  {
    sub_22D2A7880();
    sub_22D2A6D94(&qword_268543EC8, (void (*)(uint64_t))sub_22D2A7880);
    unint64_t v0 = sub_22D2BC510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543EC0);
    }
  }
}

uint64_t sub_22D2A7A90@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D2A399C(a1, v2, a2);
}

void sub_22D2A7A98()
{
  if (!qword_268543ED8)
  {
    sub_22D2A7B48(255, (unint64_t *)&qword_26AEC1DE0, MEMORY[0x263F8D4F8], MEMORY[0x263EFDCF0]);
    sub_22D030474(255, (unint64_t *)&qword_26AEC1EE8);
    sub_22D0DFCE8();
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543ED8);
    }
  }
}

void sub_22D2A7B48(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v8 = sub_22D021C20(255, (unint64_t *)&qword_26AEC1FB0);
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

id sub_22D2A7BC8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t sub_22D2A7BD4()
{
  return sub_22D2A0A6C(*(void *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_22D2A7BDC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D2A7C18(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

void sub_22D2A7C5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (**a5)(void, void, void))
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a5;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_22D2A89AC;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = (void *)__swift_project_boxed_opaque_existential_1(a4 + 2, a4[5])[1];
  _Block_copy(a5);
  _Block_copy(a5);
  swift_retain();
  if (objc_msgSend(v12, sel_healthAppNotInstalled))
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_22D2BC390();
    __swift_project_value_buffer(v13, (uint64_t)qword_26AEC3C90);
    swift_retain();
    uint64_t v14 = sub_22D2BC380();
    os_log_type_t v15 = sub_22D2BD080();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v21 = v17;
      *(_DWORD *)unint64_t v16 = 136315138;
      uint64_t v19 = a4[9];
      unint64_t v18 = a4[10];
      swift_bridgeObjectRetain();
      sub_22D0A4D24(v19, v18, &v21);
      sub_22D2BD220();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v14, v15, "%s: Health App is not installed", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v17, -1, -1);
      MEMORY[0x230F7BDF0](v16, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v21 = sub_22D2A2F10();
    sub_22D2A7510(0, &qword_268543EE8, (uint64_t (*)(uint64_t))sub_22D05BF98, MEMORY[0x263EFDCD0]);
    swift_allocObject();
    swift_retain();
    sub_22D2BC5C0();
    sub_22D2A7510(0, &qword_26AEC1DC8, (uint64_t (*)(uint64_t))sub_22D05BF98, MEMORY[0x263EFDCF0]);
    sub_22D0741BC();
    sub_22D2A88EC();
    sub_22D2BC860();
    swift_release();
    swift_release();
    _Block_copy(a5);
    sub_22D030474(0, &qword_26AEC2FC0);
    uint64_t v20 = (void *)sub_22D2BCDF0();
    ((void (**)(void, void *, void))a5)[2](a5, v20, 0);

    _Block_release(a5);
  }
  else
  {
    sub_22D2A406C(a1, a2, a3, (uint64_t)sub_22D2A89B4, v11);
  }
  swift_release();
  swift_release();
  _Block_release(a5);
}

uint64_t sub_22D2A82DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  uint64_t v13 = (void *)__swift_project_boxed_opaque_existential_1(a4 + 2, a4[5])[1];
  swift_retain();
  if (objc_msgSend(v13, sel_healthAppNotInstalled))
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_22D2BC390();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
    swift_retain();
    os_log_type_t v15 = sub_22D2BC380();
    os_log_type_t v16 = sub_22D2BD080();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v22 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v19 = a4[9];
      unint64_t v20 = a4[10];
      swift_bridgeObjectRetain();
      sub_22D0A4D24(v19, v20, &v22);
      sub_22D2BD220();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v15, v16, "%s: Health App is not installed", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v18, -1, -1);
      MEMORY[0x230F7BDF0](v17, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v22 = sub_22D2A2F10();
    sub_22D2A7510(0, &qword_268543EE8, (uint64_t (*)(uint64_t))sub_22D05BF98, MEMORY[0x263EFDCD0]);
    swift_allocObject();
    swift_retain();
    sub_22D2BC5C0();
    sub_22D2A7510(0, &qword_26AEC1DC8, (uint64_t (*)(uint64_t))sub_22D05BF98, MEMORY[0x263EFDCF0]);
    sub_22D0741BC();
    sub_22D2A88EC();
    sub_22D2BC860();
    swift_release();
    swift_release();
    a5(0);
    return swift_release();
  }
  else
  {
    sub_22D2A406C(a1, a2, a3, (uint64_t)sub_22D2A88B8, v12);
    return swift_release();
  }
}

uint64_t sub_22D2A88B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

void sub_22D2A88E4(unint64_t *a1)
{
  sub_22D2A2CD4(a1, v1);
}

unint64_t sub_22D2A88EC()
{
  unint64_t result = qword_268543EF0;
  if (!qword_268543EF0)
  {
    sub_22D2A7510(255, &qword_268543EE8, (uint64_t (*)(uint64_t))sub_22D05BF98, MEMORY[0x263EFDCD0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543EF0);
  }
  return result;
}

uint64_t sub_22D2A8974()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22D2A89AC(void *a1, uint64_t a2)
{
  sub_22D2A29C0(a1, a2, *(void *)(v2 + 16));
}

void sub_22D2A89B4(uint64_t a1, uint64_t a2)
{
  sub_22D0DA0D8(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

uint64_t sub_22D2A89BC()
{
  swift_release();
  swift_release();

  if (*(void *)(v0 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_22D2A8A1C()
{
  return sub_22D2A10E8(v0[2], (uint64_t)(v0 + 3), v0[11], v0[12]);
}

uint64_t sub_22D2A8A2C()
{
  return sub_22D2A13A8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

void sub_22D2A8A38()
{
  if (!qword_268543EF8)
  {
    sub_22D2A7B48(255, &qword_268543F00, (uint64_t)&type metadata for CatalogDownloadResult, MEMORY[0x263EFDCF0]);
    sub_22D2A8AC0();
    unint64_t v0 = sub_22D2BC4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543EF8);
    }
  }
}

unint64_t sub_22D2A8AC0()
{
  unint64_t result = qword_268543F08;
  if (!qword_268543F08)
  {
    sub_22D2A7B48(255, &qword_268543F00, (uint64_t)&type metadata for CatalogDownloadResult, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543F08);
  }
  return result;
}

uint64_t sub_22D2A8B3C()
{
  if (*(void *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D2A8B84()
{
  swift_release();

  if (*(void *)(v0 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  }
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

void sub_22D2A8BEC(void **a1)
{
  sub_22D2A2000(*a1, v1 + 16, *(void **)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_22D2A8C00(uint64_t *a1)
{
  return sub_22D2A64F8(a1, v1);
}

uint64_t sub_22D2A8C08()
{
  return sub_22D2A21A4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_22D2A8C14(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22D2A8C5C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22D2A8CA4(uint64_t a1, uint64_t a2)
{
  sub_22D2A7B48(0, (unint64_t *)&qword_268543948, (uint64_t)&type metadata for CatalogDownloadResult, MEMORY[0x263F8E848]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D2A8D2C()
{
  return sub_22D2A2624(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32), sub_22D2A26B0, (void (*)(uint64_t, uint64_t))sub_22D2A8EE4);
}

uint64_t sub_22D2A8D74(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_22D2A8DD0(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_22D2A8DD0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_22D2BD200();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_22D2A8E2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *, _UNKNOWN **))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for IssuerDirectoryDownloadTask, &off_26B70ACF0);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D2A8E88()
{
  return sub_22D2A07D8(*(void *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_22D2A8E94(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  char v3 = *(unsigned char *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  char v7 = v3;
  return v2(v6);
}

ValueMetadata *type metadata accessor for ClinicalSharingAuthorizations()
{
  return &type metadata for ClinicalSharingAuthorizations;
}

uint64_t sub_22D2A8F10(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22D2AA1D0();
  uint64_t v5 = v4;
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2AA2E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2AA614(0, &qword_26AEC2198, (uint64_t (*)(uint64_t))sub_22D2AA2E0, sub_22D2AA694, MEMORY[0x263EFDC10]);
  uint64_t v24 = v12;
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v24 - v13;
  sub_22D2AA6C8();
  uint64_t v25 = v15;
  uint64_t v27 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  sub_22D2AA504(0, &qword_26AEC1E88, MEMORY[0x263F07508]);
  sub_22D2AA26C();
  sub_22D2BCD80();
  *(void *)(swift_allocObject() + 16) = v2;
  id v18 = v2;
  sub_22D2BC5D0();
  sub_22D2AA3CC();
  sub_22D2AA854(&qword_26AEC1CF8, (void (*)(uint64_t))sub_22D2AA1D0);
  sub_22D2AA854(&qword_26AEC2110, (void (*)(uint64_t))sub_22D2AA3CC);
  sub_22D2BC880();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  sub_22D2AA694();
  uint64_t v19 = v28;
  sub_22D2BC800();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v19);
  sub_22D2AA778();
  uint64_t v20 = v24;
  sub_22D2BC780();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v20);
  sub_22D2AA854(&qword_26AEC2130, (void (*)(uint64_t))sub_22D2AA6C8);
  uint64_t v21 = v25;
  uint64_t v22 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v21);
  return v22;
}

uint64_t sub_22D2A93A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_22D2BBF00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_22D238984(),
        uint64_t v7 = sub_22D2BCB30(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_22D2AA854(&qword_26853DD50, MEMORY[0x263F44A78]);
      char v15 = sub_22D2BCB90();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_22D2A958C(uint64_t a1)
{
  uint64_t v12 = MEMORY[0x263F8EE88];
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v9 >= v5) {
      goto LABEL_25;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_25;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_25;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_25;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10)
          {
            int64_t v7 = v9 + 4;
            if (v9 + 4 >= v5) {
              goto LABEL_25;
            }
            uint64_t v10 = *(void *)(v1 + 8 * v7);
            if (!v10) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = sub_22D2A9714(v8);
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v5)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    return v12;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_25;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_22D2A9714(uint64_t a1)
{
  uint64_t v2 = sub_22D2BBF00();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  int64_t v9 = (char *)&v25 - v8;
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v25 - v11;
  int64_t v13 = 0;
  uint64_t v28 = a1;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v15 = a1 + 56;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 24);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v25 = v15;
  int64_t v26 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v27 = v3 + 16;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v25 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v25 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v25 + 8 * v13);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v19 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(void *)(v28 + 48) + *(void *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_22D231E4C((uint64_t)v9, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_22D2A99CC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_22D2388CC();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  int64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_22D2A93A8(a3, *(void *)(a2 + *(int *)(v7 + 56)));
  if (result)
  {
    uint64_t v11 = sub_22D2BBC90();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
    unint64_t v13 = *a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v13 = sub_22D2821E0(0, *(void *)(v13 + 16) + 1, 1, v13);
    }
    unint64_t v15 = *(void *)(v13 + 16);
    unint64_t v14 = *(void *)(v13 + 24);
    if (v15 >= v14 >> 1) {
      unint64_t v13 = sub_22D2821E0(v14 > 1, v15 + 1, 1, v13);
    }
    *(void *)(v13 + 16) = v15 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v13+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v15, v9, v11);
    *a1 = v13;
  }
  return result;
}

uint64_t sub_22D2A9B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22D2BBC90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  sub_22D2BBC40();
  id v7 = objc_allocWithZone(MEMORY[0x263F0A740]);
  uint64_t v8 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initForClinicalAccountIdentifier_, v8);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A738]), sel_initWithHealthStore_recipientIdentifier_, a2, v9);
  uint64_t v11 = sub_22D2BD160();

  v15[1] = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_22D2AA478();
  sub_22D0D413C();
  sub_22D2AA854(&qword_26AEC2238, (void (*)(uint64_t))sub_22D2AA478);
  sub_22D2BC780();
  swift_release();
  return swift_release();
}

uint64_t sub_22D2A9DB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  sub_22D0D413C();
  uint64_t v7 = *(int *)(v6 + 48);
  uint64_t v8 = sub_22D2BBC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a3, a2, v8);
  *(void *)(a3 + v7) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22D2A9E44@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_22D0D413C();
  uint64_t v49 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v44 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = *a1;
  unint64_t v15 = sub_22D0D30B4(MEMORY[0x263F8EE78]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v14 + 16);
  if (v17)
  {
    unint64_t v53 = v15;
    uint64_t v44 = v14;
    id v45 = a2;
    uint64_t v18 = v14 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v46 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    uint64_t v47 = v13;
    uint64_t v48 = v8;
    uint64_t v52 = v11;
    while (1)
    {
      uint64_t v50 = v18;
      uint64_t v51 = v17;
      sub_22D2AA89C(v18, (uint64_t)v13);
      uint64_t v21 = v49;
      uint64_t v22 = *(int *)(v49 + 48);
      uint64_t v23 = sub_22D2BBC90();
      int64_t v24 = *(void **)(v23 - 8);
      uint64_t v25 = (void (*)(char *, char *, uint64_t))v24[2];
      v25(v11, v13, v23);
      uint64_t v26 = *(void *)&v13[v22];
      *(void *)&v11[v22] = v26;
      uint64_t v27 = *(int *)(v21 + 48);
      v25(v8, v13, v23);
      *(void *)&v8[v27] = v26;
      swift_bridgeObjectRetain();
      uint64_t v28 = (void *)v53;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v54 = v28;
      unint64_t v31 = sub_22D04EA20((uint64_t)v11);
      uint64_t v32 = v28[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        break;
      }
      char v35 = v30;
      if (v28[3] >= v34)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_22D056530();
        }
      }
      else
      {
        sub_22D053050(v34, isUniquelyReferenced_nonNull_native);
        unint64_t v36 = sub_22D04EA20((uint64_t)v52);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_18;
        }
        unint64_t v31 = v36;
      }
      uint64_t v38 = v54;
      unint64_t v53 = (unint64_t)v54;
      if (v35)
      {
        uint64_t v19 = v54[7];
        swift_bridgeObjectRelease();
        *(void *)(v19 + 8 * v31) = v26;
      }
      else
      {
        v54[(v31 >> 6) + 8] |= 1 << v31;
        v25((char *)(v38[6] + v24[9] * v31), v52, v23);
        *(void *)(v38[7] + 8 * v31) = v26;
        uint64_t v39 = v38[2];
        BOOL v40 = __OFADD__(v39, 1);
        uint64_t v41 = v39 + 1;
        if (v40) {
          goto LABEL_17;
        }
        void v38[2] = v41;
      }
      swift_bridgeObjectRelease();
      unint64_t v20 = (void (*)(char *, uint64_t))v24[1];
      uint64_t v11 = v52;
      v20(v52, v23);
      uint64_t v8 = v48;
      v20(v48, v23);
      uint64_t v13 = v47;
      sub_22D2AA900((uint64_t)v47);
      uint64_t v18 = v50 + v46;
      uint64_t v17 = v51 - 1;
      if (v51 == 1)
      {
        swift_bridgeObjectRelease();
        a2 = v45;
        uint64_t v16 = v53;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    uint64_t result = sub_22D2BD6A0();
    __break(1u);
  }
  else
  {
LABEL_15:
    uint64_t v42 = sub_22D01FA60(v16);
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v42;
  }
  return result;
}

void sub_22D2AA1D0()
{
  if (!qword_26AEC1D00)
  {
    sub_22D2AA504(255, &qword_26AEC1E88, MEMORY[0x263F07508]);
    sub_22D2AA26C();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1D00);
    }
  }
}

unint64_t sub_22D2AA26C()
{
  unint64_t result = qword_26AEC1E90;
  if (!qword_26AEC1E90)
  {
    sub_22D2AA504(255, &qword_26AEC1E88, MEMORY[0x263F07508]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC1E90);
  }
  return result;
}

void sub_22D2AA2E0()
{
  if (!qword_26AEC21F8)
  {
    sub_22D2AA3CC();
    sub_22D2AA558();
    sub_22D2AA854(&qword_26AEC2110, (void (*)(uint64_t))sub_22D2AA3CC);
    sub_22D2AA854(&qword_26AEC1C78, (void (*)(uint64_t))sub_22D2AA558);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC21F8);
    }
  }
}

void sub_22D2AA3CC()
{
  if (!qword_26AEC2118)
  {
    sub_22D2AA478();
    sub_22D0D413C();
    sub_22D2AA854(&qword_26AEC2238, (void (*)(uint64_t))sub_22D2AA478);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2118);
    }
  }
}

void sub_22D2AA478()
{
  if (!qword_26AEC2240)
  {
    sub_22D2AA504(255, &qword_26AEC2268, MEMORY[0x263F44A78]);
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC6E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2240);
    }
  }
}

void sub_22D2AA504(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BCE60();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_22D2AA558()
{
  if (!qword_26AEC1C80)
  {
    sub_22D2AA1D0();
    sub_22CFF49FC();
    sub_22D2AA854(&qword_26AEC1CF8, (void (*)(uint64_t))sub_22D2AA1D0);
    unint64_t v0 = sub_22D2BC430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1C80);
    }
  }
}

void sub_22D2AA614(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_22D2AA694()
{
  return sub_22D2AA854(&qword_26AEC21F0, (void (*)(uint64_t))sub_22D2AA2E0);
}

void sub_22D2AA6C8()
{
  if (!qword_26AEC2138)
  {
    sub_22D2AA614(255, &qword_26AEC2198, (uint64_t (*)(uint64_t))sub_22D2AA2E0, sub_22D2AA694, MEMORY[0x263EFDC10]);
    sub_22D2AA778();
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2138);
    }
  }
}

unint64_t sub_22D2AA778()
{
  unint64_t result = qword_26AEC2190;
  if (!qword_26AEC2190)
  {
    sub_22D2AA614(255, &qword_26AEC2198, (uint64_t (*)(uint64_t))sub_22D2AA2E0, sub_22D2AA694, MEMORY[0x263EFDC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AEC2190);
  }
  return result;
}

uint64_t sub_22D2AA814()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D2AA84C(uint64_t a1)
{
  return sub_22D2A9B74(a1, *(void *)(v1 + 16));
}

uint64_t sub_22D2AA854(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2AA89C(uint64_t a1, uint64_t a2)
{
  sub_22D0D413C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D2AA900(uint64_t a1)
{
  sub_22D0D413C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D2AA95C()
{
  uint64_t v1 = sub_22D2BBC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_22D2AA9EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_22D2BBC90() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_22D2A9DB4(a1, v6, a2);
}

ValueMetadata *type metadata accessor for ClinicalSharingFHIRResource()
{
  return &type metadata for ClinicalSharingFHIRResource;
}

uint64_t sub_22D2AAA7C()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656372756F736572;
      break;
    case 2:
      uint64_t result = 0x746E65746E6F63;
      break;
    case 3:
      uint64_t result = 1635018093;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22D2AAB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22D2AABF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22D2AAB28(uint64_t a1)
{
  unint64_t v2 = sub_22D2AB1C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22D2AAB64(uint64_t a1)
{
  unint64_t v2 = sub_22D2AB1C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_22D2AABA0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D2AAD9C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_22D2AABF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F736572 && a2 == 0xEC00000065707954 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_22D2BD660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1635018093 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_22D2BD660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_22D2AAD9C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_22D2AB168();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22D2AB1C4();
  sub_22D2BD7A0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return sub_22D0C9EB0(0, 1);
  }
  else
  {
    LOBYTE(v26) = 0;
    uint64_t v10 = sub_22D2BD540();
    uint64_t v12 = v11;
    uint64_t v25 = v10;
    LOBYTE(v26) = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_22D2BD540();
    uint64_t v15 = v14;
    uint64_t v23 = v13;
    sub_22D25ADB8();
    char v28 = 2;
    sub_22D2AB218();
    uint64_t v24 = v15;
    swift_bridgeObjectRetain();
    sub_22D2BD530();
    uint64_t v22 = a2;
    uint64_t v16 = v26;
    char v28 = 3;
    sub_22D2AB2DC();
    swift_bridgeObjectRetain();
    sub_22D2BD530();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v17 = v26;
    uint64_t v18 = v27;
    sub_22D0C9E9C(v26, v27);
    sub_22D0C9EB0(0, 1);
    swift_bridgeObjectRetain();
    uint64_t v19 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22D0C9E9C(v17, v18);
    sub_22D0C9EB0(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22D0C9EB0(v17, v18);
    uint64_t v21 = v22;
    uint64_t *v22 = v25;
    v21[1] = v12;
    void v21[2] = v23;
    v21[3] = v19;
    v21[4] = v16;
    v21[5] = v17;
    v21[6] = v18;
  }
  return result;
}

void sub_22D2AB168()
{
  if (!qword_268543F28)
  {
    sub_22D2AB1C4();
    unint64_t v0 = sub_22D2BD570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543F28);
    }
  }
}

unint64_t sub_22D2AB1C4()
{
  unint64_t result = qword_268543F30;
  if (!qword_268543F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543F30);
  }
  return result;
}

unint64_t sub_22D2AB218()
{
  unint64_t result = qword_268543F38;
  if (!qword_268543F38)
  {
    sub_22D25ADB8();
    sub_22D2AB288();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543F38);
  }
  return result;
}

unint64_t sub_22D2AB288()
{
  unint64_t result = qword_268543F40;
  if (!qword_268543F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543F40);
  }
  return result;
}

unint64_t sub_22D2AB2DC()
{
  unint64_t result = qword_268543F48;
  if (!qword_268543F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543F48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClinicalSharingFHIRResource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22D2AB3FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingFHIRResource.CodingKeys()
{
  return &type metadata for ClinicalSharingFHIRResource.CodingKeys;
}

unint64_t sub_22D2AB438()
{
  unint64_t result = qword_268543F50;
  if (!qword_268543F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543F50);
  }
  return result;
}

unint64_t sub_22D2AB490()
{
  unint64_t result = qword_268543F58;
  if (!qword_268543F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543F58);
  }
  return result;
}

unint64_t sub_22D2AB4E8()
{
  unint64_t result = qword_268543F60;
  if (!qword_268543F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543F60);
  }
  return result;
}

uint64_t *sub_22D2AB53C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v9 = (void *)a2[1];
    uint64_t v8 = a2[2];
    a1[1] = (uint64_t)v9;
    a1[2] = v8;
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_22D2BB6F0();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_retain();
    id v15 = v9;
    v14(v11, v12, v13);
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = (char *)v7 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    _OWORD v17[8] = v18[8];
  }
  return v7;
}

uint64_t sub_22D2AB658(uint64_t a1, uint64_t a2)
{
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_22D2BB6F0();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_22D2AB6D8(void *a1, void *a2, uint64_t a3)
{
  unsigned int v6 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22D2BB6F0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = (char *)a1 + v13;
  id v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  return a1;
}

void *sub_22D2AB7A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  unsigned int v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  a1[2] = a2[2];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = (char *)a1 + v13;
  id v15 = (char *)a2 + v13;
  char v16 = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v16;
  return a1;
}

uint64_t sub_22D2AB87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  return a1;
}

void *sub_22D2AB92C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = (void *)a1[1];
  a1[1] = a2[1];

  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22D2BB6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

uint64_t sub_22D2AB9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22D2ABA08);
}

uint64_t sub_22D2ABA08(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22D2BB6F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_22D2ABAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22D2ABACC);
}

void *sub_22D2ABACC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22D2BB6F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingMedicationDoseEventQuery()
{
  uint64_t result = qword_268543F68;
  if (!qword_268543F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22D2ABBC0()
{
  uint64_t result = sub_22D2BB6F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22D2ABC80(unint64_t a1, void (*a2)(id *), uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v35 = sub_22D2BBC30();
  uint64_t v32 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (void *)MEMORY[0x263F8EE80];
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      unint64_t v34 = a1 & 0xC000000000000001;
      char v30 = (uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
      uint64_t v31 = v32 + 32;
      uint64_t v9 = (void *)MEMORY[0x263F8EE80];
      uint64_t v10 = 4;
      long long v29 = xmmword_22D2BFBE0;
      uint64_t v33 = v8;
      while (1)
      {
        if (v34) {
          id v13 = (id)MEMORY[0x230F7AF90](v10 - 4, a1);
        }
        else {
          id v13 = *(id *)(a1 + 8 * v10);
        }
        uint64_t v14 = v13;
        if (__OFADD__(v10 - 4, 1))
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        id v40 = v13;
        v36(&v40);
        if (v4)
        {
          swift_release();
          swift_bridgeObjectRelease();

          return (uint64_t)v9;
        }
        uint64_t v38 = v10 - 3;
        unint64_t v15 = a1;
        uint64_t v4 = (uint64_t)v7;
        a1 = sub_22D04EE70((uint64_t)v7);
        uint64_t v17 = v9[2];
        BOOL v18 = (v16 & 1) == 0;
        uint64_t v19 = v17 + v18;
        if (__OFADD__(v17, v18)) {
          goto LABEL_23;
        }
        char v20 = v16;
        if (v9[3] < v19)
        {
          sub_22D053488(v19, 1);
          uint64_t v9 = v41;
          unint64_t v21 = sub_22D04EE70(v4);
          if ((v20 & 1) != (v22 & 1))
          {
            uint64_t result = sub_22D2BD6A0();
            __break(1u);
            return result;
          }
          a1 = v21;
        }
        if (v20)
        {
          uint64_t v7 = (char *)v4;
          uint64_t v11 = (*v30)(v4, v35);
          uint64_t v9 = v41;
          uint64_t v12 = (void *)(v41[7] + 8 * a1);
          MEMORY[0x230F7AA40](v11);
          if (*(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_22D2BCE30();
          }
          sub_22D2BCE50();
          sub_22D2BCE20();
        }
        else
        {
          sub_22CFF4B64();
          uint64_t v23 = swift_allocObject();
          *(_OWORD *)(v23 + 16) = v29;
          *(void *)(v23 + 32) = v14;
          uint64_t v39 = v23;
          sub_22D2BCE20();
          uint64_t v24 = v39;
          v9[(a1 >> 6) + 8] |= 1 << a1;
          uint64_t v7 = (char *)v4;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32))(v9[6] + *(void *)(v32 + 72) * a1, v4, v35);
          *(void *)(v9[7] + 8 * a1) = v24;
          uint64_t v25 = v9[2];
          BOOL v26 = __OFADD__(v25, 1);
          uint64_t v27 = v25 + 1;
          if (v26) {
            goto LABEL_24;
          }
          v9[2] = v27;
        }
        a1 = v15;
        uint64_t v4 = 0;
        ++v10;
        if (v38 == v33)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v9;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE80];
}

uint64_t sub_22D2AC010()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ClinicalSharingMedicationDoseEventQuery();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v50 = *(void *)(v51 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v48 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (uint64_t (*)(void))sub_22D2BCFB0();
  uint64_t v47 = (uint64_t (*)())*((void *)v46 - 1);
  MEMORY[0x270FA5388](v46);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2AED6C();
  uint64_t v55 = v6;
  uint64_t v57 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v52 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2AEE30();
  uint64_t v58 = v8;
  uint64_t v60 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v54 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2AEF8C();
  uint64_t v59 = v10;
  uint64_t v61 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v56 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22D2BBC30();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = self;
  sub_22D2BB6C0();
  uint64_t v17 = (void *)sub_22D2BBBC0();
  BOOL v18 = *(void (**)(char *, uint64_t))(v13 + 8);
  v18(v15, v12);
  sub_22D2BB690();
  uint64_t v19 = (void *)sub_22D2BBBC0();
  v18(v15, v12);
  id v20 = objc_msgSend(v16, sel_predicateForSamplesWithStartDate_endDate_options_, v17, v19, 0);
  id v53 = v20;

  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v1[1], v20);
  uint64_t v22 = (uint64_t)v1;
  sub_22CFF4B00(*v1 + 16, (uint64_t)v63);
  __swift_project_boxed_opaque_existential_1(v63, v63[3]);
  sub_22CFF4B64();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_22D2BFBE0;
  *(void *)(v23 + 32) = v21;
  uint64_t v62 = v23;
  sub_22D2BCE20();
  id v49 = v21;
  sub_22D090418();
  sub_22D2BCFE0();
  sub_22D2AFB30(&qword_26853DEB8, MEMORY[0x263F44AE8]);
  uint64_t v24 = v46;
  uint64_t v25 = sub_22D2BC720();
  (*((void (**)(char *, uint64_t (*)(void)))v47 + 1))(v5, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = v25;
  uint64_t v45 = v22;
  uint64_t v26 = v48;
  uint64_t v47 = type metadata accessor for ClinicalSharingMedicationDoseEventQuery;
  sub_22D2B0728(v22, v48, (uint64_t (*)(void))type metadata accessor for ClinicalSharingMedicationDoseEventQuery);
  uint64_t v27 = *(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = ((v27 + 16) & ~v27) + v50;
  uint64_t v28 = (v27 + 16) & ~v27;
  uint64_t v42 = v28;
  uint64_t v50 = v27 | 7;
  uint64_t v29 = swift_allocObject();
  uint64_t v46 = (uint64_t (*)(void))type metadata accessor for ClinicalSharingMedicationDoseEventQuery;
  sub_22D2B0084(v26, v29 + v28, (uint64_t (*)(void))type metadata accessor for ClinicalSharingMedicationDoseEventQuery);
  sub_22CFF491C();
  sub_22D056DB0(0, &qword_26853E380, &qword_26853E388);
  uint64_t v44 = MEMORY[0x263EFDCF8];
  sub_22D2AFB30(&qword_26853D780, (void (*)(uint64_t))sub_22CFF491C);
  char v30 = v52;
  sub_22D2BC730();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  sub_22D2B0728(v22, v26, (uint64_t (*)(void))type metadata accessor for ClinicalSharingMedicationDoseEventQuery);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v42;
  sub_22D2B0084(v26, v31 + v42, (uint64_t (*)(void))type metadata accessor for ClinicalSharingMedicationDoseEventQuery);
  sub_22D2BC5D0();
  type metadata accessor for PBTypedData(0);
  sub_22D2AEF1C();
  uint64_t v51 = MEMORY[0x263EFDA38];
  sub_22D2AFB30(&qword_268543F88, (void (*)(uint64_t))sub_22D2AED6C);
  sub_22D2AFB30((unint64_t *)&qword_268543118, (void (*)(uint64_t))sub_22D2AEF1C);
  uint64_t v33 = v54;
  uint64_t v34 = v55;
  sub_22D2BC830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v30, v34);
  sub_22D2B0728(v45, v26, (uint64_t (*)(void))v47);
  uint64_t v35 = swift_allocObject();
  sub_22D2B0084(v26, v35 + v32, v46);
  type metadata accessor for ClinicalSharingQueryOutput(0);
  sub_22D2AFB30(&qword_268543F98, (void (*)(uint64_t))sub_22D2AEE30);
  unint64_t v36 = v56;
  uint64_t v37 = v58;
  sub_22D2BC730();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v37);
  sub_22D2AFB30(&qword_268543FA0, (void (*)(uint64_t))sub_22D2AEF8C);
  uint64_t v38 = v59;
  uint64_t v39 = sub_22D2BC720();

  (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v38);
  return v39;
}

uint64_t sub_22D2AC90C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22D0A9674(*a1);
  if (result)
  {
    *a2 = result;
  }
  else
  {
    uint64_t result = sub_22D2BD460();
    __break(1u);
  }
  return result;
}

uint64_t sub_22D2AC990@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  id v49 = a2;
  uint64_t v3 = type metadata accessor for PBTypedData(0);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v52 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v50 = (uint64_t)&v41 - v6;
  sub_22D2AF7B0();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2AF94C();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v44 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2AF860(0, &qword_26853DED0, type metadata accessor for PBTypedData, MEMORY[0x263F8D8F0]);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  BOOL v18 = (char *)&v41 - v17;
  MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v41 - v19;
  unint64_t v21 = *a1;
  sub_22D2ACF94(*a1, (uint64_t)&v41 - v19);
  unint64_t v22 = sub_22D282270(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v24 = *(void *)(v22 + 16);
  unint64_t v23 = *(void *)(v22 + 24);
  if (v24 >= v23 >> 1) {
    unint64_t v22 = sub_22D282270(v23 > 1, v24 + 1, 1, v22);
  }
  *(void *)(v22 + 16) = v24 + 1;
  unint64_t v42 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v25 = *(void *)(v12 + 72);
  sub_22D2AFA08((uint64_t)v20, v22 + v42 + v25 * v24);
  unint64_t v54 = v22;
  uint64_t v26 = sub_22D2AD3E0(v21);
  sub_22D23EDD8(v26);
  uint64_t v27 = *(void *)(v54 + 16);
  if (v27)
  {
    uint64_t v28 = v54 + v42;
    uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    unint64_t v42 = v54;
    swift_bridgeObjectRetain();
    unint64_t v30 = MEMORY[0x263F8EE78];
    uint64_t v31 = v3;
    do
    {
      sub_22D2AFA9C(v28, (uint64_t)v18);
      sub_22D2AFA08((uint64_t)v18, (uint64_t)v15);
      if ((*v29)(v15, 1, v3) == 1)
      {
        sub_22D2B07F0((uint64_t)v15, &qword_26853DED0, type metadata accessor for PBTypedData);
      }
      else
      {
        uint64_t v32 = v50;
        sub_22D2B0084((uint64_t)v15, v50, type metadata accessor for PBTypedData);
        sub_22D2B0084(v32, v52, type metadata accessor for PBTypedData);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v30 = sub_22D282228(0, *(void *)(v30 + 16) + 1, 1, v30);
        }
        unint64_t v34 = *(void *)(v30 + 16);
        unint64_t v33 = *(void *)(v30 + 24);
        if (v34 >= v33 >> 1) {
          unint64_t v30 = sub_22D282228(v33 > 1, v34 + 1, 1, v30);
        }
        *(void *)(v30 + 16) = v34 + 1;
        sub_22D2B0084(v52, v30+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v34, type metadata accessor for PBTypedData);
        uint64_t v3 = v31;
      }
      v28 += v25;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v30 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  unint64_t v53 = v30;
  sub_22D2AF860(0, &qword_268543FB0, type metadata accessor for PBTypedData, MEMORY[0x263F8D488]);
  sub_22D2AF8C4();
  uint64_t v35 = v43;
  sub_22D2BCD80();
  swift_bridgeObjectRelease();
  sub_22CFF49FC();
  unint64_t v36 = v44;
  uint64_t v37 = v46;
  sub_22D2BC540();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v37);
  sub_22D2AFB30(&qword_268543FC8, (void (*)(uint64_t))sub_22D2AF94C);
  uint64_t v38 = v48;
  uint64_t v39 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v36, v38);
  uint64_t *v49 = v39;
  return result;
}

uint64_t sub_22D2ACF94@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22D2AF860(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = v29 - v6 + 16;
  uint64_t v8 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v11 = type metadata accessor for PBMedicationTrackingDoseEvents(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (uint64_t *)(v29 - v16 + 16);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_22D2BD470();
    uint64_t v15 = swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    MEMORY[0x270FA5388](v15);
    *(&v28 - 2) = v2;
    uint64_t v18 = sub_22D29CBA8((void (*)(id *))sub_22D2B0708, (uint64_t)(&v28 - 4), a1, (uint64_t)v29);
    sub_22D2BBFE0();
    uint64_t *v17 = v18;
    sub_22D2BBFE0();
    uint64_t v19 = type metadata accessor for PBTypedData(0);
    uint64_t v20 = *(int *)(v19 + 20);
    if (qword_26853CCD0 != -1) {
      swift_once();
    }
    *(void *)(a2 + v20) = qword_26853D990;
    uint64_t v21 = sub_22D2BB6F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v7, 1, 1, v21);
    swift_retain();
    sub_22D22BA04(5, 1, v7);
    sub_22D2B07F0((uint64_t)v7, &qword_26853D7A0, MEMORY[0x263F062D0]);
    PBTypedData.dateRange.setter((uint64_t)v10);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v22 = swift_retain();
      *(void *)(a2 + v20) = sub_22D0040E0(v22);
      swift_release();
    }
    uint64_t v23 = *(void *)(a2 + v20);
    swift_beginAccess();
    *(void *)(v23 + 16) = 128;
    *(unsigned char *)(v23 + 24) = 1;
    sub_22D2B0728((uint64_t)v17, (uint64_t)v14, type metadata accessor for PBMedicationTrackingDoseEvents);
    PBTypedData.medicationTrackingDoseEvents.setter((uint64_t)v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a2, 0, 1, v19);
    return sub_22D2B0790((uint64_t)v17, type metadata accessor for PBMedicationTrackingDoseEvents);
  }
  uint64_t v26 = type metadata accessor for PBTypedData(0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  return v27(a2, 1, 1, v26);
}

uint64_t sub_22D2AD3E0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_22D2BD470();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
LABEL_3:
      uint64_t v3 = (void *)MEMORY[0x263F8EE80];
      unint64_t v36 = (void *)MEMORY[0x263F8EE80];
      unint64_t v33 = v1 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v7 = i - 4;
        if (v33)
        {
          id v8 = (id)MEMORY[0x230F7AF90](i - 4, v1);
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_21;
          }
        }
        else
        {
          id v8 = *(id *)(v1 + 8 * i);
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        uint64_t v34 = v9;
        unint64_t v10 = v1;
        id v11 = v8;
        id v12 = objc_msgSend(v8, sel_medicationIdentifier);
        sub_22D2BCBD0();
        unint64_t v1 = v13;

        sub_22D2BCBD0();
        sub_22D06014C();
        uint64_t v14 = sub_22D2BD240();
        uint64_t v16 = v15;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v18 = sub_22D04EB7C(v14, v16);
        uint64_t v19 = v3[2];
        BOOL v20 = (v17 & 1) == 0;
        uint64_t v21 = v19 + v20;
        if (__OFADD__(v19, v20)) {
          goto LABEL_22;
        }
        unint64_t v1 = v17;
        if (v3[3] < v21)
        {
          sub_22D053470(v21, 1);
          uint64_t v3 = v36;
          unint64_t v22 = sub_22D04EB7C(v14, v16);
          if ((v1 & 1) != (v23 & 1))
          {
            uint64_t result = sub_22D2BD6A0();
            __break(1u);
            return result;
          }
          unint64_t v18 = v22;
        }
        if (v1)
        {
          uint64_t v5 = swift_bridgeObjectRelease();
          uint64_t v6 = (void *)(v3[7] + 8 * v18);
          MEMORY[0x230F7AA40](v5);
          if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_22D2BCE30();
          }
          sub_22D2BCE50();
          sub_22D2BCE20();
        }
        else
        {
          sub_22CFF4B64();
          uint64_t v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = xmmword_22D2BFBE0;
          *(void *)(v24 + 32) = v11;
          uint64_t v35 = v24;
          sub_22D2BCE20();
          v3[(v18 >> 6) + 8] |= 1 << v18;
          uint64_t v25 = (uint64_t *)(v3[6] + 16 * v18);
          uint64_t *v25 = v14;
          v25[1] = v16;
          *(void *)(v3[7] + 8 * v18) = v35;
          uint64_t v26 = v3[2];
          BOOL v27 = __OFADD__(v26, 1);
          uint64_t v28 = v26 + 1;
          if (v27) {
            goto LABEL_23;
          }
          v3[2] = v28;
        }
        unint64_t v1 = v10;
        if (v34 == v2)
        {
          uint64_t v29 = swift_bridgeObjectRelease();
          MEMORY[0x270FA5388](v29);
          uint64_t v30 = sub_22D2AFB9C((uint64_t)v3, (void (*)(uint64_t, uint64_t, uint64_t))sub_22D2AFB78);
          swift_release();
          uint64_t v31 = sub_22D2481D4(v30);
          swift_bridgeObjectRelease();
          return v31;
        }
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_22D2AD784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_22D2BBF00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(*(void *)v2 + 56);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F44A70], v5);
  unint64_t v17 = v8;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_22D22E468(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_22D05C90C, (uint64_t)v16, v9);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  if (*(void *)(v10 + 16))
  {
    sub_22D2B0728(a1, a2, type metadata accessor for PBTypedData);
    uint64_t v11 = sub_22D237C78(v10);
    swift_bridgeObjectRelease();
    uint64_t Output = type metadata accessor for ClinicalSharingQueryOutput(0);
    *(void *)(a2 + *(int *)(Output + 20)) = v11;
    unint64_t v13 = (void *)(a2 + *(int *)(Output + 24));
    void *v13 = 0;
    v13[1] = 0;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a2, 0, 1, Output);
  }
  else
  {
    uint64_t v15 = type metadata accessor for ClinicalSharingQueryOutput(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22D2AD9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v46 = a2;
  sub_22D2AF860(0, &qword_26853D7A0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v42[-v9];
  uint64_t v11 = type metadata accessor for PBDateRange(0);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for PBHistogramSeries(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  BOOL v20 = (uint64_t *)&v42[-v19];
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_22D2BD470();
    uint64_t v18 = swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v44 = v13;
    uint64_t v45 = v17;
    MEMORY[0x270FA5388](v18);
    *(void *)&v42[-16] = v4;
    unint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_22D2ABC80(v21, (void (*)(id *))sub_22D2AFFD0, (uint64_t)&v42[-32]);
    uint64_t *v20 = MEMORY[0x263F8EE78];
    v20[1] = 0;
    v20[2] = 0xE000000000000000;
    uint64_t v23 = sub_22D2BBFE0();
    MEMORY[0x270FA5388](v23);
    *(void *)&v42[-32] = v4;
    *(void *)&v42[-24] = a1;
    *(void *)&v42[-16] = v46;
    uint64_t v24 = sub_22D2AF0C0(v22, (void (*)(uint64_t, void))sub_22D2AFFEC, (uint64_t)&v42[-48]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t *v20 = v24;
    sub_22D2BBFE0();
    uint64_t v46 = type metadata accessor for PBTypedData(0);
    uint64_t v25 = *(int *)(v46 + 20);
    if (qword_26853CCD0 != -1) {
      swift_once();
    }
    *(void *)(a4 + v25) = qword_26853D990;
    uint64_t v26 = type metadata accessor for ClinicalSharingMedicationDoseEventQuery();
    uint64_t v27 = *(int *)(v26 + 28);
    uint64_t v28 = (uint64_t *)(v4 + *(int *)(v26 + 32));
    uint64_t v29 = *v28;
    unsigned int v43 = *((unsigned __int8 *)v28 + 8);
    uint64_t v30 = v4 + v27;
    uint64_t v31 = sub_22D2BB6F0();
    uint64_t v32 = a4;
    uint64_t v33 = *(void *)(v31 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v33 + 16))(v10, v30, v31);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v10, 0, 1, v31);
    swift_retain();
    uint64_t v34 = (uint64_t)v44;
    sub_22D22BA04(v29, v43, v10);
    sub_22D2B07F0((uint64_t)v10, &qword_26853D7A0, MEMORY[0x263F062D0]);
    PBTypedData.dateRange.setter(v34);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for PBTypedData._StorageClass(0);
      swift_allocObject();
      uint64_t v35 = swift_retain();
      *(void *)(v32 + v25) = sub_22D0040E0(v35);
      swift_release();
    }
    uint64_t v36 = *(void *)(v32 + v25);
    swift_beginAccess();
    *(void *)(v36 + 16) = 128;
    *(unsigned char *)(v36 + 24) = 1;
    uint64_t v37 = (uint64_t)v45;
    sub_22D2B0728((uint64_t)v20, (uint64_t)v45, type metadata accessor for PBHistogramSeries);
    PBTypedData.histogramSeries.setter(v37);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v46 - 8) + 56))(v32, 0, 1);
    return sub_22D2B0790((uint64_t)v20, type metadata accessor for PBHistogramSeries);
  }
  uint64_t v40 = type metadata accessor for PBTypedData(0);
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  return v41(a4, 1, 1, v40);
}

uint64_t sub_22D2ADEE4@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_22D2BBC30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22D2BBE00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, *a2 + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_gregorianCalendar, v10);
  id v15 = objc_msgSend(v14, sel_startDate);
  sub_22D2BBC00();

  uint64_t v16 = (char *)a2 + *(int *)(type metadata accessor for ClinicalSharingMedicationDoseEventQuery() + 32);
  if (v16[8] == 1 && (uint64_t v17 = *(void *)v16, ((1 << v17) & 0x67) == 0))
  {
    if (v17 == 3) {
      sub_22D0B2984(0, (uint64_t)v9, a3);
    }
    else {
      sub_22D0B307C((uint64_t)v9, a3);
    }
  }
  else
  {
    sub_22D2BBCE0();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_22D2AE12C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  unint64_t v54 = a5;
  uint64_t v55 = a3;
  uint64_t v53 = a1;
  uint64_t v7 = type metadata accessor for PBBucket(0);
  uint64_t v52 = *(char **)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v50 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v15 = (char *)&v50 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v50 - v17;
  MEMORY[0x270FA5388](v16);
  BOOL v20 = (uint64_t *)((char *)&v50 - v19);
  unint64_t v21 = swift_bridgeObjectRetain();
  unint64_t v22 = 0;
  unint64_t v23 = sub_22D2B00EC(v21);
  swift_bridgeObjectRelease();
  v20[1] = 0;
  sub_22D2BBFE0();
  uint64_t v24 = (uint64_t)v20;
  void *v20 = 0;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_22D2BD470();
    swift_bridgeObjectRelease_n();
    if (v25 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  if (v25 > 0x7FFFFFFF)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(_DWORD *)(v24 + 16) = v25;
  unint64_t v26 = swift_bridgeObjectRetain();
  unint64_t v27 = sub_22D2B027C(v26);
  swift_bridgeObjectRelease();
  *((void *)v18 + 1) = 0;
  sub_22D2BBFE0();
  *(void *)uint64_t v18 = 0x3FF0000000000000;
  if (!(v27 >> 62))
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_22D2BD470();
  swift_bridgeObjectRelease_n();
  if (v28 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_23;
  }
LABEL_6:
  if (v28 > 0x7FFFFFFF)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *((_DWORD *)v18 + 4) = v28;
  unint64_t v29 = swift_bridgeObjectRetain();
  unint64_t v30 = sub_22D2B040C(v29);
  swift_bridgeObjectRelease();
  *((void *)v15 + 1) = 0;
  sub_22D2BBFE0();
  *(void *)id v15 = 0x4000000000000000;
  if (!(v30 >> 62))
  {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_22D2BD470();
  swift_bridgeObjectRelease_n();
  if (v31 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_26;
  }
LABEL_9:
  if (v31 > 0x7FFFFFFF)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  *((_DWORD *)v15 + 4) = v31;
  unint64_t v32 = swift_bridgeObjectRetain();
  unint64_t v22 = sub_22D2B059C(v32);
  swift_bridgeObjectRelease();
  *((void *)v12 + 1) = 0;
  sub_22D2BBFE0();
  *(void *)uint64_t v12 = 0x4008000000000000;
  if (!(v22 >> 62))
  {
    uint64_t v33 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_22D2BD470();
  swift_bridgeObjectRelease_n();
  if (v33 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_29;
  }
LABEL_12:
  if (v33 > 0x7FFFFFFF)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *((_DWORD *)v12 + 4) = v33;
  unint64_t v22 = (unint64_t)v56;
  *((void *)v56 + 1) = 0;
  swift_bridgeObjectRetain();
  sub_22D2BBFE0();
  *(void *)unint64_t v22 = 0x4010000000000000;
  if (!(a2 >> 62))
  {
    uint64_t v34 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_22D2BD470();
  swift_bridgeObjectRelease_n();
  if (v34 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_32;
  }
LABEL_15:
  if (v34 > 0x7FFFFFFF)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v51 = a4;
  *(_DWORD *)(v22 + 16) = v34;
  uint64_t v35 = v54;
  *unint64_t v54 = 0;
  v35[1] = 0xE000000000000000;
  id v35[3] = 0;
  v35[4] = 0xE000000000000000;
  type metadata accessor for PBHistogramSeries.Value(0);
  sub_22D2BBFE0();
  sub_22D2AF860(0, &qword_2685430D0, type metadata accessor for PBBucket, MEMORY[0x263F8E0F8]);
  uint64_t v36 = *((void *)v52 + 9);
  unint64_t v37 = (v52[80] + 32) & ~(unint64_t)v52[80];
  uint64_t v38 = 4 * v36;
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_22D2BFF30;
  uint64_t v40 = v39 + v37;
  uint64_t v50 = v24;
  sub_22D2B0728(v24, v40, type metadata accessor for PBBucket);
  sub_22D2B0728((uint64_t)v18, v40 + v36, type metadata accessor for PBBucket);
  uint64_t v52 = v15;
  sub_22D2B0728((uint64_t)v15, v40 + 2 * v36, type metadata accessor for PBBucket);
  uint64_t v41 = 3 * v36;
  uint64_t v24 = (uint64_t)v35;
  uint64_t v33 = (uint64_t)v56;
  sub_22D2B0728((uint64_t)v12, v40 + v41, type metadata accessor for PBBucket);
  sub_22D2B0728(v33, v40 + v38, type metadata accessor for PBBucket);
  void v35[2] = v39;
  if (qword_26853D3D0 != -1) {
LABEL_33:
  }
    swift_once();
  unint64_t v42 = (void *)qword_268568488;
  unsigned int v43 = (void *)sub_22D2BBBC0();
  id v44 = objc_msgSend(v42, sel_stringFromDate_, v43);

  uint64_t v45 = sub_22D2BCBD0();
  uint64_t v47 = v46;

  sub_22D2B0790(v33, type metadata accessor for PBBucket);
  sub_22D2B0790((uint64_t)v12, type metadata accessor for PBBucket);
  sub_22D2B0790((uint64_t)v52, type metadata accessor for PBBucket);
  sub_22D2B0790((uint64_t)v18, type metadata accessor for PBBucket);
  sub_22D2B0790(v50, type metadata accessor for PBBucket);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v24 = v45;
  *(void *)(v24 + 8) = v47;
  uint64_t v48 = v51;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v24 + 24) = v55;
  *(void *)(v24 + 32) = v48;
  return result;
}

uint64_t sub_22D2AE798@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v56 = a2;
  sub_22D2AF860(0, &qword_26AEC0F48, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v63 = (char *)&v54 - v6;
  uint64_t v7 = sub_22D2BBC30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v55 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v54 - v11;
  uint64_t v13 = *a1;
  unint64_t v14 = 0xE000000000000000;
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 80) = 0xE000000000000000;
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = 0xE000000000000000;
  type metadata accessor for PBMedicationTrackingDoseEvent(0);
  sub_22D2BBFE0();
  id v15 = objc_msgSend(v13, sel_scheduleItemIdentifier);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_22D2BCBD0();
    unint64_t v14 = v18;
  }
  else
  {
    uint64_t v17 = 0;
  }
  *(void *)(a3 + 32) = v17;
  *(void *)(a3 + 40) = v14;
  id v19 = objc_msgSend(v13, sel_medicationIdentifier);
  uint64_t v20 = sub_22D2BCBD0();
  uint64_t v22 = v21;

  uint64_t v61 = v20;
  uint64_t v62 = v22;
  uint64_t v59 = sub_22D2BCBD0();
  uint64_t v60 = v23;
  uint64_t v57 = 124;
  unint64_t v58 = 0xE100000000000000;
  sub_22D06014C();
  uint64_t v24 = sub_22D2BD240();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(a3 + 48) = v24;
  *(void *)(a3 + 56) = v26;
  id v27 = objc_msgSend(v13, sel_scheduledDoseQuantity);
  if (!v27)
  {
    sub_22D030474(0, (unint64_t *)&qword_26AEC1F28);
    id v27 = (id)sub_22D2BD180();
  }
  int v28 = sub_22D2BD720();

  *(_DWORD *)(a3 + 64) = v28;
  id v29 = objc_msgSend(v13, sel_doseQuantity);
  if (!v29)
  {
    sub_22D030474(0, (unint64_t *)&qword_26AEC1F28);
    id v29 = (id)sub_22D2BD180();
  }
  int v30 = sub_22D2BD720();

  *(_DWORD *)(a3 + 68) = v30;
  uint64_t v31 = (char *)objc_msgSend(v13, sel_status);
  if ((unint64_t)(v31 - 1) >= 6) {
    unint64_t v32 = 0;
  }
  else {
    unint64_t v32 = v31;
  }
  *(void *)(a3 + 16) = v32;
  *(unsigned char *)(a3 + 24) = 1;
  id v33 = objc_msgSend(v13, sel_logOrigin);
  uint64_t v34 = v33 == (id)1;
  if (v33 == (id)2) {
    uint64_t v34 = 2;
  }
  *(void *)a3 = v34;
  *(unsigned char *)(a3 + 8) = 1;
  id v35 = objc_msgSend(v13, sel_startDate);
  sub_22D2BBC00();

  if (qword_26853D3D0 != -1) {
    swift_once();
  }
  uint64_t v36 = (void *)qword_268568488;
  unint64_t v37 = (void *)sub_22D2BBBC0();
  id v38 = objc_msgSend(v36, sel_stringFromDate_, v37);

  uint64_t v39 = sub_22D2BCBD0();
  uint64_t v41 = v40;

  unint64_t v54 = *(void (**)(char *, uint64_t))(v8 + 8);
  v54(v12, v7);
  swift_bridgeObjectRelease();
  *(void *)(a3 + 88) = v39;
  *(void *)(a3 + 96) = v41;
  id v42 = objc_msgSend(v13, sel_scheduledDate);
  if (v42)
  {
    unsigned int v43 = v42;
    sub_22D2BBC00();

    id v44 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v45 = (uint64_t)v63;
    v44(v63, v12, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v45, 1, v7) != 1)
    {
      uint64_t v46 = v55;
      v44(v55, (char *)v45, v7);
      id v47 = objc_retain(*(id *)(*v56
                              + OBJC_IVAR____TtC19HealthRecordsDaemon27ClinicalSharingQueryContext_isoDateFormatter));
      uint64_t v48 = (void *)sub_22D2BBBC0();
      id v49 = objc_msgSend(v47, sel_stringFromDate_, v48);

      uint64_t v50 = sub_22D2BCBD0();
      uint64_t v52 = v51;

      v54(v46, v7);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(a3 + 72) = v50;
      *(void *)(a3 + 80) = v52;
      return result;
    }
  }
  else
  {
    uint64_t v45 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v63, 1, 1, v7);
  }
  return sub_22D2B07F0(v45, &qword_26AEC0F48, MEMORY[0x263F07490]);
}

void sub_22D2AED6C()
{
  if (!qword_268543F78)
  {
    sub_22CFF491C();
    sub_22D056DB0(255, &qword_26853E380, &qword_26853E388);
    sub_22D2AFB30(&qword_26853D780, (void (*)(uint64_t))sub_22CFF491C);
    unint64_t v0 = sub_22D2BC3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543F78);
    }
  }
}

void sub_22D2AEE30()
{
  if (!qword_268543F80)
  {
    sub_22D2AEF1C();
    sub_22D2AED6C();
    sub_22D2AFB30((unint64_t *)&qword_268543118, (void (*)(uint64_t))sub_22D2AEF1C);
    sub_22D2AFB30(&qword_268543F88, (void (*)(uint64_t))sub_22D2AED6C);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543F80);
    }
  }
}

void sub_22D2AEF1C()
{
  if (!qword_268543100)
  {
    type metadata accessor for PBTypedData(255);
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543100);
    }
  }
}

void sub_22D2AEF8C()
{
  if (!qword_268543F90)
  {
    sub_22D2AEE30();
    type metadata accessor for ClinicalSharingQueryOutput(255);
    sub_22D2AFB30(&qword_268543F98, (void (*)(uint64_t))sub_22D2AEE30);
    unint64_t v0 = sub_22D2BC3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543F90);
    }
  }
}

uint64_t sub_22D2AF038(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_22D2AF0C0(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3)
{
  unint64_t v54 = a2;
  uint64_t v55 = a3;
  sub_22D2AFFF8();
  uint64_t v53 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v52 = (uint64_t)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)v42 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v50 = (char *)v42 - v10;
  uint64_t v11 = type metadata accessor for PBHistogramSeries.Value(0);
  uint64_t v49 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (!v14) {
    return v15;
  }
  v42[1] = v3;
  uint64_t v59 = MEMORY[0x263F8EE78];
  sub_22D24BE64(0, v14, 0);
  uint64_t result = sub_22D2AF038(a1);
  uint64_t v18 = result;
  uint64_t v19 = 0;
  uint64_t v20 = a1 + 64;
  uint64_t v43 = a1 + 80;
  int64_t v44 = v14;
  id v47 = v13;
  uint64_t v48 = a1;
  uint64_t v45 = v17;
  uint64_t v46 = a1 + 64;
  uint64_t v21 = v53;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v24 = (unint64_t)v18 >> 6;
    if ((*(void *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_26;
    }
    uint64_t v56 = v19;
    uint64_t v57 = 1 << v18;
    uint64_t v58 = *(int *)(v21 + 48);
    uint64_t v25 = *(void *)(a1 + 48);
    uint64_t v26 = sub_22D2BBC30();
    uint64_t v27 = *(void *)(v26 - 8);
    int v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    uint64_t v29 = (uint64_t)v50;
    v28(v50, v25 + *(void *)(v27 + 72) * v18, v26);
    uint64_t v30 = *(void *)(*(void *)(a1 + 56) + 8 * v18);
    *(void *)(v29 + v58) = v30;
    uint64_t v31 = v51;
    v28(v51, v29, v26);
    uint64_t v32 = (uint64_t)v47;
    *(void *)&v31[*(int *)(v21 + 48)] = v30;
    uint64_t v33 = (uint64_t)v31;
    uint64_t v34 = v52;
    sub_22D2B0084(v33, v52, (uint64_t (*)(void))sub_22D2AFFF8);
    swift_bridgeObjectRetain_n();
    sub_22D2B0790(v29, (uint64_t (*)(void))sub_22D2AFFF8);
    v54(v34, *(void *)(v34 + *(int *)(v21 + 48)));
    sub_22D2B0790(v34, (uint64_t (*)(void))sub_22D2AFFF8);
    uint64_t v15 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22D24BE64(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = v59;
    }
    unint64_t v36 = *(void *)(v15 + 16);
    unint64_t v35 = *(void *)(v15 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_22D24BE64(v35 > 1, v36 + 1, 1);
      uint64_t v15 = v59;
    }
    *(void *)(v15 + 16) = v36 + 1;
    uint64_t result = sub_22D2B0084(v32, v15+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v36, type metadata accessor for PBHistogramSeries.Value);
    a1 = v48;
    int64_t v22 = 1 << *(unsigned char *)(v48 + 32);
    if (v18 >= v22) {
      goto LABEL_27;
    }
    uint64_t v20 = v46;
    uint64_t v37 = *(void *)(v46 + 8 * v24);
    if ((v37 & v57) == 0) {
      goto LABEL_28;
    }
    LODWORD(v17) = v45;
    if (*(_DWORD *)(v48 + 36) != v45) {
      goto LABEL_29;
    }
    unint64_t v38 = v37 & (-2 << (v18 & 0x3F));
    if (v38)
    {
      int64_t v22 = __clz(__rbit64(v38)) | v18 & 0xFFFFFFFFFFFFFFC0;
      int64_t v23 = v44;
    }
    else
    {
      unint64_t v39 = v24 + 1;
      unint64_t v40 = (unint64_t)(v22 + 63) >> 6;
      int64_t v23 = v44;
      if (v24 + 1 < v40)
      {
        unint64_t v41 = *(void *)(v46 + 8 * v39);
        if (v41)
        {
LABEL_22:
          int64_t v22 = __clz(__rbit64(v41)) + (v39 << 6);
        }
        else
        {
          while (v40 - 2 != v24)
          {
            unint64_t v41 = *(void *)(v43 + 8 * v24++);
            if (v41)
            {
              unint64_t v39 = v24 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v19 = v56 + 1;
    uint64_t v18 = v22;
    if (v56 + 1 == v23) {
      return v15;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_22D2AF538@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for ClinicalSharingMedicationDoseEventQuery();
  return sub_22D2AC90C(a1, a2);
}

uint64_t sub_22D2AF5BC@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for ClinicalSharingMedicationDoseEventQuery();
  return sub_22D2AC990(a1, a2);
}

uint64_t objectdestroyTm_15()
{
  unint64_t v1 = (int *)(type metadata accessor for ClinicalSharingMedicationDoseEventQuery() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();

  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = sub_22D2BB6F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22D2AF73C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D2AD784(a1, a2);
}

void sub_22D2AF7B0()
{
  if (!qword_268543FA8)
  {
    sub_22D2AF860(255, &qword_268543FB0, type metadata accessor for PBTypedData, MEMORY[0x263F8D488]);
    sub_22D2AF8C4();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543FA8);
    }
  }
}

void sub_22D2AF860(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22D2AF8C4()
{
  unint64_t result = qword_268543FB8;
  if (!qword_268543FB8)
  {
    sub_22D2AF860(255, &qword_268543FB0, type metadata accessor for PBTypedData, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268543FB8);
  }
  return result;
}

void sub_22D2AF94C()
{
  if (!qword_268543FC0)
  {
    sub_22D2AF860(255, &qword_268543FB0, type metadata accessor for PBTypedData, MEMORY[0x263F8D488]);
    sub_22CFF49FC();
    sub_22D2AF8C4();
    unint64_t v0 = sub_22D2BC560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543FC0);
    }
  }
}

uint64_t sub_22D2AFA08(uint64_t a1, uint64_t a2)
{
  sub_22D2AF860(0, &qword_26853DED0, type metadata accessor for PBTypedData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D2AFA9C(uint64_t a1, uint64_t a2)
{
  sub_22D2AF860(0, &qword_26853DED0, type metadata accessor for PBTypedData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D2AFB30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2AFB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_22D2AD9A8(a1, a2, a3, a4);
}

uint64_t sub_22D2AFB9C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v39 = a2;
  sub_22D2AF860(0, &qword_26853DED0, type metadata accessor for PBTypedData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v32 - v4;
  uint64_t v6 = type metadata accessor for PBTypedData(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v35 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (uint64_t)&v32 - v10;
  uint64_t v34 = v9;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v37 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v38 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  unint64_t v36 = MEMORY[0x263F8EE78];
  if (!v14) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v17 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39(v21, v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*v15)(v5, 1, v6) == 1)
    {
      uint64_t result = sub_22D2B07F0((uint64_t)v5, &qword_26853DED0, type metadata accessor for PBTypedData);
      if (v14) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v27 = v33;
      sub_22D2B0084((uint64_t)v5, v33, type metadata accessor for PBTypedData);
      sub_22D2B0084(v27, v35, type metadata accessor for PBTypedData);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v36 = sub_22D282228(0, *(void *)(v36 + 16) + 1, 1, v36);
      }
      unint64_t v29 = *(void *)(v36 + 16);
      unint64_t v28 = *(void *)(v36 + 24);
      if (v29 >= v28 >> 1) {
        unint64_t v36 = sub_22D282228(v28 > 1, v29 + 1, 1, v36);
      }
      uint64_t v30 = v35;
      unint64_t v31 = v36;
      *(void *)(v36 + 16) = v29 + 1;
      uint64_t result = sub_22D2B0084(v30, v31+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v29, type metadata accessor for PBTypedData);
      if (v14) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v24 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v24 >= v38) {
      goto LABEL_29;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v24);
    ++v17;
    if (!v25)
    {
      int64_t v17 = v24 + 1;
      if (v24 + 1 >= v38) {
        goto LABEL_29;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v17);
      if (!v25)
      {
        int64_t v17 = v24 + 2;
        if (v24 + 2 >= v38) {
          goto LABEL_29;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v17);
        if (!v25)
        {
          int64_t v17 = v24 + 3;
          if (v24 + 3 >= v38) {
            goto LABEL_29;
          }
          unint64_t v25 = *(void *)(v37 + 8 * v17);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v14 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v38)
  {
LABEL_29:
    swift_release();
    return v36;
  }
  unint64_t v25 = *(void *)(v37 + 8 * v26);
  if (v25)
  {
    int64_t v17 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v17 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v17 >= v38) {
      goto LABEL_29;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v17);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_22D2AFFD0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D2ADEE4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_22D2AFFEC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_22D2AE12C(a1, a2, *(void *)(v3 + 24), *(void *)(v3 + 32), a3);
}

void sub_22D2AFFF8()
{
  if (!qword_268543FD0)
  {
    sub_22D2BBC30();
    sub_22D056DB0(255, &qword_26853E380, &qword_26853E388);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268543FD0);
    }
  }
}

uint64_t sub_22D2B0084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D2B00EC(unint64_t a1)
{
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      uint64_t v9 = v2;
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x230F7AF90](v3, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_16;
        }
        if (objc_msgSend(v5, sel_logOrigin) == (id)2 && objc_msgSend(v6, sel_status) == (id)5)
        {
          sub_22D2BD3A0();
          sub_22D2BD3E0();
          sub_22D2BD3F0();
          sub_22D2BD3B0();
          uint64_t v2 = v9;
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {
        }
        ++v3;
        if (v7 == v2) {
          return v10;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      uint64_t v2 = sub_22D2BD470();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_22D2B027C(unint64_t a1)
{
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      uint64_t v9 = v2;
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x230F7AF90](v3, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_16;
        }
        if (objc_msgSend(v5, sel_logOrigin) == (id)2 && objc_msgSend(v6, sel_status) == (id)4)
        {
          sub_22D2BD3A0();
          sub_22D2BD3E0();
          sub_22D2BD3F0();
          sub_22D2BD3B0();
          uint64_t v2 = v9;
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {
        }
        ++v3;
        if (v7 == v2) {
          return v10;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      uint64_t v2 = sub_22D2BD470();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_22D2B040C(unint64_t a1)
{
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      uint64_t v9 = v2;
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x230F7AF90](v3, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_16;
        }
        if (objc_msgSend(v5, sel_logOrigin) == (id)1 && objc_msgSend(v6, sel_status) == (id)4)
        {
          sub_22D2BD3A0();
          sub_22D2BD3E0();
          sub_22D2BD3F0();
          sub_22D2BD3B0();
          uint64_t v2 = v9;
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {
        }
        ++v3;
        if (v7 == v2) {
          return v10;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      uint64_t v2 = sub_22D2BD470();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_22D2B059C(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x230F7AF90](v3, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        if (objc_msgSend(v5, sel_logOrigin) == (id)2)
        {
          sub_22D2BD3A0();
          sub_22D2BD3E0();
          sub_22D2BD3F0();
          sub_22D2BD3B0();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {
        }
        ++v3;
        if (v7 == v2) {
          return v9;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_22D2BD470();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_22D2B0708@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D2AE798(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_22D2B0728(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D2B0790(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D2B07F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_22D2AF860(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22D2B0860()
{
  uint64_t v1 = type metadata accessor for PBBlobDeleteResult(0) - 8;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  uint64_t v6 = *(void *)(*v0 + 16);
  if (!v6) {
    return v6;
  }
  uint64_t v7 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v8 = *(void *)(v2 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_22D2B0984(v7, (uint64_t)v4);
    unint64_t v9 = *((void *)v4 + 4);
    int v10 = v4[40];
    sub_22D2B09E8((uint64_t)v4);
    if (v10 == 1) {
      break;
    }
    if (v9 == 5) {
      goto LABEL_7;
    }
LABEL_4:
    v7 += v8;
    if (!--v6) {
      goto LABEL_8;
    }
  }
  if (v9 < 4) {
    goto LABEL_4;
  }
LABEL_7:
  uint64_t v6 = 1;
LABEL_8:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_22D2B0984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBBlobDeleteResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D2B09E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PBBlobDeleteResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22D2B0A44@<X0>(uint64_t *a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v48 = a3;
  int v47 = a2;
  uint64_t v55 = a4;
  sub_22D02FCD0();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22D2B2418(0, (unint64_t *)&qword_26853DF40, (void (*)(uint64_t))sub_22D02FCD0, (void (*)(void))sub_22D0BD36C);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v50 = &v46[-v8];
  sub_22D2B23B4(0, (unint64_t *)&qword_26853DF08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext, MEMORY[0x263EFDDF8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v46[-v12];
  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDEA0];
  sub_22D0913E0(0, (unint64_t *)&qword_26853DF10, MEMORY[0x263EFDEA0]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = &v46[-v18];
  v57[0] = *a1;
  uint64_t v20 = v57[0];
  type metadata accessor for ClinicalSharingSyncContext();
  swift_retain();
  sub_22D2BC6B0();
  sub_22CFF49FC();
  sub_22D2BC680();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  sub_22D091458((unint64_t *)&qword_26853DF18, (unint64_t *)&qword_26853DF10, v14);
  uint64_t v21 = sub_22D2BC720();
  (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v22 = v20 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_22CFF4B00(v22, (uint64_t)v57);
  uint64_t v23 = v58;
  uint64_t v24 = v59;
  __swift_project_boxed_opaque_existential_1(v57, v58);
  (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  uint64_t v26 = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  swift_bridgeObjectRelease();
  if (v26)
  {
    v57[0] = v21;
    *(unsigned char *)(swift_allocObject() + 16) = v47 & 1;
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(0, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    sub_22D02FD9C();
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v27);
    unint64_t v28 = v49;
    sub_22D2BC7F0();
    swift_release();
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v48;
    *(void *)(v29 + 16) = v48;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_22D2B2220;
    *(void *)(v31 + 24) = v29;
    id v32 = v30;
    sub_22D2BC5D0();
    sub_22D0BD36C();
    uint64_t v33 = v50;
    uint64_t v34 = v52;
    sub_22D2BC830();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v28, v34);
    sub_22D2B2228(&qword_26853DF58, (unint64_t *)&qword_26853DF40, (void (*)(uint64_t))sub_22D02FCD0, (void (*)(void))sub_22D0BD36C);
    uint64_t v35 = v54;
    uint64_t v36 = sub_22D2BC720();
    swift_release();
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v53 + 8))(v33, v35);
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_22D2BC390();
    __swift_project_value_buffer(v38, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    unint64_t v39 = sub_22D2BC380();
    os_log_type_t v40 = sub_22D2BD050();
    if (os_log_type_enabled(v39, v40))
    {
      unint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)unint64_t v41 = 136315138;
      v57[0] = v42;
      sub_22D2BBC90();
      sub_22D2B1268((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v43 = sub_22D2BD630();
      uint64_t v56 = sub_22D0A4D24(v43, v44, v57);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v39, v40, "No DocRef exists to read. Account: %s. ResourceID is missing", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v42, -1, -1);
      MEMORY[0x230F7BDF0](v41, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    v57[0] = v21;
    uint64_t v45 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(0, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v45);
    uint64_t v36 = sub_22D2BC720();
    uint64_t result = swift_release();
  }
  *uint64_t v55 = v36;
  return result;
}

uint64_t sub_22D2B1268(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2B12B0@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_22D2BC390();
  __swift_project_value_buffer(v8, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  uint64_t v9 = sub_22D2BC380();
  os_log_type_t v10 = sub_22D2BD050();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v24 = a3;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    v21[0] = v12;
    sub_22D2BBC90();
    sub_22D2B1268((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v13 = sub_22D2BD630();
    sub_22D0A4D24(v13, v14, v21);
    uint64_t v4 = v3;
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v9, v10, "Preparing read request. Account: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v12, -1, -1);
    uint64_t v15 = v11;
    a3 = v24;
    MEMORY[0x230F7BDF0](v15, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v16 = v7 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_docRefInfo;
  swift_beginAccess();
  sub_22CFF4B00(v16, (uint64_t)v21);
  uint64_t v17 = v22;
  uint64_t v18 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  sub_22D1DA7E4(a2 & 1, v17, v18, a3);
  if (!v4)
  {
    sub_22D02FD9C();
    *(void *)(a3 + *(int *)(v19 + 48)) = v7;
    swift_retain();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t sub_22D2B1564(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v31 = a3;
  uint64_t v5 = sub_22D2BB5B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  sub_22D030340();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2B2278();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  uint64_t v38 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v34 = sub_22D2B2278;
  id v32 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_22D2B2504;
  sub_22D2B2418(0, &qword_268543FE8, (void (*)(uint64_t))sub_22D2B2278, (void (*)(void))sub_22D2B2504);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v35 = v16;
  uint64_t v36 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v39 = sub_22D2B2614(a1, a2, 3, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v20, (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_22D0307A8;
  *(void *)(v22 + 24) = v21;
  sub_22D030624(0, (unint64_t *)&qword_26853DF78, (unint64_t *)&qword_26853DF80, (unint64_t *)&qword_26853DF88);
  sub_22D0303F4(0, &qword_26853DF90, (unint64_t *)&qword_26853DF98);
  sub_22D0304B0();
  sub_22D2BC7F0();
  swift_release();
  swift_release();
  sub_22D2B1268(&qword_26853DFC0, (void (*)(uint64_t))sub_22D030340);
  uint64_t v23 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v39 = v23;
  sub_22D030624(0, &qword_26853DFB0, &qword_26853DF90, (unint64_t *)&qword_26853DF98);
  sub_22D2B2314();
  sub_22D0306A0();
  uint64_t v24 = v32;
  sub_22D2BC7F0();
  swift_release();
  sub_22D2BC5D0();
  type metadata accessor for ClinicalSharingSyncContext();
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_22D0913E0(0, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
  sub_22D2B2504();
  sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v25);
  uint64_t v26 = v37;
  sub_22D2BC830();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v26);
  sub_22D2B2228(&qword_268543FF8, &qword_268543FE8, (void (*)(uint64_t))v34, (void (*)(void))v33);
  uint64_t v27 = v35;
  uint64_t v28 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v27);
  return v28;
}

uint64_t sub_22D2B1AF4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = (void *)sub_22D2BCBA0();
  id v11 = objc_msgSend(a4, sel_valueForHTTPHeaderField_, v10);

  if (v11)
  {
    uint64_t v35 = sub_22D2BCBD0();
    uint64_t v13 = v12;

    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_22D2BC390();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_22D2BC380();
    os_log_type_t v16 = sub_22D2BD050();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v40 = v34;
      *(_DWORD *)uint64_t v17 = 136315394;
      sub_22D2BBC90();
      sub_22D2B1268((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v18 = sub_22D2BD630();
      sub_22D0A4D24(v18, v19, &v40);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      *((void *)&v36[0] + 1) = v13;
      swift_bridgeObjectRetain_n();
      sub_22D2BD680();
      id v20 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v21 = sub_22D2BCC30();
      uint64_t v22 = a1;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      *(void *)&v36[0] = sub_22D0A4D24(v21, v24, &v40);
      sub_22D2BD220();
      swift_bridgeObjectRelease_n();
      a1 = v22;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v15, v16, "ETag found while reading DocRef. Account: %s eTag: %s", (uint8_t *)v17, 0x16u);
      uint64_t v6 = v5;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v34, -1, -1);
      MEMORY[0x230F7BDF0](v17, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    sub_22D2BB600();
    swift_allocObject();
    sub_22D2BB5F0();
    sub_22D297224();
    sub_22D2BB5E0();
    swift_release();
    if (v6)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v38[0] = v36[0];
      v38[1] = v36[1];
      void v38[2] = v36[2];
      uint64_t v39 = v37;
      sub_22D0BFD7C(v35, v13);
      swift_bridgeObjectRelease();
      sub_22D25A3C8(a1);
      sub_22D25AE70((uint64_t)v38);
      swift_retain();
    }
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_22D2BC390();
    __swift_project_value_buffer(v25, (uint64_t)qword_26AEC3C90);
    swift_retain_n();
    uint64_t v26 = sub_22D2BC380();
    os_log_type_t v27 = sub_22D2BD060();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      *(void *)&v36[0] = v29;
      sub_22D2BBC90();
      sub_22D2B1268((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
      uint64_t v30 = sub_22D2BD630();
      uint64_t v40 = sub_22D0A4D24(v30, v31, (uint64_t *)v36);
      sub_22D2BD220();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CFEE000, v26, v27, "No eTag found while reading DocRef. Account: %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v29, -1, -1);
      MEMORY[0x230F7BDF0](v28, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_22D0BE8F0();
    swift_allocError();
    *(void *)(v32 + 8) = 0;
    *(void *)(v32 + 16) = 0;
    *(void *)uint64_t v32 = 0;
    *(unsigned char *)(v32 + 24) = 3;
    swift_willThrow();
  }
  return a5;
}

uint64_t sub_22D2B2108@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = (void *)a1[2];
  uint64_t v7 = a1[3];
  sub_22D2B2314();
  uint64_t result = sub_22D2B1AF4((uint64_t)a2 + *(int *)(v8 + 48), v4, v5, v6, v7);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_22D2B2174@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_22D2B2314();
  uint64_t result = sub_22D0C0030(a1 + *(int *)(v4 + 48));
  *a2 = result;
  return result;
}

uint64_t sub_22D2B21BC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_22D2B21CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22D2B12B0(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_22D2B21E8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D2B2220(uint64_t a1, uint64_t a2)
{
  return sub_22D2B1564(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_22D2B2228(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D2B2418(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_22D2B2278()
{
  if (!qword_268543FD8)
  {
    sub_22D030624(255, &qword_26853DFB0, &qword_26853DF90, (unint64_t *)&qword_26853DF98);
    sub_22D2B2314();
    sub_22D0306A0();
    unint64_t v0 = sub_22D2BC500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268543FD8);
    }
  }
}

void sub_22D2B2314()
{
  if (!qword_268543FE0)
  {
    type metadata accessor for ClinicalSharingSyncContext();
    sub_22D2B23B4(255, &qword_26853EFA0, type metadata accessor for PBLookupInfo, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268543FE0);
    }
  }
}

void sub_22D2B23B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_22D2B2418(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_22D0913E0(255, &qword_26AEC1D78, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_22D091458((unint64_t *)&qword_26AEC1D70, &qword_26AEC1D78, v7);
    a4();
    unint64_t v8 = sub_22D2BC520();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D2B2504()
{
  return sub_22D2B1268(&qword_268543FF0, (void (*)(uint64_t))sub_22D2B2278);
}

uint64_t sub_22D2B2538()
{
  uint64_t v1 = sub_22D2BB5B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_22D2B25C8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

ValueMetadata *type metadata accessor for ClinicalSharingFHIRAPI()
{
  return &type metadata for ClinicalSharingFHIRAPI;
}

uint64_t sub_22D2B2614(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v55 = a4;
  uint64_t v47 = a3;
  uint64_t v52 = a2;
  uint64_t v5 = sub_22D2BB5B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v42 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 64);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22D2BCF60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  uint64_t v45 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2B2D80();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v48 = v12;
  uint64_t v49 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v54 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2B2EA4();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v50 = v15;
  uint64_t v51 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v46 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = swift_allocBox();
  uint64_t v19 = v18;
  id v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v41 = a1;
  v20(v18, a1, v5);
  uint64_t v56 = 0x20726572616542;
  unint64_t v57 = 0xE700000000000000;
  swift_bridgeObjectRetain();
  sub_22D2BCCB0();
  sub_22D2BB5A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20((uint64_t)v8, v19, v5);
  sub_22D2BCF70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v20((uint64_t)v8, a1, v5);
  uint64_t v21 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = (v21 + 16) & ~v21;
  v40[0] = (char *)v42 + 7;
  v40[1] = v21 | 7;
  unint64_t v23 = ((unint64_t)v42 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  uint64_t v42 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v42(v24 + v22, v8, v5);
  *(void *)(v24 + v23) = v52;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_22D2B366C;
  *(void *)(v25 + 24) = v24;
  sub_22D2B2E2C();
  sub_22D2B45E0(&qword_26853D8C0, MEMORY[0x263F07C30]);
  swift_retain();
  uint64_t v26 = v44;
  os_log_type_t v27 = v53;
  sub_22D2BC7F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v26);
  v20((uint64_t)v8, v41, v5);
  uint64_t v28 = (v21 + 24) & ~v21;
  unint64_t v29 = (v40[0] + v28) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v47;
  v42(v31 + v28, v8, v5);
  *(void *)(v31 + v29) = v52;
  uint64_t v32 = v55;
  *(void *)(v31 + v30) = v55;
  *(void *)(v31 + ((v30 + 15) & 0xFFFFFFFFFFFFFFF8)) = v43;
  sub_22D2B2F90();
  sub_22D2B45E0(&qword_268544010, (void (*)(uint64_t))sub_22D2B2D80);
  sub_22D2B45E0((unint64_t *)&qword_26853DFA0, (void (*)(uint64_t))sub_22D2B2F90);
  swift_retain();
  id v33 = v32;
  swift_retain();
  uint64_t v34 = v46;
  uint64_t v35 = v48;
  uint64_t v36 = v54;
  sub_22D2BC850();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v35);
  sub_22D2B45E0(&qword_268544018, (void (*)(uint64_t))sub_22D2B2EA4);
  uint64_t v37 = v50;
  uint64_t v38 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v37);
  swift_release();
  return v38;
}

uint64_t sub_22D2B2C80(uint64_t a1, unint64_t a2, void *a3)
{
  self;
  uint64_t v6 = (void *)swift_dynamicCastObjCClass();
  if (v6 && (id v7 = a3, (char *)objc_msgSend(v6, sel_statusCode) - 200 < (char *)0x64))
  {
    sub_22CFF9B64(a1, a2);
    swift_retain();
  }
  else
  {
    uint64_t v8 = sub_22D2BB510();
    uint64_t v10 = v9;
    sub_22D0BE8F0();
    swift_allocError();
    *(void *)uint64_t v11 = v8;
    *(void *)(v11 + 8) = v10;
    *(void *)(v11 + 16) = v6;
    *(unsigned char *)(v11 + 24) = 1;
    swift_willThrow();
  }
  return a1;
}

void sub_22D2B2D80()
{
  if (!qword_268544000)
  {
    sub_22D2BCF60();
    sub_22D2B2E2C();
    sub_22D2B45E0(&qword_26853D8C0, MEMORY[0x263F07C30]);
    unint64_t v0 = sub_22D2BC500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268544000);
    }
  }
}

void sub_22D2B2E2C()
{
  if (!qword_26853DF80)
  {
    sub_22D064978();
    type metadata accessor for ClinicalSharingSyncContext();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26853DF80);
    }
  }
}

void sub_22D2B2EA4()
{
  if (!qword_268544008)
  {
    sub_22D2B2D80();
    sub_22D2B2F90();
    sub_22D2B45E0(&qword_268544010, (void (*)(uint64_t))sub_22D2B2D80);
    sub_22D2B45E0((unint64_t *)&qword_26853DFA0, (void (*)(uint64_t))sub_22D2B2F90);
    unint64_t v0 = sub_22D2BC570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268544008);
    }
  }
}

void sub_22D2B2F90()
{
  if (!qword_26853DF78)
  {
    sub_22D2B2E2C();
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853DF78);
    }
  }
}

uint64_t sub_22D2B3000(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v58 = a2;
  uint64_t v59 = a5;
  uint64_t v57 = a1;
  uint64_t v8 = sub_22D2BB5B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v54 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v55 = (char *)&v50 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v50 - v14;
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  uint64_t v56 = v5;
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    id v18 = a3;
    if (objc_msgSend(v17, sel_statusCode) == (id)401)
    {
      uint64_t v19 = (void *)sub_22D2BCBA0();
      id v20 = objc_msgSend(v17, sel_valueForHTTPHeaderField_, v19);

      if (v20)
      {
        sub_22D2BCBD0();
        id v53 = v18;

        char v21 = sub_22D2BCD20();
        id v18 = v53;
        swift_bridgeObjectRelease();
        if (v21)
        {
          uint64_t v22 = sub_22D2BB510();
          uint64_t v24 = v23;
          sub_22D0BE8F0();
          swift_allocError();
          char v26 = 0;
          *(void *)uint64_t v25 = v22;
LABEL_8:
          *(void *)(v25 + 8) = v24;
          *(void *)(v25 + 16) = 0;
          *(unsigned char *)(v25 + 24) = v26;
          swift_willThrow();

          return a4;
        }
      }
    }
    if (objc_msgSend(v17, sel_statusCode) == (id)409)
    {
      id v53 = v18;
      uint64_t v27 = sub_22D2BB510();
      uint64_t v24 = v28;
      sub_22D0BE8F0();
      swift_allocError();
      *(void *)uint64_t v25 = v27;
      char v26 = 2;
      goto LABEL_8;
    }
  }
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_22D2BC390();
  __swift_project_value_buffer(v29, (uint64_t)qword_26AEC3C90);
  unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v30(v15, a4, v8);
  id v53 = a3;
  uint64_t v31 = sub_22D2BC380();
  os_log_type_t v32 = sub_22D2BD050();
  int v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v61 = v52;
    *(_DWORD *)uint64_t v34 = 136315394;
    uint64_t v50 = v34 + 4;
    os_log_t v51 = v31;
    uint64_t v35 = v55;
    v30(v55, (uint64_t)v15, v8);
    v30(v54, (uint64_t)v35, v8);
    sub_22D2BD680();
    id v36 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v37 = sub_22D2BCC30();
    LODWORD(v54) = v33;
    unint64_t v39 = v38;
    uint64_t v40 = *(void (**)(char *, uint64_t))(v9 + 8);
    v40(v35, v8);
    uint64_t v60 = sub_22D0A4D24(v37, v39, &v61);
    sub_22D2BD220();
    swift_bridgeObjectRelease();
    v40(v15, v8);
    *(_WORD *)(v34 + 12) = 2080;
    id v41 = v53;
    id v42 = v53;
    id v43 = (id)HKSensitiveLogItem();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v44 = sub_22D2BCC30();
    unint64_t v46 = v45;

    uint64_t v60 = sub_22D0A4D24(v44, v46, &v61);
    sub_22D2BD220();

    swift_bridgeObjectRelease();
    os_log_t v47 = v51;
    _os_log_impl(&dword_22CFEE000, v51, (os_log_type_t)v54, "HTTPURLResponse received. Request: %s. Response: %s", (uint8_t *)v34, 0x16u);
    uint64_t v48 = v52;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v48, -1, -1);
    MEMORY[0x230F7BDF0](v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);

    id v41 = v53;
  }
  v41;
  a4 = v57;
  sub_22CFF9B64(v57, v58);
  swift_retain();
  return a4;
}

uint64_t sub_22D2B35C8()
{
  uint64_t v1 = sub_22D2BB5B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_22D2B366C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v7 = *(void *)(sub_22D2BB5B0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_22D2B3000(a1, a2, a3, v3 + v8, *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_22D2B371C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22D2B3754@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, a1[1], a1[2]);
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

void sub_22D2B3798(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v82 = a4;
  uint64_t v83 = a5;
  uint64_t v84 = a6;
  uint64_t v88 = a7;
  sub_22D2B42DC();
  uint64_t v86 = *(void *)(v10 - 8);
  uint64_t v87 = v10;
  MEMORY[0x270FA5388](v10);
  os_log_t v85 = (os_log_t)((char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_22D2BB5B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v77 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  unint64_t v89 = (char *)&v77 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v77 - v22;
  id v96 = *a1;
  id v24 = v96;
  id v25 = v96;
  unint64_t v26 = sub_22CFF49FC();
  if (!swift_dynamicCast())
  {
    uint64_t v88 = (void *)v26;
    goto LABEL_5;
  }
  if (v95)
  {
    uint64_t v88 = (void *)v26;
    sub_22D030094(v92, v93, v94, v95);
LABEL_5:
    uint64_t v27 = v13;

    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_22D2BC390();
    __swift_project_value_buffer(v28, (uint64_t)qword_26AEC3C90);
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v29(v16, a3, v12);
    id v30 = v24;
    id v31 = v24;
    os_log_type_t v32 = sub_22D2BC380();
    os_log_type_t v33 = sub_22D2BD050();
    int v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      LODWORD(v87) = v34;
      uint64_t v36 = v35;
      uint64_t v86 = swift_slowAlloc();
      uint64_t v92 = v86;
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v83 = (void *)(v36 + 4);
      os_log_t v85 = v32;
      uint64_t v37 = v89;
      v29(v89, (uint64_t)v16, v12);
      v29(v19, (uint64_t)v37, v12);
      sub_22D2BD680();
      id v38 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v84 = MEMORY[0x263F8EE58] + 8;
      uint64_t v39 = sub_22D2BCC30();
      unint64_t v41 = v40;
      id v42 = *(void (**)(char *, uint64_t))(v27 + 8);
      v42(v37, v12);
      uint64_t v91 = sub_22D0A4D24(v39, v41, &v92);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      v42(v16, v12);
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v91 = (uint64_t)v24;
      id v43 = v24;
      id v44 = v24;
      sub_22D2BD680();
      id v45 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v46 = sub_22D2BCC30();
      unint64_t v48 = v47;

      uint64_t v91 = sub_22D0A4D24(v46, v48, &v92);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      os_log_type_t v32 = v85;
      _os_log_impl(&dword_22CFEE000, v85, (os_log_type_t)v87, "Error received for request. Request: %s. Error: %s", (uint8_t *)v36, 0x16u);
      uint64_t v49 = v86;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v49, -1, -1);
      MEMORY[0x230F7BDF0](v36, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v12);
    }
    id v50 = v24;
    swift_willThrow();
    return;
  }
  sub_22D030094(v92, v93, v94, 0);
  if (a2 < 1)
  {
    id v67 = v24;
    swift_willThrow();
  }
  else
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_22D2BC390();
    __swift_project_value_buffer(v51, (uint64_t)qword_26AEC3C90);
    uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v52(v23, a3, v12);
    id v53 = sub_22D2BC380();
    os_log_type_t v54 = sub_22D2BD050();
    int v55 = v54;
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v56 = swift_slowAlloc();
      int v81 = v55;
      uint64_t v57 = v56;
      uint64_t v80 = swift_slowAlloc();
      uint64_t v90 = v80;
      uint64_t v91 = a2;
      *(_DWORD *)uint64_t v57 = 134218242;
      uint64_t v78 = a2;
      sub_22D2BD220();
      *(_WORD *)(v57 + 12) = 2080;
      uint64_t v79 = v57 + 14;
      unint64_t v58 = v89;
      v52(v89, (uint64_t)v23, v12);
      v52(v19, (uint64_t)v58, v12);
      sub_22D2BD680();
      id v59 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_22D2BD260();
      swift_unknownObjectRelease();
      uint64_t v60 = sub_22D2BCC30();
      unint64_t v62 = v61;
      os_log_t v77 = v53;
      uint64_t v63 = *(void (**)(char *, uint64_t))(v13 + 8);
      uint64_t v64 = v58;
      a2 = v78;
      v63(v64, v12);
      uint64_t v91 = sub_22D0A4D24(v60, v62, &v90);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      v63(v23, v12);
      os_log_t v65 = v77;
      _os_log_impl(&dword_22CFEE000, v77, (os_log_type_t)v81, "Access denied. Refresh access token and trying again. Retries left: %ld. Request: %s", (uint8_t *)v57, 0x16u);
      uint64_t v66 = v80;
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v66, -1, -1);
      MEMORY[0x230F7BDF0](v57, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
    }
    uint64_t v68 = v82;
    uint64_t v69 = (void **)__swift_project_boxed_opaque_existential_1((void *)(v82 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore), *(void *)(v82+ OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountStore+ 24));
    uint64_t v91 = sub_22D04AC20(v68 + OBJC_IVAR____TtC19HealthRecordsDaemon26ClinicalSharingSyncContext_accountID, *v69);
    uint64_t v70 = (void *)swift_allocObject();
    uint64_t v72 = v83;
    uint64_t v71 = v84;
    v70[2] = v68;
    v70[3] = v72;
    uint64_t v70[4] = v71;
    v70[5] = a2;
    swift_retain();
    id v73 = v72;
    swift_retain();
    sub_22D2BC5D0();
    sub_22D2B43C4();
    sub_22D2B2E2C();
    sub_22D2B2F90();
    sub_22D2B45E0((unint64_t *)&qword_26AEC1DA0, (void (*)(uint64_t))sub_22D2B43C4);
    sub_22D2B45E0((unint64_t *)&qword_26853DFA0, (void (*)(uint64_t))sub_22D2B2F90);
    os_log_t v74 = v85;
    sub_22D2BC830();
    swift_release();
    swift_release();
    sub_22D2B45E0(&qword_268544028, (void (*)(uint64_t))sub_22D2B42DC);
    uint64_t v75 = v87;
    uint64_t v76 = sub_22D2BC720();
    (*(void (**)(os_log_t, uint64_t))(v86 + 8))(v74, v75);
    *uint64_t v88 = v76;
  }
}

uint64_t sub_22D2B414C()
{
  uint64_t v1 = sub_22D2BB5B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_22D2B4218(id *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_22D2BB5B0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_22D2B3798(a1, *(void *)(v2 + 16), v2 + v6, *(void *)(v2 + v7), *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), a2);
}

void sub_22D2B42DC()
{
  if (!qword_268544020)
  {
    sub_22D2B2F90();
    sub_22D2B43C4();
    sub_22D2B45E0((unint64_t *)&qword_26853DFA0, (void (*)(uint64_t))sub_22D2B2F90);
    sub_22D2B45E0((unint64_t *)&qword_26AEC1DA0, (void (*)(uint64_t))sub_22D2B43C4);
    unint64_t v0 = sub_22D2BC520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268544020);
    }
  }
}

void sub_22D2B43C4()
{
  if (!qword_26AEC1DA8)
  {
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BC5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1DA8);
    }
  }
}

uint64_t sub_22D2B442C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_22D2BB5B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v16 = swift_projectBox();
  sub_22D0BFB3C(v15, v14);
  swift_beginAccess();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v16, v10);
  if (__OFSUB__(a4, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = sub_22D2B2614(v13, a2, a4 - 1, a3);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *a5 = v18;
  }
  return result;
}

uint64_t sub_22D2B458C()
{
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22D2B45D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22D2B442C(a1, v2[2], v2[3], v2[5], a2);
}

uint64_t sub_22D2B45E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t WebRequestPerformer.dataPublisher(for:timeoutInterval:cachePolicy:attribution:)(void *a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  int v10 = a3 & 1;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  int v13 = a5 & 1;
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(a1, v11);
  return sub_22D2B6970((uint64_t)v14, a2, v10, a4, v13, a6, v6, v11, v12);
}

uint64_t WebRequestPerformer.__allocating_init(sessionConfiguration:)(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for URLSessionCertVerificationDelegate()), sel_init);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = MEMORY[0x263F8EE88];
  id v4 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, a1, v2, 0);

  *(void *)(v3 + 16) = v4;
  return v3;
}

uint64_t WebRequestPerformer.performFileDownload(for:timeoutInterval:cachePolicy:attribution:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v8 + 48) = a7;
  *(void *)(v8 + 56) = v7;
  *(unsigned char *)(v8 + 145) = a6;
  *(unsigned char *)(v8 + 144) = a4;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_22D2B79B0(0, &qword_268544038, (void (*)(uint64_t))type metadata accessor for HTTPError);
  *(void *)(v8 + 64) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for HTTPError();
  *(void *)(v8 + 72) = v9;
  *(void *)(v8 + 80) = *(void *)(v9 - 8);
  *(void *)(v8 + 88) = swift_task_alloc();
  uint64_t v10 = sub_22D2BB5B0();
  *(void *)(v8 + 96) = v10;
  *(void *)(v8 + 104) = *(void *)(v10 - 8);
  *(void *)(v8 + 112) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22D2B48C0, 0, 0);
}

uint64_t sub_22D2B48C0()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 144) & 1;
  char v6 = *(unsigned char *)(v0 + 145) & 1;
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  WebRequest.urlRequest(attribution:timeoutInterval:cachePolicy:)(v1, v4, v5, v2, v6, v7, v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_22D2B4A48;
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v11 = *(void *)(v0 + 16);
  return MEMORY[0x270EF1ED8](v11, v10, 0);
}

uint64_t sub_22D2B4A48(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_22D2B4E40;
  }
  else {
    uint64_t v4 = sub_22D2B4B5C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_22D2B4B5C()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  uint64_t v2 = (void *)v0[16];
  if (v1)
  {
    uint64_t v3 = v0[9];
    uint64_t v4 = v0[10];
    char v5 = (uint64_t *)v0[8];
    id v6 = v2;
    NSHTTPURLResponse.asHTTPError()(v5);
    int v7 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3);
    uint64_t v8 = (void *)v0[16];
    if (v7 == 1)
    {
      uint64_t v9 = v0[8];
      (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);

      sub_22D2B7954(v9, &qword_268544038, (void (*)(uint64_t))type metadata accessor for HTTPError);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v10 = (uint64_t (*)(void))v0[1];
      goto LABEL_7;
    }
    uint64_t v13 = v0[11];
    uint64_t v11 = v0[2];
    sub_22D2B7D18(v0[8], v13, (uint64_t (*)(void))type metadata accessor for HTTPError);
    sub_22D2B7870(&qword_26853EE70, (void (*)(uint64_t))type metadata accessor for HTTPError);
    swift_allocError();
    sub_22D2B7EC0(v13, v14, (uint64_t (*)(void))type metadata accessor for HTTPError);
    swift_willThrow();

    sub_22D2B78B8(v13, (uint64_t (*)(void))type metadata accessor for HTTPError);
  }
  else
  {
    uint64_t v11 = v0[2];
    type metadata accessor for WebRequestResponseError.ErrorType(0);
    sub_22D2B7870((unint64_t *)&qword_26853E5F8, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError.ErrorType);
    swift_allocError();
    void *v12 = v2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  uint64_t v15 = sub_22D2BBAA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v11, v15);
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
LABEL_7:
  return v10();
}

uint64_t sub_22D2B4E40()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t WebRequestPerformer.data(for:timeoutInterval:cachePolicy:attribution:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v8 + 48) = a7;
  *(void *)(v8 + 56) = v7;
  *(unsigned char *)(v8 + 89) = a6;
  *(unsigned char *)(v8 + 88) = a4;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  return MEMORY[0x270FA2498](sub_22D2B4F0C, 0, 0);
}

uint64_t sub_22D2B4F0C()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  char v3 = *(unsigned char *)(v0 + 89);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  char v6 = *(unsigned char *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 64) = v8;
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v7;
  *(void *)(v8 + 32) = v5;
  *(unsigned char *)(v8 + 40) = v6 & 1;
  *(void *)(v8 + 48) = v4;
  *(unsigned char *)(v8 + 56) = v3 & 1;
  *(void *)(v8 + 64) = v2;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_22D2B5040;
  uint64_t v10 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v10, 0, 0, 0xD000000000000032, 0x800000022D2D7180, sub_22D0B7F70, v8, &type metadata for WebRequestResponse);
}

uint64_t sub_22D2B5040()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_22D2B517C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    char v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_22D2B517C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id WebRequestPerformer.session.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_22D2B51E8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v30 = a8;
  uint64_t v31 = a2;
  uint64_t v27 = a4;
  uint64_t v28 = a6;
  uint64_t v29 = a1;
  int v10 = a5 & 1;
  int v11 = a7 & 1;
  sub_22D2B7A04();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a3[3];
  uint64_t v18 = a3[4];
  uint64_t v19 = __swift_project_boxed_opaque_existential_1(a3, v17);
  uint64_t v32 = sub_22D2B6970((uint64_t)v19, v27, v10, v28, v11, v30, a2, v17, v18);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v21 = v29;
  v20(v16, v29, v13);
  unint64_t v22 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v30 = swift_allocObject();
  uint64_t v23 = *(void (**)(unint64_t, char *, uint64_t))(v14 + 32);
  v23(v30 + v22, v16, v13);
  v20(v16, v21, v13);
  uint64_t v24 = swift_allocObject();
  v23(v24 + v22, v16, v13);
  id v25 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, uint64_t))MEMORY[0x263EFDCF0];
  sub_22D2B7E1C(0, &qword_26853D870, MEMORY[0x263EFDCF0]);
  sub_22D2B7BE4(&qword_26853D880, &qword_26853D870, v25);
  sub_22D2BC790();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_22D2BC5F0();
  swift_endAccess();
  return swift_release();
}

void sub_22D2B5498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebRequestResponseError(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  int v10 = (char *)v28 - v9;
  sub_22D2B7C84();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2B7EC0(a1, (uint64_t)v13, (uint64_t (*)(void))sub_22D2B7C84);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_22D2BC390();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
    uint64_t v15 = sub_22D2BC380();
    os_log_type_t v16 = sub_22D2BD050();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_22CFEE000, v15, v16, "WebRequestPerformer.data (async) finished successfully", v17, 2u);
      MEMORY[0x230F7BDF0](v17, -1, -1);
    }
  }
  else
  {
    sub_22D2B7D18((uint64_t)v13, (uint64_t)v10, type metadata accessor for WebRequestResponseError);
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_22D2BC390();
    __swift_project_value_buffer(v18, (uint64_t)qword_26AEC3C90);
    sub_22D2B7EC0((uint64_t)v10, (uint64_t)v8, type metadata accessor for WebRequestResponseError);
    uint64_t v19 = sub_22D2BC380();
    os_log_type_t v20 = sub_22D2BD060();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      v28[1] = a2;
      unint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v29 = v23;
      *(_DWORD *)unint64_t v22 = 136315138;
      uint64_t v24 = WebRequestResponseError.safelyLoggableDescription.getter();
      void v28[2] = sub_22D0A4D24(v24, v25, &v29);
      sub_22D2BD220();
      swift_bridgeObjectRelease();
      sub_22D2B78B8((uint64_t)v8, type metadata accessor for WebRequestResponseError);
      _os_log_impl(&dword_22CFEE000, v19, v20, "WebRequestPerformer.data (async) failed with %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v23, -1, -1);
      MEMORY[0x230F7BDF0](v22, -1, -1);
    }
    else
    {
      sub_22D2B78B8((uint64_t)v8, type metadata accessor for WebRequestResponseError);
    }

    sub_22D2B7870(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    uint64_t v26 = swift_allocError();
    sub_22D2B7EC0((uint64_t)v10, v27, type metadata accessor for WebRequestResponseError);
    uint64_t v29 = v26;
    sub_22D2B7A04();
    sub_22D2BCE90();
    sub_22D2B78B8((uint64_t)v10, type metadata accessor for WebRequestResponseError);
  }
}

uint64_t sub_22D2B591C(uint64_t a1)
{
  sub_22D2B7C28(a1, (uint64_t)&v2);
  sub_22D2B7A04();
  return sub_22D2BCEA0();
}

uint64_t sub_22D2B5960@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_22D2BCC20();
  MEMORY[0x270FA5388](v3 - 8);
  sub_22D2B79B0(0, &qword_268544038, (void (*)(uint64_t))type metadata accessor for HTTPError);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v45 - v5);
  uint64_t v7 = type metadata accessor for HTTPError();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (uint64_t)&v45 - v12;
  uint64_t v14 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v15 = (void *)a1[2];
  sub_22CFF9B64(v14, v13);
  id v16 = v15;
  sub_22CFF5630(v14, v13);
  self;
  uint64_t v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    uint64_t v18 = v17;
    id v45 = v16;
    NSHTTPURLResponse.asHTTPError()(v6);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_22D2B7954((uint64_t)v6, &qword_268544038, (void (*)(uint64_t))type metadata accessor for HTTPError);
      sub_22CFF9B64(v14, v13);
      switch(v13 >> 62)
      {
        case 1uLL:
          uint64_t result = sub_22CFF5630(v14, v13);
          if ((int)v14 != v14 >> 32) {
            goto LABEL_18;
          }
          goto LABEL_20;
        case 2uLL:
          uint64_t v42 = *(void *)(v14 + 16);
          uint64_t v43 = *(void *)(v14 + 24);
          uint64_t result = sub_22CFF5630(v14, v13);
          if (v42 != v43) {
            goto LABEL_18;
          }
          goto LABEL_20;
        case 3uLL:
          uint64_t result = sub_22CFF5630(v14, v13);
          goto LABEL_20;
        default:
          uint64_t result = sub_22CFF5630(v14, v13);
          if ((v13 & 0xFF000000000000) != 0)
          {
LABEL_18:
            uint64_t result = sub_22CFF9B64(v14, v13);
          }
          else
          {
LABEL_20:
            uint64_t v14 = 0;
            unint64_t v13 = 0xF000000000000000;
          }
          id v44 = v46;
          *uint64_t v46 = v14;
          v44[1] = v13;
          long long v44[2] = v18;
          break;
      }
    }
    else
    {
      uint64_t v23 = v48;
      sub_22D2B7D18((uint64_t)v6, v48, (uint64_t (*)(void))type metadata accessor for HTTPError);
      sub_22D2BCC10();
      uint64_t v24 = sub_22D2BCBF0();
      uint64_t v26 = v45;
      if (v25)
      {
        uint64_t v27 = v24;
        uint64_t v28 = v25;
        if (qword_26AEC1C58 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_22D2BC390();
        __swift_project_value_buffer(v29, (uint64_t)qword_26AEC3C90);
        sub_22D2B7EC0(v23, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for HTTPError);
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_22D2BC380();
        os_log_type_t v31 = sub_22D2BD060();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = swift_slowAlloc();
          uint64_t v47 = swift_slowAlloc();
          uint64_t v51 = v47;
          *(_DWORD *)uint64_t v32 = 136315394;
          uint64_t v33 = HTTPError.safelyLoggableDescription.getter();
          uint64_t v49 = sub_22D0A4D24(v33, v34, &v51);
          sub_22D2BD220();
          swift_bridgeObjectRelease();
          sub_22D2B78B8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for HTTPError);
          *(_WORD *)(v32 + 12) = 2080;
          uint64_t v49 = v27;
          uint64_t v50 = v28;
          swift_bridgeObjectRetain_n();
          sub_22D2BD680();
          id v35 = (id)HKSensitiveLogItem();
          swift_unknownObjectRelease();
          sub_22D2BD260();
          swift_unknownObjectRelease();
          uint64_t v36 = sub_22D2BCC30();
          unint64_t v38 = v37;
          swift_bridgeObjectRelease();
          uint64_t v39 = v36;
          uint64_t v26 = v45;
          uint64_t v49 = sub_22D0A4D24(v39, v38, &v51);
          sub_22D2BD220();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_22CFEE000, v30, v31, "WebRequestPerformer: HTTP error: %s data: %s", (uint8_t *)v32, 0x16u);
          uint64_t v40 = v47;
          swift_arrayDestroy();
          MEMORY[0x230F7BDF0](v40, -1, -1);
          MEMORY[0x230F7BDF0](v32, -1, -1);
        }
        else
        {
          sub_22D2B78B8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for HTTPError);

          swift_bridgeObjectRelease_n();
        }
        uint64_t v23 = v48;
      }
      type metadata accessor for WebRequestResponseError.ErrorType(0);
      sub_22D2B7870((unint64_t *)&qword_26853E5F8, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError.ErrorType);
      swift_allocError();
      sub_22D2B7EC0(v23, v41, (uint64_t (*)(void))type metadata accessor for HTTPError);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

      return sub_22D2B78B8(v23, (uint64_t (*)(void))type metadata accessor for HTTPError);
    }
  }
  else
  {

    type metadata accessor for WebRequestResponseError.ErrorType(0);
    sub_22D2B7870((unint64_t *)&qword_26853E5F8, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError.ErrorType);
    swift_allocError();
    uint64_t v21 = v20;
    sub_22CFF9B64(v14, v13);
    id v22 = v16;
    sub_22CFF5630(v14, v13);
    void *v21 = v22;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_22D2B6060@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22D2B79B0(0, &qword_268543288, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError.ErrorType);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = type metadata accessor for WebRequestResponseError.ErrorType(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_22D2BC390();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
  id v15 = v13;
  id v16 = v13;
  uint64_t v17 = sub_22D2BC380();
  os_log_type_t v18 = sub_22D2BD060();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = a3;
    os_log_type_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v35 = a2;
    uint64_t v22 = v21;
    uint64_t v39 = v21;
    uint64_t v33 = v10;
    unint64_t v34 = v8;
    *(_DWORD *)os_log_type_t v20 = 136315138;
    swift_getErrorValue();
    uint64_t v23 = sub_22D1E40E8(v38);
    uint64_t v37 = sub_22D0A4D24(v23, v24, &v39);
    uint64_t v10 = v33;
    uint64_t v8 = v34;
    sub_22D2BD220();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CFEE000, v17, v18, "WebRequestPerformer: error response: %s", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v25 = v22;
    a2 = v35;
    MEMORY[0x230F7BDF0](v25, -1, -1);
    uint64_t v26 = v20;
    a3 = v36;
    MEMORY[0x230F7BDF0](v26, -1, -1);
  }
  else
  {
  }
  uint64_t v39 = (uint64_t)v13;
  id v27 = v13;
  sub_22CFF49FC();
  int v28 = swift_dynamicCast();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v28)
  {
    v29(v8, 0, 1, v9);
    sub_22D2B7D18((uint64_t)v8, (uint64_t)v12, type metadata accessor for WebRequestResponseError.ErrorType);
  }
  else
  {
    v29(v8, 1, 1, v9);
    void *v12 = v13;
    swift_storeEnumTagMultiPayload();
    id v30 = v13;
    sub_22D2B7954((uint64_t)v8, &qword_268543288, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError.ErrorType);
  }
  sub_22CFF4B00(a2, a3);
  uint64_t v31 = type metadata accessor for WebRequestResponseError(0);
  return sub_22D2B7D18((uint64_t)v12, a3 + *(int *)(v31 + 20), type metadata accessor for WebRequestResponseError.ErrorType);
}

id sub_22D2B643C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = sub_22D2BBAA0();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2B79B0(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v39 = (void *)a1[2];
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_22D2BC390();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  id v15 = sub_22D2BC380();
  int v16 = sub_22D2BD050();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v35 = v16;
    unint64_t v36 = v13;
    uint64_t v37 = v12;
    uint64_t v33 = a2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v42 = v34;
    *(_DWORD *)uint64_t v17 = 136315394;
    sub_22D2BB5B0();
    swift_projectBox();
    swift_beginAccess();
    uint64_t v18 = sub_22D2BB510();
    unint64_t v20 = v19;
    swift_endAccess();
    if (v20) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 0xD000000000000010;
    }
    if (v20) {
      unint64_t v22 = v20;
    }
    else {
      unint64_t v22 = 0x800000022D2D5A70;
    }
    uint64_t v40 = sub_22D0A4D24(v21, v22, &v42);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_beginAccess();
    sub_22D2BB570();
    uint64_t v23 = v38;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v11, 1, v6))
    {
      sub_22D2B7954((uint64_t)v11, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
      swift_endAccess();
      uint64_t v24 = 0;
      uint64_t v25 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v8, v11, v6);
      sub_22D2B7954((uint64_t)v11, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
      swift_endAccess();
      uint64_t v24 = sub_22D2BB9E0();
      uint64_t v25 = v26;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
    }
    a2 = v33;
    uint64_t v40 = v24;
    uint64_t v41 = v25;
    sub_22CFFA100();
    sub_22D2BD680();
    id v27 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v28 = sub_22D2BCC30();
    uint64_t v40 = sub_22D0A4D24(v28, v29, &v42);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v15, (os_log_type_t)v35, "WebRequestPerformer: request succeeded for: %s %s", (uint8_t *)v17, 0x16u);
    uint64_t v30 = v34;
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v30, -1, -1);
    MEMORY[0x230F7BDF0](v17, -1, -1);

    unint64_t v13 = v36;
    uint64_t v12 = v37;
  }
  else
  {

    swift_release_n();
  }
  sub_22CFF4B00(a2, (uint64_t)a3);
  a3[5] = v12;
  a3[6] = v13;
  a3[7] = v39;
  sub_22CFFA158(v12, v13);
  uint64_t v31 = v39;
  return v31;
}

uint64_t WebRequestPerformer.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WebRequestPerformer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_22D2B6970(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v88 = a7;
  uint64_t v106 = a6;
  int v86 = a5;
  uint64_t v85 = a4;
  int v87 = a3;
  uint64_t v84 = a2;
  uint64_t v89 = sub_22D2BCF60();
  uint64_t v95 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v94 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2B7D80();
  uint64_t v96 = v11;
  uint64_t v99 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v98 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF9C58();
  uint64_t v90 = v13;
  uint64_t v91 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v100 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CFF9DDC();
  uint64_t v92 = v15;
  uint64_t v93 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v97 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_22D2BBAA0();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v80 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2B79B0(0, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v18 - 8);
  int v81 = (char *)&v79 - v19;
  sub_22D2B7E1C(0, &qword_26853D8E8, MEMORY[0x263EFDDE8]);
  os_log_t v103 = (os_log_t)*((void *)v20 - 1);
  unint64_t v104 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v102 = (char *)&v79 - v21;
  uint64_t v107 = type metadata accessor for WebRequestResponseError(0);
  uint64_t v22 = MEMORY[0x270FA5388](v107);
  unint64_t v101 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = type metadata accessor for WebRequestResponseError.ErrorType(0);
  MEMORY[0x270FA5388](v24);
  uint64_t v25 = sub_22D2BB5B0();
  uint64_t v105 = *(void *)(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v79 - v29;
  v111[3] = a8;
  v111[4] = a9;
  __swift_allocate_boxed_opaque_existential_1(v111);
  uint64_t v31 = a8;
  (*(void (**)(void))(*(void *)(a8 - 8) + 16))();
  uint64_t v108 = swift_allocBox();
  uint64_t v33 = v32;
  WebRequest.urlRequest(attribution:timeoutInterval:cachePolicy:)(v106, 0, 1, 0, 1, v31, a9);
  char v34 = v86;
  unint64_t v104 = v28;
  int v35 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 32);
  uint64_t v106 = v25;
  v35(v33, v30, v25);
  uint64_t v36 = v33;
  if ((v87 & 1) == 0) {
    sub_22D2BB550();
  }
  uint64_t v37 = v100;
  uint64_t v38 = v99;
  if ((v34 & 1) == 0) {
    sub_22D2BB540();
  }
  uint64_t v39 = v98;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_22D2BC390();
  __swift_project_value_buffer(v40, (uint64_t)qword_26AEC3C90);
  swift_retain_n();
  uint64_t v41 = sub_22D2BC380();
  os_log_type_t v42 = sub_22D2BD050();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v44 = v106;
  if (v43)
  {
    os_log_type_t v45 = v42;
    os_log_t v103 = v41;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v110 = v47;
    *(_DWORD *)uint64_t v46 = 136315394;
    swift_beginAccess();
    uint64_t v48 = sub_22D2BB510();
    unint64_t v50 = v49;
    swift_endAccess();
    if (v50) {
      uint64_t v51 = v48;
    }
    else {
      uint64_t v51 = 0xD000000000000010;
    }
    if (v50) {
      unint64_t v52 = v50;
    }
    else {
      unint64_t v52 = 0x800000022D2D5A70;
    }
    *(void *)&v109[0] = sub_22D0A4D24(v51, v52, &v110);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    swift_beginAccess();
    uint64_t v53 = (uint64_t)v81;
    sub_22D2BB570();
    uint64_t v54 = v82;
    uint64_t v55 = v83;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v53, 1, v83))
    {
      sub_22D2B7954(v53, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
      swift_endAccess();
      uint64_t v56 = 0;
      uint64_t v57 = 0;
    }
    else
    {
      unint64_t v61 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v80, v53, v55);
      sub_22D2B7954(v53, (unint64_t *)&qword_26AEC0F28, MEMORY[0x263F06EA8]);
      swift_endAccess();
      uint64_t v56 = sub_22D2BB9E0();
      uint64_t v57 = v62;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v61, v55);
    }
    *(void *)&v109[0] = v56;
    *((void *)&v109[0] + 1) = v57;
    sub_22CFFA100();
    sub_22D2BD680();
    id v63 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_22D2BD260();
    swift_unknownObjectRelease();
    uint64_t v64 = sub_22D2BCC30();
    *(void *)&v109[0] = sub_22D0A4D24(v64, v65, &v110);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v66 = v103;
    _os_log_impl(&dword_22CFEE000, v103, v45, "WebRequestPerformer: making request: %s %s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v47, -1, -1);
    MEMORY[0x230F7BDF0](v46, -1, -1);

    id v59 = v100;
    uint64_t v60 = v96;
    uint64_t v38 = v99;
    uint64_t v39 = v98;
    uint64_t v58 = v95;
    uint64_t v44 = v106;
  }
  else
  {

    swift_release_n();
    uint64_t v58 = v95;
    id v59 = v37;
    uint64_t v60 = v96;
  }
  swift_beginAccess();
  uint64_t v67 = v105;
  uint64_t v68 = v36;
  uint64_t v69 = v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v104, v68, v44);
  uint64_t v70 = v94;
  sub_22D2BCF70();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v44);
  sub_22D2B7870(&qword_26853D8C0, MEMORY[0x263F07C30]);
  uint64_t v71 = v89;
  sub_22D2BC7F0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v70, v71);
  sub_22CFF4B00((uint64_t)v111, (uint64_t)v109);
  uint64_t v72 = swift_allocObject();
  sub_22CFF8C10(v109, v72 + 16);
  sub_22D2B7870((unint64_t *)&qword_26853D8D0, (void (*)(uint64_t))sub_22D2B7D80);
  sub_22D2B7870(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
  sub_22D2BC840();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v60);
  sub_22CFF4B00((uint64_t)v111, (uint64_t)v109);
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = v108;
  sub_22CFF8C10(v109, v73 + 24);
  sub_22D2B7870(&qword_26853D8E0, (void (*)(uint64_t))sub_22CFF9C58);
  swift_retain();
  os_log_t v74 = v97;
  uint64_t v75 = v90;
  sub_22D2BC780();
  swift_release();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v59, v75);
  sub_22D2B7870(&qword_26853D8F8, (void (*)(uint64_t))sub_22CFF9DDC);
  uint64_t v76 = v92;
  uint64_t v77 = sub_22D2BC720();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v76);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
  return v77;
}

uint64_t sub_22D2B7870(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2B78B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for WebRequestPerformer()
{
  return self;
}

uint64_t method lookup function for WebRequestPerformer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WebRequestPerformer);
}

uint64_t sub_22D2B7954(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_22D2B79B0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_22D2B79B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_22D2B7A04()
{
  if (!qword_268544048)
  {
    sub_22CFF49FC();
    unint64_t v0 = sub_22D2BCEB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268544048);
    }
  }
}

void sub_22D2B7A70(uint64_t a1)
{
  sub_22D2B7A04();
  uint64_t v4 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  sub_22D2B5498(a1, v4);
}

uint64_t objectdestroyTm_16()
{
  sub_22D2B7A04();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_22D2B7B74(uint64_t a1)
{
  sub_22D2B7A04();
  return sub_22D2B591C(a1);
}

uint64_t sub_22D2B7BE4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22D2B7E1C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2B7C28(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_22D2B7C84()
{
  if (!qword_268544050)
  {
    type metadata accessor for WebRequestResponseError(255);
    sub_22D2B7870(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    unint64_t v0 = sub_22D2BC5B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268544050);
    }
  }
}

uint64_t sub_22D2B7D18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22D2B7D80()
{
  if (!qword_26853D8B8)
  {
    sub_22D2BCF60();
    sub_22D2B7870(&qword_26853D8C0, MEMORY[0x263F07C30]);
    unint64_t v0 = sub_22D2BC500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26853D8B8);
    }
  }
}

void sub_22D2B7E1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for WebRequestResponseError(255);
    uint64_t v7 = sub_22D2B7870(&qword_26853D878, (void (*)(uint64_t))type metadata accessor for WebRequestResponseError);
    unint64_t v8 = a3(a1, &type metadata for WebRequestResponse, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22D2B7EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22D2B7F28()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22D2B7F60()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t SymmetricKey.rawRepresentation.getter()
{
  sub_22D2BC920();
  return v1;
}

uint64_t sub_22D2B7FF4@<X0>(size_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v4 = sub_22D2B804C(a1, a2);
  uint64_t v5 = sub_22D060C50(v4);
  uint64_t v7 = v6;
  uint64_t result = swift_release();
  *a3 = v5;
  a3[1] = v7;
  return result;
}

size_t sub_22D2B804C(size_t result, unint64_t a2)
{
  if (!result) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = (const void *)result;
  int64_t v4 = a2 - result;
  if (a2 == result) {
    return MEMORY[0x263F8EE78];
  }
  if (v4 < 1)
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    if (!a2) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_22D2B80FC();
    uint64_t v5 = (void *)swift_allocObject();
    uint64_t result = _swift_stdlib_malloc_size(v5);
    void v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2) {
      goto LABEL_13;
    }
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_22D2B80FC()
{
  if (!qword_26AEC1FA8)
  {
    unint64_t v0 = sub_22D2BD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1FA8);
    }
  }
}

uint64_t sub_22D2B8154()
{
  id v1 = objc_msgSend(v0, sel_primaryConcept);
  id v2 = objc_msgSend(v1, sel_localizedPreferredName);

  if (v2)
  {
    uint64_t v3 = sub_22D2BCBD0();
    unint64_t v5 = v4;

    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6) {
      return v3;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = sub_22D2B8270();
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v9) {
    return v7;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_22D2B8488();
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v11) {
    return v7;
  }
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v0, sel_fallbackDisplayString);
  uint64_t v14 = sub_22D2BCBD0();

  return v14;
}

uint64_t sub_22D2B8270()
{
  id v1 = objc_msgSend(v0, sel_medicalRecordCodings);
  sub_22D030474(0, &qword_26853E868);
  unint64_t v2 = sub_22D2BCE00();

  if (v2 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_22D2BD470();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      id v15 = self;
      uint64_t v4 = 4;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v5 = (id)MEMORY[0x230F7AF90](v4 - 4, v2);
        }
        else {
          id v5 = *(id *)(v2 + 8 * v4);
        }
        uint64_t v6 = v5;
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_16;
        }
        id v8 = objc_msgSend(v5, sel_codingSystem);
        id v9 = objc_msgSend(v15, sel_textSystem);
        if (v8)
        {
          sub_22D030474(0, &qword_2685434A0);
          id v10 = v8;
          char v11 = sub_22D2BD1A0();

          if (v11)
          {
            swift_bridgeObjectRelease_n();
            id v12 = objc_msgSend(v6, sel_displayString);

            if (!v12) {
              return 0;
            }
            uint64_t v13 = sub_22D2BCBD0();

            return v13;
          }
          id v9 = v6;
        }
        else
        {
        }
        ++v4;
      }
      while (v7 != v3);
    }
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_22D2B8488()
{
  id v1 = objc_msgSend(v0, sel_medicalRecordCodings);
  sub_22D030474(0, &qword_26853E868);
  unint64_t v2 = sub_22D2BCE00();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_22D2BD470();
  if (!v3) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v4 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x230F7AF90](v4 - 4, v2);
    }
    else {
      id v5 = *(id *)(v2 + 8 * v4);
    }
    uint64_t v6 = v5;
    uint64_t v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    id v8 = objc_msgSend(v5, sel_displayString);
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = sub_22D2BCBD0();
      unint64_t v12 = v11;

      swift_bridgeObjectRelease();
      uint64_t v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
      }
      if (v13) {
        break;
      }
    }

    ++v4;
    if (v7 == v3) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease_n();
  id v14 = objc_msgSend(v6, sel_displayString);

  if (!v14) {
    return 0;
  }
  uint64_t v15 = sub_22D2BCBD0();

  return v15;
}

uint64_t sub_22D2B8644@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v43 = a6;
  uint64_t v44 = a5;
  uint64_t v45 = a4;
  uint64_t v11 = sub_22D2BCA70();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v39 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D2B8954();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_22D2BC9A0();
  uint64_t v42 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v38 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  char v19 = *((unsigned char *)a1 + 8);
  uint64_t v20 = sub_22D2BBFC0();
  unint64_t v22 = v21;
  *(void *)(a7 + 32) = sub_22D2BBFC0();
  *(void *)(a7 + 40) = v23;
  *(void *)(a7 + 64) = 0;
  *(unsigned char *)(a7 + 72) = 1;
  type metadata accessor for PBAssociatedData(0);
  sub_22D2BBFE0();
  uint64_t v24 = v44;
  if (!v43) {
    uint64_t v24 = 0;
  }
  unint64_t v25 = 0xE000000000000000;
  if (v43) {
    unint64_t v25 = v43;
  }
  *(void *)a7 = v24;
  *(void *)(a7 + 8) = v25;
  sub_22CFF9B64(a2, a3);
  unint64_t v26 = v22;
  uint64_t v27 = v45;
  sub_22CFF5630(v20, v26);
  uint64_t v28 = a2;
  *(void *)(a7 + 16) = a2;
  *(void *)(a7 + 24) = a3;
  unint64_t v29 = a3;
  *(void *)(a7 + 48) = v18;
  uint64_t v30 = v42;
  *(unsigned char *)(a7 + 56) = v19;
  sub_22D2B89AC(v27, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v15, 1, v16) == 1)
  {
    sub_22CFF5630(v28, a3);
    sub_22D2B8A10(v27);
    return sub_22D2B8A10((uint64_t)v15);
  }
  else
  {
    uint64_t v32 = v38;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v38, v15, v16);
    uint64_t v33 = v39;
    uint64_t v34 = sub_22D2BC950();
    uint64_t v35 = MEMORY[0x230F7A6C0](v34);
    uint64_t v44 = v36;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
    sub_22CFF5630(v28, v29);
    sub_22D2B8A10(v27);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v16);
    uint64_t result = sub_22CFF5630(*(void *)(a7 + 32), *(void *)(a7 + 40));
    uint64_t v37 = v44;
    *(void *)(a7 + 32) = v35;
    *(void *)(a7 + 40) = v37;
  }
  return result;
}

void sub_22D2B8954()
{
  if (!qword_268542E60)
  {
    sub_22D2BC9A0();
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268542E60);
    }
  }
}

uint64_t sub_22D2B89AC(uint64_t a1, uint64_t a2)
{
  sub_22D2B8954();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22D2B8A10(uint64_t a1)
{
  sub_22D2B8954();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22D2B8A6C(unint64_t *a1, uint64_t a2, unint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v40 = sub_22D2BBC90();
  uint64_t v10 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *a1;
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_22D2BC390();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AEC3C90);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_22D2BC380();
  int v16 = sub_22D2BD080();
  if (!os_log_type_enabled(v15, (os_log_type_t)v16))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    if (!a4) {
      return;
    }
    goto LABEL_17;
  }
  int v38 = v16;
  uint64_t v17 = swift_slowAlloc();
  uint64_t v37 = swift_slowAlloc();
  uint64_t v42 = v37;
  *(_DWORD *)uint64_t v17 = 136315394;
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_22D0A4D24(a2, a3, &v42);
  sub_22D2BD220();
  swift_bridgeObjectRelease_n();
  uint64_t v39 = (uint8_t *)v17;
  *(_WORD *)(v17 + 12) = 2080;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_22D2BD470();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (v18)
  {
    uint64_t v41 = MEMORY[0x263F8EE78];
    sub_22D24B7A4(0, v18 & ~(v18 >> 63), 0);
    if (v18 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v34 = v15;
    uint64_t v35 = a4;
    uint64_t v36 = a5;
    uint64_t v20 = 0;
    uint64_t v19 = v41;
    unint64_t v21 = v13 & 0xC000000000000001;
    unint64_t v22 = v13;
    do
    {
      if (v21) {
        id v23 = (id)MEMORY[0x230F7AF90](v20, v13);
      }
      else {
        id v23 = *(id *)(v13 + 8 * v20 + 32);
      }
      id v24 = v23;
      id v25 = objc_msgSend(v24, sel_identifier);
      sub_22D2BBC70();

      uint64_t v41 = v19;
      unint64_t v27 = *(void *)(v19 + 16);
      unint64_t v26 = *(void *)(v19 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_22D24B7A4(v26 > 1, v27 + 1, 1);
        uint64_t v19 = v41;
      }
      ++v20;
      *(void *)(v19 + 16) = v27 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v27, v12, v40);
      unint64_t v13 = v22;
    }
    while (v18 != v20);
    a4 = v35;
    uint64_t v15 = v34;
  }
  uint64_t v28 = v39;
  uint64_t v29 = MEMORY[0x230F7AA70](v19, v40);
  unint64_t v31 = v30;
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_22D0A4D24(v29, v31, &v42);
  sub_22D2BD220();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_22CFEE000, v15, (os_log_type_t)v38, "%s Found accounts %s with SharingToProvider feature", v28, 0x16u);
  uint64_t v32 = v37;
  swift_arrayDestroy();
  MEMORY[0x230F7BDF0](v32, -1, -1);
  MEMORY[0x230F7BDF0](v28, -1, -1);

  if (a4)
  {
LABEL_17:
    swift_retain();
    a4(v13);
    sub_22D074520((uint64_t)a4);
  }
}

uint64_t sub_22D2B8EB4@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v4 = *a1;
  id v5 = (void **)__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t result = sub_22D04AFE8(v4, *v5);
  *a3 = result;
  return result;
}

uint64_t sub_22D2B8EF8@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  sub_22D2B97C4();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  v14[1] = sub_22D0932F0(a2);
  *(void *)(swift_allocObject() + 16) = v11;
  sub_22D2B43C4();
  sub_22D073EB8(0);
  sub_22D2B9658((unint64_t *)&qword_26AEC1DA0, (void (*)(uint64_t))sub_22D2B43C4);
  swift_bridgeObjectRetain();
  sub_22D2BC780();
  swift_release();
  swift_release();
  sub_22D2B9658(&qword_26AEC2C78, (void (*)(uint64_t))sub_22D2B97C4);
  uint64_t v12 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v12;
  return result;
}

uint64_t sub_22D2B90E8(uint64_t a1)
{
  return sub_22D2B96C0(a1, (void (*)(id, id))sub_22D2B96A0);
}

uint64_t sub_22D2B9128(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22CFF4B00(a3, (uint64_t)v12);
  type metadata accessor for ClinicalSharingSyncContext();
  swift_allocObject();
  id v9 = a1;
  id v10 = a2;
  swift_bridgeObjectRetain();
  return sub_22D0CA814(v9, v10, (uint64_t)v12, a4, a5);
}

uint64_t sub_22D2B91CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_22D0716C4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22D0AD1B4();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *a1;
  sub_22D2B9870(0, &qword_26AEC1E98, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSyncContext);
  sub_22D071744();
  sub_22D2BCD80();
  sub_22CFF49FC();
  sub_22D2BC540();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_22D2B9658((unint64_t *)&qword_26AEC1D08, (void (*)(uint64_t))sub_22D0AD1B4);
  uint64_t v14 = sub_22D2BC720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *a2 = v14;
  return result;
}

void sub_22D2B93F0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_26AEC1C58 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_22D2BC390();
  __swift_project_value_buffer(v5, (uint64_t)qword_26AEC3C90);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v6 = sub_22D2BC380();
  os_log_type_t v7 = sub_22D2BD080();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v12 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    sub_22D0A4D24(a2, a3, &v12);
    sub_22D2BD220();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_22D2BBC90();
    sub_22D2B9658((unint64_t *)&qword_26853DF20, MEMORY[0x263F07508]);
    uint64_t v10 = sub_22D2BD630();
    sub_22D0A4D24(v10, v11, &v12);
    sub_22D2BD220();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CFEE000, v6, v7, "%s Fetching multi device details for  %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F7BDF0](v9, -1, -1);
    MEMORY[0x230F7BDF0](v8, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_22D2B9658(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22D2B96A0(void *a1, void *a2)
{
  return sub_22D2B9128(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_22D2B96C0(uint64_t a1, void (*a2)(id, id))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_22D2BD3D0();
    for (unint64_t i = (void **)(a1 + 40); ; i += 2)
    {
      uint64_t v8 = *i;
      id v9 = *(i - 1);
      id v10 = v8;
      a2(v9, v10);

      if (v2) {
        break;
      }
      sub_22D2BD3A0();
      sub_22D2BD3E0();
      sub_22D2BD3F0();
      sub_22D2BD3B0();
      if (!--v4) {
        return v11;
      }
    }
    return swift_release();
  }
  return result;
}

void sub_22D2B97C4()
{
  if (!qword_26AEC2C80)
  {
    sub_22D2B43C4();
    sub_22D073EB8(255);
    sub_22D2B9658((unint64_t *)&qword_26AEC1DA0, (void (*)(uint64_t))sub_22D2B43C4);
    unint64_t v0 = sub_22D2BC450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC2C80);
    }
  }
}

void sub_22D2B9870(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22D2BCE60();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22D2B98C4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22D2B98FC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *a2 = *(void *)(v2 + 16);
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_22D2B9948(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3)
  {
    sub_22D2BD310();
    swift_bridgeObjectRelease();
    strcpy((char *)v6, "Feature flag ");
    HIWORD(v6[1]) = -4864;
    sub_22D2BCCB0();
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    sub_22D2BD310();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v6[0] = a1;
    v6[1] = a2;
LABEL_5:
    sub_22D2BCCB0();
    return v6[0];
  }
  if (a1 | a2) {
    return 0xD00000000000002ALL;
  }
  else {
    return 0xD000000000000016;
  }
}

unint64_t sub_22D2B9A98()
{
  return sub_22D2B9948(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_22D2B9AA8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for DaemonError(uint64_t a1)
{
  return sub_22D2B9AD0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_22D2B9AD0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19HealthRecordsDaemon11DaemonErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_22D2B9AA8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DaemonError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_22D2B9AA8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_22D2B9AD0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DaemonError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_22D2B9AD0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DaemonError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DaemonError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22D2B9C60(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_22D2B9C78(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DaemonError()
{
  return &type metadata for DaemonError;
}

id sub_22D2B9CA0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = objc_allocWithZone(MEMORY[0x263F434E0]);
    int v4 = v2;
    uint64_t v5 = (void *)sub_22D2BCBA0();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v3, sel_initWithMachServiceName_, v5);
  }
  else
  {
    id v7 = objc_allocWithZone(MEMORY[0x263F434E0]);
    unsigned __int8 v8 = v2;
    uint64_t v5 = (void *)sub_22D2BCBA0();
    id v6 = objc_msgSend(v7, sel_initWithLabel_, v5);
  }
  id v9 = v6;

  *(void *)&v2[OBJC_IVAR____TtC19HealthRecordsDaemon26DaemonXPCConnectionManager_listener] = v9;
  *(void *)&v2[OBJC_IVAR____TtC19HealthRecordsDaemon26DaemonXPCConnectionManager_serviceMap] = sub_22D0D3BAC(MEMORY[0x263F8EE78]);

  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for DaemonXPCConnectionManager();
  return objc_msgSendSuper2(&v11, sel_init);
}

id sub_22D2B9DA4()
{
  sub_22D2BA110();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DaemonXPCConnectionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_22D2B9E70()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26DaemonXPCConnectionManager_serviceMap);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v20 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v11 = v10 | (v8 << 6);
  while (2)
  {
    uint64_t v12 = *(void *)(v2 + 56);
    unint64_t v13 = (void *)(*(void *)(v2 + 48) + 16 * v11);
    uint64_t v14 = v13[1];
    *(void *)&long long v21 = *v13;
    *((void *)&v21 + 1) = v14;
    sub_22CFF4B00(v12 + 40 * v11, (uint64_t)v22);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_22D2BB0B4((uint64_t)&v21, (uint64_t)v24, (uint64_t (*)(void))sub_22D2BB11C);
      if (!v25)
      {
        swift_release();
        uint64_t v18 = *(void **)(v19 + OBJC_IVAR____TtC19HealthRecordsDaemon26DaemonXPCConnectionManager_listener);
        objc_msgSend(v18, sel_setDelegate_);
        return objc_msgSend(v18, sel_resume);
      }
      swift_bridgeObjectRelease();
      sub_22CFF8C10(&v26, (uint64_t)&v21);
      id v9 = *(void **)(*__swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22[0] + 1))
                    + OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_listener);
      objc_msgSend(v9, sel_setDelegate_);
      objc_msgSend(v9, sel_resume);
      id result = (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
      if (v5) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v15 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v15 < v6)
      {
        unint64_t v16 = *(void *)(v20 + 8 * v15);
        if (v16) {
          goto LABEL_11;
        }
        int64_t v17 = v8 + 2;
        ++v8;
        if (v15 + 1 < v6)
        {
          unint64_t v16 = *(void *)(v20 + 8 * v17);
          if (v16) {
            goto LABEL_14;
          }
          int64_t v8 = v15 + 1;
          if (v15 + 2 < v6)
          {
            unint64_t v16 = *(void *)(v20 + 8 * (v15 + 2));
            if (v16)
            {
              v15 += 2;
              goto LABEL_11;
            }
            int64_t v17 = v15 + 3;
            int64_t v8 = v15 + 2;
            if (v15 + 3 < v6) {
              break;
            }
          }
        }
      }
LABEL_25:
      unint64_t v5 = 0;
      uint64_t v23 = 0;
      memset(v22, 0, sizeof(v22));
      long long v21 = 0u;
    }
    unint64_t v16 = *(void *)(v20 + 8 * v17);
    if (v16)
    {
LABEL_14:
      int64_t v15 = v17;
LABEL_11:
      unint64_t v5 = (v16 - 1) & v16;
      unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
      int64_t v8 = v15;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v6)
    {
      int64_t v8 = v6 - 1;
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v20 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_22D2BA110()
{
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26DaemonXPCConnectionManager_listener), sel_invalidate);
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthRecordsDaemon26DaemonXPCConnectionManager_serviceMap);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v18 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v11 = v10 | (v8 << 6);
  while (2)
  {
    uint64_t v12 = *(void *)(v2 + 56);
    unint64_t v13 = (void *)(*(void *)(v2 + 48) + 16 * v11);
    uint64_t v14 = v13[1];
    *(void *)&long long v19 = *v13;
    *((void *)&v19 + 1) = v14;
    sub_22CFF4B00(v12 + 40 * v11, (uint64_t)v20);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_22D2BB0B4((uint64_t)&v19, (uint64_t)v22, (uint64_t (*)(void))sub_22D2BB11C);
      if (!v23) {
        return swift_release();
      }
      swift_bridgeObjectRelease();
      sub_22CFF8C10(&v24, (uint64_t)&v19);
      id v9 = *(void **)(*__swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20[0] + 1))
                    + OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_listener);
      objc_msgSend(v9, sel_setDelegate_, 0);
      objc_msgSend(v9, sel_invalidate);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
      if (v5) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v15 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v15 < v6)
      {
        unint64_t v16 = *(void *)(v18 + 8 * v15);
        if (v16) {
          goto LABEL_11;
        }
        int64_t v17 = v8 + 2;
        ++v8;
        if (v15 + 1 < v6)
        {
          unint64_t v16 = *(void *)(v18 + 8 * v17);
          if (v16) {
            goto LABEL_14;
          }
          int64_t v8 = v15 + 1;
          if (v15 + 2 < v6)
          {
            unint64_t v16 = *(void *)(v18 + 8 * (v15 + 2));
            if (v16)
            {
              v15 += 2;
              goto LABEL_11;
            }
            int64_t v17 = v15 + 3;
            int64_t v8 = v15 + 2;
            if (v15 + 3 < v6) {
              break;
            }
          }
        }
      }
LABEL_25:
      unint64_t v5 = 0;
      uint64_t v21 = 0;
      memset(v20, 0, sizeof(v20));
      long long v19 = 0u;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v17);
    if (v16)
    {
LABEL_14:
      int64_t v15 = v17;
LABEL_11:
      unint64_t v5 = (v16 - 1) & v16;
      unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
      int64_t v8 = v15;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v6)
    {
      int64_t v8 = v6 - 1;
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DaemonXPCConnectionManager()
{
  return self;
}

id sub_22D2BA508()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DaemonConnectionServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DaemonConnectionServer()
{
  return self;
}

void sub_22D2BA67C(uint64_t a1, id a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6)
{
  if (a2)
  {
    id v12 = a2;
    if (qword_26AEC1C58 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_22D2BC390();
    __swift_project_value_buffer(v13, (uint64_t)qword_26AEC3C90);
    id v14 = a2;
    swift_bridgeObjectRetain();
    id v15 = a5;
    id v16 = a2;
    swift_bridgeObjectRetain();
    int64_t v17 = (char *)v15;
    uint64_t v18 = sub_22D2BC380();
    os_log_type_t v19 = sub_22D2BD060();
    if (os_log_type_enabled(v18, v19))
    {
      os_log_type_t type = v19;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v33 = v31;
      *(_DWORD *)uint64_t v20 = 136315650;
      swift_bridgeObjectRetain();
      sub_22D0A4D24(a3, a4, &v33);
      sub_22D2BD220();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      id v21 = *(id *)&v17[OBJC_IVAR____TtC19HealthRecordsDaemon22DaemonConnectionServer_client];
      id v22 = objc_msgSend(v21, sel_description);
      uint64_t v23 = sub_22D2BCBD0();
      log = v18;
      unint64_t v25 = v24;

      sub_22D0A4D24(v23, v25, &v33);
      sub_22D2BD220();

      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2080;
      id v26 = a2;
      sub_22D021C20(0, (unint64_t *)&qword_26AEC1FB0);
      uint64_t v27 = sub_22D2BCC30();
      sub_22D0A4D24(v27, v28, &v33);
      sub_22D2BD220();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CFEE000, log, type, "Not returning endpoint for %s to %s: %s", (uint8_t *)v20, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F7BDF0](v31, -1, -1);
      MEMORY[0x230F7BDF0](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v29 = (void *)sub_22D2BB9B0();
  }
  else
  {
    uint64_t v29 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, void *))(a6 + 16))(a6, a1, v29);
}

void sub_22D2BA9DC(uint64_t a1, unint64_t a2, char *a3, void *aBlock)
{
  uint64_t v8 = *(void *)&a3[OBJC_IVAR____TtC19HealthRecordsDaemon22DaemonConnectionServer_serviceMap];
  if (*(void *)(v8 + 16))
  {
    _Block_copy(aBlock);
    _Block_copy(aBlock);
    _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_22D04EB7C(a1, a2);
    if (v10)
    {
      sub_22CFF4B00(*(void *)(v8 + 56) + 40 * v9, (uint64_t)&v31);
      swift_bridgeObjectRelease();
      if (*((void *)&v32 + 1))
      {
        sub_22CFF8C10(&v31, (uint64_t)&v34);
        __swift_project_boxed_opaque_existential_1(&v34, v36);
        id v14 = *(void **)&a3[OBJC_IVAR____TtC19HealthRecordsDaemon22DaemonConnectionServer_client];
        swift_bridgeObjectRetain();
        id v15 = objc_msgSend(v14, sel_connection);
        if (v15)
        {
          id v16 = v15;
          int64_t v17 = (void *)sub_22D2BCBA0();
          id v18 = objc_msgSend(v16, sel_valueForEntitlement_, v17);

          if (v18)
          {
            sub_22D2BD260();
            swift_unknownObjectRelease();
          }
          else
          {
            *(_OWORD *)uint64_t v27 = 0u;
            long long v28 = 0u;
          }
          sub_22D2BB0B4((uint64_t)v27, (uint64_t)&v29, (uint64_t (*)(void))sub_22CFF59F4);
          if (*((void *)&v30 + 1))
          {
            sub_22D056B08(&v29, &v31);
            sub_22CFF5A90((uint64_t)&v31, (uint64_t)&v29);
            sub_22D03490C();
            if (swift_dynamicCast())
            {
              id v19 = v27[0];
              if (objc_msgSend(v27[0], sel_BOOLValue))
              {
                swift_bridgeObjectRelease();
                id v20 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(&v34, v36)+ OBJC_IVAR____TtC19HealthRecordsDaemon23DefaultDaemonXPCService_listener), sel_endpoint);
                (*((void (**)(void *, id, void))aBlock + 2))(aBlock, v20, 0);

LABEL_21:
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
                goto LABEL_22;
              }
            }
            unint64_t v24 = self;
            *(void *)&long long v29 = 0;
            *((void *)&v29 + 1) = 0xE000000000000000;
            sub_22D2BD310();
            swift_bridgeObjectRelease();
            *(void *)&long long v29 = 0xD000000000000013;
            *((void *)&v29 + 1) = 0x800000022D2E0790;
            sub_22D2BCCB0();
            swift_bridgeObjectRelease();
            sub_22D2BCCB0();
            unint64_t v25 = (void *)sub_22D2BCBA0();
            swift_bridgeObjectRelease();
            id v26 = objc_msgSend(v24, sel_hk_error_description_, 4, v25);

            _Block_copy(aBlock);
            sub_22D2BA67C(0, v26, a1, a2, a3, (uint64_t)aBlock);
            _Block_release(aBlock);

            goto LABEL_21;
          }
        }
        else
        {
          long long v29 = 0u;
          long long v30 = 0u;
        }
        sub_22D2BB054((uint64_t)&v29, (uint64_t (*)(void))sub_22CFF59F4);
        id v21 = self;
        *(void *)&long long v31 = 0;
        *((void *)&v31 + 1) = 0xE000000000000000;
        sub_22D2BD310();
        swift_bridgeObjectRelease();
        *(void *)&long long v31 = 0x20676E697373694DLL;
        *((void *)&v31 + 1) = 0xE900000000000022;
        sub_22D2BCCB0();
        swift_bridgeObjectRelease();
        sub_22D2BCCB0();
        id v22 = (void *)sub_22D2BCBA0();
        swift_bridgeObjectRelease();
        id v23 = objc_msgSend(v21, sel_hk_error_description_, 4, v22);

        _Block_copy(aBlock);
        sub_22D2BA67C(0, v23, a1, a2, a3, (uint64_t)aBlock);
        _Block_release(aBlock);

LABEL_22:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
    _Block_copy(aBlock);
    _Block_copy(aBlock);
    _Block_copy(aBlock);
  }
  sub_22D2BB054((uint64_t)&v31, (uint64_t (*)(void))sub_22D2BAFEC);
  unint64_t v11 = self;
  uint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  sub_22D2BD310();
  swift_bridgeObjectRelease();
  uint64_t v34 = 0x2065636976726553;
  unint64_t v35 = 0xE900000000000022;
  sub_22D2BCCB0();
  sub_22D2BCCB0();
  id v12 = (void *)sub_22D2BCBA0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_hk_error_description_, 3, v12);

  _Block_copy(aBlock);
  sub_22D2BA67C(0, v13, a1, a2, a3, (uint64_t)aBlock);
  _Block_release(aBlock);

LABEL_8:
  _Block_release(aBlock);
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_22D2BAFEC()
{
  if (!qword_2685440F0)
  {
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1130);
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2685440F0);
    }
  }
}

uint64_t sub_22D2BB054(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22D2BB0B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22D2BB11C()
{
  if (!qword_26AEC1E58)
  {
    sub_22D2BB174();
    unint64_t v0 = sub_22D2BD200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AEC1E58);
    }
  }
}

void sub_22D2BB174()
{
  if (!qword_26AEC1E40[0])
  {
    sub_22D021C20(255, (unint64_t *)&qword_26AEC1130);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, qword_26AEC1E40);
    }
  }
}

void sub_22D2BB1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  id v7 = objc_allocWithZone(MEMORY[0x263F44BF0]);
  swift_retain();
  id v8 = objc_msgSend(v7, sel_initWithHealthStore_, a3);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_22D034BAC;
  *(void *)(v9 + 24) = v6;
  _OWORD v11[4] = sub_22D2BB418;
  v11[5] = v9;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_22D2BB420;
  v11[3] = &block_descriptor_25;
  char v10 = _Block_copy(v11);
  swift_release();
  objc_msgSend(v8, sel_fetchAllSchedulesWithCompletion_, v10);
  _Block_release(v10);
}

uint64_t sub_22D2BB328()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22D2BB360(void *a1, id a2, void (*a3)(id, BOOL))
{
  id v5 = a1;
  if (!a1)
  {
    id v5 = a2;
    if (!a2)
    {
      sub_22D04C890();
      id v5 = (id)swift_allocError();
      *(void *)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      *(unsigned char *)(v7 + 16) = 2;
    }
    id v8 = a2;
  }
  swift_bridgeObjectRetain();
  a3(v5, a1 == 0);
  sub_22D0AF638(v5, a1 == 0);
}

void sub_22D2BB418(void *a1, void *a2)
{
  sub_22D2BB360(a1, a2, *(void (**)(id, BOOL))(v2 + 16));
}

uint64_t sub_22D2BB420(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_22D2BB4CC();
    uint64_t v4 = sub_22D2BCE00();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

unint64_t sub_22D2BB4CC()
{
  unint64_t result = qword_26853E498;
  if (!qword_26853E498)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26853E498);
  }
  return result;
}

uint64_t sub_22D2BB510()
{
  return MEMORY[0x270EEDBA0]();
}

uint64_t sub_22D2BB520()
{
  return MEMORY[0x270EEDBB0]();
}

uint64_t sub_22D2BB530()
{
  return MEMORY[0x270EEDBC0]();
}

uint64_t sub_22D2BB540()
{
  return MEMORY[0x270EEDBD0]();
}

uint64_t sub_22D2BB550()
{
  return MEMORY[0x270EEDBE8]();
}

uint64_t sub_22D2BB560()
{
  return MEMORY[0x270EEDC50]();
}

uint64_t sub_22D2BB570()
{
  return MEMORY[0x270EEDC68]();
}

uint64_t sub_22D2BB580()
{
  return MEMORY[0x270EEDC80]();
}

uint64_t sub_22D2BB590()
{
  return MEMORY[0x270EEDC90]();
}

uint64_t sub_22D2BB5A0()
{
  return MEMORY[0x270EEDCA0]();
}

uint64_t sub_22D2BB5B0()
{
  return MEMORY[0x270EEDCB8]();
}

uint64_t sub_22D2BB5C0()
{
  return MEMORY[0x270EEDD88]();
}

uint64_t sub_22D2BB5D0()
{
  return MEMORY[0x270EEDDA0]();
}

uint64_t sub_22D2BB5E0()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_22D2BB5F0()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_22D2BB600()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_22D2BB610()
{
  return MEMORY[0x270EEDE38]();
}

uint64_t sub_22D2BB620()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_22D2BB630()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_22D2BB640()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_22D2BB650()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_22D2BB660()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_22D2BB670()
{
  return MEMORY[0x270EEE2C8]();
}

uint64_t sub_22D2BB680()
{
  return MEMORY[0x270EEE2E8]();
}

uint64_t sub_22D2BB690()
{
  return MEMORY[0x270EEE2F0]();
}

uint64_t sub_22D2BB6A0()
{
  return MEMORY[0x270EEE2F8]();
}

uint64_t sub_22D2BB6B0()
{
  return MEMORY[0x270EEE300]();
}

uint64_t sub_22D2BB6C0()
{
  return MEMORY[0x270EEE308]();
}

uint64_t sub_22D2BB6D0()
{
  return MEMORY[0x270EEE318]();
}

uint64_t sub_22D2BB6E0()
{
  return MEMORY[0x270EF30A0]();
}

uint64_t sub_22D2BB6F0()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_22D2BB700()
{
  return MEMORY[0x270EEE3E0]();
}

uint64_t sub_22D2BB710()
{
  return MEMORY[0x270EEE410]();
}

uint64_t sub_22D2BB720()
{
  return MEMORY[0x270EEE4C0]();
}

uint64_t sub_22D2BB730()
{
  return MEMORY[0x270EEE518]();
}

uint64_t sub_22D2BB740()
{
  return MEMORY[0x270EEE520]();
}

uint64_t sub_22D2BB750()
{
  return MEMORY[0x270EEE558]();
}

uint64_t sub_22D2BB760()
{
  return MEMORY[0x270EEE568]();
}

uint64_t sub_22D2BB770()
{
  return MEMORY[0x270EEE5C0]();
}

uint64_t sub_22D2BB780()
{
  return MEMORY[0x270EEE5E0]();
}

uint64_t sub_22D2BB790()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_22D2BB7A0()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_22D2BB7B0()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_22D2BB7C0()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_22D2BB7D0()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_22D2BB7E0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_22D2BB7F0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_22D2BB800()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_22D2BB810()
{
  return MEMORY[0x270EEE738]();
}

uint64_t sub_22D2BB820()
{
  return MEMORY[0x270EEE760]();
}

uint64_t sub_22D2BB830()
{
  return MEMORY[0x270EEE780]();
}

uint64_t sub_22D2BB840()
{
  return MEMORY[0x270EEE7B0]();
}

uint64_t sub_22D2BB850()
{
  return MEMORY[0x270EEE7B8]();
}

uint64_t sub_22D2BB860()
{
  return MEMORY[0x270EEE7C8]();
}

uint64_t sub_22D2BB870()
{
  return MEMORY[0x270EEE7F0]();
}

uint64_t sub_22D2BB880()
{
  return MEMORY[0x270EEE810]();
}

uint64_t sub_22D2BB890()
{
  return MEMORY[0x270EEE828]();
}

uint64_t sub_22D2BB8A0()
{
  return MEMORY[0x270EEE838]();
}

uint64_t sub_22D2BB8B0()
{
  return MEMORY[0x270EEE848]();
}

uint64_t sub_22D2BB8C0()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_22D2BB8D0()
{
  return MEMORY[0x270EEE8B0]();
}

uint64_t sub_22D2BB8E0()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_22D2BB8F0()
{
  return MEMORY[0x270EEE908]();
}

uint64_t sub_22D2BB900()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_22D2BB910()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_22D2BB920()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_22D2BB930()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_22D2BB970()
{
  return MEMORY[0x270EEF7B8]();
}

uint64_t sub_22D2BB980()
{
  return MEMORY[0x270EEF7C8]();
}

uint64_t sub_22D2BB9B0()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_22D2BB9C0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_22D2BB9D0()
{
  return MEMORY[0x270EEFBD0]();
}

uint64_t sub_22D2BB9E0()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_22D2BB9F0()
{
  return MEMORY[0x270EEFC70]();
}

uint64_t sub_22D2BBA00()
{
  return MEMORY[0x270EEFCA0]();
}

uint64_t sub_22D2BBA10()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_22D2BBA20()
{
  return MEMORY[0x270EEFD70]();
}

uint64_t sub_22D2BBA30()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_22D2BBA40()
{
  return MEMORY[0x270EEFDC0]();
}

uint64_t sub_22D2BBA50()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_22D2BBA60()
{
  return MEMORY[0x270EEFE60]();
}

uint64_t sub_22D2BBA70()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_22D2BBA80()
{
  return MEMORY[0x270EEFEE0]();
}

uint64_t sub_22D2BBA90()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_22D2BBAA0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_22D2BBAB0()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_22D2BBAC0()
{
  return MEMORY[0x270EF0060]();
}

uint64_t sub_22D2BBAD0()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_22D2BBAE0()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_22D2BBAF0()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_22D2BBB00()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_22D2BBB10()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_22D2BBB20()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_22D2BBB30()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_22D2BBB40()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_22D2BBB50()
{
  return MEMORY[0x270EF02B0]();
}

uint64_t sub_22D2BBB60()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_22D2BBB70()
{
  return MEMORY[0x270EF02D8]();
}

uint64_t sub_22D2BBB80()
{
  return MEMORY[0x270EF0700]();
}

uint64_t sub_22D2BBB90()
{
  return MEMORY[0x270EF07A0]();
}

uint64_t sub_22D2BBBA0()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_22D2BBBB0()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_22D2BBBC0()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_22D2BBBD0()
{
  return MEMORY[0x270EF09A8]();
}

uint64_t sub_22D2BBBE0()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_22D2BBBF0()
{
  return MEMORY[0x270EF09E0]();
}

uint64_t sub_22D2BBC00()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_22D2BBC10()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_22D2BBC20()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_22D2BBC30()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_22D2BBC40()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_22D2BBC50()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_22D2BBC60()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_22D2BBC70()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_22D2BBC80()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_22D2BBC90()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_22D2BBCA0()
{
  return MEMORY[0x270EF0ED0]();
}

uint64_t sub_22D2BBCB0()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_22D2BBCC0()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_22D2BBCD0()
{
  return MEMORY[0x270EF10E0]();
}

uint64_t sub_22D2BBCE0()
{
  return MEMORY[0x270EF1100]();
}

uint64_t sub_22D2BBCF0()
{
  return MEMORY[0x270EF1160]();
}

uint64_t sub_22D2BBD00()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_22D2BBD10()
{
  return MEMORY[0x270EF1280]();
}

uint64_t sub_22D2BBD20()
{
  return MEMORY[0x270EF12C0]();
}

uint64_t sub_22D2BBD30()
{
  return MEMORY[0x270EF12C8]();
}

uint64_t sub_22D2BBD40()
{
  return MEMORY[0x270EF1350]();
}

uint64_t sub_22D2BBD50()
{
  return MEMORY[0x270EF1368]();
}

uint64_t sub_22D2BBD60()
{
  return MEMORY[0x270EF1378]();
}

uint64_t sub_22D2BBD70()
{
  return MEMORY[0x270EF1388]();
}

uint64_t sub_22D2BBD80()
{
  return MEMORY[0x270EF13C0]();
}

uint64_t sub_22D2BBD90()
{
  return MEMORY[0x270EF13C8]();
}

uint64_t sub_22D2BBDA0()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_22D2BBDB0()
{
  return MEMORY[0x270EF13F0]();
}

uint64_t sub_22D2BBDC0()
{
  return MEMORY[0x270EF1400]();
}

uint64_t sub_22D2BBDD0()
{
  return MEMORY[0x270EF1410]();
}

uint64_t sub_22D2BBDE0()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_22D2BBDF0()
{
  return MEMORY[0x270EF1430]();
}

uint64_t sub_22D2BBE00()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_22D2BBE10()
{
  return MEMORY[0x270EF1580]();
}

uint64_t sub_22D2BBE20()
{
  return MEMORY[0x270EF1588]();
}

uint64_t sub_22D2BBE30()
{
  return MEMORY[0x270EF15C8]();
}

uint64_t sub_22D2BBE40()
{
  return MEMORY[0x270EF15E8]();
}

uint64_t sub_22D2BBE50()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_22D2BBE60()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_22D2BBE70()
{
  return MEMORY[0x270EF1668]();
}

uint64_t sub_22D2BBE80()
{
  return MEMORY[0x270EF1670]();
}

uint64_t sub_22D2BBE90()
{
  return MEMORY[0x270EF1690]();
}

uint64_t sub_22D2BBEA0()
{
  return MEMORY[0x270EF16A8]();
}

uint64_t sub_22D2BBEB0()
{
  return MEMORY[0x270EF16B0]();
}

uint64_t sub_22D2BBEC0()
{
  return MEMORY[0x270EF16C8]();
}

uint64_t sub_22D2BBED0()
{
  return MEMORY[0x270F34FB8]();
}

uint64_t sub_22D2BBEE0()
{
  return MEMORY[0x270F34FC0]();
}

uint64_t sub_22D2BBEF0()
{
  return MEMORY[0x270F350C8]();
}

uint64_t sub_22D2BBF00()
{
  return MEMORY[0x270F350D0]();
}

uint64_t sub_22D2BBF10()
{
  return MEMORY[0x270F370E0]();
}

uint64_t sub_22D2BBF20()
{
  return MEMORY[0x270F370E8]();
}

uint64_t sub_22D2BBF30()
{
  return MEMORY[0x270F370F0]();
}

uint64_t sub_22D2BBF40()
{
  return MEMORY[0x270F370F8]();
}

uint64_t sub_22D2BBF50()
{
  return MEMORY[0x270F37100]();
}

uint64_t sub_22D2BBF60()
{
  return MEMORY[0x270F37108]();
}

uint64_t sub_22D2BBF70()
{
  return MEMORY[0x270F37120]();
}

uint64_t sub_22D2BBF80()
{
  return MEMORY[0x270F37128]();
}

uint64_t sub_22D2BBF90()
{
  return MEMORY[0x270F37130]();
}

uint64_t sub_22D2BBFA0()
{
  return MEMORY[0x270F44698]();
}

uint64_t sub_22D2BBFB0()
{
  return MEMORY[0x270F446A0]();
}

uint64_t sub_22D2BBFC0()
{
  return MEMORY[0x270F449C8]();
}

uint64_t sub_22D2BBFD0()
{
  return MEMORY[0x270F44A18]();
}

uint64_t sub_22D2BBFE0()
{
  return MEMORY[0x270F44A20]();
}

uint64_t sub_22D2BBFF0()
{
  return MEMORY[0x270F44A28]();
}

uint64_t sub_22D2BC000()
{
  return MEMORY[0x270F44A68]();
}

uint64_t sub_22D2BC010()
{
  return MEMORY[0x270F44A90]();
}

uint64_t sub_22D2BC020()
{
  return MEMORY[0x270F44A98]();
}

uint64_t sub_22D2BC030()
{
  return MEMORY[0x270F44AA8]();
}

uint64_t sub_22D2BC040()
{
  return MEMORY[0x270F44AB0]();
}

uint64_t sub_22D2BC050()
{
  return MEMORY[0x270F44AD8]();
}

uint64_t sub_22D2BC080()
{
  return MEMORY[0x270F44B10]();
}

uint64_t sub_22D2BC090()
{
  return MEMORY[0x270F44B20]();
}

uint64_t sub_22D2BC0A0()
{
  return MEMORY[0x270F44B30]();
}

uint64_t sub_22D2BC0B0()
{
  return MEMORY[0x270F44B40]();
}

uint64_t sub_22D2BC0C0()
{
  return MEMORY[0x270F44B48]();
}

uint64_t sub_22D2BC0D0()
{
  return MEMORY[0x270F44B50]();
}

uint64_t sub_22D2BC0E0()
{
  return MEMORY[0x270F44B58]();
}

uint64_t sub_22D2BC0F0()
{
  return MEMORY[0x270F44B60]();
}

uint64_t sub_22D2BC100()
{
  return MEMORY[0x270F44B78]();
}

uint64_t sub_22D2BC110()
{
  return MEMORY[0x270F44B80]();
}

uint64_t sub_22D2BC120()
{
  return MEMORY[0x270F44B90]();
}

uint64_t sub_22D2BC130()
{
  return MEMORY[0x270F44BA0]();
}

uint64_t sub_22D2BC140()
{
  return MEMORY[0x270F44BC0]();
}

uint64_t sub_22D2BC150()
{
  return MEMORY[0x270F44BE0]();
}

uint64_t sub_22D2BC160()
{
  return MEMORY[0x270F44BF0]();
}

uint64_t sub_22D2BC170()
{
  return MEMORY[0x270F44BF8]();
}

uint64_t sub_22D2BC180()
{
  return MEMORY[0x270F44C08]();
}

uint64_t sub_22D2BC190()
{
  return MEMORY[0x270F44C20]();
}

uint64_t sub_22D2BC1A0()
{
  return MEMORY[0x270F44C38]();
}

uint64_t sub_22D2BC1B0()
{
  return MEMORY[0x270F44C80]();
}

uint64_t sub_22D2BC1C0()
{
  return MEMORY[0x270F44C98]();
}

uint64_t sub_22D2BC1D0()
{
  return MEMORY[0x270F44CA0]();
}

uint64_t sub_22D2BC1E0()
{
  return MEMORY[0x270F44CA8]();
}

uint64_t sub_22D2BC200()
{
  return MEMORY[0x270F44CD8]();
}

uint64_t sub_22D2BC210()
{
  return MEMORY[0x270F44D20]();
}

uint64_t sub_22D2BC220()
{
  return MEMORY[0x270F44D28]();
}

uint64_t sub_22D2BC230()
{
  return MEMORY[0x270F44D60]();
}

uint64_t sub_22D2BC240()
{
  return MEMORY[0x270F44D68]();
}

uint64_t sub_22D2BC250()
{
  return MEMORY[0x270F44D70]();
}

uint64_t sub_22D2BC260()
{
  return MEMORY[0x270F44D88]();
}

uint64_t sub_22D2BC270()
{
  return MEMORY[0x270F44D90]();
}

uint64_t sub_22D2BC280()
{
  return MEMORY[0x270F44D98]();
}

uint64_t sub_22D2BC290()
{
  return MEMORY[0x270F44DB0]();
}

uint64_t sub_22D2BC2A0()
{
  return MEMORY[0x270F44DC8]();
}

uint64_t sub_22D2BC2B0()
{
  return MEMORY[0x270F44DD8]();
}

uint64_t sub_22D2BC2C0()
{
  return MEMORY[0x270F44DE0]();
}

uint64_t sub_22D2BC2D0()
{
  return MEMORY[0x270F44DF0]();
}

uint64_t sub_22D2BC2E0()
{
  return MEMORY[0x270F44E00]();
}

uint64_t sub_22D2BC2F0()
{
  return MEMORY[0x270F44E10]();
}

uint64_t sub_22D2BC300()
{
  return MEMORY[0x270F44E18]();
}

uint64_t sub_22D2BC310()
{
  return MEMORY[0x270F44E28]();
}

uint64_t sub_22D2BC320()
{
  return MEMORY[0x270F37DA0]();
}

uint64_t sub_22D2BC330()
{
  return MEMORY[0x270F37DA8]();
}

uint64_t sub_22D2BC340()
{
  return MEMORY[0x270F37DB0]();
}

uint64_t sub_22D2BC350()
{
  return MEMORY[0x270F37DB8]();
}

uint64_t sub_22D2BC360()
{
  return MEMORY[0x270F37DC0]();
}

uint64_t sub_22D2BC370()
{
  return MEMORY[0x270F37DC8]();
}

uint64_t sub_22D2BC380()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_22D2BC390()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_22D2BC3A0()
{
  return MEMORY[0x270FA2E30]();
}

uint64_t sub_22D2BC3B0()
{
  return MEMORY[0x270EE3840]();
}

uint64_t sub_22D2BC3C0()
{
  return MEMORY[0x270EE3870]();
}

uint64_t sub_22D2BC3D0()
{
  return MEMORY[0x270EE3880]();
}

uint64_t sub_22D2BC3E0()
{
  return MEMORY[0x270EE38B0]();
}

uint64_t sub_22D2BC3F0()
{
  return MEMORY[0x270EE38C8]();
}

uint64_t sub_22D2BC400()
{
  return MEMORY[0x270EE38D0]();
}

uint64_t sub_22D2BC410()
{
  return MEMORY[0x270EE38D8]();
}

uint64_t sub_22D2BC420()
{
  return MEMORY[0x270EE38F8]();
}

uint64_t sub_22D2BC430()
{
  return MEMORY[0x270EE3900]();
}

uint64_t sub_22D2BC440()
{
  return MEMORY[0x270EE3948]();
}

uint64_t sub_22D2BC450()
{
  return MEMORY[0x270EE3950]();
}

uint64_t sub_22D2BC460()
{
  return MEMORY[0x270EE3958]();
}

uint64_t sub_22D2BC470()
{
  return MEMORY[0x270EE3960]();
}

uint64_t sub_22D2BC480()
{
  return MEMORY[0x270EE3978]();
}

uint64_t sub_22D2BC490()
{
  return MEMORY[0x270EE3980]();
}

uint64_t sub_22D2BC4A0()
{
  return MEMORY[0x270EE3988]();
}

uint64_t sub_22D2BC4B0()
{
  return MEMORY[0x270EE3998]();
}

uint64_t sub_22D2BC4C0()
{
  return MEMORY[0x270EE39A8]();
}

uint64_t sub_22D2BC4D0()
{
  return MEMORY[0x270EE39B0]();
}

uint64_t sub_22D2BC4E0()
{
  return MEMORY[0x270EE39B8]();
}

uint64_t sub_22D2BC4F0()
{
  return MEMORY[0x270EE3A30]();
}

uint64_t sub_22D2BC500()
{
  return MEMORY[0x270EE3A38]();
}

uint64_t sub_22D2BC510()
{
  return MEMORY[0x270EE3A40]();
}

uint64_t sub_22D2BC520()
{
  return MEMORY[0x270EE3A48]();
}

uint64_t sub_22D2BC530()
{
  return MEMORY[0x270EE3A60]();
}

uint64_t sub_22D2BC540()
{
  return MEMORY[0x270EE3A70]();
}

uint64_t sub_22D2BC550()
{
  return MEMORY[0x270EE3A78]();
}

uint64_t sub_22D2BC560()
{
  return MEMORY[0x270EE3A90]();
}

uint64_t sub_22D2BC570()
{
  return MEMORY[0x270EE3AA0]();
}

uint64_t sub_22D2BC580()
{
  return MEMORY[0x270EE3AB8]();
}

uint64_t sub_22D2BC590()
{
  return MEMORY[0x270EE3AC0]();
}

uint64_t sub_22D2BC5A0()
{
  return MEMORY[0x270EE3AF8]();
}

uint64_t sub_22D2BC5B0()
{
  return MEMORY[0x270EE3B10]();
}

uint64_t sub_22D2BC5C0()
{
  return MEMORY[0x270EE3B20]();
}

uint64_t sub_22D2BC5D0()
{
  return MEMORY[0x270EE3B50]();
}

uint64_t sub_22D2BC5E0()
{
  return MEMORY[0x270EE3B60]();
}

uint64_t sub_22D2BC5F0()
{
  return MEMORY[0x270EE3B98]();
}

uint64_t sub_22D2BC600()
{
  return MEMORY[0x270EE3BA8]();
}

uint64_t sub_22D2BC610()
{
  return MEMORY[0x270EE3BB0]();
}

uint64_t sub_22D2BC620()
{
  return MEMORY[0x270EE3C88]();
}

uint64_t sub_22D2BC630()
{
  return MEMORY[0x270EE3CA8]();
}

uint64_t sub_22D2BC640()
{
  return MEMORY[0x270EE3CB8]();
}

uint64_t sub_22D2BC650()
{
  return MEMORY[0x270EE3CF8]();
}

uint64_t sub_22D2BC660()
{
  return MEMORY[0x270EE3D00]();
}

uint64_t sub_22D2BC670()
{
  return MEMORY[0x270EE3D08]();
}

uint64_t sub_22D2BC680()
{
  return MEMORY[0x270EE3D18]();
}

uint64_t sub_22D2BC690()
{
  return MEMORY[0x270EE3D30]();
}

uint64_t sub_22D2BC6A0()
{
  return MEMORY[0x270EE3D38]();
}

uint64_t sub_22D2BC6B0()
{
  return MEMORY[0x270EE3D40]();
}

uint64_t sub_22D2BC6C0()
{
  return MEMORY[0x270EE3D50]();
}

uint64_t sub_22D2BC6D0()
{
  return MEMORY[0x270EE3D58]();
}

uint64_t sub_22D2BC6E0()
{
  return MEMORY[0x270EE3D68]();
}

uint64_t sub_22D2BC6F0()
{
  return MEMORY[0x270EE3D78]();
}

uint64_t sub_22D2BC700()
{
  return MEMORY[0x270EE3D98]();
}

uint64_t sub_22D2BC710()
{
  return MEMORY[0x270EE3DA0]();
}

uint64_t sub_22D2BC720()
{
  return MEMORY[0x270EE3E08]();
}

uint64_t sub_22D2BC730()
{
  return MEMORY[0x270EE3E18]();
}

uint64_t sub_22D2BC740()
{
  return MEMORY[0x270EE3E20]();
}

uint64_t sub_22D2BC750()
{
  return MEMORY[0x270EE3E28]();
}

uint64_t sub_22D2BC760()
{
  return MEMORY[0x270EE3E30]();
}

uint64_t sub_22D2BC770()
{
  return MEMORY[0x270EE3E50]();
}

uint64_t sub_22D2BC780()
{
  return MEMORY[0x270EE3E78]();
}

uint64_t sub_22D2BC790()
{
  return MEMORY[0x270EE3E98]();
}

uint64_t sub_22D2BC7A0()
{
  return MEMORY[0x270EE3EA0]();
}

uint64_t sub_22D2BC7B0()
{
  return MEMORY[0x270EE3EB8]();
}

uint64_t sub_22D2BC7C0()
{
  return MEMORY[0x270EE3EF8]();
}

uint64_t sub_22D2BC7D0()
{
  return MEMORY[0x270EE3F00]();
}

uint64_t sub_22D2BC7E0()
{
  return MEMORY[0x270EE3F08]();
}

uint64_t sub_22D2BC7F0()
{
  return MEMORY[0x270EE3F30]();
}

uint64_t sub_22D2BC800()
{
  return MEMORY[0x270EE3F40]();
}

uint64_t sub_22D2BC810()
{
  return MEMORY[0x270EE3F50]();
}

uint64_t sub_22D2BC820()
{
  return MEMORY[0x270EE3F58]();
}

uint64_t sub_22D2BC830()
{
  return MEMORY[0x270EE3F60]();
}

uint64_t sub_22D2BC840()
{
  return MEMORY[0x270EE3F98]();
}

uint64_t sub_22D2BC850()
{
  return MEMORY[0x270EE3FA8]();
}

uint64_t sub_22D2BC860()
{
  return MEMORY[0x270EE3FD0]();
}

uint64_t sub_22D2BC870()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_22D2BC880()
{
  return MEMORY[0x270EE4028]();
}

uint64_t sub_22D2BC890()
{
  return MEMORY[0x270EE4030]();
}

uint64_t sub_22D2BC8A0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_22D2BC8B0()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_22D2BC8C0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_22D2BC8D0()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_22D2BC8E0()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_22D2BC8F0()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_22D2BC900()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_22D2BC910()
{
  return MEMORY[0x270EEAAA8]();
}

uint64_t sub_22D2BC920()
{
  return MEMORY[0x270EEAAF0]();
}

uint64_t sub_22D2BC930()
{
  return MEMORY[0x270EEAB10]();
}

uint64_t sub_22D2BC940()
{
  return MEMORY[0x270EEAB30]();
}

uint64_t sub_22D2BC950()
{
  return MEMORY[0x270EEABA0]();
}

uint64_t sub_22D2BC960()
{
  return MEMORY[0x270EEABA8]();
}

uint64_t sub_22D2BC970()
{
  return MEMORY[0x270EEABB0]();
}

uint64_t sub_22D2BC980()
{
  return MEMORY[0x270EEABB8]();
}

uint64_t sub_22D2BC990()
{
  return MEMORY[0x270EEABC0]();
}

uint64_t sub_22D2BC9A0()
{
  return MEMORY[0x270EEABC8]();
}

uint64_t sub_22D2BC9B0()
{
  return MEMORY[0x270EEABF0]();
}

uint64_t sub_22D2BC9C0()
{
  return MEMORY[0x270EEAC08]();
}

uint64_t sub_22D2BC9D0()
{
  return MEMORY[0x270EEAC58]();
}

uint64_t sub_22D2BC9E0()
{
  return MEMORY[0x270EEAC70]();
}

uint64_t sub_22D2BC9F0()
{
  return MEMORY[0x270EEAC80]();
}

uint64_t sub_22D2BCA00()
{
  return MEMORY[0x270EEAC88]();
}

uint64_t sub_22D2BCA10()
{
  return MEMORY[0x270EEAC98]();
}

uint64_t sub_22D2BCA20()
{
  return MEMORY[0x270EEACA0]();
}

uint64_t sub_22D2BCA30()
{
  return MEMORY[0x270EEACD8]();
}

uint64_t sub_22D2BCA40()
{
  return MEMORY[0x270EEAFC0]();
}

uint64_t sub_22D2BCA50()
{
  return MEMORY[0x270EEAFD0]();
}

uint64_t sub_22D2BCA60()
{
  return MEMORY[0x270EEAFF0]();
}

uint64_t sub_22D2BCA70()
{
  return MEMORY[0x270EEB028]();
}

uint64_t sub_22D2BCA80()
{
  return MEMORY[0x270EEB060]();
}

uint64_t sub_22D2BCA90()
{
  return MEMORY[0x270EEB090]();
}

uint64_t sub_22D2BCAA0()
{
  return MEMORY[0x270EF3360]();
}

uint64_t sub_22D2BCAB0()
{
  return MEMORY[0x270EF3368]();
}

uint64_t sub_22D2BCAC0()
{
  return MEMORY[0x270EF3370]();
}

uint64_t sub_22D2BCAD0()
{
  return MEMORY[0x270EF3388]();
}

uint64_t sub_22D2BCAE0()
{
  return MEMORY[0x270EF3390]();
}

uint64_t sub_22D2BCAF0()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_22D2BCB00()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_22D2BCB10()
{
  return MEMORY[0x270F9D148]();
}

uint64_t sub_22D2BCB20()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_22D2BCB30()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_22D2BCB40()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_22D2BCB50()
{
  return MEMORY[0x270FA2B70]();
}

uint64_t sub_22D2BCB60()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_22D2BCB70()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_22D2BCB80()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_22D2BCB90()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_22D2BCBA0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_22D2BCBB0()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_22D2BCBC0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_22D2BCBD0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_22D2BCBE0()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_22D2BCBF0()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_22D2BCC00()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_22D2BCC10()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_22D2BCC20()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_22D2BCC30()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_22D2BCC40()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_22D2BCC50()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_22D2BCC60()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_22D2BCC70()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_22D2BCC80()
{
  return MEMORY[0x270F9D750]();
}

uint64_t sub_22D2BCC90()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_22D2BCCA0()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_22D2BCCB0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_22D2BCCC0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_22D2BCCD0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_22D2BCCE0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_22D2BCD00()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_22D2BCD10()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_22D2BCD20()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_22D2BCD30()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_22D2BCD40()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_22D2BCD50()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_22D2BCD60()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_22D2BCD70()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_22D2BCD80()
{
  return MEMORY[0x270EE4040]();
}

uint64_t sub_22D2BCD90()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_22D2BCDA0()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_22D2BCDB0()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_22D2BCDC0()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_22D2BCDD0()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_22D2BCDE0()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_22D2BCDF0()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_22D2BCE00()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_22D2BCE10()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_22D2BCE20()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_22D2BCE30()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_22D2BCE40()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_22D2BCE50()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_22D2BCE60()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_22D2BCE80()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_22D2BCE90()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_22D2BCEA0()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_22D2BCEB0()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_22D2BCEC0()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_22D2BCED0()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_22D2BCEE0()
{
  return MEMORY[0x270FA2040]();
}

uint64_t sub_22D2BCF00()
{
  return MEMORY[0x270FA2060]();
}

uint64_t sub_22D2BCF10()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_22D2BCF20()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_22D2BCF30()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_22D2BCF40()
{
  return MEMORY[0x270F9DFD0]();
}

uint64_t sub_22D2BCF50()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_22D2BCF60()
{
  return MEMORY[0x270EF1E90]();
}

uint64_t sub_22D2BCF70()
{
  return MEMORY[0x270EF1E98]();
}

uint64_t sub_22D2BCF90()
{
  return MEMORY[0x270F35138]();
}

uint64_t sub_22D2BCFA0()
{
  return MEMORY[0x270F35148]();
}

uint64_t sub_22D2BCFB0()
{
  return MEMORY[0x270F35178]();
}

uint64_t sub_22D2BCFC0()
{
  return MEMORY[0x270F35180]();
}

uint64_t sub_22D2BCFD0()
{
  return MEMORY[0x270F351A0]();
}

uint64_t sub_22D2BCFE0()
{
  return MEMORY[0x270F351B8]();
}

uint64_t sub_22D2BCFF0()
{
  return MEMORY[0x270F351C0]();
}

uint64_t sub_22D2BD000()
{
  return MEMORY[0x270F351D0]();
}

uint64_t sub_22D2BD010()
{
  return MEMORY[0x270F351D8]();
}

uint64_t sub_22D2BD020()
{
  return MEMORY[0x270F351E8]();
}

uint64_t sub_22D2BD030()
{
  return MEMORY[0x270F351F0]();
}

uint64_t sub_22D2BD040()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_22D2BD050()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_22D2BD060()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_22D2BD070()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_22D2BD080()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_22D2BD090()
{
  return MEMORY[0x270EF33E8]();
}

uint64_t sub_22D2BD0A0()
{
  return MEMORY[0x270EF33F0]();
}

uint64_t sub_22D2BD0B0()
{
  return MEMORY[0x270F35200]();
}

uint64_t sub_22D2BD0C0()
{
  return MEMORY[0x270EF33F8]();
}

uint64_t sub_22D2BD0D0()
{
  return MEMORY[0x270F35210]();
}

uint64_t sub_22D2BD0E0()
{
  return MEMORY[0x270F35228]();
}

uint64_t sub_22D2BD0F0()
{
  return MEMORY[0x270F37138]();
}

uint64_t sub_22D2BD100()
{
  return MEMORY[0x270F37140]();
}

uint64_t sub_22D2BD110()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_22D2BD120()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_22D2BD130()
{
  return MEMORY[0x270EF34E8]();
}

uint64_t sub_22D2BD140()
{
  return MEMORY[0x270EF34F0]();
}

uint64_t sub_22D2BD150()
{
  return MEMORY[0x270EF3580]();
}

uint64_t sub_22D2BD160()
{
  return MEMORY[0x270F352A8]();
}

uint64_t sub_22D2BD170()
{
  return MEMORY[0x270EF3598]();
}

uint64_t sub_22D2BD180()
{
  return MEMORY[0x270EF2198]();
}

uint64_t sub_22D2BD190()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_22D2BD1A0()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_22D2BD1B0()
{
  return MEMORY[0x270FA11A0]();
}

uint64_t sub_22D2BD1C0()
{
  return MEMORY[0x270EF21A8]();
}

uint64_t sub_22D2BD1D0()
{
  return MEMORY[0x270F352C0]();
}

uint64_t sub_22D2BD1E0()
{
  return MEMORY[0x270F352C8]();
}

uint64_t sub_22D2BD1F0()
{
  return MEMORY[0x270F9E3B0]();
}

uint64_t sub_22D2BD200()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_22D2BD210()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_22D2BD220()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_22D2BD230()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_22D2BD240()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_22D2BD250()
{
  return MEMORY[0x270F9E658]();
}

uint64_t sub_22D2BD260()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_22D2BD280()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_22D2BD290()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_22D2BD2A0()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_22D2BD2B0()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_22D2BD2C0()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_22D2BD2D0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_22D2BD2E0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_22D2BD2F0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_22D2BD300()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_22D2BD310()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_22D2BD320()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_22D2BD330()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_22D2BD340()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_22D2BD350()
{
  return MEMORY[0x270F9EA80]();
}

uint64_t sub_22D2BD360()
{
  return MEMORY[0x270F9EA88]();
}

uint64_t sub_22D2BD370()
{
  return MEMORY[0x270F9EA90]();
}

uint64_t sub_22D2BD380()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_22D2BD390()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_22D2BD3A0()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_22D2BD3B0()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_22D2BD3C0()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_22D2BD3D0()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_22D2BD3E0()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_22D2BD3F0()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_22D2BD400()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_22D2BD410()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_22D2BD420()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_22D2BD430()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_22D2BD440()
{
  return MEMORY[0x270F9ED90]();
}

uint64_t sub_22D2BD450()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_22D2BD460()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_22D2BD470()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_22D2BD480()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_22D2BD490()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_22D2BD4A0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_22D2BD4B0()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_22D2BD4C0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_22D2BD4E0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_22D2BD500()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_22D2BD510()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_22D2BD520()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_22D2BD530()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_22D2BD540()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_22D2BD550()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_22D2BD560()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_22D2BD570()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_22D2BD580()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_22D2BD590()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_22D2BD5A0()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_22D2BD5B0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_22D2BD5C0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_22D2BD5D0()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_22D2BD5E0()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_22D2BD5F0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_22D2BD600()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_22D2BD610()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_22D2BD620()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_22D2BD630()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_22D2BD640()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_22D2BD650()
{
  return MEMORY[0x270F9F730]();
}

uint64_t sub_22D2BD660()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_22D2BD680()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_22D2BD690()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_22D2BD6A0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_22D2BD6D0()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_22D2BD6E0()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_22D2BD6F0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_22D2BD700()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_22D2BD710()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_22D2BD720()
{
  return MEMORY[0x270EF26A0]();
}

uint64_t sub_22D2BD730()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_22D2BD740()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_22D2BD750()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_22D2BD760()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_22D2BD770()
{
  return MEMORY[0x270EE4058]();
}

uint64_t sub_22D2BD780()
{
  return MEMORY[0x270EE4068]();
}

uint64_t sub_22D2BD790()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_22D2BD7A0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_22D2BD7B0()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_22D2BD7D0()
{
  return MEMORY[0x270FA00A0]();
}

uint64_t sub_22D2BD800()
{
  return MEMORY[0x270FA0128]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x270F18A38]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x270F18A48]();
}

uint64_t DeviceIdentityIssueClientCertificateWithCompletion()
{
  return MEMORY[0x270F25E68]();
}

uint64_t HDHealthRecordsIngestionServiceInterface()
{
  return MEMORY[0x270F37148]();
}

uint64_t HDHealthRecordsPublicUserAgentString()
{
  return MEMORY[0x270F37150]();
}

uint64_t HKAcceptAuthenticationChallengeWithTrust()
{
  return MEMORY[0x270F37158]();
}

uint64_t HKClinicalDocumentDownloaderInterface()
{
  return MEMORY[0x270F37160]();
}

uint64_t HKClinicalSharingFeatureStatusToString()
{
  return MEMORY[0x270F37168]();
}

uint64_t HKClinicalSharingMultiDeviceStatusToString()
{
  return MEMORY[0x270F37170]();
}

uint64_t HKClinicalSharingServerInterface()
{
  return MEMORY[0x270F37178]();
}

uint64_t HKClinicalSharingSyncObserverClientInterface()
{
  return MEMORY[0x270F37180]();
}

uint64_t HKClinicalSharingSyncObserverServerInterface()
{
  return MEMORY[0x270F37188]();
}

uint64_t HKClinicalSharingUserStatusToString()
{
  return MEMORY[0x270F37190]();
}

uint64_t HKFHIRResourceQueryModeIncludesFullMode()
{
  return MEMORY[0x270F37198]();
}

uint64_t HKHealthRecordsCurrentEnvironment()
{
  return MEMORY[0x270F371A0]();
}

uint64_t HKHealthRecordsDaemonConnectionServerInterface()
{
  return MEMORY[0x270F371A8]();
}

uint64_t HKImproveHealthAndActivityAnalyticsAllowed()
{
  return MEMORY[0x270EF3710]();
}

uint64_t HKReleaseSecKey()
{
  return MEMORY[0x270F371B0]();
}

uint64_t HKSecPolicyNameAppleHealthProviderService()
{
  return MEMORY[0x270F371B8]();
}

uint64_t HKSensitiveLogItem()
{
  return MEMORY[0x270EF3808]();
}

uint64_t HKVerifiableHealthRecordsParsingServiceInterface()
{
  return MEMORY[0x270F371C0]();
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x270EF2C48]();
}

SecAccessControlRef SecAccessControlCreateWithFlags(CFAllocatorRef allocator, CFTypeRef protection, SecAccessControlCreateFlags flags, CFErrorRef *error)
{
  return (SecAccessControlRef)MEMORY[0x270EFD650](allocator, protection, flags, error);
}

CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
{
  return (CFDataRef)MEMORY[0x270EFD710](certificate);
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x270EFD970](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x270EFD978](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x270EFD980](query);
}

CFDataRef SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EFDA50](key, algorithm, dataToSign, error);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x270EFDC20](rnd, count, bytes);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _HKInitializeLogging()
{
  return MEMORY[0x270EF3970]();
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x270EDA760](name);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocBox()
{
  return MEMORY[0x270FA0220]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x270FA0350]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x270FA0388]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x270FA0390]();
}

uint64_t swift_getFunctionTypeMetadata2()
{
  return MEMORY[0x270FA0398]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x270FA0468]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}