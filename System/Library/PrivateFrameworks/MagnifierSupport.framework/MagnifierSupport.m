void OUTLINED_FUNCTION_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_2(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void box3dVol(const float *a1)
{
  if (a1)
  {
    std::vector<float>::vector(__C, 3uLL);
    float v2 = 0.0;
    vDSP_vsub(a1 + 3, 1, a1, 1, __C[0], 1, 3uLL);
    vDSP_svesq(__C[0], 1, &v2, 3uLL);
    vDSP_vsub(a1 + 6, 1, a1 + 3, 1, __C[0], 1, 3uLL);
    vDSP_svesq(__C[0], 1, &v2, 3uLL);
    vDSP_vsub(a1 + 12, 1, a1, 1, __C[0], 1, 3uLL);
    vDSP_svesq(__C[0], 1, &v2, 3uLL);
    if (__C[0])
    {
      __C[1] = __C[0];
      operator delete(__C[0]);
    }
  }
}

void sub_235644038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

float boxVolume(_OWORD *a1)
{
  float v2 = operator new(0x80uLL);
  long long v3 = a1[5];
  v2[4] = a1[4];
  v2[5] = v3;
  long long v4 = a1[7];
  v2[6] = a1[6];
  v2[7] = v4;
  long long v5 = a1[1];
  *float v2 = *a1;
  v2[1] = v5;
  long long v6 = a1[3];
  v2[2] = a1[2];
  v2[3] = v6;
  std::vector<float>::vector(__p, 0x18uLL);
  uint64_t v7 = 0;
  v8 = v2;
  do
  {
    v9 = (char *)__p[0] + v7;
    uint64_t v10 = *(void *)v8;
    *((_DWORD *)v9 + 2) = *((_DWORD *)v8 + 2);
    *(void *)v9 = v10;
    v7 += 12;
    ++v8;
  }
  while (v7 != 96);
  operator delete(v2);
  box3dVol((const float *)__p[0]);
  float v12 = v11;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return v12;
}

void sub_23564411C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__n128 box3dToCentroidSizeAngle@<Q0>(float32x4_t *a1@<X0>, uint64_t *a2@<X8>)
{
  float32x4_t v3 = vsubq_f32(*a1, a1[3]);
  float32x4_t v4 = vmulq_f32(v3, v3);
  float v5 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 2), vaddq_f32(v4, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v4.f32, 1))).f32[0]);
  float32x4_t v6 = vsubq_f32(*a1, a1[1]);
  float32x4_t v7 = vmulq_f32(v6, v6);
  float v8 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 2), vaddq_f32(v7, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v7.f32, 1))).f32[0]);
  float32x4_t v9 = vsubq_f32(*a1, a1[4]);
  float32x4_t v10 = vmulq_f32(v9, v9);
  float v11 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v10, 2), vaddq_f32(v10, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v10.f32, 1))).f32[0]);
  v10.i64[0] = 0x3F0000003F000000;
  v10.i64[1] = 0x3F0000003F000000;
  float32x4_t v15 = vmulq_f32(vaddq_f32(*a1, a1[6]), v10);
  float v12 = atan2f(v6.f32[0], v6.f32[1]);
  int v16 = 0;
  std::vector<float>::vector(a2, 7uLL, &v16);
  uint64_t v13 = *a2;
  __n128 result = (__n128)v15;
  *(void *)uint64_t v13 = v15.i64[0];
  *(_DWORD *)(v13 + 8) = v15.i32[2];
  *(float *)(v13 + 12) = v5;
  *(float *)(v13 + 16) = v8;
  *(float *)(v13 + 20) = v11;
  *(float *)(v13 + 24) = v12;
  return result;
}

void box3dFromNSArray(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = a1;
  id v18 = v3;
  if (!v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "[3DOD] box3dFromNSArray takes non-null pointer).");
    goto LABEL_10;
  }
  if ([v3 count] != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "[3DOD] box3dFromNSArray takes non-8 corners box).");
LABEL_10:
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_264C60128, MEMORY[0x263F8C080]);
  }
  for (uint64_t i = 0; i != 8; ++i)
  {
    float v5 = [v18 objectAtIndexedSubscript:i];
    float32x4_t v6 = [v5 objectAtIndexedSubscript:0];
    [v6 floatValue];
    *(void *)&long long v17 = v7;
    float v8 = [v18 objectAtIndexedSubscript:i];
    float32x4_t v9 = [v8 objectAtIndexedSubscript:1];
    [v9 floatValue];
    int v16 = v10;
    float v11 = [v18 objectAtIndexedSubscript:i];
    float v12 = [v11 objectAtIndexedSubscript:2];
    [v12 floatValue];
    long long v13 = v17;
    DWORD1(v13) = v16;
    DWORD2(v13) = v14;
    *(_OWORD *)(a2 + 16 * i) = v13;
  }
}

void sub_2356443C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  __cxa_free_exception(v14);

  _Unwind_Resume(a1);
}

float area(const Polygon *a1)
{
  uint64_t v1 = *(void *)&a1->polyBBox.right - *(void *)&a1->polySize;
  if (v1)
  {
    unint64_t v2 = v1 >> 3;
    if (v2 <= 1) {
      uint64_t v3 = 1;
    }
    else {
      uint64_t v3 = v2;
    }
    unint64_t v4 = 1;
    float v5 = *(uint64_t **)&a1->polySize;
    do
    {
      uint64_t v6 = *v5++;
      _V1.S[1] = HIDWORD(v6);
      _D2 = *(void *)(*(void *)&a1->polySize + 8 * v4);
      __asm { FMLS            S0, S2, V1.S[1] }
      unint64_t v4 = (v4 + 1) % v2;
      --v3;
    }
    while (v3);
  }
  else
  {
    _S0 = 0.0;
  }
  return fabsf(_S0) * 0.5;
}

float getLineEquation(float32x2_t *a1, float *a2, _DWORD *a3, float *a4)
{
  if (a2 && a3)
  {
    if (a4)
    {
      float32x2_t v4 = *a1;
      float32x2_t v5 = a1[1];
      LODWORD(v6) = HIDWORD(*(unint64_t *)a1);
      *a2 = v5.f32[1] - v6;
      *a3 = vsub_f32(v4, v5).u32[0];
      float result = vmlas_n_f32(vmuls_lane_f32(-v4.f32[0], v5, 1), v6, v5.f32[0]);
      *a4 = result;
    }
  }
  return result;
}

uint64_t intersect(int32x2_t *a1, int32x2_t *a2, float32x2_t *a3)
{
  if (!a3) {
    return 0;
  }
  v3.i32[0] = (__int32)*a1;
  v3.i32[1] = HIDWORD(*(void *)&a2[1]);
  v4.i32[0] = (__int32)a1[1];
  v4.i32[1] = HIDWORD(*(unint64_t *)a2);
  v5.i32[0] = (__int32)*a2;
  v5.i32[1] = HIDWORD(*(void *)&a1[1]);
  float32x2_t v6 = vsub_f32(v3, v4);
  v4.i32[0] = (__int32)a2[1];
  _D5.i32[1] = HIDWORD(*(unint64_t *)a1);
  _D6 = vsub_f32(v5, _D5);
  float v8 = -(float)((float)((float)-v6.f32[1] * v6.f32[0]) + (float)(_D6.f32[1] * _D6.f32[0]));
  __asm { FMLA            S5, S6, V6.S[1] }
  if (_D5.f32[0] >= 0.0) {
    float v8 = _D5.f32[0];
  }
  if (v8 < 0.00000001) {
    return 0;
  }
  float32x2_t v14 = vmla_f32(vmul_f32((float32x2_t)vzip2_s32(a2[1], a1[1]), vneg_f32((float32x2_t)vzip1_s32(*a2, *a1))), (float32x2_t)vzip2_s32(*a2, *a1), (float32x2_t)vzip1_s32(a2[1], a1[1]));
  *a3 = vdiv_f32(vmla_f32(vmul_f32((float32x2_t)vrev64_s32((int32x2_t)v14), vneg_f32(_D6)), v14, v6), (float32x2_t)vdup_lane_s32((int32x2_t)_D5, 0));
  return 1;
}

float distance2(float32x2_t *a1, float32x2_t *a2)
{
  float32x2_t v2 = a1[1];
  LODWORD(v3) = HIDWORD(*(unint64_t *)a1);
  float v4 = v2.f32[1] - v3;
  float32x2_t v5 = vsub_f32(*a1, v2);
  float v6 = vmlas_n_f32(vmuls_lane_f32(-COERCE_FLOAT(*a1), v2, 1), v3, v2.f32[0]);
  float v7 = vmlas_n_f32(vmul_lane_f32(v5, *a2, 1).f32[0], v2.f32[1] - v3, COERCE_FLOAT(*a2));
  return (float)((float)(v6 + v7) * (float)(v6 + v7)) / (float)(vmul_f32(v5, v5).f32[0] + (float)(v4 * v4));
}

void clip(const Polygon *a1@<X0>, const Polygon *a2@<X1>, char *a3@<X8>)
{
  uint64_t v14 = 0;
  float32x4_t v15 = &v14;
  uint64_t v16 = 0x4812000000;
  long long v17 = __Block_byref_object_copy_;
  id v18 = __Block_byref_object_dispose_;
  v19 = "";
  v21 = 0;
  uint64_t v22 = 0;
  __p = 0;
  _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE16__init_with_sizeB8ne180100IPS1_S6_EEvT_T0_m(&__p, *(const void **)&a1->polySize, *(void *)&a1->polyBBox.right, (uint64_t)(*(void *)&a1->polyBBox.right - *(void *)&a1->polySize) >> 3);
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  float v11 = ___Z4clipRK7PolygonS1__block_invoke;
  float v12 = &unk_264C60290;
  long long v13 = &v14;
  uint64_t v5 = *(void *)&a2->polyBBox.right - *(void *)&a2->polySize;
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = v5 >> 3;
    if ((unint64_t)(v5 >> 3) <= 1) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = v5 >> 3;
    }
    unint64_t v9 = 1;
    do
    {
      ((void (*)(void *, double, double))v11)(v10, *(double *)(*(void *)&a2->polySize + 8 * v6++), *(double *)(*(void *)&a2->polySize + 8 * v9));
      unint64_t v9 = (v9 + 1) % v7;
    }
    while (v8 != v6);
  }
  Polygon::Polygon(a3, (char *)v15[6], (v15[7] - v15[6]) >> 3);
  _Block_object_dispose(&v14, 8);
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_23564473C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
  {
    a21 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy_(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
  float32x2_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void ___Z4clipRK7PolygonS1__block_invoke(uint64_t a1, int32x2_t a2, float32x2_t a3)
{
  float32x2_t v47 = (float32x2_t)a2;
  float32x2_t v48 = a3;
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  v45 = 0;
  uint64_t v46 = 0;
  v44 = 0;
  _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE16__init_with_sizeB8ne180100IPS1_S6_EEvT_T0_m(&v44, *(const void **)(v4 + 48), *(void *)(v4 + 56), (uint64_t)(*(void *)(v4 + 56) - *(void *)(v4 + 48)) >> 3);
  v41 = 0;
  v42 = 0;
  v43 = 0;
  uint64_t v5 = 0;
  if (v45 != v44)
  {
    uint64_t v6 = 0;
    unint64_t v7 = (v45 - v44) >> 3;
    if (v7 <= 1) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = (v45 - v44) >> 3;
    }
    unint64_t v9 = 1;
    do
    {
      float32x2_t v10 = *(float32x2_t *)&v44[8 * v9];
      v50[0] = *(int32x2_t *)&v44[8 * v6];
      v50[1] = (int32x2_t)v10;
      float v11 = v48.f32[1] - v47.f32[1];
      float32x2_t v12 = vsub_f32(v47, v48);
      float v13 = vmlas_n_f32(vmuls_lane_f32(-v47.f32[0], v48, 1), v47.f32[1], v48.f32[0]);
      float v14 = vmlas_n_f32(vmuls_lane_f32(v12.f32[0], (float32x2_t)v50[0], 1), v48.f32[1] - v47.f32[1], *(float *)v50[0].i32);
      float v15 = vmul_f32(v12, v12).f32[0] + (float)(v11 * v11);
      LODWORD(v16) = vsub_f32(v48, v47).u32[0];
      BOOL v17 = vmlas_n_f32(-(float)(vsub_f32((float32x2_t)v50[0], v47).f32[0] * (float)(v48.f32[1] - v47.f32[1])), *(float *)&v50[0].i32[1] - v47.f32[1], v16) < 0.0;
      if ((float)((float)((float)(v13 + v14) * (float)(v13 + v14)) / v15) < 0.00000001) {
        BOOL v17 = 1;
      }
      float v18 = vmlas_n_f32(vmuls_lane_f32(v12.f32[0], v10, 1), v11, v10.f32[0]);
      if ((float)((float)((float)(v13 + v18) * (float)(v13 + v18)) / v15) >= 0.00000001
        && vmlas_n_f32(-(float)(vsub_f32(v10, v47).f32[0] * v11), v10.f32[1] - v47.f32[1], v16) >= 0.0)
      {
        if (!v17) {
          goto LABEL_50;
        }
        float32x2_t v49 = 0;
        if (!intersect(v50, (int32x2_t *)&v47, &v49)) {
          goto LABEL_50;
        }
        if (v5 >= v43)
        {
          uint64_t v33 = v5 - v41;
          if ((unint64_t)(v33 + 1) >> 61) {
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          }
          unint64_t v34 = ((char *)v43 - (char *)v41) >> 2;
          if (v34 <= v33 + 1) {
            unint64_t v34 = v33 + 1;
          }
          if ((unint64_t)((char *)v43 - (char *)v41) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v28 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v28 = v34;
          }
          if (v28) {
            v29 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)&v43, v28);
          }
          else {
            v29 = 0;
          }
          v30 = (float32x2_t *)&v29[8 * v33];
          float32x2_t *v30 = v49;
          uint64_t v5 = v30 + 1;
          v31 = v42;
          if (v42 != v41)
          {
            do
            {
              float32x2_t v35 = v31[-1];
              --v31;
              v30[-1] = v35;
              --v30;
            }
            while (v31 != v41);
LABEL_46:
            v31 = v41;
          }
LABEL_47:
          v41 = v30;
          v43 = (float32x2_t *)&v29[8 * v28];
          if (v31) {
            operator delete(v31);
          }
          goto LABEL_49;
        }
        *v5++ = v49;
      }
      else
      {
        float32x2_t v40 = v10;
        if (!v17)
        {
          float32x2_t v49 = 0;
          if (intersect(v50, (int32x2_t *)&v47, &v49))
          {
            if (v5 >= v43)
            {
              uint64_t v19 = v5 - v41;
              if ((unint64_t)(v19 + 1) >> 61) {
                _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
              }
              unint64_t v20 = ((char *)v43 - (char *)v41) >> 2;
              if (v20 <= v19 + 1) {
                unint64_t v20 = v19 + 1;
              }
              if ((unint64_t)((char *)v43 - (char *)v41) >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v21 = v20;
              }
              if (v21) {
                uint64_t v22 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)&v43, v21);
              }
              else {
                uint64_t v22 = 0;
              }
              v23 = (float32x2_t *)&v22[8 * v19];
              float32x2_t *v23 = v49;
              uint64_t v5 = v23 + 1;
              v24 = v42;
              if (v42 != v41)
              {
                do
                {
                  float32x2_t v25 = v24[-1];
                  --v24;
                  v23[-1] = v25;
                  --v23;
                }
                while (v24 != v41);
                v24 = v41;
              }
              v41 = v23;
              v43 = (float32x2_t *)&v22[8 * v21];
              if (v24) {
                operator delete(v24);
              }
            }
            else
            {
              *v5++ = v49;
            }
            v42 = v5;
          }
        }
        if (v5 >= v43)
        {
          uint64_t v26 = v5 - v41;
          if ((unint64_t)(v26 + 1) >> 61) {
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          }
          unint64_t v27 = ((char *)v43 - (char *)v41) >> 2;
          if (v27 <= v26 + 1) {
            unint64_t v27 = v26 + 1;
          }
          if ((unint64_t)((char *)v43 - (char *)v41) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v28 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v28 = v27;
          }
          if (v28) {
            v29 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)&v43, v28);
          }
          else {
            v29 = 0;
          }
          v30 = (float32x2_t *)&v29[8 * v26];
          float32x2_t *v30 = v40;
          uint64_t v5 = v30 + 1;
          v31 = v42;
          if (v42 != v41)
          {
            do
            {
              float32x2_t v32 = v31[-1];
              --v31;
              v30[-1] = v32;
              --v30;
            }
            while (v31 != v41);
            goto LABEL_46;
          }
          goto LABEL_47;
        }
        *v5++ = v40;
      }
LABEL_49:
      v42 = v5;
LABEL_50:
      ++v6;
      unint64_t v9 = (v9 + 1) % v7;
    }
    while (v6 != v8);
  }
  v36 = *(void **)(*(void *)(a1 + 32) + 8);
  v37 = (void *)v36[6];
  if (v37)
  {
    v36[7] = v37;
    operator delete(v37);
    v36[6] = 0;
    v36[7] = 0;
    v36[8] = 0;
    uint64_t v5 = v42;
  }
  v39 = v43;
  v38 = v44;
  v36[6] = v41;
  v36[7] = v5;
  v36[8] = v39;
  if (v38)
  {
    v45 = v38;
    operator delete(v38);
  }
}

void sub_235644BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void box3dIou(float32x4_t *a1@<X0>, float32x4_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v88 = *MEMORY[0x263EF8340];
  float32x4_t v6 = *a1;
  float32x4_t v7 = *a2;
  float32x4_t v8 = vsubq_f32(*a1, *a2);
  float32x4_t v9 = vmulq_f32(v8, v8);
  if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v9, 2), vaddq_f32(v9, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v9.f32, 1))).f32[0]) <= 0.001)
  {
    uint64_t v73 = 1;
    while (v73 != 8)
    {
      float32x4_t v74 = vsubq_f32(a1[v73], a2[v73]);
      float32x4_t v75 = vmulq_f32(v74, v74);
      ++v73;
      if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v75, 2), vaddq_f32(v75, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v75.f32, 1))).f32[0]) > 0.001)
      {
        if ((unint64_t)(v73 - 2) < 7) {
          goto LABEL_2;
        }
        break;
      }
    }
    __asm { FMOV            V0.2S, #1.0 }
    *(void *)a3 = _D0;
    *(float *)(a3 + 8) = boxVolume(a1);
    *(_OWORD *)(a3 + 12) = xmmword_23594FC30;
    *(_OWORD *)(a3 + 28) = xmmword_23594FC40;
    *(_DWORD *)(a3 + 44) = 0;
  }
  else
  {
LABEL_2:
    float32x4_t v10 = a1[2];
    v6.i64[1] = a1[1].i64[0];
    v10.i64[1] = a1[3].i64[0];
    v87[0] = v6;
    v87[1] = v10;
    float32x4_t v11 = a2[2];
    v7.i64[1] = a2[1].i64[0];
    v86[0] = v7;
    v11.i64[1] = a2[3].i64[0];
    v86[1] = v11;
    Polygon::Polygon((char *)&v84, (char *)v87, 4uLL);
    Polygon::Polygon((char *)&__p, (char *)v86, 4uLL);
    clip((const Polygon *)&v84, (const Polygon *)&__p, (char *)&v80);
    _S0 = 0.0;
    _S1 = 0.0;
    unint64_t v14 = (v85 - (unsigned char *)v84) >> 3;
    if (v85 != (unsigned char *)v84)
    {
      if (v14 <= 1) {
        uint64_t v15 = 1;
      }
      else {
        uint64_t v15 = (v85 - (unsigned char *)v84) >> 3;
      }
      unint64_t v16 = 1;
      BOOL v17 = v84;
      do
      {
        uint64_t v18 = *v17++;
        _V2.S[1] = HIDWORD(v18);
        _D3 = v84[v16];
        __asm { FMLS            S1, S3, V2.S[1] }
        unint64_t v16 = (v16 + 1) % v14;
        --v15;
      }
      while (v15);
    }
    float v25 = fabsf(_S1);
    uint64_t v26 = __p;
    unint64_t v27 = (v83 - (unsigned char *)__p) >> 3;
    if (v83 != __p)
    {
      if (v27 <= 1) {
        uint64_t v28 = 1;
      }
      else {
        uint64_t v28 = (v83 - (unsigned char *)__p) >> 3;
      }
      unint64_t v29 = 1;
      v30 = (uint64_t *)__p;
      do
      {
        uint64_t v31 = *v30++;
        _V3.S[1] = HIDWORD(v31);
        _D4 = *((void *)__p + v29);
        __asm { FMLS            S0, S4, V3.S[1] }
        unint64_t v29 = (v29 + 1) % v27;
        --v28;
      }
      while (v28);
    }
    float v34 = v25 * 0.5;
    float v35 = fabsf(_S0) * 0.5;
    v36 = v80;
    _S6 = 0.0;
    _S0 = 0.0;
    if (v81 != v80)
    {
      unint64_t v39 = (v81 - v80) >> 3;
      if (v39 <= 1) {
        uint64_t v40 = 1;
      }
      else {
        uint64_t v40 = (v81 - v80) >> 3;
      }
      unint64_t v41 = 1;
      v42 = (uint64_t *)v80;
      do
      {
        uint64_t v43 = *v42++;
        _V1.S[1] = HIDWORD(v43);
        _D4 = *(void *)&v80[8 * v41];
        __asm { FMLS            S0, S4, V1.S[1] }
        unint64_t v41 = (v41 + 1) % v39;
        --v40;
      }
      while (v40);
    }
    float v46 = fabsf(_S0) * 0.5;
    float v47 = (float)(v34 + v35) - v46;
    float v48 = fminf(v34, v35);
    float v49 = a1->f32[2];
    float v50 = a2->f32[2];
    float v51 = a1[4].f32[2];
    float v52 = a2[4].f32[2];
    float v53 = fmax((float)(fminf(v51, v52) - fmaxf(v49, v50)), 0.0);
    if (v85 != (unsigned char *)v84)
    {
      if (v14 <= 1) {
        uint64_t v54 = 1;
      }
      else {
        uint64_t v54 = (v85 - (unsigned char *)v84) >> 3;
      }
      unint64_t v55 = 1;
      v56 = v84;
      do
      {
        uint64_t v57 = *v56++;
        _V16.S[1] = HIDWORD(v57);
        _D21 = v84[v55];
        __asm { FMLS            S6, S21, V16.S[1] }
        unint64_t v55 = (v55 + 1) % v14;
        --v54;
      }
      while (v54);
    }
    float v60 = v46 / v48;
    float v61 = v46 / v34;
    float v62 = v46 * v53;
    float v63 = fabsf(_S6) * 0.5;
    float v64 = vabds_f32(v51, v49);
    float v65 = v46 / v35;
    if (v83 == __p)
    {
      _S19 = 0.0;
    }
    else
    {
      if (v27 <= 1) {
        uint64_t v66 = 1;
      }
      else {
        uint64_t v66 = (v83 - (unsigned char *)__p) >> 3;
      }
      unint64_t v67 = 1;
      v68 = (uint64_t *)__p;
      do
      {
        uint64_t v69 = *v68++;
        _V20.S[1] = HIDWORD(v69);
        _D21 = *((void *)__p + v67);
        __asm { FMLS            S19, S21, V20.S[1] }
        unint64_t v67 = (v67 + 1) % v27;
        --v66;
      }
      while (v66);
    }
    float v77 = v64 * v63;
    float v78 = vabds_f32(v52, v50) * (float)(fabsf(_S19) * 0.5);
    float v79 = (float)(v77 + v78) - v62;
    *(float *)a3 = v62 / v79;
    *(float *)(a3 + 4) = v62;
    *(float *)(a3 + 8) = v79;
    *(float *)(a3 + 12) = v62 / fminf(v77, v78);
    *(float *)(a3 + 16) = v62 / v77;
    *(float *)(a3 + 20) = v62 / v78;
    *(float *)(a3 + 24) = v46 / v47;
    *(float *)(a3 + 28) = v46;
    *(float *)(a3 + 32) = v47;
    *(float *)(a3 + 36) = v60;
    *(float *)(a3 + 40) = v61;
    *(float *)(a3 + 44) = v65;
    if (v36)
    {
      v81 = v36;
      operator delete(v36);
      uint64_t v26 = __p;
    }
    if (v26)
    {
      v83 = v26;
      operator delete(v26);
    }
    if (v84)
    {
      v85 = v84;
      operator delete(v84);
    }
  }
}

void sub_235644FE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  if (a19) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

char *Polygon::Polygon(char *a1, char *a2, unint64_t a3)
{
  *(void *)a1 = 0;
  *((void *)a1 + 1) = 0;
  *((void *)a1 + 2) = 0;
  if (a3)
  {
    _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE18__assign_with_sizeB8ne180100IPKS1_S7_EEvT_T0_l(a1, a2, (uint64_t)&a2[8 * a3], a3);
    if (a3 >= 3)
    {
      uint64_t v5 = *(float32x2_t **)a1;
      float32x2_t v6 = **(float32x2_t **)a1;
      unint64_t v7 = *((void *)a1 + 1) - *(void *)a1;
      if ((int)(v7 >> 3) < 1)
      {
        float32x2_t v9 = **(float32x2_t **)a1;
      }
      else
      {
        uint64_t v8 = (v7 >> 3);
        float32x2_t v9 = **(float32x2_t **)a1;
        do
        {
          float32x2_t v10 = *v5++;
          float32x2_t v9 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v9, v10), (int8x8_t)v10, (int8x8_t)v9);
          float32x2_t v6 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v10, v6), (int8x8_t)v10, (int8x8_t)v6);
          --v8;
        }
        while (v8);
      }
      *((float32x2_t *)a1 + 3) = v9;
      *((float32x2_t *)a1 + 4) = v6;
    }
  }
  return a1;
}

void sub_2356450B4(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void Polygon::Polygon(Polygon *this, const CGRect *a2)
{
  *(void *)&this->polySize = 0;
  *(void *)&this->polyBBox.right = 0;
  this[1].polyBBoCGFloat x = 0;
  _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE6resizeEm((uint64_t)this, 4uLL);
  CGFloat MinX = CGRectGetMinX(*a2);
  CGFloat MinY = CGRectGetMinY(*a2);
  v5.f64[0] = MinX;
  v5.f64[1] = MinY;
  **(float32x2_t **)&this->polySize = vcvt_f32_f64(v5);
  CGFloat x = a2->origin.x;
  v5.f64[0] = a2->origin.y;
  CGFloat width = a2->size.width;
  CGFloat height = a2->size.height;
  CGFloat v28 = CGRectGetMinX(*(CGRect *)((char *)&v5 - 8));
  CGFloat MaxY = CGRectGetMaxY(*a2);
  v10.f64[0] = v28;
  v10.f64[1] = MaxY;
  *(float32x2_t *)(*(void *)&this->polySize + 8) = vcvt_f32_f64(v10);
  CGFloat v11 = a2->origin.x;
  v10.f64[0] = a2->origin.y;
  CGFloat v12 = a2->size.width;
  CGFloat v13 = a2->size.height;
  CGFloat MaxX = CGRectGetMaxX(*(CGRect *)((char *)&v10 - 8));
  CGFloat v14 = CGRectGetMaxY(*a2);
  v15.f64[0] = MaxX;
  v15.f64[1] = v14;
  *(float32x2_t *)(*(void *)&this->polySize + 16) = vcvt_f32_f64(v15);
  CGFloat v16 = a2->origin.x;
  v15.f64[0] = a2->origin.y;
  CGFloat v17 = a2->size.width;
  CGFloat v18 = a2->size.height;
  CGFloat v30 = CGRectGetMaxX(*(CGRect *)((char *)&v15 - 8));
  CGFloat v19 = CGRectGetMinY(*a2);
  v20.f64[0] = v30;
  v20.f64[1] = v19;
  *(float32x2_t *)(*(void *)&this->polySize + 24) = vcvt_f32_f64(v20);
  unint64_t v21 = *(float32x2_t **)&this->polySize;
  float32x2_t v22 = **(float32x2_t **)&this->polySize;
  unint64_t v23 = *(void *)&this->polyBBox.right - *(void *)&this->polySize;
  if ((int)(v23 >> 3) < 1)
  {
    float32x2_t v25 = **(float32x2_t **)&this->polySize;
  }
  else
  {
    uint64_t v24 = (v23 >> 3);
    float32x2_t v25 = **(float32x2_t **)&this->polySize;
    do
    {
      float32x2_t v26 = *v21++;
      float32x2_t v25 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v25, v26), (int8x8_t)v26, (int8x8_t)v25);
      float32x2_t v22 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v26, v22), (int8x8_t)v26, (int8x8_t)v22);
      --v24;
    }
    while (v24);
  }
  *(float32x2_t *)&this[1].polyPoints[0].v = v25;
  *(float32x2_t *)&this[2].polyBBox.left = v22;
}

void sub_235645218(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE6resizeEm(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE8__appendEm((void **)a1, a2 - v2);
  }
}

void _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_264C60118, MEMORY[0x263F8C060]);
}

void sub_2356452C8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  __n128 result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void *_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void *std::vector<float>::vector(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<float>::__vallocate[abi:ne180100](a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_2356453D8(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<float>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<float>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(4 * a2);
}

void *std::vector<float>::vector(void *a1, unint64_t a2, _DWORD *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<float>::__vallocate[abi:ne180100](a1, a2);
    float32x2_t v6 = (_DWORD *)a1[1];
    unint64_t v7 = &v6[a2];
    uint64_t v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_2356454D8(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *_ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE16__init_with_sizeB8ne180100IPS1_S6_EEvT_T0_m(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    float32x2_t v6 = result;
    __n128 result = _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE11__vallocateB8ne180100Em(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_235645554(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *_ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE11__vallocateB8ne180100Em(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  }
  __n128 result = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

char *_ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE18__assign_with_sizeB8ne180100IPKS1_S7_EEvT_T0_l(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  float32x2_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 3)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61) {
      _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    __n128 result = _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE11__vallocateB8ne180100Em(v7, v11);
    CGFloat v13 = (char *)v7[1];
    CGFloat v12 = (void **)(v7 + 1);
    float32x2_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      CGFloat v18 = v9;
      CGFloat v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  CGFloat v12 = (void **)(result + 8);
  CGFloat v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 3;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  CGFloat v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    __n128 result = (char *)memmove(*(void **)result, __src, v14 - v9);
    float32x2_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    CGFloat v18 = v9;
    CGFloat v19 = v16;
LABEL_18:
    __n128 result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *CGFloat v12 = &v9[v17];
  return result;
}

void _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE8__appendEm(void **a1, unint64_t a2)
{
  float32x2_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  float64x2_t v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      CGFloat v13 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(v4, v12);
    }
    else {
      CGFloat v13 = 0;
    }
    CGFloat v14 = &v13[8 * v10];
    unint64_t v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    CGFloat v16 = &v14[8 * a2];
    CGFloat v18 = (char *)*a1;
    size_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *((void *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      size_t v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

void sub_235645AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235645DD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)PersonDetectionManager;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
}

void sub_235645F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
  _Unwind_Resume(a1);
}

void sub_23564668C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_235646878(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_23564698C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235646B0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235646C60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235646D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_235646DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235646F00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235647278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2356474AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_235647A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  objc_destroyWeak(v20);
  _Block_object_dispose(&a16, 8);
  _Block_object_dispose(&a20, 8);
  objc_destroyWeak((id *)(v21 - 40));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_235649030(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

double RenderPoseToVisionPose(simd_float4x4 a1)
{
  if (onceToken != -1)
  {
    simd_float4x4 v12 = a1;
    dispatch_once(&onceToken, &__block_literal_global_2);
    a1 = v12;
  }
  uint64_t v1 = 0;
  float32x4_t v2 = (float32x4_t)VW_RW;
  float32x4_t v3 = (float32x4_t)VW_RW;
  float32x4_t v4 = (float32x4_t)VW_RW;
  float32x4_t v5 = (float32x4_t)VW_RW;
  simd_float4x4 v13 = a1;
  do
  {
    v14[v1] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*(_OWORD *)&v13.columns[v1])), v3, *(float32x2_t *)v13.columns[v1].f32, 1), v4, (float32x4_t)v13.columns[v1], 2), v5, (float32x4_t)v13.columns[v1], 3);
    ++v1;
  }
  while (v1 != 4);
  uint64_t v6 = 0;
  float32x4_t v7 = (float32x4_t)v14[0];
  float32x4_t v8 = (float32x4_t)v14[1];
  float32x4_t v9 = (float32x4_t)v14[2];
  float32x4_t v10 = (float32x4_t)v14[3];
  v13.columns[0] = (simd_float4)RC_VC;
  v13.columns[1] = (simd_float4)RC_VC;
  v13.columns[2] = (simd_float4)RC_VC;
  v13.columns[3] = (simd_float4)RC_VC;
  do
  {
    v14[v6] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v7, COERCE_FLOAT(*(_OWORD *)&v13.columns[v6])), v8, *(float32x2_t *)v13.columns[v6].f32, 1), v9, (float32x4_t)v13.columns[v6], 2), v10, (float32x4_t)v13.columns[v6], 3);
    ++v6;
  }
  while (v6 != 4);
  return *(double *)v14;
}

double ___Z22RenderPoseToVisionPose13simd_float4x4_block_invoke()
{
  VW_RW = xmmword_23594FCF0;
  VW_RW = xmmword_23594FC40;
  VW_RW = xmmword_23594FD00;
  VW_RW = xmmword_23594FD10;
  RC_VC = xmmword_23594FCF0;
  RC_VC = xmmword_23594FD00;
  double result = 0.0;
  RC_VC = xmmword_23594FD20;
  RC_VC = xmmword_23594FD10;
  return result;
}

void sub_235649D70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235649DBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235649E04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235649E4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235649E94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235649EDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_235649F24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ou_object_group::sortIndices@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  std::vector<unsigned long>::vector(a2, (a1[1] - *a1) >> 2);
  uint64_t v4 = *a2;
  float32x4_t v5 = (uint64_t *)a2[1];
  if ((uint64_t *)*a2 != v5)
  {
    uint64_t v6 = 0;
    float32x4_t v7 = (uint64_t *)*a2;
    do
      *v7++ = v6++;
    while (v7 != v5);
  }
  unint64_t v8 = 126 - 2 * __clz(((uint64_t)v5 - v4) >> 3);
  uint64_t v11 = a1;
  if (v5 == (uint64_t *)v4) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v8;
  }
  return std::__introsort<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *,false>(v4, v5, &v11, v9, 1);
}

void ou_object_group::nmsOnBoxesHelper(void *a1, uint64_t *a2, uint64_t *a3, char **a4, float a5)
{
  id v56 = a1;
  unint64_t v9 = (a2[1] - *a2) >> 7;
  if (v9 != (a3[1] - *a3) >> 2) {
    __assert_rtn("nmsOnBoxesHelper", "OUObjectGroup.mm", 37, "boxes.size() == box_scores.size()");
  }
  LODWORD(v57) = -1082130432;
  std::vector<float>::vector(__p, v9, &v57);
  std::vector<std::vector<float>>::vector(v63, v9, (uint64_t)__p);
  float v52 = a3;
  uint64_t v54 = a4;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  if (v11 != *a2)
  {
    unint64_t v12 = 0;
    uint64_t v13 = *MEMORY[0x263F5B6D0];
    uint64_t v14 = *MEMORY[0x263F5B720];
    uint64_t v55 = *MEMORY[0x263F5B710];
    uint64_t v15 = 128;
    uint64_t v16 = 24;
    while (1)
    {
      unint64_t v17 = v12++;
      if (v12 < (v11 - v10) >> 7) {
        break;
      }
      unint64_t v23 = (v11 - v10) >> 7;
LABEL_17:
      v16 += 24;
      v15 += 128;
      if (v12 >= v23) {
        goto LABEL_18;
      }
    }
    uint64_t v18 = v15;
    uint64_t v19 = v16;
    unint64_t v53 = v12;
    while (1)
    {
      long long v61 = 0u;
      long long v62 = 0u;
      *(_OWORD *)__p = 0u;
      box3dIou((float32x4_t *)(v10 + (v17 << 7)), (float32x4_t *)(v10 + v18), (uint64_t)__p);
      if ((objc_msgSend(v56, "isEqualToString:", v13, v52) & 1) != 0
        || [v56 isEqualToString:v14])
      {
        int v20 = DWORD2(v61);
      }
      else
      {
        if (![v56 isEqualToString:v55]) {
          goto LABEL_12;
        }
        int v20 = (int)__p[0];
      }
      uint64_t v21 = v63[0];
      *(_DWORD *)(*(void *)(v63[0] + v19) + 4 * v17) = v20;
      *(_DWORD *)(*(void *)(v21 + 24 * v17) + 4 * v12) = v20;
LABEL_12:
      ++v12;
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      uint64_t v22 = v11 - *a2;
      v19 += 24;
      v18 += 128;
      if (v12 >= v22 >> 7)
      {
        unint64_t v23 = v22 >> 7;
        unint64_t v12 = v53;
        goto LABEL_17;
      }
    }
  }
LABEL_18:
  ou_object_group::sortIndices(v52, (uint64_t *)__p);
  uint64_t v24 = v54;
  v54[1] = *v54;
  float32x2_t v25 = (char *)__p[0];
  if (__p[0] != __p[1])
  {
    while (1)
    {
      uint64_t v26 = *(void *)v25;
      CGFloat v28 = v24[1];
      unint64_t v27 = (unint64_t)v24[2];
      if ((unint64_t)v28 >= v27)
      {
        CGFloat v30 = *v24;
        uint64_t v31 = (v28 - *v24) >> 2;
        unint64_t v32 = v31 + 1;
        if ((unint64_t)(v31 + 1) >> 62) {
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        }
        uint64_t v33 = v27 - (void)v30;
        if (v33 >> 1 > v32) {
          unint64_t v32 = v33 >> 1;
        }
        if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v34 = v32;
        }
        if (v34)
        {
          float v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)(v54 + 2), v34);
          CGFloat v30 = *v24;
          CGFloat v28 = v24[1];
        }
        else
        {
          float v35 = 0;
        }
        v36 = &v35[4 * v31];
        *(_DWORD *)v36 = v26;
        unint64_t v29 = v36 + 4;
        while (v28 != v30)
        {
          int v37 = *((_DWORD *)v28 - 1);
          v28 -= 4;
          *((_DWORD *)v36 - 1) = v37;
          v36 -= 4;
        }
        float32x2_t *v24 = v36;
        v24[1] = v29;
        v24[2] = &v35[4 * v34];
        if (v30) {
          operator delete(v30);
        }
      }
      else
      {
        *(_DWORD *)CGFloat v28 = v26;
        unint64_t v29 = v28 + 4;
      }
      v24[1] = v29;
      uint64_t v57 = 0;
      v58 = 0;
      v59 = 0;
      v38 = __p[0];
      unint64_t v39 = __p[1];
      if ((void *)((char *)__p[1] - (char *)__p[0]) < (void *)9)
      {
        uint64_t v40 = 0;
        if (!__p[0]) {
          goto LABEL_58;
        }
      }
      else
      {
        uint64_t v40 = 0;
        unint64_t v41 = 1;
        do
        {
          uint64_t v42 = v38[v41];
          if (*(float *)(*(void *)(v63[0] + 24 * v26) + 4 * v42) <= a5)
          {
            if (v40 >= v59)
            {
              v44 = v57;
              uint64_t v45 = (v40 - v57) >> 3;
              unint64_t v46 = v45 + 1;
              if ((unint64_t)(v45 + 1) >> 61) {
                _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
              }
              uint64_t v47 = v59 - v57;
              if ((v59 - v57) >> 2 > v46) {
                unint64_t v46 = v47 >> 2;
              }
              if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v48 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v48 = v46;
              }
              if (v48)
              {
                float v49 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)&v59, v48);
                v44 = v57;
                uint64_t v40 = v58;
              }
              else
              {
                float v49 = 0;
              }
              float v50 = &v49[8 * v45];
              *(void *)float v50 = v42;
              uint64_t v43 = v50 + 8;
              while (v40 != v44)
              {
                uint64_t v51 = *((void *)v40 - 1);
                v40 -= 8;
                *((void *)v50 - 1) = v51;
                v50 -= 8;
              }
              uint64_t v57 = v50;
              v58 = v43;
              v59 = &v49[8 * v48];
              if (v44) {
                operator delete(v44);
              }
            }
            else
            {
              *(void *)uint64_t v40 = v42;
              uint64_t v43 = v40 + 8;
            }
            v58 = v43;
            uint64_t v40 = v43;
            v38 = __p[0];
            unint64_t v39 = __p[1];
          }
          ++v41;
        }
        while (v41 < (v39 - (unsigned char *)v38) >> 3);
        if (!v38) {
          goto LABEL_58;
        }
      }
      __p[1] = v38;
      operator delete(v38);
      uint64_t v40 = v58;
LABEL_58:
      float32x2_t v25 = v57;
      __p[0] = v57;
      __p[1] = v40;
      *(void *)&long long v61 = v59;
      uint64_t v24 = v54;
      if (v57 == v40) {
        goto LABEL_63;
      }
    }
  }
  uint64_t v40 = (char *)__p[0];
LABEL_63:
  if (v40)
  {
    __p[1] = v40;
    operator delete(v40);
  }
  __p[0] = v63;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_23564A410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, char *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  __p = &a23;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);

  _Unwind_Resume(a1);
}

void ou_object_group::nmsClasswise(uint64_t *a1@<X0>, uint64_t *a2@<X8>, float a3@<S0>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v202 = 0;
  v203 = 0;
  v204 = 0;
  __p = 0;
  v200 = 0;
  v201 = 0;
  v196 = 0;
  v197 = 0;
  v198 = 0;
  uint64_t v6 = *a1;
  if (*a1 == a1[1])
  {
    v44 = 0;
    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v7 = *MEMORY[0x263F5B6D0];
    uint64_t v8 = *MEMORY[0x263F5B720];
    uint64_t v9 = *MEMORY[0x263F5B710];
    do
    {
      id v10 = *(id *)(v6 + 128);
      if ([v10 isEqualToString:v7])
      {
        int v11 = -1227133513 * ((unint64_t)(v6 - *a1) >> 5);
        unint64_t v12 = v203;
        if (v203 >= v204)
        {
          unint64_t v17 = v202;
          uint64_t v18 = (v203 - v202) >> 2;
          unint64_t v19 = v18 + 1;
          if ((unint64_t)(v18 + 1) >> 62) {
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          }
          uint64_t v20 = v204 - v202;
          if ((v204 - v202) >> 1 > v19) {
            unint64_t v19 = v20 >> 1;
          }
          if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v21 = v19;
          }
          if (v21)
          {
            uint64_t v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v204, v21);
            unint64_t v17 = v202;
            unint64_t v12 = v203;
          }
          else
          {
            uint64_t v22 = 0;
          }
          unint64_t v32 = &v22[4 * v18];
          *(_DWORD *)unint64_t v32 = v11;
          uint64_t v13 = v32 + 4;
          while (v12 != v17)
          {
            int v33 = *((_DWORD *)v12 - 1);
            v12 -= 4;
            *((_DWORD *)v32 - 1) = v33;
            v32 -= 4;
          }
          v202 = v32;
          v203 = v13;
          v204 = &v22[4 * v21];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_DWORD *)v203 = v11;
          uint64_t v13 = v12 + 4;
        }
        v203 = v13;
      }
      else if ([v10 isEqualToString:v8])
      {
        int v14 = -1227133513 * ((unint64_t)(v6 - *a1) >> 5);
        uint64_t v15 = v200;
        if (v200 >= v201)
        {
          uint64_t v26 = (char *)__p;
          uint64_t v27 = (v200 - (unsigned char *)__p) >> 2;
          unint64_t v28 = v27 + 1;
          if ((unint64_t)(v27 + 1) >> 62) {
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          }
          uint64_t v29 = v201 - (unsigned char *)__p;
          if ((v201 - (unsigned char *)__p) >> 1 > v28) {
            unint64_t v28 = v29 >> 1;
          }
          if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v30 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v30 = v28;
          }
          if (v30)
          {
            uint64_t v31 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v201, v30);
            uint64_t v26 = (char *)__p;
            uint64_t v15 = v200;
          }
          else
          {
            uint64_t v31 = 0;
          }
          uint64_t v40 = &v31[4 * v27];
          *(_DWORD *)uint64_t v40 = v14;
          uint64_t v16 = v40 + 4;
          while (v15 != v26)
          {
            int v41 = *((_DWORD *)v15 - 1);
            v15 -= 4;
            *((_DWORD *)v40 - 1) = v41;
            v40 -= 4;
          }
          __p = v40;
          v200 = v16;
          v201 = &v31[4 * v30];
          if (v26) {
            operator delete(v26);
          }
        }
        else
        {
          *(_DWORD *)v200 = v14;
          uint64_t v16 = v15 + 4;
        }
        v200 = v16;
      }
      else if ([v10 isEqualToString:v9])
      {
        int v23 = -1227133513 * ((unint64_t)(v6 - *a1) >> 5);
        uint64_t v24 = v197;
        if (v197 >= v198)
        {
          unint64_t v34 = (char *)v196;
          uint64_t v35 = (v197 - (unsigned char *)v196) >> 2;
          unint64_t v36 = v35 + 1;
          if ((unint64_t)(v35 + 1) >> 62) {
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          }
          uint64_t v37 = v198 - (unsigned char *)v196;
          if ((v198 - (unsigned char *)v196) >> 1 > v36) {
            unint64_t v36 = v37 >> 1;
          }
          if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v38 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v38 = v36;
          }
          if (v38)
          {
            unint64_t v39 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v198, v38);
            unint64_t v34 = (char *)v196;
            uint64_t v24 = v197;
          }
          else
          {
            unint64_t v39 = 0;
          }
          uint64_t v42 = &v39[4 * v35];
          *(_DWORD *)uint64_t v42 = v23;
          float32x2_t v25 = v42 + 4;
          while (v24 != v34)
          {
            int v43 = *((_DWORD *)v24 - 1);
            v24 -= 4;
            *((_DWORD *)v42 - 1) = v43;
            v42 -= 4;
          }
          v196 = v42;
          v197 = v25;
          v198 = &v39[4 * v38];
          if (v34) {
            operator delete(v34);
          }
        }
        else
        {
          *(_DWORD *)v197 = v23;
          float32x2_t v25 = v24 + 4;
        }
        v197 = v25;
      }

      v6 += 224;
    }
    while (v6 != a1[1]);
    v44 = (int *)v202;
    uint64_t v45 = (int *)v203;
  }
  v193 = 0;
  v194 = 0;
  uint64_t v195 = 0;
  v190 = 0;
  v191 = 0;
  v192 = 0;
  v187 = 0;
  v188 = 0;
  v189 = 0;
  if (v45 != v44)
  {
    unint64_t v46 = 0;
    do
    {
      uint64_t v47 = (long long *)(*a1 + 224 * v44[v46]);
      unint64_t v48 = v191;
      if (v191 >= v192)
      {
        id v56 = (char *)v190;
        uint64_t v57 = (v191 - (unsigned char *)v190) >> 7;
        unint64_t v58 = v57 + 1;
        if ((unint64_t)(v57 + 1) >> 57) {
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        }
        uint64_t v59 = v192 - (unsigned char *)v190;
        if ((v192 - (unsigned char *)v190) >> 6 > v58) {
          unint64_t v58 = v59 >> 6;
        }
        if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFF80) {
          unint64_t v60 = 0x1FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v60 = v58;
        }
        if (v60)
        {
          long long v61 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<box3d>>((uint64_t)&v192, v60);
          id v56 = (char *)v190;
          unint64_t v48 = v191;
        }
        else
        {
          long long v61 = 0;
        }
        long long v62 = &v61[128 * v57];
        long long v63 = *v47;
        long long v64 = v47[1];
        long long v65 = v47[3];
        *((_OWORD *)v62 + 2) = v47[2];
        *((_OWORD *)v62 + 3) = v65;
        *(_OWORD *)long long v62 = v63;
        *((_OWORD *)v62 + 1) = v64;
        long long v66 = v47[4];
        long long v67 = v47[5];
        long long v68 = v47[7];
        *((_OWORD *)v62 + 6) = v47[6];
        *((_OWORD *)v62 + 7) = v68;
        *((_OWORD *)v62 + 4) = v66;
        *((_OWORD *)v62 + 5) = v67;
        if (v48 == v56)
        {
          v76 = &v61[128 * v57];
        }
        else
        {
          uint64_t v69 = &v61[128 * v57];
          do
          {
            long long v70 = *((_OWORD *)v48 - 8);
            long long v71 = *((_OWORD *)v48 - 7);
            long long v72 = *((_OWORD *)v48 - 5);
            *((_OWORD *)v69 - 6) = *((_OWORD *)v48 - 6);
            *((_OWORD *)v69 - 5) = v72;
            *((_OWORD *)v69 - 8) = v70;
            *((_OWORD *)v69 - 7) = v71;
            long long v73 = *((_OWORD *)v48 - 4);
            long long v74 = *((_OWORD *)v48 - 3);
            long long v75 = *((_OWORD *)v48 - 1);
            v76 = v69 - 128;
            *((_OWORD *)v69 - 2) = *((_OWORD *)v48 - 2);
            *((_OWORD *)v69 - 1) = v75;
            *((_OWORD *)v69 - 4) = v73;
            *((_OWORD *)v69 - 3) = v74;
            v48 -= 128;
            v69 -= 128;
          }
          while (v48 != v56);
        }
        uint64_t v55 = v62 + 128;
        v190 = v76;
        v191 = v62 + 128;
        v192 = &v61[128 * v60];
        if (v56) {
          operator delete(v56);
        }
      }
      else
      {
        long long v49 = *v47;
        long long v50 = v47[1];
        long long v51 = v47[3];
        *((_OWORD *)v191 + 2) = v47[2];
        *((_OWORD *)v48 + 3) = v51;
        *(_OWORD *)unint64_t v48 = v49;
        *((_OWORD *)v48 + 1) = v50;
        long long v52 = v47[4];
        long long v53 = v47[5];
        long long v54 = v47[7];
        *((_OWORD *)v48 + 6) = v47[6];
        *((_OWORD *)v48 + 7) = v54;
        *((_OWORD *)v48 + 4) = v52;
        *((_OWORD *)v48 + 5) = v53;
        uint64_t v55 = v48 + 128;
      }
      v191 = v55;
      float v77 = (_DWORD *)(*a1 + 224 * *(int *)&v202[4 * v46] + 136);
      float v78 = v188;
      if (v188 >= v189)
      {
        v80 = (char *)v187;
        uint64_t v81 = (v188 - (unsigned char *)v187) >> 2;
        unint64_t v82 = v81 + 1;
        if ((unint64_t)(v81 + 1) >> 62) {
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        }
        uint64_t v83 = v189 - (unsigned char *)v187;
        if ((v189 - (unsigned char *)v187) >> 1 > v82) {
          unint64_t v82 = v83 >> 1;
        }
        if ((unint64_t)v83 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v84 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v84 = v82;
        }
        if (v84)
        {
          v85 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v189, v84);
          v80 = (char *)v187;
          float v78 = v188;
        }
        else
        {
          v85 = 0;
        }
        v86 = &v85[4 * v81];
        *(_DWORD *)v86 = *v77;
        float v79 = v86 + 4;
        while (v78 != v80)
        {
          int v87 = *((_DWORD *)v78 - 1);
          v78 -= 4;
          *((_DWORD *)v86 - 1) = v87;
          v86 -= 4;
        }
        v187 = v86;
        v188 = v79;
        v189 = &v85[4 * v84];
        if (v80) {
          operator delete(v80);
        }
      }
      else
      {
        *(_DWORD *)v188 = *v77;
        float v79 = v78 + 4;
      }
      v188 = v79;
      ++v46;
      v44 = (int *)v202;
    }
    while (v46 < (v203 - v202) >> 2);
  }
  ou_object_group::nmsOnBoxesHelper((void *)*MEMORY[0x263F5B6D0], (uint64_t *)&v190, (uint64_t *)&v187, (char **)&v193, a3);
  uint64_t v88 = (int *)v193;
  v89 = v194;
  if (v193 != v194)
  {
    v90 = (OUBox3d *)a2[1];
    do
    {
      v91 = (const OUBox3d *)(*a1 + 224 * *(int *)&v202[4 * *v88]);
      if ((unint64_t)v90 >= a2[2])
      {
        v90 = (OUBox3d *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(a2, v91);
      }
      else
      {
        OUBox3d::OUBox3d(v90, v91);
        v90 = (OUBox3d *)((char *)v90 + 224);
        a2[1] = (uint64_t)v90;
      }
      a2[1] = (uint64_t)v90;
      ++v88;
    }
    while (v88 != v89);
    uint64_t v88 = (int *)v193;
  }
  v191 = (char *)v190;
  v188 = (char *)v187;
  v194 = v88;
  v92 = (int *)__p;
  if (v200 != __p)
  {
    unint64_t v93 = 0;
    do
    {
      v94 = (long long *)(*a1 + 224 * v92[v93]);
      v95 = v191;
      if (v191 >= v192)
      {
        v103 = (char *)v190;
        uint64_t v104 = (v191 - (unsigned char *)v190) >> 7;
        unint64_t v105 = v104 + 1;
        if ((unint64_t)(v104 + 1) >> 57) {
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        }
        uint64_t v106 = v192 - (unsigned char *)v190;
        if ((v192 - (unsigned char *)v190) >> 6 > v105) {
          unint64_t v105 = v106 >> 6;
        }
        if ((unint64_t)v106 >= 0x7FFFFFFFFFFFFF80) {
          unint64_t v107 = 0x1FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v107 = v105;
        }
        if (v107)
        {
          v108 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<box3d>>((uint64_t)&v192, v107);
          v103 = (char *)v190;
          v95 = v191;
        }
        else
        {
          v108 = 0;
        }
        v109 = &v108[128 * v104];
        long long v110 = *v94;
        long long v111 = v94[1];
        long long v112 = v94[3];
        *((_OWORD *)v109 + 2) = v94[2];
        *((_OWORD *)v109 + 3) = v112;
        *(_OWORD *)v109 = v110;
        *((_OWORD *)v109 + 1) = v111;
        long long v113 = v94[4];
        long long v114 = v94[5];
        long long v115 = v94[7];
        *((_OWORD *)v109 + 6) = v94[6];
        *((_OWORD *)v109 + 7) = v115;
        *((_OWORD *)v109 + 4) = v113;
        *((_OWORD *)v109 + 5) = v114;
        if (v95 == v103)
        {
          v123 = &v108[128 * v104];
        }
        else
        {
          v116 = &v108[128 * v104];
          do
          {
            long long v117 = *((_OWORD *)v95 - 8);
            long long v118 = *((_OWORD *)v95 - 7);
            long long v119 = *((_OWORD *)v95 - 5);
            *((_OWORD *)v116 - 6) = *((_OWORD *)v95 - 6);
            *((_OWORD *)v116 - 5) = v119;
            *((_OWORD *)v116 - 8) = v117;
            *((_OWORD *)v116 - 7) = v118;
            long long v120 = *((_OWORD *)v95 - 4);
            long long v121 = *((_OWORD *)v95 - 3);
            long long v122 = *((_OWORD *)v95 - 1);
            v123 = v116 - 128;
            *((_OWORD *)v116 - 2) = *((_OWORD *)v95 - 2);
            *((_OWORD *)v116 - 1) = v122;
            *((_OWORD *)v116 - 4) = v120;
            *((_OWORD *)v116 - 3) = v121;
            v95 -= 128;
            v116 -= 128;
          }
          while (v95 != v103);
        }
        v102 = v109 + 128;
        v190 = v123;
        v191 = v109 + 128;
        v192 = &v108[128 * v107];
        if (v103) {
          operator delete(v103);
        }
      }
      else
      {
        long long v96 = *v94;
        long long v97 = v94[1];
        long long v98 = v94[3];
        *((_OWORD *)v191 + 2) = v94[2];
        *((_OWORD *)v95 + 3) = v98;
        *(_OWORD *)v95 = v96;
        *((_OWORD *)v95 + 1) = v97;
        long long v99 = v94[4];
        long long v100 = v94[5];
        long long v101 = v94[7];
        *((_OWORD *)v95 + 6) = v94[6];
        *((_OWORD *)v95 + 7) = v101;
        *((_OWORD *)v95 + 4) = v99;
        *((_OWORD *)v95 + 5) = v100;
        v102 = v95 + 128;
      }
      v191 = v102;
      v124 = (_DWORD *)(*a1 + 224 * *((int *)__p + v93) + 136);
      v125 = v188;
      if (v188 >= v189)
      {
        v127 = (char *)v187;
        uint64_t v128 = (v188 - (unsigned char *)v187) >> 2;
        unint64_t v129 = v128 + 1;
        if ((unint64_t)(v128 + 1) >> 62) {
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        }
        uint64_t v130 = v189 - (unsigned char *)v187;
        if ((v189 - (unsigned char *)v187) >> 1 > v129) {
          unint64_t v129 = v130 >> 1;
        }
        if ((unint64_t)v130 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v131 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v131 = v129;
        }
        if (v131)
        {
          v132 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v189, v131);
          v127 = (char *)v187;
          v125 = v188;
        }
        else
        {
          v132 = 0;
        }
        v133 = &v132[4 * v128];
        *(_DWORD *)v133 = *v124;
        v126 = v133 + 4;
        while (v125 != v127)
        {
          int v134 = *((_DWORD *)v125 - 1);
          v125 -= 4;
          *((_DWORD *)v133 - 1) = v134;
          v133 -= 4;
        }
        v187 = v133;
        v188 = v126;
        v189 = &v132[4 * v131];
        if (v127) {
          operator delete(v127);
        }
      }
      else
      {
        *(_DWORD *)v188 = *v124;
        v126 = v125 + 4;
      }
      v188 = v126;
      ++v93;
      v92 = (int *)__p;
    }
    while (v93 < (v200 - (unsigned char *)__p) >> 2);
  }
  ou_object_group::nmsOnBoxesHelper((void *)*MEMORY[0x263F5B720], (uint64_t *)&v190, (uint64_t *)&v187, (char **)&v193, a3);
  v135 = (int *)v193;
  v136 = v194;
  if (v193 != v194)
  {
    v137 = (OUBox3d *)a2[1];
    do
    {
      v138 = (const OUBox3d *)(*a1 + 224 * *((int *)__p + *v135));
      if ((unint64_t)v137 >= a2[2])
      {
        v137 = (OUBox3d *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(a2, v138);
      }
      else
      {
        OUBox3d::OUBox3d(v137, v138);
        v137 = (OUBox3d *)((char *)v137 + 224);
        a2[1] = (uint64_t)v137;
      }
      a2[1] = (uint64_t)v137;
      ++v135;
    }
    while (v135 != v136);
    v135 = (int *)v193;
  }
  v191 = (char *)v190;
  v188 = (char *)v187;
  v194 = v135;
  v139 = (int *)v196;
  if (v197 != v196)
  {
    unint64_t v140 = 0;
    do
    {
      v141 = (long long *)(*a1 + 224 * v139[v140]);
      v142 = v191;
      if (v191 >= v192)
      {
        v150 = (char *)v190;
        uint64_t v151 = (v191 - (unsigned char *)v190) >> 7;
        unint64_t v152 = v151 + 1;
        if ((unint64_t)(v151 + 1) >> 57) {
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        }
        uint64_t v153 = v192 - (unsigned char *)v190;
        if ((v192 - (unsigned char *)v190) >> 6 > v152) {
          unint64_t v152 = v153 >> 6;
        }
        if ((unint64_t)v153 >= 0x7FFFFFFFFFFFFF80) {
          unint64_t v154 = 0x1FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v154 = v152;
        }
        if (v154)
        {
          v155 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<box3d>>((uint64_t)&v192, v154);
          v150 = (char *)v190;
          v142 = v191;
        }
        else
        {
          v155 = 0;
        }
        v156 = &v155[128 * v151];
        long long v157 = *v141;
        long long v158 = v141[1];
        long long v159 = v141[3];
        *((_OWORD *)v156 + 2) = v141[2];
        *((_OWORD *)v156 + 3) = v159;
        *(_OWORD *)v156 = v157;
        *((_OWORD *)v156 + 1) = v158;
        long long v160 = v141[4];
        long long v161 = v141[5];
        long long v162 = v141[7];
        *((_OWORD *)v156 + 6) = v141[6];
        *((_OWORD *)v156 + 7) = v162;
        *((_OWORD *)v156 + 4) = v160;
        *((_OWORD *)v156 + 5) = v161;
        if (v142 == v150)
        {
          v170 = &v155[128 * v151];
        }
        else
        {
          v163 = &v155[128 * v151];
          do
          {
            long long v164 = *((_OWORD *)v142 - 8);
            long long v165 = *((_OWORD *)v142 - 7);
            long long v166 = *((_OWORD *)v142 - 5);
            *((_OWORD *)v163 - 6) = *((_OWORD *)v142 - 6);
            *((_OWORD *)v163 - 5) = v166;
            *((_OWORD *)v163 - 8) = v164;
            *((_OWORD *)v163 - 7) = v165;
            long long v167 = *((_OWORD *)v142 - 4);
            long long v168 = *((_OWORD *)v142 - 3);
            long long v169 = *((_OWORD *)v142 - 1);
            v170 = v163 - 128;
            *((_OWORD *)v163 - 2) = *((_OWORD *)v142 - 2);
            *((_OWORD *)v163 - 1) = v169;
            *((_OWORD *)v163 - 4) = v167;
            *((_OWORD *)v163 - 3) = v168;
            v142 -= 128;
            v163 -= 128;
          }
          while (v142 != v150);
        }
        v149 = v156 + 128;
        v190 = v170;
        v191 = v156 + 128;
        v192 = &v155[128 * v154];
        if (v150) {
          operator delete(v150);
        }
      }
      else
      {
        long long v143 = *v141;
        long long v144 = v141[1];
        long long v145 = v141[3];
        *((_OWORD *)v191 + 2) = v141[2];
        *((_OWORD *)v142 + 3) = v145;
        *(_OWORD *)v142 = v143;
        *((_OWORD *)v142 + 1) = v144;
        long long v146 = v141[4];
        long long v147 = v141[5];
        long long v148 = v141[7];
        *((_OWORD *)v142 + 6) = v141[6];
        *((_OWORD *)v142 + 7) = v148;
        *((_OWORD *)v142 + 4) = v146;
        *((_OWORD *)v142 + 5) = v147;
        v149 = v142 + 128;
      }
      v191 = v149;
      box3dToCentroidSizeAngle((float32x4_t *)(*a1 + 224 * *((int *)v196 + v140)), (uint64_t *)v186);
      float v171 = (float)(*((float *)v186[0] + 3) * *((float *)v186[0] + 4)) * *((float *)v186[0] + 5);
      v172 = v188;
      if (v188 >= v189)
      {
        v174 = (char *)v187;
        uint64_t v175 = (v188 - (unsigned char *)v187) >> 2;
        unint64_t v176 = v175 + 1;
        if ((unint64_t)(v175 + 1) >> 62) {
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        }
        uint64_t v177 = v189 - (unsigned char *)v187;
        if ((v189 - (unsigned char *)v187) >> 1 > v176) {
          unint64_t v176 = v177 >> 1;
        }
        if ((unint64_t)v177 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v178 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v178 = v176;
        }
        if (v178)
        {
          v179 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v189, v178);
          v174 = (char *)v187;
          v172 = v188;
        }
        else
        {
          v179 = 0;
        }
        v180 = (float *)&v179[4 * v175];
        float *v180 = v171;
        v173 = v180 + 1;
        while (v172 != v174)
        {
          int v181 = *((_DWORD *)v172 - 1);
          v172 -= 4;
          *((_DWORD *)v180-- - 1) = v181;
        }
        v187 = v180;
        v188 = (char *)v173;
        v189 = &v179[4 * v178];
        if (v174) {
          operator delete(v174);
        }
      }
      else
      {
        *(float *)v188 = v171;
        v173 = (float *)(v172 + 4);
      }
      v188 = (char *)v173;
      if (v186[0])
      {
        v186[1] = v186[0];
        operator delete(v186[0]);
      }
      ++v140;
      v139 = (int *)v196;
    }
    while (v140 < (v197 - (unsigned char *)v196) >> 2);
  }
  ou_object_group::nmsOnBoxesHelper((void *)*MEMORY[0x263F5B710], (uint64_t *)&v190, (uint64_t *)&v187, (char **)&v193, a3);
  v182 = (int *)v193;
  v183 = v194;
  if (v193 != v194)
  {
    v184 = (OUBox3d *)a2[1];
    do
    {
      v185 = (const OUBox3d *)(*a1 + 224 * *((int *)v196 + *v182));
      if ((unint64_t)v184 >= a2[2])
      {
        v184 = (OUBox3d *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(a2, v185);
      }
      else
      {
        OUBox3d::OUBox3d(v184, v185);
        v184 = (OUBox3d *)((char *)v184 + 224);
        a2[1] = (uint64_t)v184;
      }
      a2[1] = (uint64_t)v184;
      ++v182;
    }
    while (v182 != v183);
  }
  if (v187)
  {
    v188 = (char *)v187;
    operator delete(v187);
  }
  if (v190)
  {
    v191 = (char *)v190;
    operator delete(v190);
  }
  if (v193)
  {
    v194 = (int *)v193;
    operator delete(v193);
  }
  if (v196)
  {
    v197 = (char *)v196;
    operator delete(v196);
  }
  if (__p)
  {
    v200 = (char *)__p;
    operator delete(__p);
  }
  if (v202)
  {
    v203 = v202;
    operator delete(v202);
  }
}

void sub_23564B0E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,void *a28,uint64_t a29)
{
  if (__p) {
    operator delete(__p);
  }
  if (a28) {
    operator delete(a28);
  }
  int v33 = *(void **)(v31 - 128);
  if (v33)
  {
    *(void *)(v31 - 120) = v33;
    operator delete(v33);
  }
  *(void *)(v31 - 128) = v29;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)(v31 - 128));
  _Unwind_Resume(a1);
}

void ou_object_group::boxesFromObjects(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id v5 = a1;
  id v6 = a2;
  unint64_t v7 = 0;
  a3[1] = 0;
  a3[2] = 0;
  unint64_t v30 = v36;
  *a3 = 0;
  while (objc_msgSend(v5, "count", v30) > v7)
  {
    uint64_t v8 = [v5 objectAtIndexedSubscript:v7];
    char v9 = [v8 hasBoxesDict:v6];

    if (v9)
    {
      memset(v41, 0, 128);
      id v10 = [v5 objectAtIndexedSubscript:v7];
      int v11 = [v10 boxesDict];
      unint64_t v12 = [v11 objectForKeyedSubscript:v6];
      box3dFromNSArray(v12, (uint64_t)v41);

      uint64_t v13 = [v5 objectAtIndexedSubscript:v7];
      id v31 = [v13 type];
      int v14 = [v5 objectAtIndexedSubscript:v7];
      [v14 confidence];
      float v16 = v15;
      unint64_t v17 = [v5 objectAtIndexedSubscript:v7];
      uint64_t v18 = [v17 identifier];
      OUBox3d::OUBox3d((uint64_t)v32, v41, &v31, v18, v16);
      unint64_t v19 = a3[1];
      if (v19 >= a3[2])
      {
        uint64_t v29 = std::vector<OUBox3d>::__push_back_slow_path<OUBox3d>(a3, v32);
      }
      else
      {
        long long v20 = v32[0];
        long long v21 = v32[1];
        long long v22 = v32[3];
        *(_OWORD *)(v19 + 32) = v32[2];
        *(_OWORD *)(v19 + 48) = v22;
        *(_OWORD *)unint64_t v19 = v20;
        *(_OWORD *)(v19 + 16) = v21;
        long long v23 = v32[4];
        long long v24 = v32[5];
        long long v25 = v32[7];
        *(_OWORD *)(v19 + 96) = v32[6];
        *(_OWORD *)(v19 + 112) = v25;
        *(_OWORD *)(v19 + 64) = v23;
        *(_OWORD *)(v19 + 80) = v24;
        id v26 = v33;
        id v33 = 0;
        *(void *)(v19 + 128) = v26;
        *(_DWORD *)(v19 + 136) = v34;
        long long v27 = v35;
        long long v35 = 0u;
        *(void *)(v19 + 176) = 0;
        *(_OWORD *)(v19 + 144) = v27;
        *(_OWORD *)(v19 + 160) = 0u;
        *(_OWORD *)(v19 + 160) = *(_OWORD *)v36;
        *(void **)(v19 + 176) = v36[2];
        *(_OWORD *)unint64_t v30 = 0u;
        v30[2] = 0;
        *(_OWORD *)(v19 + 184) = __p;
        *(void *)(v19 + 200) = v38;
        long long __p = 0u;
        uint64_t v38 = 0;
        id v28 = v39;
        id v39 = 0;
        *(void *)(v19 + 208) = v28;
        *(_WORD *)(v19 + 216) = v40;
        uint64_t v29 = v19 + 224;
      }
      a3[1] = v29;

      if ((void)__p) {
        operator delete((void *)__p);
      }
      if (v36[0])
      {
        v36[1] = v36[0];
        operator delete(v36[0]);
      }
    }
    ++v7;
  }
}

void sub_23564B47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  OUBox3d::~OUBox3d((id *)va);

  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void OUBox3d::~OUBox3d(id *this)
{
  id v2 = this[23];
  if (v2) {
    operator delete(v2);
  }
  id v3 = this[20];
  if (v3)
  {
    this[21] = v3;
    operator delete(v3);
  }
}

void ou_object_group::box3d_iou_pairwise_matrix(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 64) = 0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  unint64_t v8 = 0x6DB6DB6DB6DB6DB7 * ((v6 - *a1) >> 5);
  int v15 = 0;
  std::vector<float>::vector(__p, v8, &v15);
  std::vector<std::vector<float>>::resize((uint64_t *)(a3 + 24), v8, (uint64_t)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  int v15 = 0;
  std::vector<float>::vector(__p, v8, &v15);
  std::vector<std::vector<float>>::resize((uint64_t *)a3, v8, (uint64_t)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  int v15 = 0;
  std::vector<float>::vector(__p, v8, &v15);
  std::vector<std::vector<float>>::resize((uint64_t *)(a3 + 48), v8, (uint64_t)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6 != v7)
  {
    uint64_t v9 = 0;
    if (v8 <= 1) {
      unint64_t v8 = 1;
    }
    do
    {
      uint64_t v10 = 0;
      for (uint64_t i = 0; i != v8; ++i)
      {
        long long v13 = 0u;
        long long v14 = 0u;
        *(_OWORD *)long long __p = 0u;
        box3dIou((float32x4_t *)(*a1 + 224 * v9), (float32x4_t *)(*a2 + v10), (uint64_t)__p);
        *(_DWORD *)(*(void *)(*(void *)a3 + 24 * v9) + 4 * i) = __p[0];
        *(_DWORD *)(*(void *)(*(void *)(a3 + 24) + 24 * v9) + 4 * i) = HIDWORD(__p[0]);
        *(_DWORD *)(*(void *)(*(void *)(a3 + 48) + 24 * v9) + 4 * i) = __p[1];
        v10 += 224;
      }
      ++v9;
    }
    while (v9 != v8);
  }
}

void sub_23564B6FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  ou_object_group::box3dPairwiseMatrices::~box3dPairwiseMatrices(v10);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<float>>::resize(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  BOOL v6 = a2 >= v5;
  unint64_t v7 = a2 - v5;
  if (v7 != 0 && v6)
  {
    std::vector<std::vector<float>>::__append(a1, v7, a3);
  }
  else if (!v6)
  {
    uint64_t v8 = *a1 + 24 * a2;
    if (v4 != v8)
    {
      uint64_t v9 = a1[1];
      do
      {
        int v11 = *(void **)(v9 - 24);
        v9 -= 24;
        uint64_t v10 = v11;
        if (v11)
        {
          *(void *)(v4 - 16) = v10;
          operator delete(v10);
        }
        uint64_t v4 = v9;
      }
      while (v9 != v8);
    }
    a1[1] = v8;
  }
}

void ou_object_group::box3dPairwiseMatrices::~box3dPairwiseMatrices(void **this)
{
  id v2 = this + 6;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&v2);
  id v2 = this + 3;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&v2);
  id v2 = this;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void ou_object_group::removeLargeChairs(uint64_t *a1@<X0>, void *a2@<X1>, char **a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  unint64_t v6 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  LODWORD(__p[0]) = 0;
  std::vector<float>::vector(&v35, v6, __p);
  unint64_t v7 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  int v33 = 0;
  std::vector<float>::vector(__p, v7, &v33);
  uint64_t v8 = *a1;
  if (a1[1] != *a1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    do
    {
      float v11 = boxVolume((_OWORD *)(v8 + v9));
      *((float *)__p[0] + v10++) = v11;
      uint64_t v8 = *a1;
      uint64_t v12 = a1[1];
      v9 += 224;
    }
    while (v10 < 0x6DB6DB6DB6DB6DB7 * ((v12 - *a1) >> 5));
    if (v12 != v8)
    {
      unint64_t v13 = 0;
      uint64_t v14 = *MEMORY[0x263F5B6D0];
      do
      {
        if ([*(id *)(v8 + 224 * v13 + 128) isEqualToString:v14]
          && *((float *)__p[0] + v13) >= 1.0)
        {
          uint64_t v16 = *a1;
          uint64_t v15 = a1[1];
          if (v15 != *a1)
          {
            unint64_t v17 = 0;
            int v18 = 0;
            uint64_t v19 = 128;
            do
            {
              if (v13 == v17)
              {
                *((_DWORD *)v35 + v13) = 0;
                float v20 = 0.0;
              }
              else
              {
                float v20 = *(float *)(*(void *)(*a2 + 24 * v13) + 4 * v17) / *((float *)__p[0] + v17);
                *((float *)v35 + v17) = v20;
              }
              if (v20 > 0.6)
              {
                v18 += [*(id *)(v16 + v19) isEqualToString:v14];
                uint64_t v16 = *a1;
                uint64_t v15 = a1[1];
              }
              ++v17;
              v19 += 224;
            }
            while (0x6DB6DB6DB6DB6DB7 * ((v15 - v16) >> 5) > v17);
            if (v18 > 1)
            {
              long long v22 = a3[1];
              unint64_t v21 = (unint64_t)a3[2];
              if ((unint64_t)v22 >= v21)
              {
                long long v24 = *a3;
                uint64_t v25 = (v22 - *a3) >> 2;
                unint64_t v26 = v25 + 1;
                if ((unint64_t)(v25 + 1) >> 62) {
                  _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
                }
                uint64_t v27 = v21 - (void)v24;
                if (v27 >> 1 > v26) {
                  unint64_t v26 = v27 >> 1;
                }
                if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v28 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v28 = v26;
                }
                if (v28)
                {
                  uint64_t v29 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)(a3 + 2), v28);
                  long long v24 = *a3;
                  long long v22 = a3[1];
                }
                else
                {
                  uint64_t v29 = 0;
                }
                unint64_t v30 = &v29[4 * v25];
                *(_DWORD *)unint64_t v30 = v13;
                long long v23 = v30 + 4;
                while (v22 != v24)
                {
                  int v31 = *((_DWORD *)v22 - 1);
                  v22 -= 4;
                  *((_DWORD *)v30 - 1) = v31;
                  v30 -= 4;
                }
                *a3 = v30;
                a3[1] = v23;
                a3[2] = &v29[4 * v28];
                if (v24) {
                  operator delete(v24);
                }
              }
              else
              {
                *(_DWORD *)long long v22 = v13;
                long long v23 = v22 + 4;
              }
              a3[1] = v23;
            }
          }
          if (v36 - (unsigned char *)v35 >= 1) {
            bzero(v35, 4 * (((unint64_t)(v36 - (unsigned char *)v35) >> 2) - ((unint64_t)(v36 - (unsigned char *)v35) > 3)) + 4);
          }
        }
        ++v13;
        uint64_t v8 = *a1;
      }
      while (0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5) > v13);
    }
  }
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v35)
  {
    unint64_t v36 = v35;
    operator delete(v35);
  }
}

void sub_23564BB60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  int v18 = *(void **)a11;
  if (*(void *)a11)
  {
    *(void *)(a11 + 8) = v18;
    operator delete(v18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ou_object_group::removeBoxFromList@<X0>(void *a1@<X0>, int **a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  std::unordered_set<int>::unordered_set<std::__wrap_iter<int const*>>((uint64_t)v11, *a2, a2[1]);
  int v10 = 0;
  if (a1[1] != *a1)
  {
    do
    {
      if (!std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::find<int>(v11, &v10))
      {
        unint64_t v5 = (const OUBox3d *)(*a1 + 224 * v10);
        unint64_t v6 = a3[1];
        if (v6 >= a3[2])
        {
          uint64_t v7 = std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(a3, v5);
        }
        else
        {
          OUBox3d::OUBox3d((OUBox3d *)a3[1], v5);
          uint64_t v7 = v6 + 224;
          a3[1] = v6 + 224;
        }
        a3[1] = v7;
      }
      unint64_t v8 = ++v10;
    }
    while (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[1] - *a1) >> 5) > v8);
  }
  return std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table((uint64_t)v11);
}

void sub_23564BCAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void ou_object_group::removeRowCol(__n128 **a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (a2[1] != *a2)
  {
    unint64_t v5 = 0;
    unint64_t v6 = a1[1];
    do
    {
      uint64_t v7 = (uint64_t)*a1 + 24 * *(int *)(v2 + 4 * v5);
      std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::vector<float> *,std::vector<float> *,std::vector<float> *,0>((__n128 *)(v7 + 24), v6, v7);
      unint64_t v6 = v8;
      uint64_t v9 = a1[1];
      if (v9 != v8)
      {
        int v10 = a1[1];
        do
        {
          uint64_t v12 = (void *)v10[-2].n128_u64[1];
          int v10 = (__n128 *)((char *)v10 - 24);
          float v11 = v12;
          if (v12)
          {
            v9[-1].n128_u64[0] = (unint64_t)v11;
            operator delete(v11);
          }
          uint64_t v9 = v10;
        }
        while (v10 != v6);
      }
      a1[1] = v6;
      ++v5;
      uint64_t v2 = *a2;
      uint64_t v13 = a2[1];
    }
    while (v5 < (v13 - *a2) >> 2);
    if (v13 != v2)
    {
      unint64_t v14 = 0;
      uint64_t v15 = *a1;
      uint64_t v16 = v6;
      do
      {
        if (v16 == v15)
        {
          uint64_t v16 = v15;
        }
        else
        {
          uint64_t v17 = 0;
          unint64_t v18 = 0;
          do
          {
            uint64_t v19 = (uint64_t)v15 + v17 * 8;
            uint64_t v20 = v15->n128_i64[v17 + 1];
            uint64_t v21 = v15->n128_u64[v17] + 4 * *(int *)(*a2 + 4 * v14);
            uint64_t v22 = v20 - (v21 + 4);
            if (v20 != v21 + 4)
            {
              memmove((void *)(v15->n128_u64[v17] + 4 * *(int *)(*a2 + 4 * v14)), (const void *)(v21 + 4), v20 - (v21 + 4));
              uint64_t v15 = *a1;
              unint64_t v6 = a1[1];
            }
            *(void *)(v19 + 8) = v21 + v22;
            ++v18;
            v17 += 3;
          }
          while (v18 < 0xAAAAAAAAAAAAAAABLL * (((char *)v6 - (char *)v15) >> 3));
          uint64_t v2 = *a2;
          uint64_t v13 = a2[1];
          uint64_t v16 = v6;
        }
        ++v14;
      }
      while (v14 < (v13 - v2) >> 2);
    }
  }
}

uint64_t ou_object_group::checkChairTableOverlap(float32x4_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (a2[1] == *a2) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v7 = *MEMORY[0x263F5B720];
  uint64_t v8 = *MEMORY[0x263F5B710];
  uint64_t v9 = 0xFFFFFFFFLL;
  float v10 = 0.0;
  do
  {
    char v11 = [*(id *)(v2 + v5 + 128) isEqualToString:v7];
    uint64_t v2 = *a2;
    if ((v11 & 1) != 0
      || (v12 = [*(id *)(v2 + v5 + 128) isEqualToString:v8], uint64_t v2 = *a2, v12)
      && (float)(*(float *)(v2 + v5 + 72) - *(float *)(v2 + v5 + 8)) < 1.3)
    {
      memset(v14, 0, sizeof(v14));
      box3dIou(a1, (float32x4_t *)(v2 + v5), (uint64_t)v14);
      if (*(float *)v14 <= v10) {
        uint64_t v9 = v9;
      }
      else {
        uint64_t v9 = v6;
      }
      if (*(float *)v14 > v10) {
        float v10 = *(float *)v14;
      }
      uint64_t v2 = *a2;
    }
    ++v6;
    v5 += 224;
  }
  while (0x6DB6DB6DB6DB6DB7 * ((a2[1] - v2) >> 5) > v6);
  return v9;
}

void ou_object_group::getIndexOverlapAll(void *a1, uint64_t *a2)
{
  std::vector<int>::size_type v4 = 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 5);
  __x[0] = 0;
  std::vector<int>::vector(&v21, v4, __x);
  uint64_t v5 = *a2;
  if (a2[1] != *a2)
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    uint64_t v8 = *MEMORY[0x263F5B6D0];
    do
    {
      if ([*(id *)(v5 + v6 + 128) isEqualToString:v8])
      {
        unsigned int v9 = ou_object_group::checkChairTableOverlap((float32x4_t *)(*a2 + v6), a2);
        unsigned int v10 = v9;
        if ((v9 & 0x80000000) == 0)
        {
          box3dToCentroidSizeAngle((float32x4_t *)(*a2 + 224 * v9), (uint64_t *)__x);
          box3dToCentroidSizeAngle((float32x4_t *)(*a2 + v6), (uint64_t *)__p);
          char v11 = __p[0];
          if ((float)(*(float *)(*(void *)__x + 12) * *(float *)(*(void *)__x + 16)) >= (float)((float)(*((float *)__p[0] + 3) * *((float *)__p[0] + 4)) + (float)(*((float *)__p[0] + 3) * *((float *)__p[0] + 4)))
            && vabds_f32(*(float *)(*a2 + v6 + 8), *(float *)(*a2 + 224 * v10 + 8)) <= 0.3)
          {
            ++v21.__begin_[v10];
          }
          else
          {
            unsigned int v10 = -1;
          }
          __p[1] = v11;
          operator delete(v11);
          if (*(void *)__x)
          {
            uint64_t v20 = *(void *)__x;
            operator delete(*(void **)__x);
          }
        }
      }
      else
      {
        unsigned int v10 = -1;
      }
      if (v7 >= (uint64_t)(a1[1] - *a1) >> 2) {
        std::vector<int>::__throw_out_of_range[abi:ne180100]();
      }
      *(_DWORD *)(*a1 + 4 * v7++) = v10;
      uint64_t v5 = *a2;
      uint64_t v12 = a2[1];
      v6 += 224;
    }
    while (v7 < 0x6DB6DB6DB6DB6DB7 * ((v12 - *a2) >> 5));
    if (v12 != v5)
    {
      uint64_t v13 = 0;
      unint64_t v14 = 0;
      uint64_t v15 = *MEMORY[0x263F5B6C8];
      uint64_t v16 = *MEMORY[0x263F5B710];
      do
      {
        if ([*(id *)(v5 + v13 + 128) isEqualToString:v8])
        {
          if (v14 >= (uint64_t)(a1[1] - *a1) >> 2) {
            std::vector<int>::__throw_out_of_range[abi:ne180100]();
          }
          uint64_t v17 = *(unsigned int *)(*a1 + 4 * v14);
          if ((v17 & 0x80000000) == 0
            && v21.__begin_[v17] == 1
            && (([*(id *)(*a2 + 224 * v17 + 128) isEqualToString:v15] & 1) != 0
             || [*(id *)(*a2 + 224 * v17 + 128) isEqualToString:v16])
            && vaddv_f32(vmul_f32(vsub_f32(*(float32x2_t *)(*a2 + v13 + 16), *(float32x2_t *)(*a2 + v13)), vsub_f32(vmul_f32(vadd_f32(*(float32x2_t *)(*a2 + 224 * v17), *(float32x2_t *)(*a2 + 224 * v17 + 32)), (float32x2_t)0x3F0000003F000000), vmul_f32(vadd_f32(*(float32x2_t *)(*a2 + v13), *(float32x2_t *)(*a2 + v13 + 32)), (float32x2_t)0x3F0000003F000000)))) < 0.0)
          {
            if (v14 >= (uint64_t)(a1[1] - *a1) >> 2) {
              std::vector<int>::__throw_out_of_range[abi:ne180100]();
            }
            *(_DWORD *)(*a1 + 4 * v14) = -1;
          }
        }
        ++v14;
        uint64_t v5 = *a2;
        v13 += 224;
      }
      while (v14 < 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 5));
    }
  }
  if (v21.__begin_)
  {
    v21.__end_ = v21.__begin_;
    operator delete(v21.__begin_);
  }
}

void sub_23564C28C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id ou_object_group::groupTableChair(void *a1)
{
  uint64_t v95 = *MEMORY[0x263EF8340];
  id v58 = a1;
  ou_object_group::boxesFromObjects(v58, (void *)*MEMORY[0x263F5B6A8], (uint64_t *)&v91);
  memset(&v90, 0, sizeof(v90));
  uint64_t v87 = 0;
  uint64_t v88 = 0;
  unint64_t v89 = 0;
  uint64_t v2 = v91;
  uint64_t v1 = v92;
  if (v91 == v92) {
    goto LABEL_59;
  }
  int v3 = 0;
  uint64_t v62 = *MEMORY[0x263F5B6D0];
  uint64_t v4 = *MEMORY[0x263F5B720];
  uint64_t v5 = *MEMORY[0x263F5B710];
  do
  {
    if (([v2[16] isEqualToString:v62] & 1) != 0
      || ([v2[16] isEqualToString:v4] & 1) != 0
      || [v2[16] isEqualToString:v5])
    {
      std::vector<int>::pointer end = v90.__end_;
      if (v90.__end_ >= v90.__end_cap_.__value_)
      {
        unint64_t v7 = (int *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>((uint64_t *)&v90, (const OUBox3d *)v2);
      }
      else
      {
        OUBox3d::OUBox3d((OUBox3d *)v90.__end_, (const OUBox3d *)v2);
        unint64_t v7 = end + 56;
      }
      v90.__end_ = v7;
    }
    v3 += [v2[16] isEqualToString:v62];
    v2 += 28;
  }
  while (v2 != v1);
  if (!v3 || v90.__begin_ == v90.__end_)
  {
LABEL_59:
    id v59 = 0;
  }
  else
  {
    ou_object_group::nmsClasswise((uint64_t *)&v90, (uint64_t *)&v82, 0.25);
    std::vector<OUBox3d>::__vdeallocate((void **)&v90.__begin_);
    std::vector<int> v90 = v82;
    memset(&v82, 0, sizeof(v82));
    v80 = &v82;
    std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
    ou_object_group::box3d_iou_pairwise_matrix((uint64_t *)&v90, &v90, (uint64_t)&v82);
    ou_object_group::removeLargeChairs((uint64_t *)&v90, &v83, (char **)&v80);
    memset(v79, 0, sizeof(v79));
    std::vector<std::vector<float>>::__init_with_size[abi:ne180100]<std::vector<float>*,std::vector<float>*>(v79, (uint64_t)v82.__begin_, (uint64_t)v82.__end_, 0xAAAAAAAAAAAAAAABLL * (((char *)v82.__end_ - (char *)v82.__begin_) >> 3));
    memset(v78, 0, sizeof(v78));
    std::vector<std::vector<float>>::__init_with_size[abi:ne180100]<std::vector<float>*,std::vector<float>*>(v78, v83, v84, 0xAAAAAAAAAAAAAAABLL * ((v84 - v83) >> 3));
    memset(v77, 0, sizeof(v77));
    std::vector<std::vector<float>>::__init_with_size[abi:ne180100]<std::vector<float>*,std::vector<float>*>(v77, v85, v86, 0xAAAAAAAAAAAAAAABLL * ((v86 - v85) >> 3));
    if (v80 != v81)
    {
      ou_object_group::removeBoxFromList(&v90, (int **)&v80, (uint64_t *)&v76);
      std::vector<OUBox3d>::__vdeallocate((void **)&v90.__begin_);
      std::vector<int> v90 = v76;
      memset(&v76, 0, sizeof(v76));
      *(void *)__CGFloat x = &v76;
      std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)__x);
      ou_object_group::removeRowCol(v79, (uint64_t *)&v80);
      ou_object_group::removeRowCol(v78, (uint64_t *)&v80);
      ou_object_group::removeRowCol(v77, (uint64_t *)&v80);
    }
    __x[0] = 0;
    std::vector<int>::vector(&v76, 0x6DB6DB6DB6DB6DB7 * (((char *)v90.__end_ - (char *)v90.__begin_) >> 5), __x);
    ou_object_group::getIndexOverlapAll(&v76, (uint64_t *)&v90);
    std::set<int>::set[abi:ne180100]<std::__wrap_iter<int *>>((uint64_t)__x, v76.__begin_, v76.__end_);
    long long __p = 0;
    long long v72 = 0;
    long long v73 = 0;
    uint64_t v8 = *(void ***)__x;
    if (*(void ***)__x != v75)
    {
      unsigned int v9 = 0;
      do
      {
        int v10 = *((_DWORD *)v8 + 7);
        if ((v10 & 0x80000000) == 0)
        {
          if (v9 >= v73)
          {
            uint64_t v12 = (char *)__p;
            uint64_t v13 = (v9 - (unsigned char *)__p) >> 2;
            unint64_t v14 = v13 + 1;
            if ((unint64_t)(v13 + 1) >> 62) {
              _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
            }
            uint64_t v15 = v73 - (unsigned char *)__p;
            if ((v73 - (unsigned char *)__p) >> 1 > v14) {
              unint64_t v14 = v15 >> 1;
            }
            if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v16 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v16 = v14;
            }
            if (v16)
            {
              uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v73, v16);
              uint64_t v12 = (char *)__p;
              unsigned int v9 = v72;
              int v10 = *((_DWORD *)v8 + 7);
            }
            else
            {
              uint64_t v17 = 0;
            }
            unint64_t v18 = &v17[4 * v13];
            *(_DWORD *)unint64_t v18 = v10;
            char v11 = v18 + 4;
            while (v9 != v12)
            {
              int v19 = *((_DWORD *)v9 - 1);
              v9 -= 4;
              *((_DWORD *)v18 - 1) = v19;
              v18 -= 4;
            }
            long long __p = v18;
            long long v72 = v11;
            long long v73 = &v17[4 * v16];
            if (v12) {
              operator delete(v12);
            }
          }
          else
          {
            *(_DWORD *)unsigned int v9 = v10;
            char v11 = v9 + 4;
          }
          long long v72 = v11;
          unsigned int v9 = v11;
        }
        uint64_t v20 = v8[1];
        if (v20)
        {
          do
          {
            std::vector<int> v21 = (void **)v20;
            uint64_t v20 = (void *)*v20;
          }
          while (v20);
        }
        else
        {
          do
          {
            std::vector<int> v21 = (void **)v8[2];
            BOOL v22 = *v21 == v8;
            uint64_t v8 = v21;
          }
          while (!v22);
        }
        uint64_t v8 = v21;
      }
      while (v21 != v75);
    }
    id v59 = objc_alloc_init(MEMORY[0x263EFF9A0]);
    std::vector<int>::pointer begin = v90.__begin_;
    if (v90.__end_ != v90.__begin_)
    {
      unint64_t v24 = 0;
      uint64_t v25 = 36;
      do
      {
        unsigned int v26 = v76.__begin_[v24];
        if ((v26 & 0x80000000) == 0)
        {
          uint64_t v27 = &begin[56 * v26];
          uint64_t v29 = *((void *)v27 + 18);
          unint64_t v28 = v27 + 36;
          unint64_t v30 = [v59 objectForKey:v29];
          BOOL v31 = v30 == 0;

          if (v31)
          {
            unint64_t v32 = objc_msgSend(objc_alloc(MEMORY[0x263EFF980]), "initWithObjects:", *(void *)&begin[v25], 0);
            [v59 setObject:v32 forKey:*v28];
          }
          else
          {
            unint64_t v32 = [v59 objectForKeyedSubscript:*v28];
            [v32 addObject:*(void *)&begin[v25]];
          }
        }
        ++v24;
        std::vector<int>::pointer begin = v90.__begin_;
        v25 += 56;
      }
      while (v24 < 0x6DB6DB6DB6DB6DB7 * (((char *)v90.__end_ - (char *)v90.__begin_) >> 5));
    }
    for (uint64_t i = v91; i != v92; i += 28)
    {
      id v34 = i[16];
      if (([v34 isEqualToString:v62] & 1) == 0
        && ([v34 isEqualToString:v4] & 1) == 0
        && ([v34 isEqualToString:v5] & 1) == 0)
      {
        std::vector<int>::pointer v35 = v90.__end_;
        if (v90.__end_ >= v90.__end_cap_.__value_)
        {
          unint64_t v36 = (int *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>((uint64_t *)&v90, (const OUBox3d *)i);
        }
        else
        {
          OUBox3d::OUBox3d((OUBox3d *)v90.__end_, (const OUBox3d *)i);
          unint64_t v36 = v35 + 56;
        }
        v90.__end_ = v36;
      }
    }
    long long v69 = 0u;
    long long v70 = 0u;
    long long v67 = 0u;
    long long v68 = 0u;
    obuint64_t j = [v59 allValues];
    uint64_t v38 = [obj countByEnumeratingWithState:&v67 objects:v94 count:16];
    if (v38)
    {
      uint64_t v39 = 0;
      uint64_t v61 = *(void *)v68;
      do
      {
        for (uint64_t j = 0; j != v38; ++j)
        {
          if (*(void *)v68 != v61) {
            objc_enumerationMutation(obj);
          }
          int v41 = *(void **)(*((void *)&v67 + 1) + 8 * j);
          long long v63 = 0u;
          long long v64 = 0u;
          long long v65 = 0u;
          long long v66 = 0u;
          id v42 = v41;
          uint64_t v43 = [v42 countByEnumeratingWithState:&v63 objects:v93 count:16];
          if (v43)
          {
            uint64_t v44 = *(void *)v64;
            do
            {
              for (uint64_t k = 0; k != v43; ++k)
              {
                if (*(void *)v64 != v44) {
                  objc_enumerationMutation(v42);
                }
                id v46 = *(id *)(*((void *)&v63 + 1) + 8 * k);
                uint64_t v47 = [NSNumber numberWithInt:v39];
                [0 setObject:v47 forKeyedSubscript:v46];
              }
              uint64_t v43 = [v42 countByEnumeratingWithState:&v63 objects:v93 count:16];
            }
            while (v43);
            int v48 = 1;
          }
          else
          {
            int v48 = 0;
          }

          uint64_t v39 = (v48 + v39);
        }
        uint64_t v38 = [obj countByEnumeratingWithState:&v67 objects:v94 count:16];
      }
      while (v38);
    }

    std::vector<int>::pointer v49 = v90.__end_;
    std::vector<int>::pointer v50 = v90.__begin_;
    if (v90.__begin_ != v90.__end_)
    {
      long long v51 = (void *)*MEMORY[0x263F5B6B0];
      do
      {
        long long v52 = v88;
        if ((unint64_t)v88 >= v89)
        {
          long long v53 = (OUBox3d *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(&v87, (const OUBox3d *)v50);
        }
        else
        {
          OUBox3d::OUBox3d(v88, (const OUBox3d *)v50);
          long long v53 = (OUBox3d *)((char *)v52 + 224);
        }
        uint64_t v88 = v53;
        if ([*((id *)v50 + 16) isEqualToString:v62])
        {
          long long v54 = [0 objectForKeyedSubscript:*((void *)v50 + 18)];
          BOOL v55 = v54 == 0;

          if (!v55)
          {
            objc_storeStrong((id *)v88 - 2, v51);
            id v56 = [0 objectForKeyedSubscript:*((void *)v50 + 18)];
            __int16 v57 = [v56 intValue];
            *((_WORD *)v88 - 4) = v57;
          }
        }
        v50 += 56;
      }
      while (v50 != v49);
    }
    if (__p)
    {
      long long v72 = (char *)__p;
      operator delete(__p);
    }
    std::__tree<int>::destroy((uint64_t)__x, v75[0]);
    if (v76.__begin_)
    {
      v76.__end_ = v76.__begin_;
      operator delete(v76.__begin_);
    }
    v76.__begin_ = (std::vector<int>::pointer)v77;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v76);
    v77[0] = (__n128 *)v78;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)v77);
    v78[0] = (__n128 *)v79;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)v78);
    if (v80)
    {
      uint64_t v81 = v80;
      operator delete(v80);
    }
    v80 = &v85;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
    v80 = &v83;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
    v80 = &v82;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
  }
  v82.__begin_ = (std::vector<int>::pointer)&v87;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
  v82.__begin_ = (std::vector<int>::pointer)&v90;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
  v82.__begin_ = (std::vector<int>::pointer)&v91;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);

  return v59;
}

void sub_23564CB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  a39 = &a43;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a39);
  a43 = (uint64_t)&a46;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a43);
  a46 = (uint64_t)&a49;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a46);
  if (__p)
  {
    a53 = (uint64_t)__p;
    operator delete(__p);
  }
  ou_object_group::box3dPairwiseMatrices::~box3dPairwiseMatrices((void **)&a55);
  a55 = (uint64_t)&a64;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&a55);
  a55 = (uint64_t)&a67;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&a55);
  a55 = (uint64_t)&a70;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&a55);

  _Unwind_Resume(a1);
}

id ou_object_group::groupStorage(void *a1)
{
  id v1 = a1;
  unint64_t v2 = 0;
  __int16 v57 = 0;
  id v58 = 0;
  id v59 = 0;
  uint64_t v49 = *MEMORY[0x263F5B6C8];
  uint64_t v48 = *MEMORY[0x263F5B6C0];
  uint64_t v47 = *MEMORY[0x263F5B710];
  uint64_t v45 = *MEMORY[0x263F5B6F0];
  while (objc_msgSend(v1, "count", v45) > v2)
  {
    int v3 = [v1 objectAtIndexedSubscript:v2];
    uint64_t v4 = [v3 type];
    if (([v4 isEqualToString:v49] & 1) == 0)
    {
      uint64_t v5 = [v1 objectAtIndexedSubscript:v2];
      uint64_t v6 = [v5 type];
      if (([v6 isEqualToString:v48] & 1) == 0)
      {
        unint64_t v7 = [v1 objectAtIndexedSubscript:v2];
        uint64_t v8 = [v7 type];
        if (([v8 isEqualToString:v47] & 1) == 0)
        {
          int v19 = [v1 objectAtIndexedSubscript:v2];
          uint64_t v20 = [v19 type];
          char v46 = [v20 isEqualToString:v45];

          if ((v46 & 1) == 0) {
            goto LABEL_26;
          }
          goto LABEL_9;
        }
      }
    }

LABEL_9:
    unsigned int v9 = v58;
    if (v58 >= v59)
    {
      char v11 = v57;
      uint64_t v12 = (v58 - v57) >> 2;
      unint64_t v13 = v12 + 1;
      if ((unint64_t)(v12 + 1) >> 62) {
        _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
      }
      uint64_t v14 = v59 - v57;
      if ((v59 - v57) >> 1 > v13) {
        unint64_t v13 = v14 >> 1;
      }
      if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v15 = v13;
      }
      if (v15)
      {
        unint64_t v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v59, v15);
        char v11 = v57;
        unsigned int v9 = v58;
      }
      else
      {
        unint64_t v16 = 0;
      }
      uint64_t v17 = &v16[4 * v12];
      *(_DWORD *)uint64_t v17 = v2;
      int v10 = v17 + 4;
      while (v9 != v11)
      {
        int v18 = *((_DWORD *)v9 - 1);
        v9 -= 4;
        *((_DWORD *)v17 - 1) = v18;
        v17 -= 4;
      }
      __int16 v57 = v17;
      id v58 = v10;
      id v59 = &v16[4 * v15];
      if (v11) {
        operator delete(v11);
      }
    }
    else
    {
      *(_DWORD *)id v58 = v2;
      int v10 = v9 + 4;
    }
    id v58 = v10;
LABEL_26:
    ++v2;
  }
  std::vector<int> v21 = v57;
  if (v57 == v58)
  {
    uint64_t v37 = 0;
    if (v57) {
      goto LABEL_48;
    }
  }
  else
  {
    memset(v56, 0, sizeof(v56));
    std::vector<int>::size_type v22 = (v58 - v57) >> 2;
    __x[0].i32[0] = 0;
    std::vector<int>::vector(&v52, v22, (const std::vector<int>::value_type *)__x);
    std::vector<std::vector<int>>::resize(v56, v22, (uint64_t)&v52);
    if (v52.__begin_)
    {
      v52.__end_ = v52.__begin_;
      operator delete(v52.__begin_);
    }
    long long v23 = v57;
    unint64_t v24 = v58;
    if (v58 != v57)
    {
      unint64_t v25 = 0;
      uint64_t v26 = *MEMORY[0x263F5B6A8];
      do
      {
        if ((unint64_t)(v24 - v23) <= 4)
        {
          unint64_t v36 = (unint64_t)(v24 - v23) >> 2;
        }
        else
        {
          uint64_t v27 = *(int *)&v23[4 * v25];
          unint64_t v28 = 1;
          do
          {
            uint64_t v29 = *(int *)&v23[4 * v28];
            unint64_t v30 = [v1 objectAtIndexedSubscript:v27];
            BOOL v31 = [v30 boxesDict];
            unint64_t v32 = [v31 objectForKey:v26];
            box3dFromNSArray(v32, (uint64_t)&v52);

            int v33 = [v1 objectAtIndexedSubscript:v29];
            id v34 = [v33 boxesDict];
            std::vector<int>::pointer v35 = [v34 objectForKey:v26];
            box3dFromNSArray(v35, (uint64_t)__x);

            memset(v50, 0, sizeof(v50));
            box3dIou((float32x4_t *)&v52, __x, (uint64_t)v50);
            *(_DWORD *)(*(void *)(v56[0] + 24 * v25) + 4 * v28++) = *(float *)v50 > 0.05;
            long long v23 = v57;
            unint64_t v24 = v58;
            unint64_t v36 = (v58 - v57) >> 2;
          }
          while (v36 > v28);
        }
        ++v25;
      }
      while (v36 > v25);
    }
    ou_object_group::RelationGrouping::RelationGrouping(&v52, v56);
    ou_object_group::RelationGrouping::groupItems((uint64_t *)&v52);
    uint64_t v37 = [MEMORY[0x263EFF980] arrayWithCapacity:0xCCCCCCCCCCCCCCCDLL * ((v55 - v54) >> 3)];
    uint64_t v38 = v54;
    uint64_t v39 = v55;
    while (v38 != v39)
    {
      __int16 v40 = [MEMORY[0x263EFF980] array];
      for (uint64_t i = *(uint64_t ***)(v38 + 16); i; uint64_t i = (uint64_t **)*i)
      {
        id v42 = [v1 objectAtIndexedSubscript:*(int *)&v57[4 * *((int *)i + 4)]];
        uint64_t v43 = [v42 identifier];
        [v40 addObject:v43];
      }
      [v37 addObject:v40];

      v38 += 40;
    }
    __x[0].i64[0] = (uint64_t)&v54;
    std::vector<ou_object_group::ItemGroup>::__destroy_vector::operator()[abi:ne180100]((void ***)__x);
    if (__p) {
      operator delete(__p);
    }
    __x[0].i64[0] = (uint64_t)&v52;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)__x);
    v52.__begin_ = (std::vector<int>::pointer)v56;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v52);
    std::vector<int> v21 = v57;
    if (v57)
    {
LABEL_48:
      id v58 = v21;
      operator delete(v21);
    }
  }

  return v37;
}

void sub_23564D244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38)
{
  ou_object_group::RelationGrouping::~RelationGrouping((ou_object_group::RelationGrouping *)&__p);
  a15 = v39 - 152;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  int v41 = *(void **)(v39 - 128);
  if (v41)
  {
    *(void *)(v39 - 120) = v41;
    operator delete(v41);
  }

  _Unwind_Resume(a1);
}

void std::vector<std::vector<int>>::resize(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  BOOL v6 = a2 >= v5;
  unint64_t v7 = a2 - v5;
  if (v7 != 0 && v6)
  {
    std::vector<std::vector<int>>::__append(a1, v7, a3);
  }
  else if (!v6)
  {
    uint64_t v8 = *a1 + 24 * a2;
    if (v4 != v8)
    {
      uint64_t v9 = a1[1];
      do
      {
        char v11 = *(void **)(v9 - 24);
        v9 -= 24;
        int v10 = v11;
        if (v11)
        {
          *(void *)(v4 - 16) = v10;
          operator delete(v10);
        }
        uint64_t v4 = v9;
      }
      while (v9 != v8);
    }
    a1[1] = v8;
  }
}

uint64_t *ou_object_group::RelationGrouping::groupItems(uint64_t *this)
{
  uint64_t v2 = *this;
  uint64_t v1 = this[1];
  if (v1 != *this)
  {
    int v3 = this;
    unint64_t v4 = 0;
    unint64_t v5 = this + 6;
    do
    {
      if (((*(void *)(v3[3] + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
      {
        memset(v8, 0, sizeof(v8));
        int v9 = 1065353216;
        ou_object_group::RelationGrouping::dfs(v3, v4, (uint64_t)v8);
        unint64_t v6 = v3[7];
        if (v6 >= v3[8])
        {
          uint64_t v7 = std::vector<ou_object_group::ItemGroup>::__push_back_slow_path<ou_object_group::ItemGroup const&>(v5, (uint64_t)v8);
        }
        else
        {
          std::unordered_set<int>::unordered_set(v3[7], (uint64_t)v8);
          uint64_t v7 = v6 + 40;
          v3[7] = v6 + 40;
        }
        v3[7] = v7;
        this = (uint64_t *)std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table((uint64_t)v8);
        uint64_t v2 = *v3;
        uint64_t v1 = v3[1];
      }
      ++v4;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((v1 - v2) >> 3) > v4);
  }
  return this;
}

void sub_23564D520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 56) = v10;
  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void ou_object_group::RelationGrouping::~RelationGrouping(ou_object_group::RelationGrouping *this)
{
  int v3 = (void **)((char *)this + 48);
  std::vector<ou_object_group::ItemGroup>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2) {
    operator delete(v2);
  }
  int v3 = (void **)this;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&v3);
}

uint64_t OUBox3d::OUBox3d(uint64_t a1, long long *a2, id *a3, void *a4, float a5)
{
  id v9 = a4;
  long long v10 = a2[3];
  long long v12 = *a2;
  long long v11 = a2[1];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v11;
  long long v13 = a2[7];
  long long v15 = a2[4];
  long long v14 = a2[5];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v13;
  *(_OWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 80) = v14;
  *(void *)(a1 + 128) = *a3;
  *(float *)(a1 + 136) = a5;
  *(void *)(a1 + 144) = [v9 copy];
  *(void *)(a1 + 152) = (id)*MEMORY[0x263F5B6B8];
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(void *)(a1 + 208) = 0;
  *(_WORD *)(a1 + 216) = -1;

  return a1;
}

void sub_23564D6A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *ou_object_group::RelationGrouping::RelationGrouping(void *a1, uint64_t *a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  std::vector<std::vector<int>>::__init_with_size[abi:ne180100]<std::vector<int>*,std::vector<int>*>(a1, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3));
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 3);
  v5[0] = 0;
  std::vector<BOOL>::vector(a1 + 3, v3, v5);
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0;
  return a1;
}

void sub_23564D73C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void *std::vector<std::vector<int>>::__init_with_size[abi:ne180100]<std::vector<int>*,std::vector<int>*>(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    std::vector<std::vector<int>>::__vallocate[abi:ne180100](result, a4);
    double result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<int>>,std::vector<int>*,std::vector<int>*,std::vector<int>*>((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_23564D7BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<std::vector<int>>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  }
  double result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<int>>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<int>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<int>>,std::vector<int>*,std::vector<int>*,std::vector<int>*>(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  long long v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  _OWORD v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *uint64_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(v4, *(const void **)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 2);
      uint64_t v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_23564D918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    double result = std::vector<float>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_23564D98C(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  if (v1 != v2)
  {
    uint64_t v3 = **(void **)(a1 + 16);
    do
    {
      unint64_t v5 = *(void **)(v3 - 24);
      v3 -= 24;
      uint64_t v4 = v5;
      if (v5)
      {
        *(void *)(v1 - 16) = v4;
        operator delete(v4);
      }
      uint64_t v1 = v3;
    }
    while (v3 != v2);
  }
}

void std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::vector<int>>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::vector<int>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      uint64_t v6 = *(void **)(v4 - 24);
      v4 -= 24;
      unint64_t v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 16) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

void *std::vector<BOOL>::vector(void *a1, unint64_t a2, unsigned __int8 *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<BOOL>::__vallocate[abi:ne180100](a1, a2);
    int v6 = *a3;
    unint64_t v7 = a1[1];
    unint64_t v8 = v7 + a2;
    a1[1] = v7 + a2;
    if (v7)
    {
      unint64_t v9 = v8 - 1;
      if (((v8 - 1) ^ (v7 - 1)) < 0x40)
      {
LABEL_10:
        uint64_t v13 = *a1 + 8 * (v7 >> 6);
        int v14 = v7 & 0x3F;
        if (v6) {
          std::__fill_n[abi:ne180100]<true,std::vector<BOOL>>(&v13, a2);
        }
        else {
          std::__fill_n[abi:ne180100]<false,std::vector<BOOL>>((uint64_t)&v13, a2);
        }
        return a1;
      }
    }
    else
    {
      unint64_t v9 = v8 - 1;
    }
    unint64_t v10 = v9 >> 6;
    if (v8 >= 0x41) {
      unint64_t v11 = v10;
    }
    else {
      unint64_t v11 = 0;
    }
    *(void *)(*a1 + 8 * v11) = 0;
    goto LABEL_10;
  }
  return a1;
}

void *std::vector<BOOL>::__vallocate[abi:ne180100](void *a1, uint64_t a2)
{
  if (a2 < 0) {
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  }
  double result = _ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)(a1 + 2), ((unint64_t)(a2 - 1) >> 6) + 1);
  *a1 = result;
  a1[1] = 0;
  a1[2] = v4;
  return result;
}

void *std::__fill_n[abi:ne180100]<true,std::vector<BOOL>>(void *result, unint64_t a2)
{
  unint64_t v2 = a2;
  uint64_t v3 = result;
  int v4 = *((_DWORD *)result + 2);
  unint64_t v5 = (void *)*result;
  if (v4)
  {
    if ((64 - v4) >= a2) {
      unint64_t v6 = a2;
    }
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ |= (0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4);
    unint64_t v2 = a2 - v6;
    *double result = v5;
  }
  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    double result = memset(v5, 255, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    unint64_t v8 = &v5[v7];
    *uint64_t v3 = v8;
    *v8 |= 0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F);
  }
  return result;
}

void std::__fill_n[abi:ne180100]<false,std::vector<BOOL>>(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  int v4 = *(_DWORD *)(a1 + 8);
  unint64_t v5 = *(void **)a1;
  if (v4)
  {
    if ((64 - v4) >= a2) {
      unint64_t v6 = a2;
    }
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4));
    unint64_t v2 = a2 - v6;
    *(void *)a1 = v5;
  }
  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    bzero(v5, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    unint64_t v8 = &v5[v7];
    *(void *)a1 = v8;
    *v8 &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F));
  }
}

void *ou_object_group::RelationGrouping::dfs(uint64_t *a1, int a2, uint64_t a3)
{
  int v9 = a2;
  *(void *)(a1[3] + (((unint64_t)a2 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a2;
  double result = std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a3, &v9, &v9);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  if (v6 != *a1)
  {
    unint64_t v8 = 0;
    do
    {
      if (*(_DWORD *)(*(void *)(v7 + 24 * v9) + 4 * v8) == 1
        && ((*(void *)(a1[3] + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      {
        double result = (void *)ou_object_group::RelationGrouping::dfs(a1, v8, a3);
        uint64_t v7 = *a1;
        uint64_t v6 = a1[1];
      }
      ++v8;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) > v8);
  }
  return result;
}

void *std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(uint64_t a1, int *a2, _DWORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    int v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      unint64_t v10 = *v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == v6) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3) {
              break;
            }
          }
          unint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  unint64_t v10 = operator new(0x18uLL);
  *unint64_t v10 = 0;
  v10[1] = v6;
  *((_DWORD *)v10 + 4) = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__rehash<true>(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  int v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *unint64_t v10 = *v19;
LABEL_38:
    void *v19 = v10;
    goto LABEL_39;
  }
  *unint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*v10)
  {
    unint64_t v20 = *(void *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    int v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v10;
}

void sub_23564E050(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__do_rehash<true>(a1, prime);
    }
  }
}

void std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      unint64_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *uint64_t v7 = *v11;
            *unint64_t v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            unint64_t v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          unint64_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    unint64_t v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

uint64_t std::vector<ou_object_group::ItemGroup>::__push_back_slow_path<ou_object_group::ItemGroup const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666) {
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x333333333333333) {
    unint64_t v9 = 0x666666666666666;
  }
  else {
    unint64_t v9 = v5;
  }
  size_t v17 = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<ou_object_group::ItemGroup>>(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  float v13 = v10;
  BOOL v14 = &v10[40 * v4];
  unint64_t v16 = &v10[40 * v9];
  std::unordered_set<int>::unordered_set((uint64_t)v14, a2);
  unint64_t v15 = v14 + 40;
  std::vector<ou_object_group::ItemGroup>::__swap_out_circular_buffer(a1, &v13);
  uint64_t v11 = a1[1];
  std::__split_buffer<ou_object_group::ItemGroup>::~__split_buffer((uint64_t)&v13);
  return v11;
}

void sub_23564E3A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<ou_object_group::ItemGroup>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::unordered_set<int>::unordered_set(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__rehash<true>(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(int **)(a2 + 16); i; uint64_t i = *(int **)i)
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a1, i + 4, i + 4);
  return a1;
}

void sub_23564E418(_Unwind_Exception *a1)
{
  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t std::vector<ou_object_group::ItemGroup>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  unint64_t v5 = (uint64_t *)*a1;
  unint64_t v4 = (uint64_t *)a1[1];
  uint64_t result = a2[1];
  while (v4 != v5)
  {
    v4 -= 5;
    uint64_t result = std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__hash_table(result - 40, v4);
  }
  a2[1] = result;
  uint64_t v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  uint64_t v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<ou_object_group::ItemGroup>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(40 * a2);
}

uint64_t std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__hash_table(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *(void *)uint64_t result = v2;
  *(void *)(result + 8) = a2[1];
  a2[1] = 0;
  uint64_t v5 = a2[2];
  uint64_t v3 = a2 + 2;
  uint64_t v4 = v5;
  *(void *)(result + 16) = v5;
  uint64_t v6 = v3[1];
  *(void *)(result + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    unint64_t v7 = *(void *)(v4 + 8);
    unint64_t v8 = *(void *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        v7 %= v8;
      }
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(void *)(v2 + 8 * v7) = result + 16;
    *uint64_t v3 = 0;
    v3[1] = 0;
  }
  return result;
}

uint64_t std::__split_buffer<ou_object_group::ItemGroup>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(i - 40);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::vector<ou_object_group::ItemGroup>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(v4 - 40);
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *std::vector<unsigned long>::vector(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE11__vallocateB8ne180100Em(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_23564E6EC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *,false>(uint64_t result, uint64_t *a2, uint64_t **a3, uint64_t a4, char a5)
{
  uint64_t v11 = (uint64_t *)result;
  while (2)
  {
    unint64_t v12 = v11;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v11 = v12;
          uint64_t v13 = (char *)a2 - (char *)v12;
          unint64_t v14 = a2 - v12;
          if (v6 || !v5)
          {
            switch(v14)
            {
              case 0uLL:
              case 1uLL:
                return result;
              case 2uLL:
                uint64_t v44 = *(a2 - 1);
                uint64_t v45 = *v12;
                if (*(float *)(**a3 + 4 * (int)v44) > *(float *)(**a3 + (*v12 << 32 >> 30)))
                {
                  *unint64_t v12 = v44;
                  *(a2 - 1) = v45;
                }
                break;
              case 3uLL:
                uint64_t result = (uint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v12, v12 + 1, a2 - 1, a3);
                break;
              case 4uLL:
                uint64_t result = (uint64_t)std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v12, v12 + 1, v12 + 2, a2 - 1, a3);
                break;
              case 5uLL:
                char v46 = v12 + 1;
                uint64_t v47 = v12 + 2;
                uint64_t v48 = v12 + 3;
                uint64_t result = (uint64_t)std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v12, v12 + 1, v12 + 2, v12 + 3, a3);
                uint64_t v49 = *(a2 - 1);
                uint64_t v50 = v12[3];
                uint64_t v51 = **a3;
                if (*(float *)(v51 + 4 * (int)v49) > *(float *)(v51 + 4 * (int)v50))
                {
                  *uint64_t v48 = v49;
                  *(a2 - 1) = v50;
                  uint64_t v52 = *v48;
                  uint64_t v53 = *v47;
                  float v54 = *(float *)(v51 + (*v48 << 32 >> 30));
                  if (v54 > *(float *)(v51 + (*v47 << 32 >> 30)))
                  {
                    *uint64_t v47 = v52;
                    *uint64_t v48 = v53;
                    uint64_t v55 = *v46;
                    if (v54 > *(float *)(v51 + (*v46 << 32 >> 30)))
                    {
                      v12[1] = v52;
                      v12[2] = v55;
                      uint64_t v56 = *v12;
                      if (v54 > *(float *)(v51 + (*v12 << 32 >> 30)))
                      {
                        *unint64_t v12 = v52;
                        v12[1] = v56;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v13 <= 191)
          {
            if (a5)
            {
              if (v12 != a2)
              {
                __int16 v57 = v12 + 1;
                if (v12 + 1 != a2)
                {
                  uint64_t v58 = 0;
                  uint64_t v59 = **a3;
                  unint64_t v60 = v12;
                  do
                  {
                    uint64_t v62 = *v60;
                    uint64_t v61 = v60[1];
                    unint64_t v60 = v57;
                    float v63 = *(float *)(v59 + 4 * (int)v61);
                    if (v63 > *(float *)(v59 + 4 * (int)v62))
                    {
                      uint64_t v64 = v58;
                      while (1)
                      {
                        *(uint64_t *)((char *)v12 + v64 + 8) = v62;
                        if (!v64) {
                          break;
                        }
                        uint64_t v62 = *(uint64_t *)((char *)v12 + v64 - 8);
                        v64 -= 8;
                        if (v63 <= *(float *)(v59 + 4 * (int)v62))
                        {
                          long long v65 = (uint64_t *)((char *)v12 + v64 + 8);
                          goto LABEL_79;
                        }
                      }
                      long long v65 = v12;
LABEL_79:
                      *long long v65 = v61;
                    }
                    __int16 v57 = v60 + 1;
                    v58 += 8;
                  }
                  while (v60 + 1 != a2);
                }
              }
            }
            else if (v12 != a2)
            {
              long long v97 = v12 + 1;
              if (v12 + 1 != a2)
              {
                uint64_t v98 = **a3;
                do
                {
                  uint64_t v100 = *v11;
                  uint64_t v99 = v11[1];
                  uint64_t v11 = v97;
                  float v101 = *(float *)(v98 + 4 * (int)v99);
                  if (v101 > *(float *)(v98 + 4 * (int)v100))
                  {
                    do
                    {
                      *long long v97 = v100;
                      uint64_t v100 = *(v97 - 2);
                      --v97;
                    }
                    while (v101 > *(float *)(v98 + 4 * (int)v100));
                    *long long v97 = v99;
                  }
                  long long v97 = v11 + 1;
                }
                while (v11 + 1 != a2);
              }
            }
            return result;
          }
          if (!a4)
          {
            if (v12 != a2)
            {
              int64_t v66 = (v14 - 2) >> 1;
              long long v67 = *a3;
              int64_t v68 = v66;
              do
              {
                int64_t v69 = v68;
                if (v66 >= v68)
                {
                  uint64_t v70 = (2 * v68) | 1;
                  long long v71 = &v12[v70];
                  uint64_t v72 = 2 * v68 + 2;
                  uint64_t v73 = *v67;
                  if (v72 < (uint64_t)v14 && *(float *)(v73 + (*v71 << 32 >> 30)) > *(float *)(v73 + 4 * (int)v71[1]))
                  {
                    ++v71;
                    uint64_t v70 = 2 * v69 + 2;
                  }
                  long long v74 = &v12[v69];
                  uint64_t result = *v71;
                  uint64_t v75 = *v74;
                  float v76 = *(float *)(v73 + (*v74 << 32 >> 30));
                  if (*(float *)(v73 + (*v71 << 32 >> 30)) <= v76)
                  {
                    do
                    {
                      float v77 = v71;
                      *long long v74 = result;
                      if (v66 < v70) {
                        break;
                      }
                      uint64_t v78 = 2 * v70;
                      uint64_t v70 = (2 * v70) | 1;
                      long long v71 = &v12[v70];
                      uint64_t v79 = v78 + 2;
                      if (v79 < (uint64_t)v14
                        && *(float *)(v73 + (*v71 << 32 >> 30)) > *(float *)(v73 + 4 * (int)v71[1]))
                      {
                        ++v71;
                        uint64_t v70 = v79;
                      }
                      uint64_t result = *v71;
                      long long v74 = v77;
                    }
                    while (*(float *)(v73 + (*v71 << 32 >> 30)) <= v76);
                    *float v77 = v75;
                  }
                }
                int64_t v68 = v69 - 1;
              }
              while (v69);
              uint64_t v80 = (unint64_t)v13 >> 3;
              do
              {
                uint64_t v81 = 0;
                uint64_t v82 = *v12;
                uint64_t v83 = *a3;
                uint64_t v84 = v12;
                do
                {
                  uint64_t v85 = v84;
                  v84 += v81 + 1;
                  uint64_t v86 = 2 * v81;
                  uint64_t v81 = (2 * v81) | 1;
                  uint64_t v87 = v86 + 2;
                  if (v87 < v80)
                  {
                    uint64_t result = v84[1];
                    if (*(float *)(*v83 + (*v84 << 32 >> 30)) > *(float *)(*v83 + 4 * (int)result))
                    {
                      ++v84;
                      uint64_t v81 = v87;
                    }
                  }
                  uint64_t *v85 = *v84;
                }
                while (v81 <= (uint64_t)((unint64_t)(v80 - 2) >> 1));
                if (v84 == --a2)
                {
                  uint64_t *v84 = v82;
                }
                else
                {
                  uint64_t *v84 = *a2;
                  *a2 = v82;
                  uint64_t v88 = (char *)v84 - (char *)v12 + 8;
                  if (v88 >= 9)
                  {
                    unint64_t v89 = (((unint64_t)v88 >> 3) - 2) >> 1;
                    std::vector<int> v90 = &v12[v89];
                    uint64_t v91 = *v90;
                    uint64_t v92 = *v84;
                    uint64_t v93 = *v83;
                    float v94 = *(float *)(v93 + (*v84 << 32 >> 30));
                    if (*(float *)(v93 + (*v90 << 32 >> 30)) > v94)
                    {
                      do
                      {
                        uint64_t v95 = v90;
                        uint64_t *v84 = v91;
                        if (!v89) {
                          break;
                        }
                        unint64_t v89 = (v89 - 1) >> 1;
                        std::vector<int> v90 = &v12[v89];
                        uint64_t v91 = *v90;
                        uint64_t v84 = v95;
                      }
                      while (*(float *)(v93 + (*v90 << 32 >> 30)) > v94);
                      uint64_t *v95 = v92;
                    }
                  }
                }
              }
              while (v80-- > 2);
            }
            return result;
          }
          unint64_t v15 = v14 >> 1;
          unint64_t v16 = &v12[v14 >> 1];
          if ((unint64_t)v13 >= 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v11, &v11[v14 >> 1], a2 - 1, a3);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v11 + 1, v16 - 1, a2 - 2, a3);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v11 + 2, &v11[v15 + 1], a2 - 3, a3);
            uint64_t result = (uint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v16 - 1, v16, &v11[v15 + 1], a3);
            uint64_t v17 = *v11;
            *uint64_t v11 = *v16;
            *unint64_t v16 = v17;
          }
          else
          {
            uint64_t result = (uint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(&v11[v14 >> 1], v11, a2 - 1, a3);
          }
          --a4;
          uint64_t v18 = *v11;
          uint64_t v19 = **a3;
          if (a5) {
            break;
          }
          float v20 = *(float *)(v19 + 4 * (int)v18);
          if (*(float *)(v19 + (*(v11 - 1) << 32 >> 30)) > v20) {
            break;
          }
          if (v20 <= *(float *)(v19 + (*(a2 - 1) << 32 >> 30)))
          {
            unint64_t v36 = v11 + 1;
            do
            {
              unint64_t v12 = v36;
              if (v36 >= a2) {
                break;
              }
              ++v36;
            }
            while (v20 <= *(float *)(v19 + (*v12 << 32 >> 30)));
          }
          else
          {
            unint64_t v12 = v11;
            do
            {
              uint64_t v35 = v12[1];
              ++v12;
            }
            while (v20 <= *(float *)(v19 + 4 * (int)v35));
          }
          uint64_t v37 = a2;
          if (v12 < a2)
          {
            uint64_t v37 = a2;
            do
              uint64_t v38 = *--v37;
            while (v20 > *(float *)(v19 + 4 * (int)v38));
          }
          if (v12 < v37)
          {
            uint64_t v39 = *v12;
            uint64_t v40 = *v37;
            do
            {
              *unint64_t v12 = v40;
              uint64_t *v37 = v39;
              do
              {
                uint64_t v41 = v12[1];
                ++v12;
                uint64_t v39 = v41;
              }
              while (v20 <= *(float *)(v19 + 4 * (int)v41));
              do
              {
                uint64_t v42 = *--v37;
                uint64_t v40 = v42;
              }
              while (v20 > *(float *)(v19 + 4 * (int)v42));
            }
            while (v12 < v37);
          }
          uint64_t v43 = v12 - 1;
          BOOL v5 = v12 - 1 >= v11;
          BOOL v6 = v12 - 1 == v11;
          if (v12 - 1 != v11) {
            *uint64_t v11 = *v43;
          }
          a5 = 0;
          uint64_t *v43 = v18;
        }
        uint64_t v21 = 0;
        float v22 = *(float *)(v19 + 4 * (int)v18);
        do
          uint64_t v23 = v11[++v21];
        while (*(float *)(v19 + 4 * (int)v23) > v22);
        unint64_t v24 = &v11[v21];
        unint64_t v25 = a2;
        if (v21 == 1)
        {
          unint64_t v25 = a2;
          do
          {
            if (v24 >= v25) {
              break;
            }
            uint64_t v27 = *--v25;
          }
          while (*(float *)(v19 + 4 * (int)v27) <= v22);
        }
        else
        {
          do
            uint64_t v26 = *--v25;
          while (*(float *)(v19 + 4 * (int)v26) <= v22);
        }
        if (v24 >= v25)
        {
          int v33 = v24 - 1;
        }
        else
        {
          uint64_t v28 = *v25;
          uint64_t v29 = &v11[v21];
          unint64_t v30 = v25;
          do
          {
            uint64_t *v29 = v28;
            uint64_t *v30 = v23;
            do
            {
              uint64_t v31 = v29[1];
              ++v29;
              uint64_t v23 = v31;
            }
            while (*(float *)(v19 + 4 * (int)v31) > v22);
            do
            {
              uint64_t v32 = *--v30;
              uint64_t v28 = v32;
            }
            while (*(float *)(v19 + 4 * (int)v32) <= v22);
          }
          while (v29 < v30);
          int v33 = v29 - 1;
        }
        if (v33 != v11) {
          *uint64_t v11 = *v33;
        }
        *int v33 = v18;
        if (v24 >= v25) {
          break;
        }
LABEL_33:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *,false>(v11, v33, a3, a4, a5 & 1);
        a5 = 0;
        unint64_t v12 = v33 + 1;
      }
      BOOL v34 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v11, v33, a3);
      unint64_t v12 = v33 + 1;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v33 + 1, a2, a3);
      if (result) {
        break;
      }
      if (!v34) {
        goto LABEL_33;
      }
    }
    a2 = v33;
    if (!v34) {
      continue;
    }
    return result;
  }
}

uint64_t *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(uint64_t *result, uint64_t *a2, uint64_t *a3, uint64_t **a4)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *result;
  uint64_t v6 = **a4;
  float v7 = *(float *)(v6 + (*a2 << 32 >> 30));
  float v8 = *(float *)(v6 + (*result << 32 >> 30));
  uint64_t v9 = *a3;
  float v10 = *(float *)(v6 + (*a3 << 32 >> 30));
  if (v7 <= v8)
  {
    if (v10 > v7)
    {
      *a2 = v9;
      *a3 = v4;
      uint64_t v11 = *result;
      if (*(float *)(v6 + (*a2 << 32 >> 30)) > *(float *)(v6 + (*result << 32 >> 30)))
      {
        *uint64_t result = *a2;
        *a2 = v11;
      }
    }
  }
  else
  {
    if (v10 <= v7)
    {
      *uint64_t result = v4;
      *a2 = v5;
      if (*(float *)(v6 + (*a3 << 32 >> 30)) <= v8) {
        return result;
      }
      *a2 = *a3;
    }
    else
    {
      *uint64_t result = v9;
    }
    *a3 = v5;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(uint64_t *a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v8 = *(a2 - 1);
      uint64_t v9 = *a1;
      if (*(float *)(**a3 + 4 * (int)v8) > *(float *)(**a3 + (*a1 << 32 >> 30)))
      {
        *a1 = v8;
        *(a2 - 1) = v9;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      uint64_t v21 = a1 + 1;
      float v22 = a1 + 2;
      uint64_t v23 = a1 + 3;
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a1 + 1, a1 + 2, a1 + 3, a3);
      uint64_t v24 = *(a2 - 1);
      uint64_t v25 = a1[3];
      uint64_t v26 = **a3;
      if (*(float *)(v26 + 4 * (int)v24) > *(float *)(v26 + 4 * (int)v25))
      {
        uint64_t *v23 = v24;
        *(a2 - 1) = v25;
        uint64_t v27 = *v23;
        uint64_t v28 = *v22;
        float v29 = *(float *)(v26 + (*v23 << 32 >> 30));
        if (v29 > *(float *)(v26 + (*v22 << 32 >> 30)))
        {
          *float v22 = v27;
          uint64_t *v23 = v28;
          uint64_t v30 = *v21;
          if (v29 > *(float *)(v26 + (*v21 << 32 >> 30)))
          {
            a1[1] = v27;
            a1[2] = v30;
            uint64_t v31 = *a1;
            if (v29 > *(float *)(v26 + (*a1 << 32 >> 30)))
            {
              *a1 = v27;
              a1[1] = v31;
            }
          }
        }
      }
      return 1;
    default:
      float v10 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a1 + 1, a1 + 2, a3);
      uint64_t v11 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v12 = 0;
      uint64_t v13 = **a3;
      uint64_t v14 = 24;
      break;
  }
  while (1)
  {
    uint64_t v15 = *v11;
    uint64_t v16 = *v10;
    float v17 = *(float *)(v13 + (*v11 << 32 >> 30));
    if (v17 > *(float *)(v13 + (*v10 << 32 >> 30)))
    {
      uint64_t v18 = v14;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v18) = v16;
        uint64_t v19 = v18 - 8;
        if (v18 == 8) {
          break;
        }
        uint64_t v16 = *(uint64_t *)((char *)a1 + v18 - 16);
        v18 -= 8;
        if (v17 <= *(float *)(v13 + 4 * (int)v16))
        {
          float v20 = (uint64_t *)((char *)a1 + v19);
          goto LABEL_13;
        }
      }
      float v20 = a1;
LABEL_13:
      *float v20 = v15;
      if (++v12 == 8) {
        return v11 + 1 == a2;
      }
    }
    float v10 = v11;
    v14 += 8;
    if (++v11 == a2) {
      return 1;
    }
  }
}

uint64_t *std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t **a5)
{
  BOOL result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a2, a3, a5);
  uint64_t v11 = *a3;
  uint64_t v12 = **a5;
  if (*(float *)(v12 + (*a4 << 32 >> 30)) > *(float *)(v12 + (*a3 << 32 >> 30)))
  {
    *a3 = *a4;
    *a4 = v11;
    uint64_t v13 = *a2;
    if (*(float *)(v12 + (*a3 << 32 >> 30)) > *(float *)(v12 + (*a2 << 32 >> 30)))
    {
      *a2 = *a3;
      *a3 = v13;
      uint64_t v14 = *a1;
      if (*(float *)(v12 + (*a2 << 32 >> 30)) > *(float *)(v12 + (*a1 << 32 >> 30)))
      {
        *a1 = *a2;
        *a2 = v14;
      }
    }
  }
  return result;
}

void *std::vector<std::vector<float>>::vector(void *a1, unint64_t a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<std::vector<int>>::__vallocate[abi:ne180100](a1, a2);
    uint64_t v6 = (void *)a1[1];
    uint64_t v7 = 3 * a2;
    uint64_t v8 = &v6[3 * a2];
    uint64_t v9 = 8 * v7;
    do
    {
      *uint64_t v6 = 0;
      v6[1] = 0;
      v6[2] = 0;
      std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(v6, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
      v6 += 3;
      v9 -= 24;
    }
    while (v9);
    a1[1] = v8;
  }
  return a1;
}

void sub_23564F3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void *std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    BOOL result = std::vector<float>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      BOOL result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_23564F454(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 224;
        std::allocator<OUBox3d>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<OUBox3d>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 184);
  if (v3) {
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a2 + 160);
  if (v4)
  {
    *(void *)(a2 + 168) = v4;
    operator delete(v4);
  }

  uint64_t v5 = *(void **)(a2 + 128);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<box3d>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 57) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(a2 << 7);
}

uint64_t std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(uint64_t *a1, const OUBox3d *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x124924924924924) {
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x92492492492492) {
    unint64_t v9 = 0x124924924924924;
  }
  else {
    unint64_t v9 = v5;
  }
  float v17 = a1 + 2;
  if (v9) {
    float v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<OUBox3d>>(v7, v9);
  }
  else {
    float v10 = 0;
  }
  uint64_t v13 = v10;
  uint64_t v14 = (OUBox3d *)&v10[224 * v4];
  uint64_t v16 = &v10[224 * v9];
  OUBox3d::OUBox3d(v14, a2);
  uint64_t v15 = (char *)v14 + 224;
  std::vector<OUBox3d>::__swap_out_circular_buffer(a1, &v13);
  uint64_t v11 = a1[1];
  std::__split_buffer<OUBox3d>::~__split_buffer(&v13);
  return v11;
}

void sub_23564F6B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<OUBox3d>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

void OUBox3d::OUBox3d(OUBox3d *this, const OUBox3d *a2)
{
  long long v4 = *(_OWORD *)a2;
  long long v5 = *((_OWORD *)a2 + 1);
  long long v6 = *((_OWORD *)a2 + 3);
  *((_OWORD *)this + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)this + 3) = v6;
  *(_OWORD *)this = v4;
  *((_OWORD *)this + 1) = v5;
  long long v7 = *((_OWORD *)a2 + 4);
  long long v8 = *((_OWORD *)a2 + 5);
  long long v9 = *((_OWORD *)a2 + 7);
  *((_OWORD *)this + 6) = *((_OWORD *)a2 + 6);
  *((_OWORD *)this + 7) = v9;
  *((_OWORD *)this + 4) = v7;
  *((_OWORD *)this + 5) = v8;
  *((void *)this + 16) = *((id *)a2 + 16);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((void *)this + 18) = *((id *)a2 + 18);
  id v10 = *((id *)a2 + 19);
  *((void *)this + 20) = 0;
  *((void *)this + 19) = v10;
  *((void *)this + 21) = 0;
  *((void *)this + 22) = 0;
  std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>((void *)this + 20, *((const void **)a2 + 20), *((void *)a2 + 21), (uint64_t)(*((void *)a2 + 21) - *((void *)a2 + 20)) >> 2);
  std::vector<BOOL>::vector((void *)this + 23, (uint64_t)a2 + 184);
  *((void *)this + 26) = *((id *)a2 + 26);
  *((_WORD *)this + 108) = *((_WORD *)a2 + 108);
}

void sub_23564F784(_Unwind_Exception *a1)
{
  long long v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 168) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(a1);
}

void *std::vector<BOOL>::vector(void *a1, uint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    std::vector<BOOL>::__vallocate[abi:ne180100](a1, v4);
    std::vector<BOOL>::__construct_at_end<std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,true,0ul>>(a1, *(void **)a2, 0, (void *)(*(void *)a2 + 8 * (*(void *)(a2 + 8) >> 6)), *(void *)(a2 + 8) & 0x3F, *(void *)(a2 + 8));
  }
  return a1;
}

void std::vector<BOOL>::__construct_at_end<std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,true,0ul>>(void *a1, void *a2, unint64_t a3, void *a4, int a5, uint64_t a6)
{
  unint64_t v6 = a1[1];
  unint64_t v7 = v6 + a6;
  a1[1] = v6 + a6;
  if (!v6 || ((v7 - 1) ^ (v6 - 1)) >= 0x40)
  {
    if (v7 >= 0x41) {
      unint64_t v8 = (v7 - 1) >> 6;
    }
    else {
      unint64_t v8 = 0;
    }
    *(void *)(*a1 + 8 * v8) = 0;
  }
  uint64_t v9 = *a1 + 8 * (v6 >> 6);
  int v10 = v6 & 0x3F;
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>>(a2, a3, a4, a5, (uint64_t)&v9, (uint64_t)v11);
}

void std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>>(void *a1@<X1>, unint64_t a2@<X2>, void *a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  LODWORD(v6) = a2;
  unint64_t v7 = *(uint64_t **)a5;
  int v8 = *(_DWORD *)(a5 + 8);
  if (a1 != a3 || a2 != a4)
  {
    do
    {
      uint64_t v9 = 1 << v8;
      if ((*a1 >> a2)) {
        uint64_t v10 = *v7 | v9;
      }
      else {
        uint64_t v10 = *v7 & ~v9;
      }
      *unint64_t v7 = v10;
      BOOL v11 = v6 == 63;
      BOOL v12 = v6 == 63;
      uint64_t v6 = (a2 + 1);
      if (v11) {
        uint64_t v6 = 0;
      }
      if (v8 == 63)
      {
        int v8 = 0;
        *(void *)a5 = ++v7;
      }
      else
      {
        ++v8;
      }
      a1 += v12;
      a2 = v6 | a2 & 0xFFFFFFFF00000000;
      *(_DWORD *)(a5 + 8) = v8;
    }
    while (a1 != a3 || v6 != a4);
    a1 = a3;
  }
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = v7;
  *(_DWORD *)(a6 + 24) = v8;
}

uint64_t std::vector<OUBox3d>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>,std::reverse_iterator<OUBox3d*>,std::reverse_iterator<OUBox3d*>>((uint64_t)(a1 + 2), a1[1], (long long *)a1[1], *a1, (long long *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<OUBox3d>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x124924924924925) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(224 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>,std::reverse_iterator<OUBox3d*>,std::reverse_iterator<OUBox3d*>>(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 14;
      std::allocator<OUBox3d>::construct[abi:ne180100]<OUBox3d,OUBox3d>(a1, v7 - 224, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 224;
      *((void *)&v16 + 1) -= 224;
    }
    while (v9 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

__n128 std::allocator<OUBox3d>::construct[abi:ne180100]<OUBox3d,OUBox3d>(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v3 = *a3;
  long long v4 = a3[1];
  long long v5 = a3[3];
  *(_OWORD *)(a2 + 32) = a3[2];
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)a2 = v3;
  *(_OWORD *)(a2 + 16) = v4;
  long long v6 = a3[4];
  long long v7 = a3[5];
  long long v8 = a3[7];
  *(_OWORD *)(a2 + 96) = a3[6];
  *(_OWORD *)(a2 + 112) = v8;
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 80) = v7;
  uint64_t v9 = *((void *)a3 + 16);
  *((void *)a3 + 16) = 0;
  *(void *)(a2 + 128) = v9;
  *(_DWORD *)(a2 + 136) = *((_DWORD *)a3 + 34);
  long long v10 = a3[9];
  a3[9] = 0u;
  *(_OWORD *)(a2 + 144) = v10;
  *(void *)(a2 + 160) = 0;
  *(_OWORD *)(a2 + 168) = 0u;
  __n128 result = (__n128)a3[10];
  *(__n128 *)(a2 + 160) = result;
  *(void *)(a2 + 176) = *((void *)a3 + 22);
  *((void *)a3 + 22) = 0;
  a3[10] = 0u;
  uint64_t v12 = *((void *)a3 + 24);
  *(void *)(a2 + 184) = *((void *)a3 + 23);
  *(void *)(a2 + 192) = v12;
  *(void *)(a2 + 200) = *((void *)a3 + 25);
  *(long long *)((char *)a3 + 184) = 0u;
  uint64_t v13 = *((void *)a3 + 26);
  *(long long *)((char *)a3 + 200) = 0u;
  *(void *)(a2 + 208) = v13;
  *(_WORD *)(a2 + 216) = *((_WORD *)a3 + 108);
  return result;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      std::allocator<OUBox3d>::destroy[abi:ne180100](v3, v1);
      v1 += 224;
    }
    while (v1 != v2);
  }
}

void **std::__split_buffer<OUBox3d>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<OUBox3d>::clear[abi:ne180100](void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 224;
    std::allocator<OUBox3d>::destroy[abi:ne180100](v4, i - 224);
  }
}

uint64_t std::vector<OUBox3d>::__push_back_slow_path<OUBox3d>(uint64_t *a1, long long *a2)
{
  uint64_t v3 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x124924924924924) {
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  }
  if (0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 5) > v4) {
    unint64_t v4 = 0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 5);
  }
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((a1[2] - *a1) >> 5)) >= 0x92492492492492) {
    unint64_t v6 = 0x124924924924924;
  }
  else {
    unint64_t v6 = v4;
  }
  char v14 = a1 + 2;
  if (v6) {
    long long v7 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<OUBox3d>>((uint64_t)(a1 + 2), v6);
  }
  else {
    long long v7 = 0;
  }
  long long v10 = v7;
  uint64_t v11 = &v7[224 * v3];
  uint64_t v13 = &v7[224 * v6];
  std::allocator<OUBox3d>::construct[abi:ne180100]<OUBox3d,OUBox3d>((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  uint64_t v12 = v11 + 224;
  std::vector<OUBox3d>::__swap_out_circular_buffer(a1, &v10);
  uint64_t v8 = a1[1];
  std::__split_buffer<OUBox3d>::~__split_buffer(&v10);
  return v8;
}

void sub_23564FD68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<OUBox3d>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

void *std::vector<std::vector<float>>::__append(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1[2];
  __n128 result = a1 + 2;
  uint64_t v7 = v8;
  uint64_t v9 = (void *)*(result - 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (uint64_t)v9) >> 3) >= a2)
  {
    if (a2)
    {
      long long v15 = &v9[3 * a2];
      uint64_t v16 = 24 * a2;
      do
      {
        void *v9 = 0;
        v9[1] = 0;
        v9[2] = 0;
        __n128 result = std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(v9, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
        v9 += 3;
        v16 -= 24;
      }
      while (v16);
      uint64_t v9 = v15;
    }
    a1[1] = (uint64_t)v9;
  }
  else
  {
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v9 - *a1) >> 3);
    unint64_t v11 = v10 + a2;
    if (v10 + a2 > 0xAAAAAAAAAAAAAAALL) {
      _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
    }
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x555555555555555) {
      unint64_t v13 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v13 = v11;
    }
    uint64_t v21 = result;
    if (v13) {
      char v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<int>>>((uint64_t)result, v13);
    }
    else {
      char v14 = 0;
    }
    float v17 = v14;
    uint64_t v18 = &v14[24 * v10];
    uint64_t v19 = v18;
    float v20 = &v14[24 * v13];
    std::__split_buffer<std::vector<float>>::__construct_at_end(&v17, a2, a3);
    std::vector<std::vector<float>>::__swap_out_circular_buffer(a1, &v17);
    return (void *)std::__split_buffer<std::vector<float>>::~__split_buffer((uint64_t)&v17);
  }
  return result;
}

void sub_23564FED0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::vector<float>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void *std::__split_buffer<std::vector<float>>::__construct_at_end(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  unint64_t v4 = (void *)result[2];
  if (a2)
  {
    unint64_t v6 = &v4[3 * a2];
    uint64_t v7 = 24 * a2;
    do
    {
      *unint64_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      __n128 result = std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(v4, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
      v4 += 3;
      v7 -= 24;
    }
    while (v7);
    unint64_t v4 = v6;
  }
  v3[2] = v4;
  return result;
}

void sub_23564FF6C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::vector<float>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>,std::reverse_iterator<std::vector<float>*>,std::reverse_iterator<std::vector<float>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>,std::reverse_iterator<std::vector<float>*>,std::reverse_iterator<std::vector<float>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v11);
  return v9;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t std::__split_buffer<std::vector<float>>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<std::vector<float>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    uint64_t v5 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

uint64_t std::unordered_set<int>::unordered_set<std::__wrap_iter<int const*>>(uint64_t a1, int *a2, int *a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a2 != a3)
  {
    uint64_t v5 = a2;
    do
    {
      std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a1, v5, v5);
      ++v5;
    }
    while (v5 != a3);
  }
  return a1;
}

void sub_23565020C(_Unwind_Exception *a1)
{
  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::find<int>(void *a1, int *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  uint64_t v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  for (uint64_t result = *v6; result; uint64_t result = (uint64_t *)*result)
  {
    unint64_t v8 = result[1];
    if (v8 == v3)
    {
      if (*((_DWORD *)result + 4) == v3) {
        return result;
      }
    }
    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(void *)&v2) {
          v8 %= *(void *)&v2;
        }
      }
      else
      {
        v8 &= *(void *)&v2 - 1;
      }
      if (v8 != v5) {
        return 0;
      }
    }
  }
  return result;
}

__n128 *std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::vector<float> *,std::vector<float> *,std::vector<float> *,0>(__n128 *a1, __n128 *a2, uint64_t a3)
{
  uint8x8_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      std::vector<float>::__move_assign(a3, v4);
      uint8x8_t v4 = (__n128 *)((char *)v4 + 24);
      a3 += 24;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

__n128 std::vector<float>::__move_assign(uint64_t a1, __n128 *a2)
{
  uint8x8_t v4 = *(void **)a1;
  if (v4)
  {
    *(void *)(a1 + 8) = v4;
    operator delete(v4);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  __n128 result = *a2;
  *(__n128 *)a1 = *a2;
  *(void *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

std::vector<int> *__cdecl std::vector<int>::vector(std::vector<int> *this, std::vector<int>::size_type __n, const std::vector<int>::value_type *__x)
{
  this->__begin_ = 0;
  this->__end_ = 0;
  this->__end_cap_.__value_ = 0;
  if (__n)
  {
    std::vector<float>::__vallocate[abi:ne180100](this, __n);
    std::vector<int>::pointer end = this->__end_;
    uint64_t v7 = &end[__n];
    std::vector<int>::size_type v8 = 4 * __n;
    do
    {
      *end++ = *__x;
      v8 -= 4;
    }
    while (v8);
    this->__end_ = v7;
  }
  return this;
}

void sub_2356503F0(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<int>::__throw_out_of_range[abi:ne180100]()
{
}

void std::__throw_out_of_range[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::out_of_range::out_of_range[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_264C60120, MEMORY[0x263F8C068]);
}

void sub_23565046C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::out_of_range::out_of_range[abi:ne180100](std::logic_error *a1, const char *a2)
{
  __n128 result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
  return result;
}

void std::vector<OUBox3d>::__vdeallocate(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint8x8_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 224;
        std::allocator<OUBox3d>::destroy[abi:ne180100]((uint64_t)(a1 + 2), v3);
      }
      while ((void *)v3 != v1);
      uint8x8_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void *std::vector<std::vector<float>>::__init_with_size[abi:ne180100]<std::vector<float>*,std::vector<float>*>(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<std::vector<int>>::__vallocate[abi:ne180100](result, a4);
    __n128 result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<float>>,std::vector<float>*,std::vector<float>*,std::vector<float>*>((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_23565058C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<float>>,std::vector<float>*,std::vector<float>*,std::vector<float>*>(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint8x8_t v4 = a4;
  uint64_t v10 = a4;
  unint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  _OWORD v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *uint8x8_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(v4, *(const void **)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 2);
      uint8x8_t v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::vector<float>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_23565064C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::vector<float>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

uint64_t std::set<int>::set[abi:ne180100]<std::__wrap_iter<int *>>(uint64_t a1, int *a2, int *a3)
{
  *(void *)(a1 + 8) = 0;
  uint8x8_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      std::__tree<int>::__emplace_hint_unique_key_args<int,int const&>((uint64_t **)a1, v4, v6, v6);
      ++v6;
    }
    while (v6 != a3);
  }
  return a1;
}

void sub_235650704(_Unwind_Exception *a1)
{
  std::__tree<int>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<int>::__emplace_hint_unique_key_args<int,int const&>(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = std::__tree<int>::__find_equal<int>(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    std::vector<int>::size_type v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v7 + 7) = *a4;
    std::__tree<int>::__insert_node_at(a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

uint64_t *std::__tree<int>::__find_equal<int>(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, int *a5)
{
  unint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (int v6 = *a5, v7 = *((_DWORD *)a2 + 7), *a5 < v7))
  {
    std::vector<int>::size_type v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      char v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        char v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      long long v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        long long v13 = v10;
      }
      while (v14);
    }
    int v15 = *a5;
    if (*((_DWORD *)v10 + 7) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          float v17 = (uint64_t *)v16;
          int v18 = *(_DWORD *)(v16 + 28);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          unint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        unint64_t v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      float v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    char v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      char v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    uint64_t v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      uint64_t v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 7))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v21 = (uint64_t *)v20;
          int v22 = *(_DWORD *)(v20 + 28);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          unint64_t v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        unint64_t v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      uint64_t v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

uint64_t *std::__tree<int>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  unint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  __n128 result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      int8x8_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      uint8x8_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), unint64_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            char v9 = (uint64_t **)a2[2];
          }
          else
          {
            char v9 = (uint64_t **)v2[1];
            uint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              void v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            uint64_t *v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            int8x8_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *uint64_t v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), unint64_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          *int8x8_t v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        int8x8_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        *int8x8_t v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *unint64_t v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void std::__tree<int>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<int>::destroy(a1, *a2);
    std::__tree<int>::destroy(a1, a2[1]);
    operator delete(a2);
  }
}

void *std::vector<std::vector<int>>::__append(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1[2];
  __n128 result = a1 + 2;
  uint64_t v7 = v8;
  char v9 = (void *)*(result - 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (uint64_t)v9) >> 3) >= a2)
  {
    if (a2)
    {
      int v15 = &v9[3 * a2];
      uint64_t v16 = 24 * a2;
      do
      {
        void *v9 = 0;
        v9[1] = 0;
        v9[2] = 0;
        __n128 result = std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(v9, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
        v9 += 3;
        v16 -= 24;
      }
      while (v16);
      char v9 = v15;
    }
    a1[1] = (uint64_t)v9;
  }
  else
  {
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v9 - *a1) >> 3);
    unint64_t v11 = v10 + a2;
    if (v10 + a2 > 0xAAAAAAAAAAAAAAALL) {
      _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
    }
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x555555555555555) {
      unint64_t v13 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v13 = v11;
    }
    uint64_t v21 = result;
    if (v13) {
      BOOL v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<int>>>((uint64_t)result, v13);
    }
    else {
      BOOL v14 = 0;
    }
    float v17 = v14;
    int v18 = &v14[24 * v10];
    uint64_t v19 = v18;
    uint64_t v20 = &v14[24 * v13];
    std::__split_buffer<std::vector<int>>::__construct_at_end(&v17, a2, a3);
    std::vector<std::vector<int>>::__swap_out_circular_buffer(a1, &v17);
    return (void *)std::__split_buffer<std::vector<float>>::~__split_buffer((uint64_t)&v17);
  }
  return result;
}

void sub_235650CE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::vector<float>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void *std::__split_buffer<std::vector<int>>::__construct_at_end(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  uint8x8_t v4 = (void *)result[2];
  if (a2)
  {
    int v6 = &v4[3 * a2];
    uint64_t v7 = 24 * a2;
    do
    {
      *uint8x8_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      __n128 result = std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(v4, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
      v4 += 3;
      v7 -= 24;
    }
    while (v7);
    uint8x8_t v4 = v6;
  }
  v3[2] = v4;
  return result;
}

void sub_235650D80(_Unwind_Exception *a1)
{
  *(void *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::vector<int>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<int>>,std::reverse_iterator<std::vector<int>*>,std::reverse_iterator<std::vector<int>*>,std::reverse_iterator<std::vector<int>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<int>>,std::reverse_iterator<std::vector<int>*>,std::reverse_iterator<std::vector<int>*>,std::reverse_iterator<std::vector<int>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::reverse_iterator<std::vector<int>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v11);
  return v9;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::reverse_iterator<std::vector<int>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void OUTLINED_FUNCTION_1_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

uint64_t sub_235652C1C()
{
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = (void *)sub_235949A88();
  uint64_t v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  uint64_t v5 = sub_235949AC8();
  swift_bridgeObjectRelease();

  return v5;
}

BOOL sub_235652D84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s16MagnifierSupport20MAGOutputEventSourceO9hashValueSivg_0()
{
  return sub_23594AD28();
}

uint64_t sub_235652DE0()
{
  return sub_23594ACE8();
}

uint64_t sub_235652E0C()
{
  return sub_23594AD28();
}

unint64_t sub_235652E50@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_235657FEC(*a1);
  *a2 = result;
  return result;
}

void sub_235652E7C(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_235652E88(void *a1@<X8>)
{
  *a1 = &unk_26E8BCF80;
}

uint64_t sub_235652E98()
{
  return sub_235949D38();
}

uint64_t sub_235652EF8()
{
  return sub_235949D08();
}

BOOL sub_235652F48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_235652F5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_235652F70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_235652F84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_235652F98(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  switch(a1)
  {
    case 1u:
    case 3u:
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v7 = (void *)sub_235949A88();
      long long v8 = (void *)sub_235949A88();
      id v9 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, 0, v8);

      uint64_t v1 = sub_235949AC8();
      break;
    case 2u:
      uint64_t v2 = (void *)sub_235949A88();
      v11[4] = sub_2358D096C;
      void v11[5] = 0;
      v11[0] = MEMORY[0x263EF8330];
      v11[1] = 1107296256;
      v11[2] = sub_2358D0A54;
      void v11[3] = &block_descriptor;
      uint64_t v3 = _Block_copy(v11);
      id v4 = (id)AXLocStringForDeviceVariant();
      _Block_release(v3);

      if (!v4)
      {
        __break(1u);
        JUMPOUT(0x23565322CLL);
      }
      uint64_t v1 = sub_235949AC8();

      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_23565323C(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 3:
      return v1;
    default:
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      id v4 = (void *)sub_235949A88();
      uint64_t v5 = (void *)sub_235949A88();
      id v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

      uint64_t v1 = sub_235949AC8();
      break;
  }
  return v1;
}

id sub_235653408()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15490);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  id v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14E90);
  uint64_t v36 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14CE0);
  uint64_t v37 = *(void *)(v17 - 8);
  uint64_t v38 = v17;
  MEMORY[0x270FA5388](v17, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40.receiver = v1;
  v40.super_class = ObjectType;
  objc_msgSendSuper2(&v40, sel_viewDidLoad);
  uint64_t v24 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_tableView];
  objc_msgSend(v24, sel_setDataSource_, v1);
  objc_msgSend(v24, sel_setDelegate_, v1);
  sub_2356594B0(0, (unint64_t *)&qword_26880EB00);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v26 = (void *)sub_235949A88();
  objc_msgSend(v24, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v26);

  type metadata accessor for UIStepperLengthCell();
  uint64_t v27 = swift_getObjCClassFromMetadata();
  uint64_t v28 = (void *)sub_235949A88();
  objc_msgSend(v24, sel_registerClass_forCellReuseIdentifier_, v27, v28);

  float v29 = (void *)sub_235949A88();
  objc_msgSend(v24, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v29);

  objc_msgSend(v24, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v31 = result;
  objc_msgSend(result, sel_addSubview_, v24);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v32 = result;
  sub_23592C7F4(result, *MEMORY[0x263F834E8], *(double *)(MEMORY[0x263F834E8] + 8), *(double *)(MEMORY[0x263F834E8] + 16), *(double *)(MEMORY[0x263F834E8] + 24));
  swift_bridgeObjectRelease();

  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14F70);
  sub_2359484A8();
  swift_endAccess();
  id v39 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v33 = sub_23594A5A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v9, 1, 1, v33);
  sub_2356594B0(0, (unint64_t *)&unk_26AF154B0);
  sub_2356595F4((unint64_t *)&unk_26AF14E80, &qword_26AF14E90);
  sub_2356594EC();
  sub_235948568();
  sub_235659554((uint64_t)v9);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v10);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2356595F4((unint64_t *)&unk_26AF14CD0, &qword_26AF14CE0);
  uint64_t v34 = v38;
  uint64_t v35 = sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v34);
  *(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_speechFeedbackSubscription] = v35;
  return (id)swift_release();
}

void sub_235653978(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x237DEA060](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (v6 == 1)
    {
      objc_msgSend(v4, sel_beginUpdates);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880EB10);
      sub_235947B38();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_23594FD70;
      MEMORY[0x237DE5A70](1, 2);
      uint64_t v5 = (void *)sub_235949D58();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_reloadRowsAtIndexPaths_withRowAnimation_, v5, 100);

      objc_msgSend(v4, sel_endUpdates);
    }
  }
}

void sub_235653B90(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  char v6 = (void *)sub_235949A88();
  uint64_t v7 = (void *)sub_235949A88();
  id v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_235949AC8();
  id v9 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);
}

id sub_235653D50(uint64_t a1, uint64_t a2, void *a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v3;
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  do
  {
    int v10 = byte_26E8BD330[v6 + 32];
    if (v10 != 3) {
      goto LABEL_10;
    }
    if (qword_26880E5D0 != -1) {
      swift_once();
    }
    if (byte_268812C69 == 1)
    {
LABEL_10:
      uint64_t v23 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2356762E4(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v23;
      }
      unint64_t v9 = *(void *)(v7 + 16);
      unint64_t v8 = *(void *)(v7 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_2356762E4(v8 > 1, v9 + 1, 1);
        uint64_t v7 = v23;
      }
      *(void *)(v7 + 16) = v9 + 1;
      *(unsigned char *)(v7 + v9 + 32) = v10;
    }
    ++v6;
  }
  while (v6 != 4);
  *(void *)&v5[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_availableDetectionFeedbacks] = v7;
  uint64_t v11 = OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_tableView;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C78]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, sel_setClipsToBounds_, 0);
  uint64_t v13 = self;
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_systemYellowColor);
  objc_msgSend(v14, sel_setTintColor_, v15);

  *(void *)&v5[v11] = v14;
  *(void *)&v5[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_speechFeedbackSubscription] = 0;

  if (a2)
  {
    uint64_t v16 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
  }
  v22.receiver = v5;
  v22.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v22, sel_initWithNibName_bundle_, v16, a3, a1);

  return v17;
}

id sub_235654000(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v3 = v1;
  uint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  do
  {
    int v8 = byte_26E8BD358[v4 + 32];
    if (v8 != 3) {
      goto LABEL_10;
    }
    if (qword_26880E5D0 != -1) {
      swift_once();
    }
    if (byte_268812C69 == 1)
    {
LABEL_10:
      uint64_t v18 = v5;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2356762E4(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v18;
      }
      unint64_t v7 = *(void *)(v5 + 16);
      unint64_t v6 = *(void *)(v5 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_2356762E4(v6 > 1, v7 + 1, 1);
        uint64_t v5 = v18;
      }
      *(void *)(v5 + 16) = v7 + 1;
      *(unsigned char *)(v5 + v7 + 32) = v8;
    }
    ++v4;
  }
  while (v4 != 4);
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_availableDetectionFeedbacks] = v5;
  uint64_t v9 = OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_tableView;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C78]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, sel_setClipsToBounds_, 0);
  uint64_t v11 = self;
  id v12 = v10;
  id v13 = objc_msgSend(v11, sel_systemYellowColor);
  objc_msgSend(v12, sel_setTintColor_, v13);

  *(void *)&v3[v9] = v12;
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_speechFeedbackSubscription] = 0;

  v17.receiver = v3;
  v17.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v17, sel_initWithCoder_, a1);

  return v14;
}

id sub_235654244()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ObjectUnderstandingSettingsViewController()
{
  return self;
}

id sub_235654304(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880F590);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v101[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = 2;
  switch(sub_235947B28())
  {
    case 0:
      id v13 = (void *)sub_235949A88();
      id v14 = (void *)sub_235947AB8();
      id v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v13, v14);

      objc_msgSend(v15, sel_setAccessoryView_, 0);
      uint64_t v16 = sub_235947AE8();
      if (v16)
      {
        if (v16 != 1) {
          return v15;
        }
        char v17 = 1;
      }
      else
      {
        char v17 = 0;
      }
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      uint64_t v86 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
      swift_beginAccess();
      uint64_t v87 = *(void *)(v86 + 8);
      char v88 = *(unsigned char *)(v86 + 16);
      uint64_t v102 = *(void *)v86;
      uint64_t v103 = v87;
      LOBYTE(v104) = v88;
      uint64_t v89 = qword_26AF144C0;
      uint64_t v90 = swift_bridgeObjectRetain();
      if (v89 != -1) {
        uint64_t v90 = swift_once();
      }
      MEMORY[0x270FA5388](v90, v91, v92, v93, v94);
      *(&v100 - 2) = (uint64_t)&v102;
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      if ((v17 ^ LOBYTE(v101[0]))) {
        uint64_t v95 = 0;
      }
      else {
        uint64_t v95 = 3;
      }
      objc_msgSend(v15, sel_setAccessoryType_, v95);
      id v96 = objc_msgSend(v15, sel_textLabel);
      if (v96)
      {
        long long v97 = v96;
        sub_2356ED218();
        uint64_t v98 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v97, sel_setText_, v98);
      }
      return v15;
    case 1:
      uint64_t v19 = (void *)sub_235949A88();
      uint64_t v20 = (void *)sub_235947AB8();
      id v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v19, v20);

      type metadata accessor for UIStepperLengthCell();
      uint64_t v21 = swift_dynamicCastClass();
      if (v21)
      {
        uint64_t v100 = v21;
        uint64_t v22 = qword_26AF13B78;
        id v15 = v15;
        if (v22 != -1) {
          swift_once();
        }
        uint64_t v23 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 8);
        char v25 = *(unsigned char *)(v23 + 16);
        uint64_t v102 = *(void *)v23;
        uint64_t v103 = v24;
        LOBYTE(v104) = v25;
        uint64_t v26 = qword_26AF144C0;
        uint64_t v27 = swift_bridgeObjectRetain();
        if (v26 != -1) {
          uint64_t v27 = swift_once();
        }
        MEMORY[0x270FA5388](v27, v28, v29, v30, v31);
        *(&v100 - 2) = (uint64_t)&v102;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        int v32 = LOBYTE(v101[0]);
        uint64_t v33 = (uint64_t *)(qword_26AF181E0
                        + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingPitchThreshold);
        uint64_t v34 = swift_beginAccess();
        uint64_t v35 = v33[1];
        uint64_t v36 = v33[2];
        v101[0] = *v33;
        v101[1] = v35;
        v101[2] = v36;
        MEMORY[0x270FA5388](v34, v37, v38, v39, v40);
        *(&v100 - 2) = (uint64_t)v101;
        swift_bridgeObjectRetain();
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        uint64_t v41 = self;
        uint64_t v42 = &selRef_feet;
        if (!v32) {
          uint64_t v42 = &selRef_meters;
        }
        id v43 = [v41 *v42];
        sub_2356594B0(0, (unint64_t *)&qword_26880EAF0);
        sub_2359473F8();
        sub_2357C3FD4((uint64_t)v11, (uint64_t)sub_235654F24, 0);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      }
      return v15;
    case 2:
      goto LABEL_15;
    case 3:
      int v12 = 3;
LABEL_15:
      char v18 = 0;
      goto LABEL_16;
    default:
      int v12 = 4;
      char v18 = 1;
LABEL_16:
      uint64_t v44 = (void *)sub_235949A88();
      uint64_t v45 = sub_235947AB8();
      id v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v44, v45);

      if (v18) {
        return v15;
      }
      char v46 = &off_264C61000;
      id v47 = objc_msgSend(v15, sel_textLabel);
      uint64_t v48 = v47;
      if (v12 == 3)
      {
        if (v47)
        {
          objc_msgSend(v47, sel_setLineBreakMode_, 0);
        }
        id v49 = objc_msgSend(v15, sel_textLabel);
        if (v49)
        {
          uint64_t v50 = v49;
          objc_msgSend(v49, sel_setNumberOfLines_, 0);
        }
        id v51 = objc_msgSend(v15, sel_textLabel);
        if (v51)
        {
          uint64_t v52 = v51;
          type metadata accessor for MAGUtilities();
          uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          id v54 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
          uint64_t v55 = (void *)sub_235949A88();
          uint64_t v56 = (void *)sub_235949A88();
          id v57 = objc_msgSend(v54, sel_localizedStringForKey_value_table_, v55, 0, v56);

          sub_235949AC8();
          uint64_t v58 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          objc_msgSend(v52, sel_setText_, v58);
        }
        id v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
        objc_msgSend(v59, sel_setTag_, sub_235947AE8());
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v60 = qword_26AF181E0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingSeatOccupancy;
        swift_beginAccess();
        uint64_t v61 = *(void *)(v60 + 8);
        char v62 = *(unsigned char *)(v60 + 16);
        uint64_t v102 = *(void *)v60;
        uint64_t v103 = v61;
        LOBYTE(v104) = v62;
        uint64_t v63 = qword_26AF144C0;
        uint64_t v64 = swift_bridgeObjectRetain();
        if (v63 != -1) {
          uint64_t v64 = swift_once();
        }
        MEMORY[0x270FA5388](v64, v65, v66, v67, v68);
        *(&v100 - 2) = (uint64_t)&v102;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        objc_msgSend(v59, sel_setOn_, LOBYTE(v101[0]));
        objc_msgSend(v59, sel_addTarget_action_forControlEvents_, v2, sel_toggleSeatOccupancySwitch_, 4096);
        objc_msgSend(v15, sel_setAccessoryView_, v59);
        objc_msgSend(v15, sel_setAccessoryType_, 0);

        return v15;
      }
      if (v47)
      {
        objc_msgSend(v47, sel_setLineBreakMode_, 0);
      }
      id v69 = objc_msgSend(v15, sel_textLabel);
      if (v69)
      {
        uint64_t v70 = v69;
        objc_msgSend(v69, sel_setNumberOfLines_, 0);
      }
      uint64_t v71 = *(void *)(v1
                      + OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_availableDetectionFeedbacks);
      unint64_t v72 = sub_235947AE8();
      if ((v72 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_53;
      }
      if (v72 >= *(void *)(v71 + 16))
      {
LABEL_53:
        __break(1u);
LABEL_54:
        swift_once();
        goto LABEL_38;
      }
      uint64_t v45 = *(unsigned __int8 *)(v71 + v72 + 32);
      id v73 = objc_msgSend(v15, sel_textLabel);
      if (v73)
      {
        long long v74 = v73;
        sub_235652C1C();
        uint64_t v75 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v74, sel_setText_, v75);
      }
      char v46 = (__objc2_prot **)objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
      if (qword_26AF13B78 != -1) {
        goto LABEL_54;
      }
LABEL_38:
      float v76 = (uint64_t *)(qword_26AF181E0
                      + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedObjectUnderstandingFeedbacks);
      swift_beginAccess();
      uint64_t v77 = v76[1];
      uint64_t v78 = v76[2];
      uint64_t v102 = *v76;
      uint64_t v103 = v77;
      uint64_t v104 = v78;
      uint64_t v79 = qword_26AF144C0;
      swift_bridgeObjectRetain();
      uint64_t v80 = swift_bridgeObjectRetain();
      if (v79 != -1) {
        uint64_t v80 = swift_once();
      }
      MEMORY[0x270FA5388](v80, v81, v82, v83, v84);
      *(&v100 - 2) = (uint64_t)&v102;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268810300);
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v85 = sub_2356BFD20(v45, v101[0]);
      swift_bridgeObjectRelease();
      objc_msgSend(v46, sel_setOn_, v85);
      objc_msgSend(v46, sel_setTag_, v45);
      objc_msgSend(v46, sel_addTarget_action_forControlEvents_, v2, sel_toggleFeedbackSwitch_, 4096);
      objc_msgSend(v15, sel_setAccessoryView_, v46);

      return v15;
  }
}

uint64_t sub_235654F24(double a1)
{
  uint64_t v2 = sub_2359496D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26AF181E0
      + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingPitchThreshold;
  swift_beginAccess();
  double v18 = a1;
  if (qword_26AF144C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_2359496C8();
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  *(void *)&v17[-16] = &v18;
  *(void *)&v17[-8] = v10;
  sub_23594A298();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v9, v2);
  return swift_endAccess();
}

id sub_235655378(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(unint64_t, void))
{
  sub_235658050(a4, a5);
  if (v5)
  {
    uint64_t v6 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  return v6;
}

void type metadata accessor for CMSampleBuffer(uint64_t a1)
{
}

void type metadata accessor for Event(uint64_t a1)
{
}

void type metadata accessor for TorchMode(uint64_t a1)
{
}

void type metadata accessor for ARConfidenceLevel(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for MFReaderTextLocaleAndRange(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  sub_2359470F8();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MFRubberBand(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MFRubberBand(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for Identifier(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MFCardContainerView.Configuration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MFCardContainerView.Configuration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for ParameterID(uint64_t a1)
{
}

void type metadata accessor for EventType(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
}

void type metadata accessor for TestOption(uint64_t a1)
{
}

__n128 __swift_memcpy64_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_2356557A8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2356557C8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ObjectUnderstandingFeedback(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ObjectUnderstandingFeedback(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x235655980);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_2356559A8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2356559B4(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ObjectUnderstandingFeedback()
{
  return &type metadata for ObjectUnderstandingFeedback;
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void *sub_235655A1C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_235655A2C(uint64_t a1, id *a2)
{
  uint64_t result = sub_235949AA8();
  *a2 = 0;
  return result;
}

uint64_t sub_235655ABC(uint64_t a1, id *a2)
{
  char v3 = sub_235949AB8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_235655B5C(uint64_t a1, uint64_t a2)
{
  return sub_235657AAC(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_235655B88(uint64_t a1, uint64_t a2)
{
  return sub_235657AAC(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_235655BA0(uint64_t a1, uint64_t a2)
{
  return sub_235655C3C(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_235655BC0@<X0>(uint64_t *a1@<X8>)
{
  sub_235949AC8();
  int v2 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  sub_235949AC8();
  uint64_t v3 = sub_235949A88();

  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_235655C24(uint64_t a1, uint64_t a2)
{
  return sub_235655C3C(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_235655C3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_235949AC8();
  unsigned int v4 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_235949AC8();
  uint64_t v6 = a3(v5);

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_235655CA8()
{
  sub_235949AC8();
  v0 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  sub_235949AC8();
  sub_235949B88();

  return swift_bridgeObjectRelease();
}

uint64_t sub_235655D24()
{
  sub_235949AC8();
  v0 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  sub_235949AC8();
  sub_23594ACD8();
  sub_235949B88();
  uint64_t v1 = sub_23594AD28();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_235655DC0(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880ECF8, type metadata accessor for AVError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_235655E2C(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880ECF8, type metadata accessor for AVError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_235655E9C(uint64_t a1)
{
  uint64_t v2 = sub_235656734((unint64_t *)&unk_26880ED30, type metadata accessor for AVError);
  return MEMORY[0x270EEF788](a1, v2);
}

id sub_235655F08()
{
  return *v0;
}

uint64_t sub_235655F10@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_235655F18()
{
  return sub_235947E38();
}

uint64_t sub_235655F64()
{
  return sub_235947E28();
}

uint64_t sub_235655FBC()
{
  return sub_23594AD28();
}

uint64_t sub_235656024(uint64_t a1, id *a2)
{
  uint64_t result = sub_235949AA8();
  *a2 = 0;
  return result;
}

uint64_t sub_23565609C(uint64_t a1, id *a2)
{
  char v3 = sub_235949AB8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23565611C@<X0>(uint64_t *a1@<X8>)
{
  sub_235949AC8();
  uint64_t v2 = sub_235949A88();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_235656160()
{
  return sub_235706584();
}

void sub_23565616C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_235656178()
{
  return sub_235949AC8();
}

uint64_t sub_235656188(uint64_t a1)
{
  uint64_t v2 = sub_235656734((unint64_t *)&unk_26880ED30, type metadata accessor for AVError);
  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_2356561F4(uint64_t a1)
{
  uint64_t v2 = sub_235656734((unint64_t *)&unk_26880ED30, type metadata accessor for AVError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_235656260(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_235656734((unint64_t *)&unk_26880ED30, type metadata accessor for AVError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_2356562F0()
{
  id v1 = *v0;
  uint64_t v2 = sub_23594A4D8();

  return v2;
}

uint64_t sub_235656328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_235656734((unint64_t *)&unk_26880ED30, type metadata accessor for AVError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_2356563A4()
{
  return sub_23594AD28();
}

uint64_t sub_235656404()
{
  swift_getWitnessTable();
  return sub_235947E18();
}

uint64_t sub_235656470(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EE10, type metadata accessor for OptionsKey);
  uint64_t v3 = sub_235656734(&qword_26880EE18, type metadata accessor for OptionsKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_23565652C(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EDF0, type metadata accessor for ActivityType);
  uint64_t v3 = sub_235656734(&qword_26880EDF8, type metadata accessor for ActivityType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2356565E8(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EA70, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_235656734(&qword_26880EA78, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2356566A4()
{
  return sub_235656734(&qword_26880E920, type metadata accessor for URLResourceKey);
}

uint64_t sub_2356566EC()
{
  return sub_235656734(&qword_26880E928, type metadata accessor for URLResourceKey);
}

uint64_t sub_235656734(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23565677C()
{
  return sub_235656734(&qword_26880E930, type metadata accessor for URLResourceKey);
}

unint64_t sub_2356567C8()
{
  unint64_t result = qword_26880E938;
  if (!qword_26880E938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880E938);
  }
  return result;
}

uint64_t sub_23565681C()
{
  return sub_2356595F4((unint64_t *)&unk_26880E940, &qword_268810300);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_2356568A0(uint64_t a1)
{
  uint64_t v2 = sub_235656734((unint64_t *)&qword_26880EE20, _s3__C3KeyVMa_0);
  uint64_t v3 = sub_235656734(&qword_26880EE28, _s3__C3KeyVMa_0);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_23565695C(uint64_t a1)
{
  uint64_t v2 = sub_235656734((unint64_t *)&qword_26880ED80, type metadata accessor for LaunchOptionsKey);
  uint64_t v3 = sub_235656734(&qword_26880ED88, type metadata accessor for LaunchOptionsKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

BOOL sub_235656A18(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_235656A2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_235949AC8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_235656A58(uint64_t a1)
{
  uint64_t v2 = sub_235656734((unint64_t *)&qword_26880EA48, type metadata accessor for VNImageOption);
  uint64_t v3 = sub_235656734(&qword_26880EA50, type metadata accessor for VNImageOption);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_235656B14@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_235949AC8();
  uint64_t v4 = sub_235949A88();

  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_235656B64@<X0>(uint64_t *a1@<X8>)
{
  sub_235949AC8();
  uint64_t v2 = sub_235949A88();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_235656BAC(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EDA0, type metadata accessor for JointName);
  uint64_t v3 = sub_235656734(&qword_26880EDA8, type metadata accessor for JointName);
  uint64_t v4 = sub_235656734(&qword_26880ED90, type metadata accessor for VNRecognizedPointKey);
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_235656C9C(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EDB0, type metadata accessor for OU3DObjectType);
  uint64_t v3 = sub_235656734(&qword_26880EDB8, type metadata accessor for OU3DObjectType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_235656D58(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EA58, type metadata accessor for TestOption);
  uint64_t v3 = sub_235656734(&qword_26880EA60, type metadata accessor for TestOption);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_235656E14()
{
  return sub_235656734(&qword_26880E950, type metadata accessor for TestOption);
}

uint64_t sub_235656E5C()
{
  return sub_235656734(&qword_26880E958, type metadata accessor for TestOption);
}

uint64_t sub_235656EA4()
{
  return sub_235656734(&qword_26880E960, type metadata accessor for VNImageOption);
}

uint64_t sub_235656EEC()
{
  return sub_235656734(&qword_26880E968, type metadata accessor for VNImageOption);
}

uint64_t sub_235656F34(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880E9F8, type metadata accessor for Identifier);
  uint64_t v3 = sub_235656734(&qword_26880EA00, type metadata accessor for Identifier);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_235656FF0(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EE30, type metadata accessor for DeviceType);
  uint64_t v3 = sub_235656734(&qword_26880EE38, type metadata accessor for DeviceType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2356570AC(uint64_t a1)
{
  uint64_t v2 = sub_235656734((unint64_t *)&qword_26AF15340, type metadata accessor for AttributeName);
  uint64_t v3 = sub_235656734(&qword_26880EDE8, type metadata accessor for AttributeName);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_235657168(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EDD0, type metadata accessor for FeatureKey);
  uint64_t v3 = sub_235656734((unint64_t *)&unk_26880EDD8, type metadata accessor for FeatureKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_235657224(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EA08, type metadata accessor for UIContentSizeCategory);
  uint64_t v3 = sub_235656734(&qword_26880EA10, type metadata accessor for UIContentSizeCategory);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2356572E0(uint64_t a1)
{
  uint64_t v2 = sub_235656734((unint64_t *)&qword_26880ED60, type metadata accessor for AXMFeatureDescriptionOption);
  uint64_t v3 = sub_235656734(&qword_26880ED68, type metadata accessor for AXMFeatureDescriptionOption);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_23565739C(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EA38, type metadata accessor for Key);
  uint64_t v3 = sub_235656734(&qword_26880EA40, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_235657458()
{
  return sub_235656734(&qword_26880E970, type metadata accessor for Key);
}

uint64_t sub_2356574A0()
{
  return sub_235656734(&qword_26880E978, type metadata accessor for Key);
}

uint64_t sub_2356574E8(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EA28, type metadata accessor for EventType);
  uint64_t v3 = sub_235656734(&qword_26880EA30, type metadata accessor for EventType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2356575A4()
{
  return sub_235656734(&qword_26880E980, type metadata accessor for EventType);
}

uint64_t sub_2356575EC()
{
  return sub_235656734(&qword_26880E988, type metadata accessor for EventType);
}

uint64_t sub_235657634(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EA18, type metadata accessor for ParameterID);
  uint64_t v3 = sub_235656734(&qword_26880EA20, type metadata accessor for ParameterID);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2356576F0(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EE00, type metadata accessor for AVVideoCodecType);
  uint64_t v3 = sub_235656734(&qword_26880EE08, type metadata accessor for AVVideoCodecType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2356577AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_235656734((unint64_t *)&unk_26880ED30, type metadata accessor for AVError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_235657830(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880EDC0, type metadata accessor for MatteType);
  uint64_t v3 = sub_235656734(&qword_26880EDC8, type metadata accessor for MatteType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2356578EC(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880ED90, type metadata accessor for VNRecognizedPointKey);
  uint64_t v3 = sub_235656734(&qword_26880ED98, type metadata accessor for VNRecognizedPointKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2356579A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_235949A88();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2356579F0(uint64_t a1)
{
  uint64_t v2 = sub_235656734(&qword_26880ED70, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v3 = sub_235656734(&qword_26880ED78, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_235657AAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_235949AC8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_235657AF0()
{
  sub_235949AC8();
  sub_235949B88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_235657B44()
{
  sub_235949AC8();
  sub_23594ACD8();
  sub_235949B88();
  uint64_t v0 = sub_23594AD28();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_235657BB8()
{
  return sub_235656734(&qword_26880E990, type metadata accessor for EventType);
}

uint64_t sub_235657C00()
{
  return sub_235656734(&qword_26880E998, type metadata accessor for ParameterID);
}

uint64_t sub_235657C48()
{
  return sub_235656734(&qword_26880E9A0, type metadata accessor for ParameterID);
}

uint64_t sub_235657C90()
{
  return sub_235656734(&qword_26880E9A8, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_235657CD8()
{
  return sub_235656734(&qword_26880E9B0, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_235657D20()
{
  return sub_235656734(&qword_26880E9B8, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_235657D68()
{
  return sub_235656734(&qword_26880E9C0, type metadata accessor for Identifier);
}

uint64_t sub_235657DB0()
{
  return sub_235656734(&qword_26880E9C8, type metadata accessor for Identifier);
}

uint64_t sub_235657DF8()
{
  return sub_235656734(&qword_26880E9D0, type metadata accessor for Identifier);
}

uint64_t sub_235657E40()
{
  return sub_235656734(&qword_26880E9D8, type metadata accessor for ParameterID);
}

uint64_t sub_235657E88()
{
  return sub_235656734(&qword_26880E9E0, type metadata accessor for Key);
}

uint64_t sub_235657ED0()
{
  return sub_235656734(&qword_26880E9E8, type metadata accessor for VNImageOption);
}

uint64_t sub_235657F18()
{
  return sub_235656734(&qword_26880E9F0, type metadata accessor for TestOption);
}

uint64_t sub_235657F60()
{
  uint64_t v0 = sub_235949AC8();
  uint64_t v2 = v1;
  if (v0 == sub_235949AC8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_23594AB78();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_235657FEC(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_235657FFC()
{
  unint64_t result = qword_26880EA68;
  if (!qword_26880EA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880EA68);
  }
  return result;
}

uint64_t sub_235658050(unint64_t a1, uint64_t (*a2)(unint64_t, void))
{
  if (a1 > 3) {
    return 0;
  }
  else {
    return a2(a1, a2);
  }
}

id sub_235658084(id result)
{
  if (result)
  {
    uint64_t v1 = result;
    unint64_t result = objc_msgSend(result, sel_tag);
    if ((unint64_t)result <= 3)
    {
      int v2 = result;
      if (objc_msgSend(v1, sel_isOn))
      {
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v3 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        uint64_t v4 = swift_bridgeObjectRetain();
        if (v3 != -1) {
          uint64_t v4 = swift_once();
        }
        MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268810300);
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v9 = (char *)v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_2356CD394(0, *(void *)(v25 + 16) + 1, 1, (char *)v25);
        }
        unint64_t v11 = *((void *)v9 + 2);
        unint64_t v10 = *((void *)v9 + 3);
        if (v11 >= v10 >> 1) {
          uint64_t v9 = sub_2356CD394((char *)(v10 > 1), v11 + 1, 1, v9);
        }
        *((void *)v9 + 2) = v11 + 1;
        v9[v11 + 32] = v2;
        swift_bridgeObjectRelease();
        sub_2357D3704((uint64_t)v9, 1);
        return (id)swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v12 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        uint64_t v13 = swift_bridgeObjectRetain();
        if (v12 != -1) {
          uint64_t v13 = swift_once();
        }
        MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268810300);
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = *(void *)(v25 + 16);
        if (v18)
        {
          uint64_t v19 = (unsigned __int8 *)(v25 + 32);
          uint64_t v20 = MEMORY[0x263F8EE78];
          do
          {
            int v24 = *v19++;
            char v23 = v24;
            if (v24 != v2)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_2356762E4(0, *(void *)(v20 + 16) + 1, 1);
              }
              unint64_t v22 = *(void *)(v20 + 16);
              unint64_t v21 = *(void *)(v20 + 24);
              if (v22 >= v21 >> 1) {
                sub_2356762E4(v21 > 1, v22 + 1, 1);
              }
              *(void *)(v20 + 16) = v22 + 1;
              *(unsigned char *)(v20 + v22 + 32) = v23;
            }
            --v18;
          }
          while (v18);
        }
        else
        {
          uint64_t v20 = MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease();
        sub_2357D3704(v20, 1);
        return (id)swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_235658498(void *a1)
{
  uint64_t v3 = sub_2359496D8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  unint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26AF13B78 == -1)
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_once();
  if (!a1) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v11 = qword_26AF181E0;
  unsigned __int8 v12 = objc_msgSend(a1, sel_isOn);
  uint64_t v1 = v11 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingSeatOccupancy;
  swift_beginAccess();
  unsigned __int8 v20 = v12;
  if (qword_26AF144C0 != -1) {
LABEL_7:
  }
    swift_once();
  uint64_t v13 = sub_2359496C8();
  MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
  *(void *)&v19[-16] = &v20;
  *(void *)&v19[-8] = v1;
  sub_23594A298();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v10, v3);
  return swift_endAccess();
}

void sub_235658684(void *a1)
{
  uint64_t v2 = sub_235947A78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_235947B38();
  uint64_t v110 = *(void *)(v10 - 8);
  uint64_t v111 = v10;
  MEMORY[0x270FA5388](v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2359496D8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17, v19, v20, v21, v22);
  long long v112 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v24 = (void *)sub_235947AB8();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v24, 1);

  uint64_t v25 = (void *)sub_235947AB8();
  id v113 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v25);

  if (!v113) {
    return;
  }
  uint64_t v26 = sub_235947AE8();
  if (!v26)
  {
    int v109 = 0;
    goto LABEL_6;
  }
  if (v26 == 1)
  {
    int v109 = 1;
LABEL_6:
    unint64_t v105 = v9;
    uint64_t v106 = v3;
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    uint64_t v107 = v2;
    uint64_t v108 = v17;
    uint64_t v27 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
    swift_beginAccess();
    uint64_t v28 = *(void *)(v27 + 8);
    char v29 = *(unsigned char *)(v27 + 16);
    v114[0] = *(void *)v27;
    v114[1] = v28;
    LOBYTE(v114[2]) = v29;
    uint64_t v30 = qword_26AF144C0;
    uint64_t v31 = swift_bridgeObjectRetain();
    if (v30 != -1) {
      uint64_t v31 = swift_once();
    }
    MEMORY[0x270FA5388](v31, v32, v33, v34, v35);
    *(&v99 - 2) = (uint64_t)v114;
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    if (v109 != v117)
    {
      uint64_t v36 = sub_235947B28();
      if ((unint64_t)(v36 - 1) >= 3 && !v36)
      {
        uint64_t v37 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
        swift_beginAccess();
        unsigned __int8 v117 = v109;
        uint64_t v38 = v112;
        uint64_t v39 = sub_2359496C8();
        MEMORY[0x270FA5388](v39, v40, v41, v42, v43);
        *(&v99 - 2) = (uint64_t)&v117;
        *(&v99 - 1) = v37;
        sub_23594A298();
        uint64_t v103 = *(void (**)(char *, uint64_t))(v18 + 8);
        uint64_t v104 = v18 + 8;
        v103(v38, v108);
        swift_endAccess();
        uint64_t v44 = (void *)qword_26AF181E0;
        uint64_t v45 = swift_beginAccess();
        uint64_t v46 = v44[10];
        uint64_t v47 = v44[11];
        uint64_t v48 = v44[12];
        v114[0] = v44[9];
        v114[1] = v46;
        v114[2] = v47;
        v114[3] = v48;
        MEMORY[0x270FA5388](v45, v49, v50, v51, v52);
        *(&v99 - 2) = (uint64_t)v114;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15060);
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v115)
        {
          uint64_t v101 = v115;
          uint64_t v100 = v114[35];
          uint64_t v53 = (void *)qword_26AF181E0;
          uint64_t v54 = swift_beginAccess();
          uint64_t v55 = v53[6];
          uint64_t v56 = v53[7];
          v114[0] = v53[5];
          v114[1] = v55;
          v114[2] = v56;
          MEMORY[0x270FA5388](v54, v57, v58, v59, v60);
          *(&v99 - 2) = (uint64_t)v114;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15030);
          sub_23594A2A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          double v61 = v116;
          uint64_t v62 = *(void *)(*(void *)&v116 + 16);
          uint64_t v63 = v111;
          uint64_t v64 = &off_264C61000;
          uint64_t v102 = 0;
          if (v62 && (unint64_t v65 = sub_2358780C4(v100, v101), (v66 & 1) != 0))
          {
            memcpy(v114, (const void *)(*(void *)(*(void *)&v61 + 56) + 280 * v65), 0x118uLL);
            sub_235659250((uint64_t)v114);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_235659338((uint64_t)v114);
            if (v109 != BYTE3(v114[7]))
            {
              swift_getKeyPath();
              swift_getKeyPath();
              LOBYTE(v116) = 1;
              sub_2359470F8();
              sub_2359484E8();
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          uint64_t v102 = 0;
          uint64_t v63 = v111;
          uint64_t v64 = &off_264C61000;
        }
        uint64_t v68 = (void (**)(char *, uint64_t))(v110 + 8);
        MEMORY[0x237DE5A70](0, 0);
        id v69 = (void *)sub_235947AB8();
        id v70 = objc_msgSend(a1, (SEL)v64[390], v69);

        if (v70)
        {
          objc_msgSend(v70, sel_setAccessoryType_, 0);
        }
        uint64_t v71 = *v68;
        (*v68)(v16, v63);
        MEMORY[0x237DE5A70](1, 0);
        unint64_t v72 = (void *)sub_235947AB8();
        id v73 = objc_msgSend(a1, (SEL)v64[390], v72);

        if (v73)
        {
          objc_msgSend(v73, sel_setAccessoryType_, 0);
        }
        v71(v16, v63);
        objc_msgSend(v113, sel_setAccessoryType_, 3);
        if (v109) {
          double v74 = 6.0;
        }
        else {
          double v74 = 2.0;
        }
        uint64_t v75 = qword_26AF181E0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionPitchThreshold;
        swift_beginAccess();
        double v116 = v74;
        float v76 = v112;
        uint64_t v77 = sub_2359496C8();
        MEMORY[0x270FA5388](v77, v78, v79, v80, v81);
        *(&v99 - 2) = (uint64_t)&v116;
        *(&v99 - 1) = v75;
        uint64_t v111 = MEMORY[0x263F8EE60] + 8;
        sub_23594A298();
        uint64_t v82 = v108;
        uint64_t v83 = v103;
        v103(v76, v108);
        swift_endAccess();
        uint64_t v84 = qword_26AF181E0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionPitchThreshold;
        swift_beginAccess();
        double v116 = v74;
        uint64_t v85 = sub_2359496C8();
        MEMORY[0x270FA5388](v85, v86, v87, v88, v89);
        *(&v99 - 2) = (uint64_t)&v116;
        *(&v99 - 1) = v84;
        sub_23594A298();
        v83(v76, v82);
        swift_endAccess();
        uint64_t v90 = qword_26AF181E0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingPitchThreshold;
        swift_beginAccess();
        double v116 = v74;
        uint64_t v91 = sub_2359496C8();
        MEMORY[0x270FA5388](v91, v92, v93, v94, v95);
        *(&v99 - 2) = (uint64_t)&v116;
        *(&v99 - 1) = v90;
        sub_23594A298();
        v83(v76, v82);
        swift_endAccess();
        objc_msgSend(a1, sel_beginUpdates);
        v114[0] = &unk_26E8BD380;
        sub_235656734((unint64_t *)&qword_26880FAF0, MEMORY[0x263F07978]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880EAE0);
        sub_2356595F4((unint64_t *)&qword_26880FB00, (uint64_t *)&unk_26880EAE0);
        id v96 = v105;
        uint64_t v97 = v107;
        sub_23594A6C8();
        uint64_t v98 = (void *)sub_235947A68();
        (*(void (**)(char *, uint64_t))(v106 + 8))(v96, v97);
        objc_msgSend(a1, sel_reloadSections_withRowAnimation_, v98, 100);

        objc_msgSend(a1, sel_endUpdates);
      }
    }

    return;
  }
  id v67 = v113;
}

uint64_t sub_235659180@<X0>(unsigned char *a1@<X8>)
{
  return sub_2358D1A14(*(void *)(v1 + 16), a1);
}

void sub_23565919C()
{
}

uint64_t sub_2356591B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_2357008E8(*(uint64_t **)(v1 + 16), a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void sub_235659218()
{
}

uint64_t sub_235659234@<X0>(uint64_t *a1@<X8>)
{
  return sub_2356EB680(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_235659250(uint64_t a1)
{
  return a1;
}

uint64_t sub_235659338(uint64_t a1)
{
  return a1;
}

void sub_235659428()
{
}

uint64_t sub_235659444@<X0>(uint64_t *a1@<X8>)
{
  return sub_2356DA920(*(uint64_t **)(v1 + 16), a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_235659478@<X0>(unsigned char *a1@<X8>)
{
  return sub_235754B44(*(void *)(v1 + 16), a1);
}

void sub_235659494(double *a1@<X8>)
{
  sub_23585DD10(*(void *)(v1 + 16), a1);
}

uint64_t sub_2356594B0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_2356594EC()
{
  unint64_t result = qword_26AF154A0;
  if (!qword_26AF154A0)
  {
    sub_2356594B0(255, (unint64_t *)&unk_26AF154B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF154A0);
  }
  return result;
}

uint64_t sub_235659554(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15490);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2356595B4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2356595EC(uint64_t a1)
{
  sub_235653978(a1, v1);
}

uint64_t sub_2356595F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for AXMFeatureDescriptionOption(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for VNRecognizedPointKey(uint64_t a1)
{
}

void type metadata accessor for JointName(uint64_t a1)
{
}

void type metadata accessor for OU3DObjectType(uint64_t a1)
{
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_2356596D8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2356596F8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for CMVideoDimensions(uint64_t a1)
{
}

void type metadata accessor for MatteType(uint64_t a1)
{
}

void type metadata accessor for AVError(uint64_t a1)
{
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

void type metadata accessor for AVVideoCodecType(uint64_t a1)
{
}

void type metadata accessor for OptionsKey(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CGImagePropertyOrientation(uint64_t a1)
{
}

void type metadata accessor for UIDeviceOrientation(uint64_t a1)
{
}

void _s3__C3KeyVMa_0(uint64_t a1)
{
}

void type metadata accessor for DeviceType(uint64_t a1)
{
}

void type metadata accessor for Style(uint64_t a1)
{
}

uint64_t sub_235659838()
{
  return sub_235656734(&qword_26880EBB0, type metadata accessor for DeviceType);
}

uint64_t sub_235659880()
{
  return sub_235656734((unint64_t *)&unk_26880EBB8, type metadata accessor for DeviceType);
}

uint64_t sub_2356598C8()
{
  return sub_235656734((unint64_t *)&unk_26AF152E0, type metadata accessor for DeviceType);
}

uint64_t sub_235659910()
{
  return sub_235656734(&qword_26880EBC8, _s3__C3KeyVMa_0);
}

uint64_t sub_235659958()
{
  return sub_235656734(&qword_26880EBD0, _s3__C3KeyVMa_0);
}

uint64_t sub_2356599A0()
{
  return sub_235656734(&qword_26880EBD8, type metadata accessor for OptionsKey);
}

uint64_t sub_2356599E8()
{
  return sub_235656734(&qword_26880EBE0, type metadata accessor for OptionsKey);
}

uint64_t sub_235659A30()
{
  return sub_235656734(&qword_26880EBE8, type metadata accessor for AVVideoCodecType);
}

uint64_t sub_235659A78()
{
  return sub_235656734(&qword_26880EBF0, type metadata accessor for AVVideoCodecType);
}

uint64_t sub_235659AC0()
{
  return sub_235656734(&qword_26880EBF8, type metadata accessor for AVVideoCodecType);
}

uint64_t sub_235659B08()
{
  return sub_235656734(&qword_26880EC00, type metadata accessor for ActivityType);
}

uint64_t sub_235659B50()
{
  return sub_235656734(&qword_26880EC08, type metadata accessor for ActivityType);
}

uint64_t sub_235659B98()
{
  return sub_235656734(&qword_26880EC10, type metadata accessor for ActivityType);
}

uint64_t sub_235659BE0()
{
  return sub_235656734(&qword_26880EC18, type metadata accessor for AttributeName);
}

uint64_t sub_235659C28()
{
  return sub_235656734(&qword_26880EC20, type metadata accessor for AttributeName);
}

uint64_t sub_235659C70()
{
  return sub_235656734(&qword_26880EC28, type metadata accessor for FeatureKey);
}

uint64_t sub_235659CB8()
{
  return sub_235656734((unint64_t *)&unk_26880EC30, type metadata accessor for FeatureKey);
}

uint64_t sub_235659D00()
{
  return sub_235656734((unint64_t *)&unk_26AF15318, type metadata accessor for FeatureKey);
}

uint64_t sub_235659D48()
{
  return sub_235656734(&qword_26880EC40, type metadata accessor for AVError);
}

uint64_t sub_235659D90()
{
  return sub_235656734(&qword_26880EC48, type metadata accessor for AVError);
}

uint64_t sub_235659DD8()
{
  return sub_235656734(&qword_26880EC50, type metadata accessor for MatteType);
}

uint64_t sub_235659E20()
{
  return sub_235656734(&qword_26880EC58, type metadata accessor for MatteType);
}

uint64_t sub_235659E68()
{
  return sub_235656734(&qword_26880EC60, type metadata accessor for MatteType);
}

uint64_t sub_235659EB0()
{
  return sub_235656734(&qword_26880EC68, type metadata accessor for OU3DObjectType);
}

uint64_t sub_235659EF8()
{
  return sub_235656734(&qword_26880EC70, type metadata accessor for OU3DObjectType);
}

uint64_t sub_235659F40()
{
  return sub_235656734(&qword_26880EC78, type metadata accessor for JointName);
}

uint64_t sub_235659F88()
{
  return sub_235656734(&qword_26880EC80, type metadata accessor for JointName);
}

uint64_t sub_235659FD0()
{
  return sub_235656734(&qword_26880EC88, type metadata accessor for VNRecognizedPointKey);
}

uint64_t sub_23565A018()
{
  return sub_235656734(&qword_26880EC90, type metadata accessor for VNRecognizedPointKey);
}

uint64_t sub_23565A060()
{
  return sub_235656734(&qword_26880EC98, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_23565A0A8()
{
  return sub_235656734(&qword_26880ECA0, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_23565A0F0()
{
  return sub_235656734(&qword_26880ECA8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_23565A138()
{
  return sub_235656734(&qword_26880ECB0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_23565A180()
{
  return sub_235656734(&qword_26880ECB8, type metadata accessor for AXMFeatureDescriptionOption);
}

uint64_t sub_23565A1C8()
{
  return sub_235656734(&qword_26880ECC0, type metadata accessor for AXMFeatureDescriptionOption);
}

uint64_t sub_23565A210()
{
  return sub_235656734(&qword_26880ECC8, type metadata accessor for OU3DObjectType);
}

uint64_t sub_23565A258()
{
  return sub_235656734(&qword_26880ECD0, type metadata accessor for AXMFeatureDescriptionOption);
}

uint64_t sub_23565A2A0()
{
  return sub_235656734(&qword_26880ECD8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_23565A2E8()
{
  return sub_235656734(&qword_26880ECE0, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_23565A330()
{
  return sub_235656734(&qword_26880ECE8, type metadata accessor for VNRecognizedPointKey);
}

uint64_t sub_23565A378()
{
  return sub_235656734(&qword_26880ECF0, type metadata accessor for JointName);
}

uint64_t sub_23565A3C0()
{
  return sub_235656734(&qword_26880ECF8, type metadata accessor for AVError);
}

uint64_t sub_23565A408()
{
  return sub_235656734(&qword_26880ED00, type metadata accessor for AVError);
}

uint64_t sub_23565A450()
{
  return sub_235656734(&qword_26880ED08, type metadata accessor for AVError);
}

uint64_t sub_23565A498()
{
  return sub_235656734(&qword_26880ED10, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

void sub_23565A4F4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_23565A53C()
{
  return sub_235656734(&qword_26880ED18, type metadata accessor for Code);
}

unint64_t sub_23565A588()
{
  unint64_t result = qword_26880ED20;
  if (!qword_26880ED20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880ED20);
  }
  return result;
}

uint64_t sub_23565A5DC()
{
  return sub_235656734(&qword_26880ED28, type metadata accessor for Code);
}

uint64_t sub_23565A624()
{
  return sub_235656734((unint64_t *)&unk_26880ED30, type metadata accessor for AVError);
}

uint64_t sub_23565A66C()
{
  return sub_235656734(&qword_26AF15348, type metadata accessor for AttributeName);
}

uint64_t sub_23565A6B4()
{
  return sub_235656734(&qword_26880ED40, type metadata accessor for OptionsKey);
}

uint64_t sub_23565A6FC()
{
  return sub_235656734((unint64_t *)&qword_26880ED48, type metadata accessor for CFString);
}

uint64_t sub_23565A744()
{
  return sub_235656734(&qword_26880ED50, type metadata accessor for CFString);
}

uint64_t sub_23565A78C()
{
  return sub_235656734(&qword_26880ED58, _s3__C3KeyVMa_0);
}

uint64_t sub_23565A7D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_235659444(a1);
}

uint64_t sub_23565A7EC@<X0>(unsigned char *a1@<X8>)
{
  return sub_235659180(a1);
}

void sub_23565A820()
{
}

uint64_t sub_23565A844(uint64_t a1, uint64_t a2)
{
  v2[67] = a2;
  v2[66] = a1;
  v2[68] = type metadata accessor for MAGOutputEvent(0);
  v2[69] = swift_task_alloc();
  uint64_t v3 = sub_2359496D8();
  v2[70] = v3;
  v2[71] = *(void *)(v3 - 8);
  v2[72] = swift_task_alloc();
  uint64_t v4 = sub_235949738();
  v2[73] = v4;
  v2[74] = *(void *)(v4 - 8);
  v2[75] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFD8);
  v2[76] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SpatialTextBlock();
  v2[77] = v5;
  v2[78] = *(void *)(v5 - 8);
  v2[79] = swift_task_alloc();
  v2[80] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DetectedTextBlock();
  v2[81] = v6;
  v2[82] = *(void *)(v6 - 8);
  v2[83] = swift_task_alloc();
  v2[84] = swift_task_alloc();
  v2[85] = swift_task_alloc();
  v2[86] = type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  v2[87] = swift_task_alloc();
  sub_235949E78();
  v2[88] = sub_235949E68();
  uint64_t v8 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_23565AB0C, v8, v7);
}

uint64_t sub_23565AB0C()
{
  uint64_t v1 = *(void *)(v0 + 536);
  swift_release();
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x237DEA060](v1 + 16);
  if (v2)
  {
    v142 = (char *)v2;
    sub_23565C154(*(void *)(v0 + 528), *(void *)(v0 + 696), type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = *(double **)(v0 + 696);
        uint64_t v11 = *(void *)(v0 + 680);
        double v12 = *v10;
        double v13 = v10[1];
        double v14 = v10[2];
        double v15 = v10[3];
        uint64_t v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_26880EFF0);
        uint64_t v17 = (uint64_t)v10 + v16[12];
        uint64_t v18 = *(void **)((char *)v10 + v16[16]);
        uint64_t v19 = *(void **)((char *)v10 + v16[20]);
        uint64_t v20 = *(void **)((char *)v10 + v16[24]);
        uint64_t v21 = *(void *)((char *)v10 + v16[28]);
        sub_23565C2BC(v17, v11, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        if (v19) {
          BOOL v22 = v18 == 0;
        }
        else {
          BOOL v22 = 1;
        }
        if (v22 || v20 == 0) {
          goto LABEL_12;
        }
        uint64_t v95 = *(void *)(v0 + 672);
        uint64_t v96 = *(void *)(v0 + 624);
        uint64_t v140 = *(void *)(v0 + 616);
        uint64_t v97 = *(void *)(v0 + 608);
        sub_23565C154(*(void *)(v0 + 680), v95, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        int v134 = v19;
        id v98 = v19;
        unint64_t v129 = v18;
        id v99 = v18;
        id v100 = v20;
        uint64_t v101 = (__CVBuffer *)v98;
        id v102 = v99;
        uint64_t v103 = (__CVBuffer *)v100;
        sub_235921B18(v95, v102, v101, v103, v21, v97);
        int v104 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v97, 1, v140);
        if (v104 == 1)
        {
          uint64_t v105 = *(void *)(v0 + 608);

          sub_23565C324(v105);
          uint64_t v19 = v134;
          uint64_t v18 = v129;
LABEL_12:
          if (qword_26AF13B78 != -1) {
            swift_once();
          }
          uint64_t v24 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakColor;
          swift_beginAccess();
          uint64_t v25 = *(void *)(v24 + 8);
          uint64_t v26 = *(void *)(v24 + 32);
          long long v27 = *(_OWORD *)(v24 + 16);
          *(void *)(v0 + 152) = *(void *)v24;
          *(void *)(v0 + 160) = v25;
          *(_OWORD *)(v0 + 168) = v27;
          *(void *)(v0 + 184) = v26;
          uint64_t v28 = qword_26AF144C0;
          swift_bridgeObjectRetain();
          if (v28 != -1) {
            swift_once();
          }
          uint64_t v29 = *(void *)(v0 + 680);
          *(void *)(swift_task_alloc() + 16) = v0 + 152;
          sub_23594A2A8();
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(double *)(v0 + 400), *(double *)(v0 + 408), *(double *)(v0 + 416), 1.0);
          sub_235776798(v30, 0, v12, v13, v14, v15);

          goto LABEL_38;
        }
        uint64_t v106 = v102;
        uint64_t v107 = *(void *)(v0 + 640);
        uint64_t v108 = *(void *)(v0 + 616);
        sub_23565C2BC(*(void *)(v0 + 608), v107, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
        float32x2_t v109 = *(float32x2_t *)(v107 + *(int *)(v108 + 20));
        uint64_t v110 = (long long *)(v107 + *(int *)(v108 + 36));
        long long v135 = v110[1];
        long long v141 = *v110;
        long long v124 = v110[3];
        long long v130 = v110[2];
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v111 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakColor;
        swift_beginAccess();
        uint64_t v112 = *(void *)(v111 + 8);
        uint64_t v113 = *(void *)(v111 + 32);
        long long v114 = *(_OWORD *)(v111 + 16);
        *(void *)(v0 + 112) = *(void *)v111;
        *(void *)(v0 + 120) = v112;
        *(_OWORD *)(v0 + 128) = v114;
        *(void *)(v0 + 144) = v113;
        uint64_t v115 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        if (v115 != -1) {
          swift_once();
        }
        uint64_t v29 = *(void *)(v0 + 680);
        uint64_t v116 = *(void *)(v0 + 640);
        *(void *)(swift_task_alloc() + 16) = v0 + 112;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        id v117 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(double *)(v0 + 328), *(double *)(v0 + 336), *(double *)(v0 + 344), 1.0);
        sub_235776530(v117, v109, *(double *)&v141, *(double *)&v135, *(double *)&v130, *(double *)&v124);

        sub_23565C25C(v116, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
        goto LABEL_38;
      case 2u:
        uint64_t v31 = *(void *)(v0 + 632);
        uint64_t v32 = *(void *)(v0 + 616);
        sub_23565C2BC(*(void *)(v0 + 696), v31, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
        float32x2_t v33 = *(float32x2_t *)(v31 + *(int *)(v32 + 20));
        uint64_t v34 = (long long *)(v31 + *(int *)(v32 + 36));
        long long v132 = v34[1];
        long long v137 = *v34;
        long long v122 = v34[3];
        long long v126 = v34[2];
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v35 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakColor;
        swift_beginAccess();
        uint64_t v36 = *(void *)(v35 + 8);
        uint64_t v37 = *(void *)(v35 + 32);
        long long v38 = *(_OWORD *)(v35 + 16);
        *(void *)(v0 + 192) = *(void *)v35;
        *(void *)(v0 + 200) = v36;
        *(_OWORD *)(v0 + 208) = v38;
        *(void *)(v0 + 224) = v37;
        uint64_t v39 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        if (v39 != -1) {
          swift_once();
        }
        uint64_t v29 = *(void *)(v0 + 632);
        *(void *)(swift_task_alloc() + 16) = v0 + 192;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(double *)(v0 + 424), *(double *)(v0 + 432), *(double *)(v0 + 440), 1.0);
        sub_235776530(v40, v33, *(double *)&v137, *(double *)&v132, *(double *)&v126, *(double *)&v122);

        uint64_t v41 = type metadata accessor for SpatialTextBlock;
        goto LABEL_39;
      case 3u:
        sub_235776B08(**(void **)(v0 + 696));

        swift_bridgeObjectRelease();
        break;
      case 4u:
        uint64_t v42 = *(uint64_t **)(v0 + 696);
        uint64_t v123 = *(void *)(v0 + 600);
        uint64_t v133 = *(void *)(v0 + 592);
        uint64_t v138 = *(void *)(v0 + 584);
        uint64_t v43 = *(void *)(v0 + 576);
        uint64_t v44 = *(void *)(v0 + 568);
        uint64_t v45 = *(void *)(v0 + 560);
        uint64_t v46 = *v42;
        uint64_t v47 = v42[1];
        sub_23565BC70();
        v127 = (void *)sub_23594A288();
        uint64_t v48 = (void *)swift_allocObject();
        v48[2] = v142;
        v48[3] = v46;
        v48[4] = v47;
        *(void *)(v0 + 48) = sub_23565C234;
        *(void *)(v0 + 56) = v48;
        *(void *)(v0 + 16) = MEMORY[0x263EF8330];
        *(void *)(v0 + 24) = 1107296256;
        *(void *)(v0 + 32) = sub_2357A194C;
        *(void *)(v0 + 40) = &block_descriptor_6;
        uint64_t v49 = _Block_copy((const void *)(v0 + 16));
        uint64_t v50 = v142;
        swift_release();
        sub_235949708();
        *(void *)(v0 + 496) = MEMORY[0x263F8EE78];
        sub_23565C0A0();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
        sub_23565C0F8();
        sub_23594A6C8();
        MEMORY[0x237DE8250](0, v123, v43, v49);
        _Block_release(v49);

        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
        (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v123, v138);
        break;
      case 5u:
        sub_235775B10();

        break;
      case 6u:
        sub_235775F6C();

        break;
      case 7u:
        sub_235776198();

        break;
      case 8u:
        type metadata accessor for MAGUtilities();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v52 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        uint64_t v53 = (void *)sub_235949A88();
        uint64_t v54 = (void *)sub_235949A88();
        id v55 = objc_msgSend(v52, sel_localizedStringForKey_value_table_, v53, 0, v54);

        uint64_t v56 = sub_235949AC8();
        uint64_t v58 = v57;

        uint64_t v59 = self;
        swift_bridgeObjectRetain();
        id v60 = objc_msgSend(v59, sel_currentLanguageCode);
        uint64_t v61 = sub_235949AC8();
        uint64_t v63 = v62;

        __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFE0);
        uint64_t v64 = swift_allocObject();
        *(_OWORD *)(v64 + 16) = xmmword_23594FD70;
        uint64_t v118 = v56;
        *(void *)(v64 + 32) = v56;
        *(void *)(v64 + 40) = v58;
        uint64_t v119 = v58;
        *(void *)(v64 + 48) = v61;
        *(void *)(v64 + 56) = v63;
        unint64_t v65 = (uint64_t *)MEMORY[0x263F001A8];
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v66 = *v65;
        uint64_t v67 = v65[1];
        uint64_t v68 = v65[2];
        uint64_t v69 = v65[3];
        uint64_t v70 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectLanguages;
        swift_beginAccess();
        uint64_t v71 = *(void *)(v70 + 8);
        char v72 = *(unsigned char *)(v70 + 16);
        *(void *)(v0 + 472) = *(void *)v70;
        *(void *)(v0 + 480) = v71;
        *(unsigned char *)(v0 + 488) = v72;
        uint64_t v73 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        if (v73 != -1) {
          swift_once();
        }
        uint64_t v74 = *(void *)(v0 + 664);
        uint64_t v120 = *(void *)(v0 + 656);
        uint64_t v75 = *(int **)(v0 + 648);
        uint64_t v76 = *(void *)(v0 + 552);
        uint64_t v128 = *(int **)(v0 + 544);
        *(void *)(swift_task_alloc() + 16) = v0 + 472;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        char v77 = *(unsigned char *)(v0 + 489);
        sub_235947968();
        uint64_t v78 = v75[9];
        *(void *)(v74 + v75[5]) = v64;
        uint64_t v79 = (void *)(v74 + v75[6]);
        *uint64_t v79 = v66;
        v79[1] = v67;
        v79[2] = v68;
        v79[3] = v69;
        *(void *)(v74 + v75[7]) = 0;
        *(unsigned char *)(v74 + v75[8]) = v77;
        *(void *)(v74 + v78) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2688105F0);
        unint64_t v80 = (*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
        uint64_t v81 = swift_allocObject();
        *(_OWORD *)(v81 + 16) = xmmword_23594FD70;
        sub_23565C154(v74, v81 + v80, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        *(void *)(v76 + v128[5]) = v81;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        sub_235947968();
        *(unsigned char *)(v76 + v128[6]) = 1;
        *(unsigned char *)(v76 + v128[7]) = 0;
        sub_235741600(v76);
        sub_23565C25C(v76, type metadata accessor for MAGOutputEvent);
        id v82 = *(id *)&v142[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService];
        LOBYTE(v74) = sub_2357A2314();

        if (v74)
        {
          uint64_t v83 = qword_26AF181F0;
          uint64_t v139 = qword_26AF181F0 + 48;
          swift_beginAccess();
          long long v84 = *(_OWORD *)(v83 + 56);
          *(void *)(v0 + 304) = *(void *)(v83 + 48);
          *(_OWORD *)(v0 + 312) = v84;
          *(void *)(swift_task_alloc() + 16) = v0 + 304;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFE8);
          sub_23594A2A8();
          swift_task_dealloc();
          uint64_t v85 = *(void **)(v0 + 520);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v85 = sub_2356CD498(0, v85[2] + 1, 1, v85);
          }
          unint64_t v87 = v85[2];
          unint64_t v86 = v85[3];
          if (v87 >= v86 >> 1) {
            uint64_t v85 = sub_2356CD498((void *)(v86 > 1), v87 + 1, 1, v85);
          }
          uint64_t v29 = *(void *)(v0 + 664);
          uint64_t v88 = *(void *)(v0 + 576);
          uint64_t v89 = *(void *)(v0 + 568);
          uint64_t v90 = *(void *)(v0 + 560);
          v85[2] = v87 + 1;
          uint64_t v91 = &v85[2 * v87];
          v91[4] = v118;
          v91[5] = v119;
          *(void *)(v0 + 512) = v85;
          sub_2359496C8();
          uint64_t v92 = swift_task_alloc();
          *(void *)(v92 + 16) = v0 + 512;
          *(void *)(v92 + 24) = v139;
          sub_23594A298();
          swift_task_dealloc();
          (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v88, v90);
          swift_bridgeObjectRelease();
          swift_endAccess();

LABEL_38:
          uint64_t v41 = type metadata accessor for DetectedTextBlock;
LABEL_39:
          sub_23565C25C(v29, (uint64_t (*)(void))v41);
        }
        else
        {
          sub_23565C25C(*(void *)(v0 + 664), (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
          swift_bridgeObjectRelease();
        }
        break;
      default:
        uint64_t v3 = *(void *)(v0 + 600);
        uint64_t v131 = *(void *)(v0 + 592);
        uint64_t v136 = *(void *)(v0 + 584);
        uint64_t v4 = *(void *)(v0 + 576);
        uint64_t v5 = *(void *)(v0 + 568);
        uint64_t v6 = *(void *)(v0 + 560);
        long long v121 = *(_OWORD *)*(void *)(v0 + 696);
        sub_23565BC70();
        v125 = (void *)sub_23594A288();
        uint64_t v7 = swift_allocObject();
        *(void *)(v7 + 16) = v142;
        *(_OWORD *)(v7 + 32) = v121;
        *(void *)(v0 + 96) = sub_23565C07C;
        *(void *)(v0 + 104) = v7;
        *(void *)(v0 + 64) = MEMORY[0x263EF8330];
        *(void *)(v0 + 72) = 1107296256;
        *(void *)(v0 + 80) = sub_2357A194C;
        *(void *)(v0 + 88) = &block_descriptor_0;
        uint64_t v8 = _Block_copy((const void *)(v0 + 64));
        uint64_t v9 = v142;
        swift_release();
        sub_235949708();
        *(void *)(v0 + 504) = MEMORY[0x263F8EE78];
        sub_23565C0A0();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
        sub_23565C0F8();
        sub_23594A6C8();
        MEMORY[0x237DE8250](0, v3, v4, v8);
        _Block_release(v8);

        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
        (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v3, v136);
        break;
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v93 = *(uint64_t (**)(void))(v0 + 8);
  return v93();
}

unint64_t sub_23565BC70()
{
  unint64_t result = qword_26AF152A0;
  if (!qword_26AF152A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AF152A0);
  }
  return result;
}

void sub_23565BCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = sub_23587FE44();
  id v6 = sub_23587FFB0();
  sub_23587CB9C(a2, a3, v5, v6);
}

void sub_23565BD24(uint64_t a1, __n128 a2)
{
  uint64_t v3 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTipScene;
  if (!*(void *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTipScene))
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16AD8]), sel_init);
    id v5 = objc_msgSend(self, sel_sphereWithRadius_, 0.005);
    id v6 = objc_msgSend(v5, sel_firstMaterial);
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_diffuse);

      id v9 = objc_msgSend(self, sel_redColor);
      objc_msgSend(v8, sel_setContents_, v9);
    }
    id v10 = objc_msgSend(self, sel_nodeWithGeometry_, v5);
    objc_msgSend(v10, sel_setHidden_, 1);
    uint64_t v11 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTip);
    *(void *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTip) = v10;
    id v12 = v10;

    id v13 = objc_msgSend(v4, sel_rootNode);
    objc_msgSend(v13, sel_addChildNode_, v12);

    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView), sel_setScene_, v4);
    double v14 = *(void **)(a1 + v3);
    *(void *)(a1 + v3) = v4;
  }
  double v15 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTip);
  if (v15)
  {
    uint64_t v16 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
    if (v16)
    {
      id v28 = v15;
      id v17 = objc_msgSend(v16, sel_session);
      id v18 = objc_msgSend(v17, sel_currentFrame);

      if (v18)
      {
        id v19 = objc_msgSend(v18, sel_camera);

        objc_msgSend(v19, sel_transform);
        float32x4_t v24 = v20;
        float32x4_t v25 = v21;
        float32x4_t v26 = v23;
        float32x4_t v27 = v22;

        objc_msgSend(v28, sel_setSimdWorldPosition_, *(double *)vaddq_f32(v26, vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v24, a2.n128_f32[0] / 100.0), v25, a2.n128_f32[1] / 100.0), v27, a2.n128_f32[2] / 100.0)).i64);
        objc_msgSend(v28, sel_setHidden_, 0);
      }
    }
  }
}

uint64_t sub_23565C044()
{
  return swift_deallocObject();
}

void sub_23565C07C()
{
  sub_23565BD24(v0[1].n128_i64[0], v0[2]);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_23565C0A0()
{
  unint64_t result = qword_26AF15000;
  if (!qword_26AF15000)
  {
    sub_2359496D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF15000);
  }
  return result;
}

unint64_t sub_23565C0F8()
{
  unint64_t result = qword_26AF151B0;
  if (!qword_26AF151B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26AF151A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF151B0);
  }
  return result;
}

uint64_t sub_23565C154(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23565C1BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2358A45B8(*(uint64_t **)(v1 + 16), a1);
}

void sub_23565C1D8()
{
}

uint64_t sub_23565C1F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23565C234()
{
  sub_23565BCB0(v0[2], v0[3], v0[4]);
}

void sub_23565C240(uint64_t a1@<X8>)
{
  sub_2357EEB60(*(void *)(v1 + 16), a1);
}

uint64_t sub_23565C25C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23565C2BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23565C324(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23565C384(uint64_t a1@<X8>)
{
}

uint64_t sub_23565C3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_23565C3AC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23565C448(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    sub_2359470F8();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    id v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_23565C550(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_23565C5C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_23565C654(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_23565C6EC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_23565C75C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_23565C7E4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_23565C984(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x23565CBE4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
          id v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for DefaultStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_23565CC24()
{
  uint64_t v0 = sub_23594A278();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2, v3, v4, v5);
  unsigned int v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_235949738();
  MEMORY[0x270FA5388](v8 - 8, v9, v10, v11, v12);
  uint64_t v13 = sub_23594A208();
  MEMORY[0x270FA5388](v13 - 8, v14, v15, v16, v17);
  sub_23565BC70();
  sub_23594A1F8();
  sub_235949708();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v7, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_23594A2D8();
  qword_26AF144B0 = result;
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_23565CE04()
{
  v1[9] = v0;
  uint64_t v2 = sub_2359496D8();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v3 = sub_235949738();
  v1[13] = v3;
  v1[14] = *(void *)(v3 - 8);
  v1[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MAGOutputEngine.Event(0);
  v1[16] = v4;
  v1[17] = *(void *)(v4 - 8);
  v1[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F080);
  v1[19] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F088);
  v1[20] = v5;
  v1[21] = *(void *)(v5 - 8);
  v1[22] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F090);
  v1[23] = v6;
  v1[24] = *(void *)(v6 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = sub_235949E78();
  v1[27] = sub_235949E68();
  uint64_t v8 = sub_235949E28();
  v1[28] = v8;
  v1[29] = v7;
  return MEMORY[0x270FA2498](sub_23565D0A4, v8, v7);
}

uint64_t sub_23565D0A4()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  sub_235947E98();
  sub_235949EE8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_235949E68();
  v0[30] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[31] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_23565D1CC;
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[19];
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v7, v4, v8, v6);
}

uint64_t sub_23565D1CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 232);
  uint64_t v3 = *(void *)(v1 + 224);
  return MEMORY[0x270FA2498](sub_23565D310, v3, v2);
}

uint64_t sub_23565D310()
{
  uint64_t v1 = v0[19];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[17] + 48))(v1, 1, v0[16]) == 1)
  {
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    sub_235661100(v1, v0[18]);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = (uint64_t *)v0[18];
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v20 = v0[15];
      uint64_t v22 = v0[14];
      uint64_t v6 = v0[12];
      uint64_t v23 = v0[13];
      uint64_t v7 = v0[10];
      uint64_t v8 = v0[11];
      uint64_t v9 = (void *)v0[9];
      uint64_t v11 = *v5;
      uint64_t v10 = v5[1];
      sub_23565BC70();
      float32x4_t v21 = (void *)sub_23594A288();
      uint64_t v12 = (void *)swift_allocObject();
      v12[2] = v9;
      v12[3] = v11;
      v12[4] = v10;
      v0[6] = sub_2356611C8;
      v0[7] = v12;
      v0[2] = MEMORY[0x263EF8330];
      v0[3] = 1107296256;
      v0[4] = sub_2357A194C;
      v0[5] = &block_descriptor_27;
      uint64_t v13 = _Block_copy(v0 + 2);
      id v14 = v9;
      sub_235949708();
      v0[8] = MEMORY[0x263F8EE78];
      sub_23565C0A0();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
      sub_23565C0F8();
      sub_23594A6C8();
      MEMORY[0x237DE8250](0, v20, v6, v13);
      _Block_release(v13);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v23);
      swift_release();
    }
    else
    {
      sub_235661164((uint64_t)v5, type metadata accessor for MAGOutputEngine.Event);
    }
    uint64_t v15 = sub_235949E68();
    v0[30] = v15;
    uint64_t v16 = (void *)swift_task_alloc();
    v0[31] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_23565D1CC;
    uint64_t v17 = v0[23];
    uint64_t v18 = v0[19];
    uint64_t v19 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1F68](v18, v15, v19, v17);
  }
}

void sub_23565D674(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeView);
  if (v1)
  {
    id v2 = *(id *)(v1 + OBJC_IVAR____TtC16MagnifierSupport17DetectionModeView_detectionLabel);
    id v3 = (id)sub_235949A88();
    objc_msgSend(v2, sel_setText_, v3);
  }
}

uint64_t sub_23565D724(void *a1, unsigned char *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  __int16 v104 = 0;
  sub_23565E418(a1, (char *)&v104 + 1, &v104);
  if (*(unsigned char *)(*(void *)(v4 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService)
                + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_detectionModeAutomationRunning) == 1)
  {
    uint64_t result = 1;
    *a2 = 1;
    return result;
  }
  if (HIBYTE(v104) == 1)
  {
    int v10 = v104;
    *a2 = v104;
    if (v10 != 1) {
      goto LABEL_25;
    }
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if ((aBlock[0] & 1) != 0
      || (swift_getKeyPath(),
          swift_getKeyPath(),
          sub_2359484D8(),
          swift_release(),
          swift_release(),
          LOBYTE(aBlock[0]) == 1))
    {
      swift_bridgeObjectRelease();
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      uint64_t v12 = self;
      id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
      id v14 = (void *)sub_235949A88();
      uint64_t v15 = (void *)sub_235949A88();
      id v16 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, 0, v15);

      uint64_t v17 = sub_235949AC8();
      uint64_t v19 = v18;

      swift_bridgeObjectRelease();
      *a4 = v17;
      a4[1] = v19;
      id v20 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
      float32x4_t v21 = (void *)sub_235949A88();
      uint64_t v22 = (void *)sub_235949A88();
      id v23 = objc_msgSend(v20, sel_localizedStringForKey_value_table_, v21, 0, v22);

      uint64_t v24 = sub_235949AC8();
      uint64_t v26 = v25;

      *a3 = v24;
      a3[1] = v26;
      uint64_t v27 = qword_26AF181E0
          + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakFlashlightEnabled;
      swift_beginAccess();
      uint64_t v28 = *(void *)(v27 + 8);
      char v29 = *(unsigned char *)(v27 + 16);
      v101[0] = *(void *)v27;
      v101[1] = v28;
      char v102 = v29;
      uint64_t v30 = qword_26AF144C0;
      uint64_t v31 = swift_bridgeObjectRetain();
      if (v30 != -1) {
        uint64_t v31 = swift_once();
      }
      MEMORY[0x270FA5388](v31, v32, v33, v34, v35);
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      if (v98 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_2359484D8();
        swift_release();
        swift_release();
        if (v101[0]) {
          goto LABEL_15;
        }
      }
      uint64_t v36 = qword_26AF181E0
          + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__textDetectionFlashlightEnabled;
      uint64_t v37 = swift_beginAccess();
      uint64_t v38 = *(void *)(v36 + 8);
      char v39 = *(unsigned char *)(v36 + 16);
      uint64_t v98 = *(void *)v36;
      uint64_t v99 = v38;
      char v100 = v39;
      MEMORY[0x270FA5388](v37, v40, v41, v42, v43);
      swift_bridgeObjectRetain();
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      if (v95 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_2359484D8();
        swift_release();
        swift_release();
        if (v98 == 1)
        {
LABEL_15:
          if ((*(unsigned char *)(v5 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_toggledDetectionModeFlashlightOff) & 1) == 0)
          {
            uint64_t v44 = *a4;
            if (a4[1])
            {
              swift_bridgeObjectRetain();
              id v45 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
              uint64_t v46 = (void *)sub_235949A88();
              uint64_t v47 = (void *)sub_235949A88();
              id v48 = objc_msgSend(v45, sel_localizedStringForKey_value_table_, v46, 0, v47);

              uint64_t v49 = sub_235949AC8();
              uint64_t v51 = v50;

              uint64_t v98 = v49;
              uint64_t v99 = v51;
              swift_bridgeObjectRetain();
              uint64_t v96 = sub_235949C78();
              uint64_t v97 = v52;
              sub_235949BC8();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              uint64_t v44 = v96;
              uint64_t v53 = v97;
            }
            else
            {
              uint64_t v53 = 0;
            }
            *a4 = v44;
            a4[1] = v53;
            sub_23565E538();
          }
        }
      }
    }
    else
    {
LABEL_25:
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359484D8();
      swift_release();
      swift_release();
      if ((aBlock[0] & 1) == 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_2359484D8();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        type metadata accessor for MAGUtilities();
        uint64_t v70 = swift_getObjCClassFromMetadata();
        uint64_t v71 = self;
        id v72 = objc_msgSend(v71, sel_bundleForClass_, v70);
        uint64_t v73 = (void *)sub_235949A88();
        uint64_t v74 = (void *)sub_235949A88();
        id v75 = objc_msgSend(v72, sel_localizedStringForKey_value_table_, v73, 0, v74);

        uint64_t v76 = sub_235949AC8();
        uint64_t v78 = v77;

        swift_bridgeObjectRelease();
        *a4 = v76;
        a4[1] = v78;
        id v79 = objc_msgSend(v71, sel_bundleForClass_, v70);
        unint64_t v80 = (void *)sub_235949A88();
        uint64_t v81 = (void *)sub_235949A88();
        id v82 = objc_msgSend(v79, sel_localizedStringForKey_value_table_, v80, 0, v81);

        uint64_t v83 = sub_235949AC8();
        uint64_t v85 = v84;

        uint64_t result = 0;
        *a3 = v83;
        a3[1] = v85;
        return result;
      }
    }
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if ((aBlock[0] & 1) != 0
      || (swift_getKeyPath(),
          swift_getKeyPath(),
          sub_2359484D8(),
          swift_release(),
          swift_release(),
          LOBYTE(aBlock[0]) == 1))
    {
      *(unsigned char *)(v4 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeTooDarkToDetect) = 0;
    }
    LOBYTE(v101[0]) = 0;
    LOBYTE(v98) = 0;
    sub_23565EB4C((char *)v101, &v98);
    if (LOBYTE(v101[0]) == 1)
    {
      type metadata accessor for MAGUtilities();
      uint64_t v54 = swift_getObjCClassFromMetadata();
      id v55 = self;
      id v56 = objc_msgSend(v55, sel_bundleForClass_, v54);
      uint64_t v57 = (void *)sub_235949A88();
      uint64_t v58 = (void *)sub_235949A88();
      id v59 = objc_msgSend(v56, sel_localizedStringForKey_value_table_, v57, 0, v58);

      uint64_t v60 = sub_235949AC8();
      uint64_t v62 = v61;

      swift_bridgeObjectRelease();
      *a4 = v60;
      a4[1] = v62;
      id v63 = objc_msgSend(v55, sel_bundleForClass_, v54);
      uint64_t v64 = (void *)sub_235949A88();
      unint64_t v65 = (void *)sub_235949A88();
      id v66 = objc_msgSend(v63, sel_localizedStringForKey_value_table_, v64, 0, v65);

      uint64_t v67 = sub_235949AC8();
      uint64_t v69 = v68;

      uint64_t result = 0;
      *a3 = v67;
      a3[1] = v69;
      *a2 = v98;
    }
    else
    {
      char v86 = v104 | v98;
      *a2 = (v104 | v98) & 1;
      swift_bridgeObjectRelease();
      *a4 = 0;
      a4[1] = 0;
      *a3 = 0;
      a3[1] = 0;
      if (v86)
      {
        id v87 = sub_23587FE44();
        id v88 = sub_23587FFB0();
        *(unsigned char *)(v5 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_isInformationLabelVisible) = 0;
        uint64_t v89 = self;
        uint64_t v90 = swift_allocObject();
        *(void *)(v90 + 16) = v87;
        *(void *)(v90 + 24) = v88;
        aBlock[4] = sub_2356612D4;
        aBlock[5] = v90;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_2357A194C;
        aBlock[3] = &block_descriptor_45;
        uint64_t v91 = _Block_copy(aBlock);
        id v92 = v87;
        id v93 = v88;
        swift_release();
        id v94 = objc_msgSend(v89, sel_runningPropertyAnimatorWithDuration_delay_options_animations_completion_, 0x20000, v91, 0, 0.2, 0.0);
        _Block_release(v91);
      }
      return 1;
    }
  }
  return result;
}

void sub_23565E418(void *a1, char *a2, unsigned char *a3)
{
  *a3 = 0;
  objc_msgSend(a1, sel_estimatedLuminance);
  if (v7 == 0.0)
  {
    uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_luminanceManager);
    if (v8)
    {
      id v9 = v8;
      id v10 = objc_msgSend(a1, sel_capturedImage);
      objc_msgSend(v9, sel_computeLuminanceFromPixelBuffer_, v10);
      double v12 = v11;
    }
    else
    {
      double v12 = 0.0;
    }
    double v13 = v12 / 96.0;
  }
  else
  {
    objc_msgSend(a1, sel_estimatedLuminance);
  }
  if (v13 > 0.0 && v13 < 0.3)
  {
    char v15 = 1;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooDarkToDetect)) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  char v15 = 0;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooDarkToDetect))
  {
LABEL_12:
    *(unsigned char *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooDarkToDetect) = v15;
    *a3 = 1;
  }
LABEL_13:
  *a2 = v15;
}

uint64_t sub_23565E538()
{
  uint64_t v1 = sub_2359496B8();
  uint64_t v62 = *(void *)(v1 - 8);
  uint64_t v63 = v1;
  MEMORY[0x270FA5388](v1, v2, v3, v4, v5);
  uint64_t v61 = (uint64_t *)((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = sub_2359496D8();
  uint64_t v71 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68, v7, v8, v9, v10);
  double v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_235949738();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = (char *)v13;
  MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_235949758();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20, v22, v23, v24, v25);
  uint64_t v27 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28, v29, v30, v31, v32);
  uint64_t v34 = (char *)&v58 - v33;
  uint64_t v72 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeFlashlightDispatchItem;
  if (*(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeFlashlightDispatchItem])
  {
    sub_2359470F8();
    sub_235949788();
    swift_release();
  }
  unint64_t v60 = sub_23565BC70();
  uint64_t v65 = sub_23594A288();
  sub_235949748();
  MEMORY[0x237DE7760](v27, 0.5);
  id v66 = *(void (**)(char *, uint64_t))(v21 + 8);
  v66(v27, v20);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v0;
  id v79 = sub_235660F30;
  uint64_t v80 = v35;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v76 = 1107296256;
  uint64_t v77 = sub_2357A194C;
  uint64_t v78 = &block_descriptor_1;
  uint64_t v36 = _Block_copy(&aBlock);
  uint64_t v73 = v20;
  uint64_t v37 = v36;
  uint64_t v38 = v0;
  uint64_t v67 = v0;
  uint64_t v64 = v38;
  swift_release();
  char v39 = v19;
  sub_235949708();
  aBlocuint64_t k = MEMORY[0x263F8EE78];
  sub_23565C0A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_23565C0F8();
  id v59 = v27;
  uint64_t v40 = v68;
  sub_23594A6C8();
  uint64_t v41 = (void *)v65;
  MEMORY[0x237DE81B0](v34, v39, v12, v37);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v71 + 8))(v12, v40);
  uint64_t v42 = v66;
  (*(void (**)(char *, char *))(v69 + 8))(v39, v70);
  uint64_t v70 = v34;
  uint64_t v71 = v21 + 8;
  v42(v34, v73);
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v64;
  *(void *)(v43 + 16) = v64;
  id v79 = sub_23566108C;
  uint64_t v80 = v43;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v76 = 1107296256;
  uint64_t v77 = sub_2357A194C;
  uint64_t v78 = &block_descriptor_6_0;
  _Block_copy(&aBlock);
  uint64_t v74 = MEMORY[0x263F8EE78];
  id v45 = v44;
  sub_23594A6C8();
  sub_235949798();
  swift_allocObject();
  uint64_t v46 = sub_235949778();
  swift_release();
  uint64_t v47 = v72;
  id v48 = v67;
  *(void *)&v67[v72] = v46;
  uint64_t v49 = v48;
  uint64_t result = swift_release();
  if (*(void *)&v49[v47])
  {
    sub_2359470F8();
    uint64_t v51 = (void *)sub_23594A288();
    uint64_t v52 = v59;
    sub_235949748();
    uint64_t v53 = v61;
    *uint64_t v61 = 10;
    uint64_t v55 = v62;
    uint64_t v54 = v63;
    (*(void (**)(void *, void, uint64_t))(v62 + 104))(v53, *MEMORY[0x263F8F018], v63);
    id v56 = v70;
    MEMORY[0x237DE7750](v52, v53);
    (*(void (**)(void *, uint64_t))(v55 + 8))(v53, v54);
    uint64_t v57 = v73;
    v42(v52, v73);
    sub_23594A228();
    swift_release();

    return ((uint64_t (*)(char *, uint64_t))v42)(v56, v57);
  }
  return result;
}

void sub_23565EB4C(char *a1, unsigned char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_235947908();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a2 = 0;
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_rotationRateManager);
  if (!v14) {
    goto LABEL_11;
  }
  uint64_t v15 = *(void **)(v14 + 16);
  sub_2359470F8();
  id v16 = objc_msgSend(v15, sel_deviceMotion);
  if (!v16
    || (uint64_t v17 = v16,
        objc_msgSend(v16, sel_rotationRate),
        double v19 = v18,
        double v21 = v20,
        double v23 = v22,
        v17,
        sqrt(v23 * v23 + v19 * v19 + v21 * v21) <= 5.0))
  {
    uint64_t v26 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooFastToDetect;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooFastToDetect) == 1)
    {
      uint64_t v27 = v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_tooFastLastDate;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v27, v6);
      sub_235947898();
      double v29 = v28;
      swift_release();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      char v25 = 1;
      if (v29 > -1.0) {
        goto LABEL_12;
      }
      *(unsigned char *)(v3 + v26) = 0;
      *a2 = 1;
    }
    else
    {
      swift_release();
    }
LABEL_11:
    char v25 = 0;
    goto LABEL_12;
  }
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooFastToDetect) & 1) == 0)
  {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooFastToDetect) = 1;
    *a2 = 1;
  }
  sub_2359478F8();
  uint64_t v24 = v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_tooFastLastDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v24, v13, v6);
  swift_endAccess();
  swift_release();
  char v25 = 1;
LABEL_12:
  *a1 = v25;
}

void sub_23565EDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v71 = type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x270FA5388](v71, v10, v11, v12, v13);
  uint64_t v70 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2359496D8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15, v17, v18, v19, v20);
  double v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_235949738();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23, v25, v26, v27, v28);
  uint64_t v30 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (v73)
    {
      sub_23565BC70();
      int v69 = a5;
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_23594A288();
      uint64_t v31 = (void *)swift_allocObject();
      v31[2] = v6;
      v31[3] = a1;
      v31[4] = a2;
      aBlock[4] = sub_235661218;
      aBlock[5] = v31;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2357A194C;
      aBlock[3] = &block_descriptor_33;
      uint64_t v32 = _Block_copy(aBlock);
      id v67 = v6;
      swift_release();
      sub_235949708();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_23565C0A0();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
      sub_23565C0F8();
      sub_23594A6C8();
      uint64_t v33 = (void *)v68;
      MEMORY[0x237DE8250](0, v30, v22, v32);
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
      if (v69)
      {
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v34 = (void *)(qword_26AF181E0
                       + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedPauseDetectionModeFeedbacks);
        swift_beginAccess();
        uint64_t v35 = v34[1];
        uint64_t v36 = v34[2];
        v74[0] = *v34;
        v74[1] = v35;
        v74[2] = v36;
        uint64_t v37 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        uint64_t v38 = swift_bridgeObjectRetain();
        if (v37 != -1) {
          uint64_t v38 = swift_once();
        }
        MEMORY[0x270FA5388](v38, v39, v40, v41, v42);
        *(&v67 - 2) = v74;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15150);
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v43 = sub_2356BFD20(0, v74[3]);
        swift_bridgeObjectRelease();
        if (v43)
        {
          type metadata accessor for MAGUtilities();
          uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          id v45 = self;
          id v46 = objc_msgSend(v45, sel_bundleForClass_, ObjCClassFromMetadata);
          uint64_t v47 = (void *)sub_235949A88();
          id v48 = (void *)sub_235949A88();
          id v49 = objc_msgSend(v46, sel_localizedStringForKey_value_table_, v47, 0, v48);

          uint64_t v50 = sub_235949AC8();
          uint64_t v52 = v51;

          uint64_t v53 = v72;
          if (v50 == v72 && v52 == v73)
          {
            swift_bridgeObjectRelease();
LABEL_13:
            uint64_t v56 = (uint64_t)v70;
            uint64_t v55 = v71;
            uint64_t v57 = &v70[*(int *)(v71 + 20)];
            char v58 = 3;
LABEL_14:
            *uint64_t v57 = v58;
            type metadata accessor for MAGOutputEvent.EventType(0);
            swift_storeEnumTagMultiPayload();
            sub_235947968();
            *(unsigned char *)(v56 + *(int *)(v55 + 24)) = 0;
            *(unsigned char *)(v56 + *(int *)(v55 + 28)) = 0;
            sub_235741600(v56);
            sub_235661164(v56, type metadata accessor for MAGOutputEvent);
            return;
          }
          char v54 = sub_23594AB78();
          swift_bridgeObjectRelease();
          if (v54) {
            goto LABEL_13;
          }
          id v59 = objc_msgSend(v45, sel_bundleForClass_, ObjCClassFromMetadata);
          unint64_t v60 = (void *)sub_235949A88();
          uint64_t v61 = (void *)sub_235949A88();
          id v62 = objc_msgSend(v59, sel_localizedStringForKey_value_table_, v60, 0, v61);

          uint64_t v63 = sub_235949AC8();
          uint64_t v65 = v64;

          if (v63 == v53 && v65 == v73)
          {
            swift_bridgeObjectRelease();
LABEL_20:
            uint64_t v56 = (uint64_t)v70;
            uint64_t v55 = v71;
            uint64_t v57 = &v70[*(int *)(v71 + 20)];
            char v58 = 2;
            goto LABEL_14;
          }
          char v66 = sub_23594AB78();
          swift_bridgeObjectRelease();
          if (v66) {
            goto LABEL_20;
          }
        }
      }
    }
  }
}

void sub_23565F4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  sub_2356610AC();
  uint64_t v4 = sub_23594A638();
  uint64_t v6 = v5;
  id v7 = sub_23587FE44();
  id v8 = sub_23587FFB0();
  *(unsigned char *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_isInformationLabelVisible) = 1;
  uint64_t v9 = (void *)sub_235949A88();
  objc_msgSend(v7, sel_setText_, v9, v15, v16);

  objc_msgSend(v7, sel_sizeToFit);
  objc_msgSend(v7, sel_setNeedsLayout);
  uint64_t v10 = self;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v7;
  void v11[3] = v8;
  v11[4] = v4;
  void v11[5] = v6;
  uint64_t v19 = sub_235661288;
  uint64_t v20 = v11;
  uint64_t v15 = MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_2357A194C;
  uint64_t v18 = &block_descriptor_39;
  uint64_t v12 = _Block_copy(&v15);
  id v13 = v7;
  swift_bridgeObjectRetain();
  id v14 = v8;
  swift_release();

  _Block_release(v12);
  swift_bridgeObjectRelease();
}

uint64_t sub_23565F694()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_usePointSpeakSpeechFeedback) == 1)
  {
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (v2) {
      return 1;
    }
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_useTextDetectionSpeechFeedback) != 1) {
    return 0;
  }
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  return v3;
}

void sub_23565F804(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v4 = (int *)type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_defaultDeviceWithMediaType_, *MEMORY[0x263EF9D48]);
  if (v11)
  {
    uint64_t v12 = v11;
    if (objc_msgSend(v11, sel_torchMode) == (id)1 && a1 == 0)
    {
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v29 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v30 = (void *)sub_235949A88();
      uint64_t v31 = (void *)sub_235949A88();
      id v32 = objc_msgSend(v29, sel_localizedStringForKey_value_table_, v30, 0, v31);

      uint64_t v33 = (void *)sub_235949AC8();
      uint64_t v35 = v34;

      id v63 = v33;
      uint64_t v64 = v35;
      sub_2356610AC();
      uint64_t v36 = sub_23594A638();
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      id v39 = sub_23587FE44();
      id v40 = sub_23587FFB0();
      sub_23587CB9C(v36, v38, v39, v40);
      swift_bridgeObjectRelease();

      if (sub_23565F694())
      {
        v10[v4[5]] = 5;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        sub_235947968();
        v10[v4[6]] = 0;
        v10[v4[7]] = 0;
        sub_235741600((uint64_t)v10);
        sub_235661164((uint64_t)v10, type metadata accessor for MAGOutputEvent);
      }
    }
    else
    {
      if (objc_msgSend(v12, sel_torchMode)) {
        BOOL v14 = 0;
      }
      else {
        BOOL v14 = a1 == 1;
      }
      if (v14)
      {
        type metadata accessor for MAGUtilities();
        uint64_t v15 = swift_getObjCClassFromMetadata();
        id v16 = objc_msgSend(self, sel_bundleForClass_, v15);
        uint64_t v17 = (void *)sub_235949A88();
        uint64_t v18 = (void *)sub_235949A88();
        id v19 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v17, 0, v18);

        uint64_t v20 = (void *)sub_235949AC8();
        uint64_t v22 = v21;

        id v63 = v20;
        uint64_t v64 = v22;
        sub_2356610AC();
        uint64_t v23 = sub_23594A638();
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        id v26 = sub_23587FE44();
        id v27 = sub_23587FFB0();
        sub_23587CB9C(v23, v25, v26, v27);
        swift_bridgeObjectRelease();
      }
    }
    id v63 = 0;
    if (!objc_msgSend(v12, sel_lockForConfiguration_, &v63))
    {
      id v50 = v63;
      uint64_t v51 = (void *)sub_235947678();

      swift_willThrow();
      return;
    }
    id v41 = v63;
    if (objc_msgSend(v12, sel_isTorchModeSupported_, a1))
    {
      objc_msgSend(v12, sel_setTorchMode_, a1);
      id v42 = objc_msgSend(v12, sel_torchMode);
      *(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_globalTorchMode) = v42;
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      if (a1 == 1) {
        float v43 = 1.0;
      }
      else {
        float v43 = 0.0;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      *(float *)&id v63 = v43;
      sub_2359470F8();
      sub_2359484E8();
    }
    objc_msgSend(v12, sel_unlockForConfiguration);
    uint64_t v44 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem;
    id v45 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem);
    if (!v45) {
      goto LABEL_35;
    }
    type metadata accessor for MAGUtilities();
    uint64_t v46 = swift_getObjCClassFromMetadata();
    uint64_t v47 = self;
    id v48 = v45;
    id v49 = objc_msgSend(v47, sel_bundleForClass_, v46);
    uint64_t v52 = (void *)sub_235949A88();
    uint64_t v53 = (void *)sub_235949A88();
    id v54 = objc_msgSend(v49, sel_localizedStringForKey_value_table_, v52, 0, v53);

    sub_235949AC8();
    uint64_t v55 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    objc_msgSend(v48, sel_setAccessibilityValue_, v55);

    uint64_t v56 = *(void **)(v2 + v44);
    if (!v56) {
      goto LABEL_35;
    }
    id v57 = v56;
    if (a1 == 1)
    {
      char v58 = (void *)sub_235949A88();
      id v59 = objc_msgSend(self, sel_systemImageNamed_, v58);

      if (v59)
      {
        if (qword_26AF14120 == -1) {
          goto LABEL_32;
        }
        goto LABEL_37;
      }
    }
    else
    {
      unint64_t v60 = (void *)sub_235949A88();
      id v59 = objc_msgSend(self, sel_systemImageNamed_, v60);

      if (v59)
      {
        if (qword_26AF14120 == -1)
        {
LABEL_32:
          id v61 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 4, -1, *(double *)&qword_26AF18240);
          id v62 = objc_msgSend(v59, sel_imageByApplyingSymbolConfiguration_, v61);

LABEL_34:
          objc_msgSend(v57, sel_setImage_, v62);

LABEL_35:
          return;
        }
LABEL_37:
        swift_once();
        goto LABEL_32;
      }
    }
    id v62 = 0;
    goto LABEL_34;
  }
}

void sub_23566003C()
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  id v1 = objc_msgSend(self, sel_defaultDeviceWithMediaType_, *MEMORY[0x263EF9D48]);
  if (v1)
  {
    uint64_t v2 = v1;
    v8[0] = 0;
    if (objc_msgSend(v1, sel_lockForConfiguration_, v8))
    {
      uint64_t v3 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_globalTorchMode;
      uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_globalTorchMode);
      id v5 = v8[0];
      if (objc_msgSend(v2, sel_isTorchModeSupported_, v4)) {
        objc_msgSend(v2, sel_setTorchMode_, *(void *)(v0 + v3));
      }
      objc_msgSend(v2, sel_unlockForConfiguration);
    }
    else
    {
      id v6 = v8[0];
      uint64_t v7 = (void *)sub_235947678();

      swift_willThrow();
    }
  }
}

void sub_235660170(char a1)
{
  uint64_t v2 = v1;
  uint64_t v81 = *MEMORY[0x263EF8340];
  uint64_t v4 = (int *)type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_defaultDeviceWithMediaType_, *MEMORY[0x263EF9D48]);
  if (v11)
  {
    uint64_t v12 = v11;
    id v79 = 0;
    if (!objc_msgSend(v11, sel_lockForConfiguration_, &v79))
    {
      id v33 = v79;
      uint64_t v34 = (void *)sub_235947678();

      swift_willThrow();
      return;
    }
    id v13 = v79;
    BOOL v14 = &off_264C61000;
    id v15 = objc_msgSend(v12, sel_torchMode);
    if (v15 == (id)1)
    {
      if (objc_msgSend(v12, sel_isTorchModeSupported_, 0)) {
        objc_msgSend(v12, sel_setTorchMode_, 0);
      }
      if ((a1 & 1) == 0) {
        *(unsigned char *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_toggledDetectionModeFlashlightOff) = 1;
      }
      uint64_t v35 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem;
      uint64_t v36 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem);
      if (v36)
      {
        type metadata accessor for MAGUtilities();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        uint64_t v38 = self;
        id v39 = v36;
        id v40 = objc_msgSend(v38, sel_bundleForClass_, ObjCClassFromMetadata);
        id v41 = (void *)sub_235949A88();
        id v42 = (void *)sub_235949A88();
        id v43 = objc_msgSend(v40, sel_localizedStringForKey_value_table_, v41, 0, v42);

        sub_235949AC8();
        uint64_t v44 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v39, sel_setAccessibilityValue_, v44);

        id v45 = *(void **)(v2 + v35);
        if (v45)
        {
          id v46 = v45;
          uint64_t v47 = (void *)sub_235949A88();
          id v48 = objc_msgSend(self, sel_systemImageNamed_, v47);

          if (v48)
          {
            if (qword_26AF14120 != -1) {
              swift_once();
            }
            id v49 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 4, -1, *(double *)&qword_26AF18240);
            id v50 = objc_msgSend(v48, sel_imageByApplyingSymbolConfiguration_, v49);
          }
          else
          {
            id v50 = 0;
          }
          objc_msgSend(v46, sel_setImage_, v50);
        }
      }
      type metadata accessor for MAGUtilities();
      uint64_t v65 = swift_getObjCClassFromMetadata();
      id v66 = objc_msgSend(self, sel_bundleForClass_, v65);
      id v67 = (void *)sub_235949A88();
      uint64_t v68 = (void *)sub_235949A88();
      id v69 = objc_msgSend(v66, sel_localizedStringForKey_value_table_, v67, 0, v68);

      uint64_t v70 = (void *)sub_235949AC8();
      uint64_t v72 = v71;

      id v79 = v70;
      uint64_t v80 = v72;
      sub_2356610AC();
      uint64_t v73 = sub_23594A638();
      uint64_t v75 = v74;
      swift_bridgeObjectRelease();
      id v76 = sub_23587FE44();
      id v77 = sub_23587FFB0();
      sub_23587CB9C(v73, v75, v76, v77);
      swift_bridgeObjectRelease();

      if ((sub_23565F694() & 1) != 0 && !UIAccessibilityIsVoiceOverRunning())
      {
        v10[v4[5]] = 7;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        sub_235947968();
        v10[v4[6]] = 0;
        v10[v4[7]] = 0;
        sub_235741600((uint64_t)v10);
        sub_235661164((uint64_t)v10, type metadata accessor for MAGOutputEvent);
      }
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359484D8();
      swift_release();
      swift_release();
      if (v79 == 1) {
        *(unsigned char *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointSpeakToggledDetectionModeFlashlightOn) = 0;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359484D8();
      swift_release();
      swift_release();
      BOOL v14 = &off_264C61000;
      if (v79 != 1) {
        goto LABEL_47;
      }
      char v64 = 0;
    }
    else
    {
      if (v15) {
        goto LABEL_47;
      }
      if (objc_msgSend(v12, sel_isTorchModeSupported_, 1)) {
        objc_msgSend(v12, sel_setTorchMode_, 1);
      }
      *(unsigned char *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_toggledDetectionModeFlashlightOff) = 0;
      uint64_t v16 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem;
      uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem);
      uint64_t v18 = &off_264C61000;
      if (v17)
      {
        type metadata accessor for MAGUtilities();
        uint64_t v19 = swift_getObjCClassFromMetadata();
        uint64_t v20 = self;
        id v21 = v17;
        id v22 = objc_msgSend(v20, sel_bundleForClass_, v19);
        uint64_t v23 = (void *)sub_235949A88();
        uint64_t v24 = (void *)sub_235949A88();
        id v25 = objc_msgSend(v22, sel_localizedStringForKey_value_table_, v23, 0, v24);

        sub_235949AC8();
        id v26 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v21, sel_setAccessibilityValue_, v26);

        uint64_t v18 = &off_264C61000;
        id v27 = *(void **)(v2 + v16);
        if (v27)
        {
          id v28 = v27;
          id v29 = (void *)sub_235949A88();
          id v30 = objc_msgSend(self, sel_systemImageNamed_, v29);

          if (v30)
          {
            if (qword_26AF14120 != -1) {
              swift_once();
            }
            id v31 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 4, -1, *(double *)&qword_26AF18240);
            id v32 = objc_msgSend(v30, sel_imageByApplyingSymbolConfiguration_, v31);
          }
          else
          {
            id v32 = 0;
          }
          objc_msgSend(v28, sel_setImage_, v32);

          uint64_t v18 = &off_264C61000;
        }
      }
      type metadata accessor for MAGUtilities();
      uint64_t v51 = swift_getObjCClassFromMetadata();
      id v52 = objc_msgSend(self, (SEL)v18[40], v51);
      uint64_t v53 = (void *)sub_235949A88();
      id v54 = (void *)sub_235949A88();
      id v55 = objc_msgSend(v52, sel_localizedStringForKey_value_table_, v53, 0, v54);

      uint64_t v56 = (void *)sub_235949AC8();
      uint64_t v58 = v57;

      id v79 = v56;
      uint64_t v80 = v58;
      sub_2356610AC();
      uint64_t v59 = sub_23594A638();
      uint64_t v61 = v60;
      swift_bridgeObjectRelease();
      id v62 = sub_23587FE44();
      id v63 = sub_23587FFB0();
      sub_23587CB9C(v59, v61, v62, v63);
      swift_bridgeObjectRelease();

      if ((sub_23565F694() & 1) != 0 && !UIAccessibilityIsVoiceOverRunning())
      {
        v10[v4[5]] = 6;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        sub_235947968();
        v10[v4[6]] = 0;
        v10[v4[7]] = 0;
        sub_235741600((uint64_t)v10);
        sub_235661164((uint64_t)v10, type metadata accessor for MAGOutputEvent);
      }
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359484D8();
      swift_release();
      swift_release();
      if (v79 == 1) {
        *(unsigned char *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointSpeakToggledDetectionModeFlashlightOn) = 1;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359484D8();
      swift_release();
      swift_release();
      BOOL v14 = &off_264C61000;
      if ((v79 & 1) == 0) {
        goto LABEL_47;
      }
      char v64 = 1;
    }
    *(unsigned char *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_textDetectionToggledDetectionModeFlashlightOn) = v64;
LABEL_47:
    id v78 = [v12 (SEL)v14[439]];
    *(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_globalTorchMode) = v78;
    objc_msgSend(v12, sel_unlockForConfiguration);
  }
}

uint64_t sub_235660DB4(uint64_t a1)
{
  sub_23565F804(1);
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  if (v4 == 1) {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointSpeakToggledDetectionModeFlashlightOn) = 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  uint64_t result = swift_release();
  if (v3 == 1) {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_textDetectionToggledDetectionModeFlashlightOn) = 1;
  }
  return result;
}

uint64_t sub_235660EF8()
{
  return swift_deallocObject();
}

uint64_t sub_235660F30()
{
  return sub_235660DB4(*(void *)(v0 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_235660F50(uint64_t a1)
{
  sub_23565F804(0);
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  if (v4 == 1) {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointSpeakToggledDetectionModeFlashlightOn) = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  uint64_t result = swift_release();
  if (v3 == 1) {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_textDetectionToggledDetectionModeFlashlightOn) = 0;
  }
  return result;
}

uint64_t sub_23566108C()
{
  return sub_235660F50(*(void *)(v0 + 16));
}

unint64_t sub_2356610AC()
{
  unint64_t result = qword_26AF15010;
  if (!qword_26AF15010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF15010);
  }
  return result;
}

uint64_t sub_235661100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MAGOutputEngine.Event(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_235661164(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2356611C8()
{
  sub_23565D674(*(void *)(v0 + 16));
}

uint64_t objectdestroy_23Tm()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_235661218()
{
  sub_23565F4C4(v0[2], v0[3], v0[4]);
}

uint64_t sub_235661224@<X0>(uint64_t *a1@<X8>)
{
  return sub_23571FFC0(*(void **)(v1 + 16), a1);
}

uint64_t sub_235661240()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_235661288()
{
  sub_2358A277C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_235661294()
{
  return swift_deallocObject();
}

id sub_2356612D4()
{
  return sub_2358A2824(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2356612DC@<X0>(unsigned char *a1@<X8>)
{
  return sub_235659478(a1);
}

uint64_t type metadata accessor for MFPageViewController()
{
  return self;
}

void sub_2356614A8()
{
  uint64_t v2 = v0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath];
  swift_beginAccess();
  uint64_t v4 = sub_235947B38();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    uint64_t v5 = sub_235947B08();
    swift_endAccess();
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (v21 != 1) {
      goto LABEL_11;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v2, sel_parentViewController);
    if (!v6) {
      return;
    }
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_navigationItem);

    type metadata accessor for MAGUtilities();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    id v11 = (void *)sub_235949A88();
    uint64_t v12 = (void *)sub_235949A88();
    id v13 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, 0, v12);

    sub_235949AC8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15720);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_2359527E0;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v12 = (void *)v14;
      id v13 = (id)MEMORY[0x263F8D6C8];
      uint64_t v1 = MEMORY[0x263F8D750];
      *(void *)(v14 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v14 + 64) = v1;
      *(void *)(v14 + 32) = v5 + 1;
      id v15 = &v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
      swift_beginAccess();
      unint64_t v16 = *(void *)v15;
      if (!(v16 >> 62))
      {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
        v12[12] = v13;
        v12[13] = v1;
        v12[9] = v17;
        sub_235949B08();
        swift_bridgeObjectRelease();
        id v18 = (id)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_setTitle_, v18);

        goto LABEL_13;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_23594A998();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_endAccess();
LABEL_11:
  id v19 = objc_msgSend(v2, sel_parentViewController);
  if (!v19) {
    return;
  }
  uint64_t v20 = v19;
  id v18 = objc_msgSend(v19, sel_navigationItem);

  objc_msgSend(v18, sel_setTitle_, 0);
LABEL_13:
}

id sub_2356618F8()
{
  uint64_t v1 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880F1B8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23594FD70;
    uint64_t v5 = (void *)*MEMORY[0x263F838E0];
    *(void *)(inited + 32) = *MEMORY[0x263F838E0];
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageSpacing);
    *(void *)(inited + 64) = MEMORY[0x263F8EF38];
    *(void *)(inited + 40) = v6;
    id v7 = v5;
    sub_23566DBD0(inited);
    id v8 = objc_allocWithZone((Class)type metadata accessor for MFPageViewController());
    type metadata accessor for OptionsKey(0);
    sub_235669ED4(&qword_26880EE10, type metadata accessor for OptionsKey);
    uint64_t v9 = (void *)sub_235949968();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v8, sel_initWithTransitionStyle_navigationOrientation_options_, 1, 0, v9);

    id v11 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v10;
    id v3 = v10;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

char *sub_235661A64()
{
  uint64_t v1 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs;
  if (*(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs))
  {
    uint64_t v2 = *(char **)(v0
                  + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs);
  }
  else
  {
    uint64_t v3 = v0;
    if (qword_26880E608 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_2356F60A0();
    *(void *)(v3 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_235661B04()
{
  id v0 = sub_2356618F8();
  id v1 = objc_msgSend(v0, sel_viewControllers);

  if (!v1) {
    return;
  }
  sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
  unint64_t v2 = sub_235949D78();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x237DE87D0](0, v2);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  type metadata accessor for FreezeFramePageContentViewController();
  if (!swift_dynamicCastClass()) {
}
  }

void sub_235661C1C()
{
  id v1 = v0;
  unint64_t v2 = self;
  uint64_t v3 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlConstraints;
  sub_2356594B0(0, (unint64_t *)&qword_26AF152B0);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_235949D58();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  if (!MEMORY[0x237DEA060](&v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlPositionDelegate])) {
    return;
  }
  sub_2358A3770();
  double v6 = v5;
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2359527F0;
  uint64_t v8 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
  id v9 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl], sel_bottomAnchor);
  id v10 = objc_msgSend(v1, sel_view);
  if (!v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v11 = v10;
  id v12 = objc_msgSend(v10, sel_bottomAnchor);

  id v13 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v12, v6);
  *(void *)(v7 + 32) = v13;
  id v14 = objc_msgSend(*(id *)&v1[v8], sel_centerXAnchor);
  id v15 = sub_2356618F8();
  id v16 = objc_msgSend(v15, sel_view);

  if (!v16)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v17 = objc_msgSend(v16, sel_centerXAnchor);

  id v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v17, 0.0);
  *(void *)(v7 + 40) = v18;
  sub_235949D98();
  *(void *)&v1[v3] = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v19 = (id)sub_235949D58();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v19);
}

id sub_235661FB4()
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_freezeFrameDisplayAppearanceSubscription] = 0;
  unint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_23594A998()) {
    unint64_t v4 = sub_235676A54(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v4 = MEMORY[0x263F8EE88];
  }
  *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_cancellables] = v4;
  *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages] = v3;
  double v5 = &v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath];
  MEMORY[0x237DE5A90](0, 0);
  uint64_t v6 = sub_235947B38();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  uint64_t v7 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageSpacing;
  if (qword_26880E508 != -1) {
    swift_once();
  }
  *(void *)&v2[v7] = qword_26882BF30;
  *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController] = 0;
  *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs] = 0;
  *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlPositionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
  *(void *)&v2[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829F0]), sel_init);
  *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlConstraints] = v3;
  *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_textOverlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___textReaderModeButtonItem] = 0;

  v10.receiver = v2;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

void sub_2356621E0()
{
  id v1 = self;
  id v2 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v60.origin.CGFloat x = v4;
  v60.origin.y = v6;
  v60.size.CGFloat width = v8;
  v60.size.CGFloat height = v10;
  CGFloat v11 = CGRectGetMaxY(v60) + -50.0;
  id v12 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v12, sel_bounds);
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;

  v61.origin.CGFloat x = v14;
  v61.origin.y = v16;
  v61.size.CGFloat width = v18;
  v61.size.CGFloat height = v20;
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829F0]), sel_initWithFrame_, 0.0, v11, CGRectGetWidth(v61), 50.0);
  uint64_t v22 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
  uint64_t v23 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl];
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl] = v21;

  uint64_t v24 = *(void **)&v0[v22];
  id v25 = &v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  if (*(void *)v25 >> 62)
  {
    id v52 = v24;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_23594A998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((*(void *)v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v27 = v24;
  }
  objc_msgSend(v24, sel_setNumberOfPages_, v26);

  objc_msgSend(*(id *)&v0[v22], sel_setCurrentPage_, 0);
  objc_msgSend(*(id *)&v0[v22], sel_setAlpha_, 0.5);
  id v28 = *(void **)&v0[v22];
  id v29 = self;
  id v30 = v28;
  id v31 = objc_msgSend(v29, sel_blackColor);
  objc_msgSend(v30, sel_setTintColor_, v31);

  id v32 = *(id *)&v0[v22];
  id v33 = objc_msgSend(v29, sel_whiteColor);
  objc_msgSend(v32, sel_setPageIndicatorTintColor_, v33);

  id v34 = *(id *)&v0[v22];
  id v35 = objc_msgSend(v29, sel_blackColor);
  objc_msgSend(v34, sel_setCurrentPageIndicatorTintColor_, v35);

  objc_msgSend(*(id *)&v0[v22], sel_addTarget_action_forControlEvents_, v0, sel_didTapPageControl_, 4096);
  objc_msgSend(*(id *)&v0[v22], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(*(id *)&v0[v22], sel_setBackgroundStyle_, 1);
  id v36 = objc_msgSend(v0, sel_view);
  if (v36)
  {
    uint64_t v37 = v36;
    objc_msgSend(v36, sel_addSubview_, *(void *)&v0[v22]);

    uint64_t v38 = *(void **)&v0[v22];
    unint64_t v39 = *(void *)v25;
    if (v39 >> 62)
    {
      id v53 = v38;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_23594A998();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v41 = v38;
    }
    double v42 = 0.0;
    if (v40 > 1) {
      double v42 = 1.0;
    }
    objc_msgSend(v38, sel_setAlpha_, v42);

    id v43 = *(void **)&v0[v22];
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v0;
    uint64_t v58 = sub_23566A640;
    uint64_t v59 = v44;
    aBlocuint64_t k = MEMORY[0x263EF8330];
    uint64_t v55 = 1107296256;
    uint64_t v56 = sub_2357A194C;
    uint64_t v57 = &block_descriptor_93;
    id v45 = _Block_copy(&aBlock);
    id v46 = v43;
    uint64_t v47 = v0;
    swift_release();
    objc_msgSend(v46, sel__setAccessibilityIncrementBlock_, v45);
    _Block_release(v45);

    id v48 = *(void **)&v0[v22];
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = v47;
    uint64_t v58 = sub_23566A648;
    uint64_t v59 = v49;
    aBlocuint64_t k = MEMORY[0x263EF8330];
    uint64_t v55 = 1107296256;
    uint64_t v56 = sub_2357A194C;
    uint64_t v57 = &block_descriptor_99;
    id v50 = _Block_copy(&aBlock);
    v47;
    id v51 = v48;
    swift_release();
    objc_msgSend(v51, sel__setAccessibilityDecrementBlock_, v50);
    _Block_release(v50);

    sub_235661C1C();
  }
  else
  {
    __break(1u);
  }
}

void sub_235662708(uint64_t *a1)
{
  double v3 = (void *)sub_235947B38();
  uint64_t v4 = *(v3 - 1);
  MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  unint64_t v10 = (unint64_t)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_2356618F8();
  id v12 = objc_msgSend(v11, sel_viewControllers);

  if (!v12) {
    goto LABEL_14;
  }
  sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
  unint64_t v13 = sub_235949D78();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_13;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0) {
    goto LABEL_41;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  for (id i = *(id *)(v13 + 32); ; id i = (id)MEMORY[0x237DE87D0](0, v13))
  {
    double v15 = i;
    swift_bridgeObjectRelease();
    type metadata accessor for FreezeFramePageContentViewController();
    uint64_t v16 = swift_dynamicCastClass();
    if (v16)
    {
      uint64_t v17 = v16;
      CGFloat v18 = (unint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
      swift_beginAccess();
      unint64_t v19 = *v18;
      swift_bridgeObjectRetain();
      sub_23583BF70(v17, v19);
      uint64_t v21 = v20;
      uint64_t v1 = v22;

      swift_bridgeObjectRelease();
      uint64_t v23 = (v1 & 1) != 0 ? 0 : v21;
    }
    else
    {

LABEL_14:
      uint64_t v23 = 0;
    }
    if (__OFADD__(v23, 1))
    {
      __break(1u);
    }
    else
    {
      MEMORY[0x237DE5A90](v23 + 1, 0);
      sub_235662BF4(v10);
      id v25 = *(void (**)(unint64_t, void *))(v4 + 8);
      v4 += 8;
      v25(v10, v3);
      uint64_t v1 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
      double v3 = objc_retain(*(id *)((char *)a1
                             + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl));
      unint64_t v10 = (unint64_t)sub_2356618F8();
      unint64_t v13 = (unint64_t)objc_msgSend((id)v10, sel_viewControllers);

      if (!v13) {
        goto LABEL_30;
      }
      sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
      unint64_t v10 = sub_235949D78();

      if (!(v10 >> 62))
      {
        unint64_t v13 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v13) {
          goto LABEL_29;
        }
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (!v13)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
LABEL_19:
    if ((v10 & 0xC000000000000001) == 0) {
      break;
    }
LABEL_43:
    uint64_t v26 = (id *)MEMORY[0x237DE87D0](0, v10);
LABEL_22:
    unint64_t v13 = (unint64_t)v26;
    swift_bridgeObjectRelease();
    type metadata accessor for FreezeFramePageContentViewController();
    uint64_t v27 = swift_dynamicCastClass();
    if (!v27)
    {

LABEL_30:
      unint64_t v34 = 0;
      goto LABEL_31;
    }
    uint64_t v28 = v27;
    id v29 = (unint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    unint64_t v30 = *v29;
    swift_bridgeObjectRetain();
    sub_23583BF70(v28, v30);
    unint64_t v10 = v31;
    char v33 = v32;

    swift_bridgeObjectRelease();
    if (v33) {
      unint64_t v34 = 0;
    }
    else {
      unint64_t v34 = v10;
    }
LABEL_31:
    if (__OFADD__(v34, 1))
    {
      __break(1u);
LABEL_38:
      id v36 = (id)MEMORY[0x237DE87D0](v13);
LABEL_36:
      id v37 = v36;
      swift_endAccess();
      *(void *)(v10 + 32) = v37;
      v39[7] = v10;
      sub_235949D98();
      sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
      uint64_t v38 = (void *)sub_235949D58();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setViewControllers_direction_animated_completion_, v38, 0, 1, 0);

      return;
    }
    objc_msgSend(v3, sel_setCurrentPage_, v34 + 1);

    double v3 = sub_2356618F8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
    unint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_235952800;
    unint64_t v13 = (unint64_t)objc_msgSend(*(id *)((char *)a1 + v1), sel_currentPage);
    a1 = (uint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    uint64_t v35 = *a1;
    if ((*a1 & 0xC000000000000001) != 0) {
      goto LABEL_38;
    }
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v36 = *(id *)(v35 + 8 * v13 + 32);
      goto LABEL_36;
    }
    __break(1u);
LABEL_41:
    ;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v26 = (id *)*(id *)(v10 + 32);
    goto LABEL_22;
  }
  __break(1u);
}

void sub_235662BF4(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_235947B38();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6, v7, v8, v9);
  uint64_t v59 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF12EB0);
  uint64_t v16 = MEMORY[0x270FA5388](v11 - 8, v12, v13, v14, v15);
  uint64_t v58 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v18, v19, v20, v21);
  uint64_t v57 = (char *)&v56 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F1C0);
  MEMORY[0x270FA5388](v23 - 8, v24, v25, v26, v27);
  id v29 = (char *)&v56 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = (uint64_t)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath];
  swift_beginAccess();
  uint64_t v31 = v5;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v30, 1, v4))
  {
    swift_endAccess();
    goto LABEL_11;
  }
  uint64_t v32 = sub_235947B08();
  swift_endAccess();
  char v33 = &v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  if (*(void *)v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v34 < 0)
    {
      __break(1u);
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((*(void *)v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v32 & 0x8000000000000000) == 0 && v32 < v34)
  {
    swift_beginAccess();
    uint64_t v35 = *(void *)v33;
    if ((*(void *)v33 & 0xC000000000000001) == 0)
    {
      if ((unint64_t)v32 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v36 = *(id *)(v35 + 8 * v32 + 32);
      goto LABEL_10;
    }
LABEL_27:
    id v36 = (id)MEMORY[0x237DE87D0](v32);
LABEL_10:
    id v37 = v36;
    swift_endAccess();
    sub_235850FEC();
    sub_2358512A8();
    sub_2358513F0();
  }
LABEL_11:
  uint64_t v38 = v31;
  unint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v39(v29, a1, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v4);
  swift_beginAccess();
  sub_23566A520((uint64_t)v29, v30);
  swift_endAccess();
  sub_2356614A8();
  sub_23566A3AC((uint64_t)v29, &qword_26880F1C0);
  uint64_t v40 = *((void *)sub_235661A64() + 2);
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_235947B08();
  if (v41 < 0 || v41 >= v40)
  {
    if (qword_26880E408 == -1) {
      goto LABEL_19;
    }
  }
  else
  {
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(qword_26AF181D8 + 16);
    sub_2359470F8();
    unint64_t v42 = sub_235947B08();
    id v43 = sub_235661A64();
    if ((v42 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v44 = v43;
      if (v42 < *((void *)v43 + 2))
      {
        uint64_t v45 = sub_2359477E8();
        uint64_t v46 = *(void *)(v45 - 8);
        uint64_t v47 = (uint64_t)v57;
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v57, &v44[((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v42], v45);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_23566A2E4(v47, v58, (uint64_t *)&unk_26AF12EB0);
        sub_2359470F8();
        sub_2359484E8();
        sub_23566A3AC(v47, (uint64_t *)&unk_26AF12EB0);
        swift_release();
        return;
      }
    }
    __break(1u);
  }
  swift_once();
LABEL_19:
  uint64_t v48 = sub_235948278();
  __swift_project_value_buffer(v48, (uint64_t)qword_26880F7A0);
  uint64_t v49 = v59;
  v39(v59, a1, v4);
  id v50 = v2;
  id v51 = sub_235948258();
  os_log_type_t v52 = sub_23594A148();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 134218240;
    uint64_t v54 = sub_235947B08();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v49, v4);
    uint64_t v60 = v54;
    sub_23594A608();
    *(_WORD *)(v53 + 12) = 2048;
    uint64_t v55 = *((void *)sub_235661A64() + 2);

    swift_bridgeObjectRelease();
    uint64_t v60 = v55;
    sub_23594A608();

    _os_log_impl(&dword_235640000, v51, v52, "Requested active page %ld exceeds asset count %ld", (uint8_t *)v53, 0x16u);
    MEMORY[0x237DE9F30](v53, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v38 + 8))(v49, v4);
  }
}

void sub_235663294(uint64_t *a1)
{
  double v3 = (void *)sub_235947B38();
  uint64_t v4 = *(v3 - 1);
  MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  unint64_t v10 = (unint64_t)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_2356618F8();
  id v12 = objc_msgSend(v11, sel_viewControllers);

  if (!v12) {
    goto LABEL_14;
  }
  sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
  unint64_t v13 = sub_235949D78();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_13;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0) {
    goto LABEL_41;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  for (id i = *(id *)(v13 + 32); ; id i = (id)MEMORY[0x237DE87D0](0, v13))
  {
    uint64_t v15 = i;
    swift_bridgeObjectRelease();
    type metadata accessor for FreezeFramePageContentViewController();
    uint64_t v16 = swift_dynamicCastClass();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = (unint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
      swift_beginAccess();
      unint64_t v19 = *v18;
      swift_bridgeObjectRetain();
      sub_23583BF70(v17, v19);
      uint64_t v21 = v20;
      uint64_t v1 = v22;

      swift_bridgeObjectRelease();
      uint64_t v23 = (v1 & 1) != 0 ? 0 : v21;
    }
    else
    {

LABEL_14:
      uint64_t v23 = 0;
    }
    if (__OFSUB__(v23, 1))
    {
      __break(1u);
    }
    else
    {
      MEMORY[0x237DE5A90](v23 - 1, 0);
      sub_235662BF4(v10);
      uint64_t v25 = *(void (**)(unint64_t, void *))(v4 + 8);
      v4 += 8;
      v25(v10, v3);
      uint64_t v1 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
      double v3 = objc_retain(*(id *)((char *)a1
                             + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl));
      unint64_t v10 = (unint64_t)sub_2356618F8();
      unint64_t v13 = (unint64_t)objc_msgSend((id)v10, sel_viewControllers);

      if (!v13) {
        goto LABEL_30;
      }
      sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
      unint64_t v10 = sub_235949D78();

      if (!(v10 >> 62))
      {
        unint64_t v13 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v13) {
          goto LABEL_29;
        }
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (!v13)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
LABEL_19:
    if ((v10 & 0xC000000000000001) == 0) {
      break;
    }
LABEL_43:
    uint64_t v26 = (id *)MEMORY[0x237DE87D0](0, v10);
LABEL_22:
    unint64_t v13 = (unint64_t)v26;
    swift_bridgeObjectRelease();
    type metadata accessor for FreezeFramePageContentViewController();
    uint64_t v27 = swift_dynamicCastClass();
    if (!v27)
    {

LABEL_30:
      unint64_t v34 = 0;
      goto LABEL_31;
    }
    uint64_t v28 = v27;
    id v29 = (unint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    unint64_t v30 = *v29;
    swift_bridgeObjectRetain();
    sub_23583BF70(v28, v30);
    unint64_t v10 = v31;
    char v33 = v32;

    swift_bridgeObjectRelease();
    if (v33) {
      unint64_t v34 = 0;
    }
    else {
      unint64_t v34 = v10;
    }
LABEL_31:
    if (__OFSUB__(v34, 1))
    {
      __break(1u);
LABEL_38:
      id v36 = (id)MEMORY[0x237DE87D0](v13);
LABEL_36:
      id v37 = v36;
      swift_endAccess();
      *(void *)(v10 + 32) = v37;
      v39[7] = v10;
      sub_235949D98();
      sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
      uint64_t v38 = (void *)sub_235949D58();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setViewControllers_direction_animated_completion_, v38, 0, 1, 0);

      return;
    }
    objc_msgSend(v3, sel_setCurrentPage_, v34 - 1);

    double v3 = sub_2356618F8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
    unint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_235952800;
    unint64_t v13 = (unint64_t)objc_msgSend(*(id *)((char *)a1 + v1), sel_currentPage);
    a1 = (uint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    uint64_t v35 = *a1;
    if ((*a1 & 0xC000000000000001) != 0) {
      goto LABEL_38;
    }
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v36 = *(id *)(v35 + 8 * v13 + 32);
      goto LABEL_36;
    }
    __break(1u);
LABEL_41:
    ;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v26 = (id *)*(id *)(v10 + 32);
    goto LABEL_22;
  }
  __break(1u);
}

void sub_235663780(uint64_t a1)
{
  sub_23566A650(a1, (uint64_t)v12);
  sub_2356594B0(0, &qword_26880F208);
  if (swift_dynamicCast())
  {
    unint64_t v2 = (unint64_t)objc_msgSend(v11, sel_currentPage);
    double v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    uint64_t v4 = *v3;
    if ((*v3 & 0xC000000000000001) == 0)
    {
      if ((v2 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v2 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v5 = *(id *)(v4 + 8 * v2 + 32);
LABEL_6:
        uint64_t v6 = v5;
        swift_endAccess();
        id v7 = sub_2356618F8();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_235952800;
        *(void *)(v8 + 32) = v6;
        v12[0] = v8;
        sub_235949D98();
        sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
        id v9 = v6;
        unint64_t v10 = (void *)sub_235949D58();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_setViewControllers_direction_animated_completion_, v10, 0, 1, 0);

        return;
      }
      __break(1u);
      return;
    }
    id v5 = (id)MEMORY[0x237DE87D0](v2);
    goto LABEL_6;
  }
}

void sub_23566398C()
{
  id v1 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v1, sel_bounds);
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, v3, v5, v7, v9);
  objc_msgSend(v11, sel_setAutoresizingMask_, 18);
  id v10 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v10);

  objc_msgSend(v11, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v0, sel_setView_, v11);
}

void sub_235663B00()
{
  id v1 = v0;
  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, sel_viewDidLoad);
  id v2 = sub_2356618F8();
  objc_msgSend(v2, sel_setDelegate_, v1);

  id v3 = sub_2356618F8();
  objc_msgSend(v3, sel_setDataSource_, v1);

  id v4 = sub_2356618F8();
  objc_msgSend(v1, sel_addChildViewController_, v4);

  id v5 = objc_msgSend(v1, sel_view);
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  double v6 = v5;
  id v7 = sub_2356618F8();
  id v8 = objc_msgSend(v7, sel_view);

  if (v8)
  {
    objc_msgSend(v6, sel_addSubview_, v8);

    id v9 = sub_2356618F8();
    objc_msgSend(v9, sel_didMoveToParentViewController_, v1);

    id v10 = &v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
    swift_beginAccess();
    unint64_t v11 = *(void *)v10;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      if (sub_23594A998())
      {
LABEL_5:
        if ((v11 & 0xC000000000000001) == 0)
        {
          if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v13 = *(id *)(v11 + 32);
LABEL_8:
            uint64_t v14 = v13;
            swift_bridgeObjectRelease();
            id v15 = sub_2356618F8();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
            uint64_t v16 = swift_allocObject();
            *(_OWORD *)(v16 + 16) = xmmword_235952800;
            *(void *)(v16 + 32) = v14;
            sub_235949D98();
            sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
            id v17 = v14;
            uint64_t v18 = (void *)sub_235949D58();
            swift_bridgeObjectRelease();
            objc_msgSend(v15, sel_setViewControllers_direction_animated_completion_, v18, 0, 1, 0);

            sub_2356621E0();
            return;
          }
          __break(1u);
          goto LABEL_13;
        }
LABEL_11:
        id v13 = (id)MEMORY[0x237DE87D0](0, v11);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v12) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_23594A968();
    __break(1u);
    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
}

id sub_235663E30(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  if (a1) {
    goto LABEL_12;
  }
  id v4 = &v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  uint64_t v5 = *(void *)v4;
  id v13 = v4;
  uint64_t v14 = ObjectType;
  if (!(*(void *)v4 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v6) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
LABEL_14:
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_23594A998();
  if (!v6)
  {
LABEL_11:
    swift_bridgeObjectRelease_n();
    *(void *)id v13 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    a1 = 0;
    ObjectType = v14;
LABEL_12:
    v15.receiver = v1;
    v15.super_class = ObjectType;
    return objc_msgSendSuper2(&v15, sel_willMoveToParentViewController_, a1);
  }
LABEL_4:
  uint64_t v7 = 4;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x237DE87D0](v7 - 4, v5);
    }
    else {
      id v8 = *(id *)(v5 + 8 * v7);
    }
    id v9 = v8;
    uint64_t v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_14;
    }
    objc_msgSend(v8, sel_willMoveToParentViewController_, 0);
    id result = objc_msgSend(v9, sel_view);
    if (!result) {
      break;
    }
    uint64_t v12 = result;
    objc_msgSend(result, sel_removeFromSuperview);

    objc_msgSend(v9, sel_removeFromParentViewController);
    ++v7;
    if (v10 == v6) {
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23566404C()
{
  uint64_t v68 = sub_2359496E8();
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68, v1, v2, v3, v4);
  uint64_t v65 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_23594A268();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  MEMORY[0x270FA5388](v6, v7, v8, v9, v10);
  id v67 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14E90);
  MEMORY[0x270FA5388](v60, v12, v13, v14, v15);
  uint64_t v59 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF14E40);
  MEMORY[0x270FA5388](v58, v17, v18, v19, v20);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14E08);
  uint64_t v26 = MEMORY[0x270FA5388](v21, v22, v23, v24, v25);
  MEMORY[0x270FA5388](v26, v27, v28, v29, v30);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14850);
  uint64_t v61 = *(void *)(v31 - 8);
  uint64_t v62 = v31;
  MEMORY[0x270FA5388](v31, v32, v33, v34, v35);
  id v37 = (char *)&v57 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF14C08);
  uint64_t v63 = *(void *)(v38 - 8);
  uint64_t v64 = v38;
  MEMORY[0x270FA5388](v38, v39, v40, v41, v42);
  uint64_t v44 = (char *)&v57 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v0;
  *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_cancellables) = MEMORY[0x263F8EE88];
  swift_bridgeObjectRelease();
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2359470F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14F10);
  sub_2359484A8();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_2359470F8();
  sub_2359484A8();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14F40);
  sub_2359484A8();
  swift_endAccess();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14F70);
  sub_2359484A8();
  swift_endAccess();
  sub_2356595F4(&qword_26AF14E00, &qword_26AF14E08);
  sub_2356595F4((unint64_t *)&unk_26AF14E30, (uint64_t *)&unk_26AF14E40);
  sub_2356595F4((unint64_t *)&unk_26AF14E80, &qword_26AF14E90);
  sub_2359483D8();
  uint64_t v45 = v67;
  sub_23594A258();
  sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
  uint64_t v47 = v65;
  uint64_t v46 = v66;
  uint64_t v48 = v68;
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v65, *MEMORY[0x263F8F068], v68);
  uint64_t v49 = (void *)sub_23594A2E8();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  uint64_t v72 = v49;
  sub_2356595F4((unint64_t *)&unk_26AF14840, &qword_26AF14850);
  sub_23566A590();
  uint64_t v50 = v62;
  sub_235948578();

  (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v70);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v50);
  uint64_t v51 = swift_allocObject();
  uint64_t v52 = v71;
  swift_unknownObjectWeakInit();
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = sub_23566A630;
  *(void *)(v53 + 24) = v51;
  sub_2356595F4(&qword_26AF14C00, (uint64_t *)&unk_26AF14C08);
  uint64_t v54 = v64;
  uint64_t v55 = sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v54);
  *(void *)(v52
            + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_freezeFrameDisplayAppearanceSubscription) = v55;
  return swift_release();
}

void sub_235664804(char a1, char a2, uint64_t a3, double a4, double a5)
{
  uint64_t v9 = a3 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x237DEA060](v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    double v12 = sub_2357F19E4(a5);
    if ((a2 & 1) == 0)
    {
      double v13 = v12;
      double v14 = -0.5;
      double v15 = a4 + -0.5;
      if (a4 + -0.5 > 0.5) {
        double v15 = 0.5;
      }
      if (v15 > -0.5) {
        double v14 = v15;
      }
      sub_235664D14(a1, v14, v13);
    }
  }
}

uint64_t sub_2356648A8(char a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_235947B38();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7, v8, v9, v10);
  double v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18.receiver = v2;
  v18.super_class = ObjectType;
  objc_msgSendSuper2(&v18, sel_viewWillAppear_, a1 & 1);
  if (qword_26880E408 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_235948278();
  __swift_project_value_buffer(v13, (uint64_t)qword_26880F7A0);
  double v14 = sub_235948258();
  os_log_type_t v15 = sub_23594A148();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_235640000, v14, v15, "viewWillAppear", v16, 2u);
    MEMORY[0x237DE9F30](v16, -1, -1);
  }

  MEMORY[0x237DE5A90](0, 0);
  sub_235662BF4((uint64_t)v12);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
}

uint64_t sub_235664D14(char a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_2359496D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  os_log_type_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_235949738();
  uint64_t v16 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v4[OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_brightness] = a2;
  *(double *)&v4[OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_contrast] = a3;
  v4[OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_colorFilter] = a1;
  sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
  uint64_t v23 = (void *)sub_23594A288();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v4;
  aBlock[4] = sub_23566A2DC;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2357A194C;
  aBlock[3] = &block_descriptor_69;
  uint64_t v25 = _Block_copy(aBlock);
  uint64_t v26 = v4;
  swift_release();
  sub_235949708();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_235669ED4((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_2356595F4((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
  sub_23594A6C8();
  MEMORY[0x237DE8250](0, v22, v15, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, v29);
}

uint64_t sub_23566502C(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if ((unint64_t)*v2 >> 62) {
    goto LABEL_32;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v4; uint64_t v4 = sub_23594A998())
  {
    uint64_t v5 = 0;
    uint64_t v36 = OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_contrast;
    uint64_t v37 = OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_brightness;
    unint64_t v39 = v3 & 0xC000000000000001;
    uint64_t v35 = OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_colorFilter;
    uint64_t v32 = v3 + 32;
    uint64_t v34 = v1;
    uint64_t v38 = v4;
    uint64_t v33 = v3;
    while (1)
    {
      uint64_t v7 = v39 ? (char *)MEMORY[0x237DE87D0](v5, v3) : (char *)*(id *)(v32 + 8 * v5);
      uint64_t v8 = v7;
      BOOL v9 = __OFADD__(v5, 1);
      uint64_t v10 = v5 + 1;
      if (v9) {
        break;
      }
      long long v49 = xmmword_235952810;
      double v11 = *(double *)(v1 + v37);
      if (vabdd_f64(0.0, v11) <= 0.01)
      {
        double v12 = 0.0;
        long long v51 = 0u;
        long long v52 = 0u;
      }
      else
      {
        *(void *)&long long v52 = &type metadata for DisplayFilter;
        *((void *)&v52 + 1) = &off_26E8C5B00;
        double v12 = v11;
        LOBYTE(v51) = 0;
      }
      double v50 = v12;
      double v13 = *(double *)(v1 + v36);
      if (vabdd_f64(1.0, v13) <= 0.01)
      {
        double v14 = 0.0;
        long long v54 = 0u;
        long long v55 = 0u;
      }
      else
      {
        *(void *)&long long v55 = &type metadata for DisplayFilter;
        *((void *)&v55 + 1) = &off_26E8C5B00;
        double v14 = v13;
        LOBYTE(v54) = 1;
      }
      double v53 = v14;
      int v15 = *(unsigned __int8 *)(v1 + v35);
      uint64_t v41 = v10;
      if (v15 == 12)
      {
        uint64_t v58 = 0;
        long long v56 = 0u;
        long long v57 = 0u;
      }
      else
      {
        *((void *)&v57 + 1) = &type metadata for ColorFilter;
        uint64_t v58 = &off_26E8C5A40;
        LOBYTE(v56) = v15;
      }
      uint64_t v16 = 32;
      uint64_t v17 = (void *)MEMORY[0x263F8EE78];
      do
      {
        sub_23566A2E4((uint64_t)&v48[v16], (uint64_t)v45, (uint64_t *)&unk_26AF13240);
        sub_23566A348((uint64_t)v45, (uint64_t)&v42, (uint64_t *)&unk_26AF13240);
        if (v43)
        {
          sub_23566A500(&v42, (uint64_t)v44);
          sub_23566A500(v44, (uint64_t)&v42);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v17 = sub_2356CD6FC(0, v17[2] + 1, 1, v17);
          }
          unint64_t v19 = v17[2];
          unint64_t v18 = v17[3];
          if (v19 >= v18 >> 1) {
            uint64_t v17 = sub_2356CD6FC((void *)(v18 > 1), v19 + 1, 1, v17);
          }
          v17[2] = v19 + 1;
          sub_23566A500(&v42, (uint64_t)&v17[5 * v19 + 4]);
        }
        else
        {
          sub_23566A3AC((uint64_t)&v42, (uint64_t *)&unk_26AF13240);
        }
        v16 += 40;
      }
      while (v16 != 152);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF13240);
      swift_arrayDestroy();
      uint64_t v20 = OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_filterSet;
      *(void *)&v8[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_filterSet] = v17;
      swift_bridgeObjectRelease();
      uint64_t v21 = v8;
      uint64_t v22 = *(void *)&v8[v20];
      uint64_t v40 = v21;
      uint64_t v23 = *(void **)&v21[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_imageView];
      swift_bridgeObjectRetain();
      id v24 = objc_msgSend(v23, sel_layer);
      unint64_t v25 = MEMORY[0x263F8EE78];
      *(void *)&v44[0] = MEMORY[0x263F8EE78];
      uint64_t v26 = *(void *)(v22 + 16);
      if (v26)
      {
        uint64_t v27 = v22 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_23566A408(v27, (uint64_t)v45);
          uint64_t v28 = v46;
          uint64_t v29 = v47;
          __swift_project_boxed_opaque_existential_1(v45, v46);
          unint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
          sub_235718EE4(v30);
          v27 += 40;
          --v26;
        }
        while (v26);
        swift_bridgeObjectRelease();
        unint64_t v25 = *(void *)&v44[0];
        uint64_t v3 = v33;
        uint64_t v1 = v34;
      }
      sub_23592CC04(v25);
      swift_bridgeObjectRelease();
      uint64_t v6 = (void *)sub_235949D58();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setFilters_, v6);

      swift_bridgeObjectRelease();
      uint64_t v5 = v41;
      if (v41 == v38) {
        return swift_bridgeObjectRelease_n();
      }
    }
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}

void sub_235665534()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23566A3AC(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath, &qword_26880F1C0);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController));
  swift_bridgeObjectRelease();
  sub_23566A2B4(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlPositionDelegate);

  swift_bridgeObjectRelease();
  sub_23566A2B4(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_textOverlayDelegate);
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___textReaderModeButtonItem);
}

uint64_t sub_2356656F0()
{
  return type metadata accessor for FreezeFramePageFlippingController();
}

uint64_t type metadata accessor for FreezeFramePageFlippingController()
{
  uint64_t result = qword_26880F1A0;
  if (!qword_26880F1A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_235665744()
{
  sub_235665824();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_235665824()
{
  if (!qword_26880F1B0)
  {
    sub_235947B38();
    unint64_t v0 = sub_23594A5E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26880F1B0);
    }
  }
}

uint64_t sub_23566587C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v4;
  *(double *)(v9 + 24) = a1;
  *(double *)(v9 + 32) = a2;
  *(double *)(v9 + 40) = a3;
  *(double *)(v9 + 48) = a4;
  id v10 = v4;
  if (sub_2357F1A44())
  {
    double v11 = self;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_235668F84;
    *(void *)(v12 + 24) = v9;
    v15[4] = sub_235669E84;
    v15[5] = v12;
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 1107296256;
    v15[2] = sub_23587DD04;
    v15[3] = &block_descriptor_2;
    double v13 = _Block_copy(v15);
    sub_2359470F8();
    swift_release();
    objc_msgSend(v11, sel_sbs_unlockDeviceIfNeededAndPerform_, v13);
    _Block_release(v13);

    return swift_release();
  }
  else
  {
    sub_235668704(v10, a1, a2, a3, a4);

    return swift_release();
  }
}

id sub_235665A30()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF12EB0);
  uint64_t v6 = MEMORY[0x270FA5388](v1 - 8, v2, v3, v4, v5);
  uint64_t v8 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9, v10, v11, v12);
  double v14 = (char *)&v108 - v13;
  uint64_t v15 = sub_2359477E8();
  uint64_t v116 = *(char **)(v15 - 8);
  uint64_t v117 = v15;
  uint64_t v20 = MEMORY[0x270FA5388](v15, v16, v17, v18, v19);
  uint64_t v115 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v22, v23, v24, v25);
  uint64_t v27 = (char *)&v108 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F1C0);
  MEMORY[0x270FA5388](v28 - 8, v29, v30, v31, v32);
  uint64_t v34 = (char *)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_235947B38();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35, v37, v38, v39, v40);
  unint64_t v42 = (unint64_t)&v108 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath;
  swift_beginAccess();
  uint64_t v44 = v43;
  uint64_t v45 = v35;
  uint64_t v46 = v36;
  sub_23566A2E4(v44, (uint64_t)v34, &qword_26880F1C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v45) != 1)
  {
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v42, v34, v45);
    uint64_t v47 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    unint64_t v48 = v42;
    if ((unint64_t)*v47 >> 62)
    {
      *(void *)&long long v112 = v36;
      uint64_t v46 = v45;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_23594A998();
      swift_bridgeObjectRelease();
      if ((v49 & 0x8000000000000000) == 0) {
        goto LABEL_37;
      }
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v49 = *(void *)((*v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v50 = sub_235947B08();
    if (v50 < 0)
    {
LABEL_38:
      (*(void (**)(unint64_t, uint64_t))(v46 + 8))(v48, v45);
      goto LABEL_39;
    }
    while (1)
    {
      if (v50 >= v49) {
        goto LABEL_38;
      }
      unint64_t v42 = sub_235947B08();
      swift_beginAccess();
      uint64_t v51 = *v47;
      BOOL v52 = (*v47 & 0xC000000000000001) == 0;
      uint64_t v113 = v45;
      long long v114 = v27;
      if (v52)
      {
        if ((v42 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        if (v42 >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_31;
        }
        id v53 = *(id *)(v51 + 8 * v42 + 32);
      }
      else
      {
LABEL_29:
        id v53 = (id)MEMORY[0x237DE87D0](v42);
      }
      long long v54 = v53;
      swift_endAccess();
      uint64_t v55 = (uint64_t)v54 + OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_asset;
      swift_beginAccess();
      sub_23566A2E4(v55, (uint64_t)v8, (uint64_t *)&unk_26AF12EB0);

      long long v56 = (void (**)(char *, char *, uint64_t))v116;
      uint64_t v57 = v117;
      unint64_t v42 = *((void *)v116 + 6);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v42)(v8, 1, v117) == 1)
      {
        if (qword_26AF13B78 == -1)
        {
LABEL_13:
          swift_getKeyPath();
          swift_getKeyPath();
          sub_2359470F8();
          sub_2359484D8();
          swift_release();
          swift_release();
          swift_release();
          sub_23566A3AC((uint64_t)v8, (uint64_t *)&unk_26AF12EB0);
          uint64_t v57 = v117;
          goto LABEL_15;
        }
LABEL_32:
        swift_once();
        goto LABEL_13;
      }
      v56[4](v14, v8, v57);
      ((void (*)(char *, void, uint64_t, uint64_t))v56[7])(v14, 0, 1, v57);
LABEL_15:
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v42)(v14, 1, v57) == 1)
      {
        (*(void (**)(unint64_t, uint64_t))(v46 + 8))(v48, v113);
        sub_23566A3AC((uint64_t)v14, (uint64_t *)&unk_26AF12EB0);
        goto LABEL_39;
      }
      uint64_t v27 = v116;
      (*((void (**)(char *, char *, uint64_t))v116 + 4))(v114, v14, v57);
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v59 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      unint64_t v60 = sub_235949A88();
      uint64_t v61 = (void *)sub_235949A88();
      id v62 = objc_msgSend(v59, sel_localizedStringForKey_value_table_, v60, 0, v61);

      double v14 = (char *)sub_235949AC8();
      uint64_t v49 = v63;

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15720);
      uint64_t v8 = (char *)swift_allocObject();
      long long v112 = xmmword_23594FD70;
      *((_OWORD *)v8 + 1) = xmmword_23594FD70;
      uint64_t v64 = sub_235947B08();
      if (__OFADD__(v64, 1))
      {
        __break(1u);
LABEL_34:
        uint64_t v70 = (char *)MEMORY[0x237DE87D0](v60);
LABEL_23:
        uint64_t v71 = v70;
        swift_endAccess();
        uint64_t v72 = &v71[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_asset];
        swift_beginAccess();
        uint64_t v73 = *(void **)&v72[*(int *)(type metadata accessor for Asset() + 20)];
        id v74 = v73;

        uint64_t v75 = v27;
        id v76 = (void (*)(char *, char *, uint64_t))*((void *)v27 + 2);
        id v77 = v115;
        uint64_t v78 = v117;
        v76(v115, v114, v117);
        id v79 = (objc_class *)type metadata accessor for MFSnapshotProvider();
        uint64_t v80 = (char *)objc_allocWithZone(v79);
        uint64_t v81 = (uint64_t *)&v80[OBJC_IVAR____TtC16MagnifierSupport18MFSnapshotProvider_title];
        uint64_t v82 = v109;
        uint64_t *v81 = v110;
        v81[1] = v82;
        v76(&v80[OBJC_IVAR____TtC16MagnifierSupport18MFSnapshotProvider_url], v77, v78);
        *(void *)&v80[OBJC_IVAR____TtC16MagnifierSupport18MFSnapshotProvider_image] = v73;
        id v83 = v74;
        uint64_t v84 = (void *)sub_235947758();
        v118.receiver = v80;
        v118.super_class = v79;
        id v85 = objc_msgSendSuper2(&v118, sel_initWithPlaceholderItem_, v84);

        char v86 = (void (*)(char *, uint64_t))*((void *)v75 + 1);
        uint64_t v116 = v75 + 8;
        v86(v77, v78);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15740);
        uint64_t v87 = swift_allocObject();
        *(_OWORD *)(v87 + 16) = v112;
        *(void *)(v87 + 56) = v79;
        *(void *)(v87 + 32) = v85;
        id v88 = objc_allocWithZone((Class)type metadata accessor for MFActivityViewController());
        id v89 = v85;
        uint64_t v90 = (void *)sub_235949D58();
        swift_bridgeObjectRelease();
        id v91 = objc_msgSend(v88, sel_initWithActivityItems_applicationActivities_, v90, 0);

        id v92 = objc_msgSend(self, sel_standardUserDefaults);
        id v93 = (void *)sub_235949A88();
        LODWORD(v75) = objc_msgSend(v92, sel_BOOLForKey_, v93);

        __swift_instantiateConcreteTypeFromMangledName(&qword_26880F1C8);
        uint64_t v94 = swift_allocObject();
        if (v75)
        {
          *(_OWORD *)(v94 + 16) = xmmword_2359527E0;
          char v95 = (void *)*MEMORY[0x263F6BD08];
          uint64_t v96 = (void *)*MEMORY[0x263F6BD50];
          *(void *)(v94 + 32) = *MEMORY[0x263F6BD08];
          *(void *)(v94 + 40) = v96;
          type metadata accessor for ActivityType(0);
          id v97 = v91;
          id v98 = v95;
          id v99 = v96;
        }
        else
        {
          *(_OWORD *)(v94 + 16) = v112;
          char v100 = (void *)*MEMORY[0x263F6BD08];
          *(void *)(v94 + 32) = *MEMORY[0x263F6BD08];
          type metadata accessor for ActivityType(0);
          id v97 = v91;
          id v101 = v100;
        }
        char v102 = (void *)sub_235949D58();
        swift_bridgeObjectRelease();
        objc_msgSend(v97, sel_setExcludedActivityTypes_, v102);

        v86(v114, v117);
        (*(void (**)(unint64_t, uint64_t))(v46 + 8))(v111, v113);
        return v97;
      }
      uint64_t v65 = MEMORY[0x263F8D750];
      *((void *)v8 + 7) = MEMORY[0x263F8D6C8];
      *((void *)v8 + 8) = v65;
      *((void *)v8 + 4) = v64 + 1;
      uint64_t v66 = sub_235949B08();
      uint64_t v68 = v67;
      swift_bridgeObjectRelease();
      unint64_t v60 = sub_235947B08();
      swift_beginAccess();
      uint64_t v69 = *v47;
      BOOL v52 = (*v47 & 0xC000000000000001) == 0;
      unint64_t v111 = v48;
      uint64_t v110 = v66;
      uint64_t v109 = v68;
      if (!v52) {
        goto LABEL_34;
      }
      if ((v60 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v60 < *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v70 = (char *)*(id *)(v69 + 8 * v60 + 32);
        goto LABEL_23;
      }
      __break(1u);
LABEL_37:
      uint64_t v45 = v46;
      uint64_t v46 = v112;
      uint64_t v50 = sub_235947B08();
      if (v50 < 0) {
        goto LABEL_38;
      }
    }
  }
  sub_23566A3AC((uint64_t)v34, &qword_26880F1C0);
LABEL_39:
  if (qword_26880E408 != -1) {
    swift_once();
  }
  uint64_t v103 = sub_235948278();
  __swift_project_value_buffer(v103, (uint64_t)qword_26880F7A0);
  __int16 v104 = sub_235948258();
  os_log_type_t v105 = sub_23594A148();
  if (os_log_type_enabled(v104, v105))
  {
    uint64_t v106 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v106 = 0;
    _os_log_impl(&dword_235640000, v104, v105, "Unable to share image", v106, 2u);
    MEMORY[0x237DE9F30](v106, -1, -1);
  }

  return 0;
}

uint64_t sub_235666544(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = qword_268813E08;
  if (qword_268813E08)
  {
    uint64_t v11 = sub_235949EA8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_235949E78();
    swift_retain_n();
    id v12 = v1;
    uint64_t v13 = sub_235949E68();
    double v14 = (void *)swift_allocObject();
    uint64_t v15 = MEMORY[0x263F8F500];
    v14[2] = v13;
    _OWORD v14[3] = v15;
    _OWORD v14[4] = v12;
    v14[5] = v10;
    sub_2356C0210((uint64_t)v9, (uint64_t)&unk_26880F1F8, (uint64_t)v14);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_23566A2E4(a1, (uint64_t)v25, &qword_26AF15750);
    sub_23566A2E4((uint64_t)v25, (uint64_t)v24, &qword_26AF15750);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v1;
    sub_23566A348((uint64_t)v25, v17 + 24, &qword_26AF15750);
    id v18 = v1;
    if (sub_2357F1A44())
    {
      uint64_t v19 = self;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_23566A148;
      *(void *)(v20 + 24) = v17;
      aBlock[4] = sub_23566A6FC;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23587DD04;
      aBlock[3] = &block_descriptor_52;
      uint64_t v21 = _Block_copy(aBlock);
      sub_2359470F8();
      swift_release();
      objc_msgSend(v19, sel_sbs_unlockDeviceIfNeededAndPerform_, v21);
      _Block_release(v21);
    }
    else
    {
      sub_2356676AC(v18, (uint64_t)v24);
    }

    swift_release();
    return sub_23566A3AC((uint64_t)v24, &qword_26AF15750);
  }
}

uint64_t sub_235666808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[44] = a4;
  v5[45] = a5;
  uint64_t v6 = sub_235948018();
  v5[46] = v6;
  v5[47] = *(void *)(v6 - 8);
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF12EB0);
  v5[51] = swift_task_alloc();
  uint64_t v7 = sub_2359477E8();
  v5[52] = v7;
  v5[53] = *(void *)(v7 - 8);
  v5[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F1C0);
  v5[55] = swift_task_alloc();
  uint64_t v8 = sub_235947B38();
  v5[56] = v8;
  v5[57] = *(void *)(v8 - 8);
  v5[58] = swift_task_alloc();
  sub_235949E78();
  v5[59] = sub_235949E68();
  uint64_t v10 = sub_235949E28();
  v5[60] = v10;
  v5[61] = v9;
  return MEMORY[0x270FA2498](sub_235666A30, v10, v9);
}

uint64_t sub_235666A30()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[55];
  uint64_t v4 = v0[44] + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath;
  swift_beginAccess();
  sub_23566A2E4(v4, v3, &qword_26880F1C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    uint64_t v8 = v0[44];
    (*(void (**)(void, void, void))(v0[57] + 32))(v0[58], v0[55], v0[56]);
    unint64_t v9 = sub_235947B08();
    uint64_t v10 = (uint64_t *)(v8 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    uint64_t v11 = swift_beginAccess();
    uint64_t v12 = *v10;
    if ((*v10 & 0xC000000000000001) == 0)
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v9 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v13 = *(id *)(v12 + 8 * v9 + 32);
LABEL_7:
        double v14 = v13;
        uint64_t v15 = v0[52];
        uint64_t v16 = v0[53];
        uint64_t v17 = v0[51];
        swift_endAccess();
        uint64_t v18 = (uint64_t)v14 + OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_asset;
        swift_beginAccess();
        sub_23566A2E4(v18, v17, (uint64_t *)&unk_26AF12EB0);

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) == 1)
        {
          uint64_t v19 = v0[51];
          (*(void (**)(void, void))(v0[57] + 8))(v0[58], v0[56]);
          swift_release();
          uint64_t v6 = (uint64_t *)&unk_26AF12EB0;
          uint64_t v7 = v19;
          goto LABEL_9;
        }
        (*(void (**)(void, void, void))(v0[53] + 32))(v0[54], v0[51], v0[52]);
        sub_235949AC8();
        id v22 = objc_allocWithZone(MEMORY[0x263F08D38]);
        uint64_t v23 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        id v24 = objc_msgSend(v22, sel_initWithActivityType_, v23);
        v0[62] = v24;

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15710);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2359527E0;
        v0[38] = 0xD000000000000017;
        v0[39] = 0x800000023596B310;
        uint64_t v26 = MEMORY[0x263F8D310];
        sub_23594A7B8();
        *(void *)(inited + 96) = v26;
        *(void *)(inited + 72) = 0xD000000000000011;
        *(void *)(inited + 80) = 0x800000023596B330;
        v0[36] = 0xD000000000000014;
        v0[37] = 0x800000023596B350;
        sub_23594A7B8();
        uint64_t v27 = sub_235947748();
        *(void *)(inited + 168) = v26;
        *(void *)(inited + 144) = v27;
        *(void *)(inited + 152) = v28;
        sub_23566DE48(inited);
        uint64_t v29 = (void *)sub_235949968();
        swift_bridgeObjectRelease();
        objc_msgSend(v24, sel_setUserInfo_, v29);

        uint64_t v30 = (void *)swift_task_alloc();
        v0[63] = v30;
        void *v30 = v0;
        v30[1] = sub_235666EA8;
        uint64_t v11 = (uint64_t)v24;
        return MEMORY[0x270EF5640](v11);
      }
      __break(1u);
      return MEMORY[0x270EF5640](v11);
    }
    id v13 = (id)MEMORY[0x237DE87D0](v9);
    goto LABEL_7;
  }
  uint64_t v5 = v0[55];
  swift_release();
  uint64_t v6 = &qword_26880F1C0;
  uint64_t v7 = v5;
LABEL_9:
  sub_23566A3AC(v7, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_235666EA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 512) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 488);
  uint64_t v4 = *(void *)(v2 + 480);
  if (v0) {
    uint64_t v5 = sub_2356670E4;
  }
  else {
    uint64_t v5 = sub_235666FE4;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_235666FE4()
{
  uint64_t v1 = (void *)v0[62];
  uint64_t v2 = v0[58];
  uint64_t v3 = v0[56];
  uint64_t v4 = v0[57];
  uint64_t v6 = v0[53];
  uint64_t v5 = v0[54];
  uint64_t v7 = v0[52];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_2356670E4()
{
  uint64_t v57 = v0;
  uint64_t v1 = (id *)(v0 + 320);
  uint64_t v2 = *(void **)(v0 + 512);
  uint64_t v3 = *(void **)(v0 + 496);
  swift_release();

  *(void *)(v0 + 320) = v2;
  id v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2688105C0);
  if (swift_dynamicCast())
  {
    uint64_t v5 = *(void *)(v0 + 400);
    uint64_t v7 = *(void *)(v0 + 376);
    uint64_t v6 = *(void *)(v0 + 384);
    uint64_t v8 = *(void *)(v0 + 368);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v6, v8);
    if (qword_26880E408 != -1) {
      swift_once();
    }
    uint64_t v9 = *(void *)(v0 + 392);
    uint64_t v10 = *(void *)(v0 + 400);
    uint64_t v12 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 376);
    uint64_t v13 = sub_235948278();
    __swift_project_value_buffer(v13, (uint64_t)qword_26880F7A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v10, v12);
    double v14 = sub_235948258();
    os_log_type_t v15 = sub_23594A158();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void *)(v0 + 456);
    uint64_t v53 = *(void *)(v0 + 448);
    uint64_t v54 = *(void *)(v0 + 464);
    uint64_t v18 = *(void *)(v0 + 424);
    uint64_t v49 = *(void *)(v0 + 416);
    uint64_t v51 = *(void *)(v0 + 432);
    uint64_t v19 = *(void *)(v0 + 392);
    uint64_t v48 = *(void *)(v0 + 400);
    uint64_t v20 = *(void *)(v0 + 368);
    uint64_t v21 = *(void *)(v0 + 376);
    if (v16)
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v56 = v47;
      os_log_type_t type = v15;
      *(_DWORD *)id v22 = 136315138;
      sub_235669ED4(&qword_26880F200, MEMORY[0x263F10570]);
      uint64_t v23 = sub_23594AC58();
      *(void *)(v0 + 344) = sub_235687708(v23, v24, &v56);
      sub_23594A608();
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v25(v19, v20);
      _os_log_impl(&dword_235640000, v14, type, "Unable to open app - ApplicationLaunchError - %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237DE9F30](v47, -1, -1);
      uint64_t v26 = v22;
      uint64_t v1 = (id *)(v0 + 320);
      MEMORY[0x237DE9F30](v26, -1, -1);
    }
    else
    {

      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v25(v19, v20);
    }
    v25(v48, v20);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v51, v49);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v54, v53);
  }
  else
  {

    if (qword_26880E408 != -1) {
      swift_once();
    }
    uint64_t v27 = *(void **)(v0 + 512);
    uint64_t v28 = sub_235948278();
    __swift_project_value_buffer(v28, (uint64_t)qword_26880F7A0);
    id v29 = v27;
    id v30 = v27;
    uint64_t v31 = sub_235948258();
    os_log_type_t v32 = sub_23594A158();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = *(void **)(v0 + 512);
    uint64_t v36 = *(void *)(v0 + 456);
    uint64_t v35 = *(void *)(v0 + 464);
    uint64_t v37 = *(void *)(v0 + 448);
    uint64_t v38 = *(void *)(v0 + 424);
    uint64_t v39 = *(void *)(v0 + 432);
    uint64_t v55 = *(void *)(v0 + 416);
    if (v33)
    {
      uint64_t v50 = *(void *)(v0 + 432);
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = v37;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v56 = v41;
      *(_DWORD *)uint64_t v40 = 136315138;
      swift_getErrorValue();
      uint64_t v42 = sub_23594AC58();
      *(void *)(v0 + 336) = sub_235687708(v42, v43, &v56);
      sub_23594A608();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_235640000, v31, v32, "Unable to open app - unknown error type - %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237DE9F30](v41, -1, -1);
      MEMORY[0x237DE9F30](v40, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v50, v55);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v52);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v55);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

void sub_2356676AC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2359496D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_235949738();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v14, v15, v16, v17);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(self, sel_isMainThread))
  {
    id v20 = sub_235665A30();
    if (v20)
    {
      uint64_t v21 = v20;
      objc_msgSend(v20, sel_setModalPresentationStyle_, 7);
      id v22 = objc_msgSend(v21, sel_popoverPresentationController);
      if (v22)
      {
        uint64_t v23 = v22;
        sub_23566A2E4(a2, (uint64_t)aBlock, &qword_26AF15750);
        if (v34)
        {
          sub_2356594B0(0, (unint64_t *)&unk_26AF153A0);
          if (swift_dynamicCast()) {
            unint64_t v24 = (void *)v37[0];
          }
          else {
            unint64_t v24 = 0;
          }
        }
        else
        {
          sub_23566A3AC((uint64_t)aBlock, &qword_26AF15750);
          unint64_t v24 = 0;
        }
        objc_msgSend(v23, sel_setSourceView_, v24);
      }
      id v29 = objc_msgSend(v21, sel_popoverPresentationController);
      if (v29)
      {
        id v30 = v29;
        objc_msgSend(v29, sel_setPermittedArrowDirections_, 3);
      }
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v21, 1, 0);
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v21, 1, 0);
    }
  }
  else
  {
    sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
    uint64_t v32 = sub_23594A288();
    sub_23566A2E4(a2, (uint64_t)v37, &qword_26AF15750);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a1;
    sub_23566A348((uint64_t)v37, v25 + 24, &qword_26AF15750);
    uint64_t v35 = sub_23566A2A8;
    uint64_t v36 = v25;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2357A194C;
    uint64_t v34 = &block_descriptor_63;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = a1;
    swift_release();
    sub_235949708();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_235669ED4((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
    sub_2356595F4((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
    sub_23594A6C8();
    uint64_t v28 = (void *)v32;
    MEMORY[0x237DE8250](0, v19, v11, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
}

void sub_235667B18(void *a1, uint64_t a2)
{
  id v4 = sub_235665A30();
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_setModalPresentationStyle_, 7);
    id v6 = objc_msgSend(v5, sel_popoverPresentationController);
    if (v6)
    {
      uint64_t v7 = v6;
      sub_23566A2E4(a2, (uint64_t)v12, &qword_26AF15750);
      if (v13)
      {
        sub_2356594B0(0, (unint64_t *)&unk_26AF153A0);
        if (swift_dynamicCast()) {
          uint64_t v8 = v11;
        }
        else {
          uint64_t v8 = 0;
        }
      }
      else
      {
        sub_23566A3AC((uint64_t)v12, &qword_26AF15750);
        uint64_t v8 = 0;
      }
      objc_msgSend(v7, sel_setSourceView_, v8);
    }
    id v9 = objc_msgSend(v5, sel_popoverPresentationController);
    if (v9)
    {
      uint64_t v10 = v9;
      objc_msgSend(v9, sel_setPermittedArrowDirections_, 3);
    }
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v5, 1, 0);
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v5, 1, 0);
  }
}

uint64_t sub_235667CA4()
{
  uint64_t v1 = sub_2359496D8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3, v4, v5, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_235949738();
  uint64_t v9 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
  uint64_t v16 = (void *)sub_23594A288();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v0;
  aBlock[4] = sub_235669F54;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2357A194C;
  void aBlock[3] = &block_descriptor_36;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v0;
  swift_release();
  sub_235949708();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_235669ED4((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_2356595F4((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
  sub_23594A6C8();
  MEMORY[0x237DE8250](0, v15, v8, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v22);
}

void sub_235667F84(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_2356618F8();
  id v10 = objc_msgSend(v9, sel_viewControllers);

  if (!v10) {
    goto LABEL_12;
  }
  sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
  unint64_t v11 = sub_235949D78();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_11;
  }
LABEL_4:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x237DE87D0](0, v11);
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v12 = *(id *)(v11 + 32);
  }
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  type metadata accessor for FreezeFramePageContentViewController();
  uint64_t v14 = swift_dynamicCastClass();
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_235949EA8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
    sub_235949E78();
    id v17 = v13;
    uint64_t v18 = sub_235949E68();
    id v19 = (void *)swift_allocObject();
    uint64_t v20 = MEMORY[0x263F8F500];
    v19[2] = v18;
    v19[3] = v20;
    v19[4] = v15;
    sub_2357A1990((uint64_t)v8, (uint64_t)&unk_26880F1E0, (uint64_t)v19);
    swift_release();

    return;
  }

LABEL_12:
  if (qword_26880E408 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_235948278();
  __swift_project_value_buffer(v22, (uint64_t)qword_26880F7A0);
  v29[0] = a1;
  uint64_t v23 = sub_235948258();
  os_log_type_t v24 = sub_23594A148();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 138412290;
    id v27 = sub_2356618F8();
    v29[1] = v27;
    sub_23594A608();
    *uint64_t v26 = v27;

    _os_log_impl(&dword_235640000, v23, v24, "Could not load view controllers of pageController: %@", v25, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880F1D0);
    swift_arrayDestroy();
    MEMORY[0x237DE9F30](v26, -1, -1);
    MEMORY[0x237DE9F30](v25, -1, -1);
  }
  else
  {

    id v28 = v29[0];
  }
}

uint64_t sub_23566832C()
{
  v0[2] = sub_235949E78();
  v0[3] = sub_235949E68();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2356683D8;
  return sub_235851540();
}

uint64_t sub_2356683D8()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_235949E28();
  if (v0) {
    uint64_t v4 = sub_235668598;
  }
  else {
    uint64_t v4 = sub_235668534;
  }
  return MEMORY[0x270FA2498](v4, v3, v2);
}

uint64_t sub_235668534()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_235668598()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_235668614(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_23594A6A8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v9);

  return sub_23566A3AC((uint64_t)v9, &qword_26AF15750);
}

void sub_235668704(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = sub_2359496D8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  id v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_235949738();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v20, v21, v22, v23);
  uint64_t v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(self, sel_isMainThread))
  {
    id v26 = sub_235665A30();
    if (v26)
    {
      id v39 = v26;
      objc_msgSend(v26, sel_setModalPresentationStyle_, 7);
      id v27 = objc_msgSend(v39, sel_popoverPresentationController);
      if (v27)
      {
        id v28 = v27;
        id v29 = objc_msgSend(a1, sel_view);
        objc_msgSend(v28, sel_setSourceView_, v29);
      }
      id v30 = objc_msgSend(v39, sel_popoverPresentationController);
      objc_msgSend(v30, sel_setSourceRect_, a2, a3, a4, a5);

      id v31 = objc_msgSend(v39, sel_popoverPresentationController);
      if (v31)
      {
        uint64_t v32 = v31;
        objc_msgSend(v31, sel_setPermittedArrowDirections_, 3);
      }
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v39, 1, 0);
      id v33 = v39;
    }
  }
  else
  {
    sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
    id v39 = (id)sub_23594A288();
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = a1;
    *(double *)(v34 + 24) = a2;
    *(double *)(v34 + 32) = a3;
    *(double *)(v34 + 40) = a4;
    *(double *)(v34 + 48) = a5;
    aBlock[4] = sub_235669EA4;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2357A194C;
    void aBlock[3] = &block_descriptor_30;
    uint64_t v35 = _Block_copy(aBlock);
    id v36 = a1;
    swift_release();
    sub_235949708();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_235669ED4((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
    sub_2356595F4((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
    sub_23594A6C8();
    id v37 = v39;
    MEMORY[0x237DE8250](0, v25, v17, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
  }
}

void sub_235668B60(void *a1, double a2, double a3, double a4, double a5)
{
  id v10 = sub_235665A30();
  if (v10)
  {
    id v17 = v10;
    objc_msgSend(v10, sel_setModalPresentationStyle_, 7);
    id v11 = objc_msgSend(v17, sel_popoverPresentationController);
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = objc_msgSend(a1, sel_view);
      objc_msgSend(v12, sel_setSourceView_, v13);
    }
    id v14 = objc_msgSend(v17, sel_popoverPresentationController);
    objc_msgSend(v14, sel_setSourceRect_, a2, a3, a4, a5);

    id v15 = objc_msgSend(v17, sel_popoverPresentationController);
    if (v15)
    {
      uint64_t v16 = v15;
      objc_msgSend(v15, sel_setPermittedArrowDirections_, 3);
    }
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v17, 1, 0);
  }
}

uint64_t sub_235668D80()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  return swift_release();
}

uint64_t sub_235668DFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF12EB0);
  uint64_t v7 = MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v10, v11, v12, v13);
  id v15 = (char *)&v17 - v14;
  sub_23566A2E4(a1, (uint64_t)&v17 - v14, (uint64_t *)&unk_26AF12EB0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23566A2E4((uint64_t)v15, (uint64_t)v9, (uint64_t *)&unk_26AF12EB0);
  sub_2359470F8();
  sub_2359484E8();
  return sub_23566A3AC((uint64_t)v15, (uint64_t *)&unk_26AF12EB0);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_235668F4C()
{
  return swift_deallocObject();
}

uint64_t sub_235668F84()
{
  return sub_235669EBC((uint64_t (*)(void, double, double, double, double))sub_235668704);
}

void sub_235668F9C()
{
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_freezeFrameDisplayAppearanceSubscription] = 0;
  uint64_t v1 = MEMORY[0x263F8EE78];
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_23594A998()) {
    unint64_t v2 = sub_235676A54(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v2 = MEMORY[0x263F8EE88];
  }
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_cancellables] = v2;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages] = v1;
  uint64_t v3 = &v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath];
  MEMORY[0x237DE5A90](0, 0);
  uint64_t v4 = sub_235947B38();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  uint64_t v5 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageSpacing;
  if (qword_26880E508 != -1) {
    swift_once();
  }
  *(void *)&v0[v5] = qword_26882BF30;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlPositionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829F0]), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlConstraints] = v1;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_textOverlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___textReaderModeButtonItem] = 0;

  sub_23594A968();
  __break(1u);
}

id sub_235669180(unint64_t a1)
{
  unint64_t v26 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_23594A998();
    uint64_t v2 = (uint64_t)result;
    if (!result) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_19;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
LABEL_45:
    __break(1u);
    return result;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      MEMORY[0x237DE87D0](i, a1);
      type metadata accessor for FreezeFramePageContentViewController();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x237DE7CE0]();
        if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_235949DA8();
        }
        sub_235949DD8();
        sub_235949D98();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    type metadata accessor for FreezeFramePageContentViewController();
    for (uint64_t j = 0; j != v2; ++j)
    {
      uint64_t v6 = *(void **)(a1 + 8 * j + 32);
      if (swift_dynamicCastClass())
      {
        MEMORY[0x237DE7CE0](v6);
        if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_235949DA8();
        }
        sub_235949DD8();
        sub_235949D98();
      }
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if (v26 >> 62) {
    goto LABEL_42;
  }
  uint64_t v7 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_23594A998())
  {
    uint64_t v8 = 4;
    uint64_t v9 = 0;
    if ((v26 & 0xC000000000000001) != 0)
    {
LABEL_22:
      uint64_t v10 = (char *)MEMORY[0x237DE87D0](v9, v26);
      goto LABEL_24;
    }
    while (1)
    {
      uint64_t v10 = (char *)*(id *)(v26 + 8 * v8);
LABEL_24:
      uint64_t v11 = v10;
      uint64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      sub_235850FEC();
      if (qword_26880E420 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_235948278();
      __swift_project_value_buffer(v13, (uint64_t)qword_26880F7E8);
      uint64_t v14 = sub_235948258();
      os_log_type_t v15 = sub_23594A148();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_235640000, v14, v15, "resetImageCentering", v16, 2u);
        MEMORY[0x237DE9F30](v16, -1, -1);
      }

      uint64_t v17 = *(void **)&v11[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_imageView];
      id result = objc_msgSend(v11, sel_view);
      if (!result) {
        goto LABEL_45;
      }
      uint64_t v18 = result;
      objc_msgSend(result, sel_center);
      double v20 = v19;
      double v22 = v21;

      sub_235857324(v17, v20, v22);
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359484D8();
      swift_release();
      swift_release();
      if (v25)
      {
        char v23 = sub_23594AB78();
        swift_bridgeObjectRelease();
        if (v23)
        {

          if (v12 == v7) {
            return (id)swift_bridgeObjectRelease_n();
          }
        }
        else
        {
          id v24 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_scrollView], sel_panGestureRecognizer);
          objc_msgSend(v24, sel_setEnabled_, !sub_235852C4C());

          if (v12 == v7) {
            return (id)swift_bridgeObjectRelease_n();
          }
        }
      }
      else
      {

        swift_bridgeObjectRelease();
        if (v12 == v7) {
          return (id)swift_bridgeObjectRelease_n();
        }
      }
      uint64_t v9 = ++v8 - 4;
      if ((v26 & 0xC000000000000001) != 0) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
  }
  return (id)swift_bridgeObjectRelease_n();
}

void sub_235669668(void *a1, char a2, char a3)
{
  uint64_t v7 = (void *)sub_235947B38();
  uint64_t v8 = *(v7 - 1);
  MEMORY[0x270FA5388](v7, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0) {
    return;
  }
  id v15 = objc_msgSend(a1, sel_viewControllers);
  if (!v15) {
    return;
  }
  uint64_t v16 = v15;
  sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
  unint64_t v17 = sub_235949D78();

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_5;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_22;
  }
LABEL_5:
  if ((v17 & 0xC000000000000001) != 0)
  {
    id v18 = (id)MEMORY[0x237DE87D0](0, v17);
  }
  else
  {
    if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v18 = *(id *)(v17 + 32);
  }
  id v34 = v18;
  swift_bridgeObjectRelease();
  type metadata accessor for FreezeFramePageContentViewController();
  uint64_t v19 = swift_dynamicCastClass();
  if (v19)
  {
    uint64_t v20 = v19;
    double v21 = (unint64_t *)(v3 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    unint64_t v22 = *v21;
    swift_bridgeObjectRetain();
    sub_23583BF70(v20, v22);
    uint64_t v24 = v23;
    char v26 = v25;
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0 || (a2 & 1) == 0)
    {

      return;
    }
    MEMORY[0x237DE5A90](v24, 0);
    sub_235662BF4((uint64_t)v14);
    (*(void (**)(char *, void *))(v8 + 8))(v14, v7);
    uint64_t v27 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl), sel_setCurrentPage_, v24);
    uint64_t v7 = *(void **)(v3 + v27);
    if (!(*v21 >> 62))
    {
      uint64_t v28 = *(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v29 = v7;
LABEL_13:
      double v30 = 0.0;
      if (v28 > 1) {
        double v30 = 1.0;
      }
      objc_msgSend(v7, sel_setAlpha_, v30);

      return;
    }
LABEL_27:
    id v33 = v7;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_23594A998();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v31 = v34;
}

uint64_t sub_2356699A0(void *a1)
{
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_layoutDirection);

  if (v4 == (id)1) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = -1;
  }
  type metadata accessor for FreezeFramePageContentViewController();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = (unint64_t *)&v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  unint64_t v9 = *v8;
  id v10 = a1;
  swift_bridgeObjectRetain();
  sub_23583BF70(v7, v9);
  unint64_t v12 = v11;
  char v14 = v13;
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_15:

    return 0;
  }
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_23594A998();
    swift_bridgeObjectRelease();
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v15 = *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v16 = __OFADD__(v12, v5);
  v12 += v5;
  if (v16)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v12 & 0x8000000000000000) != 0 || v12 >= v15) {
    goto LABEL_15;
  }
  uint64_t result = swift_beginAccess();
  unint64_t v18 = *v8;
  if ((*v8 & 0xC000000000000001) != 0)
  {
LABEL_21:
    id v19 = (id)MEMORY[0x237DE87D0](v12);
    goto LABEL_14;
  }
  if (v12 < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v19 = *(id *)(v18 + 8 * v12 + 32);
LABEL_14:
    id v20 = v19;
    swift_endAccess();

    return (uint64_t)v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_235669B48(void *a1)
{
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_layoutDirection);

  if (v4 == (id)1) {
    uint64_t v5 = -1;
  }
  else {
    uint64_t v5 = 1;
  }
  type metadata accessor for FreezeFramePageContentViewController();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = (unint64_t *)&v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  unint64_t v9 = *v8;
  id v10 = a1;
  swift_bridgeObjectRetain();
  sub_23583BF70(v7, v9);
  unint64_t v12 = v11;
  char v14 = v13;
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_15:

    return 0;
  }
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_23594A998();
    swift_bridgeObjectRelease();
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v15 = *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v16 = __OFADD__(v12, v5);
  v12 += v5;
  if (v16)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v12 & 0x8000000000000000) != 0 || v12 >= v15) {
    goto LABEL_15;
  }
  uint64_t result = swift_beginAccess();
  unint64_t v18 = *v8;
  if ((*v8 & 0xC000000000000001) != 0)
  {
LABEL_21:
    id v19 = (id)MEMORY[0x237DE87D0](v12);
    goto LABEL_14;
  }
  if (v12 < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v19 = *(id *)(v18 + 8 * v12 + 32);
LABEL_14:
    id v20 = v19;
    swift_endAccess();

    return (uint64_t)v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_235669E4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_235669E84(uint64_t a1)
{
  return sub_2357A152C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_235669EA4()
{
  return sub_235669EBC((uint64_t (*)(void, double, double, double, double))sub_235668B60);
}

uint64_t sub_235669EBC(uint64_t (*a1)(void, double, double, double, double))
{
  return a1(*(void *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48));
}

uint64_t sub_235669ED4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235669F1C()
{
  return swift_deallocObject();
}

void sub_235669F54()
{
  sub_235667F84(*(void **)(v0 + 16));
}

uint64_t sub_235669F5C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_235669F9C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_23566A050;
  return sub_23566832C();
}

uint64_t sub_23566A050()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_23566A148()
{
  sub_2356676AC(*(void **)(v0 + 16), v0 + 24);
}

uint64_t sub_23566A154()
{
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23566A19C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_23566A050;
  return sub_235666808(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_44Tm()
{
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);
  }
  return swift_deallocObject();
}

void sub_23566A2A8()
{
  sub_235667B18(*(void **)(v0 + 16), v0 + 24);
}

uint64_t sub_23566A2B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_23566A2DC()
{
  return sub_23566502C(*(void *)(v0 + 16));
}

uint64_t sub_23566A2E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23566A348(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23566A3AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23566A408(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_23566A500(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23566A520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F1C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_23566A590()
{
  unint64_t result = qword_26AF15290;
  if (!qword_26AF15290)
  {
    sub_2356594B0(255, (unint64_t *)&qword_26AF152A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF15290);
  }
  return result;
}

uint64_t sub_23566A5F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23566A630(char a1, char a2, double a3, double a4)
{
  sub_235664804(a1, a2, v4, a3, a4);
}

uint64_t sub_23566A638(uint64_t a1)
{
  return sub_23587CEA8(a1, *(uint64_t (**)(void, void, double, double))(v1 + 16));
}

void sub_23566A640()
{
  sub_235662708(*(uint64_t **)(v0 + 16));
}

void sub_23566A648()
{
  sub_235663294(*(uint64_t **)(v0 + 16));
}

uint64_t sub_23566A650(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23566A700()
{
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  long long v2 = (void *)sub_235949A88();
  uint64_t v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  uint64_t v5 = sub_235949AC8();
  swift_bridgeObjectRelease();

  return v5;
}

BOOL sub_23566A828(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_23566A840@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_23566A860(void *a1@<X8>)
{
  *a1 = &unk_26E8BD410;
}

uint64_t sub_23566A870(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_23566A884(unsigned char *a1, unsigned char *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_23566A898(unsigned char *a1, unsigned char *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_23566A8AC(unsigned char *a1, unsigned char *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_23566A8C0()
{
  return sub_235949D38();
}

uint64_t sub_23566A920()
{
  return sub_235949D08();
}

uint64_t sub_23566A970()
{
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  char v2 = (void *)sub_235949A88();
  char v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  uint64_t v5 = sub_235949AC8();
  return v5;
}

id sub_23566AA84()
{
  id v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15490);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  unint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14E90);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  unint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14CE0);
  uint64_t v33 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35.receiver = v1;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, sel_viewDidLoad);
  char v25 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_tableView];
  objc_msgSend(v25, sel_setDataSource_, v1);
  objc_msgSend(v25, sel_setDelegate_, v1);
  sub_2356594B0(0, (unint64_t *)&qword_26880EB00);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v27 = (void *)sub_235949A88();
  objc_msgSend(v25, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v27);

  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v29 = result;
  objc_msgSend(result, sel_addSubview_, v25);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  double v30 = result;
  sub_23592C7F4(result, *MEMORY[0x263F834E8], *(double *)(MEMORY[0x263F834E8] + 8), *(double *)(MEMORY[0x263F834E8] + 16), *(double *)(MEMORY[0x263F834E8] + 24));
  swift_bridgeObjectRelease();

  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14F70);
  sub_2359484A8();
  swift_endAccess();
  id v34 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v31 = sub_23594A5A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v9, 1, 1, v31);
  sub_2356594B0(0, (unint64_t *)&unk_26AF154B0);
  sub_2356595F4((unint64_t *)&unk_26AF14E80, &qword_26AF14E90);
  sub_2356594EC();
  sub_235948568();
  sub_235659554((uint64_t)v9);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2356595F4((unint64_t *)&unk_26AF14CD0, &qword_26AF14CE0);
  uint64_t v32 = sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v18);
  *(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_speechFeedbackSubscription] = v32;
  return (id)swift_release();
}

void sub_23566AF68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_235947B38();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x237DEA060](a2 + 16);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (v16[7] == 1)
    {
      objc_msgSend(v12, sel_beginUpdates);
      MEMORY[0x237DE5A70](1, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880EB10);
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_23594FD70;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 16))(v14 + v13, v10, v3);
      uint64_t v15 = (void *)sub_235949D58();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_reloadRowsAtIndexPaths_withRowAnimation_, v15, 100);

      objc_msgSend(v12, sel_endUpdates);
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v10, v3);
    }
    else
    {
    }
  }
}

void sub_23566B1F8(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v6 = (void *)sub_235949A88();
  uint64_t v7 = (void *)sub_235949A88();
  id v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_235949AC8();
  uint64_t v9 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);
}

id sub_23566B3C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_availableTextDetectionFeedbacks] = &unk_26E8BD438;
  uint64_t v8 = OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_tableView;
  id v9 = objc_allocWithZone(MEMORY[0x263F82C78]);
  objc_super v10 = v4;
  id v11 = objc_msgSend(v9, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = self;
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_systemYellowColor);
  objc_msgSend(v13, sel_setTintColor_, v14);

  objc_msgSend(v13, sel_setClipsToBounds_, 0);
  *(void *)&v4[v8] = v13;
  *(void *)&v10[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_speechFeedbackSubscription] = 0;

  if (a2)
  {
    uint64_t v15 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  v18.receiver = v10;
  v18.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id sub_23566B5A4(void *a1)
{
  char v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_availableTextDetectionFeedbacks] = &unk_26E8BD460;
  uint64_t v5 = OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_tableView;
  id v6 = objc_allocWithZone(MEMORY[0x263F82C78]);
  uint64_t v7 = v2;
  id v8 = objc_msgSend(v6, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  id v9 = self;
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_systemYellowColor);
  objc_msgSend(v10, sel_setTintColor_, v11);

  objc_msgSend(v10, sel_setClipsToBounds_, 0);
  *(void *)&v2[v5] = v10;
  *(void *)&v7[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_speechFeedbackSubscription] = 0;

  v14.receiver = v7;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

uint64_t type metadata accessor for TextDetectionSettingsViewController()
{
  return self;
}

id sub_23566B7C8(void *a1)
{
  uint64_t v2 = v1;
  id v4 = (id)0xD000000000000011;
  uint64_t v5 = (void *)sub_235949A88();
  uint64_t v6 = sub_235947AB8();
  id v7 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v5, v6);

  id v8 = v7;
  uint64_t v9 = sub_235947B28();
  if (v9)
  {
    if (v9 == 1)
    {
      id v10 = objc_msgSend(v8, sel_textLabel);
      if (v10)
      {
        id v11 = v10;
        type metadata accessor for MAGUtilities();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v13 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        objc_super v14 = (void *)sub_235949A88();
        uint64_t v15 = (void *)sub_235949A88();
        id v16 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, 0, v15);

        sub_235949AC8();
        unint64_t v17 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_setText_, v17);
      }
      id v18 = objc_msgSend(v8, sel_textLabel);
      if (v18)
      {
        uint64_t v19 = v18;
        objc_msgSend(v18, sel_setNumberOfLines_, 0);
      }
      id v20 = objc_msgSend(v8, sel_textLabel);
      if (v20)
      {
        uint64_t v21 = v20;
        objc_msgSend(v20, sel_setLineBreakMode_, 0);
      }
      id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      uint64_t v23 = qword_26AF181E0
          + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__textDetectionFlashlightEnabled;
      swift_beginAccess();
      uint64_t v44 = *(void *)v23;
      uint64_t v46 = *(void *)(v23 + 8);
      LOBYTE(v48) = *(unsigned char *)(v23 + 16);
      uint64_t v24 = qword_26AF144C0;
      uint64_t v25 = swift_bridgeObjectRetain();
      if (v24 != -1) {
        uint64_t v25 = swift_once();
      }
      MEMORY[0x270FA5388](v25, v26, v27, v28, v29);
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_setOn_, v50, v44, v46, v48);
      objc_msgSend(v22, sel_addTarget_action_forControlEvents_, v2, sel_didToggleFlashlightSwitch_, 4096);
      objc_msgSend(v8, sel_setAccessoryView_, v22);
      objc_msgSend(v8, sel_setAccessoryType_, 0);
    }
    goto LABEL_22;
  }
  uint64_t v30 = *(void *)(v1
                  + OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_availableTextDetectionFeedbacks);
  unint64_t v31 = sub_235947AE8();
  if ((v31 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v31 < *(void *)(v30 + 16))
  {
    uint64_t v6 = *(unsigned __int8 *)(v30 + v31 + 32);
    id v32 = objc_msgSend(v8, sel_textLabel);
    if (v32)
    {
      uint64_t v33 = v32;
      sub_23566A700();
      id v34 = (void *)sub_235949A88();
      swift_bridgeObjectRelease();
      objc_msgSend(v33, sel_setText_, v34);
    }
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
    if (qword_26AF13B78 == -1) {
      goto LABEL_19;
    }
    goto LABEL_25;
  }
  __break(1u);
LABEL_25:
  swift_once();
LABEL_19:
  objc_super v35 = (uint64_t *)(qword_26AF181E0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedTextDetectionFeedbacks);
  swift_beginAccess();
  uint64_t v45 = *v35;
  uint64_t v47 = v35[1];
  uint64_t v49 = v35[2];
  uint64_t v36 = qword_26AF144C0;
  swift_bridgeObjectRetain();
  uint64_t v37 = swift_bridgeObjectRetain();
  if (v36 != -1) {
    uint64_t v37 = swift_once();
  }
  MEMORY[0x270FA5388](v37, v38, v39, v40, v41);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15130);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v42 = ((uint64_t (*)(uint64_t))sub_2356BFD24)(v6);
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setOn_, v42 & 1, v45, v47, v49);
  objc_msgSend(v4, sel_setTag_, v6);
  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v2, sel_didToggleFeedbackSwitch_, 4096);
  objc_msgSend(v8, sel_setAccessoryView_, v4);
  objc_msgSend(v8, sel_setAccessoryType_, 0);

LABEL_22:
  return v8;
}

uint64_t getEnumTagSinglePayload for TextDetectionFeedback(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TextDetectionFeedback(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23566C3C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_23566C3E8(unsigned char *result, char a2)
{
  *id result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TextDetectionFeedback()
{
  return &type metadata for TextDetectionFeedback;
}

unint64_t sub_23566C408()
{
  unint64_t result = qword_26880F2F0;
  if (!qword_26880F2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F2F0);
  }
  return result;
}

uint64_t sub_23566C45C()
{
  return sub_2356595F4(&qword_26880F2F8, (uint64_t *)&unk_26AF15130);
}

unint64_t sub_23566C498()
{
  unint64_t result = qword_26AF145F8;
  if (!qword_26AF145F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF145F8);
  }
  return result;
}

id sub_23566C4EC(void *a1)
{
  id result = objc_msgSend(a1, sel_tag);
  if (result)
  {
    if (result != (id)1) {
      return result;
    }
    int v3 = 1;
  }
  else
  {
    int v3 = 0;
  }
  if (objc_msgSend(a1, sel_isOn))
  {
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v4 = qword_26AF144C0;
    swift_bridgeObjectRetain();
    uint64_t v5 = swift_bridgeObjectRetain();
    if (v4 != -1) {
      uint64_t v5 = swift_once();
    }
    MEMORY[0x270FA5388](v5, v6, v7, v8, v9);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15130);
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    id v10 = (char *)v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v10 = sub_2356CD710(0, *(void *)(v25 + 16) + 1, 1, (char *)v25);
    }
    unint64_t v12 = *((void *)v10 + 2);
    unint64_t v11 = *((void *)v10 + 3);
    if (v12 >= v11 >> 1) {
      id v10 = sub_2356CD710((char *)(v11 > 1), v12 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v12 + 1;
    v10[v12 + 32] = v3;
    swift_bridgeObjectRelease();
    sub_2357D4038((uint64_t)v10, 1);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v13 = qword_26AF144C0;
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    if (v13 != -1) {
      uint64_t v14 = swift_once();
    }
    MEMORY[0x270FA5388](v14, v15, v16, v17, v18);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15130);
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(v25 + 16);
    if (v19)
    {
      id v20 = (unsigned __int8 *)(v25 + 32);
      uint64_t v21 = MEMORY[0x263F8EE78];
      do
      {
        int v24 = *v20;
        if (v3 != v24)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_235676424(0, *(void *)(v21 + 16) + 1, 1);
          }
          unint64_t v23 = *(void *)(v21 + 16);
          unint64_t v22 = *(void *)(v21 + 24);
          if (v23 >= v22 >> 1) {
            sub_235676424(v22 > 1, v23 + 1, 1);
          }
          *(void *)(v21 + 16) = v23 + 1;
          *(unsigned char *)(v21 + v23 + 32) = v24;
        }
        ++v20;
        --v19;
      }
      while (v19);
    }
    else
    {
      uint64_t v21 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    sub_2357D4038(v21, 1);
    return (id)swift_release();
  }
}

uint64_t sub_23566C908(void *a1)
{
  uint64_t v2 = sub_2359496D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26AF181E0;
  unsigned __int8 v11 = objc_msgSend(a1, sel_isOn);
  uint64_t v12 = v10 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__textDetectionFlashlightEnabled;
  swift_beginAccess();
  unsigned __int8 v20 = v11;
  if (qword_26AF144C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_2359496C8();
  MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
  *(void *)&v19[-16] = &v20;
  *(void *)&v19[-8] = v12;
  sub_23594A298();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v9, v2);
  return swift_endAccess();
}

uint64_t sub_23566CAEC(uint64_t a1)
{
  if (a1) {
    return 0;
  }
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_235949A88();
  uint64_t v5 = (void *)sub_235949A88();
  id v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

  uint64_t v1 = sub_235949AC8();
  return v1;
}

uint64_t sub_23566CBE8@<X0>(uint64_t *a1@<X8>)
{
  return sub_235720310(*(void **)(v1 + 16), a1);
}

uint64_t sub_23566CC04()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23566CC3C(uint64_t a1)
{
  sub_23566AF68(a1, v1);
}

uint64_t sub_23566CC4C@<X0>(uint64_t *a1@<X8>)
{
  return sub_23566CBE8(a1);
}

uint64_t MFReaderFormatterTheme.id.getter()
{
  uint64_t v0 = sub_235947978();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2, v3, v4, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_235947968();
  uint64_t v8 = sub_235947928();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  return v8;
}

uint64_t sub_23566CD40()
{
  uint64_t result = 0;
  switch(*v0)
  {
    case 1:
      id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.878431373, 0.847058824, 0.784313725, 1.0);
      return MEMORY[0x237DE72D0](v2);
    case 2:
      id v3 = objc_msgSend(self, sel_darkGrayColor);
      goto LABEL_6;
    case 3:
      id v3 = objc_msgSend(self, sel_blackColor);
LABEL_6:
      id v2 = v3;
      return MEMORY[0x237DE72D0](v2);
    case 4:
      return result;
    default:
      id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.901960784, 0.901960784, 0.901960784, 1.0);
      return MEMORY[0x237DE72D0](v2);
  }
}

uint64_t sub_23566CE40()
{
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v2 = (void *)sub_235949A88();
  id v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  uint64_t v5 = sub_235949AC8();
  return v5;
}

uint64_t sub_23566D0D0()
{
  if (*v0 != 4) {
    return 0;
  }
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v3 = (void *)sub_235949A88();
  id v4 = (void *)sub_235949A88();
  id v5 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, 0, v4);

  uint64_t v6 = sub_235949AC8();
  return v6;
}

MagnifierSupport::MFReaderFormatterTheme_optional __swiftcall MFReaderFormatterTheme.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_23594AA18();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *id v2 = v5;
  return result;
}

void *static MFReaderFormatterTheme.allCases.getter()
{
  return &unk_26E8BD520;
}

uint64_t MFReaderFormatterTheme.rawValue.getter()
{
  uint64_t result = 0x6574696877;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6169706573;
      break;
    case 2:
      uint64_t result = 2036429415;
      break;
    case 3:
      uint64_t result = 0x6B63616C62;
      break;
    case 4:
      uint64_t result = 0x6D6F74737563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23566D2CC(unsigned __int8 *a1, char *a2)
{
  return sub_235706810(*a1, *a2);
}

unint64_t sub_23566D2DC()
{
  unint64_t result = qword_26880F300;
  if (!qword_26880F300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F300);
  }
  return result;
}

uint64_t sub_23566D330()
{
  return sub_23594AD28();
}

uint64_t sub_23566D408()
{
  sub_235949B88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23566D4C8()
{
  return sub_23594AD28();
}

MagnifierSupport::MFReaderFormatterTheme_optional sub_23566D59C(Swift::String *a1)
{
  return MFReaderFormatterTheme.init(rawValue:)(*a1);
}

void sub_23566D5A8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6574696877;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6169706573;
      goto LABEL_3;
    case 2:
      *a1 = 2036429415;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x6B63616C62;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x6D6F74737563;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE500000000000000;
      break;
  }
}

unint64_t sub_23566D648()
{
  unint64_t result = qword_26880F308;
  if (!qword_26880F308)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26880F310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F308);
  }
  return result;
}

void sub_23566D6A4(void *a1@<X8>)
{
  *a1 = &unk_26E8BD548;
}

uint64_t sub_23566D6B4()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_23566D6C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_235947978();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_235947968();
  uint64_t v10 = sub_235947928();
  uint64_t v12 = v11;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  *a1 = v10;
  a1[1] = v12;
  return result;
}

uint64_t sub_23566D79C()
{
  return sub_235949D18();
}

uint64_t sub_23566D7FC()
{
  return sub_235949CE8();
}

uint64_t getEnumTagSinglePayload for MFReaderFormatterTheme(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MFReaderFormatterTheme(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23566D9A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MFReaderFormatterTheme()
{
  return &type metadata for MFReaderFormatterTheme;
}

unint64_t sub_23566D9E0()
{
  unint64_t result = qword_26880F318;
  if (!qword_26880F318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F318);
  }
  return result;
}

void *sub_23566DA34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF155B0);
  int v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return v2;
  }
  sub_2359470F8();
  memcpy(v15, (const void *)(a1 + 32), 0x128uLL);
  uint64_t v4 = v15[0];
  uint64_t v5 = v15[1];
  sub_235671740((uint64_t)v15);
  unint64_t v6 = sub_2358780C4(v4, v5);
  if (v7)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v8 = 328;
  while (1)
  {
    *(void *)((char *)v2 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * v6);
    uint64_t *v9 = v4;
    v9[1] = v5;
    unint64_t result = memcpy((void *)(v2[7] + 280 * v6), &v15[2], 0x118uLL);
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v2[2] = v13;
    if (!--v3) {
      goto LABEL_9;
    }
    memcpy(v15, (const void *)(a1 + v8), 0x128uLL);
    uint64_t v4 = v15[0];
    uint64_t v5 = v15[1];
    sub_235671740((uint64_t)v15);
    unint64_t v6 = sub_2358780C4(v4, v5);
    v8 += 296;
    if (v14) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_23566DBA8(uint64_t a1)
{
  return sub_23566DBF8(a1, &qword_2688139C0, &qword_26880F320, (uint64_t (*)(uint64_t))sub_2358781AC);
}

unint64_t sub_23566DBD0(uint64_t a1)
{
  return sub_23566DBF8(a1, &qword_26880F338, &qword_26880F340, (uint64_t (*)(uint64_t))sub_235878240);
}

unint64_t sub_23566DBF8(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_23594A9D8();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  sub_2359470F8();
  while (1)
  {
    sub_23566A2E4(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_23567183C(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    id v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566DD28(uint64_t a1)
{
  return sub_23566F2CC(a1, &qword_26880F448);
}

unint64_t sub_23566DD34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F350);
  int v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2358780C4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566DE48(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF155E0);
  uint64_t v2 = sub_23594A9D8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_2359470F8();
  while (1)
  {
    sub_23566A2E4(v6, (uint64_t)v15, &qword_26AF15588);
    unint64_t result = sub_235878080((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_23567183C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566DF8C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F360);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_2358781AC((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566E098(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF155C8);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_235878240();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566E198(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F328);
  uint64_t v2 = sub_23594A9D8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_2359470F8();
  while (1)
  {
    sub_23566A2E4(v6, (uint64_t)&v13, &qword_26880F330);
    uint64_t v7 = v13;
    unint64_t result = sub_235878344(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_23567183C(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566E2C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF155C0);
  uint64_t v2 = sub_23594A9D8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_2359470F8();
  while (1)
  {
    sub_23566A2E4(v6, (uint64_t)&v15, &qword_26AF15068);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2358780C4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_23567183C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566E400(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F358);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2358780C4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566E524(uint64_t a1)
{
  return sub_23566DBF8(a1, &qword_26880F408, &qword_26880F410, sub_235878240);
}

unint64_t sub_23566E54C(uint64_t a1)
{
  return sub_23566DBF8(a1, &qword_26880F438, &qword_26880F440, sub_235878240);
}

unint64_t sub_23566E574(uint64_t a1)
{
  return sub_23566F2CC(a1, &qword_26880F3B0);
}

unint64_t sub_23566E580(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F428);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  char v9 = (unsigned __int8 *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    BOOL v11 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F430);
  uint64_t v10 = sub_23594A9D8();
  BOOL v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = &v9[*(int *)(v2 + 48)];
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v3 + 72);
  sub_2359470F8();
  while (1)
  {
    sub_23566A2E4(v16, (uint64_t)v9, &qword_26880F428);
    unsigned __int8 v18 = *v9;
    unint64_t result = sub_2358785C4(*v9);
    if (v20) {
      break;
    }
    unint64_t v21 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v11[6] + result) = v18;
    uint64_t v22 = v11[7];
    uint64_t v23 = sub_235947298();
    unint64_t result = (*(uint64_t (**)(unint64_t, unsigned __int8 *, uint64_t))(*(void *)(v23 - 8) + 32))(v22 + *(void *)(*(void *)(v23 - 8) + 72) * v21, v13, v23);
    uint64_t v24 = v11[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_11;
    }
    v11[2] = v26;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566E778(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF155A0);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *((unsigned __int8 *)v4 - 8);
    long long v12 = *(_OWORD *)v4;
    id v6 = *v4;
    unint64_t result = sub_235878318(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v12;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566E88C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF155D0);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_235878240(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566E98C(uint64_t a1)
{
  return sub_23566DBF8(a1, &qword_26AF155D8, (uint64_t *)&unk_26AF15358, sub_235878240);
}

unint64_t sub_23566E9B4(uint64_t a1)
{
  return sub_23566F2CC(a1, &qword_26880F418);
}

unint64_t sub_23566E9C0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F400);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *((unsigned __int8 *)v4 - 8);
    id v6 = *v4;
    unint64_t result = sub_2358786B8(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566EAC4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F3F8);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (void *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_23587813C(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    BOOL v10 = (void *)(v2[7] + 16 * result);
    *BOOL v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566EBD4(uint64_t a1)
{
  return sub_23566DBF8(a1, &qword_26880F3E8, &qword_26880F3F0, sub_235878240);
}

unint64_t sub_23566EBFC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F3E0);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_235878240(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566ED08(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF155B8);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2358780C4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566EE1C(uint64_t a1)
{
  return sub_23566DBF8(a1, &qword_26880F3D0, &qword_26880F3D8, sub_235878240);
}

unint64_t sub_23566EE44(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F378);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  sub_2359470F8();
  while (1)
  {
    sub_23566A2E4(v4, (uint64_t)v15, &qword_26880F380);
    unint64_t result = sub_235878080((uint64_t)v15);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v15[0];
    long long v9 = v15[1];
    *(void *)(v7 + 32) = v16;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    uint64_t v10 = (void *)(v2[7] + 16 * result);
    uint64_t v11 = v18;
    *uint64_t v10 = v17;
    v10[1] = v11;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566EF78(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F388);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (_DWORD *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    int v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2358780C4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 16 * result;
    *(void *)uint64_t v12 = v7;
    *(_DWORD *)(v12 + 8) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566F0A4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F390);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_235878784((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566F1B0(uint64_t a1)
{
  return sub_23566F2CC(a1, &qword_26880F3A8);
}

unint64_t sub_23566F1BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF155A8);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *((unsigned __int8 *)v4 - 8);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_235878318(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566F2C0(uint64_t a1)
{
  return sub_23566F2CC(a1, &qword_26880F3A0);
}

unint64_t sub_23566F2CC(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_23594A9D8();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  sub_2359470F8();
  uint64_t v5 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *((void *)v5 - 2);
    uint64_t v7 = *((void *)v5 - 1);
    long long v14 = *v5;
    swift_bridgeObjectRetain();
    sub_2359470F8();
    unint64_t result = sub_2358780C4(v6, v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v10 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v10 = v6;
    v10[1] = v7;
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566F3F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F398);
  uint64_t v2 = (void *)sub_23594A9D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_2359470F8();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    unint64_t result = sub_2358788AC((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23566F500(uint64_t a1)
{
  return sub_23566DBF8(a1, &qword_26880F3C0, &qword_26880F3C8, sub_235878240);
}

id sub_23566F528()
{
  id v1 = *(void **)(v0 + 64);
  if (v1)
  {
    id v2 = *(id *)(v0 + 64);
  }
  else
  {
    id v3 = objc_allocWithZone(MEMORY[0x263F20A40]);
    swift_unownedRetain();
    id v4 = objc_msgSend(v3, sel_initWithVersion_, 0x10000);
    objc_msgSend(v4, sel_setEnableObjectTracking_, 1);
    objc_msgSend(v4, sel_setEnableSegmentation_, 0);
    objc_msgSend(v4, sel_setNetworkResolution_, 0);
    objc_msgSend(v4, sel_setRunningFrameRate_, 0);
    swift_unownedRelease();
    uint64_t v5 = *(void **)(v0 + 64);
    *(void *)(v0 + 64) = v4;
    id v2 = v4;

    id v1 = 0;
  }
  id v6 = v1;
  return v2;
}

uint64_t ANSTPersonDetectionManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ANSTPersonDetectionManager.init()();
  return v0;
}

void *ANSTPersonDetectionManager.init()()
{
  id v1 = v0;
  v0[2] = 0;
  v0[3] = sub_23567002C(MEMORY[0x263F8EE78]);
  v0[7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F21550]), sel_init);
  v0[8] = 0;
  id v2 = objc_allocWithZone(MEMORY[0x263F21558]);
  id v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v2, sel_initWithIdentifier_, v3);

  v1[4] = v4;
  id v5 = objc_allocWithZone(MEMORY[0x263F21528]);
  id v6 = (void *)sub_235949A88();
  id v7 = objc_msgSend(v5, sel_initWithIdentifier_, v6);

  v1[5] = v7;
  id v8 = objc_allocWithZone(MEMORY[0x263F21508]);
  uint64_t v9 = (void *)sub_235949A88();
  id v10 = objc_msgSend(v8, sel_initWithIdentifier_, v9);

  v1[6] = v10;
  BOOL v11 = (void *)v1[4];
  objc_msgSend(v11, sel_addSourceNode_, v1[5]);
  objc_msgSend(v11, sel_addEvaluationNode_, v10);
  objc_msgSend((id)v1[7], sel_setDetectFaceNames_, 1);
  sub_23566F880();
  return v1;
}

void sub_23566F880()
{
  v9[1] = *(id *)MEMORY[0x263EF8340];
  id v1 = sub_23566F528();
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F20A38]), sel_initWithConfiguration_, v1);

  id v3 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = v2;

  id v4 = *(void **)(v0 + 16);
  if (v4)
  {
    v9[0] = 0;
    if (objc_msgSend(v4, sel_prepareWithError_, v9))
    {
      id v5 = v9[0];
    }
    else
    {
      id v6 = v9[0];
      id v7 = (void *)sub_235947678();

      swift_willThrow();
      sub_23567196C();
      swift_allocError();
      *(void *)(v8 + 8) = 0;
      *(void *)(v8 + 16) = 0;
      *(void *)uint64_t v8 = 11;
      *(unsigned char *)(v8 + 24) = 4;
      swift_willThrow();
    }
  }
}

void *sub_23566F9A8(void *a1)
{
  return sub_235670418(a1);
}

uint64_t sub_23566F9C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v23 = sub_2359477E8();
  uint64_t v6 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(self, sel_systemPhotoLibraryURL);
  sub_235947798();

  long long v14 = *(void **)(a1 + 40);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCGImage_, a2);
  uint64_t v16 = (void *)sub_235947758();
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  aBlock[4] = sub_23567194C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_235824E50;
  void aBlock[3] = &block_descriptor_3;
  long long v19 = _Block_copy(aBlock);
  id v20 = a3;
  swift_release();
  objc_msgSend(v14, sel_triggerWithImage_photoLibraryURL_options_cacheKey_resultHandler_, v15, v16, v17, 0, v19);
  _Block_release(v19);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v23);
}

void sub_23566FBC8(void *a1, uint64_t a2, id a3)
{
  if (a2) {
    return;
  }
  if (!a1) {
    goto LABEL_10;
  }
  id v4 = objc_msgSend(a1, sel_faceFeatures);
  sub_2356594B0(0, (unint64_t *)&qword_26880F450);
  unint64_t v5 = sub_235949D78();

  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_12:
    id v12 = 0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_23594A998();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x237DE87D0](0, v5);
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(v5 + 32);
  }
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v7, sel_faceDetectionResult);

  if (v8)
  {
    id v9 = objc_msgSend(v8, sel_name);

    sub_235949AC8();
    id v12 = (id)sub_235949A88();
LABEL_13:
    swift_bridgeObjectRelease();
    id v10 = v12;
    goto LABEL_14;
  }
LABEL_10:
  id v10 = 0;
LABEL_14:
  id v13 = v10;
  objc_msgSend(a3, sel_setFaceName_);
}

uint64_t sub_23566FD80(unint64_t a1, uint64_t a2, uint64_t a3, __CVBuffer *a4)
{
  return sub_235670D20(a1, a2, a4);
}

id *ANSTPersonDetectionManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ANSTPersonDetectionManager.__deallocating_deinit()
{
  ANSTPersonDetectionManager.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_23566FE0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F348);
  id v3 = (void *)sub_23594A9D8();
  LOBYTE(v4) = *(unsigned char *)(a1 + 32);
  unint64_t v5 = *(void **)(a1 + 40);
  unint64_t result = sub_2358781A8(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v16 = v5;
    return (unint64_t)v3;
  }
  id v8 = (void **)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    id v12 = v8 + 2;
    uint64_t v4 = *((unsigned __int8 *)v8 - 8);
    id v13 = *v8;
    id v14 = v5;
    unint64_t result = sub_2358781A8(v4);
    id v8 = v12;
    unint64_t v5 = v13;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_23566FF08(uint64_t a1)
{
  return sub_235670334(a1, &qword_26880F420, sub_2358781A8);
}

unint64_t sub_23566FF28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880F368);
    id v3 = (void *)sub_23594A9D8();
    for (uint64_t i = a1 + 32; ; i += 40)
    {
      sub_23566A2E4(i, (uint64_t)v11, &qword_26880F370);
      char v5 = v11[0];
      unint64_t result = sub_2358781A8(v11[0]);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      unint64_t result = (unint64_t)sub_23567183C(&v12, (_OWORD *)(v3[7] + 32 * result));
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_23567002C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F480);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  BOOL v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880F488);
    uint64_t v11 = (void *)sub_23594A9D8();
    long long v12 = (char *)v9 + *(int *)(v2 + 48);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v14 = *(void *)(v3 + 72);
    while (1)
    {
      sub_23566A2E4(v13, (uint64_t)v9, &qword_26880F480);
      uint64_t v15 = *v9;
      unint64_t result = sub_2358782D4(*v9);
      if (v17) {
        break;
      }
      unint64_t v18 = result;
      *(void *)((char *)v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v11[6] + 8 * result) = v15;
      uint64_t v19 = v11[7];
      uint64_t v20 = sub_235947978();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v12, v20);
      uint64_t v21 = v11[2];
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (v22) {
        goto LABEL_10;
      }
      v11[2] = v23;
      v13 += v14;
      if (!--v10) {
        return (unint64_t)v11;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_2356701F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880F478);
    uint64_t v3 = (void *)sub_23594A9D8();
    for (uint64_t i = (_OWORD *)(a1 + 80); ; i += 4)
    {
      uint64_t v5 = *((void *)i - 6);
      uint64_t v6 = *((void *)i - 5);
      uint64_t v8 = (void *)*((void *)i - 4);
      uint64_t v7 = (void *)*((void *)i - 3);
      uint64_t v10 = (void *)*((void *)i - 2);
      uint64_t v9 = *((void *)i - 1);
      long long v20 = *i;
      unint64_t result = sub_2358782D4(v5);
      if (v12) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      uint64_t v13 = v3[7] + 56 * result;
      *(void *)uint64_t v13 = v6;
      *(void *)(v13 + 8) = v8;
      *(void *)(v13 + 16) = v7;
      *(void *)(v13 + 24) = v10;
      *(void *)(v13 + 32) = v9;
      *(_OWORD *)(v13 + 40) = v20;
      uint64_t v14 = v3[2];
      BOOL v15 = __OFADD__(v14, 1);
      uint64_t v16 = v14 + 1;
      if (v15) {
        goto LABEL_10;
      }
      v3[2] = v16;
      id v17 = v10;
      swift_bridgeObjectRetain();
      id v18 = v8;
      id v19 = v7;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_235670314(uint64_t a1)
{
  return sub_235670334(a1, &qword_26880F3B8, sub_2358781A8);
}

unint64_t sub_235670334(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v6 = (void *)sub_23594A9D8();
    for (uint64_t i = (_DWORD *)(a1 + 36); ; i += 2)
    {
      unsigned __int8 v8 = *((unsigned char *)i - 4);
      int v9 = *i;
      unint64_t result = a3(v8);
      if (v11) {
        break;
      }
      *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v6[6] + result) = v8;
      *(_DWORD *)(v6[7] + 4 * result) = v9;
      uint64_t v12 = v6[2];
      BOOL v13 = __OFADD__(v12, 1);
      uint64_t v14 = v12 + 1;
      if (v13) {
        goto LABEL_10;
      }
      v6[2] = v14;
      if (!--v3) {
        return (unint64_t)v6;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

void *sub_235670418(void *a1)
{
  v40[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)v1[2];
  if (!v2)
  {
    sub_23567196C();
    swift_allocError();
    *(void *)(v16 + 8) = 0;
    *(void *)(v16 + 16) = 0;
    *(void *)uint64_t v16 = 12;
    *(unsigned char *)(v16 + 24) = 4;
    swift_willThrow();
    return v1;
  }
  id v4 = v2;
  id v5 = objc_msgSend(a1, sel_capturedImage);
  v40[0] = 0;
  id v6 = objc_msgSend(v4, sel_resultForPixelBuffer_orientation_error_, v5, 4, v40);

  if (!v6)
  {
    id v17 = v40[0];
    uint64_t v1 = (void *)sub_235947678();

    swift_willThrow();
    sub_23567196C();
    swift_allocError();
    *(void *)(v18 + 8) = 0;
    *(void *)(v18 + 16) = 0;
    *(void *)uint64_t v18 = 12;
    *(unsigned char *)(v18 + 24) = 4;
    swift_willThrow();

    return v1;
  }
  id v7 = v40[0];
  unsigned __int8 v8 = (__CVBuffer *)objc_msgSend(a1, sel_capturedImage);
  int64_t Width = CVPixelBufferGetWidth(v8);

  uint64_t v10 = (__CVBuffer *)objc_msgSend(a1, sel_capturedImage);
  int64_t Height = CVPixelBufferGetHeight(v10);

  id v12 = objc_msgSend(v6, sel_detectedObjectsForCategory_, *MEMORY[0x263F209F8]);
  if (v12)
  {
    BOOL v13 = v12;
    sub_2356594B0(0, &qword_26880F470);
    unint64_t v14 = sub_235949D78();

    if (!(v14 >> 62)) {
      goto LABEL_5;
    }
  }
  else
  {
    unint64_t v14 = MEMORY[0x263F8EE78];
    if (!(MEMORY[0x263F8EE78] >> 62))
    {
LABEL_5:
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      sub_23594AB98();
      sub_2356594B0(0, &qword_26880F460);
      if (swift_dynamicCastMetatype())
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        int64_t v20 = Height;
        uint64_t v21 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v21)
        {
          int64_t v38 = Width;
          uint64_t v22 = v15 + 32;
          while (1)
          {
            self;
            if (!swift_dynamicCastObjCClass()) {
              break;
            }
            v22 += 8;
            if (!--v21)
            {
              swift_bridgeObjectRelease();
              goto LABEL_18;
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v14 = v15 | 1;
LABEL_18:
          int64_t Width = v38;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        int64_t Height = v20;
      }
      goto LABEL_20;
    }
  }
  sub_2356594B0(0, &qword_26880F460);
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_23594A978();
  swift_bridgeObjectRelease_n();
  unint64_t v14 = v19;
LABEL_20:
  id v23 = objc_msgSend(v6, sel_detectedObjectsForCategory_, *MEMORY[0x263F20A00]);
  if (v23)
  {
    uint64_t v24 = v23;
    sub_2356594B0(0, &qword_26880F470);
    unint64_t v39 = sub_235949D78();
  }
  else
  {
    unint64_t v39 = MEMORY[0x263F8EE78];
  }
  id v25 = objc_msgSend(v6, sel_detectedObjectsForCategory_, *MEMORY[0x263F209F0]);
  if (v25)
  {
    uint64_t v26 = v25;
    sub_2356594B0(0, &qword_26880F470);
    unint64_t v37 = sub_235949D78();
  }
  else
  {
    unint64_t v37 = MEMORY[0x263F8EE78];
  }
  id v27 = objc_msgSend(v6, sel_detectedObjectsForCategory_, *MEMORY[0x263F20A08]);
  if (v27)
  {
    uint64_t v28 = v27;
    sub_2356594B0(0, &qword_26880F470);
    unint64_t v29 = sub_235949D78();
  }
  else
  {
    unint64_t v29 = MEMORY[0x263F8EE78];
  }
  double v30 = (double)Width;
  double v31 = (double)Height;
  if (v29 >> 62)
  {
    sub_2356594B0(0, &qword_26880F468);
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_23594A978();
    swift_bridgeObjectRelease_n();
    unint64_t v29 = v36;
  }
  else
  {
    uint64_t v32 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_23594AB98();
    sub_2356594B0(0, &qword_26880F468);
    if (swift_dynamicCastMetatype() || (uint64_t v34 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_31:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v35 = v32 + 32;
      while (1)
      {
        self;
        if (!swift_dynamicCastObjCClass()) {
          break;
        }
        v35 += 8;
        if (!--v34) {
          goto LABEL_31;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v29 = v32 | 1;
    }
  }
  uint64_t v1 = (void *)sub_2357B59E8(v14, v39, v37, v29, v30, v31);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_2356709FC(void *a1, uint64_t a2, __CVBuffer *a3)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  id v4 = *(void **)(a2 + 8);
  if (v4)
  {
    double v8 = *(double *)(a2 + 40);
    double v7 = *(double *)(a2 + 48);
    id v9 = v4;
    objc_msgSend(a1, sel_screenRect);
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    CGAffineTransformMakeScale(&v43, v8, v7);
    v45.origin.CGFloat x = v11;
    v45.origin.CGFloat y = v13;
    v45.size.CGFloat width = v15;
    v45.size.CGFloat height = v17;
    CGRect v46 = CGRectApplyAffineTransform(v45, &v43);
    CGFloat x = v46.origin.x;
    CGFloat y = v46.origin.y;
    CGFloat width = v46.size.width;
    CGFloat height = v46.size.height;
    objc_msgSend(v9, sel_boundingBox);
    v56.origin.CGFloat x = x;
    v56.origin.CGFloat y = y;
    v56.size.CGFloat width = width;
    v56.size.CGFloat height = height;
    CGRect v48 = CGRectIntersection(v47, v56);
    CGFloat v22 = v48.origin.x;
    CGFloat v23 = v48.origin.y;
    CGFloat v24 = v48.size.width;
    CGFloat v25 = v48.size.height;
    CGRect v49 = CGRectStandardize(v48);
    double v26 = v49.size.height;
    v49.origin.CGFloat x = v22;
    v49.origin.CGFloat y = v23;
    v49.size.CGFloat width = v24;
    v49.size.CGFloat height = v25;
    CGRect v50 = CGRectStandardize(v49);
    double v27 = v26 * v50.size.width;
    objc_msgSend(v9, sel_boundingBox, v50.origin.x, v50.origin.y);
    CGFloat v28 = v51.origin.x;
    CGFloat v29 = v51.origin.y;
    CGFloat v30 = v51.size.width;
    CGFloat v31 = v51.size.height;
    CGRect v52 = CGRectStandardize(v51);
    double v32 = v52.size.height;
    v52.origin.CGFloat x = v28;
    v52.origin.CGFloat y = v29;
    v52.size.CGFloat width = v30;
    v52.size.CGFloat height = v31;
    CGRect v53 = CGRectStandardize(v52);
    if (v27 / (v32 * v53.size.width) <= 0.75)
    {
LABEL_13:

      return;
    }
    objc_msgSend(v9, sel_boundingBox);
    if (v8 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v8 < 9.22337204e18)
    {
      if ((*(void *)&v8 & 0x7FF0000000000000) != 0x7FF0000000000000
        && (*(void *)&v7 & 0x7FF0000000000000) != 0x7FF0000000000000)
      {
        if (v7 > -9.22337204e18)
        {
          if (v7 < 9.22337204e18)
          {
            CGRect v54 = VNNormalizedRectForImageRect(*(CGRect *)&v33, (uint64_t)v8, (uint64_t)v7);
            id v37 = objc_msgSend(self, sel_valueWithCGRect_, v54.origin.x, v54.origin.y, v54.size.width, v54.size.height);
            objc_msgSend(a1, sel_setFace_, v37);

            CVPixelBufferLockBaseAddress(a3, 1uLL);
            v43.a = 0.0;
            VTCreateCGImageFromCVPixelBuffer(a3, 0, (CGImageRef *)&v43);
            if (*(void *)&v43.a)
            {
              int64_t v38 = (CGImage *)*(id *)&v43.a;
              objc_msgSend(v9, sel_boundingBox);
              CGImageRef v39 = CGImageCreateWithImageInRect(v38, v55);
              if (v39)
              {
                CGImageRef v40 = v39;
                uint64_t v41 = CVPixelBufferUnlockBaseAddress(a3, 1uLL);
                char v42 = (void *)MEMORY[0x237DE9500](v41);
                sub_23566F9C0(v3, (uint64_t)v40, a1);
              }
            }
            goto LABEL_13;
          }
LABEL_19:
          __break(1u);
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_17;
  }
}

uint64_t sub_235670D20(unint64_t a1, uint64_t a2, __CVBuffer *a3)
{
  long long v114 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  uint64_t v10 = MEMORY[0x270FA5388](v5 - 8, v6, v7, v8, v9);
  uint64_t v113 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v18 = (char *)&v112 - v17;
  uint64_t v23 = MEMORY[0x270FA5388](v16, v19, v20, v21, v22);
  CGFloat v25 = (char *)&v112 - v24;
  MEMORY[0x270FA5388](v23, v26, v27, v28, v29);
  long long v112 = (char *)&v112 - v30;
  unint64_t v31 = sub_23567002C(MEMORY[0x263F8EE78]);
  uint64_t v135 = a2;
  unint64_t v136 = v31;
  if (a1 >> 62) {
    goto LABEL_53;
  }
  uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v32)
  {
LABEL_54:
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
LABEL_3:
  unint64_t v33 = 0;
  unint64_t v121 = a1 & 0xC000000000000001;
  uint64_t v116 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v115 = a1 + 32;
  long long v122 = v18;
  uint64_t v120 = v25;
  uint64_t v119 = v32;
  unint64_t v117 = a1;
  do
  {
    if (v121)
    {
      id v34 = (id)MEMORY[0x237DE87D0](v33, a1);
    }
    else
    {
      if (v33 >= *(void *)(v116 + 16)) {
        goto LABEL_52;
      }
      id v34 = *(id *)(v115 + 8 * v33);
    }
    id v125 = v34;
    if (__OFADD__(v33++, 1)) {
      goto LABEL_50;
    }
    uint64_t v36 = v135;
    int64_t v37 = *(void *)(v135 + 16);
    unint64_t v124 = v33;
    if (v37)
    {
      unint64_t v134 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_235676444(0, v37, 0);
      unint64_t v31 = v134;
      uint64_t v123 = v36;
      int64_t v38 = (double *)(v36 + 80);
      while (1)
      {
        CGImageRef v39 = (void *)*((void *)v38 - 5);
        CGImageRef v40 = (void *)*((void *)v38 - 4);
        uint64_t v41 = (void *)*((void *)v38 - 3);
        CGFloat v42 = *(v38 - 1);
        CGFloat v43 = *v38;
        id v44 = v41;
        swift_bridgeObjectRetain();
        id v45 = v39;
        id v46 = v40;
        objc_msgSend(v125, sel_screenRect);
        CGFloat v48 = v47;
        CGFloat v50 = v49;
        CGFloat v52 = v51;
        CGFloat v54 = v53;
        CGAffineTransformMakeScale(&v132, v42, v43);
        v137.origin.CGFloat x = v48;
        v137.origin.CGFloat y = v50;
        v137.size.CGFloat width = v52;
        v137.size.CGFloat height = v54;
        CGRect v138 = CGRectApplyAffineTransform(v137, &v132);
        CGFloat x = v138.origin.x;
        CGFloat y = v138.origin.y;
        CGFloat width = v138.size.width;
        CGFloat height = v138.size.height;
        if (v40)
        {
          objc_msgSend(v46, sel_boundingBox);
        }
        else
        {
          if (!v41)
          {
            CGFloat v65 = 0.0;
            CGFloat v66 = 0.0;
            CGFloat v63 = 0.0;
            CGFloat v64 = 0.0;
            goto LABEL_18;
          }
          objc_msgSend(v44, sel_boundingBox);
        }
        CGFloat v63 = v59;
        CGFloat v64 = v60;
        CGFloat v65 = v61;
        CGFloat v66 = v62;
LABEL_18:
        v139.origin.CGFloat x = x;
        v139.origin.CGFloat y = y;
        v139.size.CGFloat width = width;
        v139.size.CGFloat height = height;
        v146.origin.CGFloat x = v63;
        v146.origin.CGFloat y = v64;
        v146.size.CGFloat width = v65;
        v146.size.CGFloat height = v66;
        CGRect v140 = CGRectIntersection(v139, v146);
        CGFloat b = x;
        CGFloat v67 = v140.origin.x;
        tCGFloat x = y;
        CGFloat v68 = v140.origin.y;
        CGFloat v127 = width;
        CGFloat v69 = v140.size.width;
        CGFloat v126 = height;
        CGFloat v70 = v140.size.height;
        CGRect v141 = CGRectStandardize(v140);
        double d = v141.size.height;
        v141.origin.CGFloat x = v67;
        v141.origin.CGFloat y = v68;
        v141.size.CGFloat width = v69;
        v141.size.CGFloat height = v70;
        CGRect v142 = CGRectStandardize(v141);
        double c = v142.size.width;
        v142.origin.CGFloat x = b;
        v142.origin.CGFloat y = tx;
        v142.size.CGFloat width = v127;
        v142.size.CGFloat height = v126;
        v147.origin.CGFloat x = v63;
        v147.origin.CGFloat y = v64;
        v147.size.CGFloat width = v65;
        v147.size.CGFloat height = v66;
        CGRect v143 = CGRectUnion(v142, v147);
        CGFloat v71 = v143.origin.x;
        CGFloat v72 = v143.origin.y;
        CGFloat v73 = v143.size.width;
        CGFloat v74 = v143.size.height;
        CGRect v144 = CGRectStandardize(v143);
        double v75 = v144.size.height;
        v144.origin.CGFloat x = v71;
        v144.origin.CGFloat y = v72;
        v144.size.CGFloat width = v73;
        v144.size.CGFloat height = v74;
        CGRect v145 = CGRectStandardize(v144);
        double v76 = v145.size.width;
        swift_bridgeObjectRelease();

        unint64_t v134 = v31;
        unint64_t v78 = *(void *)(v31 + 16);
        unint64_t v77 = *(void *)(v31 + 24);
        if (v78 >= v77 >> 1)
        {
          sub_235676444(v77 > 1, v78 + 1, 1);
          unint64_t v31 = v134;
        }
        double v79 = d * c / (v75 * v76);
        *(void *)(v31 + 16) = v78 + 1;
        *(double *)(v31 + 8 * v78 + 32) = v79;
        v38 += 7;
        if (!--v37)
        {
          swift_bridgeObjectRelease();
          a1 = v117;
          uint64_t v18 = v122;
          CGFloat v25 = v120;
          uint64_t v32 = v119;
          unint64_t v33 = v124;
          unint64_t v80 = *(void *)(v31 + 16);
          if (!v80) {
            goto LABEL_4;
          }
LABEL_26:
          unint64_t v81 = 0;
          unint64_t v82 = 0;
          unint64_t v83 = v31 + 32;
          while (v82 < v80)
          {
            if (*(double *)(v83 + 8 * v82) < *(double *)(v31 + 8 * v81 + 32)) {
              unint64_t v82 = v81;
            }
            if (v80 == ++v81)
            {
              if (v82 >= v80) {
                goto LABEL_51;
              }
              double v84 = *(double *)(v83 + 8 * v82);
              swift_bridgeObjectRelease();
              if (v84 <= 0.5)
              {

                goto LABEL_5;
              }
              sub_235736878(v82, (uint64_t)&v132);
              CGFloat a = v132.a;
              CGFloat b = v132.b;
              double c = v132.c;
              double d = v132.d;
              tCGFloat x = v132.tx;
              tCGFloat y = v132.ty;
              uint64_t v87 = v133;
              uint64_t v88 = *(void *)(v118 + 24);
              if (*(void *)(v88 + 16) && (unint64_t v89 = sub_2358782D4(*(uint64_t *)&v132.a), (v90 & 1) != 0))
              {
                unint64_t v91 = v89;
                uint64_t v92 = *(void *)(v88 + 56);
                uint64_t v93 = sub_235947978();
                uint64_t v94 = *(void *)(v93 - 8);
                (*(void (**)(char *, unint64_t, uint64_t))(v94 + 16))(v25, v92 + *(void *)(v94 + 72) * v91, v93);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v25, 0, 1, v93);
                uint64_t v18 = v122;
              }
              else
              {
                uint64_t v93 = sub_235947978();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v25, 1, 1, v93);
              }
              sub_23567184C((uint64_t)v25, (uint64_t)v18);
              sub_235947978();
              uint64_t v95 = *(void *)(v93 - 8);
              uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
              if (v96(v18, 1, v93) == 1)
              {
                swift_bridgeObjectRetain();
                id v97 = v112;
                sub_235947968();
                sub_2356718B4((uint64_t)v18);
                uint64_t v98 = (uint64_t)v97;
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v98 = (uint64_t)v112;
                (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v112, v18, v93);
              }
              uint64_t v32 = v119;
              id v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56);
              v99(v98, 0, 1, v93);
              sub_2356A5C44(v98, *(uint64_t *)&a);
              unint64_t v100 = v136;
              if (*(void *)(v136 + 16) && (unint64_t v101 = sub_2358782D4(*(uint64_t *)&a), (v102 & 1) != 0))
              {
                unint64_t v103 = *(void *)(v100 + 56) + *(void *)(v95 + 72) * v101;
                __int16 v104 = v113;
                (*(void (**)(char *, unint64_t, uint64_t))(v95 + 16))(v113, v103, v93);
                v99((uint64_t)v104, 0, 1, v93);
                if (v96(v104, 1, v93) != 1)
                {
                  os_log_type_t v105 = v104;
                  uint64_t v106 = (void *)sub_235947938();
                  (*(void (**)(char *, uint64_t))(v95 + 8))(v105, v93);
LABEL_47:
                  uint64_t v18 = v122;
                  CGFloat v25 = v120;
                  id v107 = v125;
                  objc_msgSend(v125, sel_setUuid_, v106);

                  CGFloat v108 = b;
                  v132.CGFloat a = a;
                  v132.CGFloat b = b;
                  double v110 = c;
                  double v109 = d;
                  v132.double c = c;
                  v132.double d = d;
                  v132.tCGFloat x = tx;
                  v132.tCGFloat y = ty;
                  uint64_t v133 = v87;
                  unint64_t v31 = v118;
                  sub_2356709FC(v107, (uint64_t)&v132, v114);
                  swift_bridgeObjectRelease();

                  unint64_t v33 = v124;
                  goto LABEL_5;
                }
              }
              else
              {
                v99((uint64_t)v113, 1, 1, v93);
              }
              uint64_t v106 = 0;
              goto LABEL_47;
            }
          }
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v32 = sub_23594A998();
          if (!v32) {
            goto LABEL_54;
          }
          goto LABEL_3;
        }
      }
    }
    unint64_t v31 = MEMORY[0x263F8EE78];
    unint64_t v80 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v80) {
      goto LABEL_26;
    }
LABEL_4:

    swift_bridgeObjectRelease();
LABEL_5:
    ;
  }
  while (v33 != v32);
  swift_bridgeObjectRelease();
  unint64_t v31 = v136;
LABEL_55:
  swift_bridgeObjectRelease();
  *(void *)(v118 + 24) = v31;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ANSTPersonDetectionManager()
{
  return self;
}

uint64_t method lookup function for ANSTPersonDetectionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ANSTPersonDetectionManager);
}

uint64_t dispatch thunk of ANSTPersonDetectionManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ANSTPersonDetectionManager.computePersonDetectionFromFrame(frame:interfaceOrientation:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ANSTPersonDetectionManager.matchANSTDetections(to:anstDetections:orientation:capturedImage:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t sub_235671740(uint64_t a1)
{
  return a1;
}

_OWORD *sub_23567183C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23567184C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2356718B4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235671914()
{
  return swift_deallocObject();
}

void sub_23567194C(void *a1, uint64_t a2)
{
  sub_23566FBC8(a1, a2, *(id *)(v2 + 16));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_23567196C()
{
  unint64_t result = qword_26880F458;
  if (!qword_26880F458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F458);
  }
  return result;
}

uint64_t sub_2356719C0(_OWORD *a1, uint64_t a2)
{
  *(void *)(v2 + 352) = a2;
  uint64_t v4 = sub_2359496D8();
  *(void *)(v2 + 360) = v4;
  *(void *)(v2 + 368) = *(void *)(v4 - 8);
  *(void *)(v2 + 376) = swift_task_alloc();
  uint64_t v5 = sub_235949738();
  *(void *)(v2 + 384) = v5;
  *(void *)(v2 + 392) = *(void *)(v5 - 8);
  *(void *)(v2 + 400) = swift_task_alloc();
  *(_OWORD *)(v2 + 408) = *a1;
  sub_235949E78();
  *(void *)(v2 + 424) = sub_235949E68();
  uint64_t v7 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_235671B20, v7, v6);
}

uint64_t sub_235671B20()
{
  uint64_t v1 = *(void *)(v0 + 352);
  swift_release();
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x237DEA060](v1 + 16);
  if (v2)
  {
    uint64_t v3 = (char *)v2;
    unint64_t v4 = *(void *)(v0 + 408);
    if (v4 >> 62)
    {
      if (v4 >> 62 == 1)
      {
        uint64_t v5 = v4 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v6 = qword_26AF13B78;
        sub_2359470F8();
        if (v6 != -1) {
          swift_once();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        sub_2359484D8();
        swift_release();
        swift_release();
        if ((*(unsigned char *)(v0 + 435) & 1) != 0
          || (swift_getKeyPath(),
              swift_getKeyPath(),
              sub_2359484D8(),
              swift_release(),
              swift_release(),
              (*(unsigned char *)(v0 + 436) & 1) != 0))
        {
          sub_235673DD4(*(void *)(v0 + 408), *(void **)(v0 + 416));
        }
        else
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_2359484D8();
          swift_release();
          swift_release();
          if (*(unsigned char *)(v0 + 434) == 1)
          {
            unint64_t v20 = *(void *)(v0 + 408);
            CGFloat v63 = *(void **)(v0 + 416);
            uint64_t v21 = *(void *)(v0 + 400);
            uint64_t v65 = *(void *)(v0 + 392);
            uint64_t v22 = *(void *)(v0 + 376);
            uint64_t v67 = *(void *)(v0 + 384);
            uint64_t v23 = *(void *)(v0 + 360);
            uint64_t v24 = *(void *)(v0 + 368);
            sub_23565BC70();
            CGFloat v64 = (void *)sub_23594A288();
            uint64_t v25 = swift_allocObject();
            *(void *)(v25 + 16) = v3;
            *(void *)(v25 + 24) = v5;
            *(void *)(v0 + 48) = sub_235673E34;
            *(void *)(v0 + 56) = v25;
            *(void *)(v0 + 16) = MEMORY[0x263EF8330];
            *(void *)(v0 + 24) = 1107296256;
            *(void *)(v0 + 32) = sub_2357A194C;
            *(void *)(v0 + 40) = &block_descriptor_35;
            uint64_t v26 = _Block_copy((const void *)(v0 + 16));
            uint64_t v27 = v3;
            sub_235673E3C(v20, v63);
            swift_release();
            sub_235949708();
            *(void *)(v0 + 312) = MEMORY[0x263F8EE78];
            sub_23565C0A0();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
            sub_23565C0F8();
            sub_23594A6C8();
            MEMORY[0x237DE8250](0, v21, v22, v26);
            _Block_release(v26);

            (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
            (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v21, v67);
          }
          unint64_t v29 = *(void *)(v0 + 408);
          uint64_t v28 = *(void **)(v0 + 416);
          uint64_t v30 = CMSampleBufferGetImageBuffer(*(CMSampleBufferRef *)(v5 + 16));
          swift_getKeyPath();
          swift_getKeyPath();
          *(void *)(v0 + 320) = v30;
          sub_2359470F8();
          sub_2359484E8();

          sub_235673DD4(v29, v28);
        }
      }
      else
      {
        switch(v4)
        {
          case 0x8000000000000001:
            uint64_t v31 = *(void *)(v0 + 400);
            uint64_t v32 = *(void *)(v0 + 376);
            uint64_t v68 = *(void *)(v0 + 392);
            uint64_t v70 = *(void *)(v0 + 384);
            uint64_t v33 = *(void *)(v0 + 360);
            uint64_t v34 = *(void *)(v0 + 368);
            sub_23565BC70();
            CGFloat v66 = (void *)sub_23594A288();
            uint64_t v35 = swift_allocObject();
            *(void *)(v35 + 16) = v3;
            *(void *)(v0 + 192) = sub_235673E64;
            *(void *)(v0 + 200) = v35;
            *(void *)(v0 + 160) = MEMORY[0x263EF8330];
            *(void *)(v0 + 168) = 1107296256;
            *(void *)(v0 + 176) = sub_2357A194C;
            *(void *)(v0 + 184) = &block_descriptor_47;
            uint64_t v36 = _Block_copy((const void *)(v0 + 160));
            int64_t v37 = v3;
            swift_release();
            sub_235949708();
            *(void *)(v0 + 336) = MEMORY[0x263F8EE78];
            sub_23565C0A0();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
            sub_23565C0F8();
            sub_23594A6C8();
            MEMORY[0x237DE8250](0, v31, v32, v36);
            _Block_release(v36);

            (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
            (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v31, v70);
            break;
          case 0x8000000000000002:
          case 0x8000000000000003:
          case 0x8000000000000004:
          case 0x8000000000000005:
          case 0x8000000000000006:
          case 0x8000000000000007:
          case 0x800000000000000ALL:
          case 0x800000000000000BLL:
          case 0x800000000000000CLL:
          case 0x800000000000000DLL:
          case 0x800000000000000ELL:
          case 0x800000000000000FLL:
          case 0x8000000000000012:
          case 0x8000000000000013:
          case 0x8000000000000014:
          case 0x8000000000000015:
          case 0x8000000000000016:
          case 0x8000000000000017:
          case 0x800000000000001ALL:
          case 0x800000000000001BLL:
          case 0x800000000000001CLL:
          case 0x800000000000001DLL:
          case 0x800000000000001ELL:
          case 0x800000000000001FLL:
            __break(1u);
            JUMPOUT(0x2356729A0);
          case 0x8000000000000008:
            sub_2357C95D4();

            break;
          case 0x8000000000000009:
            if (qword_26880E5C8 != -1) {
              swift_once();
            }
            if (byte_268812C68 == 1) {
              sub_23588E618(0, 0, 0);
            }
            goto LABEL_52;
          case 0x8000000000000010:
            if (objc_msgSend(*(id *)(*(void *)(v2+ OBJC_IVAR____TtC16MagnifierSupport17AppViewController_captureService)+ OBJC_IVAR____TtC16MagnifierSupport17MAGCaptureService_captureSession), sel_isInterrupted))goto LABEL_52; {
            uint64_t v56 = *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService];
            }
            uint64_t v57 = (void *)(v56 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
            swift_beginAccess();
            if (*v57)
            {
              if (*(unsigned char *)(v56 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSessionIsInterrupted) == 1) {
                goto LABEL_52;
              }
            }
            uint64_t v58 = *(void **)&v3[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_sceneEventAnimator];
            if (v58)
            {
              if (objc_msgSend(v58, sel_isRunning)) {
                goto LABEL_52;
              }
            }
            sub_235885B34();
            uint64_t v61 = swift_allocObject();
            *(void *)(v61 + 16) = v3;
            double v62 = v3;
            sub_23588E9E8(1, (uint64_t)sub_235673DAC, v61, 0.0);

            swift_release();
            break;
          case 0x8000000000000011:
            if (qword_26880E3E8 != -1) {
              swift_once();
            }
            uint64_t v42 = sub_235948278();
            __swift_project_value_buffer(v42, (uint64_t)qword_26880F740);
            uint64_t v19 = sub_235948258();
            os_log_type_t v43 = sub_23594A148();
            if (!os_log_type_enabled(v19, v43)) {
              goto LABEL_42;
            }
            id v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v44 = 0;
            id v45 = "Capture Session Controls Became Active";
            goto LABEL_38;
          case 0x8000000000000018:
            if (qword_26880E3E8 != -1) {
              swift_once();
            }
            uint64_t v46 = sub_235948278();
            __swift_project_value_buffer(v46, (uint64_t)qword_26880F740);
            uint64_t v19 = sub_235948258();
            os_log_type_t v43 = sub_23594A148();
            if (!os_log_type_enabled(v19, v43))
            {
LABEL_42:

              goto LABEL_23;
            }
            id v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v44 = 0;
            id v45 = "Capture Session Controls Became Inactive";
LABEL_38:
            _os_log_impl(&dword_235640000, v19, v43, v45, v44, 2u);
            MEMORY[0x237DE9F30](v44, -1, -1);

            break;
          case 0x8000000000000019:
            int64_t v38 = self;
            uint64_t v39 = swift_allocObject();
            *(void *)(v39 + 16) = v3;
            *(void *)(v0 + 144) = sub_235673DA4;
            *(void *)(v0 + 152) = v39;
            *(void *)(v0 + 112) = MEMORY[0x263EF8330];
            *(void *)(v0 + 120) = 1107296256;
            *(void *)(v0 + 128) = sub_2357A194C;
            *(void *)(v0 + 136) = &block_descriptor_6_1;
            CGImageRef v40 = _Block_copy((const void *)(v0 + 112));
            uint64_t v41 = v3;
            swift_release();
            objc_msgSend(v38, sel_animateWithDuration_animations_completion_, v40, 0, 0.2);

            _Block_release(v40);
            break;
          case 0x8000000000000020:
            double v47 = self;
            uint64_t v48 = swift_allocObject();
            *(void *)(v48 + 16) = v3;
            *(void *)(v0 + 96) = sub_235673D84;
            *(void *)(v0 + 104) = v48;
            *(void *)(v0 + 64) = MEMORY[0x263EF8330];
            *(void *)(v0 + 72) = 1107296256;
            *(void *)(v0 + 80) = sub_2357A194C;
            *(void *)(v0 + 88) = &block_descriptor_4;
            double v49 = _Block_copy((const void *)(v0 + 64));
            CGFloat v50 = v3;
            swift_release();
            objc_msgSend(v47, sel_animateWithDuration_animations_completion_, v49, 0, 0.2);
            _Block_release(v49);
            double v51 = (char *)sub_23587EF5C();
            CGFloat v52 = *(void **)&v51[OBJC_IVAR____TtC16MagnifierSupport24CameraTrayViewController_snapshotButtonContextMenuInteraction];
            id v53 = v52;

            if (v52)
            {
              id v54 = sub_23587EF5C();
              id v55 = sub_23580A350();

              objc_msgSend(v55, sel_addInteraction_, v53);
            }
            sub_235885C00();
            sub_235885B34();

            break;
          default:
            CGFloat v69 = (void **)(v0 + 328);
            uint64_t v9 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_captureService)
                          + OBJC_IVAR____TtC16MagnifierSupport17MAGCaptureService_captureDevice);
            swift_getKeyPath();
            swift_getKeyPath();
            *(void *)(v0 + 344) = v9;
            id v10 = v9;
            sub_2359470F8();
            sub_2359484E8();
            if (qword_26AF13B78 != -1) {
              swift_once();
            }
            swift_getKeyPath();
            swift_getKeyPath();
            sub_2359484D8();
            swift_release();
            swift_release();
            int v11 = *(unsigned __int8 *)(v0 + 437);
            swift_getKeyPath();
            swift_getKeyPath();
            sub_2359484D8();
            swift_release();
            swift_release();
            char v12 = *(unsigned char *)(v0 + 432);
            swift_getKeyPath();
            swift_getKeyPath();
            sub_2359484D8();
            swift_release();
            swift_release();
            if (v11 != 1
              || (v12 & 1) != 0
              || (*(unsigned char *)(v0 + 433) & 1) != 0
              || (swift_getKeyPath(),
                  swift_getKeyPath(),
                  sub_2359484D8(),
                  swift_release(),
                  swift_release(),
                  (uint64_t v13 = *v69) == 0))
            {
LABEL_52:
            }
            else
            {
              uint64_t v14 = qword_26AF181E0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__flashlightPercentage;
              swift_beginAccess();
              uint64_t v15 = *(void *)(v14 + 8);
              int v16 = *(_DWORD *)(v14 + 16);
              *(void *)(v0 + 280) = *(void *)v14;
              *(void *)(v0 + 288) = v15;
              *(_DWORD *)(v0 + 296) = v16;
              uint64_t v17 = qword_26AF144C0;
              swift_bridgeObjectRetain();
              if (v17 != -1) {
                swift_once();
              }
              *(void *)(swift_task_alloc() + 16) = v0 + 280;
              sub_23594A2A8();
              swift_bridgeObjectRelease();
              swift_task_dealloc();
              sub_2357B9570(*(float *)(v0 + 300));
            }
            break;
        }
      }
    }
    else
    {
      uint64_t v7 = *(void **)(v0 + 416);
      if (v4)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(void *)(v0 + 304) = v7;
        sub_235673E3C(v4, v7);
        uint64_t v18 = v3;
        sub_235673E3C(v4, v7);
        sub_2359484E8();
        v18[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_captureAttemptDidSucceed] = 1;
        sub_23587F268();
      }
      else
      {
        *(unsigned char *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_captureAttemptDidSucceed) = 0;
        id v8 = v7;
        sub_23587F268();
        sub_23587F4C0(0);
      }
      sub_235673DD4(*(void *)(v0 + 408), *(void **)(v0 + 416));
      uint64_t v19 = *(id *)&v3[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_captureService];

      *((unsigned char *)&v19->isa + OBJC_IVAR____TtC16MagnifierSupport17MAGCaptureService_isCapturingPhoto) = 0;
LABEL_23:
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  double v59 = *(uint64_t (**)(void))(v0 + 8);
  return v59();
}

void sub_235672A24(void *a1)
{
  id v2 = sub_23587F0FC();
  id v3 = objc_msgSend(v2, sel_layer);
  self;
  unint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_setAutomaticallyDimsOverCaptureRegion_, 0);

    objc_msgSend(v5, sel_setOpacity_, 0.0);
    uint64_t v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    aBlock[4] = sub_235673EA0;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2357A194C;
    void aBlock[3] = &block_descriptor_71;
    id v8 = _Block_copy(aBlock);
    id v9 = a1;
    swift_release();
    objc_msgSend(v6, sel_animateWithDuration_animations_, v8, 0.2);
    _Block_release(v8);
  }
  else
  {

    sub_23594A968();
    __break(1u);
  }
}

void sub_235672BD0()
{
  id v0 = sub_23587F0FC();
  id v4 = objc_msgSend(v0, sel_layer);
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClass();
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_setAutomaticallyDimsOverCaptureRegion_, 0);

    LODWORD(v3) = 1.0;
    objc_msgSend(v2, sel_setOpacity_, v3);
  }
  else
  {

    sub_23594A968();
    __break(1u);
  }
}

void sub_235672CC8(uint64_t a1, uint64_t a2)
{
  id v2 = (opaqueCMSampleBuffer *)*(id *)(a2 + 16);
  id v3 = sub_2358A4778(v2);

  if (v3)
  {
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359470F8();
    sub_2359484E8();
  }
  else
  {
    if (qword_26880E3E8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_235948278();
    __swift_project_value_buffer(v4, (uint64_t)qword_26880F740);
    oslog = sub_235948258();
    os_log_type_t v5 = sub_23594A148();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      sub_23594A608();
      _os_log_impl(&dword_235640000, oslog, v5, "%ld NO SAMPLE IMAGE", v6, 0xCu);
      MEMORY[0x237DE9F30](v6, -1, -1);
    }
    else
    {
    }
  }
}

void sub_235672E98(uint64_t a1)
{
  uint64_t v2 = sub_2359496D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  id v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_235949738();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_235949758();
  MEMORY[0x270FA5388](v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25, v26, v27, v28, v29);
  uint64_t v32 = (char *)&v50 - v30;
  if (qword_26AF13B78 != -1)
  {
    uint64_t v57 = a1;
    uint64_t v48 = (char *)&v50 - v30;
    uint64_t v49 = v31;
    swift_once();
    uint64_t v31 = v49;
    uint64_t v32 = v48;
    a1 = v57;
  }
  if (*(unsigned char *)(qword_26AF181E0
                + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_launchedReaderFromShortcut) == 1)
  {
    double v51 = v9;
    uint64_t v52 = v2;
    uint64_t v53 = v31;
    uint64_t v54 = v18;
    uint64_t v55 = v11;
    uint64_t v56 = v10;
    uint64_t v57 = v3;
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock) = 0;
    sub_2359470F8();
    sub_2359484E8();
    uint64_t v33 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_readerModeViewController;
    uint64_t v34 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_readerModeViewController);
    if (v34)
    {
      id v35 = v34;
      objc_msgSend(v35, sel_willMoveToParentViewController_, 0);
      id v50 = self;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v35;
      double v62 = sub_235673EB8;
      uint64_t v63 = v36;
      aBlocuint64_t k = MEMORY[0x263EF8330];
      uint64_t v59 = 1107296256;
      double v60 = sub_2357A194C;
      uint64_t v61 = &block_descriptor_92;
      int64_t v37 = _Block_copy(&aBlock);
      id v38 = v35;
      swift_release();
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v38;
      double v62 = sub_235673EC0;
      uint64_t v63 = v39;
      aBlocuint64_t k = MEMORY[0x263EF8330];
      uint64_t v59 = 1107296256;
      double v60 = sub_23587DD04;
      uint64_t v61 = &block_descriptor_98;
      CGImageRef v40 = _Block_copy(&aBlock);
      id v41 = v38;
      swift_release();
      objc_msgSend(v50, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v37, v40, 0.25, 0.0);
      _Block_release(v40);
      _Block_release(v37);
      uint64_t v42 = *(void **)(a1 + v33);
      *(void *)(a1 + v33) = 0;
    }
    sub_23565BC70();
    os_log_type_t v43 = (void *)sub_23594A288();
    sub_235949748();
    MEMORY[0x237DE7760](v24, 2.0);
    uint64_t v44 = v54;
    uint64_t v53 = *(void *)(v53 + 8);
    ((void (*)(char *, uint64_t))v53)(v24, v54);
    double v62 = sub_235673438;
    uint64_t v63 = 0;
    aBlocuint64_t k = MEMORY[0x263EF8330];
    uint64_t v59 = 1107296256;
    double v60 = sub_2357A194C;
    uint64_t v61 = &block_descriptor_86;
    id v45 = _Block_copy(&aBlock);
    sub_235949708();
    aBlocuint64_t k = MEMORY[0x263F8EE78];
    sub_23565C0A0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
    sub_23565C0F8();
    double v47 = v51;
    uint64_t v46 = v52;
    sub_23594A6C8();
    MEMORY[0x237DE81B0](v32, v17, v47, v45);
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v46);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v56);
    ((void (*)(char *, uint64_t))v53)(v32, v44);
  }
}

uint64_t sub_235673438()
{
  if (qword_26AF13B78 != -1) {
    uint64_t result = swift_once();
  }
  *(unsigned char *)(qword_26AF181E0
           + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_launchedReaderFromShortcut) = 0;
  return result;
}

void sub_235673494(uint64_t a1)
{
  uint64_t v2 = sub_2359496D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  id v9 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__cardPosition;
  swift_beginAccess();
  char v51 = 0;
  if (qword_26AF144C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_2359496C8();
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  *(void *)&v50[-16] = &v51;
  *(void *)&v50[-8] = v10;
  sub_23594A298();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v9, v2);
  swift_endAccess();
  id v16 = sub_23587EBA4();
  id v17 = objc_msgSend(v16, sel_view);
  if (v17)
  {
    uint64_t v18 = v17;
    objc_msgSend(v17, sel_setAlpha_, 0.0);

    id v19 = objc_msgSend(v16, sel_view);
    if (v19)
    {
      uint64_t v20 = v19;
      type metadata accessor for MFPassthroughView();
      uint64_t v21 = swift_dynamicCastClass();
      if (v21) {
        *(unsigned char *)(v21 + OBJC_IVAR____TtC16MagnifierSupport17MFPassthroughView_enabled) = 0;
      }
    }
    else
    {
      uint64_t v20 = v16;
    }

    uint64_t v22 = (char *)sub_23587EBA4();
    uint64_t v23 = (char *)*(id *)&v22[OBJC_IVAR____TtC16MagnifierSupport24MFMainCardViewController_cardContainer];

    id v24 = *(id *)&v23[OBJC_IVAR____TtC16MagnifierSupport19MFCardContainerView_grabberView];
    sub_2357048C8();

    sub_23587CEE0();
    id v25 = sub_23587EF5C();
    id v26 = sub_23580A310();

    id v27 = objc_msgSend(v26, sel_contextMenuInteraction);
    objc_msgSend(v27, sel_dismissMenu);

    id v28 = sub_23587EF5C();
    id v29 = sub_23580A330();

    id v30 = objc_msgSend(v29, sel_contextMenuInteraction);
    objc_msgSend(v30, sel_dismissMenu);

    uint64_t v31 = (char *)sub_23587EF5C();
    uint64_t v32 = *(void **)&v31[OBJC_IVAR____TtC16MagnifierSupport24CameraTrayViewController_snapshotButtonContextMenuInteraction];
    id v33 = v32;

    if (v32)
    {
      id v34 = sub_23587EF5C();
      id v35 = sub_23580A350();

      objc_msgSend(v35, sel_removeInteraction_, v33);
      id v36 = sub_23587EF5C();
      id v37 = sub_23580A350();

      objc_msgSend(v37, sel_setAccessibilityCustomActions_, 0);
    }
    id v38 = (char *)sub_23587EAB0();
    uint64_t v39 = &v38[OBJC_IVAR____TtC16MagnifierSupport20ControlContainerView_buttonMap];
    swift_beginAccess();
    uint64_t v40 = *(void *)v39;
    if (*(void *)(v40 + 16) && (uint64_t v41 = sub_235878318(7), (v42 & 1) != 0))
    {
      os_log_type_t v43 = *(void **)(*(void *)(v40 + 56) + 16 * v41);
      swift_endAccess();
      uint64_t v44 = v43;

      type metadata accessor for MenuButton();
      id v45 = (void *)swift_dynamicCastClass();
      if (v45)
      {
        uint64_t v46 = v44;
        id v47 = sub_235783480();

        id v38 = (char *)objc_msgSend(v47, sel_contextMenuInteraction);
        objc_msgSend(v38, sel_dismissMenu);
      }
      else
      {
        id v38 = v44;
      }
    }
    else
    {
      swift_endAccess();
      id v45 = 0;
    }

    sub_235885C00();
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pipWindowButton), sel_setAlpha_, 0.0);
    uint64_t v48 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_closeButton);
    if (v48)
    {
      id v49 = v48;
      objc_msgSend(v49, sel_setAlpha_, 0.0);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_23567399C()
{
  uint64_t v0 = sub_2359496D8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2, v3, v4, v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__cardPosition;
  swift_beginAccess();
  char v24 = 0;
  if (qword_26AF144C0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_2359496C8();
  MEMORY[0x270FA5388](v9, v10, v11, v12, v13);
  *(void *)&v23[-16] = &v24;
  *(void *)&v23[-8] = v8;
  sub_23594A298();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v7, v0);
  swift_endAccess();
  id v14 = sub_23587EBA4();
  id v15 = objc_msgSend(v14, sel_view);
  if (v15)
  {
    id v16 = v15;
    objc_msgSend(v15, sel_setAlpha_, 1.0);

    id v17 = objc_msgSend(v14, sel_view);
    if (v17)
    {
      uint64_t v18 = v17;
      type metadata accessor for MFPassthroughView();
      uint64_t v19 = swift_dynamicCastClass();
      if (v19) {
        *(unsigned char *)(v19 + OBJC_IVAR____TtC16MagnifierSupport17MFPassthroughView_enabled) = 1;
      }
    }
    else
    {
      uint64_t v18 = v14;
    }

    uint64_t v20 = (char *)sub_23587EBA4();
    uint64_t v21 = (char *)*(id *)&v20[OBJC_IVAR____TtC16MagnifierSupport24MFMainCardViewController_cardContainer];

    id v22 = *(id *)&v21[OBJC_IVAR____TtC16MagnifierSupport19MFCardContainerView_grabberView];
    sub_2357048C8();

    sub_23587CEE0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_235673C58@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_235673CD8()
{
  return sub_2359484E8();
}

uint64_t sub_235673D4C()
{
  return swift_deallocObject();
}

void sub_235673D84()
{
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void sub_235673DA4()
{
  sub_235673494(*(void *)(v0 + 16));
}

void sub_235673DAC()
{
  sub_235672E98(*(void *)(v0 + 16));
}

void sub_235673DD4(unint64_t a1, void *a2)
{
  if (a1 >> 62 == 1)
  {
    swift_release();
  }
  else if (!(a1 >> 62))
  {
  }
}

uint64_t sub_235673DF4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_235673E34()
{
  sub_235672CC8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_235673E3C(unint64_t result, void *a2)
{
  if (result >> 62 == 1) {
    return sub_2359470F8();
  }
  if (!(result >> 62)) {
    return (unint64_t)a2;
  }
  return result;
}

void sub_235673E64()
{
  sub_235672A24(*(void **)(v0 + 16));
}

void sub_235673E84(float *a1@<X8>)
{
  sub_2358B8B7C(*(void *)(v1 + 16), a1);
}

void sub_235673EA0()
{
}

void sub_235673EB8()
{
  sub_2359461F0(*(void **)(v0 + 16));
}

uint64_t sub_235673EC0(int a1)
{
  return sub_2359461EC(a1, *(id *)(v1 + 16));
}

void sub_235673EC8()
{
  sub_2357EEBD8(*(unsigned __int8 **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_235673F34()
{
}

uint64_t sub_235673F4C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF12EA8);
  uint64_t v5 = MEMORY[0x270FA5388](v0 - 8, v1, v2, v3, v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v21 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF156E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23594FD70;
  id v15 = (void *)*MEMORY[0x263EFF688];
  *(void *)(inited + 32) = *MEMORY[0x263EFF688];
  id v16 = v15;
  sub_235676824(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_235947718();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_2359475A8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 0, 1, v17);
  sub_2356779D4((uint64_t)v13, (uint64_t)v7);
  sub_2359475A8();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) == 1)
  {
    sub_23566A3AC((uint64_t)v13, &qword_26AF12EA8);
    sub_23566A3AC((uint64_t)v7, &qword_26AF12EA8);
    return 0;
  }
  else
  {
    uint64_t v19 = sub_235947598();
    sub_23566A3AC((uint64_t)v13, &qword_26AF12EA8);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
  }
  return v19;
}

uint64_t sub_2356741D0@<X0>(uint64_t a1@<X8>)
{
  return sub_2356743F4(&OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory, a1);
}

uint64_t sub_2356741DC(uint64_t a1)
{
  return sub_235674480(a1, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory);
}

uint64_t (*sub_2356741E8())()
{
  return j__swift_endAccess;
}

uint64_t sub_235674248@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  uint64_t v5 = sub_2359477E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a3, v4, v5);
}

uint64_t sub_2356742CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_2359477E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  id v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  uint64_t v16 = *a2 + *a5;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v16, v15, v8);
  return swift_endAccess();
}

uint64_t sub_2356743E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2356743F4(&OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, a1);
}

uint64_t sub_2356743F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  uint64_t v5 = sub_2359477E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_235674474(uint64_t a1)
{
  return sub_235674480(a1, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory);
}

uint64_t sub_235674480(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  uint64_t v5 = sub_2359477E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(v4, a1, v5);
  return swift_endAccess();
}

uint64_t (*sub_235674508())()
{
  return j_j__swift_endAccess;
}

uint64_t MagnifierStillImageStore.__allocating_init(captureService:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  MagnifierStillImageStore.init(captureService:)(a1);
  return v2;
}

uint64_t MagnifierStillImageStore.init(captureService:)(uint64_t a1)
{
  uint64_t v2 = v1;
  v51[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_2359477E8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v4, v6, v7, v8, v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13, v14, v15, v16);
  uint64_t v18 = (char *)&v42 - v17;
  id v19 = objc_msgSend(self, sel_defaultManager);
  v51[0] = 0;
  id v20 = objc_msgSend(v19, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 9, 1, 0, 1, v51);
  id v21 = v51[0];
  if (v20)
  {
    id v22 = v20;
    uint64_t v44 = a1;
    sub_235947798();
    id v23 = v21;

    swift_beginAccess();
    if (qword_268813E08)
    {
      sub_2359470F8();
      sub_235948008();
      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v12, v4);
    }
    uint64_t v46 = v18;
    sub_235947778();
    uint64_t v47 = v2;
    uint64_t v24 = v2 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory;
    os_log_type_t v43 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
    v43(v2 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory, v12, v4);
    swift_beginAccess();
    id v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v25(v12, v24, v4);
    sub_2359477C8();
    id v45 = *(void (**)(char *, uint64_t))(v5 + 8);
    v45(v12, v4);
    id v26 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    unsigned __int8 v27 = objc_msgSend(v19, sel_fileExistsAtPath_, v26);

    if ((v27 & 1) != 0
      || (v25(v12, v24, v4),
          id v28 = (void *)sub_235947758(),
          v45(v12, v4),
          v50[0] = 0,
          unsigned int v29 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v28, 1, 0, v50), v28, v30 = v50[0], v29))
    {
      sub_235947778();
      uint64_t v31 = v47 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory;
      v43(v47 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, v12, v4);
      swift_beginAccess();
      v25(v12, v31, v4);
      sub_2359477C8();
      uint64_t v32 = v45;
      v45(v12, v4);
      id v33 = (void *)sub_235949A88();
      swift_bridgeObjectRelease();
      unsigned __int8 v34 = objc_msgSend(v19, sel_fileExistsAtPath_, v33);

      if ((v34 & 1) != 0
        || (v25(v12, v31, v4),
            id v35 = (void *)sub_235947758(),
            v32(v12, v4),
            id v48 = 0,
            v36 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v35, 1, 0, &v48), v35, id v37 = v48, v36))
      {
        v32(v46, v4);

        uint64_t result = v47;
        *(void *)(v47 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_captureService) = v44;
        return result;
      }
      uint64_t v41 = v37;
      sub_235947678();

      swift_willThrow();
      v32(v46, v4);
    }
    else
    {
      uint64_t v40 = v30;
      sub_235947678();

      swift_willThrow();
      v45(v46, v4);
    }
  }
  else
  {
    id v39 = v51[0];
    sub_235947678();

    swift_willThrow();
  }
  id v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  sub_23594A7F8();
  swift_bridgeObjectRelease();
  id v48 = (id)0xD000000000000017;
  unint64_t v49 = 0x800000023596B890;
  swift_getErrorValue();
  sub_23594AC58();
  sub_235949BD8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_23594A968();
  __break(1u);
  return result;
}

void sub_235674BB0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_235947908();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2359477E8();
  uint64_t v93 = *(void *)(v13 - 8);
  uint64_t v94 = (char *)v13;
  uint64_t v18 = MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
  id v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18, v21, v22, v23, v24);
  unint64_t v92 = (unint64_t)&v85 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF12EB0);
  MEMORY[0x270FA5388](v26 - 8, v27, v28, v29, v30);
  uint64_t v32 = (char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = objc_msgSend(a1, sel_fileDataRepresentation);
  if (!v33)
  {
    sub_2356761B8();
    swift_allocError();
    *uint64_t v46 = 0;
    swift_willThrow();
    return;
  }
  unsigned __int8 v34 = v33;
  uint64_t v88 = v2;
  uint64_t v89 = v6;
  uint64_t v35 = sub_235947818();
  id v37 = v36;

  sub_23567620C(v35, (unint64_t)v37);
  if (qword_26880E5C8 != -1) {
    swift_once();
  }
  uint64_t v90 = v5;
  if (byte_268812C68 != 1)
  {
    sub_235676264(v35, (unint64_t)v37);
    goto LABEL_11;
  }
  id v38 = objc_allocWithZone(MEMORY[0x263F827E8]);
  sub_23567620C(v35, (unint64_t)v37);
  id v39 = (void *)sub_235947808();
  id v40 = objc_msgSend(v38, sel_initWithData_, v39);
  sub_235676264(v35, (unint64_t)v37);

  if (!v40)
  {
    sub_23567196C();
    swift_allocError();
    *(void *)uint64_t v73 = 0xD000000000000029;
    *(void *)(v73 + 8) = 0x800000023596B8B0;
    *(void *)(v73 + 16) = 0;
    *(unsigned char *)(v73 + 24) = 2;
    swift_willThrow();
LABEL_28:
    sub_235676264(v35, (unint64_t)v37);
    uint64_t v63 = v35;
    unint64_t v64 = (unint64_t)v37;
    goto LABEL_29;
  }
  id v41 = objc_msgSend(v40, sel_CGImage);
  if (!v41)
  {
    sub_23567196C();
    swift_allocError();
    *(void *)uint64_t v74 = 0xD00000000000002BLL;
    *(void *)(v74 + 8) = 0x800000023596B8E0;
    *(void *)(v74 + 16) = 0;
    *(unsigned char *)(v74 + 24) = 2;
    swift_willThrow();

    goto LABEL_28;
  }
  uint64_t v42 = v41;

  sub_235676264(v35, (unint64_t)v37);
  os_log_type_t v43 = *(char **)(*(void *)&v91[OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_captureService]
                 + OBJC_IVAR____TtC16MagnifierSupport17MAGCaptureService_videoDeviceRotationCoordinator);
  char v86 = v43;
  uint64_t v87 = a2;
  if (v43)
  {
    objc_msgSend(v43, sel_videoRotationAngleForHorizonLevelCapture);
    double v45 = v44;
  }
  else
  {
    double v45 = 0.0;
  }
  double v75 = v42;
  uint64_t v85 = v35;
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  if (v96 != 4)
  {
    if (v86)
    {
      if (v45 == 90.0)
      {
        uint64_t v76 = 3;
        goto LABEL_50;
      }
      if (v45 == 180.0)
      {
        uint64_t v76 = 1;
        goto LABEL_50;
      }
      if (v45 == 270.0)
      {
        uint64_t v76 = 2;
        goto LABEL_50;
      }
    }
    uint64_t v76 = 0;
    goto LABEL_50;
  }
  if (!v86)
  {
LABEL_46:
    uint64_t v76 = 4;
    goto LABEL_50;
  }
  if (v45 != 90.0)
  {
    if (v45 == 180.0)
    {
      uint64_t v76 = 5;
      goto LABEL_50;
    }
    if (v45 == 270.0)
    {
      uint64_t v76 = 7;
      goto LABEL_50;
    }
    goto LABEL_46;
  }
  uint64_t v76 = 6;
LABEL_50:
  unint64_t v77 = (UIImage *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_initWithCGImage_scale_orientation_, v42, v76, 1.0);
  unint64_t v78 = UIImageJPEGRepresentation(v77, 1.0);
  if (!v78)
  {
    sub_23567196C();
    swift_allocError();
    *(void *)uint64_t v84 = 0xD000000000000038;
    *(void *)(v84 + 8) = 0x800000023596B910;
    *(void *)(v84 + 16) = 0;
    *(unsigned char *)(v84 + 24) = 2;
    swift_willThrow();

    sub_235676264(v85, (unint64_t)v37);
    return;
  }
  double v79 = v78;
  uint64_t v80 = sub_235947818();
  unint64_t v81 = v77;
  uint64_t v35 = v80;
  unint64_t v83 = v82;

  sub_235676264(v85, (unint64_t)v37);
  id v37 = v83;
  a2 = v87;
LABEL_11:
  char v86 = v20;
  id v47 = objc_msgSend(a1, sel_processedFileType, v85);
  uint64_t v87 = a2;
  if (v47 && (id v48 = v47, v49 = sub_2358FBE3C(), v51 = v50, v48, v51))
  {
    uint64_t v52 = v35;
  }
  else
  {
    uint64_t v52 = v35;
    swift_bridgeObjectRelease();
    uint64_t v49 = 6778986;
  }
  uint64_t v53 = (uint64_t)&v91[OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory];
  swift_beginAccess();
  uint64_t v54 = *(char **)(v93 + 16);
  ((void (*)(unint64_t, uint64_t, char *))v54)(v92, v53, v94);
  sub_2359478F8();
  sub_2359478B8();
  double v56 = v55;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v12, v90);
  double v57 = round(v56 * 1000.0);
  if ((~*(void *)&v57 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_54;
  }
  if (v57 <= -9.22337204e18)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v57 < 9.22337204e18)
  {
    unint64_t v91 = v54;
    uint64_t v95 = (uint64_t)v57;
    sub_23594AB48();
    uint64_t v53 = v52;
    unint64_t v58 = v92;
    sub_2358FC068((uint64_t)v37, (uint64_t)v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v59 = v93;
    unint64_t v60 = (unint64_t)v37;
    id v37 = *(void (**)(unint64_t, char *))(v93 + 8);
    unint64_t v61 = v58;
    uint64_t v54 = v94;
    v37(v61, v94);
    if ((*(unsigned int (**)(char *, uint64_t, char *))(v59 + 48))(v32, 1, v54) == 1)
    {
      sub_23566A3AC((uint64_t)v32, (uint64_t *)&unk_26AF12EB0);
      sub_2356761B8();
      swift_allocError();
      *double v62 = 0;
      swift_willThrow();
      uint64_t v63 = v52;
      unint64_t v64 = v60;
LABEL_29:
      sub_235676264(v63, v64);
      return;
    }
    unint64_t v92 = v60;
    uint64_t v49 = v87;
    (*(void (**)(uint64_t, char *, char *))(v59 + 32))(v87, v32, v54);
    if (qword_26880E410 == -1) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  swift_once();
LABEL_21:
  uint64_t v65 = sub_235948278();
  __swift_project_value_buffer(v65, (uint64_t)qword_26880F7B8);
  CGFloat v66 = v86;
  ((void (*)(char *, uint64_t, char *))v91)(v86, v49, v54);
  uint64_t v67 = sub_235948258();
  os_log_type_t v68 = sub_23594A148();
  if (os_log_type_enabled(v67, v68))
  {
    CGFloat v69 = (uint8_t *)swift_slowAlloc();
    uint64_t v85 = v53;
    uint64_t v70 = v69;
    *(_DWORD *)CGFloat v69 = 134217984;
    double v71 = (double)sub_235673F4C() * 0.000000953674316;
    if (v72) {
      double v71 = -0.000000953674316;
    }
    uint64_t v95 = *(void *)&v71;
    sub_23594A608();
    v37((unint64_t)v66, v54);
    _os_log_impl(&dword_235640000, v67, v68, "Saved file with size: %f MB", v70, 0xCu);
    MEMORY[0x237DE9F30](v70, -1, -1);

    sub_235676264(v85, v92);
  }
  else
  {
    v37((unint64_t)v66, v54);
    sub_235676264(v53, v92);
  }
}

id sub_2356755A0()
{
  v112[9] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_235948188();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3, v4, v5, v6);
  char v86 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_2359475A8();
  uint64_t v8 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91, v9, v10, v11, v12);
  os_log_type_t v105 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14800);
  MEMORY[0x270FA5388](v14 - 8, v15, v16, v17, v18);
  id v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF12EB0);
  MEMORY[0x270FA5388](v21 - 8, v22, v23, v24, v25);
  double v110 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_2359477E8();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v27, v29, v30, v31, v32);
  uint64_t v85 = (char *)&v83 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v33, v35, v36, v37, v38);
  unint64_t v111 = (char *)&v83 - v40;
  MEMORY[0x270FA5388](v39, v41, v42, v43, v44);
  uint64_t v46 = (char *)&v83 - v45;
  id v47 = objc_msgSend(self, sel_defaultManager);
  uint64_t v48 = v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory;
  swift_beginAccess();
  uint64_t v106 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v107 = v28 + 16;
  v106(v46, v48, v27);
  uint64_t v49 = (void *)sub_235947758();
  uint64_t v109 = v28;
  uint64_t v50 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v97 = v28 + 8;
  char v96 = v50;
  v50(v46, v27);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF156E0);
  uint64_t v51 = swift_allocObject();
  long long v103 = xmmword_23594FD70;
  *(_OWORD *)(v51 + 16) = xmmword_23594FD70;
  uint64_t v52 = (void *)*MEMORY[0x263EFF608];
  *(void *)(v51 + 32) = *MEMORY[0x263EFF608];
  type metadata accessor for URLResourceKey(0);
  uint64_t v54 = v53;
  id v101 = v52;
  uint64_t v102 = v54;
  double v55 = (void *)sub_235949D58();
  swift_bridgeObjectRelease();
  v112[0] = 0;
  id v56 = objc_msgSend(v47, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v49, v55, 7, v112);

  id v57 = v112[0];
  if (v56)
  {
    uint64_t v58 = v8;
    uint64_t v93 = v27;
    uint64_t v59 = sub_235949D78();

    v112[0] = (id)MEMORY[0x263F8EE78];
    uint64_t v100 = *(void *)(v59 + 16);
    if (v100)
    {
      uint64_t v89 = v20;
      uint64_t v90 = v1;
      unint64_t v60 = 0;
      uint64_t v61 = v109;
      uint64_t v98 = v109 + 48;
      CGFloat v108 = (void (**)(char *, uint64_t, uint64_t))(v109 + 32);
      uint64_t v88 = (void (**)(char *, uint64_t))(v58 + 8);
      uint64_t v87 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
      uint64_t v84 = (void (**)(char *, uint64_t))(v2 + 8);
      uint64_t v99 = v109 + 56;
      unint64_t v83 = (v109 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v62 = (uint64_t)v110;
      uint64_t v63 = v93;
      uint64_t v95 = v59;
      while (1)
      {
        if (v60 >= *(void *)(v59 + 16)) {
          __break(1u);
        }
        unint64_t v64 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
        uint64_t v65 = *(void *)(v61 + 72);
        v106((char *)v62, v59 + v64 + v65 * v60, v63);
        uint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
        v94(v62, 0, 1, v63);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v62, 1, v63) == 1) {
          goto LABEL_19;
        }
        CGFloat v66 = *v108;
        (*v108)(v111, v62, v63);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v103;
        os_log_type_t v68 = v101;
        *(void *)(inited + 32) = v101;
        id v69 = v68;
        sub_235676824(inited);
        swift_setDeallocating();
        uint64_t v70 = v105;
        swift_arrayDestroy();
        sub_235947718();
        unint64_t v92 = (void (*)(char *, char *, uint64_t))v66;
        swift_bridgeObjectRelease();
        uint64_t v71 = (uint64_t)v89;
        sub_235947588();
        (*v88)(v70, v91);
        uint64_t v72 = v90;
        if ((*v87)(v71, 1, v90) == 1)
        {
          sub_23566A3AC(v71, &qword_26AF14800);
        }
        else
        {
          uint64_t v73 = v86;
          sub_235948158();
          char v74 = sub_235948178();
          double v75 = *v84;
          (*v84)(v73, v72);
          v75((char *)v71, v72);
          if (v74)
          {
            uint64_t v63 = v93;
            v92(v85, v111, v93);
            uint64_t v76 = (char *)v112[0];
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v59 = v95;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2356763E4(0, *((void *)v76 + 2) + 1, 1);
              uint64_t v76 = (char *)v112[0];
            }
            unint64_t v79 = *((void *)v76 + 2);
            unint64_t v78 = *((void *)v76 + 3);
            if (v79 >= v78 >> 1)
            {
              sub_2356763E4(v78 > 1, v79 + 1, 1);
              uint64_t v76 = (char *)v112[0];
            }
            *((void *)v76 + 2) = v79 + 1;
            v92(&v76[v64 + v79 * v65], v85, v63);
            v112[0] = v76;
            uint64_t v61 = v109;
            uint64_t v62 = (uint64_t)v110;
            goto LABEL_15;
          }
        }
        uint64_t v62 = (uint64_t)v110;
        uint64_t v63 = v93;
        uint64_t v61 = v109;
        uint64_t v59 = v95;
        v96(v111, v93);
LABEL_15:
        if (v100 == ++v60)
        {
          v94(v62, 1, 1, v63);
          goto LABEL_19;
        }
      }
    }
    uint64_t v62 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v110, 1, 1, v93);
LABEL_19:
    swift_bridgeObjectRelease();
    sub_23566A3AC(v62, (uint64_t *)&unk_26AF12EB0);
    return v112[0];
  }
  else
  {
    uint64_t v80 = v57;
    unint64_t v81 = (void *)sub_235947678();

    swift_willThrow();
    return (id)MEMORY[0x263F8EE78];
  }
}

uint64_t MagnifierStillImageStore.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory;
  uint64_t v2 = sub_2359477E8();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, v2);

  return v0;
}

uint64_t MagnifierStillImageStore.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory;
  uint64_t v2 = sub_2359477E8();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, v2);

  return swift_deallocClassInstance();
}

void sub_235675FE0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

id sub_235676004()
{
  return sub_2356755A0();
}

uint64_t sub_235676028@<X0>(uint64_t a1@<X8>)
{
  return sub_235676040(&OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory, a1);
}

uint64_t sub_235676034@<X0>(uint64_t a1@<X8>)
{
  return sub_235676040(&OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, a1);
}

uint64_t sub_235676040@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2 + *a1;
  swift_beginAccess();
  uint64_t v5 = sub_2359477E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2356760C4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_235676144()
{
  return sub_2359484E8();
}

unint64_t sub_2356761B8()
{
  unint64_t result = qword_26880F4A0;
  if (!qword_26880F4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F4A0);
  }
  return result;
}

uint64_t sub_23567620C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    sub_2359470F8();
  }
  return sub_2359470F8();
}

uint64_t sub_235676264(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2356762C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E75D8(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356762E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E7740(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676304(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E774C(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676324(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E78D8(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676344(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E7A64(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676364(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E7BF0(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676384(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E7D4C(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356763A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E7EAC(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356763C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8018(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356763E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8198(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676404(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E81B8(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676424(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8328(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676444(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8334(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676464(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8494(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676484(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E862C(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356764A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8638(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356764C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8788(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356764E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E88E8(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676504(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8908(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676524(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8A7C(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676544(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8BDC(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676564(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8D80(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676584(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8184(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356765A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E8F04(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356765C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9098(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_2356765E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E92EC(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676604(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9300(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676624(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E947C(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676644(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E949C(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676664(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E7734(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676684(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E930C(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356766A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9608(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356766C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9470(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_2356766E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9318(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676704(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E961C(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676724(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9908(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676744(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9A94(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676764(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9AB4(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676784(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9AC8(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_2356767A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E977C(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_2356767C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9ADC(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_2356767E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9C80(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_235676804(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2356E9EE8(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_235676824(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880F4E0);
    uint64_t v3 = sub_23594A7E8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_235949AC8();
      sub_23594ACD8();
      id v7 = v6;
      sub_235949B88();
      uint64_t v8 = sub_23594AD28();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_235949AC8();
        uint64_t v17 = v16;
        if (v15 == sub_235949AC8() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_23594AB78();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_235949AC8();
          uint64_t v24 = v23;
          if (v22 == sub_235949AC8() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_23594AB78();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_235676A54(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_23594A998();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880F4B0);
      uint64_t result = sub_23594A7E8();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_23594A998();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x237DE87D0](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    sub_235948448();
    sub_23567798C(&qword_26880F4B8, MEMORY[0x263EFDD18]);
    uint64_t result = sub_235949998();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_23567798C(&qword_26880F4C0, MEMORY[0x263EFDD18]);
      do
      {
        uint64_t result = sub_235949A18();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = sub_2359470F8();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_235676D08(uint64_t a1)
{
  uint64_t v2 = sub_235947978();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  unint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v11, v12, v13, v14);
  uint64_t v45 = (char *)&v38 - v15;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880F4D0);
    uint64_t v17 = sub_23594A7E8();
    uint64_t v18 = 0;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v19 = v3 + 16;
    uint64_t v43 = v20;
    uint64_t v44 = v17 + 56;
    uint64_t v21 = *(unsigned __int8 *)(v19 + 64);
    uint64_t v40 = v16;
    uint64_t v41 = a1 + ((v21 + 32) & ~v21);
    uint64_t v22 = *(void *)(v19 + 56);
    uint64_t v23 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v39 = (uint64_t (**)(unint64_t, char *, uint64_t))(v19 + 16);
    while (1)
    {
      uint64_t v42 = v18;
      v43(v45, v41 + v22 * v18, v2);
      sub_23567798C((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
      uint64_t v24 = sub_235949998();
      uint64_t v25 = ~(-1 << *(unsigned char *)(v17 + 32));
      unint64_t v26 = v24 & v25;
      unint64_t v27 = (v24 & (unint64_t)v25) >> 6;
      uint64_t v28 = *(void *)(v44 + 8 * v27);
      uint64_t v29 = 1 << (v24 & v25);
      if ((v29 & v28) != 0)
      {
        while (1)
        {
          uint64_t v30 = v19;
          v43(v9, *(void *)(v17 + 48) + v26 * v22, v2);
          sub_23567798C((unint64_t *)&unk_2688105B0, MEMORY[0x263F07508]);
          char v31 = sub_235949A18();
          uint64_t v32 = *v23;
          (*v23)(v9, v2);
          if (v31) {
            break;
          }
          unint64_t v26 = (v26 + 1) & v25;
          unint64_t v27 = v26 >> 6;
          uint64_t v28 = *(void *)(v44 + 8 * (v26 >> 6));
          uint64_t v29 = 1 << v26;
          uint64_t v19 = v30;
          if ((v28 & (1 << v26)) == 0) {
            goto LABEL_8;
          }
        }
        v32(v45, v2);
        uint64_t v19 = v30;
      }
      else
      {
LABEL_8:
        uint64_t v33 = v45;
        *(void *)(v44 + 8 * v27) = v29 | v28;
        uint64_t result = (*v39)(*(void *)(v17 + 48) + v26 * v22, v33, v2);
        uint64_t v35 = *(void *)(v17 + 16);
        BOOL v36 = __OFADD__(v35, 1);
        uint64_t v37 = v35 + 1;
        if (v36)
        {
          __break(1u);
          return result;
        }
        *(void *)(v17 + 16) = v37;
      }
      uint64_t v18 = v42 + 1;
      if (v42 + 1 == v40) {
        return v17;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_235677020@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_235674248(a1, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory, a2);
}

uint64_t sub_235677040(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2356742CC(a1, a2, a3, a4, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory);
}

uint64_t sub_235677060@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_235674248(a1, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, a2);
}

uint64_t sub_235677080(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2356742CC(a1, a2, a3, a4, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory);
}

uint64_t sub_2356770A0()
{
  return type metadata accessor for MagnifierStillImageStore();
}

uint64_t type metadata accessor for MagnifierStillImageStore()
{
  uint64_t result = qword_26AF12F00;
  if (!qword_26AF12F00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2356770F4()
{
  uint64_t result = sub_2359477E8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MagnifierStillImageStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MagnifierStillImageStore);
}

uint64_t dispatch thunk of MagnifierStillImageStore.imageDirectory.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.imageDirectory.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.imageDirectory.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.thumbnailDirectory.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.thumbnailDirectory.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.thumbnailDirectory.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.__allocating_init(captureService:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.saveAVCapturePhoto(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.imageURLs.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

unsigned char *storeEnumTagSinglePayload for MagnifierStillImageStore.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2356773C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MagnifierStillImageStore.Error()
{
  return &type metadata for MagnifierStillImageStore.Error;
}

unint64_t sub_2356773FC()
{
  unint64_t result = qword_26880F4A8;
  if (!qword_26880F4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F4A8);
  }
  return result;
}

uint64_t sub_235677450(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268810680);
    uint64_t v3 = sub_23594A7E8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unsigned int v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_23594ACD8();
      swift_bridgeObjectRetain();
      sub_235949B88();
      uint64_t result = sub_23594AD28();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_23594AB78(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_23594AB78();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_2356775F4(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880F4C8);
      uint64_t v3 = sub_23594A7E8();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_23594A998();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v40 = v1;
    while (1)
    {
      uint64_t v9 = MEMORY[0x237DE87D0](v8, v1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_23594A4A8();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_23567794C();
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_23594A4B8();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v1 = v40;
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_23594A4B8();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v40;
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v1 + 32 + 8 * v25);
    uint64_t v27 = sub_23594A4A8();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_23567794C();
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_23594A4B8();

      if (v34) {
        goto LABEL_24;
      }
      uint64_t v35 = ~v28;
      unint64_t v29 = (v29 + 1) & v35;
      unint64_t v30 = v29 >> 6;
      uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
      uint64_t v32 = 1 << v29;
      if ((v31 & (1 << v29)) != 0)
      {
        while (1)
        {
          id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
          char v37 = sub_23594A4B8();

          if (v37) {
            break;
          }
          unint64_t v29 = (v29 + 1) & v35;
          unint64_t v30 = v29 >> 6;
          uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
          uint64_t v32 = 1 << v29;
          if ((v31 & (1 << v29)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v5 = v42;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v5 = v42;
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

unint64_t sub_23567794C()
{
  unint64_t result = qword_268813B90;
  if (!qword_268813B90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268813B90);
  }
  return result;
}

uint64_t sub_23567798C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2356779D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF12EA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_235677A40()
{
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  unint64_t v2 = (void *)sub_235949A88();
  uint64_t v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  uint64_t v5 = sub_235949AC8();
  swift_bridgeObjectRelease();

  return v5;
}

void sub_235677BBC(void *a1@<X8>)
{
  *a1 = &unk_26E8BD570;
}

uint64_t sub_235677BCC()
{
  return sub_235949D38();
}

uint64_t sub_235677C2C()
{
  return sub_235949D08();
}

uint64_t sub_235677C7C()
{
  uint64_t v1 = 0x6E65657267;
  if (*v0 != 1) {
    uint64_t v1 = 1702194274;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 6579570;
  }
}

uint64_t sub_235677CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23567D194(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_235677CEC()
{
  return 0;
}

void sub_235677CF8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_235677D04(uint64_t a1)
{
  unint64_t v2 = sub_23567D4E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_235677D40(uint64_t a1)
{
  unint64_t v2 = sub_23567D4E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_235677D7C(void *a1, double a2, double a3, double a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15600);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23567D4E4();
  sub_23594AD78();
  double v19 = a2;
  HIBYTE(v18) = 0;
  sub_23567D58C();
  sub_23594AB18();
  if (!v4)
  {
    double v19 = a3;
    HIBYTE(v18) = 1;
    sub_23594AB18();
    double v19 = a4;
    HIBYTE(v18) = 2;
    sub_23594AB18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

void sub_235677F54(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_23567D2C4(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
}

uint64_t sub_235677F84(void *a1)
{
  return sub_235677D7C(a1, *v1, v1[1], v1[2]);
}

BOOL sub_235677FA4(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_235677FD4(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 3:
    case 4:
    case 6:
      return v1;
    default:
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      double v4 = (void *)sub_235949A88();
      uint64_t v5 = (void *)sub_235949A88();
      id v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

      uint64_t v1 = sub_235949AC8();
      break;
  }
  return v1;
}

uint64_t sub_2356781F4(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  switch(a1)
  {
    case 1u:
    case 3u:
    case 5u:
    case 6u:
      goto LABEL_6;
    case 2u:
      uint64_t v2 = (void *)sub_235949A88();
      v11[4] = sub_2358D096C;
      void v11[5] = 0;
      v11[0] = MEMORY[0x263EF8330];
      v11[1] = 1107296256;
      v11[2] = sub_2358D0A54;
      void v11[3] = &block_descriptor_5;
      id v3 = _Block_copy(v11);
      id v4 = (id)AXLocStringForDeviceVariant();
      _Block_release(v3);

      if (!v4)
      {
        __break(1u);
        JUMPOUT(0x235678688);
      }
      uint64_t v1 = sub_235949AC8();

      break;
    case 4u:
      if (AXDeviceSupportsBackTap())
      {
LABEL_6:
        type metadata accessor for MAGUtilities();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        uint64_t v7 = (void *)sub_235949A88();
        uint64_t v8 = (void *)sub_235949A88();
        id v9 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, 0, v8);

        uint64_t v1 = sub_235949AC8();
      }
      else
      {
        uint64_t v1 = 0;
      }
      break;
    default:
      return v1;
  }
  return v1;
}

id sub_2356786A4()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15490);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  id v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14E90);
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14CE0);
  uint64_t v54 = *(void *)(v16 - 8);
  uint64_t v55 = v16;
  MEMORY[0x270FA5388](v16, v17, v18, v19, v20);
  char v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62.receiver = v0;
  v62.super_class = ObjectType;
  uint64_t v51 = ObjectType;
  objc_msgSendSuper2(&v62, sel_viewDidLoad);
  uint64_t v23 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_tableView];
  objc_msgSend(v23, sel_setDataSource_, v0);
  objc_msgSend(v23, sel_setDelegate_, v0);
  sub_2356594B0(0, (unint64_t *)&qword_26880EB00);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v25 = (void *)sub_235949A88();
  objc_msgSend(v23, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v25);

  type metadata accessor for UIStepperLengthCell();
  uint64_t v26 = swift_getObjCClassFromMetadata();
  uint64_t v27 = (void *)sub_235949A88();
  objc_msgSend(v23, sel_registerClass_forCellReuseIdentifier_, v26, v27);

  uint64_t v28 = (void *)sub_235949A88();
  objc_msgSend(v23, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v28);

  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v30 = result;
  objc_msgSend(result, sel_addSubview_, v23);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v31 = result;
  sub_23592C7F4(result, *MEMORY[0x263F834E8], *(double *)(MEMORY[0x263F834E8] + 8), *(double *)(MEMORY[0x263F834E8] + 16), *(double *)(MEMORY[0x263F834E8] + 24));
  swift_bridgeObjectRelease();

  uint64_t v32 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_colorPickerController];
  objc_msgSend(v32, sel_setSupportsAlpha_, 0);
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionColor;
  swift_beginAccess();
  char v34 = *(void **)(v33 + 8);
  uint64_t v35 = *(_UNKNOWN ***)(v33 + 32);
  long long v36 = *(_OWORD *)(v33 + 16);
  v56[0] = *(id *)v33;
  v56[1] = v34;
  long long v57 = v36;
  uint64_t v58 = v35;
  uint64_t v37 = qword_26AF144C0;
  uint64_t v38 = swift_bridgeObjectRetain();
  if (v37 != -1) {
    uint64_t v38 = swift_once();
  }
  MEMORY[0x270FA5388](v38, v39, v40, v41, v42);
  *(&v51 - 2) = (objc_class *)v56;
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, v59, v60, v61, 1.0);
  objc_msgSend(v32, sel_setSelectedColor_, v43);

  objc_msgSend(v32, sel_setDelegate_, v1);
  uint64_t v44 = *(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_doorAttributesController];
  *((void *)&v57 + 1) = v51;
  uint64_t v58 = &off_26E8C13C8;
  v56[0] = v1;
  uint64_t v45 = v44 + OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_delegate;
  swift_beginAccess();
  uint64_t v46 = v1;
  sub_23567F140((uint64_t)v56, v45);
  swift_endAccess();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14F70);
  sub_2359484A8();
  swift_endAccess();
  v56[0] = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v47 = sub_23594A5A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v9, 1, 1, v47);
  sub_2356594B0(0, (unint64_t *)&unk_26AF154B0);
  sub_2356595F4((unint64_t *)&unk_26AF14E80, &qword_26AF14E90);
  sub_2356594EC();
  uint64_t v48 = v53;
  sub_235948568();
  sub_23566A3AC((uint64_t)v9, (uint64_t *)&unk_26AF15490);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v48);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2356595F4((unint64_t *)&unk_26AF14CD0, &qword_26AF14CE0);
  uint64_t v49 = v55;
  uint64_t v50 = sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v49);
  *(void *)&v46[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_speechFeedbackSubscription] = v50;
  return (id)swift_release();
}

void sub_235678E00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_235947B38();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x237DEA060](a2 + 16);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (v16[7] == 1)
    {
      objc_msgSend(v12, sel_beginUpdates);
      MEMORY[0x237DE5A70](1, 2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880EB10);
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_23594FD70;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 16))(v14 + v13, v10, v3);
      uint64_t v15 = (void *)sub_235949D58();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_reloadRowsAtIndexPaths_withRowAnimation_, v15, 100);

      objc_msgSend(v12, sel_endUpdates);
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v10, v3);
    }
    else
    {
    }
  }
}

void sub_235679090(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v6 = (void *)sub_235949A88();
  uint64_t v7 = (void *)sub_235949A88();
  id v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_235949AC8();
  uint64_t v9 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);
}

id sub_235679258(uint64_t a1, uint64_t a2, void *a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v3;
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  do
  {
    int v10 = byte_26E8BD5C0[v6 + 32];
    if (v10 != 3) {
      goto LABEL_10;
    }
    if (qword_26880E5D0 != -1) {
      swift_once();
    }
    if (byte_268812C69 == 1)
    {
LABEL_10:
      uint64_t v25 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_235676464(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v25;
      }
      unint64_t v9 = *(void *)(v7 + 16);
      unint64_t v8 = *(void *)(v7 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_235676464(v8 > 1, v9 + 1, 1);
        uint64_t v7 = v25;
      }
      *(void *)(v7 + 16) = v9 + 1;
      *(unsigned char *)(v7 + v9 + 32) = v10;
    }
    ++v6;
  }
  while (v6 != 4);
  *(void *)&v5[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_availableDoorDetectionFeedbacks] = v7;
  uint64_t v11 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_tableView;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C78]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  unint64_t v13 = self;
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_systemYellowColor);
  objc_msgSend(v14, sel_setTintColor_, v15);

  objc_msgSend(v14, sel_setClipsToBounds_, 0);
  *(void *)&v5[v11] = v14;
  *(void *)&v5[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_speechFeedbackSubscription] = 0;
  uint64_t v16 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_colorPickerController;
  *(void *)&v5[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825E0]), sel_init);
  uint64_t v17 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_doorAttributesController;
  type metadata accessor for DoorAttributeCustomizationViewController();
  *(void *)&v5[v17] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);

  if (a2)
  {
    uint64_t v18 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
  }
  v24.receiver = v5;
  v24.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, v18, a3, a1);

  return v19;
}

id sub_235679554(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v3 = v1;
  uint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  do
  {
    int v8 = byte_26E8BD5E8[v4 + 32];
    if (v8 != 3) {
      goto LABEL_10;
    }
    if (qword_26880E5D0 != -1) {
      swift_once();
    }
    if (byte_268812C69 == 1)
    {
LABEL_10:
      uint64_t v20 = v5;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_235676464(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v20;
      }
      unint64_t v7 = *(void *)(v5 + 16);
      unint64_t v6 = *(void *)(v5 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_235676464(v6 > 1, v7 + 1, 1);
        uint64_t v5 = v20;
      }
      *(void *)(v5 + 16) = v7 + 1;
      *(unsigned char *)(v5 + v7 + 32) = v8;
    }
    ++v4;
  }
  while (v4 != 4);
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_availableDoorDetectionFeedbacks] = v5;
  uint64_t v9 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_tableView;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C78]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = self;
  id v12 = v10;
  id v13 = objc_msgSend(v11, sel_systemYellowColor);
  objc_msgSend(v12, sel_setTintColor_, v13);

  objc_msgSend(v12, sel_setClipsToBounds_, 0);
  *(void *)&v3[v9] = v12;
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_speechFeedbackSubscription] = 0;
  uint64_t v14 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_colorPickerController;
  *(void *)&v3[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825E0]), sel_init);
  uint64_t v15 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_doorAttributesController;
  type metadata accessor for DoorAttributeCustomizationViewController();
  *(void *)&v3[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);

  v19.receiver = v3;
  v19.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v19, sel_initWithCoder_, a1);

  return v16;
}

uint64_t type metadata accessor for DoorDetectionSettingsViewController()
{
  return self;
}

char *sub_2356798E4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880F590);
  v252 = *(void (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x270FA5388](v2, v3, v4, v5, v6);
  int v8 = (char *)v249 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = 5;
  int v10 = 2;
  switch(sub_235947B28())
  {
    case 0:
      int v10 = 0;
      goto LABEL_7;
    case 1:
      id v12 = (void *)sub_235949A88();
      id v13 = (void *)sub_235947AB8();
      uint64_t v14 = (char *)objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v12, v13);

LABEL_19:
      type metadata accessor for UIStepperLengthCell();
      if (swift_dynamicCastClass())
      {
        uint64_t v22 = qword_26AF13B78;
        uint64_t v23 = v14;
        if (v22 != -1) {
          swift_once();
        }
        v253 = v23;
        objc_super v24 = (double *)(qword_26AF181E0
                       + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionPitchThreshold);
        swift_beginAccess();
        double v25 = v24[1];
        double v26 = v24[2];
        double v262 = *v24;
        double v263 = v25;
        double v264 = v26;
        uint64_t v27 = qword_26AF144C0;
        uint64_t v28 = swift_bridgeObjectRetain();
        if (v27 != -1) {
          uint64_t v28 = swift_once();
        }
        MEMORY[0x270FA5388](v28, v29, v30, v31, v32);
        v249[-2] = &v262;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        uint64_t v33 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
        uint64_t v34 = swift_beginAccess();
        double v35 = *(double *)(v33 + 8);
        char v36 = *(unsigned char *)(v33 + 16);
        uint64_t v259 = *(void *)v33;
        double v260 = v35;
        LOBYTE(v261) = v36;
        MEMORY[0x270FA5388](v34, v37, v38, v39, v40);
        v249[-2] = &v259;
        swift_bridgeObjectRetain();
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        int v41 = v254;
        uint64_t v42 = self;
        id v43 = &selRef_feet;
        if (!v41) {
          id v43 = &selRef_meters;
        }
        id v44 = [v42 *v43];
        sub_2356594B0(0, (unint64_t *)&qword_26880EAF0);
        sub_2359473F8();
        sub_2357C3FD4((uint64_t)v8, (uint64_t)sub_23567B878, 0);
        uint64_t v14 = v253;

        v252[1](v8, v2);
      }
      return v14;
    case 2:
      goto LABEL_7;
    case 3:
      int v10 = 3;
      goto LABEL_7;
    case 4:
      int v10 = 4;
LABEL_7:
      char v11 = 0;
      goto LABEL_8;
    case 5:
      goto LABEL_11;
    case 6:
      int v9 = 6;
LABEL_11:
      if (sub_235947AE8() == 1)
      {
        uint64_t v17 = (void *)sub_235949A88();
        uint64_t v18 = (void *)sub_235947AB8();
        uint64_t v14 = (char *)objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v17, v18);
      }
      else
      {
        id v19 = objc_allocWithZone(MEMORY[0x263F82C80]);
        uint64_t v18 = (void *)sub_235949A88();
        uint64_t v14 = (char *)objc_msgSend(v19, sel_initWithStyle_reuseIdentifier_, 1, v18);
      }

      break;
    default:
      int v10 = 7;
      char v11 = 1;
LABEL_8:
      uint64_t v15 = (void *)sub_235949A88();
      id v16 = (void *)sub_235947AB8();
      uint64_t v14 = (char *)objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v15, v16);

      int v9 = v10;
      if (v11) {
        return v14;
      }
      break;
  }
  switch(v9)
  {
    case 1:
      goto LABEL_19;
    case 2:
      uint64_t v45 = *(char **)&v253[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_availableDoorDetectionFeedbacks];
      unint64_t v46 = sub_235947AE8();
      if ((v46 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v46 < *((void *)v45 + 2))
      {
        uint64_t v2 = v45[v46 + 32];
        id v47 = objc_msgSend(v14, sel_textLabel);
        if (v47)
        {
          uint64_t v48 = v47;
          sub_235677A40();
          uint64_t v49 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          objc_msgSend(v48, sel_setText_, v49);
        }
        uint64_t v45 = v14;
        int v8 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
        if (qword_26AF13B78 == -1)
        {
LABEL_32:
          uint64_t v50 = (double *)(qword_26AF181E0
                         + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedDoorDetectionFeedbacks);
          swift_beginAccess();
          double v51 = v50[1];
          double v52 = v50[2];
          double v262 = *v50;
          double v263 = v51;
          double v264 = v52;
          uint64_t v53 = qword_26AF144C0;
          swift_bridgeObjectRetain();
          uint64_t v54 = swift_bridgeObjectRetain();
          if (v53 != -1) {
            uint64_t v54 = swift_once();
          }
          MEMORY[0x270FA5388](v54, v55, v56, v57, v58);
          v249[-2] = &v262;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15110);
          sub_23594A2A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v59 = sub_2356BFD20(v2, v259);
          swift_bridgeObjectRelease();
          objc_msgSend(v8, sel_setOn_, v59);
          objc_msgSend(v8, sel_setTag_, v2);
          objc_msgSend(v8, sel_addTarget_action_forControlEvents_, v253, sel_didToggleFeedbackSwitch_, 4096);
          uint64_t v14 = v45;
          objc_msgSend(v45, sel_setAccessoryView_, v8);
          objc_msgSend(v45, sel_setAccessoryType_, 0);

          return v14;
        }
LABEL_122:
        swift_once();
        goto LABEL_32;
      }
      __break(1u);
      goto LABEL_122;
    case 3:
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v250 = self;
      uint64_t v251 = ObjCClassFromMetadata;
      id v61 = objc_msgSend(v250, sel_bundleForClass_, ObjCClassFromMetadata);
      v249[1] = "detectionSection.name.backTap";
      objc_super v62 = (void *)sub_235949A88();
      uint64_t v63 = (void *)sub_235949A88();
      id v64 = objc_msgSend(v61, sel_localizedStringForKey_value_table_, v62, 0, v63);

      sub_235949AC8();
      id v65 = objc_msgSend(v14, sel_textLabel);
      if (v65)
      {
        CGFloat v66 = v65;
        uint64_t v67 = (void *)sub_235949A88();
        objc_msgSend(v66, sel_setText_, v67);
      }
      id v68 = objc_msgSend(v14, sel_textLabel);
      if (v68)
      {
        id v69 = v68;
        objc_msgSend(v68, sel_setNumberOfLines_, 0);
      }
      id v70 = objc_msgSend(v14, sel_textLabel);
      if (v70)
      {
        uint64_t v71 = v70;
        objc_msgSend(v70, sel_setLineBreakMode_, 0);
      }
      objc_msgSend(v14, sel_setAccessoryType_, 1);
      objc_msgSend(v14, sel_setShowsReorderControl_, 0);
      uint64_t v72 = self;
      uint64_t v73 = *MEMORY[0x263F83570];
      char v74 = &selRef_didToggleFlashlightSwitch_;
      id v75 = objc_msgSend(v72, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2688139B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23594FD70;
      unint64_t v77 = (void *)*MEMORY[0x263F814F0];
      *(void *)(inited + 32) = *MEMORY[0x263F814F0];
      *(void *)(inited + 40) = v75;
      id v78 = v77;
      v252 = (void (**)(char *, uint64_t))v75;
      unint64_t v79 = sub_23566DF8C(inited);
      uint64_t v80 = (void *)sub_235949A88();
      swift_bridgeObjectRelease();
      sub_23586EBE4(v79);
      swift_bridgeObjectRelease();
      _s3__C3KeyVMa_0(0);
      sub_23567F0A4((unint64_t *)&qword_26880EE20, _s3__C3KeyVMa_0);
      unint64_t v81 = (void *)sub_235949968();
      swift_bridgeObjectRelease();
      objc_msgSend(v80, sel_sizeWithAttributes_, v81);

      id v82 = objc_msgSend(v72, sel_preferredFontForTextStyle_, v73);
      objc_msgSend(v82, sel_lineHeight);
      double v84 = v83;

      uint64_t v85 = (void *)sub_235949A88();
      char v86 = self;
      id v87 = objc_msgSend(v86, sel_systemImageNamed_, v85);

      if (v87)
      {
        uint64_t v88 = v14;
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v89 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionColor;
        swift_beginAccess();
        uint64_t v90 = *(void *)(v89 + 8);
        uint64_t v91 = *(void *)(v89 + 32);
        long long v92 = *(_OWORD *)(v89 + 16);
        uint64_t v255 = *(void *)v89;
        uint64_t v256 = v90;
        long long v257 = v92;
        uint64_t v258 = v91;
        uint64_t v93 = qword_26AF144C0;
        uint64_t v94 = swift_bridgeObjectRetain();
        if (v93 != -1) {
          uint64_t v94 = swift_once();
        }
        MEMORY[0x270FA5388](v94, v95, v96, v97, v98);
        v249[-2] = &v255;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        id v99 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, v262, v263, v264, 1.0);
        id v100 = objc_msgSend(v87, sel_imageWithTintColor_, v99);

        uint64_t v14 = v88;
        char v74 = &selRef_didToggleFlashlightSwitch_;
      }
      else
      {
        id v100 = 0;
      }
      uint64_t v175 = (void *)sub_235949A88();
      id v176 = objc_msgSend(v86, sel_systemImageNamed_, v175);

      double v177 = 0.0;
      if (v176)
      {
        id v178 = objc_msgSend(self, sel_systemGrayColor);
        id v179 = objc_msgSend(v176, sel_imageWithTintColor_, v178);

        id v180 = objc_msgSend(v72, v74[58], v73);
        id v181 = objc_msgSend(self, sel_configurationWithFont_, v180);

        id v182 = objc_msgSend(v179, sel_imageWithSymbolConfiguration_, v181);
        if (v182)
        {
          objc_msgSend(v182, sel_size);
          double v177 = v183;
        }
      }
      else
      {
        id v182 = 0;
      }
      v265.CGFloat width = v84 + v177 + 5.0;
      v265.CGFloat height = v84;
      UIGraphicsBeginImageContextWithOptions(v265, 0, 0.0);
      id v184 = objc_msgSend(self, sel_sharedApplication);
      id v185 = objc_msgSend(v184, sel_userInterfaceLayoutDirection);

      if (v185)
      {
        if (v182)
        {
          id v186 = v182;
          objc_msgSend(v186, sel_size);
          double v188 = (v84 - v187) * 0.5;
          objc_msgSend(v186, sel_size);
          double v190 = v189;
          objc_msgSend(v186, sel_size);
          double v191 = 0.0;
          objc_msgSend(v186, sel_drawInRect_, 0.0, v188, v190, v192);

          if (!v100) {
            goto LABEL_114;
          }
          id v193 = v100;
          objc_msgSend(v186, sel_size);
          double v195 = v194 + 5.0;
        }
        else
        {
          if (!v100) {
            goto LABEL_114;
          }
          id v193 = v100;
          double v191 = 0.0;
          double v195 = 5.0;
        }
        double v199 = v84;
        goto LABEL_113;
      }
      if (v100) {
        objc_msgSend(v100, sel_drawInRect_, 0.0, 0.0, v84, v84);
      }
      if (v182)
      {
        double v195 = v84 + 5.0;
        id v193 = v182;
        objc_msgSend(v193, sel_size);
        double v191 = (v84 - v196) * 0.5;
        objc_msgSend(v193, sel_size);
        double v84 = v197;
        objc_msgSend(v193, sel_size);
        double v199 = v198;
LABEL_113:
        objc_msgSend(v193, sel_drawInRect_, v195, v191, v84, v199);
      }
LABEL_114:
      v249[0] = v100;
      v220 = UIGraphicsGetImageFromCurrentImageContext();
      UIGraphicsEndImageContext();
      id v221 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithImage_, v220);
      objc_msgSend(v14, sel_setAccessoryView_, v221);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15720);
      uint64_t v222 = swift_allocObject();
      *(_OWORD *)(v222 + 16) = xmmword_2359527E0;
      v253 = v14;
      id v223 = objc_msgSend(v250, sel_bundleForClass_, v251);
      v224 = (void *)sub_235949A88();
      v225 = (void *)sub_235949A88();
      id v226 = objc_msgSend(v223, sel_localizedStringForKey_value_table_, v224, 0, v225);

      uint64_t v227 = sub_235949AC8();
      uint64_t v229 = v228;

      uint64_t v230 = MEMORY[0x263F8D310];
      *(void *)(v222 + 56) = MEMORY[0x263F8D310];
      unint64_t v231 = sub_23567F0EC();
      *(void *)(v222 + 64) = v231;
      *(void *)(v222 + 32) = v227;
      *(void *)(v222 + 40) = v229;
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      uint64_t v232 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionColor;
      swift_beginAccess();
      uint64_t v233 = *(void *)(v232 + 8);
      uint64_t v234 = *(void *)(v232 + 32);
      long long v235 = *(_OWORD *)(v232 + 16);
      uint64_t v255 = *(void *)v232;
      uint64_t v256 = v233;
      long long v257 = v235;
      uint64_t v258 = v234;
      uint64_t v236 = qword_26AF144C0;
      uint64_t v237 = swift_bridgeObjectRetain();
      if (v236 != -1) {
        uint64_t v237 = swift_once();
      }
      MEMORY[0x270FA5388](v237, v238, v239, v240, v241);
      v249[-2] = &v255;
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      id v242 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *(double *)&v259, v260, v261, 1.0);
      id v243 = objc_msgSend(v242, sel__accessibilityNameWithLuma);

      uint64_t v244 = sub_235949AC8();
      uint64_t v246 = v245;

      *(void *)(v222 + 96) = v230;
      *(void *)(v222 + 104) = v231;
      *(void *)(v222 + 72) = v244;
      *(void *)(v222 + 80) = v246;
      sub_235949B08();
      v247 = (void *)sub_235949A88();
      swift_bridgeObjectRelease();
      uint64_t v14 = v253;
      objc_msgSend(v253, sel_setAccessibilityLabel_, v247);

      return v14;
    case 4:
      id v101 = objc_msgSend(v14, sel_textLabel);
      if (v101)
      {
        uint64_t v102 = v101;
        type metadata accessor for MAGUtilities();
        uint64_t v103 = swift_getObjCClassFromMetadata();
        id v104 = objc_msgSend(self, sel_bundleForClass_, v103);
        os_log_type_t v105 = (void *)sub_235949A88();
        uint64_t v106 = (void *)sub_235949A88();
        id v107 = objc_msgSend(v104, sel_localizedStringForKey_value_table_, v105, 0, v106);

        sub_235949AC8();
        CGFloat v108 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v102, sel_setText_, v108);
      }
      uint64_t v109 = v14;
      id v110 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      uint64_t v111 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__backTapEnabled;
      swift_beginAccess();
      double v112 = *(double *)(v111 + 8);
      char v113 = *(unsigned char *)(v111 + 16);
      double v262 = *(double *)v111;
      double v263 = v112;
      LOBYTE(v264) = v113;
      uint64_t v114 = qword_26AF144C0;
      uint64_t v115 = swift_bridgeObjectRetain();
      if (v114 != -1) {
        uint64_t v115 = swift_once();
      }
      MEMORY[0x270FA5388](v115, v116, v117, v118, v119);
      v249[-2] = &v262;
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v110, sel_setOn_, v259);
      objc_msgSend(v110, sel_addTarget_action_forControlEvents_, v253, sel_didToggleBackTapSwitch_, 4096);
      uint64_t v14 = v109;
      objc_msgSend(v109, sel_setAccessoryView_, v110);
      objc_msgSend(v109, sel_setAccessoryType_, 0);

      return v14;
    case 5:
      sub_23567D758();
      char v120 = sub_23567DB30();
      id v121 = objc_msgSend(v14, sel_textLabel);
      if (v121)
      {
        long long v122 = v121;
        objc_msgSend(v121, sel_setNumberOfLines_, 0);
      }
      id v123 = objc_msgSend(v14, sel_textLabel);
      if (v123)
      {
        unint64_t v124 = v123;
        objc_msgSend(v123, sel_setLineBreakMode_, 0);
      }
      objc_msgSend(v14, sel_setAccessoryType_, 1);
      objc_msgSend(v14, sel_setShowsReorderControl_, 0);
      id v125 = objc_msgSend(v14, sel_textLabel);
      if (v125)
      {
        CGFloat v126 = v125;
        type metadata accessor for MAGUtilities();
        uint64_t v127 = swift_getObjCClassFromMetadata();
        id v128 = objc_msgSend(self, sel_bundleForClass_, v127);
        unint64_t v129 = (void *)sub_235949A88();
        long long v130 = (void *)sub_235949A88();
        id v131 = objc_msgSend(v128, sel_localizedStringForKey_value_table_, v129, 0, v130);

        sub_235949AC8();
        CGAffineTransform v132 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v126, sel_setText_, v132);
      }
      id v133 = objc_msgSend(v14, sel_textLabel);
      if (v133)
      {
        unint64_t v134 = v133;
        double v135 = 0.5;
        if (v120) {
          double v135 = 1.0;
        }
        objc_msgSend(v133, sel_setAlpha_, v135);
      }
      id v136 = objc_msgSend(v14, sel_detailTextLabel);
      if (v136)
      {
        CGRect v137 = v136;
        type metadata accessor for MAGUtilities();
        uint64_t v138 = swift_getObjCClassFromMetadata();
        id v139 = objc_msgSend(self, sel_bundleForClass_, v138);
        v213 = (void *)sub_235949A88();
        v214 = (void *)sub_235949A88();
        id v215 = objc_msgSend(v139, sel_localizedStringForKey_value_table_, v213, 0, v214);

        sub_235949AC8();
        v216 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v137, sel_setText_, v216);
      }
      id v217 = objc_msgSend(v14, sel_detailTextLabel);
      if (v217)
      {
        v218 = v217;
        double v219 = 0.5;
        if (v120) {
          double v219 = 1.0;
        }
        objc_msgSend(v217, sel_setAlpha_, v219);
      }
      return v14;
    case 6:
      sub_23567DDC4();
      id v140 = objc_msgSend(v14, sel_textLabel);
      if (v140)
      {
        CGRect v141 = v140;
        type metadata accessor for MAGUtilities();
        uint64_t v142 = swift_getObjCClassFromMetadata();
        id v143 = objc_msgSend(self, sel_bundleForClass_, v142);
        CGRect v144 = (void *)sub_235949A88();
        CGRect v145 = (void *)sub_235949A88();
        id v146 = objc_msgSend(v143, sel_localizedStringForKey_value_table_, v144, 0, v145);

        sub_235949AC8();
        CGRect v147 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v141, sel_setText_, v147);
      }
      long long v148 = v14;
      id v149 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
      BOOL v150 = sub_23567E2B0();
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      uint64_t v151 = qword_26AF181E0
           + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
      swift_beginAccess();
      double v152 = *(double *)(v151 + 8);
      char v153 = *(unsigned char *)(v151 + 16);
      double v262 = *(double *)v151;
      double v263 = v152;
      LOBYTE(v264) = v153;
      uint64_t v154 = qword_26AF144C0;
      uint64_t v155 = swift_bridgeObjectRetain();
      if (v154 != -1) {
        uint64_t v155 = swift_once();
      }
      MEMORY[0x270FA5388](v155, v156, v157, v158, v159);
      v249[-2] = &v262;
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v149, sel_setOn_, v150 & v259);
      objc_msgSend(v149, sel_setUserInteractionEnabled_, v150);
      objc_msgSend(v149, sel_addTarget_action_forControlEvents_, v253, sel_didToggleDecorationsSwitch_, 4096);
      objc_msgSend(v148, sel_setUserInteractionEnabled_, v150);
      objc_msgSend(v148, sel_setAccessoryView_, v149);
      objc_msgSend(v148, sel_setAccessoryType_, 0);
      id v160 = objc_msgSend(v148, sel_imageView);
      if (v160)
      {
        long long v161 = v160;
        objc_msgSend(v160, sel_setImage_, 0);
      }
      id v162 = objc_msgSend(v148, sel_textLabel);
      if (v162)
      {
        v163 = v162;
        id v164 = objc_msgSend(self, sel_labelColor);
        objc_msgSend(v163, sel_setTextColor_, v164);
      }
      id v165 = objc_msgSend(v148, sel_textLabel);
      if (v150) {
        double v166 = 1.0;
      }
      else {
        double v166 = 0.5;
      }
      if (v165)
      {
        long long v167 = v165;
        objc_msgSend(v165, sel_setAlpha_, v166);
      }
      objc_msgSend(v149, sel_setAlpha_, v166);
      type metadata accessor for MAGUtilities();
      uint64_t v168 = swift_getObjCClassFromMetadata();
      long long v169 = self;
      uint64_t v14 = v148;
      id v170 = objc_msgSend(v169, sel_bundleForClass_, v168);
      float v171 = (void *)sub_235949A88();
      v172 = (void *)sub_235949A88();
      id v173 = objc_msgSend(v170, sel_localizedStringForKey_value_table_, v171, 0, v172);

      sub_235949AC8();
      v174 = (void *)sub_235949A88();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setAccessibilityLabel_, v174);

      return v14;
    default:
      uint64_t v20 = sub_235947AE8();
      if (v20)
      {
        if (v20 != 1) {
          return v14;
        }
        char v21 = 1;
      }
      else
      {
        char v21 = 0;
      }
      id v200 = objc_msgSend(v14, sel_textLabel);
      if (v200)
      {
        v201 = v200;
        sub_2356ED218();
        v202 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v201, sel_setText_, v202);
      }
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      uint64_t v203 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
      swift_beginAccess();
      double v204 = *(double *)(v203 + 8);
      char v205 = *(unsigned char *)(v203 + 16);
      double v262 = *(double *)v203;
      double v263 = v204;
      LOBYTE(v264) = v205;
      uint64_t v206 = qword_26AF144C0;
      uint64_t v207 = swift_bridgeObjectRetain();
      if (v206 != -1) {
        uint64_t v207 = swift_once();
      }
      MEMORY[0x270FA5388](v207, v208, v209, v210, v211);
      v249[-2] = &v262;
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      if ((v21 ^ v259)) {
        uint64_t v212 = 0;
      }
      else {
        uint64_t v212 = 3;
      }
      objc_msgSend(v14, sel_setAccessoryType_, v212);
      objc_msgSend(v14, sel_setAccessoryView_, 0);
      return v14;
  }
}

uint64_t sub_23567B878(double a1)
{
  uint64_t v2 = sub_2359496D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  int v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionPitchThreshold;
  swift_beginAccess();
  double v18 = a1;
  if (qword_26AF144C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_2359496C8();
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  *(void *)&v17[-16] = &v18;
  *(void *)&v17[-8] = v10;
  sub_23594A298();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v9, v2);
  return swift_endAccess();
}

id sub_23567BC94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(unint64_t, void))
{
  sub_23567F010(a4, a5);
  if (v5)
  {
    uint64_t v6 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  return v6;
}

void sub_23567BDC8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_235947A78();
  uint64_t v87 = *(void *)(v4 - 8);
  uint64_t v88 = v4;
  MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  char v86 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_235947B38();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2359496D8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v20, v21, v22, v23);
  double v25 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v26 = (void *)sub_235947AB8();
  id v89 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v26);

  if (v89)
  {
    uint64_t v27 = (void *)sub_235947AB8();
    objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v27, 1);

    switch(sub_235947B28())
    {
      case 0:
        uint64_t v28 = sub_235947AE8();
        if (v28)
        {
          if (v28 != 1) {
            goto LABEL_10;
          }
          int v29 = 1;
        }
        else
        {
          int v29 = 0;
        }
        unsigned int v85 = v29;
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v34 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
        swift_beginAccess();
        uint64_t v35 = *(void *)(v34 + 8);
        char v36 = *(unsigned char *)(v34 + 16);
        *(void *)&long long v90 = *(void *)v34;
        *((void *)&v90 + 1) = v35;
        LOBYTE(v91) = v36;
        uint64_t v37 = qword_26AF144C0;
        uint64_t v38 = swift_bridgeObjectRetain();
        if (v37 != -1) {
          uint64_t v38 = swift_once();
        }
        double v84 = &v82;
        MEMORY[0x270FA5388](v38, v39, v40, v41, v42);
        *(&v82 - 2) = (uint64_t)&v90;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        char v43 = v85;
        if (v85 != LOBYTE(v94[0]))
        {
          uint64_t v44 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
          swift_beginAccess();
          LOBYTE(v94[0]) = v43;
          uint64_t v45 = sub_2359496C8();
          double v84 = &v82;
          MEMORY[0x270FA5388](v45, v46, v47, v48, v49);
          *(&v82 - 2) = (uint64_t)v94;
          *(&v82 - 1) = v44;
          sub_23594A298();
          uint64_t v50 = *(void (**)(char *, uint64_t))(v19 + 8);
          double v84 = (uint64_t *)(v19 + 8);
          uint64_t v82 = 0;
          double v83 = v50;
          v50(v25, v18);
          swift_endAccess();
          double v51 = (void (**)(char *, uint64_t))(v11 + 8);
          MEMORY[0x237DE5A70](byte_26E8BD630, 0);
          double v52 = (void *)sub_235947AB8();
          id v53 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v52);

          if (v53)
          {
            objc_msgSend(v53, sel_setAccessoryType_, 0);
          }
          uint64_t v54 = *v51;
          (*v51)(v17, v10);
          MEMORY[0x237DE5A70](byte_26E8BD631, 0);
          uint64_t v55 = (void *)sub_235947AB8();
          id v56 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v55);

          if (v56)
          {
            objc_msgSend(v56, sel_setAccessoryType_, 0);
          }
          v54(v17, v10);
          objc_msgSend(v89, sel_setAccessoryType_, 3);
          if (qword_26880E428 != -1) {
            swift_once();
          }
          uint64_t v57 = sub_235948278();
          __swift_project_value_buffer(v57, (uint64_t)qword_26880F800);
          uint64_t v58 = sub_235948258();
          os_log_type_t v59 = sub_23594A148();
          if (os_log_type_enabled(v58, v59))
          {
            uint64_t v60 = v85;
            id v61 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)id v61 = 134217984;
            *(void *)&long long v90 = v60;
            sub_23594A608();
            _os_log_impl(&dword_235640000, v58, v59, "New door detection unit: %ld", v61, 0xCu);
            MEMORY[0x237DE9F30](v61, -1, -1);
          }

          if (v85) {
            double v62 = 6.0;
          }
          else {
            double v62 = 2.0;
          }
          uint64_t v63 = qword_26AF181E0
              + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionPitchThreshold;
          swift_beginAccess();
          v94[0] = *(id *)&v62;
          uint64_t v64 = sub_2359496C8();
          MEMORY[0x270FA5388](v64, v65, v66, v67, v68);
          *(&v82 - 2) = (uint64_t)v94;
          *(&v82 - 1) = v63;
          sub_23594A298();
          id v69 = v83;
          v83(v25, v18);
          swift_endAccess();
          uint64_t v70 = qword_26AF181E0
              + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionPitchThreshold;
          swift_beginAccess();
          v94[0] = *(id *)&v62;
          uint64_t v71 = sub_2359496C8();
          MEMORY[0x270FA5388](v71, v72, v73, v74, v75);
          *(&v82 - 2) = (uint64_t)v94;
          *(&v82 - 1) = v70;
          sub_23594A298();
          v69(v25, v18);
          swift_endAccess();
          objc_msgSend(a1, sel_beginUpdates);
          *(void *)&long long v90 = &unk_26E8BD638;
          sub_23567F0A4((unint64_t *)&qword_26880FAF0, MEMORY[0x263F07978]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880EAE0);
          sub_2356595F4((unint64_t *)&qword_26880FB00, (uint64_t *)&unk_26880EAE0);
          uint64_t v76 = v86;
          uint64_t v77 = v88;
          sub_23594A6C8();
          id v78 = (void *)sub_235947A68();
          (*(void (**)(char *, uint64_t))(v87 + 8))(v76, v77);
          objc_msgSend(a1, sel_reloadSections_withRowAnimation_, v78, 100);

          objc_msgSend(a1, sel_endUpdates);
        }
        goto LABEL_40;
      case 3:
        objc_msgSend(v1, sel_presentViewController_animated_completion_, *(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_colorPickerController], 1, 0);
        goto LABEL_10;
      case 5:
        id v30 = objc_msgSend(self, sel_shared);
        id v31 = objc_msgSend(v30, sel_doorAttributesClassifierProperties);

        if (!v31) {
          goto LABEL_10;
        }
        *(void *)&long long v90 = 0xD000000000000017;
        *((void *)&v90 + 1) = 0x800000023596BB40;
        id v32 = objc_msgSend(v31, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
        swift_unknownObjectRelease();
        if (v32)
        {
          sub_23594A6A8();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v90 = 0u;
          long long v91 = 0u;
        }
        sub_23567D658((uint64_t)&v90, (uint64_t)v92);
        if (v93)
        {
          sub_2356594B0(0, &qword_26880F650);
          if (swift_dynamicCast())
          {
            id v79 = v94[0];
            if ((uint64_t)objc_msgSend(v94[0], sel_count) >= 1)
            {
              id v80 = objc_msgSend(v2, sel_navigationController);
              if (v80)
              {
                unint64_t v81 = v80;
                objc_msgSend(v80, sel_pushViewController_animated_, *(void *)&v2[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_doorAttributesController], 1);
              }
            }
          }
          else
          {

LABEL_40:
          }
        }
        else
        {

          sub_23566A3AC((uint64_t)v92, &qword_26AF15750);
        }
        break;
      default:
LABEL_10:
        id v33 = v89;

        break;
    }
  }
}

uint64_t sub_23567C998(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2359496D8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_selectedColor);
  id v14 = objc_msgSend(v13, sel_CGColor);

  uint64_t v15 = (void *)sub_23594A0A8();
  if (!v15) {
    uint64_t v15 = &unk_26E8BD660;
  }
  if (qword_26AF13B78 == -1)
  {
    unint64_t v16 = v15[2];
    if (v16) {
      goto LABEL_5;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_once();
  unint64_t v16 = v15[2];
  if (!v16) {
    goto LABEL_18;
  }
LABEL_5:
  if (v16 == 1)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v16 >= 3)
  {
    uint64_t v2 = &unk_26AF18000;
    uint64_t v17 = qword_26AF181E0;
    uint64_t v18 = v15[4];
    uint64_t v19 = v15[5];
    uint64_t v20 = v15[6];
    swift_bridgeObjectRelease();
    id v14 = (id)(v17 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionColor);
    swift_beginAccess();
    uint64_t v61 = v18;
    uint64_t v62 = v19;
    *(void *)&long long v63 = v20;
    if (qword_26AF144C0 == -1) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  swift_once();
LABEL_8:
  uint64_t v21 = sub_2359496C8();
  MEMORY[0x270FA5388](v21, v22, v23, v24, v25);
  *(&v61 - 2) = (uint64_t)&v61;
  *(&v61 - 1) = (uint64_t)v14;
  sub_23594A298();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  swift_endAccess();
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_tableView), sel_reloadData);
  double v26 = (void *)v2[60];
  uint64_t v27 = swift_beginAccess();
  uint64_t v28 = v26[10];
  uint64_t v29 = v26[11];
  uint64_t v30 = v26[12];
  v68[0] = v26[9];
  v68[1] = v28;
  v68[2] = v29;
  v68[3] = v30;
  MEMORY[0x270FA5388](v27, v31, v32, v33, v34);
  *(&v61 - 2) = (uint64_t)v68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15060);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v36 = v62;
  if (v62)
  {
    uint64_t v37 = v61;
    uint64_t v38 = (void *)v2[60];
    uint64_t v39 = swift_beginAccess();
    uint64_t v40 = v38[6];
    uint64_t v41 = v38[7];
    v68[0] = v38[5];
    v68[1] = v40;
    v68[2] = v41;
    MEMORY[0x270FA5388](v39, v42, v43, v44, v45);
    *(&v61 - 2) = (uint64_t)v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15030);
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = v61;
    if (*(void *)(v61 + 16) && (unint64_t v47 = sub_2358780C4(v37, v36), (v48 & 1) != 0))
    {
      memcpy(v68, (const void *)(*(void *)(v46 + 56) + 280 * v47), sizeof(v68));
      sub_235659250((uint64_t)v68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v50 = *(double *)&v68[15];
      double v49 = *(double *)&v68[16];
      double v51 = *(double *)&v68[17];
      uint64_t v52 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionColor;
      uint64_t v53 = swift_beginAccess();
      uint64_t v54 = *(void *)(v52 + 8);
      uint64_t v55 = *(void *)(v52 + 32);
      long long v56 = *(_OWORD *)(v52 + 16);
      uint64_t v61 = *(void *)v52;
      uint64_t v62 = v54;
      long long v63 = v56;
      uint64_t v64 = v55;
      MEMORY[0x270FA5388](v53, v57, v58, v59, v60);
      *(&v61 - 2) = (uint64_t)&v61;
      swift_bridgeObjectRetain();
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_235659338((uint64_t)v68);
      if (v50 != v65 || v49 != v66 || v51 != v67)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v61) = 1;
        sub_2359470F8();
        return sub_2359484E8();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MagnifierColor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MagnifierColor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MagnifierColor()
{
  return &type metadata for MagnifierColor;
}

unsigned char *storeEnumTagSinglePayload for DoorDetectionFeedback(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23567D0C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DoorDetectionFeedback()
{
  return &type metadata for DoorDetectionFeedback;
}

unint64_t sub_23567D104()
{
  unint64_t result = qword_26880F580;
  if (!qword_26880F580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F580);
  }
  return result;
}

uint64_t sub_23567D158()
{
  return sub_2356595F4(&qword_26880F588, (uint64_t *)&unk_26AF15110);
}

uint64_t sub_23567D194(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_23594AB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_23594AB78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_23594AB78();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

double sub_23567D2C4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF155E8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23567D4E4();
  sub_23594AD68();
  char v13 = 0;
  sub_23567D538();
  sub_23594AA98();
  double v10 = v14;
  char v13 = 1;
  sub_23594AA98();
  char v13 = 2;
  sub_23594AA98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v10;
}

unint64_t sub_23567D4E4()
{
  unint64_t result = qword_26AF13030;
  if (!qword_26AF13030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF13030);
  }
  return result;
}

unint64_t sub_23567D538()
{
  unint64_t result = qword_26AF12EF8;
  if (!qword_26AF12EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF12EF8);
  }
  return result;
}

unint64_t sub_23567D58C()
{
  unint64_t result = qword_26AF12EE8;
  if (!qword_26AF12EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF12EE8);
  }
  return result;
}

unint64_t sub_23567D5E0()
{
  unint64_t result = qword_26AF145E0;
  if (!qword_26AF145E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF145E0);
  }
  return result;
}

void sub_23567D634()
{
}

uint64_t sub_23567D658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23567D6C0(uint64_t a1)
{
  uint64_t result = 2;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
    case 3:
    case 5:
    case 6:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = *(void *)(*(void *)(v1
                                     + OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_availableDoorDetectionFeedbacks)
                         + 16);
      break;
    case 4:
      uint64_t result = AXDeviceSupportsBackTap();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_23567D758()
{
  uint64_t v0 = sub_2359496D8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2, v3, v4, v5);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_shared);
  id v9 = objc_msgSend(v8, sel_downloadManager);

  double v10 = (void *)sub_235949A88();
  objc_msgSend(v9, sel_totalDownloadedWithName_, v10);
  double v12 = v11;

  if (v12 >= 100.0)
  {
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_26AF181E0;
    *(unsigned char *)(qword_26AF181E0
             + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorAttributesAssetDownloaded) = 1;
    *(unsigned char *)(v13 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorAttributesAssetDownloading) = 0;
    uint64_t v14 = v13
        + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorAttributesToggledOnAfterSuccessfulDownload;
    swift_beginAccess();
    uint64_t v15 = *(void *)(v14 + 8);
    char v16 = *(unsigned char *)(v14 + 16);
    v36[0] = *(void *)v14;
    v36[1] = v15;
    char v37 = v16;
    uint64_t v17 = qword_26AF144C0;
    uint64_t v18 = swift_bridgeObjectRetain();
    if (v17 != -1) {
      uint64_t v18 = swift_once();
    }
    MEMORY[0x270FA5388](v18, v19, v20, v21, v22);
    v36[-2] = v36;
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
      uint64_t v23 = qword_26AF181E0
          + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorAttributesToggledOnAfterSuccessfulDownload;
      swift_beginAccess();
      char v38 = 1;
      uint64_t v24 = sub_2359496C8();
      MEMORY[0x270FA5388](v24, v25, v26, v27, v28);
      v36[-2] = &v38;
      v36[-1] = v23;
      sub_23594A298();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v1 + 8);
      v29(v7, v0);
      swift_endAccess();
      uint64_t v30 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionAttributes;
      swift_beginAccess();
      char v38 = 1;
      uint64_t v31 = sub_2359496C8();
      MEMORY[0x270FA5388](v31, v32, v33, v34, v35);
      v36[-2] = &v38;
      v36[-1] = v30;
      sub_23594A298();
      v29(v7, v0);
      swift_endAccess();
    }
  }
}

uint64_t sub_23567DB30()
{
  id v0 = objc_msgSend(self, sel_shared);
  id v1 = objc_msgSend(v0, sel_doorAttributesClassifierProperties);

  if (!v1) {
    return 0;
  }
  *(void *)&long long v15 = 0xD000000000000017;
  *((void *)&v15 + 1) = 0x800000023596BB40;
  id v2 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
  swift_unknownObjectRelease();
  if (v2)
  {
    sub_23594A6A8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  sub_23567D658((uint64_t)&v15, (uint64_t)v17);
  if (!v18)
  {

    sub_23566A3AC((uint64_t)v17, &qword_26AF15750);
    return 0;
  }
  sub_2356594B0(0, &qword_26880F650);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  id v3 = objc_msgSend(v14, sel_count);

  if ((uint64_t)v3 <= 0) {
    return 0;
  }
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionAttributes;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 8);
  char v6 = *(unsigned char *)(v4 + 16);
  *(void *)&long long v15 = *(void *)v4;
  *((void *)&v15 + 1) = v5;
  LOBYTE(v16) = v6;
  uint64_t v7 = qword_26AF144C0;
  uint64_t v8 = swift_bridgeObjectRetain();
  if (v7 != -1) {
    uint64_t v8 = swift_once();
  }
  MEMORY[0x270FA5388](v8, v9, v10, v11, v12);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23567DDC4()
{
  uint64_t v0 = sub_2359496D8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2, v3, v4, v5);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_shared);
  id v9 = objc_msgSend(v8, sel_downloadManager);

  uint64_t v10 = (void *)sub_235949A88();
  objc_msgSend(v9, sel_totalDownloadedWithName_, v10);
  double v12 = v11;

  if (v12 < 100.0)
  {
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
    swift_beginAccess();
    LOBYTE(v43[0]) = 0;
    if (qword_26AF144C0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_2359496C8();
    MEMORY[0x270FA5388](v14, v15, v16, v17, v18);
    v43[-2] = v43;
    v43[-1] = v13;
    sub_23594A298();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    return swift_endAccess();
  }
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_26AF181E0;
  *(unsigned char *)(qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorSignsAssetDownloaded) = 1;
  *(unsigned char *)(v19 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorSignsAssetDownloading) = 0;
  uint64_t v20 = v19
      + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorSignsToggledOnAfterSuccessfulDownload;
  swift_beginAccess();
  uint64_t v21 = *(void *)(v20 + 8);
  char v22 = *(unsigned char *)(v20 + 16);
  v43[0] = *(void *)v20;
  v43[1] = v21;
  char v44 = v22;
  uint64_t v23 = qword_26AF144C0;
  uint64_t v24 = swift_bridgeObjectRetain();
  if (v23 != -1) {
    uint64_t v24 = swift_once();
  }
  MEMORY[0x270FA5388](v24, v25, v26, v27, v28);
  v43[-2] = v43;
  sub_23594A2A8();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v45[0] & 1) == 0)
  {
    uint64_t v30 = qword_26AF181E0
        + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorSignsToggledOnAfterSuccessfulDownload;
    swift_beginAccess();
    v45[0] = 1;
    uint64_t v31 = sub_2359496C8();
    MEMORY[0x270FA5388](v31, v32, v33, v34, v35);
    v43[-2] = v45;
    v43[-1] = v30;
    sub_23594A298();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v1 + 8);
    v36(v7, v0);
    swift_endAccess();
    uint64_t v37 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
    swift_beginAccess();
    v45[0] = 1;
    uint64_t v38 = sub_2359496C8();
    MEMORY[0x270FA5388](v38, v39, v40, v41, v42);
    v43[-2] = v45;
    v43[-1] = v37;
    sub_23594A298();
    v36(v7, v0);
    return swift_endAccess();
  }
  return result;
}

BOOL sub_23567E2B0()
{
  id v0 = objc_msgSend(self, sel_shared);
  id v1 = objc_msgSend(v0, sel_signDetectorProperties);

  if (v1)
  {
    *(void *)&v6[0] = 0xD000000000000013;
    *((void *)&v6[0] + 1) = 0x800000023596BE60;
    id v2 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v2)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v6, 0, sizeof(v6));
    }
    sub_23567D658((uint64_t)v6, (uint64_t)v7);
    if (v8)
    {
      sub_2356594B0(0, &qword_26880F650);
      if (swift_dynamicCast())
      {
        id v3 = objc_msgSend(v5, sel_count);

        return (uint64_t)v3 > 0;
      }
    }
    else
    {

      sub_23566A3AC((uint64_t)v7, &qword_26AF15750);
    }
  }
  return 0;
}

id sub_23567E438(void *a1)
{
  id result = objc_msgSend(a1, sel_tag);
  if ((unint64_t)result <= 3)
  {
    int v3 = result;
    if (objc_msgSend(a1, sel_isOn))
    {
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v4 = qword_26AF144C0;
      swift_bridgeObjectRetain();
      uint64_t v5 = swift_bridgeObjectRetain();
      if (v4 != -1) {
        uint64_t v5 = swift_once();
      }
      MEMORY[0x270FA5388](v5, v6, v7, v8, v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15110);
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v10 = (char *)v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_2356CD848(0, *(void *)(v26 + 16) + 1, 1, (char *)v26);
      }
      unint64_t v12 = *((void *)v10 + 2);
      unint64_t v11 = *((void *)v10 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v10 = sub_2356CD848((char *)(v11 > 1), v12 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v12 + 1;
      v10[v12 + 32] = v3;
      swift_bridgeObjectRelease();
      sub_2357D4950((uint64_t)v10, 1);
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v13 = qword_26AF144C0;
      swift_bridgeObjectRetain();
      uint64_t v14 = swift_bridgeObjectRetain();
      if (v13 != -1) {
        uint64_t v14 = swift_once();
      }
      MEMORY[0x270FA5388](v14, v15, v16, v17, v18);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15110);
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(v26 + 16);
      if (v19)
      {
        uint64_t v20 = (unsigned __int8 *)(v26 + 32);
        uint64_t v21 = MEMORY[0x263F8EE78];
        do
        {
          int v25 = *v20++;
          char v24 = v25;
          if (v25 != v3)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_235676464(0, *(void *)(v21 + 16) + 1, 1);
            }
            unint64_t v23 = *(void *)(v21 + 16);
            unint64_t v22 = *(void *)(v21 + 24);
            if (v23 >= v22 >> 1) {
              sub_235676464(v22 > 1, v23 + 1, 1);
            }
            *(void *)(v21 + 16) = v23 + 1;
            *(unsigned char *)(v21 + v23 + 32) = v24;
          }
          --v19;
        }
        while (v19);
      }
      else
      {
        uint64_t v21 = MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRelease();
      sub_2357D4950(v21, 1);
      return (id)swift_release();
    }
  }
  return result;
}

uint64_t sub_23567E844(void *a1)
{
  uint64_t v2 = sub_2359496D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26AF181E0;
  unsigned __int8 v11 = objc_msgSend(a1, sel_isOn);
  uint64_t v12 = v10 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__backTapEnabled;
  swift_beginAccess();
  unsigned __int8 v20 = v11;
  if (qword_26AF144C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_2359496C8();
  MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
  *(void *)&v19[-16] = &v20;
  *(void *)&v19[-8] = v12;
  sub_23594A298();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v9, v2);
  return swift_endAccess();
}

uint64_t sub_23567EA28(void *a1)
{
  uint64_t v2 = sub_2359496D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v50[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isOn))
  {
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
    swift_beginAccess();
    char v56 = 1;
    if (qword_26AF144C0 == -1) {
      goto LABEL_9;
    }
LABEL_20:
    swift_once();
    goto LABEL_9;
  }
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
  swift_beginAccess();
  char v56 = 0;
  if (qword_26AF144C0 != -1) {
    goto LABEL_20;
  }
LABEL_9:
  uint64_t v11 = sub_2359496C8();
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  *(&v49 - 2) = (uint64_t)&v56;
  *(&v49 - 1) = v10;
  sub_23594A298();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  swift_endAccess();
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_26AF181E0;
  swift_beginAccess();
  uint64_t v17 = v16[10];
  uint64_t v18 = v16[11];
  uint64_t v19 = v16[12];
  v54[0] = v16[9];
  v54[1] = v17;
  v54[2] = v18;
  v54[3] = v19;
  uint64_t v20 = qword_26AF144C0;
  swift_bridgeObjectRetain();
  uint64_t v21 = swift_bridgeObjectRetain();
  if (v20 != -1) {
    uint64_t v21 = swift_once();
  }
  MEMORY[0x270FA5388](v21, v22, v23, v24, v25);
  *(&v49 - 2) = (uint64_t)v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15060);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v27 = v55;
  if (v55)
  {
    uint64_t v28 = v54[35];
    uint64_t v29 = (void *)qword_26AF181E0;
    uint64_t v30 = swift_beginAccess();
    uint64_t v31 = v29[6];
    uint64_t v32 = v29[7];
    v54[0] = v29[5];
    v54[1] = v31;
    v54[2] = v32;
    MEMORY[0x270FA5388](v30, v33, v34, v35, v36);
    *(&v49 - 2) = (uint64_t)v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15030);
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v53;
    if (*(void *)(v53 + 16) && (unint64_t v38 = sub_2358780C4(v28, v27), (v39 & 1) != 0))
    {
      memcpy(v54, (const void *)(*(void *)(v37 + 56) + 280 * v38), 0x118uLL);
      sub_235659250((uint64_t)v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v40 = LOBYTE(v54[20]);
      uint64_t v41 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
      uint64_t v42 = swift_beginAccess();
      uint64_t v43 = *(void *)(v41 + 8);
      char v44 = *(unsigned char *)(v41 + 16);
      v50[0] = *(void *)v41;
      v50[1] = v43;
      char v51 = v44;
      MEMORY[0x270FA5388](v42, v45, v46, v47, v48);
      *(&v49 - 2) = (uint64_t)v50;
      swift_bridgeObjectRetain();
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_235659338((uint64_t)v54);
      if (v40 != v52)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v50[0]) = 1;
        sub_2359470F8();
        return sub_2359484E8();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_23567F010(unint64_t a1, uint64_t (*a2)(unint64_t, void))
{
  if (a1 > 6) {
    return 0;
  }
  else {
    return a2(a1, a2);
  }
}

BOOL sub_23567F044()
{
  return sub_235947B28() != 2;
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_23567F088@<X0>(uint64_t *a1@<X8>)
{
  return sub_235720070(*(void **)(v1 + 16), a1);
}

uint64_t sub_23567F0A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23567F0EC()
{
  unint64_t result = qword_26AF15020;
  if (!qword_26AF15020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF15020);
  }
  return result;
}

uint64_t sub_23567F140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23567F1A8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23567F1E0(uint64_t a1)
{
  sub_235678E00(a1, v1);
}

uint64_t getEnumTagSinglePayload for MagnifierColor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MagnifierColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23567F34CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MagnifierColor.CodingKeys()
{
  return &type metadata for MagnifierColor.CodingKeys;
}

unint64_t sub_23567F388()
{
  unint64_t result = qword_26880F5A8;
  if (!qword_26880F5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F5A8);
  }
  return result;
}

unint64_t sub_23567F3E0()
{
  unint64_t result = qword_26AF13040;
  if (!qword_26AF13040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF13040);
  }
  return result;
}

unint64_t sub_23567F438()
{
  unint64_t result = qword_26AF13038;
  if (!qword_26AF13038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF13038);
  }
  return result;
}

uint64_t sub_23567F490@<X0>(uint64_t *a1@<X8>)
{
  return sub_2356591B8(a1);
}

uint64_t sub_23567F4A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_235659234(a1);
}

uint64_t sub_23567F4C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_23567F088(a1);
}

void sub_23567F4D8()
{
}

uint64_t SpatialPersonDetection.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_235947978();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SpatialPersonDetection.id.setter(uint64_t a1)
{
  uint64_t v3 = sub_235947978();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SpatialPersonDetection.id.modify())()
{
  return CGRectMake;
}

__n128 SpatialPersonDetection.dimensions.getter()
{
  return *(__n128 *)(v0 + *(int *)(type metadata accessor for SpatialPersonDetection() + 20));
}

uint64_t type metadata accessor for SpatialPersonDetection()
{
  uint64_t result = qword_26880F5C0;
  if (!qword_26880F5C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 SpatialPersonDetection.dimensions.setter(__n128 a1)
{
  uint64_t v2 = type metadata accessor for SpatialPersonDetection();
  __n128 result = a1;
  *(__n128 *)(v1 + *(int *)(v2 + 20)) = a1;
  return result;
}

uint64_t (*SpatialPersonDetection.dimensions.modify())()
{
  return CGRectMake;
}

__n128 SpatialPersonDetection.transform.getter()
{
  return *(__n128 *)(v0 + *(int *)(type metadata accessor for SpatialPersonDetection() + 24));
}

__n128 SpatialPersonDetection.transform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v5 = (__n128 *)(v4 + *(int *)(type metadata accessor for SpatialPersonDetection() + 24));
  *uint64_t v5 = a1;
  v5[1] = a2;
  __n128 result = a4;
  v5[2] = a3;
  v5[3] = a4;
  return result;
}

uint64_t (*SpatialPersonDetection.transform.modify())()
{
  return CGRectMake;
}

float SpatialPersonDetection.volume.getter()
{
  uint64_t v1 = type metadata accessor for SpatialPersonDetection();
  return *(float *)(v0 + *(int *)(v1 + 20) + 8)
       * (float)(*(float *)(v0 + *(int *)(v1 + 20)) * *(float *)(v0 + *(int *)(v1 + 20) + 4));
}

uint64_t sub_23567F7C8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v8 - 8, v9, v10, v11, v12);
  id v131 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_235947978();
  uint64_t v132 = *(void *)(v133 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v133, v14, v15, v16, v17);
  unint64_t v129 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18, v20, v21, v22, v23);
  long long v130 = (char *)&v128 - v24;
  uint64_t v25 = type metadata accessor for SpatialPersonDetection();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25, v27, v28, v29, v30);
  unint64_t v134 = (char *)&v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL IsLandscape = UIInterfaceOrientationIsLandscape(a3);
  uint64_t v33 = (__CVBuffer *)objc_msgSend(a2, sel_capturedImage);
  uint64_t v34 = v33;
  if (IsLandscape)
  {
    int64_t Width = CVPixelBufferGetWidth(v33);

    uint64_t v36 = (__CVBuffer *)objc_msgSend(a2, sel_capturedImage);
    size_t Height = CVPixelBufferGetHeight(v36);
  }
  else
  {
    int64_t Width = CVPixelBufferGetHeight(v33);

    uint64_t v36 = (__CVBuffer *)objc_msgSend(a2, sel_capturedImage);
    size_t Height = CVPixelBufferGetWidth(v36);
  }
  uint64_t v38 = Height;

  double v39 = (double)Width;
  double v40 = (double)v38;
  objc_msgSend(a1, sel_screenRect);
  CGFloat v42 = v41;
  CGFloat v44 = v43;
  CGFloat v46 = v45;
  CGFloat v48 = v47;
  uint64_t v136 = a4;
  uint64_t v137 = v26;
  uint64_t v49 = v25;
  switch(a3)
  {
    case 1:
      double c = -v39;
      double a = 0.0;
      double b = (double)v38;
      double d = 0.0;
      tCGFloat x = (double)Width;
      tCGFloat y = 0.0;
      break;
    case 2:
      double b = -v40;
      double a = 0.0;
      double c = (double)Width;
      double d = 0.0;
      tCGFloat y = (double)v38;
      tCGFloat x = 0.0;
      break;
    case 4:
      double a = -v39;
      double d = -v40;
      double b = 0.0;
      tCGFloat x = (double)Width;
      tCGFloat y = (double)v38;
      double c = 0.0;
      break;
    default:
      CGAffineTransformMakeScale(&v145, (double)Width, (double)v38);
      double a = v145.a;
      double b = v145.b;
      double c = v145.c;
      double d = v145.d;
      tCGFloat x = v145.tx;
      tCGFloat y = v145.ty;
      break;
  }
  v145.double a = a;
  v145.double b = b;
  v145.double c = c;
  v145.double d = d;
  v145.tCGFloat x = tx;
  v145.tCGFloat y = ty;
  v148.origin.CGFloat x = v42;
  v148.origin.CGFloat y = v44;
  v148.size.CGFloat width = v46;
  v148.size.CGFloat height = v48;
  CGRect v149 = CGRectApplyAffineTransform(v148, &v145);
  CGFloat x = v149.origin.x;
  CGFloat y = v149.origin.y;
  CGFloat v58 = v149.size.width;
  CGFloat v59 = v149.size.height;
  CGRectGetMinX(v149);
  v150.origin.CGFloat x = x;
  v150.origin.CGFloat y = y;
  v150.size.CGFloat width = v58;
  v150.size.CGFloat height = v59;
  CGRectGetMinY(v150);
  v151.origin.CGFloat x = x;
  v151.origin.CGFloat y = y;
  v151.size.CGFloat width = v58;
  v151.size.CGFloat height = v59;
  v135.i64[0] = CGRectGetMaxX(v151);
  v152.origin.CGFloat x = x;
  v152.origin.CGFloat y = y;
  v152.size.CGFloat width = v58;
  v152.size.CGFloat height = v59;
  CGRectGetMaxY(v152);
  id v138 = a1;
  objc_msgSend(a1, sel_position);
  v60.f32[0] = (float)v60.i32[2] / -1000.0;
  float32x4_t v141 = v60;
  id v61 = objc_msgSend(a2, sel_camera);
  objc_msgSend(v61, sel_transform);
  float32x4_t v143 = v63;
  float32x4_t v144 = v62;
  simd_float4 v139 = (simd_float4)v64;
  simd_float4 v140 = (simd_float4)v65;

  float32x4_t v66 = vmulq_f32(v144, (float32x4_t)0);
  float32x4_t v144 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v144, (float32x4_t)0, v143), (float32x4_t)0, (float32x4_t)v139), (float32x4_t)0, (float32x4_t)v140);
  float32x4_t v67 = vmlaq_f32(v66, (float32x4_t)0, v143);
  float32x4_t v142 = vmlaq_f32(vaddq_f32((float32x4_t)v139, v67), (float32x4_t)0, (float32x4_t)v140);
  __asm { FMOV            V2.4S, #-1.0 }
  float32x4_t v143 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v66, _Q2, v143), (float32x4_t)0, (float32x4_t)v139), (float32x4_t)0, (float32x4_t)v140);
  float32x4_t v141 = vaddq_f32((float32x4_t)v140, vmlaq_n_f32(v67, (float32x4_t)v139, v141.f32[0]));
  id v73 = objc_msgSend(a2, sel_camera);
  uint64_t v74 = sub_23594A468();
  uint64_t v76 = v75;
  char v78 = v77;

  if ((v78 & 1) == 0)
  {
    id v79 = objc_msgSend(a2, sel_camera);
    uint64_t v80 = sub_23594A468();
    uint64_t v82 = v81;
    char v84 = v83;

    if ((v84 & 1) == 0)
    {
      v85.i64[0] = v74;
      v85.i64[1] = v76;
      v86.i64[0] = v80;
      v86.i64[1] = v82;
      float v87 = *(float *)&v80;
      *(float32x2_t *)v88.f32 = vabd_f32((float32x2_t)v74, (float32x2_t)v80);
      float v89 = v88.f32[1];
      if (v88.f32[1] >= v88.f32[0]) {
        float v89 = v88.f32[0];
      }
      v88.i64[1] = LODWORD(v89);
      uint64_t v90 = v49;
      uint64_t v91 = *(int *)(v49 + 20);
      long long v92 = v134;
      *(float32x4_t *)&v134[v91] = v88;
      float32x4_t v93 = vaddq_f32(v85, v86);
      v88.f32[0] = (float)(*(float *)&v74 + v87) * 0.5;
      float32x4_t v142 = v88;
      v88.f32[0] = vmuls_lane_f32(0.5, *(float32x2_t *)v93.f32, 1);
      float32x4_t v143 = v88;
      v88.f32[0] = vmuls_lane_f32(0.5, v93, 2);
      float32x4_t v144 = v88;
      id v94 = objc_msgSend(a2, sel_camera);
      objc_msgSend(v94, sel_transform);
      float32x4_t v141 = v95;
      simd_float4 v140 = (simd_float4)v96;
      simd_float4 v139 = (simd_float4)v97;
      simd_float4 v135 = (simd_float4)v98;

      v146.columns[0] = (simd_float4)v141;
      v146.columns[1] = v140;
      v146.columns[2] = v139;
      v146.columns[3] = v135;
      simd_float4x4 v147 = __invert_f4(v146);
      float32x4_t v144 = vaddq_f32((float32x4_t)v147.columns[3], vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32((float32x4_t)v147.columns[0], v142.f32[0]), (float32x4_t)v147.columns[1], v143.f32[0]), (float32x4_t)v147.columns[2], v144.f32[0]));
      uint64_t v99 = ARCameraToDisplayRotation();
      __float2 v100 = __sincosf_stret((float)((float)((float)v99 * 3.1416) / 180.0) * 0.5);
      __n128 v101 = (__n128)vmulq_n_f32((float32x4_t)xmmword_23594FC40, v100.__sinval);
      v101.n128_u32[3] = LODWORD(v100.__cosval);
      *(double *)v102.i64 = MEMORY[0x237DE8120](v101);
      float32x4_t v141 = v102;
      float32x4_t v142 = v103;
      float32x4_t v143 = v104;
      id v105 = objc_msgSend(a2, sel_camera);
      objc_msgSend(v105, sel_transform);
      float32x4_t v128 = v106;
      simd_float4 v135 = (simd_float4)v107;
      simd_float4 v139 = (simd_float4)v108;
      simd_float4 v140 = (simd_float4)v109;

      float32x4_t v110 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v128, v142.f32[0]), (float32x4_t)v135, *(float32x2_t *)v142.f32, 1), (float32x4_t)v139, v142, 2), (float32x4_t)v140, v142, 3);
      float32x4_t v111 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v128, v143.f32[0]), (float32x4_t)v135, *(float32x2_t *)v143.f32, 1), (float32x4_t)v139, v143, 2), (float32x4_t)v140, v143, 3);
      float32x4_t v112 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v128, v144.f32[0]), (float32x4_t)v135, *(float32x2_t *)v144.f32, 1), (float32x4_t)v139, v144, 2), (float32x4_t)v140, v144, 3);
      char v113 = (float32x4_t *)&v92[*(int *)(v90 + 24)];
      *char v113 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v128, v141.f32[0]), (float32x4_t)v135, *(float32x2_t *)v141.f32, 1), (float32x4_t)v139, v141, 2), (float32x4_t)v140, v141, 3);
      v113[1] = v110;
      v113[2] = v111;
      v113[3] = v112;
      id v114 = v138;
      id v115 = objc_msgSend(v138, sel_uuid);
      if (v115)
      {
        uint64_t v116 = v115;
        uint64_t v117 = v129;
        sub_235947958();

        uint64_t v118 = v132;
        uint64_t v119 = *(void (**)(char *, char *, uint64_t))(v132 + 32);
        uint64_t v120 = (uint64_t)v131;
        uint64_t v121 = v133;
        v119(v131, v117, v133);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v118 + 56))(v120, 0, 1, v121);
        int v122 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v120, 1, v121);
        uint64_t v123 = v136;
        unint64_t v124 = v130;
        if (v122 != 1)
        {

          v119(v124, (char *)v120, v121);
LABEL_21:
          uint64_t v126 = (uint64_t)v134;
          v119(v134, v124, v121);
          *(void *)(v126 + *(int *)(v90 + 28)) = v114;
          sub_23568141C(v126, v123);
          uint64_t v125 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56))(v123, v125, 1, v90);
        }
      }
      else
      {
        uint64_t v118 = v132;
        uint64_t v120 = (uint64_t)v131;
        uint64_t v121 = v133;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v132 + 56))(v131, 1, 1, v133);
        uint64_t v123 = v136;
        unint64_t v124 = v130;
      }
      sub_235947968();

      sub_23566A3AC(v120, (uint64_t *)&unk_268810340);
      uint64_t v119 = *(void (**)(char *, char *, uint64_t))(v118 + 32);
      goto LABEL_21;
    }
  }

  uint64_t v125 = 1;
  uint64_t v123 = v136;
  uint64_t v90 = v49;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56))(v123, v125, 1, v90);
}

uint64_t SpatialPersonDetection.hash(into:)()
{
  sub_235947978();
  sub_235680D6C((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
  return sub_2359499A8();
}

id sub_2356801A8(double a1)
{
  uint64_t v3 = type metadata accessor for SpatialPersonDetection();
  sub_23594A0D8();
  id v7 = objc_msgSend(self, sel_boxWithWidth_height_length_chamferRadius_, v4, v5, v6, 0.0);
  id v8 = objc_msgSend(self, sel_nodeWithGeometry_, v7);

  objc_msgSend(v8, sel_setOpacity_, a1);
  id v9 = objc_msgSend(v8, sel_geometry);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_firstMaterial);

    if (v11)
    {
      id v12 = objc_msgSend(v11, sel_diffuse);

      id v13 = objc_msgSend(self, sel_whiteColor);
      objc_msgSend(v12, sel_setContents_, v13);
    }
  }
  objc_msgSend(v8, sel_setSimdWorldTransform_, *(double *)(v1 + *(int *)(v3 + 24)), *(double *)(v1 + *(int *)(v3 + 24) + 16), *(double *)(v1 + *(int *)(v3 + 24) + 32), *(double *)(v1 + *(int *)(v3 + 24) + 48));
  sub_235947928();
  uint64_t v14 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setName_, v14);

  id v15 = objc_msgSend(self, sel_shapeWithNode_options_, v8, 0);
  id v16 = objc_msgSend(self, sel_bodyWithType_shape_, 2, v15);

  objc_msgSend(v8, sel_setPhysicsBody_, v16);
  id v17 = objc_msgSend(v8, sel_physicsBody);
  if (v17)
  {
    uint64_t v18 = v17;
    objc_msgSend(v17, sel_setCategoryBitMask_, 4);
  }
  objc_msgSend(v8, sel_setCategoryBitMask_, 4);
  return v8;
}

unint64_t static SpatialPersonDetection.spatialize(_:frame:orientation:)(unint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  unint64_t v6 = sub_235680980(a1, v5, a3);

  return v6;
}

uint64_t SpatialPersonDetection.hashValue.getter()
{
  return sub_23594AD28();
}

uint64_t sub_235680514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_235947978();
  float v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

__n128 sub_23568057C(uint64_t a1)
{
  return *(__n128 *)(v1 + *(int *)(a1 + 20));
}

__n128 sub_235680588(uint64_t a1)
{
  return *(__n128 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_23568059C()
{
  return sub_23594AD28();
}

uint64_t sub_235680624()
{
  sub_235947978();
  sub_235680D6C((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
  return sub_2359499A8();
}

uint64_t sub_2356806A8()
{
  return sub_23594AD28();
}

uint64_t _s16MagnifierSupport22SpatialPersonDetectionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpatialPersonDetection();
  uint64_t v9 = MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  id v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v9, v12, v13, v14, v15);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v23 = MEMORY[0x270FA5388](v16, v19, v20, v21, v22);
  uint64_t v25 = (char *)&v40 - v24;
  MEMORY[0x270FA5388](v23, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v40 - v30;
  char v32 = sub_235947948();
  sub_235681490(a1, (uint64_t)v31);
  sub_235681490(a2, (uint64_t)v25);
  if (v32)
  {
    long long v41 = *(_OWORD *)&v31[*(int *)(v4 + 20)];
    sub_2356814F4((uint64_t)v31);
    long long v40 = *(_OWORD *)&v25[*(int *)(v4 + 20)];
    sub_2356814F4((uint64_t)v25);
    uint64_t v33 = 0;
    while (1)
    {
      long long v42 = v41;
      float v37 = *(float *)((unint64_t)&v42 & 0xFFFFFFFFFFFFFFF3 | (4 * (v33 & 3)));
      long long v43 = v40;
      float v38 = *(float *)((unint64_t)&v43 & 0xFFFFFFFFFFFFFFF3 | (4 * (v33 & 3)));
      BOOL v34 = v37 == v38;
      if (v33 == 2) {
        break;
      }
      while (1)
      {
        ++v33;
        if (v34) {
          break;
        }
        if (v33 == 2) {
          goto LABEL_6;
        }
        BOOL v34 = 0;
      }
    }
    sub_235681490(a1, (uint64_t)v18);
    sub_235681490(a2, (uint64_t)v11);
    if (v37 == v38)
    {
      uint64_t v39 = *(int *)(v4 + 24);
      uint64_t v35 = vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)&v18[v39 + 16], *(float32x4_t *)&v11[v39 + 16]), (int8x16_t)vceqq_f32(*(float32x4_t *)&v18[v39], *(float32x4_t *)&v11[v39])), vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)&v18[v39 + 32], *(float32x4_t *)&v11[v39 + 32]), (int8x16_t)vceqq_f32(*(float32x4_t *)&v18[v39 + 48], *(float32x4_t *)&v11[v39 + 48])))) >> 31;
      goto LABEL_8;
    }
  }
  else
  {
    sub_2356814F4((uint64_t)v25);
    sub_2356814F4((uint64_t)v31);
LABEL_6:
    sub_235681490(a1, (uint64_t)v18);
    sub_235681490(a2, (uint64_t)v11);
  }
  uint64_t v35 = 0;
LABEL_8:
  sub_2356814F4((uint64_t)v11);
  sub_2356814F4((uint64_t)v18);
  return v35;
}

unint64_t sub_235680980(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a3;
  id v41 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F5D0);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for SpatialPersonDetection();
  uint64_t v37 = *(void *)(v40 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v40, v13, v14, v15, v16);
  uint64_t v39 = (uint64_t)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v19, v20, v21, v22);
  uint64_t v36 = (uint64_t)v35 - v23;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v24 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v24; uint64_t v24 = sub_23594A998())
  {
    v35[1] = v4;
    unint64_t v38 = a1 & 0xC000000000000001;
    uint64_t v4 = (unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    unint64_t v25 = MEMORY[0x263F8EE78];
    uint64_t v26 = 4;
    uint64_t v27 = (id *)a1;
    while (1)
    {
      uint64_t v28 = v38 ? (id *)MEMORY[0x237DE87D0](v26 - 4, a1) : (id *)*(id *)(a1 + 8 * v26);
      a1 = (unint64_t)v28;
      uint64_t v29 = v26 - 3;
      if (__OFADD__(v26 - 4, 1)) {
        break;
      }
      id v30 = v41;
      sub_23567F7C8((void *)a1, v30, v42, (uint64_t)v12);
      if ((*v4)(v12, 1, v40) == 1)
      {
        sub_23566A3AC((uint64_t)v12, &qword_26880F5D0);
      }
      else
      {
        uint64_t v31 = v36;
        sub_23568141C((uint64_t)v12, v36);
        sub_23568141C(v31, v39);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v25 = sub_2356CD854(0, *(void *)(v25 + 16) + 1, 1, v25);
        }
        unint64_t v33 = *(void *)(v25 + 16);
        unint64_t v32 = *(void *)(v25 + 24);
        if (v33 >= v32 >> 1) {
          unint64_t v25 = sub_2356CD854(v32 > 1, v33 + 1, 1, v25);
        }
        *(void *)(v25 + 16) = v33 + 1;
        sub_23568141C(v39, v25+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v33);
      }
      a1 = (unint64_t)v27;
      ++v26;
      if (v29 == v24)
      {
        swift_bridgeObjectRelease();
        return v25;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_235680C84()
{
  return sub_235680D6C((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_235680CCC(uint64_t a1)
{
  uint64_t result = sub_235680D6C(&qword_26880F5B0, (void (*)(uint64_t))type metadata accessor for SpatialPersonDetection);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_235680D24()
{
  return sub_235680D6C(&qword_26880F5B8, (void (*)(uint64_t))type metadata accessor for SpatialPersonDetection);
}

uint64_t sub_235680D6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SpatialPersonDetection(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    sub_2359470F8();
  }
  else
  {
    uint64_t v7 = sub_235947978();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    long long v11 = v10[3];
    id v9[2] = v10[2];
    v9[3] = v11;
    long long v12 = v10[1];
    _OWORD *v9 = *v10;
    v9[1] = v12;
    uint64_t v13 = a3[7];
    uint64_t v14 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = (uint64_t)v14;
    id v15 = v14;
  }
  return a1;
}

void destroy for SpatialPersonDetection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_235947978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 28));
}

uint64_t initializeWithCopy for SpatialPersonDetection(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_235947978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[3];
  id v8[2] = v9[2];
  void v8[3] = v10;
  long long v11 = v9[1];
  _OWORD *v8 = *v9;
  v8[1] = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v13;
  id v14 = v13;
  return a1;
}

uint64_t assignWithCopy for SpatialPersonDetection(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_235947978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  _OWORD *v8 = *v9;
  v8[1] = v9[1];
  id v8[2] = v9[2];
  void v8[3] = v9[3];
  uint64_t v10 = a3[7];
  long long v11 = *(void **)(a2 + v10);
  uint64_t v12 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = v11;
  id v13 = v11;

  return a1;
}

uint64_t initializeWithTake for SpatialPersonDetection(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_235947978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[3];
  id v8[2] = v9[2];
  void v8[3] = v10;
  long long v11 = v9[1];
  _OWORD *v8 = *v9;
  v8[1] = v11;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for SpatialPersonDetection(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_235947978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  _OWORD *v8 = *v9;
  v8[1] = v10;
  long long v11 = v9[3];
  id v8[2] = v9[2];
  void v8[3] = v11;
  uint64_t v12 = a3[7];
  id v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  return a1;
}

uint64_t getEnumTagSinglePayload for SpatialPersonDetection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2356811DC);
}

uint64_t sub_2356811DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_235947978();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SpatialPersonDetection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2356812B0);
}

uint64_t sub_2356812B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_235947978();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_23568136C()
{
  uint64_t result = sub_235947978();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23568141C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpatialPersonDetection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL UIInterfaceOrientationIsLandscape(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t sub_235681490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpatialPersonDetection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2356814F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SpatialPersonDetection();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235681550()
{
  return 1;
}

uint64_t sub_235681560()
{
  return 0x65756C6156776172;
}

uint64_t sub_235681578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_23594AB78();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_235681610(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23568161C(uint64_t a1)
{
  unint64_t v2 = sub_2356819A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_235681658(uint64_t a1)
{
  unint64_t v2 = sub_2356819A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_235681694()
{
  return sub_23594AD28();
}

uint64_t sub_2356816D8()
{
  return sub_23594ACE8();
}

uint64_t sub_235681700()
{
  return sub_23594AD28();
}

uint64_t DynamicTypeSize.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F5D8);
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2359488B8();
  uint64_t v25 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2356819A4();
  sub_23594AD68();
  if (!v2)
  {
    uint64_t v18 = v17;
    uint64_t v19 = v25;
    unint64_t v20 = sub_23594AA88();
    uint64_t v21 = v26;
    if (v20 >= 0xC)
    {
      sub_2356819F8();
      swift_allocError();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v4);
    }
    else
    {
      uint64_t v22 = (unsigned int *)qword_264C605F8[v20];
      (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v4);
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v18, *v22, v11);
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v24, v18, v11);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_2356819A4()
{
  unint64_t result = qword_26880F5E0;
  if (!qword_26880F5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F5E0);
  }
  return result;
}

unint64_t sub_2356819F8()
{
  unint64_t result = qword_26880F5E8;
  if (!qword_26880F5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F5E8);
  }
  return result;
}

uint64_t DynamicTypeSize.encode(to:)(void *a1)
{
  uint64_t v2 = sub_2359488B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F5F0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2356819A4();
  sub_23594AD78();
  (*(void (**)(char *, void, uint64_t))(v3 + 16))(v9, v20[3], v2);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v9, v2);
  if (v18 == *MEMORY[0x263F18D48]
    || v18 == *MEMORY[0x263F18D20]
    || v18 == *MEMORY[0x263F18D28]
    || v18 == *MEMORY[0x263F18D10]
    || v18 == *MEMORY[0x263F18D38]
    || v18 == *MEMORY[0x263F18D60]
    || v18 == *MEMORY[0x263F18D70]
    || v18 == *MEMORY[0x263F18CB8]
    || v18 == *MEMORY[0x263F18CC8]
    || v18 == *MEMORY[0x263F18CD8]
    || v18 == *MEMORY[0x263F18CF0]
    || v18 == *MEMORY[0x263F18CF8])
  {
    sub_23594AB08();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  }
  else
  {
    sub_2356819F8();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
}

uint64_t sub_235681DE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DynamicTypeSize.init(from:)(a1, a2);
}

uint64_t sub_235681E00(void *a1)
{
  return DynamicTypeSize.encode(to:)(a1);
}

uint64_t sub_235681E24()
{
  return 0;
}

ValueMetadata *_s11CodingErrorOMa()
{
  return &_s11CodingErrorON;
}

uint64_t getEnumTagSinglePayload for DocumentFilter(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s11CodingErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x235681F28);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_235681F64()
{
  unint64_t result = qword_26880F5F8;
  if (!qword_26880F5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F5F8);
  }
  return result;
}

unint64_t sub_235681FBC()
{
  unint64_t result = qword_26880F600;
  if (!qword_26880F600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F600);
  }
  return result;
}

unint64_t sub_235682014()
{
  unint64_t result = qword_26880F608;
  if (!qword_26880F608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F608);
  }
  return result;
}

unint64_t sub_23568206C()
{
  unint64_t result = qword_26880F610;
  if (!qword_26880F610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F610);
  }
  return result;
}

uint64_t sub_2356820C4()
{
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  int v2 = (void *)sub_235949A88();
  int v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  uint64_t v5 = sub_235949AC8();
  swift_bridgeObjectRelease();

  return v5;
}

unint64_t sub_235682294@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2356857B8(*a1);
  *a2 = result;
  return result;
}

void sub_2356822C0(void *a1@<X8>)
{
  *a1 = &unk_26E8BD6A0;
}

uint64_t sub_2356822D0()
{
  return sub_235949D38();
}

uint64_t sub_235682330()
{
  return sub_235949D08();
}

void sub_235682380()
{
  id v1 = v0;
  v60.receiver = v0;
  v60.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v60, sel_viewDidLoad);
  id v2 = objc_msgSend(self, sel_shared);
  id v3 = objc_msgSend(v2, sel_doorAttributesClassifierProperties);

  if (v3)
  {
    *(void *)&v57[0] = 0xD000000000000017;
    *((void *)&v57[0] + 1) = 0x800000023596BB40;
    id v4 = objc_msgSend(v3, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v4)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v57, 0, sizeof(v57));
    }
    sub_23567D658((uint64_t)v57, (uint64_t)&v58);
    if (!*((void *)&v59 + 1))
    {

      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      return;
    }
    sub_2356594B0(0, &qword_26880F650);
    if ((swift_dynamicCast() & 1) == 0)
    {

      return;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2688146E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_2359539E0;
    *(unsigned char *)(v5 + 32) = 4;
    *(void *)&long long v58 = 0x746174536E65704FLL;
    *((void *)&v58 + 1) = 0xE900000000000065;
    id v6 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v6)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      *(void *)&long long v58 = 0x746174536E65704FLL;
      *((void *)&v58 + 1) = 0xE900000000000065;
      id v7 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      if (!v7) {
        goto LABEL_60;
      }
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23567183C(v57, &v58);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      swift_dynamicCast();
      uint64_t v8 = (uint64_t)v56;
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v8 = sub_23594A478();
    }
    *(void *)(v5 + 40) = v8;
    *(unsigned char *)(v5 + 48) = 5;
    *(void *)&long long v58 = 0x6570616853;
    *((void *)&v58 + 1) = 0xE500000000000000;
    id v9 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v9)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      *(void *)&long long v58 = 0x6570616853;
      *((void *)&v58 + 1) = 0xE500000000000000;
      id v10 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      if (!v10)
      {
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23567183C(v57, &v58);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      swift_dynamicCast();
      uint64_t v11 = (uint64_t)v56;
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v11 = sub_23594A478();
    }
    *(void *)(v5 + 56) = v11;
    *(unsigned char *)(v5 + 64) = 0;
    *(void *)&long long v58 = 0x6863616F72707041;
    *((void *)&v58 + 1) = 0xE800000000000000;
    id v12 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    uint64_t v55 = v1;
    uint64_t v54 = v3;
    if (v12)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      *(void *)&long long v58 = 0x6863616F72707041;
      *((void *)&v58 + 1) = 0xE800000000000000;
      id v13 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      if (!v13)
      {
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23567183C(v57, &v58);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      swift_dynamicCast();
      uint64_t v14 = (uint64_t)v56;
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v14 = sub_23594A478();
    }
    *(void *)(v5 + 72) = v14;
    *(unsigned char *)(v5 + 80) = 3;
    *(void *)&long long v58 = 0x6874654D6E65704FLL;
    *((void *)&v58 + 1) = 0xEA0000000000646FLL;
    id v15 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v15)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      *(void *)&long long v58 = 0x6874654D6E65704FLL;
      *((void *)&v58 + 1) = 0xEA0000000000646FLL;
      id v16 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      if (!v16)
      {
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23567183C(v57, &v58);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      swift_dynamicCast();
      uint64_t v17 = (uint64_t)v56;
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v17 = sub_23594A478();
    }
    *(void *)(v5 + 88) = v17;
    *(unsigned char *)(v5 + 96) = 6;
    *(void *)&long long v58 = 1702521171;
    *((void *)&v58 + 1) = 0xE400000000000000;
    id v18 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v18)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      *(void *)&long long v58 = 1702521171;
      *((void *)&v58 + 1) = 0xE400000000000000;
      id v19 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      if (!v19)
      {
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23567183C(v57, &v58);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      swift_dynamicCast();
      uint64_t v20 = (uint64_t)v56;
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v20 = sub_23594A478();
    }
    *(void *)(v5 + 104) = v20;
    *(unsigned char *)(v5 + 112) = 2;
    *(void *)&long long v58 = 0x646E6148726F6F44;
    *((void *)&v58 + 1) = 0xEA0000000000656CLL;
    id v21 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v21)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      *(void *)&long long v58 = 0x646E6148726F6F44;
      *((void *)&v58 + 1) = 0xEA0000000000656CLL;
      id v22 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      if (!v22)
      {
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23567183C(v57, &v58);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      swift_dynamicCast();
      uint64_t v23 = (uint64_t)v56;
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v23 = sub_23594A478();
    }
    *(void *)(v5 + 120) = v23;
    *(unsigned char *)(v5 + 128) = 7;
    *(void *)&long long v58 = 0x776F646E6957;
    *((void *)&v58 + 1) = 0xE600000000000000;
    id v24 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v24)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      *(void *)&long long v58 = 0x776F646E6957;
      *((void *)&v58 + 1) = 0xE600000000000000;
      id v25 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      if (!v25)
      {
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23567183C(v57, &v58);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      swift_dynamicCast();
      uint64_t v26 = (uint64_t)v56;
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v26 = sub_23594A478();
    }
    *(void *)(v5 + 136) = v26;
    *(unsigned char *)(v5 + 144) = 1;
    *(void *)&long long v58 = 0x726F6C6F43;
    *((void *)&v58 + 1) = 0xE500000000000000;
    id v27 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v27)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      *(void *)&long long v58 = 0x726F6C6F43;
      *((void *)&v58 + 1) = 0xE500000000000000;
      id v28 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      if (!v28)
      {
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23567183C(v57, &v58);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      swift_dynamicCast();
      uint64_t v29 = (uint64_t)v56;
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v29 = sub_23594A478();
    }
    *(void *)(v5 + 152) = v29;
    *(unsigned char *)(v5 + 160) = 8;
    *(void *)&long long v58 = 0x6C6169726574614DLL;
    *((void *)&v58 + 1) = 0xE800000000000000;
    id v30 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v30)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      *(void *)&long long v58 = 0x6C6169726574614DLL;
      *((void *)&v58 + 1) = 0xE800000000000000;
      id v31 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      if (!v31)
      {
LABEL_68:
        __break(1u);
        swift_release();
        __break(1u);
        return;
      }
      sub_23594A6A8();
      swift_unknownObjectRelease();
      sub_23567183C(v57, &v58);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      swift_dynamicCast();
      uint64_t v32 = (uint64_t)v56;
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
      sub_23566A3AC((uint64_t)&v58, &qword_26AF15750);
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v32 = sub_23594A478();
    }
    *(void *)(v5 + 168) = v32;
    sub_23566FE0C(v5);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688146F0);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v33 = swift_bridgeObjectRetain();
    BOOL v34 = sub_23571A754(v33);
    swift_bridgeObjectRelease();
    *(void *)&long long v58 = v34;
    sub_235684DE8((void **)&v58);
    swift_bridgeObjectRelease();
    uint64_t v35 = v58;
    uint64_t v36 = *(void *)(v58 + 16);
    if (v36)
    {
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      uint64_t v37 = (char **)&v1[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes];
      unint64_t v38 = (id *)(v35 + 40);
      do
      {
        char v39 = *((unsigned char *)v38 - 8);
        id v40 = *v38;
        id v41 = (void *)sub_23594A478();
        char v42 = sub_23594A4B8();

        if ((v42 & 1) == 0)
        {
          swift_beginAccess();
          long long v43 = *v37;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          void *v37 = v43;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            long long v43 = sub_2356CDB08(0, *((void *)v43 + 2) + 1, 1, v43);
            void *v37 = v43;
          }
          unint64_t v46 = *((void *)v43 + 2);
          unint64_t v45 = *((void *)v43 + 3);
          if (v46 >= v45 >> 1)
          {
            long long v43 = sub_2356CDB08((char *)(v45 > 1), v46 + 1, 1, v43);
            void *v37 = v43;
          }
          *((void *)v43 + 2) = v46 + 1;
          v43[v46 + 32] = v39;
          swift_endAccess();
        }

        v38 += 2;
        --v36;
      }
      while (v36);
    }
    swift_release();
    double v47 = *(void **)&v55[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_tableView];
    objc_msgSend(v47, sel_setDataSource_, v55);
    objc_msgSend(v47, sel_setDelegate_, v55);
    sub_2356594B0(0, (unint64_t *)&qword_26880EB00);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v49 = (void *)sub_235949A88();
    objc_msgSend(v47, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v49);

    objc_msgSend(v47, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v50 = objc_msgSend(v55, sel_view);
    if (v50)
    {
      char v51 = v50;
      objc_msgSend(v50, sel_addSubview_, v47);

      id v52 = objc_msgSend(v55, sel_view);
      if (v52)
      {
        uint64_t v53 = v52;
        sub_23592C7F4(v52, *MEMORY[0x263F834E8], *(double *)(MEMORY[0x263F834E8] + 8), *(double *)(MEMORY[0x263F834E8] + 16), *(double *)(MEMORY[0x263F834E8] + 24));

        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
}

void sub_2356834BC(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v6 = (void *)sub_235949A88();
  id v7 = (void *)sub_235949A88();
  id v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_235949AC8();
  id v9 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);
}

id sub_235683800(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_tableView;
  id v9 = objc_allocWithZone(MEMORY[0x263F82C78]);
  objc_super v10 = v4;
  id v11 = objc_msgSend(v9, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  id v12 = self;
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_systemYellowColor);
  objc_msgSend(v13, sel_setTintColor_, v14);

  objc_msgSend(v13, sel_setClipsToBounds_, 0);
  *(void *)&v4[v8] = v13;
  *(void *)&v10[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes] = MEMORY[0x263F8EE78];
  id v15 = &v10[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_delegate];
  *(_OWORD *)id v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((void *)v15 + 4) = 0;

  if (a2)
  {
    id v16 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = 0;
  }
  v19.receiver = v10;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, v16, a3);

  return v17;
}

id sub_2356839F0(void *a1)
{
  id v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_tableView;
  id v6 = objc_allocWithZone(MEMORY[0x263F82C78]);
  id v7 = v2;
  id v8 = objc_msgSend(v6, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  id v9 = self;
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_systemYellowColor);
  objc_msgSend(v10, sel_setTintColor_, v11);

  objc_msgSend(v10, sel_setClipsToBounds_, 0);
  *(void *)&v2[v5] = v10;
  *(void *)&v7[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes] = MEMORY[0x263F8EE78];
  id v12 = &v7[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_delegate];
  *(_OWORD *)id v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((void *)v12 + 4) = 0;

  v15.receiver = v7;
  v15.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);

  return v13;
}

uint64_t type metadata accessor for DoorAttributeCustomizationViewController()
{
  return self;
}

id sub_235683C48(void *a1)
{
  id v3 = (void *)sub_235949A88();
  id v4 = (void *)sub_235947AB8();
  id v5 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v3, v4);

  unint64_t v6 = 0;
  if (!sub_235947B28()) {
    unint64_t v6 = sub_235947AE8();
  }
  uint64_t v7 = v1 + OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes;
  swift_beginAccess();
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v6 >= *(void *)(*(void *)v7 + 16))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_8;
  }
  unint64_t v6 = *(unsigned __int8 *)(*(void *)v7 + v6 + 32);
  id v8 = objc_msgSend(v5, sel_textLabel);
  if (v8)
  {
    id v9 = v8;
    sub_2356820C4();
    id v10 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v10);
  }
  if (qword_26AF13B78 != -1) {
    goto LABEL_16;
  }
LABEL_8:
  swift_beginAccess();
  uint64_t v11 = qword_26AF144C0;
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  if (v11 != -1) {
    uint64_t v12 = swift_once();
  }
  MEMORY[0x270FA5388](v12, v13, v14, v15, v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15090);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v17 = sub_2356BFD20(v6, v20);
  swift_bridgeObjectRelease();
  if (v17) {
    uint64_t v18 = 3;
  }
  else {
    uint64_t v18 = 0;
  }
  objc_msgSend(v5, sel_setAccessoryType_, v18);
  return v5;
}

void sub_235684070(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2359496D8();
  id v5 = *(uint8_t **)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6, v7, v8, v9);
  uint64_t v11 = (char *)v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_235947AB8();
  id v13 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v12);

  if (!v13) {
    return;
  }
  uint64_t v14 = (void *)sub_235947AB8();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v14, 1);

  if (sub_235947B28()) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = sub_235947AE8();
  }
  uint64_t v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes);
  swift_beginAccess();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = *v16;
    if (v15 < *(void *)(*v16 + 16))
    {
      float32x4_t v95 = v11;
      uint64_t v11 = (char *)*(unsigned __int8 *)(v17 + v15 + 32);
      if (qword_26AF13B78 == -1) {
        goto LABEL_8;
      }
      goto LABEL_45;
    }
  }
  __break(1u);
LABEL_45:
  swift_once();
LABEL_8:
  float32x4_t v96 = v5;
  uint64_t v18 = (uint64_t *)(qword_26AF181E0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedAttributes);
  swift_beginAccess();
  uint64_t v19 = v18[1];
  uint64_t v20 = v18[2];
  v100[0] = *v18;
  v100[1] = v19;
  v100[2] = v20;
  uint64_t v21 = qword_26AF144C0;
  swift_bridgeObjectRetain();
  uint64_t v22 = swift_bridgeObjectRetain();
  if (v21 != -1) {
    uint64_t v22 = swift_once();
  }
  MEMORY[0x270FA5388](v22, v23, v24, v25, v26);
  v94[-2] = v100;
  v94[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15090);
  sub_23594A2A8();
  v94[2] = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v27 = (char *)v102[0];
  BOOL v28 = sub_2356BFD20((BOOL)v11, v102[0]);
  id v97 = v13;
  if (v28)
  {
    v94[0] = v4;
    uint64_t v29 = *((void *)v27 + 2);
    if (v29)
    {
      id v30 = (unsigned __int8 *)(v27 + 32);
      uint64_t v31 = MEMORY[0x263F8EE78];
      do
      {
        int v35 = *v30++;
        char v34 = v35;
        if (v35 != v11)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v100[0] = v31;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_235676484(0, *(void *)(v31 + 16) + 1, 1);
            uint64_t v31 = v100[0];
          }
          unint64_t v33 = *(void *)(v31 + 16);
          unint64_t v32 = *(void *)(v31 + 24);
          if (v33 >= v32 >> 1)
          {
            sub_235676484(v32 > 1, v33 + 1, 1);
            uint64_t v31 = v100[0];
          }
          *(void *)(v31 + 16) = v33 + 1;
          *(unsigned char *)(v31 + v33 + 32) = v34;
        }
        --v29;
      }
      while (v29);
    }
    else
    {
      uint64_t v31 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v97, sel_setAccessoryType_, 0);
    if (!*(void *)(v31 + 16))
    {
      uint64_t v87 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionAttributes;
      swift_beginAccess();
      LOBYTE(v102[0]) = 0;
      float32x4_t v88 = v95;
      uint64_t v89 = sub_2359496C8();
      MEMORY[0x270FA5388](v89, v90, v91, v92, v93);
      v94[-2] = v102;
      v94[-1] = v87;
      sub_23594A298();
      (*((void (**)(char *, void))v96 + 1))(v88, v94[0]);
      goto LABEL_29;
    }
    uint64_t v4 = v94[0];
  }
  else
  {
    objc_msgSend(v13, sel_setAccessoryType_, 3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v27 = sub_2356CDB08(0, *((void *)v27 + 2) + 1, 1, v27);
    }
    unint64_t v38 = *((void *)v27 + 2);
    unint64_t v37 = *((void *)v27 + 3);
    if (v38 >= v37 >> 1) {
      id v27 = sub_2356CDB08((char *)(v37 > 1), v38 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v38 + 1;
    v27[v38 + 32] = (char)v11;
    uint64_t v31 = (uint64_t)v27;
  }
  char v39 = v95;
  uint64_t v40 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionAttributes;
  swift_beginAccess();
  LOBYTE(v102[0]) = 1;
  uint64_t v41 = sub_2359496C8();
  MEMORY[0x270FA5388](v41, v42, v43, v44, v45);
  v94[-2] = v102;
  v94[-1] = v40;
  sub_23594A298();
  (*((void (**)(char *, uint64_t))v96 + 1))(v39, v4);
LABEL_29:
  swift_endAccess();
  if (qword_26880E428 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_235948278();
  __swift_project_value_buffer(v46, (uint64_t)qword_26880F800);
  swift_bridgeObjectRetain_n();
  double v47 = sub_235948258();
  os_log_type_t v48 = sub_23594A148();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v100[0] = v50;
    *(_DWORD *)uint64_t v49 = 136315138;
    float32x4_t v96 = v49 + 4;
    uint64_t v51 = swift_bridgeObjectRetain();
    uint64_t v52 = MEMORY[0x237DE7D20](v51, &type metadata for DoorAttribute);
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    v102[0] = sub_235687708(v52, v54, v100);
    sub_23594A608();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_235640000, v47, v48, "New attributes: %s", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237DE9F30](v50, -1, -1);
    MEMORY[0x237DE9F30](v49, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_2357D51AC(v31);
  swift_bridgeObjectRelease();
  uint64_t v55 = (void *)qword_26AF181E0;
  uint64_t v56 = swift_beginAccess();
  uint64_t v57 = v55[10];
  uint64_t v58 = v55[11];
  uint64_t v59 = v55[12];
  v100[0] = v55[9];
  v100[1] = v57;
  v100[2] = v58;
  v100[3] = v59;
  MEMORY[0x270FA5388](v56, v60, v61, v62, v63);
  v94[-2] = v100;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15060);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v64 = v101;
  if (!v101) {
    goto LABEL_39;
  }
  uint64_t v65 = v100[35];
  float32x4_t v66 = (void *)qword_26AF181E0;
  uint64_t v67 = swift_beginAccess();
  uint64_t v68 = v66[6];
  uint64_t v69 = v66[7];
  v100[0] = v66[5];
  v100[1] = v68;
  v100[2] = v69;
  MEMORY[0x270FA5388](v67, v70, v71, v72, v73);
  v94[-2] = v100;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15030);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v74 = v99;
  if (*(void *)(v99 + 16))
  {
    unint64_t v75 = sub_2358780C4(v65, v64);
    if (v76)
    {
      memcpy(v100, (const void *)(*(void *)(v74 + 56) + 280 * v75), 0x118uLL);
      sub_235659250((uint64_t)v100);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v77 = v100[19];
      char v78 = (void *)(qword_26AF181E0
                     + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedAttributes);
      uint64_t v79 = swift_beginAccess();
      uint64_t v80 = v78[1];
      uint64_t v81 = v78[2];
      v98[0] = *v78;
      v98[1] = v80;
      v98[2] = v81;
      MEMORY[0x270FA5388](v79, v82, v83, v84, v85);
      v94[-2] = v98;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v86 = sub_2357D8720(v77, v98[3]);
      sub_235659338((uint64_t)v100);
      swift_bridgeObjectRelease();
      if (!v86)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v98[0]) = 1;
        sub_2359470F8();
        sub_2359484E8();
      }
LABEL_39:

      return;
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for DoorAttribute(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DoorAttribute(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x235684CF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DoorAttribute()
{
  return &type metadata for DoorAttribute;
}

unint64_t sub_235684D34()
{
  unint64_t result = qword_26880F640;
  if (!qword_26880F640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F640);
  }
  return result;
}

unint64_t sub_235684D8C()
{
  unint64_t result = qword_26880F648;
  if (!qword_26880F648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26AF15090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F648);
  }
  return result;
}

uint64_t sub_235684DE8(void **a1)
{
  int v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = (void *)sub_2356EB47C(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_235684E54(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_235684E54(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_23594AB38();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = 0;
      uint64_t v86 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v88 = *(unsigned __int8 *)(v86 + 16 * i);
        uint64_t v89 = v85;
        do
        {
          if (v88 >= *(unsigned __int8 *)(v86 + v89)) {
            break;
          }
          if (!v86) {
            goto LABEL_140;
          }
          uint64_t v90 = v86 + v89;
          uint64_t v91 = *(void *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *(unsigned char *)uint64_t v90 = v88;
          *(void *)(v90 + 8) = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (unsigned __int8 *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v92 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v93 = *v101;
        do
        {
          unint64_t v94 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v93) {
            goto LABEL_144;
          }
          float32x4_t v95 = v92;
          uint64_t v96 = *(void *)&v92[16 * v94 + 32];
          uint64_t v97 = *(void *)&v92[16 * v13 + 24];
          sub_23568553C((unsigned __int8 *)(v93 + 16 * v96), (unsigned __int8 *)(v93 + 16 * *(void *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            float32x4_t v95 = sub_2356EB304((uint64_t)v95);
          }
          if (v94 >= *((void *)v95 + 2)) {
            goto LABEL_133;
          }
          float32x4_t v98 = &v95[16 * v94 + 32];
          *(void *)float32x4_t v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v95 + 2);
          if (v13 > v99) {
            goto LABEL_134;
          }
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          uint64_t v92 = v95;
          *((void *)v95 + 2) = v99 - 1;
          unint64_t v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810940);
    uint64_t v8 = sub_235949DC8();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 32;
  uint64_t v100 = *a1 - 16;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v104 = v6;
  uint64_t v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(unsigned __int8 *)(v11 + 16 * v10);
      uint64_t v16 = 16 * v14;
      unsigned int v17 = *(unsigned __int8 *)(v11 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (unsigned __int8 *)(v102 + 16 * v14);
        unsigned int v19 = v15;
        while (1)
        {
          unsigned int v21 = *v18;
          v18 += 16;
          unsigned int v20 = v21;
          if (v15 < v17 == v21 >= v19) {
            break;
          }
          ++v10;
          unsigned int v19 = v20;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v22 = 16 * v10;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              char v26 = *(unsigned char *)(v11 + v16);
              uint64_t v27 = *(void *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(unsigned char *)(v25 - 16) = v26;
              *(void *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v28 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v28 >= v3) {
      uint64_t v28 = v3;
    }
    if (v28 < v14) {
      break;
    }
    if (v10 != v28)
    {
      uint64_t v29 = (unsigned __int8 *)(v100 + 16 * v10);
      do
      {
        unsigned int v30 = *(unsigned __int8 *)(v11 + 16 * v10);
        uint64_t v31 = v14;
        unint64_t v32 = v29;
        do
        {
          if (v30 >= *v32) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v33 = *((void *)v32 + 3);
          *((_OWORD *)v32 + 1) = *(_OWORD *)v32;
          *unint64_t v32 = v30;
          *((void *)v32 + 1) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      uint64_t v10 = v28;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_2356EAB30(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v35 = *((void *)v12 + 2);
    unint64_t v34 = *((void *)v12 + 3);
    unint64_t v13 = v35 + 1;
    uint64_t v11 = v106;
    if (v35 >= v34 >> 1)
    {
      uint64_t v84 = sub_2356EAB30((char *)(v34 > 1), v35 + 1, 1, v12);
      uint64_t v11 = v106;
      uint64_t v12 = v84;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v36 = v12 + 32;
    unint64_t v37 = &v12[16 * v35 + 32];
    *(void *)unint64_t v37 = v14;
    *((void *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        unint64_t v38 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v43 = &v36[16 * v13];
          uint64_t v44 = *((void *)v43 - 8);
          uint64_t v45 = *((void *)v43 - 7);
          BOOL v49 = __OFSUB__(v45, v44);
          uint64_t v46 = v45 - v44;
          if (v49) {
            goto LABEL_119;
          }
          uint64_t v48 = *((void *)v43 - 6);
          uint64_t v47 = *((void *)v43 - 5);
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v41 = v47 - v48;
          char v42 = v49;
          if (v49) {
            goto LABEL_120;
          }
          unint64_t v50 = v13 - 2;
          uint64_t v51 = &v36[16 * v13 - 32];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          BOOL v49 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          if (v49) {
            goto LABEL_122;
          }
          BOOL v49 = __OFADD__(v41, v54);
          uint64_t v55 = v41 + v54;
          if (v49) {
            goto LABEL_125;
          }
          if (v55 >= v46)
          {
            uint64_t v73 = &v36[16 * v38];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v49 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v49) {
              goto LABEL_129;
            }
            BOOL v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v67 = *((void *)v12 + 4);
            uint64_t v68 = *((void *)v12 + 5);
            BOOL v49 = __OFSUB__(v68, v67);
            uint64_t v60 = v68 - v67;
            char v61 = v49;
            goto LABEL_77;
          }
          uint64_t v40 = *((void *)v12 + 4);
          uint64_t v39 = *((void *)v12 + 5);
          BOOL v49 = __OFSUB__(v39, v40);
          uint64_t v41 = v39 - v40;
          char v42 = v49;
        }
        if (v42) {
          goto LABEL_121;
        }
        unint64_t v50 = v13 - 2;
        uint64_t v56 = &v36[16 * v13 - 32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v59 = __OFSUB__(v57, v58);
        uint64_t v60 = v57 - v58;
        char v61 = v59;
        if (v59) {
          goto LABEL_124;
        }
        uint64_t v62 = &v36[16 * v38];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v49 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v49) {
          goto LABEL_127;
        }
        if (__OFADD__(v60, v65)) {
          goto LABEL_128;
        }
        if (v60 + v65 >= v41)
        {
          BOOL v66 = v41 < v65;
LABEL_83:
          if (v66) {
            unint64_t v38 = v50;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v61) {
          goto LABEL_123;
        }
        uint64_t v69 = &v36[16 * v38];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v49 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v49) {
          goto LABEL_126;
        }
        if (v72 < v60) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        char v78 = v12;
        uint64_t v79 = &v36[16 * v77];
        uint64_t v80 = *(void *)v79;
        uint64_t v81 = &v36[16 * v38];
        uint64_t v82 = *((void *)v81 + 1);
        sub_23568553C((unsigned __int8 *)(v11 + 16 * *(void *)v79), (unsigned __int8 *)(v11 + 16 * *(void *)v81), v11 + 16 * v82, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v82 < v80) {
          goto LABEL_116;
        }
        if (v38 > *((void *)v78 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v79 = v80;
        *(void *)&v36[16 * v77 + 8] = v82;
        unint64_t v83 = *((void *)v78 + 2);
        if (v38 >= v83) {
          goto LABEL_118;
        }
        uint64_t v12 = v78;
        unint64_t v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((void *)v78 + 2) = v83 - 1;
        uint64_t v11 = v106;
        if (v83 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v104;
    uint64_t v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_23594A958();
  __break(1u);
  return result;
}

uint64_t sub_23568553C(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned int v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v16 = &v4[16 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        unsigned int v17 = (unsigned __int8 *)(a3 - 16);
        uint64_t v18 = v6;
        while (1)
        {
          unsigned int v19 = v17 + 16;
          unsigned int v20 = *(v18 - 16);
          v18 -= 16;
          if (*(v16 - 16) >= v20)
          {
            uint64_t v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(_OWORD *)unsigned int v17 = *((_OWORD *)v16 - 1);
            }
            uint64_t v18 = v6;
            v16 -= 16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(_OWORD *)unsigned int v17 = *(_OWORD *)v18;
            }
            uint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 16;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v23 = v4;
          unsigned int v15 = v6;
        }
        else
        {
          unsigned int v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_2356EAE8C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

unint64_t sub_2356857B8(unint64_t result)
{
  if (result >= 9) {
    return 9;
  }
  return result;
}

unint64_t sub_2356857C8()
{
  unint64_t result = qword_26AF13278;
  if (!qword_26AF13278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF13278);
  }
  return result;
}

uint64_t sub_23568581C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2357EEBAC(*(void **)(v1 + 16), a1);
}

uint64_t sub_235685840()
{
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  int v2 = (void *)sub_235949A88();
  uint64_t v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  uint64_t v5 = sub_235949AC8();
  return v5;
}

uint64_t sub_235685930@<X0>(uint64_t *a1@<X8>)
{
  return sub_23568581C(a1);
}

uint64_t destroy for MFReaderTextBlockView()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MFReaderTextBlockView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  sub_2359470F8();
  sub_2359470F8();
  return a1;
}

uint64_t assignWithCopy for MFReaderTextBlockView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_2359470F8();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_2359470F8();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MFReaderTextBlockView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MFReaderTextBlockView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MFReaderTextBlockView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MFReaderTextBlockView()
{
  return &type metadata for MFReaderTextBlockView;
}

uint64_t sub_235685B74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_235685B90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2359490C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_235947548();
  MEMORY[0x270FA5388](v11 - 8, v12, v13, v14, v15);
  sub_235685DE4((uint64_t)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_235949138();
  uint64_t v19 = v18;
  uint64_t v31 = v20;
  char v22 = v21 & 1;
  long long v34 = *(_OWORD *)(v1 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359470F8();
  sub_2359484D8();
  swift_release();
  swift_release();
  sub_235686798((uint64_t)&v34);
  char v32 = v33;
  MFReaderFont.rawValue.getter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v10, *MEMORY[0x263F1A730], v3);
  sub_235949058();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  uint64_t v23 = sub_235949118();
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28;
  swift_release();
  sub_2356867C4(v17, v19, v22);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(void *)(a1 + 8) = v25;
  *(unsigned char *)(a1 + 16) = v27 & 1;
  *(void *)(a1 + 24) = v29;
  return result;
}

uint64_t sub_235685DE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F658);
  uint64_t v8 = MEMORY[0x270FA5388](v106, v4, v5, v6, v7);
  uint64_t v103 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  uint64_t v101 = (char *)&v94 - v14;
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F660);
  uint64_t v19 = MEMORY[0x270FA5388](v104, v15, v16, v17, v18);
  uint64_t v102 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v21, v22, v23, v24);
  uint64_t v105 = (uint64_t)&v94 - v25;
  uint64_t v26 = sub_235947548();
  float32x4_t v108 = *(char **)(v26 - 8);
  MEMORY[0x270FA5388](v26, v27, v28, v29, v30);
  char v32 = (char *)&v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F668);
  uint64_t v38 = MEMORY[0x270FA5388](v33 - 8, v34, v35, v36, v37);
  uint64_t v40 = (char *)&v94 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38, v41, v42, v43, v44);
  uint64_t v46 = (char *)&v94 - v45;
  uint64_t v109 = sub_235947528();
  uint64_t v111 = *(void *)(v109 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v109, v47, v48, v49, v50);
  float32x4_t v107 = (char *)&v94 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51, v53, v54, v55, v56);
  float32x4_t v110 = (char *)&v94 - v57;
  uint64_t v58 = sub_2359475C8();
  MEMORY[0x270FA5388](v58 - 8, v59, v60, v61, v62);
  uint64_t v63 = *v1;
  swift_bridgeObjectRetain();
  sub_2359475B8();
  sub_235947558();
  char v64 = *((unsigned char *)v1 + 40);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v65 = v2 + 2;
  if (v64)
  {
    v115[0] = *v65;
    uint64_t v100 = sub_2359470F8();
    sub_2357C84D0();
    sub_235686798((uint64_t)v115);
    uint64_t v68 = sub_2359493A8();
    swift_release();
    *(void *)&v113[0] = v68;
    unint64_t v99 = sub_2356867F4();
    uint64_t result = sub_235947518();
    if (v2[1])
    {
      swift_getKeyPath();
      *(void *)&v113[0] = v63;
      sub_2356868F0((unint64_t *)&qword_26880F678, (void (*)(uint64_t))type metadata accessor for MFReaderTextBlock);
      sub_235947B68();
      uint64_t result = swift_release();
      if ((*(unsigned char *)(v63 + OBJC_IVAR____TtC16MagnifierSupport17MFReaderTextBlock__selectedLocalTextRange + 16) & 1) == 0
        && (*(void *)(v63 + OBJC_IVAR____TtC16MagnifierSupport17MFReaderTextBlock__selectedLocalTextRange) ^ *(void *)(v63 + OBJC_IVAR____TtC16MagnifierSupport17MFReaderTextBlock__selectedLocalTextRange + 8)) >= 0x4000)
      {
        float32x4_t v108 = (char *)*((void *)v108 + 2);
        ((void (*)(char *, uint64_t, uint64_t))v108)(v32, a1, v26);
        uint64_t v98 = sub_2356868F0(&qword_26880F680, MEMORY[0x263F06828]);
        sub_235947538();
        uint64_t v69 = v111;
        uint64_t v70 = v109;
        uint64_t v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48);
        if (v97(v46, 1, v109) == 1)
        {
          return sub_23566A3AC((uint64_t)v46, &qword_26880F668);
        }
        else
        {
          uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
          uint64_t v96 = v69 + 32;
          float32x4_t v95 = v71;
          v71(v110, v46, v70);
          ((void (*)(char *, uint64_t, uint64_t))v108)(v32, a1, v26);
          sub_235947538();
          if (v97(v40, 1, v70) == 1)
          {
            (*(void (**)(char *, uint64_t))(v69 + 8))(v110, v70);
            return sub_23566A3AC((uint64_t)v40, &qword_26880F668);
          }
          else
          {
            uint64_t v72 = v107;
            v95(v107, v40, v70);
            sub_2356868F0(&qword_26880F688, MEMORY[0x263F067E8]);
            uint64_t v73 = v110;
            uint64_t result = sub_235949A08();
            if (result)
            {
              uint64_t v74 = v106;
              uint64_t v75 = v101;
              uint64_t v76 = &v101[*(int *)(v106 + 48)];
              uint64_t v77 = v111;
              char v78 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
              v78(v101, v73, v70);
              float32x4_t v108 = v76;
              v78(v76, v72, v70);
              uint64_t v79 = *(int *)(v74 + 48);
              uint64_t v80 = v103;
              uint64_t v81 = &v103[v79];
              v78(v103, v75, v70);
              v78(v81, v76, v70);
              uint64_t v82 = (uint64_t)v102;
              unint64_t v83 = v95;
              v95(v102, v80, v70);
              uint64_t v84 = *(void (**)(char *, uint64_t))(v77 + 8);
              v84(v81, v70);
              uint64_t v85 = &v80[*(int *)(v106 + 48)];
              v83(v80, v75, v70);
              v83(v85, v108, v70);
              v83((char *)(v82 + *(int *)(v104 + 36)), v85, v70);
              v84(v80, v70);
              uint64_t v86 = v105;
              sub_235686938(v82, v105);
              uint64_t v87 = swift_getKeyPath();
              *(&v94 - 2) = MEMORY[0x270FA5388](v87, v88, v89, v90, v91);
              swift_getKeyPath();
              sub_2359470F8();
              uint64_t v92 = sub_2357C84D0();
              sub_235686798((uint64_t)v115);
              uint64_t v114 = v92;
              sub_2356869A0();
              uint64_t v93 = (void (*)(_OWORD *, void))sub_235947568();
              sub_2359475D8();
              v93(v113, 0);
              sub_23566A3AC(v86, &qword_26880F660);
              v84(v107, v70);
              return ((uint64_t (*)(char *, uint64_t))v84)(v110, v70);
            }
            else
            {
              __break(1u);
            }
          }
        }
      }
    }
  }
  else
  {
    v113[0] = *v65;
    sub_2359470F8();
    uint64_t v66 = sub_2357C84D0();
    sub_235686798((uint64_t)v113);
    *(void *)&v115[0] = v66;
    sub_2356867F4();
    return sub_235947518();
  }
  return result;
}

uint64_t sub_23568670C()
{
  return sub_235949A18() & 1;
}

uint64_t sub_235686770()
{
  return sub_2359491B8();
}

uint64_t sub_235686798(uint64_t a1)
{
  return a1;
}

uint64_t sub_2356867C4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

void sub_2356867D4()
{
}

unint64_t sub_2356867F4()
{
  unint64_t result = qword_26880F670;
  if (!qword_26880F670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F670);
  }
  return result;
}

void sub_235686848()
{
}

uint64_t sub_235686870()
{
  return 8;
}

uint64_t sub_23568687C()
{
  return swift_release();
}

uint64_t sub_235686884(void *a1, void *a2)
{
  *a2 = *a1;
  return sub_2359470F8();
}

uint64_t sub_235686894()
{
  return sub_2359499B8();
}

void *sub_2356868DC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2356868F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235686938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2356869A0()
{
  unint64_t result = qword_26880F690;
  if (!qword_26880F690)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26880F660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F690);
  }
  return result;
}

uint64_t sub_2356869FC()
{
  return MEMORY[0x263F1A820];
}

uint64_t MAGCaptureEventHandler.register(_:asActionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2359470F8();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v5 + 16);
  *(void *)(v5 + 16) = 0x8000000000000000;
  sub_235940290((uint64_t)&unk_268813C10, v10, a1, a2, isUniquelyReferenced_nonNull_native);
  *(void *)(v5 + 16) = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t MAGCaptureEventHandler.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_23566DD28(MEMORY[0x263F8EE78]);
  return v0;
}

uint64_t MAGCaptureEventHandler.init()()
{
  *(void *)(v0 + 16) = sub_23566DD28(MEMORY[0x263F8EE78]);
  return v0;
}

uint64_t sub_235686B64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_23566A050;
  return v7(a2);
}

uint64_t sub_235686C3C()
{
  swift_release();
  return swift_deallocObject();
}

Swift::Void __swiftcall MAGCaptureEventHandler.unregister(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_235687DDC(countAndFlagsBits, (uint64_t)object, (void (*)(void))sub_235941CC8);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_235689A84(v3);
}

uint64_t MAGCaptureEventHandler.send(_:)(_OWORD *a1)
{
  *(void *)(v2 + 112) = v1;
  *(_OWORD *)(v2 + 120) = *a1;
  return MEMORY[0x270FA2498](sub_235686D34, 0, 0);
}

uint64_t sub_235686D34()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 136) = v2;
  char v3 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v0 + 200) = v3;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << v3;
  if (-(-1 << v3) < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v2 + 64);
  uint64_t v7 = (void *)swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = 0;
    unint64_t v9 = __clz(__rbit64(v6));
    uint64_t v10 = (v6 - 1) & v6;
LABEL_5:
    *(void *)(v0 + 144) = v8;
    *(void *)(v0 + 152) = v10;
    uint64_t v11 = 16 * v9;
    uint64_t v12 = (void *)(v7[6] + v11);
    *(void *)(v0 + 160) = *v12;
    *(void *)(v0 + 168) = v12[1];
    uint64_t v13 = (int **)(v7[7] + v11);
    uint64_t v14 = *v13;
    *(void *)(v0 + 176) = v13[1];
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 120);
    uint64_t v23 = (uint64_t (*)(void))((char *)v14 + *v14);
    swift_bridgeObjectRetain();
    sub_2359470F8();
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_235686FA8;
    return v23();
  }
  unint64_t v17 = 63 - v5;
  if ((unint64_t)(63 - v5) > 0x7F)
  {
    unint64_t v18 = v7[9];
    if (v18)
    {
      uint64_t v8 = 1;
LABEL_11:
      uint64_t v10 = (v18 - 1) & v18;
      unint64_t v9 = __clz(__rbit64(v18)) + (v8 << 6);
      goto LABEL_5;
    }
    if (v17 >= 0xC0)
    {
      unint64_t v18 = v7[10];
      if (v18)
      {
        uint64_t v8 = 2;
        goto LABEL_11;
      }
      if (v17 >= 0x100)
      {
        unint64_t v18 = v7[11];
        if (v18)
        {
          uint64_t v8 = 3;
          goto LABEL_11;
        }
        if (v17 >= 0x140)
        {
          unint64_t v18 = v7[12];
          if (v18)
          {
            uint64_t v8 = 4;
            goto LABEL_11;
          }
          uint64_t v19 = 0;
          uint64_t v20 = v17 >> 6;
          if (v20 <= 5) {
            uint64_t v20 = 5;
          }
          uint64_t v21 = v20 - 5;
          while (v21 != v19)
          {
            unint64_t v18 = v7[v19++ + 13];
            if (v18)
            {
              uint64_t v8 = v19 + 4;
              goto LABEL_11;
            }
          }
        }
      }
    }
  }
  swift_release();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_235686FA8()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v2 = sub_235687308;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2356870D4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_2356870D4()
{
  int64_t v1 = *(void *)(v0 + 144);
  unint64_t v2 = *(void *)(v0 + 152);
  if (v2)
  {
    unint64_t v3 = __clz(__rbit64(v2));
    uint64_t v4 = (v2 - 1) & v2;
    unint64_t v5 = v3 | (v1 << 6);
    uint64_t v6 = *(void *)(v0 + 136);
LABEL_3:
    *(void *)(v0 + 144) = v1;
    *(void *)(v0 + 152) = v4;
    uint64_t v7 = (void *)(*(void *)(v6 + 48) + 16 * v5);
    *(void *)(v0 + 160) = *v7;
    *(void *)(v0 + 168) = v7[1];
    uint64_t v8 = *(void *)(v6 + 56) + 16 * v5;
    unint64_t v9 = *(int **)v8;
    *(void *)(v0 + 176) = *(void *)(v8 + 8);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 120);
    unint64_t v17 = (void (*)(void))((char *)v9 + *v9);
    swift_bridgeObjectRetain();
    sub_2359470F8();
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_235686FA8;
    v17();
    return;
  }
  int64_t v11 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  int64_t v12 = (unint64_t)((1 << *(unsigned char *)(v0 + 200)) + 63) >> 6;
  uint64_t v6 = *(void *)(v0 + 136);
  if (v11 < v12)
  {
    uint64_t v13 = v6 + 64;
    unint64_t v14 = *(void *)(v6 + 64 + 8 * v11);
    ++v1;
    if (v14)
    {
LABEL_9:
      uint64_t v4 = (v14 - 1) & v14;
      unint64_t v5 = __clz(__rbit64(v14)) + (v1 << 6);
      goto LABEL_3;
    }
    int64_t v1 = v11 + 1;
    if (v11 + 1 < v12)
    {
      unint64_t v14 = *(void *)(v13 + 8 * v1);
      if (v14) {
        goto LABEL_9;
      }
      int64_t v1 = v11 + 2;
      if (v11 + 2 < v12)
      {
        unint64_t v14 = *(void *)(v13 + 8 * v1);
        if (v14) {
          goto LABEL_9;
        }
        int64_t v15 = v11 + 3;
        if (v15 < v12)
        {
          unint64_t v14 = *(void *)(v13 + 8 * v15);
          if (v14)
          {
            int64_t v1 = v15;
            goto LABEL_9;
          }
          while (1)
          {
            int64_t v1 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              break;
            }
            if (v1 >= v12) {
              goto LABEL_20;
            }
            unint64_t v14 = *(void *)(v13 + 8 * v1);
            ++v15;
            if (v14) {
              goto LABEL_9;
            }
          }
LABEL_24:
          __break(1u);
          return;
        }
      }
    }
  }
LABEL_20:
  swift_release();
  uint64_t v16 = *(void (**)(void))(v0 + 8);
  v16();
}

uint64_t sub_235687308()
{
  uint64_t v28 = v0;
  if (qword_26880E3C0 != -1) {
    swift_once();
  }
  int64_t v1 = (void *)v0[24];
  unint64_t v3 = v0[15];
  unint64_t v2 = (void *)v0[16];
  uint64_t v4 = sub_235948278();
  __swift_project_value_buffer(v4, (uint64_t)qword_26880F6C8);
  sub_235673E3C(v3, v2);
  id v5 = v1;
  swift_bridgeObjectRetain();
  sub_235673E3C(v3, v2);
  id v6 = v1;
  uint64_t v7 = sub_235948258();
  os_log_type_t v8 = sub_23594A158();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = (void *)v0[24];
  unint64_t v11 = v0[21];
  if (v9)
  {
    uint64_t v12 = v0[20];
    unint64_t v13 = v0[15];
    unint64_t v14 = (void *)v0[16];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v15 = 136315650;
    swift_bridgeObjectRetain();
    v0[12] = sub_235687708(v12, v11, &v23);
    sub_23594A608();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    unint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_235673E3C(v13, v14);
    sub_23594A7F8();
    swift_bridgeObjectRelease();
    uint64_t v24 = 0x2065727574706143;
    unint64_t v25 = 0xEF203A746E657645;
    unint64_t v26 = v13;
    unint64_t v27 = (unint64_t)v14;
    MAGCaptureEvent.CaptureEventType.description.getter();
    sub_235949BD8();
    swift_bridgeObjectRelease();
    sub_235673DD4(v13, v14);
    v0[10] = sub_235687708(v24, v25, &v23);
    sub_23594A608();
    swift_bridgeObjectRelease();
    sub_235673DD4(v13, v14);
    sub_235673DD4(v13, v14);
    *(_WORD *)(v15 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v16 = sub_23594AC58();
    v0[13] = sub_235687708(v16, v17, &v23);
    sub_23594A608();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_235640000, v7, v8, "Handler=%s error handling event=%s. Error=%s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x237DE9F30](v22, -1, -1);
    MEMORY[0x237DE9F30](v15, -1, -1);
  }
  else
  {
    unint64_t v19 = v0[15];
    uint64_t v18 = (void *)v0[16];
    swift_bridgeObjectRelease_n();
    sub_235673DD4(v19, v18);
    sub_235673DD4(v19, v18);
  }
  swift_willThrow();
  swift_release();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t MAGCaptureEventHandler.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MAGCaptureEventHandler.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_235687708(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2356877DC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_23566A650((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_23566A650((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_2356877DC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23594A618();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_235687998(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_23594A858();
  if (!v8)
  {
    sub_23594A958();
    __break(1u);
LABEL_17:
    uint64_t result = sub_23594A9E8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_235687998(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_235687A30(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_235687BA8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_235687BA8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_235687A30(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2356F7ABC(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_23594A808();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_23594A958();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_235949BF8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_23594A9E8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_23594A958();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_235687BA8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688104D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

uint64_t sub_235687CF8(uint64_t a1, uint64_t a2)
{
  return sub_235687DDC(a1, a2, (void (*)(void))sub_2359414F0);
}

uint64_t sub_235687D10(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_23587813C(a1);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v2;
  uint64_t v11 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2359414FC();
    uint64_t v8 = v11;
  }
  uint64_t v9 = *(void *)(*(void *)(v8 + 56) + 16 * v4);
  sub_2356882CC(v4, v8);
  *uint64_t v2 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_235687DDC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  char v5 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_2358780C4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v5;
  uint64_t v14 = *v5;
  *char v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    uint64_t v11 = v14;
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(*(void *)(v11 + 56) + 16 * v8);
  sub_235689118(v8, v11);
  *char v5 = v11;
  swift_bridgeObjectRelease();
  return v12;
}

void sub_235687ECC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_2358780C4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    v12[0] = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_235941CD4();
      uint64_t v11 = v12[0];
    }
    swift_bridgeObjectRelease();
    memmove(a3, (const void *)(*(void *)(v11 + 56) + 280 * v8), 0x118uLL);
    sub_23568895C(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    CGRectMake(a3);
  }
  else
  {
    sub_235689AE4((uint64_t)v12);
    sub_235689B14((uint64_t)v12, (uint64_t)a3);
  }
}

uint64_t sub_235687FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  int64_t v6 = sub_235878460(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_235942430();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for DetectedTextBlock();
    sub_235689BD4(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for SpatialTextBlock();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_235689C34(v12 + *(void *)(v20 + 72) * v6, a2);
    sub_23568974C(v6, v9, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
    *unint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for SpatialTextBlock();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_2356881B8(uint64_t a1, uint64_t a2)
{
  return sub_235687DDC(a1, a2, (void (*)(void))sub_235942760);
}

uint64_t sub_2356881D0(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_235878318(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_235942A0C();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_235688CFC(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23568829C(uint64_t a1, uint64_t a2)
{
  return sub_235687DDC(a1, a2, (void (*)(void))sub_235942F14);
}

uint64_t sub_2356882B4(uint64_t a1, uint64_t a2)
{
  return sub_235687DDC(a1, a2, (void (*)(void))sub_235942F20);
}

unint64_t sub_2356882CC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_23594A6D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_23594ACD8();
        sub_235949B88();
        swift_bridgeObjectRelease();
        uint64_t result = sub_23594AD28();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x2356885B4);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_2356885D8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_23594A6D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (void *)(v12 + 8 * v6);
        uint64_t result = sub_23594ACC8();
        unint64_t v14 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 >= v8 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            uint64_t v17 = (void *)(v12 + 8 * v3);
            if (v3 != v6 || v17 >= v13 + 1) {
              *uint64_t v17 = *v13;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            unint64_t v19 = v18 + 56 * v3;
            BOOL v20 = (long long *)(v18 + 56 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= (unint64_t)v20 + 56))
            {
              long long v9 = *v20;
              long long v10 = v20[1];
              long long v11 = v20[2];
              *(void *)(v19 + 48) = *((void *)v20 + 6);
              *(_OWORD *)(v19 + 16) = v10;
              *(_OWORD *)(v19 + 32) = v11;
              *(_OWORD *)unint64_t v19 = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v14 >= v8 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23568878C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_23594A6D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        long long v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_23594ACC8();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        unint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *unint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_235947978() - 8) + 72);
        int64_t v17 = v16 * v3;
        uint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23568895C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_23594A6D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_23594ACD8();
        swift_bridgeObjectRetain();
        sub_235949B88();
        uint64_t v9 = sub_23594AD28();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 280 * v3;
          uint64_t v15 = (const void *)(v14 + 280 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 280))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x118uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_235688B40(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_23594A6D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_23594ACD8();
        sub_23594ACE8();
        uint64_t result = sub_23594AD28();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (_DWORD *)(v13 + 4 * v3);
          uint64_t v15 = (_DWORD *)(v13 + 4 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_235688CFC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_23594A6D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_23594ACD8();
        sub_235949B88();
        swift_bridgeObjectRelease();
        uint64_t result = sub_23594AD28();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x2356890D4);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_235689118(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_23594A6D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_23594ACD8();
        swift_bridgeObjectRetain();
        sub_235949B88();
        uint64_t v9 = sub_23594AD28();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2356892F0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_23594A6D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_23594ACD8();
        sub_235949B88();
        swift_bridgeObjectRelease();
        uint64_t result = sub_23594AD28();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x2356896C8);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

void sub_23568970C(int64_t a1, uint64_t a2)
{
}

void sub_23568974C(int64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v40 = a5;
  uint64_t v44 = a4;
  uint64_t v39 = a3(0);
  uint64_t v7 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39, v8, v9, v10, v11);
  uint64_t v43 = (char *)&v38 - v12;
  uint64_t v13 = a2 + 64;
  uint64_t v14 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(void *)(a2 + 64 + 8 * (v15 >> 6))) != 0)
  {
    uint64_t v16 = ~v14;
    uint64_t v17 = sub_23594A6D8();
    if ((*(void *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      unint64_t v18 = (v17 + 1) & v16;
      uint64_t v19 = *(void *)(v7 + 72);
      uint64_t v41 = v19;
      uint64_t v42 = a2 + 64;
      uint64_t v20 = (uint64_t)v43;
      do
      {
        int64_t v21 = v19 * v15;
        uint64_t v22 = v44;
        sub_235689C98(*(void *)(a2 + 48) + v19 * v15, v20, v44);
        sub_23594ACD8();
        sub_235947978();
        sub_235689B7C();
        sub_2359499A8();
        uint64_t v23 = sub_23594AD28();
        sub_235689BD4(v20, v22);
        unint64_t v24 = v23 & v16;
        if (a1 >= (uint64_t)v18)
        {
          if (v24 < v18)
          {
            uint64_t v13 = v42;
          }
          else
          {
            uint64_t v13 = v42;
            if (a1 >= (uint64_t)v24) {
              goto LABEL_13;
            }
          }
        }
        else
        {
          uint64_t v13 = v42;
          if (v24 >= v18 || a1 >= (uint64_t)v24)
          {
LABEL_13:
            uint64_t v19 = v41;
            if (v41 * a1 < v21
              || *(void *)(a2 + 48) + v41 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v21 + v41))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v41 * a1 != v21)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = *(void *)(*(void *)(v40(0) - 8) + 72);
            int64_t v27 = v26 * a1;
            unint64_t v28 = v25 + v26 * a1;
            int64_t v29 = v26 * v15;
            unint64_t v30 = v25 + v26 * v15 + v26;
            if (v27 < v29 || v28 >= v30)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v15;
            }
            else
            {
              a1 = v15;
              if (v27 != v29)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v15;
              }
            }
            goto LABEL_6;
          }
        }
        uint64_t v19 = v41;
LABEL_6:
        unint64_t v15 = (v15 + 1) & v16;
      }
      while (((*(void *)(v13 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    }
    char v32 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v32;
    uint64_t v34 = (-1 << a1) - 1;
  }
  else
  {
    char v32 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v34 = *v32;
    uint64_t v33 = (-1 << a1) - 1;
  }
  *char v32 = v34 & v33;
  uint64_t v35 = *(void *)(a2 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_235689A84(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for MAGCaptureEventHandler()
{
  return self;
}

uint64_t method lookup function for MAGCaptureEventHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MAGCaptureEventHandler);
}

uint64_t dispatch thunk of MAGCaptureEventHandler.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

double sub_235689AE4(uint64_t a1)
{
  *(void *)(a1 + 272) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_235689B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2688108E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_235689B7C()
{
  unint64_t result = qword_26880F4D8;
  if (!qword_26880F4D8)
  {
    sub_235947978();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880F4D8);
  }
  return result;
}

uint64_t sub_235689BD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_235689C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpatialTextBlock();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_235689C98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_235689D04(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F6B0);
}

uint64_t static Log.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E3B8, (uint64_t)qword_26880F6B0, a1);
}

uint64_t sub_235689D40(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F6C8);
}

uint64_t static Log.action.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E3C0, (uint64_t)qword_26880F6C8, a1);
}

uint64_t sub_235689D88(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F6E0);
}

uint64_t static Log.output.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E3C8, (uint64_t)qword_26880F6E0, a1);
}

uint64_t sub_235689DC8(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F6F8);
}

uint64_t static Log.speech.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E3D0, (uint64_t)qword_26880F6F8, a1);
}

uint64_t sub_235689E10(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F710);
}

uint64_t static Log.app.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E3D8, (uint64_t)qword_26880F710, a1);
}

uint64_t sub_235689E50(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F728);
}

uint64_t static Log.scene.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E3E0, (uint64_t)qword_26880F728, a1);
}

uint64_t sub_235689E94(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F740);
}

uint64_t static Log.imageCapture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E3E8, (uint64_t)qword_26880F740, a1);
}

uint64_t sub_235689EE4(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F758);
}

uint64_t static Log.captureDevice.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E3F0, (uint64_t)qword_26880F758, a1);
}

uint64_t sub_235689F2C(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F770);
}

uint64_t static Log.captureSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E3F8, (uint64_t)qword_26880F770, a1);
}

uint64_t sub_235689F74(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F788);
}

uint64_t static Log.gesture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E400, (uint64_t)qword_26880F788, a1);
}

uint64_t sub_235689FBC(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F7A0);
}

uint64_t static Log.freezeFrame.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E408, (uint64_t)qword_26880F7A0, a1);
}

uint64_t sub_23568A00C(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F7B8);
}

uint64_t static Log.storage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E410, (uint64_t)qword_26880F7B8, a1);
}

uint64_t sub_23568A054(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F7D0);
}

uint64_t static Log.navigation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E418, (uint64_t)qword_26880F7D0, a1);
}

uint64_t sub_23568A0A4(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F7E8);
}

uint64_t static Log.zoom.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E420, (uint64_t)qword_26880F7E8, a1);
}

uint64_t sub_23568A0E8(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F800);
}

uint64_t static Log.userControls.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E428, (uint64_t)qword_26880F800, a1);
}

uint64_t sub_23568A138(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F818);
}

uint64_t static Log.peopleDetection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E430, (uint64_t)qword_26880F818, a1);
}

uint64_t sub_23568A180(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F830);
}

uint64_t static Log.doorDetection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E438, (uint64_t)qword_26880F830, a1);
}

uint64_t sub_23568A1C8(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F848);
}

uint64_t static Log.objectUnderstanding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E440, (uint64_t)qword_26880F848, a1);
}

uint64_t sub_23568A210(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F860);
}

uint64_t static Log.pointSpeak.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E448, (uint64_t)qword_26880F860, a1);
}

uint64_t sub_23568A260(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F878);
}

uint64_t static Log.arSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E450, (uint64_t)qword_26880F878, a1);
}

uint64_t sub_23568A2AC(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F890);
}

uint64_t static Log.findMyItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E458, (uint64_t)qword_26880F890, a1);
}

uint64_t sub_23568A2FC(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F8A8);
}

uint64_t static Log.detectionMode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E460, (uint64_t)qword_26880F8A8, a1);
}

uint64_t sub_23568A344(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F8C0);
}

uint64_t static Log.activities.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E468, (uint64_t)qword_26880F8C0, a1);
}

uint64_t sub_23568A394(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F8D8);
}

uint64_t static Log.infinite.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E470, (uint64_t)qword_26880F8D8, a1);
}

uint64_t sub_23568A3E0(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F8F0);
}

uint64_t static Log.tmp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E478, (uint64_t)qword_26880F8F0, a1);
}

uint64_t sub_23568A420(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F908);
}

uint64_t static Log.assistiveAccess.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E480, (uint64_t)qword_26880F908, a1);
}

uint64_t sub_23568A468(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F920);
}

uint64_t static Log.spatialGrouping.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E488, (uint64_t)qword_26880F920, a1);
}

uint64_t sub_23568A4B0(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F938);
}

uint64_t static Log.thermal.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E490, (uint64_t)qword_26880F938, a1);
}

uint64_t sub_23568A4F8(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F950);
}

uint64_t static Log.angel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E498, (uint64_t)qword_26880F950, a1);
}

uint64_t sub_23568A53C(uint64_t a1)
{
  return sub_23568A568(a1, qword_26880F968);
}

uint64_t sub_23568A568(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_235948278();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_235948268();
}

uint64_t static Log.readerMode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23568A604(&qword_26880E4A0, (uint64_t)qword_26880F968, a1);
}

uint64_t sub_23568A604@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_235948278();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *sub_23568A710(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    sub_2359470F8();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    sub_2359470F8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_2359488B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      sub_2359470F8();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23568A830(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_2359488B8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_23568A8E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  sub_2359470F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_2359488B8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    sub_2359470F8();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_23568A9B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_2359470F8();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_23566A3AC((uint64_t)a1 + v6, &qword_26880F980);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_2359488B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      sub_2359470F8();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23568AAAC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_2359488B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_23568AB80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_23566A3AC((uint64_t)a1 + v7, &qword_26880F980);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_2359488B8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23568AC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23568AC90);
}

uint64_t sub_23568AC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810780);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_23568AD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23568AD58);
}

uint64_t sub_23568AD58(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810780);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MFReaderCustomThemeSelectionMenu(uint64_t a1)
{
  return sub_23568B520(a1, (uint64_t *)&unk_26880F988);
}

void sub_23568AE24()
{
  sub_23568AEBC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_23568AEBC()
{
  if (!qword_2688107A0)
  {
    sub_2359488B8();
    unint64_t v0 = sub_235948738();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2688107A0);
    }
  }
}

uint64_t *sub_23568AF14(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26880F980) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    sub_2359470F8();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_2359488B8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      sub_2359470F8();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23568B020(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_2359488B8();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_23568B0C4(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_2359488B8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    sub_2359470F8();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_23568B180(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_23566A3AC((uint64_t)a1, &qword_26880F980);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_2359488B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      sub_2359470F8();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23568B254(void *a1, const void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_2359488B8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_23568B318(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_23566A3AC((uint64_t)a1, &qword_26880F980);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_2359488B8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23568B3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23568B408);
}

uint64_t sub_23568B408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810780);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_23568B478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23568B48C);
}

uint64_t sub_23568B48C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810780);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MFReaderThemeSelectionOverlay(uint64_t a1)
{
  return sub_23568B520(a1, (uint64_t *)&unk_26880F998);
}

uint64_t sub_23568B520(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_23568B558()
{
  sub_23568AEBC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_23568B5E4()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_23568B600@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2359488B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(self, sel_whiteColor);
  uint64_t v29 = MEMORY[0x237DE72D0](v10);
  sub_2358E90E8((uint64_t)v9);
  sub_2359488A8();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v9, v2);
  sub_235948768();
  uint64_t v12 = v30;
  uint64_t v13 = v31;
  uint64_t v14 = v32;
  uint64_t v28 = v33;
  uint64_t v15 = v34;
  uint64_t v27 = sub_235949628();
  uint64_t v26 = v16;
  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_mainScreen);
  objc_msgSend(v18, sel_bounds);

  sub_2358E90E8((uint64_t)v9);
  sub_2359488A8();
  v11(v9, v2);
  id v19 = objc_msgSend(v17, sel_mainScreen);
  objc_msgSend(v19, sel_bounds);

  sub_2358E90E8((uint64_t)v9);
  sub_2359488A8();
  v11(v9, v2);
  sub_235949628();
  sub_2359487C8();
  uint64_t v20 = v35;
  char v21 = v36;
  uint64_t v22 = v37;
  char v23 = v38;
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = v28;
  *(void *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = v29;
  *(_WORD *)(a1 + 48) = 256;
  uint64_t v24 = v26;
  *(void *)(a1 + 56) = v27;
  *(void *)(a1 + 64) = v24;
  *(void *)(a1 + 72) = v20;
  *(unsigned char *)(a1 + 80) = v21;
  *(void *)(a1 + 88) = v22;
  *(unsigned char *)(a1 + 96) = v23;
  double result = v39[0];
  *(_OWORD *)(a1 + 104) = *(_OWORD *)v39;
  return result;
}

uint64_t sub_23568B910()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23568B92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v262 = a2;
  uint64_t v253 = sub_235949558();
  uint64_t v252 = *(void *)(v253 - 8);
  MEMORY[0x270FA5388](v253, v3, v4, v5, v6);
  id v250 = (char *)&v229 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA48) - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v251, v8, v9, v10, v11);
  v249 = (char *)&v229 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v14, v15, v16, v17);
  uint64_t v276 = (uint64_t)&v229 - v18;
  uint64_t v273 = sub_235948C68();
  uint64_t v247 = *(void *)(v273 - 8);
  uint64_t v248 = v273 - 8;
  uint64_t v278 = v247;
  MEMORY[0x270FA5388](v273 - 8, v19, v20, v21, v22);
  v272 = (char *)&v229 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = sub_2359488B8();
  uint64_t v277 = *(void *)(v274 - 8);
  MEMORY[0x270FA5388](v274, v24, v25, v26, v27);
  uint64_t v268 = (uint64_t)&v229 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = type metadata accessor for MFColorPicker();
  MEMORY[0x270FA5388](v267, v29, v30, v31, v32);
  uint64_t v34 = (char *)&v229 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA50);
  MEMORY[0x270FA5388](v35 - 8, v36, v37, v38, v39);
  v266 = (char *)&v229 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA58) - 8;
  uint64_t v45 = MEMORY[0x270FA5388](v271, v41, v42, v43, v44);
  uint64_t v254 = (uint64_t)&v229 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45, v47, v48, v49, v50);
  uint64_t v52 = (char *)&v229 - v51;
  uint64_t v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA60);
  uint64_t v57 = MEMORY[0x270FA5388](v265, v53, v54, v55, v56);
  uint64_t v255 = (uint64_t)&v229 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v57, v59, v60, v61, v62);
  char v64 = (char *)&v229 - v63;
  uint64_t v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA68);
  uint64_t v69 = MEMORY[0x270FA5388](v270, v65, v66, v67, v68);
  uint64_t v261 = (uint64_t)&v229 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = MEMORY[0x270FA5388](v69, v71, v72, v73, v74);
  uint64_t v260 = (uint64_t)&v229 - v76;
  uint64_t v81 = MEMORY[0x270FA5388](v75, v77, v78, v79, v80);
  uint64_t v256 = (char *)&v229 - v82;
  uint64_t v87 = MEMORY[0x270FA5388](v81, v83, v84, v85, v86);
  long long v257 = (char *)&v229 - v88;
  uint64_t v93 = MEMORY[0x270FA5388](v87, v89, v90, v91, v92);
  uint64_t v258 = (char *)&v229 - v94;
  uint64_t v99 = MEMORY[0x270FA5388](v93, v95, v96, v97, v98);
  uint64_t v259 = (uint64_t)&v229 - v100;
  uint64_t v105 = MEMORY[0x270FA5388](v99, v101, v102, v103, v104);
  float32x4_t v107 = (char *)&v229 - v106;
  uint64_t v112 = MEMORY[0x270FA5388](v105, v108, v109, v110, v111);
  uint64_t v230 = (char *)&v229 - v113;
  uint64_t v118 = MEMORY[0x270FA5388](v112, v114, v115, v116, v117);
  uint64_t v244 = (char *)&v229 - v119;
  MEMORY[0x270FA5388](v118, v120, v121, v122, v123);
  uint64_t v275 = (uint64_t)&v229 - v124;
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v264 = ObjCClassFromMetadata;
  id v263 = self;
  id v126 = objc_msgSend(v263, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v127 = (void *)sub_235949A88();
  float32x4_t v128 = (void *)sub_235949A88();
  id v129 = objc_msgSend(v126, sel_localizedStringForKey_value_table_, v127, 0, v128);

  uint64_t v130 = sub_235949AC8();
  uint64_t v132 = v131;

  uint64_t v246 = type metadata accessor for MFReaderTextFormatterModel(0);
  uint64_t v243 = sub_23568EEC0(&qword_26880F9A8, (void (*)(uint64_t))type metadata accessor for MFReaderTextFormatterModel);
  sub_235948888();
  swift_getKeyPath();
  sub_235948898();
  swift_release();
  swift_release();
  long long v269 = v282;
  uint64_t v133 = v283;
  *(void *)&v34[*(int *)(v267 + 28)] = swift_getKeyPath();
  uint64_t v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v34 = v130;
  *((void *)v34 + 1) = v132;
  char v279 = 0;
  sub_235949458();
  uint64_t v134 = v281;
  v34[16] = v280;
  *((void *)v34 + 3) = v134;
  *((_OWORD *)v34 + 2) = v269;
  *((void *)v34 + 6) = v133;
  uint64_t v242 = sub_23568EEC0(&qword_26880FA70, (void (*)(uint64_t))type metadata accessor for MFColorPicker);
  uint64_t v135 = (uint64_t)v266;
  sub_235949298();
  uint64_t v241 = type metadata accessor for MFColorPicker;
  sub_23568ECDC((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for MFColorPicker);
  LOBYTE(v132) = sub_235948F78();
  sub_23566A2E4(v135, (uint64_t)v52, &qword_26880FA50);
  uint64_t v136 = &v52[*(int *)(v271 + 44)];
  char *v136 = v132;
  *(_OWORD *)(v136 + 8) = 0u;
  *(_OWORD *)(v136 + 24) = 0u;
  v136[40] = 1;
  sub_23566A3AC(v135, &qword_26880FA50);
  LOBYTE(v132) = sub_235948F98();
  uint64_t v137 = *(int *)(type metadata accessor for MFReaderCustomThemeSelectionMenu(0) + 20);
  uint64_t v229 = a1;
  uint64_t v240 = a1 + v137;
  uint64_t v138 = v268;
  sub_2358E90E8(v268);
  sub_2359488A8();
  simd_float4 v139 = *(void (**)(uint64_t, uint64_t))(v277 + 8);
  v277 += 8;
  uint64_t v239 = v139;
  v139(v138, v274);
  sub_235948698();
  uint64_t v141 = v140;
  uint64_t v143 = v142;
  uint64_t v145 = v144;
  uint64_t v147 = v146;
  sub_23566A2E4((uint64_t)v52, (uint64_t)v64, &qword_26880FA58);
  CGRect v148 = &v64[*(int *)(v265 + 36)];
  *CGRect v148 = v132;
  *((void *)v148 + 1) = v141;
  *((void *)v148 + 2) = v143;
  *((void *)v148 + 3) = v145;
  *((void *)v148 + 4) = v147;
  v148[40] = 0;
  sub_23566A3AC((uint64_t)v52, &qword_26880FA58);
  sub_23568CCE4();
  *(void *)&long long v282 = v149;
  *((void *)&v282 + 1) = v150;
  *(void *)&long long v269 = sub_2356610AC();
  uint64_t v151 = sub_235949148();
  uint64_t v153 = v152;
  LOBYTE(v52) = v154 & 1;
  uint64_t v238 = sub_23568ED64(&qword_26880FA78, &qword_26880FA60, (void (*)(void))sub_23568ED3C);
  sub_235949228();
  sub_2356867C4(v151, v153, (char)v52);
  swift_bridgeObjectRelease();
  sub_23566A3AC((uint64_t)v64, &qword_26880FA60);
  uint64_t v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9C8);
  uint64_t v155 = v278;
  uint64_t v156 = *(unsigned __int8 *)(v278 + 80);
  uint64_t v248 = ((v156 + 32) & ~v156) + *(void *)(v247 + 72);
  uint64_t v236 = (v156 + 32) & ~v156;
  uint64_t v247 = v156 | 7;
  uint64_t v157 = swift_allocObject();
  long long v235 = xmmword_23594FD70;
  *(_OWORD *)(v157 + 16) = xmmword_23594FD70;
  sub_235948C58();
  *(void *)&long long v282 = v157;
  uint64_t v233 = sub_23568EEC0(&qword_26880F9D0, MEMORY[0x263F19938]);
  uint64_t v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9D8);
  uint64_t v234 = sub_2356595F4(&qword_26880F9E0, &qword_26880F9D8);
  uint64_t v159 = v272;
  uint64_t v158 = v273;
  sub_23594A6C8();
  uint64_t v160 = (uint64_t)v230;
  sub_235948908();
  long long v161 = *(void (**)(char *, uint64_t))(v155 + 8);
  uint64_t v278 = v155 + 8;
  unint64_t v231 = v161;
  v161(v159, v158);
  sub_23566A3AC((uint64_t)v107, &qword_26880FA68);
  id v162 = v263;
  uint64_t v163 = v264;
  id v164 = objc_msgSend(v263, sel_bundleForClass_, v264);
  id v165 = (void *)sub_235949A88();
  double v166 = (void *)sub_235949A88();
  id v167 = objc_msgSend(v164, sel_localizedStringForKey_value_table_, v165, 0, v166);

  uint64_t v168 = sub_235949AC8();
  uint64_t v170 = v169;

  *(void *)&long long v282 = v168;
  *((void *)&v282 + 1) = v170;
  uint64_t v171 = (uint64_t)v244;
  sub_2359488D8();
  swift_bridgeObjectRelease();
  sub_23566A3AC(v160, &qword_26880FA68);
  sub_23566A348(v171, v275, &qword_26880FA68);
  v172 = v250;
  sub_235949548();
  uint64_t v173 = sub_235949368();
  LOBYTE(v165) = sub_235948F88();
  uint64_t v174 = v252;
  uint64_t v175 = (uint64_t)v249;
  uint64_t v176 = v253;
  (*(void (**)(char *, char *, uint64_t))(v252 + 16))(v249, v172, v253);
  uint64_t v177 = v175 + *(int *)(v251 + 44);
  *(void *)uint64_t v177 = v173;
  *(unsigned char *)(v177 + 8) = (_BYTE)v165;
  (*(void (**)(char *, uint64_t))(v174 + 8))(v172, v176);
  sub_23566A348(v175, v276, &qword_26880FA48);
  id v178 = objc_msgSend(v162, sel_bundleForClass_, v163);
  id v179 = (void *)sub_235949A88();
  id v180 = (void *)sub_235949A88();
  id v181 = objc_msgSend(v178, sel_localizedStringForKey_value_table_, v179, 0, v180);

  uint64_t v182 = sub_235949AC8();
  uint64_t v184 = v183;

  sub_235948888();
  swift_getKeyPath();
  sub_235948898();
  swift_release();
  swift_release();
  long long v185 = v282;
  uint64_t v186 = v283;
  *(void *)&v34[*(int *)(v267 + 28)] = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v34 = v182;
  *((void *)v34 + 1) = v184;
  char v279 = 0;
  sub_235949458();
  uint64_t v187 = v281;
  v34[16] = v280;
  *((void *)v34 + 3) = v187;
  *((_OWORD *)v34 + 2) = v185;
  *((void *)v34 + 6) = v186;
  uint64_t v188 = (uint64_t)v266;
  sub_235949298();
  sub_23568ECDC((uint64_t)v34, (uint64_t (*)(void))v241);
  LOBYTE(v182) = sub_235948F78();
  uint64_t v189 = v254;
  sub_23566A2E4(v188, v254, &qword_26880FA50);
  uint64_t v190 = v189 + *(int *)(v271 + 44);
  *(unsigned char *)uint64_t v190 = v182;
  *(_OWORD *)(v190 + 8) = 0u;
  *(_OWORD *)(v190 + 24) = 0u;
  *(unsigned char *)(v190 + 40) = 1;
  sub_23566A3AC(v188, &qword_26880FA50);
  LOBYTE(v188) = sub_235948FA8();
  uint64_t v191 = v268;
  sub_2358E90E8(v268);
  sub_2359488A8();
  v239(v191, v274);
  sub_235948698();
  uint64_t v193 = v192;
  uint64_t v195 = v194;
  uint64_t v197 = v196;
  uint64_t v199 = v198;
  uint64_t v200 = v255;
  sub_23566A2E4(v189, v255, &qword_26880FA58);
  uint64_t v201 = v200 + *(int *)(v265 + 36);
  *(unsigned char *)uint64_t v201 = v188;
  *(void *)(v201 + 8) = v193;
  *(void *)(v201 + 16) = v195;
  *(void *)(v201 + 24) = v197;
  *(void *)(v201 + 32) = v199;
  *(unsigned char *)(v201 + 40) = 0;
  sub_23566A3AC(v189, &qword_26880FA58);
  sub_23568CCE4();
  *(void *)&long long v282 = v202;
  *((void *)&v282 + 1) = v203;
  uint64_t v204 = sub_235949148();
  uint64_t v206 = v205;
  LOBYTE(v191) = v207 & 1;
  uint64_t v208 = (uint64_t)v256;
  sub_235949228();
  sub_2356867C4(v204, v206, v191);
  swift_bridgeObjectRelease();
  sub_23566A3AC(v200, &qword_26880FA60);
  uint64_t v209 = swift_allocObject();
  *(_OWORD *)(v209 + 16) = v235;
  sub_235948C58();
  *(void *)&long long v282 = v209;
  uint64_t v211 = v272;
  uint64_t v210 = v273;
  sub_23594A6C8();
  uint64_t v212 = (uint64_t)v257;
  sub_235948908();
  v231(v211, v210);
  sub_23566A3AC(v208, &qword_26880FA68);
  id v213 = objc_msgSend(v263, sel_bundleForClass_, v264);
  v214 = (void *)sub_235949A88();
  id v215 = (void *)sub_235949A88();
  id v216 = objc_msgSend(v213, sel_localizedStringForKey_value_table_, v214, 0, v215);

  uint64_t v217 = sub_235949AC8();
  uint64_t v219 = v218;

  *(void *)&long long v282 = v217;
  *((void *)&v282 + 1) = v219;
  uint64_t v220 = (uint64_t)v258;
  sub_2359488D8();
  swift_bridgeObjectRelease();
  sub_23566A3AC(v212, &qword_26880FA68);
  uint64_t v221 = v259;
  sub_23566A348(v220, v259, &qword_26880FA68);
  uint64_t v222 = v275;
  uint64_t v223 = v260;
  sub_23566A2E4(v275, v260, &qword_26880FA68);
  uint64_t v224 = v276;
  sub_23566A2E4(v276, v175, &qword_26880FA48);
  uint64_t v225 = v261;
  sub_23566A2E4(v221, v261, &qword_26880FA68);
  uint64_t v226 = v262;
  sub_23566A2E4(v223, v262, &qword_26880FA68);
  uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA98);
  sub_23566A2E4(v175, v226 + *(int *)(v227 + 48), &qword_26880FA48);
  sub_23566A2E4(v225, v226 + *(int *)(v227 + 64), &qword_26880FA68);
  sub_23566A3AC(v221, &qword_26880FA68);
  sub_23566A3AC(v224, &qword_26880FA48);
  sub_23566A3AC(v222, &qword_26880FA68);
  sub_23566A3AC(v225, &qword_26880FA68);
  sub_23566A3AC(v175, &qword_26880FA48);
  return sub_23566A3AC(v223, &qword_26880FA68);
}

void sub_23568CCE4()
{
  if (UIAccessibilityIsVoiceOverRunning())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359470F8();
    sub_2359484D8();
    swift_release();
    swift_release();
    swift_release();
    if (v2)
    {
      sub_23568EAB0();
      sub_2359470F8();
      unint64_t v0 = (void *)sub_23594A458();
      id v1 = objc_msgSend(v0, sel__accessibilityColorDescription);

      if (v1)
      {
        sub_235949AC8();
        swift_release();
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_23568CDE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v3 = sub_235948C68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9B0);
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  uint64_t v17 = (uint64_t *)((char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9B8);
  uint64_t v22 = MEMORY[0x270FA5388](v106, v18, v19, v20, v21);
  uint64_t v24 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v22, v25, v26, v27, v28);
  uint64_t v31 = (char *)&v99 - v30;
  uint64_t v36 = MEMORY[0x270FA5388](v29, v32, v33, v34, v35);
  uint64_t v102 = (char *)&v99 - v37;
  uint64_t v42 = MEMORY[0x270FA5388](v36, v38, v39, v40, v41);
  uint64_t v105 = (char *)&v99 - v43;
  MEMORY[0x270FA5388](v42, v44, v45, v46, v47);
  uint64_t v103 = (char *)&v99 - v48;
  *uint64_t v17 = sub_235949628();
  v17[1] = v49;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9C0);
  sub_23568D73C(a1, (uint64_t)v17 + *(int *)(v50 + 44));
  uint64_t v107 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359470F8();
  sub_2359484D8();
  swift_release();
  swift_release();
  swift_release();
  switch((char)v108)
  {
    case 4:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    default:
      char v51 = sub_23594AB78();
      swift_bridgeObjectRelease();
      if (v51)
      {
LABEL_5:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9C8);
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_2359527E0;
        sub_235948C48();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9C8);
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_23594FD70;
      }
      sub_235948C58();
      uint64_t v108 = v52;
      sub_23568EEC0(&qword_26880F9D0, MEMORY[0x263F19938]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9D8);
      sub_2356595F4(&qword_26880F9E0, &qword_26880F9D8);
      sub_23594A6C8();
      sub_2356595F4(&qword_26880F9E8, &qword_26880F9B0);
      sub_235949288();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      sub_23566A3AC((uint64_t)v17, &qword_26880F9B0);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359470F8();
      sub_2359484D8();
      swift_release();
      swift_release();
      swift_release();
      LOBYTE(v108) = v110;
      uint64_t v108 = sub_23566CE40();
      uint64_t v109 = v53;
      uint64_t v54 = (uint64_t)v24;
      unint64_t v55 = sub_2356610AC();
      sub_2359488E8();
      swift_bridgeObjectRelease();
      sub_23566A3AC(v54, &qword_26880F9B8);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359470F8();
      sub_2359484D8();
      swift_release();
      swift_release();
      swift_release();
      LOBYTE(v108) = v110;
      uint64_t v108 = sub_23566D0D0();
      uint64_t v109 = v56;
      uint64_t v57 = (uint64_t)v102;
      unint64_t v58 = v55;
      sub_2359488D8();
      swift_bridgeObjectRelease();
      sub_23566A3AC((uint64_t)v31, &qword_26880F9B8);
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      uint64_t v101 = ObjCClassFromMetadata;
      id v100 = self;
      id v60 = objc_msgSend(v100, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v61 = (void *)sub_235949A88();
      uint64_t v62 = (void *)sub_235949A88();
      id v63 = objc_msgSend(v60, sel_localizedStringForKey_value_table_, v61, 0, v62);

      uint64_t v64 = sub_235949AC8();
      uint64_t v66 = v65;

      uint64_t v108 = v64;
      uint64_t v109 = v66;
      unint64_t v99 = v58;
      uint64_t v67 = sub_235949148();
      uint64_t v69 = v68;
      char v71 = v70 & 1;
      sub_23568CCE4();
      uint64_t v108 = v72;
      uint64_t v109 = v73;
      uint64_t v74 = sub_235949148();
      uint64_t v76 = v75;
      char v78 = v77 & 1;
      sub_2359488C8();
      sub_2356867C4(v74, v76, v78);
      swift_bridgeObjectRelease();
      sub_2356867C4(v67, v69, v71);
      swift_bridgeObjectRelease();
      sub_23566A3AC(v57, &qword_26880F9B8);
      id v79 = objc_msgSend(v100, sel_bundleForClass_, v101);
      uint64_t v80 = (void *)sub_235949A88();
      uint64_t v81 = (void *)sub_235949A88();
      id v82 = objc_msgSend(v79, sel_localizedStringForKey_value_table_, v80, 0, v81);

      uint64_t v83 = sub_235949AC8();
      uint64_t v85 = v84;

      uint64_t v108 = v83;
      uint64_t v109 = v85;
      uint64_t v86 = sub_235949148();
      uint64_t v88 = v87;
      LOBYTE(v76) = v89 & 1;
      sub_23568CCE4();
      uint64_t v108 = v90;
      uint64_t v109 = v91;
      uint64_t v92 = sub_235949148();
      uint64_t v94 = v93;
      LOBYTE(v63) = v95 & 1;
      uint64_t v96 = (uint64_t)v103;
      uint64_t v97 = (uint64_t)v105;
      sub_2359488C8();
      sub_2356867C4(v92, v94, (char)v63);
      swift_bridgeObjectRelease();
      sub_2356867C4(v86, v88, v76);
      swift_bridgeObjectRelease();
      sub_23566A3AC(v97, &qword_26880F9B8);
      return sub_23566A348(v96, v104, &qword_26880F9B8);
  }
}

uint64_t sub_23568D73C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v176 = a2;
  uint64_t v165 = sub_235949428();
  uint64_t v3 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9F0);
  uint64_t v14 = MEMORY[0x270FA5388](v175, v10, v11, v12, v13);
  uint64_t v16 = (char *)&v153 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v17, v18, v19, v20);
  uint64_t v167 = (uint64_t)&v153 - v21;
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880F9F8);
  MEMORY[0x270FA5388](v172, v22, v23, v24, v25);
  uint64_t v174 = (uint64_t)&v153 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA00);
  MEMORY[0x270FA5388](v173, v27, v28, v29, v30);
  uint64_t v32 = (char *)&v153 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA08);
  MEMORY[0x270FA5388](v170, v33, v34, v35, v36);
  uint64_t v171 = (uint64_t)&v153 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for MFReaderThemeSelectionOverlay(0);
  uint64_t v43 = MEMORY[0x270FA5388](v38 - 8, v39, v40, v41, v42);
  uint64_t v178 = (uint64_t)&v153 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x270FA5388](v43, v45, v46, v47, v48);
  uint64_t v168 = (uint64_t *)((char *)&v153 - v50);
  MEMORY[0x270FA5388](v49, v51, v52, v53, v54);
  uint64_t v160 = (char *)&v153 - v55;
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA10);
  uint64_t v60 = MEMORY[0x270FA5388](v169, v56, v57, v58, v59);
  uint64_t v166 = (uint64_t)&v153 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v60, v62, v63, v64, v65);
  uint64_t v161 = (uint64_t)&v153 - v66;
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA18);
  uint64_t v71 = MEMORY[0x270FA5388](v159, v67, v68, v69, v70);
  uint64_t v162 = (uint64_t)&v153 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = MEMORY[0x270FA5388](v71, v73, v74, v75, v76);
  id v79 = (char *)&v153 - v78;
  MEMORY[0x270FA5388](v77, v80, v81, v82, v83);
  uint64_t v163 = (uint64_t)&v153 - v84;
  uint64_t v180 = sub_2359488B8();
  uint64_t v85 = *(void *)(v180 - 8);
  MEMORY[0x270FA5388](v180, v86, v87, v88, v89);
  uint64_t v91 = (char *)&v153 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359470F8();
  sub_2359484D8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v177 = v188;
  if (v188)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359470F8();
    sub_2359484D8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v164 = v188;
    if (v188)
    {
      uint64_t v156 = v32;
      type metadata accessor for MFReaderCustomThemeSelectionMenu(0);
      sub_2359470F8();
      sub_2358E90E8((uint64_t)v91);
      char v92 = sub_2359488A8();
      uint64_t v93 = *(void (**)(char *, uint64_t))(v85 + 8);
      v93(v91, v180);
      if (v92)
      {
        id v94 = objc_msgSend(self, sel_mainScreen);
        objc_msgSend(v94, sel_bounds);
      }
      sub_2358E90E8((uint64_t)v91);
      char v110 = sub_2359488A8();
      v93(v91, v180);
      if (v110)
      {
        id v111 = objc_msgSend(self, (SEL)&selRef_removeFromSuperview + 4);
        objc_msgSend(v111, (SEL)&selRef_textFieldShouldEndEditing_);
      }
      sub_235949628();
      sub_2359487C8();
      uint64_t v178 = v182;
      LODWORD(v167) = v183;
      uint64_t v166 = v184;
      LODWORD(v165) = v185;
      uint64_t v158 = v186;
      uint64_t v157 = v187;
      sub_2359496A8();
      uint64_t v113 = v112;
      uint64_t v115 = v114;
      sub_2359470F8();
      sub_2358E90E8((uint64_t)v91);
      char v116 = sub_2359488A8();
      v93(v91, v180);
      if (v116)
      {
        id v117 = objc_msgSend(self, (SEL)&selRef_removeFromSuperview + 4);
        objc_msgSend(v117, (SEL)&selRef_textFieldShouldEndEditing_);
      }
      sub_2358E90E8((uint64_t)v91);
      char v118 = sub_2359488A8();
      v93(v91, v180);
      if (v118)
      {
        id v119 = objc_msgSend(self, (SEL)&selRef_removeFromSuperview + 4);
        objc_msgSend(v119, (SEL)&selRef_textFieldShouldEndEditing_);
      }
      uint64_t v120 = (uint64_t)v160;
      uint64_t v121 = (uint64_t)v156;
      sub_235949628();
      sub_2359487C8();
      uint64_t v180 = v188;
      LODWORD(v160) = v189;
      uint64_t v156 = (char *)v190;
      int v155 = v191;
      uint64_t v122 = v193;
      uint64_t v154 = v192;
      sub_2359496A8();
      uint64_t v124 = v123;
      uint64_t v126 = v125;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v128 = (uint64_t)v168;
      *uint64_t v168 = KeyPath;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
      swift_storeEnumTagMultiPayload();
      sub_23568EB00(v128, v120);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359470F8();
      sub_2359484D8();
      swift_release();
      swift_release();
      swift_release();
      switch(v181)
      {
        case 4:
          swift_bridgeObjectRelease();
          double v142 = 1.0;
          break;
        default:
          char v141 = sub_23594AB78();
          swift_bridgeObjectRelease();
          if (v141) {
            double v142 = 1.0;
          }
          else {
            double v142 = 0.0;
          }
          break;
      }
      uint64_t v143 = v161;
      sub_23568EB64(v120, v161);
      *(double *)(v143 + *(int *)(v169 + 36)) = v142;
      sub_23568ECDC(v120, type metadata accessor for MFReaderThemeSelectionOverlay);
      uint64_t v144 = sub_235949628();
      uint64_t v146 = v145;
      uint64_t v147 = v171;
      sub_23566A2E4(v143, v171, &qword_26880FA10);
      CGRect v148 = (uint64_t *)(v147 + *(int *)(v170 + 36));
      *CGRect v148 = v144;
      v148[1] = v146;
      sub_23566A2E4(v147, (uint64_t)&v79[*(int *)(v159 + 36)], &qword_26880FA08);
      *(_OWORD *)id v79 = xmmword_235953DE0;
      *((void *)v79 + 2) = v164;
      *((_WORD *)v79 + 12) = 256;
      *((void *)v79 + 4) = v180;
      v79[40] = (char)v160;
      *((void *)v79 + 6) = v156;
      v79[56] = v155;
      *((void *)v79 + 8) = v154;
      *((void *)v79 + 9) = v122;
      *((void *)v79 + 10) = 0xBFE921FB54442D18;
      *((void *)v79 + 11) = v124;
      *((void *)v79 + 12) = v126;
      sub_2359470F8();
      sub_23566A3AC(v147, &qword_26880FA08);
      sub_23566A3AC(v143, &qword_26880FA10);
      swift_release();
      uint64_t v149 = v163;
      sub_23566A348((uint64_t)v79, v163, &qword_26880FA18);
      uint64_t v150 = v162;
      sub_23566A2E4(v149, v162, &qword_26880FA18);
      *(_OWORD *)uint64_t v121 = xmmword_235953DF0;
      *(void *)(v121 + 16) = v177;
      *(_WORD *)(v121 + 24) = 256;
      *(void *)(v121 + 32) = v178;
      *(unsigned char *)(v121 + 40) = v167;
      *(void *)(v121 + 48) = v166;
      *(unsigned char *)(v121 + 56) = v165;
      uint64_t v151 = v157;
      *(void *)(v121 + 64) = v158;
      *(void *)(v121 + 72) = v151;
      *(void *)(v121 + 80) = 0xBFE921FB54442D18;
      *(void *)(v121 + 88) = v113;
      *(void *)(v121 + 96) = v115;
      uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FA40);
      sub_23566A2E4(v150, v121 + *(int *)(v152 + 48), &qword_26880FA18);
      swift_retain_n();
      sub_23566A3AC(v150, &qword_26880FA18);
      swift_release();
      sub_23566A2E4(v121, v174, &qword_26880FA00);
      swift_storeEnumTagMultiPayload();
      sub_2356595F4(&qword_26880FA20, &qword_26880FA00);
      sub_23568EBC8();
      sub_235948DA8();
      swift_release();
      swift_release();
      sub_23566A3AC(v121, &qword_26880FA00);
      sub_23566A3AC(v149, &qword_26880FA18);
      return swift_release();
    }
    swift_release();
  }
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v96 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v97 = (void *)sub_235949A88();
  id v98 = objc_msgSend(self, sel_imageNamed_inBundle_, v97, v96);

  if (!v98)
  {
    __break(1u);
    JUMPOUT(0x23568E940);
  }
  sub_235949408();
  uint64_t v99 = v165;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v9, *MEMORY[0x263F1B4B8], v165);
  uint64_t v100 = sub_235949448();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v99);
  type metadata accessor for MFReaderCustomThemeSelectionMenu(0);
  sub_2358E90E8((uint64_t)v91);
  char v101 = sub_2359488A8();
  uint64_t v102 = *(void (**)(char *, uint64_t))(v85 + 8);
  v102(v91, v180);
  if (v101)
  {
    id v103 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v103, sel_bounds);
  }
  sub_2358E90E8((uint64_t)v91);
  char v104 = sub_2359488A8();
  v102(v91, v180);
  if (v104)
  {
    id v105 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v105, sel_bounds);
  }
  uint64_t v106 = v168;
  sub_235949628();
  sub_2359487C8();
  uint64_t v180 = v188;
  LODWORD(v177) = v189;
  uint64_t v168 = v190;
  char v107 = v191;
  uint64_t v108 = v192;
  uint64_t v109 = v193;
  *uint64_t v106 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  swift_storeEnumTagMultiPayload();
  sub_23568EB00((uint64_t)v106, v178);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359470F8();
  sub_2359484D8();
  swift_release();
  swift_release();
  swift_release();
  switch((char)v182)
  {
    case 4:
      swift_bridgeObjectRelease();
      double v129 = 1.0;
      break;
    default:
      char v130 = sub_23594AB78();
      swift_bridgeObjectRelease();
      if (v130) {
        double v129 = 1.0;
      }
      else {
        double v129 = 0.0;
      }
      break;
  }
  uint64_t v131 = v178;
  uint64_t v132 = v166;
  sub_23568EB64(v178, v166);
  *(double *)(v132 + *(int *)(v169 + 36)) = v129;
  sub_23568ECDC(v131, type metadata accessor for MFReaderThemeSelectionOverlay);
  uint64_t v133 = sub_235949628();
  uint64_t v135 = v134;
  uint64_t v136 = v171;
  sub_23566A2E4(v132, v171, &qword_26880FA10);
  uint64_t v137 = (uint64_t *)(v136 + *(int *)(v170 + 36));
  uint64_t *v137 = v133;
  v137[1] = v135;
  sub_23566A2E4(v136, (uint64_t)&v16[*(int *)(v175 + 36)], &qword_26880FA08);
  uint64_t v138 = v180;
  *(void *)uint64_t v16 = v100;
  *((void *)v16 + 1) = v138;
  v16[16] = v177;
  *((void *)v16 + 3) = v168;
  v16[32] = v107;
  *((void *)v16 + 5) = v108;
  *((void *)v16 + 6) = v109;
  sub_2359470F8();
  sub_23566A3AC(v136, &qword_26880FA08);
  sub_23566A3AC(v132, &qword_26880FA10);
  swift_release();
  uint64_t v139 = v167;
  sub_23566A348((uint64_t)v16, v167, &qword_26880F9F0);
  sub_23566A2E4(v139, v174, &qword_26880F9F0);
  swift_storeEnumTagMultiPayload();
  sub_2356595F4(&qword_26880FA20, &qword_26880FA00);
  sub_23568EBC8();
  sub_235948DA8();
  return sub_23566A3AC(v139, &qword_26880F9F0);
}

uint64_t sub_23568E968@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MFReaderTextFormatterModel(0);
  sub_23568EEC0(&qword_26880F9A8, (void (*)(uint64_t))type metadata accessor for MFReaderTextFormatterModel);
  sub_235948888();
  swift_getKeyPath();
  sub_235948898();
  swift_release();
  swift_release();
  uint64_t v7 = v1;
  uint64_t v5 = v1;
  return sub_235789F1C(1, 1, v8, v9, v10, 0, (void (*)(uint64_t))sub_23568EA98, (uint64_t)v6, a1, 320.0, (void (*)(uint64_t))sub_23568EAA0, (uint64_t)v4, 0, 0);
}

uint64_t sub_23568EA98@<X0>(uint64_t a1@<X8>)
{
  return sub_23568B92C(*(void *)(v1 + 16), a1);
}

uint64_t sub_23568EAA0@<X0>(uint64_t a1@<X8>)
{
  return sub_23568CDE4(*(void *)(v1 + 16), a1);
}

unint64_t sub_23568EAB0()
{
  unint64_t result = qword_268810770;
  if (!qword_268810770)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268810770);
  }
  return result;
}

uint64_t sub_23568EB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MFReaderThemeSelectionOverlay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23568EB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MFReaderThemeSelectionOverlay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23568EBC8()
{
  unint64_t result = qword_26880FA28;
  if (!qword_26880FA28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26880F9F0);
    sub_23568EC68();
    sub_2356595F4(&qword_26880FA38, &qword_26880FA08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FA28);
  }
  return result;
}

unint64_t sub_23568EC68()
{
  unint64_t result = qword_268810870;
  if (!qword_268810870)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26880FA30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810870);
  }
  return result;
}

uint64_t sub_23568ECDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23568ED3C()
{
  return sub_23568ED64(&qword_26880FA80, &qword_26880FA58, (void (*)(void))sub_23568EDE4);
}

uint64_t sub_23568ED64(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23568EDE4()
{
  unint64_t result = qword_26880FA88;
  if (!qword_26880FA88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26880FA50);
    sub_23568EEC0(&qword_26880FA70, (void (*)(uint64_t))type metadata accessor for MFColorPicker);
    sub_23568EEC0(&qword_26880FA90, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FA88);
  }
  return result;
}

uint64_t sub_23568EEC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23568EF08()
{
  return sub_2356595F4(&qword_26880FAA0, &qword_26880FAA8);
}

unint64_t sub_23568EF48()
{
  unint64_t result = qword_26880FAB0;
  if (!qword_26880FAB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26880FAB8);
    sub_2356595F4(&qword_26880FAC0, &qword_26880FAC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FAB0);
  }
  return result;
}

uint64_t sub_23568EFEC(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 2:
    case 4:
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v4 = (void *)sub_235949A88();
      uint64_t v5 = (void *)sub_235949A88();
      id v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

      uint64_t v1 = sub_235949AC8();
      break;
    case 3:
      uint64_t v7 = (void *)sub_235949A88();
      v11[4] = sub_2358D096C;
      void v11[5] = 0;
      v11[0] = MEMORY[0x263EF8330];
      v11[1] = 1107296256;
      v11[2] = sub_2358D0A54;
      void v11[3] = &block_descriptor_6;
      uint64_t v8 = _Block_copy(v11);
      id v9 = (id)AXLocStringForDeviceVariant();
      _Block_release(v8);

      if (!v9)
      {
        __break(1u);
        JUMPOUT(0x23568F280);
      }
      uint64_t v1 = sub_235949AC8();

      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_23568F294(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v4 = (void *)sub_235949A88();
      uint64_t v5 = (void *)sub_235949A88();
      id v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

      uint64_t v1 = sub_235949AC8();
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t *sub_23568F45C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate;
  unint64_t result = (uint64_t *)MEMORY[0x237DEA060](v2);
  if (result)
  {
    uint64_t v5 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC16MagnifierSupport30ActivityControlsViewController_nameTitle);
    uint64_t v4 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC16MagnifierSupport30ActivityControlsViewController_nameTitle + 8);
    swift_bridgeObjectRetain();
    unint64_t result = (uint64_t *)swift_unknownObjectRelease();
    if (v4)
    {
      if (MEMORY[0x237DEA060](v2))
      {
        swift_unknownObjectRelease();
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        id v6 = (void *)qword_26AF181E0;
        swift_beginAccess();
        uint64_t v7 = v6[6];
        uint64_t v8 = v6[7];
        v21[0] = v6[5];
        v21[1] = v7;
        v21[2] = v8;
        uint64_t v9 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        uint64_t v10 = swift_bridgeObjectRetain();
        if (v9 != -1) {
          uint64_t v10 = swift_once();
        }
        MEMORY[0x270FA5388](v10, v11, v12, v13, v14);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15030);
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v20[0] + 16) && (unint64_t v15 = sub_2358780C4(v5, v4), (v16 & 1) != 0))
        {
          uint64_t v17 = (const void *)(*(void *)(v20[0] + 56) + 280 * v15);
          memcpy(v19, v17, sizeof(v19));
          memmove(v20, v17, 0x118uLL);
          CGRectMake(v20);
          sub_235659250((uint64_t)v19);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_235689AE4((uint64_t)v20);
        }
        sub_235689B14((uint64_t)v20, (uint64_t)v21);
        uint64_t v18 = v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity;
        sub_235689B14(v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity, (uint64_t)v20);
        sub_235689B14((uint64_t)v21, v18);
        return sub_235691A68(v20);
      }
      else
      {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_23568F710()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_loadView);
  id v1 = objc_msgSend(v0, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_235949A88();
  uint64_t v5 = (void *)sub_235949A88();
  id v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

  sub_235949AC8();
  uint64_t v7 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v7);
}

uint64_t *sub_23568F8BC()
{
  id v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_tableView];
  objc_msgSend(v2, sel_setDataSource_, v1);
  objc_msgSend(v2, sel_setDelegate_, v1);
  sub_2356594B0(0, (unint64_t *)&qword_26880EB00);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v4 = (void *)sub_235949A88();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  type metadata accessor for UIStepperLengthCell();
  uint64_t v5 = swift_getObjCClassFromMetadata();
  id v6 = (void *)sub_235949A88();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, v5, v6);

  uint64_t v7 = (void *)sub_235949A88();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v7);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  unint64_t result = (uint64_t *)objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v9 = result;
    objc_msgSend(result, sel_addSubview_, v2);

    unint64_t result = (uint64_t *)objc_msgSend(v1, sel_view);
    if (result)
    {
      uint64_t v10 = result;
      sub_23592C7F4(result, *MEMORY[0x263F834E8], *(double *)(MEMORY[0x263F834E8] + 8), *(double *)(MEMORY[0x263F834E8] + 16), *(double *)(MEMORY[0x263F834E8] + 24));
      swift_bridgeObjectRelease();

      return sub_23568F45C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_23568FB00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = (uint64_t)&v3[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity];
  sub_235689AE4((uint64_t)v25);
  sub_235689B14((uint64_t)v25, v5);
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v6 = v3;
  uint64_t v7 = 0;
  uint64_t v8 = MEMORY[0x263F8EE78];
  do
  {
    int v11 = byte_26E8BD6D0[v7 + 32];
    if (v11 != 3) {
      goto LABEL_10;
    }
    if (qword_26880E5D0 != -1) {
      swift_once();
    }
    if (byte_268812C69 == 1)
    {
LABEL_10:
      uint64_t v24 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2356762E4(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v24;
      }
      unint64_t v10 = *(void *)(v8 + 16);
      unint64_t v9 = *(void *)(v8 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_2356762E4(v9 > 1, v10 + 1, 1);
        uint64_t v8 = v24;
      }
      *(void *)(v8 + 16) = v10 + 1;
      *(unsigned char *)(v8 + v10 + 32) = v11;
    }
    ++v7;
  }
  while (v7 != 4);
  *(void *)&v6[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_availableDetectionFeedbacks] = v8;
  uint64_t v12 = OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_tableView;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C78]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, sel_setClipsToBounds_, 0);
  uint64_t v14 = self;
  id v15 = v13;
  id v16 = objc_msgSend(v14, sel_systemYellowColor);
  objc_msgSend(v15, sel_setTintColor_, v16);

  *(void *)&v6[v12] = v15;
  if (a2)
  {
    uint64_t v17 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  v23.receiver = v6;
  v23.super_class = ObjectType;
  id v18 = objc_msgSendSuper2(&v23, sel_initWithNibName_bundle_, v17, a3, a1);

  return v18;
}

id sub_23568FDDC(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity];
  sub_235689AE4((uint64_t)v20);
  sub_235689B14((uint64_t)v20, v3);
  *(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = v1;
  uint64_t v5 = 0;
  uint64_t v6 = MEMORY[0x263F8EE78];
  do
  {
    int v9 = byte_26E8BD6F8[v5 + 32];
    if (v9 != 3) {
      goto LABEL_10;
    }
    if (qword_26880E5D0 != -1) {
      swift_once();
    }
    if (byte_268812C69 == 1)
    {
LABEL_10:
      uint64_t v19 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2356762E4(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v19;
      }
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_2356762E4(v7 > 1, v8 + 1, 1);
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v8 + 1;
      *(unsigned char *)(v6 + v8 + 32) = v9;
    }
    ++v5;
  }
  while (v5 != 4);
  *(void *)&v4[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_availableDetectionFeedbacks] = v6;
  uint64_t v10 = OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_tableView;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C78]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, sel_setClipsToBounds_, 0);
  uint64_t v12 = self;
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_systemYellowColor);
  objc_msgSend(v13, sel_setTintColor_, v14);

  *(void *)&v4[v10] = v13;
  v18.receiver = v4;
  v18.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v18, sel_initWithCoder_, a1);

  return v15;
}

uint64_t type metadata accessor for ActivityObjectUnderstandingCustomizationViewController()
{
  return self;
}

id sub_2356900EC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880F590);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  int v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = 3;
  switch(sub_235947B28())
  {
    case 0:
      int v10 = 0;
      goto LABEL_8;
    case 1:
      uint64_t v12 = (void *)sub_235949A88();
      id v13 = (void *)sub_235947AB8();
      id v14 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v12, v13);
      int v10 = 1;
      goto LABEL_6;
    case 2:
      uint64_t v12 = (void *)sub_235949A88();
      id v13 = (void *)sub_235947AB8();
      id v14 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v12, v13);
      int v10 = 2;
LABEL_6:
      id v15 = v14;

      id v16 = v87;
      sub_23568F45C();
      goto LABEL_10;
    case 3:
      goto LABEL_8;
    case 4:
      int v10 = 4;
LABEL_8:
      char v11 = 0;
      break;
    default:
      int v10 = 5;
      char v11 = 1;
      break;
  }
  uint64_t v17 = (void *)sub_235949A88();
  objc_super v18 = (void *)sub_235947AB8();
  id v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v17, v18);

  id v16 = v87;
  sub_23568F45C();
  if ((v11 & 1) == 0)
  {
LABEL_10:
    switch(v10)
    {
      case 1:
        objc_msgSend(v15, sel_setAccessoryView_, 0);
        uint64_t v35 = &v16[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity];
        sub_235689B14((uint64_t)&v16[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity], (uint64_t)v90);
        sub_235689B14((uint64_t)v90, (uint64_t)v92);
        if (sub_23569199C((uint64_t)v92) == 1) {
          return v15;
        }
        int v36 = v35[59];
        uint64_t v37 = sub_235947AE8();
        if (v37)
        {
          if (v37 != 1) {
            return v15;
          }
          if ((v36 & 1) == 0) {
            goto LABEL_23;
          }
        }
        else if (v36)
        {
LABEL_23:
          uint64_t v38 = 0;
          goto LABEL_55;
        }
        uint64_t v38 = 3;
LABEL_55:
        objc_msgSend(v15, sel_setAccessoryType_, v38);
        id v83 = objc_msgSend(v15, sel_textLabel);
        if (v83)
        {
          uint64_t v84 = v83;
          sub_2356ED218();
          uint64_t v85 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          objc_msgSend(v84, sel_setText_, v85);
        }
        return v15;
      case 2:
        uint64_t v39 = (uint64_t)&v16[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity];
        sub_235689B14((uint64_t)&v16[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity], (uint64_t)v90);
        sub_235689B14((uint64_t)v90, (uint64_t)v92);
        if (sub_23569199C((uint64_t)v92) != 1)
        {
          int v40 = *(unsigned __int8 *)(v39 + 59);
          sub_235689B14(v39, (uint64_t)v88);
          sub_235689B14((uint64_t)v88, (uint64_t)v89);
          if (sub_23569199C((uint64_t)v89) != 1)
          {
            type metadata accessor for UIStepperLengthCell();
            if (swift_dynamicCastClass())
            {
              uint64_t v41 = v16;
              uint64_t v42 = self;
              id v15 = v15;
              uint64_t v43 = &selRef_feet;
              if (!v40) {
                uint64_t v43 = &selRef_meters;
              }
              id v44 = [v42 *v43];
              sub_2356594B0(0, (unint64_t *)&qword_26880EAF0);
              sub_2359473F8();
              uint64_t v45 = swift_allocObject();
              *(void *)(v45 + 16) = v41;
              uint64_t v46 = v41;
              sub_2357C3FD4((uint64_t)v9, (uint64_t)sub_235691C68, v45);

              swift_release();
              (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
            }
          }
        }
        return v15;
      case 3:
        id v47 = objc_msgSend(v15, sel_textLabel);
        if (v47)
        {
          uint64_t v48 = v47;
          objc_msgSend(v47, sel_setLineBreakMode_, 0);
        }
        id v49 = objc_msgSend(v15, sel_textLabel);
        if (v49)
        {
          uint64_t v50 = v49;
          objc_msgSend(v49, sel_setNumberOfLines_, 0);
        }
        uint64_t v51 = &v16[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity];
        sub_235689B14((uint64_t)&v16[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity], (uint64_t)v90);
        sub_235689B14((uint64_t)v90, (uint64_t)v92);
        if (sub_23569199C((uint64_t)v92) == 1) {
          return v15;
        }
        uint64_t v52 = *((void *)v51 + 13);
        uint64_t v53 = *(void *)&v16[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_availableDetectionFeedbacks];
        swift_bridgeObjectRetain();
        unint64_t v54 = sub_235947AE8();
        if ((v54 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v54 < *(void *)(v53 + 16))
        {
          uint64_t v55 = *(unsigned __int8 *)(v53 + v54 + 32);
          id v56 = objc_msgSend(v15, sel_textLabel);
          if (v56)
          {
            uint64_t v57 = v56;
            sub_235652C1C();
            uint64_t v58 = (void *)sub_235949A88();
            swift_bridgeObjectRelease();
            objc_msgSend(v57, sel_setText_, v58);

            id v16 = v87;
          }
          id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
          BOOL v59 = sub_2356BFD20(v55, v52);
          swift_bridgeObjectRelease();
          objc_msgSend(v33, sel_setOn_, v59);
          objc_msgSend(v33, sel_setTag_, v55);
          uint64_t v34 = sel_toggleFeedbackSwitch_;
LABEL_40:
          objc_msgSend(v33, sel_addTarget_action_forControlEvents_, v16, v34, 4096);
          objc_msgSend(v15, sel_setAccessoryView_, v33);

          return v15;
        }
        __break(1u);
        JUMPOUT(0x235690C88);
      case 4:
        id v60 = objc_msgSend(v15, sel_textLabel);
        if (v60)
        {
          uint64_t v61 = v60;
          objc_msgSend(v60, sel_setLineBreakMode_, 0);
        }
        id v62 = objc_msgSend(v15, sel_textLabel);
        if (v62)
        {
          uint64_t v63 = v62;
          objc_msgSend(v62, sel_setNumberOfLines_, 0);
        }
        id v64 = objc_msgSend(v15, sel_textLabel);
        if (v64)
        {
          uint64_t v65 = v64;
          type metadata accessor for MAGUtilities();
          uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          id v67 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
          uint64_t v68 = (void *)sub_235949A88();
          uint64_t v69 = (void *)sub_235949A88();
          id v70 = objc_msgSend(v67, sel_localizedStringForKey_value_table_, v68, 0, v69);

          id v16 = v87;
          sub_235949AC8();

          uint64_t v71 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          objc_msgSend(v65, sel_setText_, v71);
        }
        id v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
        objc_msgSend(v72, sel_setTag_, sub_235947AE8());
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v73 = qword_26AF181E0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingSeatOccupancy;
        swift_beginAccess();
        uint64_t v74 = *(void *)(v73 + 8);
        char v75 = *(unsigned char *)(v73 + 16);
        v90[0] = *(void *)v73;
        v90[1] = v74;
        char v91 = v75;
        uint64_t v76 = qword_26AF144C0;
        uint64_t v77 = swift_bridgeObjectRetain();
        if (v76 != -1) {
          uint64_t v77 = swift_once();
        }
        MEMORY[0x270FA5388](v77, v78, v79, v80, v81);
        *(&v86 - 2) = (uint64_t)v90;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        objc_msgSend(v72, sel_setOn_, v89[0]);
        objc_msgSend(v72, sel_addTarget_action_forControlEvents_, v16, sel_toggleSeatOccupancySwitch_, 4096);
        objc_msgSend(v15, sel_setAccessoryView_, v72);
        objc_msgSend(v15, sel_setAccessoryType_, 0);

        return v15;
      default:
        id v19 = objc_msgSend(v15, sel_textLabel);
        if (v19)
        {
          uint64_t v20 = v19;
          objc_msgSend(v19, sel_setLineBreakMode_, 0);
        }
        id v21 = objc_msgSend(v15, sel_textLabel);
        if (v21)
        {
          uint64_t v22 = v21;
          objc_msgSend(v21, sel_setNumberOfLines_, 0);
        }
        id v23 = objc_msgSend(v15, sel_textLabel);
        if (v23)
        {
          uint64_t v24 = v23;
          type metadata accessor for MAGUtilities();
          uint64_t v25 = swift_getObjCClassFromMetadata();
          id v26 = objc_msgSend(self, sel_bundleForClass_, v25);
          uint64_t v27 = (void *)sub_235949A88();
          uint64_t v28 = (void *)sub_235949A88();
          id v29 = objc_msgSend(v26, sel_localizedStringForKey_value_table_, v27, 0, v28);

          sub_235949AC8();
          id v16 = v87;
          uint64_t v30 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          objc_msgSend(v24, sel_setText_, v30);
        }
        uint64_t v31 = &v16[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity];
        sub_235689B14((uint64_t)&v16[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity], (uint64_t)v90);
        sub_235689B14((uint64_t)v90, (uint64_t)v92);
        if (sub_23569199C((uint64_t)v92) == 1) {
          return v15;
        }
        uint64_t v32 = v31[55];
        id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_init);
        objc_msgSend(v33, sel_setOn_, v32);
        uint64_t v34 = sel_toggleObjectUnderstandingSwitch_;
        goto LABEL_40;
    }
  }
  return v15;
}

uint64_t sub_235690CB0(uint64_t a1, double a2)
{
  uint64_t result = MEMORY[0x237DEA060](a1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate);
  if (result)
  {
    sub_235768EE4(a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_235690FA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(unint64_t, void))
{
  sub_235691BE4(a4, a5);
  if (v5)
  {
    uint64_t v6 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  return v6;
}

uint64_t sub_235691000(void *a1)
{
  uint64_t v2 = v1;
  uint64_t result = (uint64_t)sub_23568F45C();
  if (a1)
  {
    uint64_t result = sub_235657FEC((unint64_t)objc_msgSend(a1, sel_tag));
    if (result != 4)
    {
      unsigned __int8 v5 = result;
      uint64_t v6 = v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity;
      sub_235689B14(v2 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity, (uint64_t)v17);
      sub_235689B14((uint64_t)v17, (uint64_t)v18);
      uint64_t result = sub_23569199C((uint64_t)v18);
      if (result != 1)
      {
        uint64_t v7 = *(char **)(v6 + 104);
        swift_bridgeObjectRetain();
        if (objc_msgSend(a1, sel_isOn))
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v7 = sub_2356CD394(0, *((void *)v7 + 2) + 1, 1, v7);
          }
          unint64_t v9 = *((void *)v7 + 2);
          unint64_t v8 = *((void *)v7 + 3);
          if (v9 >= v8 >> 1) {
            uint64_t v7 = sub_2356CD394((char *)(v8 > 1), v9 + 1, 1, v7);
          }
          *((void *)v7 + 2) = v9 + 1;
          v7[v9 + 32] = v5;
          sub_23569120C((uint64_t)v7);
          return swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v10 = *((void *)v7 + 2);
          if (v10)
          {
            char v11 = (unsigned __int8 *)(v7 + 32);
            uint64_t v12 = MEMORY[0x263F8EE78];
            do
            {
              int v16 = *v11++;
              char v15 = v16;
              if (v16 != v5)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_2356762E4(0, *(void *)(v12 + 16) + 1, 1);
                }
                unint64_t v14 = *(void *)(v12 + 16);
                unint64_t v13 = *(void *)(v12 + 24);
                if (v14 >= v13 >> 1) {
                  sub_2356762E4(v13 > 1, v14 + 1, 1);
                }
                *(void *)(v12 + 16) = v14 + 1;
                *(unsigned char *)(v12 + v14 + 32) = v15;
              }
              --v10;
            }
            while (v10);
          }
          else
          {
            uint64_t v12 = MEMORY[0x263F8EE78];
          }
          swift_bridgeObjectRelease();
          sub_23569120C(v12);
          return swift_release();
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23569120C(uint64_t a1)
{
  sub_23568F45C();
  uint64_t v8 = a1;
  swift_bridgeObjectRetain();
  sub_2357ED1CC(&v8);
  uint64_t v3 = v8;
  uint64_t v4 = v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity;
  sub_235689B14(v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity, (uint64_t)v6);
  sub_235689B14((uint64_t)v6, (uint64_t)v7);
  if (sub_23569199C((uint64_t)v7) == 1
    || sub_2357D8720(v3, *(void *)(v4 + 104))
    || !MEMORY[0x237DEA060](v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate))
  {
    return swift_release();
  }
  sub_235769884(v3);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_235691388(char *a1, uint64_t a2, void *a3, void (*a4)(id))
{
  uint64_t result = MEMORY[0x237DEA060](&a1[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate]);
  if (result)
  {
    if (a3)
    {
      id v8 = a3;
      unint64_t v9 = a1;
      a4(objc_msgSend(v8, sel_isOn));

      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_23569142C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_235947A78();
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_235947B38();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13, v14, v15, v16);
  objc_super v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23568F45C();
  id v19 = (void *)sub_235947AB8();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v19, 1);

  uint64_t v20 = (void *)sub_235947AB8();
  id v39 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v20);

  if (!v39) {
    return;
  }
  uint64_t v21 = sub_235947AE8();
  if (v21)
  {
    if (v21 != 1) {
      goto LABEL_23;
    }
    int v37 = 1;
  }
  else
  {
    int v37 = 0;
  }
  unint64_t v22 = sub_235947B28();
  if (v22 < 5)
  {
    char v23 = v22;
    uint64_t v24 = v2 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity;
    sub_235689B14(v2 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity, (uint64_t)v41);
    sub_235689B14((uint64_t)v41, (uint64_t)v42);
    if (sub_23569199C((uint64_t)v42) != 1)
    {
      int v25 = *(unsigned __int8 *)(v24 + 59);
      char v26 = v37;
      if (v37 != v25 && (v23 & 0x1F) == 1)
      {
        uint64_t v36 = v2 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate;
        if (MEMORY[0x237DEA060]())
        {
          sub_235767A5C(v26);
          swift_unknownObjectRelease();
        }
        uint64_t v27 = (void (**)(char *, uint64_t))(v12 + 8);
        MEMORY[0x237DE5A70](byte_26E8BD858, 1);
        uint64_t v28 = (void *)sub_235947AB8();
        id v29 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v28);

        if (v29)
        {
          objc_msgSend(v29, sel_setAccessoryType_, 0);
        }
        uint64_t v30 = *v27;
        (*v27)(v18, v11);
        MEMORY[0x237DE5A70](byte_26E8BD859, 1);
        uint64_t v31 = (void *)sub_235947AB8();
        id v32 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v31);

        if (v32)
        {
          objc_msgSend(v32, sel_setAccessoryType_, 0);
        }
        v30(v18, v11);
        objc_msgSend(v39, sel_setAccessoryType_, 3);
        if (MEMORY[0x237DEA060](v36))
        {
          double v33 = 2.0;
          if (v37) {
            double v33 = 6.0;
          }
          sub_235768EE4(v33);
          swift_unknownObjectRelease();
        }
        objc_msgSend(a1, sel_beginUpdates);
        int v40 = &unk_26E8BD860;
        sub_2356919B4();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880EAE0);
        sub_235691A0C();
        sub_23594A6C8();
        uint64_t v34 = (void *)sub_235947A68();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v4);
        objc_msgSend(a1, sel_reloadSections_withRowAnimation_, v34, 100);

        objc_msgSend(a1, sel_endUpdates);
      }
    }

    return;
  }
LABEL_23:
  id v35 = v39;
}

uint64_t sub_23569199C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

unint64_t sub_2356919B4()
{
  unint64_t result = qword_26880FAF0;
  if (!qword_26880FAF0)
  {
    sub_235947A78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FAF0);
  }
  return result;
}

unint64_t sub_235691A0C()
{
  unint64_t result = qword_26880FB00;
  if (!qword_26880FB00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26880EAE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FB00);
  }
  return result;
}

uint64_t *sub_235691A68(uint64_t *a1)
{
  return a1;
}

uint64_t sub_235691AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_235691BE4(unint64_t a1, uint64_t (*a2)(unint64_t, void))
{
  if (a1 > 4) {
    return 0;
  }
  else {
    return a2(a1, a2);
  }
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_235691C30()
{
  return swift_deallocObject();
}

uint64_t sub_235691C68(double a1)
{
  return sub_235690CB0(*(void *)(v1 + 16), a1);
}

UISceneConfiguration __swiftcall MagnifierApplicationDelegate.application(_:configurationForConnecting:options:)(UIApplication *_, UISceneSession configurationForConnecting, UISceneConnectionOptions options)
{
  id v3 = [(objc_class *)configurationForConnecting.super.isa role];
  id v4 = objc_allocWithZone(MEMORY[0x263F82B48]);
  uint64_t v5 = (void *)sub_235949A88();
  id v6 = objc_msgSend(v4, sel_initWithName_sessionRole_, v5, v3);

  return (UISceneConfiguration)v6;
}

uint64_t sub_235691E00()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FB88);
  v0[6] = v1;
  v0[7] = *(void *)(v1 - 8);
  v0[8] = swift_task_alloc();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FB90);
  v0[9] = v2;
  v0[10] = *(void *)(v2 - 8);
  v0[11] = swift_task_alloc();
  v0[12] = sub_235949E78();
  v0[13] = sub_235949E68();
  uint64_t v4 = sub_235949E28();
  v0[14] = v4;
  v0[15] = v3;
  return MEMORY[0x270FA2498](sub_235691F58, v4, v3);
}

uint64_t sub_235691F58()
{
  uint64_t v1 = v0[8];
  type metadata accessor for MAGThermalMonitor();
  static MAGThermalMonitor.thermalEvents()(v1);
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  sub_235949EE8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = sub_235949E68();
  v0[16] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_235692260;
  uint64_t v7 = v0[9];
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 18, v5, v8, v7);
}

uint64_t sub_235692260()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return MEMORY[0x270FA2498](sub_2356923A4, v3, v2);
}

uint64_t sub_2356923A4()
{
  if (*(unsigned __int8 *)(v0 + 148) >> 1 <= 0x7EuLL)
  {
    unint64_t v3 = *(unsigned int *)(v0 + 144) | ((unint64_t)*(unsigned __int8 *)(v0 + 148) << 32);
    uint64_t v4 = *(unsigned int *)(v0 + 144);
    if ((((unint64_t)*(unsigned __int8 *)(v0 + 148) << 32) & 0x8000000000) != 0)
    {
      if (qword_26880E490 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_235948278();
      __swift_project_value_buffer(v9, (uint64_t)qword_26880F938);
      uint64_t v10 = sub_235948258();
      os_log_type_t v11 = sub_23594A178();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        *(void *)(v0 + 40) = v13;
        *(_DWORD *)uint64_t v12 = 136315138;
        if ((v3 & 0x100000000) != 0)
        {
          unint64_t v15 = 0xE700000000000000;
          uint64_t v14 = 0x6C616E696D6F4ELL;
          switch(v4)
          {
            case 1:
              unint64_t v15 = 0xE500000000000000;
              uint64_t v14 = 0x746867694CLL;
              break;
            case 2:
              unint64_t v15 = 0xE800000000000000;
              uint64_t v14 = 0x6574617265646F4DLL;
              break;
            case 3:
              unint64_t v15 = 0xE500000000000000;
              uint64_t v14 = 0x7976616548;
              break;
            case 4:
              unint64_t v15 = 0xE800000000000000;
              unsigned int v16 = 1885434452;
              goto LABEL_22;
            case 5:
              unint64_t v15 = 0xE800000000000000;
              unsigned int v16 = 1701145683;
LABEL_22:
              uint64_t v14 = v16 | 0x676E697000000000;
              break;
            default:
              break;
          }
        }
        else
        {
          *(void *)(v0 + 16) = 0x206E776F6E6B6E55;
          *(void *)(v0 + 24) = 0xE900000000000028;
          *(_DWORD *)(v0 + 152) = v4;
          sub_23594AB48();
          sub_235949BD8();
          swift_bridgeObjectRelease();
          sub_235949BD8();
          uint64_t v14 = *(void *)(v0 + 16);
          unint64_t v15 = *(void *)(v0 + 24);
        }
        *(void *)(v12 + 4) = sub_235687708(v14, v15, (uint64_t *)(v0 + 40));
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_235640000, v10, v11, "Thermal pressure: %s", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x237DE9F30](v13, -1, -1);
        MEMORY[0x237DE9F30](v12, -1, -1);
      }
    }
    else
    {
      if (qword_26880E490 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_235948278();
      __swift_project_value_buffer(v5, (uint64_t)qword_26880F938);
      uint64_t v6 = sub_235948258();
      os_log_type_t v7 = sub_23594A178();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 67109120;
        *(_DWORD *)(v8 + 4) = v4;
        _os_log_impl(&dword_235640000, v6, v7, "Thermal level: %d", (uint8_t *)v8, 8u);
        MEMORY[0x237DE9F30](v8, -1, -1);
      }
    }
    uint64_t v17 = sub_235949E68();
    *(void *)(v0 + 128) = v17;
    objc_super v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v18;
    *objc_super v18 = v0;
    v18[1] = sub_235692260;
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1F68](v0 + 144, v17, v20, v19);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
}

UIInterfaceOrientationMask __swiftcall MagnifierApplicationDelegate.application(_:supportedInterfaceOrientationsFor:)(UIApplication *_, UIWindow_optional *supportedInterfaceOrientationsFor)
{
  if (qword_26880E5D0 != -1) {
    swift_once();
  }
  if (byte_268812C69) {
    return 2;
  }
  else {
    return 30;
  }
}

id MagnifierApplicationDelegate.rootViewForSimplifiedApplication.getter@<X0>(void *a1@<X8>)
{
  if (qword_26880E5F8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_268813D58;
  *a1 = qword_268813D58;
  return v2;
}

id MagnifierApplicationDelegate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id MagnifierApplicationDelegate.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MagnifierApplicationDelegate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_235692AE0@<X0>(void *a1@<X8>)
{
  if (qword_26880E5F8 != -1) {
    swift_once();
  }
  objc_super v2 = (void *)qword_268813D58;
  *a1 = qword_268813D58;
  return v2;
}

uint64_t _s16MagnifierSupport0A19ApplicationDelegateC11application_29didFinishLaunchingWithOptionsSbSo13UIApplicationC_SDySo0k6LaunchJ3KeyaypGSgtF_0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v0 - 8, v1, v2, v3, v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_processInfo);
  id v8 = objc_msgSend(v7, sel_arguments);

  uint64_t v9 = (void *)sub_235949D78();
  LOBYTE(v8) = sub_2356BFDA0(0xD000000000000017, 0x800000023596C6A0, v9);
  swift_bridgeObjectRelease();
  if (v8) {
    objc_msgSend(self, sel_setAnimationsEnabled_, 0);
  }
  sub_235692E50();
  id v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_appearance);
  id v11 = objc_msgSend(self, sel_systemYellowColor);
  objc_msgSend(v10, sel_setTintColor_, v11);

  uint64_t v12 = sub_235949EA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  sub_235949E78();
  uint64_t v13 = sub_235949E68();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8F500];
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v15;
  sub_2356C0210((uint64_t)v6, (uint64_t)&unk_26880FB80, v14);
  swift_release();
  return 1;
}

uint64_t sub_235692D60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for MagnifierApplicationDelegate()
{
  return self;
}

unint64_t sub_235692DA4()
{
  unint64_t result = qword_26880FB68;
  if (!qword_26880FB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FB68);
  }
  return result;
}

unint64_t sub_235692DF8()
{
  unint64_t result = qword_26880ED80;
  if (!qword_26880ED80)
  {
    type metadata accessor for LaunchOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880ED80);
  }
  return result;
}

unint64_t sub_235692E50()
{
  unint64_t result = qword_26AF15220;
  if (!qword_26AF15220)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AF15220);
  }
  return result;
}

uint64_t sub_235692E90()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_235692EC8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_23566A050;
  return sub_235691E00();
}

uint64_t sub_235692F74(uint64_t a1)
{
  return sub_235693040(a1, qword_26880FB98);
}

uint64_t static Signpost.appEvents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2356930DC(&qword_26880E4A8, (uint64_t)qword_26880FB98, a1);
}

uint64_t sub_235692FC4(uint64_t a1)
{
  return sub_235693040(a1, qword_26880FBB0);
}

uint64_t static Signpost.detectors.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2356930DC(&qword_26880E4B0, (uint64_t)qword_26880FBB0, a1);
}

uint64_t sub_235693014(uint64_t a1)
{
  return sub_235693040(a1, qword_26880FBC8);
}

uint64_t sub_235693040(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_2359481F8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_2359481E8();
}

uint64_t static Signpost.pointAndSpeak.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2356930DC(&qword_26880E4B8, (uint64_t)qword_26880FBC8, a1);
}

uint64_t sub_2356930DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2359481F8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

const char *static StaticString.MAGSceneBecameActive.getter()
{
  return "SceneBecameActive";
}

const char *static StaticString.MAGWillConnectSceneToSession.getter()
{
  return "SceneConnect";
}

const char *static StaticString.MAGSceneWillEnterForeground.getter()
{
  return "SceneEnterFG";
}

const char *static StaticString.MAGSceneOpenURLContexts.getter()
{
  return "SceneHandleURL";
}

const char *static StaticString.MAGSceneLaunchDetectionMode.getter()
{
  return "SceneLaunchDetectMode";
}

const char *static StaticString.MAGSceneLaunchActionButton.getter()
{
  return "SceneLaunchFromActionBtn";
}

const char *static StaticString.MAGStartARKitSession.getter()
{
  return "StartARKit";
}

const char *static StaticString.MAGStopARKitSession.getter()
{
  return "StopARKit";
}

const char *static StaticString.MAGARKitSessionInterrupted.getter()
{
  return "ARKitInterrupt";
}

const char *static StaticString.MAGARKitSessionInterruptFinished.getter()
{
  return "ARKitInterruptFinished";
}

const char *static StaticString.MAGStartObjectUnderstandingService.getter()
{
  return "StartObjUndrerstandService";
}

const char *static StaticString.MAGStopObjectUnderstandingService.getter()
{
  return "StopObjUndrerstandService";
}

const char *static StaticString.MAGDetectText.getter()
{
  return "DetectText";
}

const char *static StaticString.MAGDetectImageCaption.getter()
{
  return "ImageCaption";
}

const char *static StaticString.MAGHandPose.getter()
{
  return "HandPose";
}

const char *static StaticString.MAGAXTagLanguage.getter()
{
  return "AXTagLanguage";
}

const char *static StaticString.MAGCRTagLanguage.getter()
{
  return "CRTagLanguage";
}

ValueMetadata *type metadata accessor for Signpost()
{
  return &type metadata for Signpost;
}

uint64_t destroy for MFReaderBottomBar(uint64_t a1)
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for MFReaderBottomBar(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = *(void **)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_2359470F8();
  sub_2359470F8();
  id v7 = v6;
  sub_2359470F8();
  return a1;
}

uint64_t assignWithCopy for MFReaderBottomBar(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_2359470F8();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_2359470F8();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  id v6 = v5;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_2359470F8();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MFReaderBottomBar(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MFReaderBottomBar(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MFReaderBottomBar(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MFReaderBottomBar()
{
  return &type metadata for MFReaderBottomBar;
}

uint64_t sub_235693570()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23569358C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  id v83 = a1;
  uint64_t v84 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FBE8);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  uint64_t v9 = &v77[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FBF0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v17 = &v77[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FBF8);
  MEMORY[0x270FA5388](v18 - 8, v19, v20, v21, v22);
  uint64_t v85 = &v77[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC00) - 8;
  uint64_t v28 = MEMORY[0x270FA5388](v86, v24, v25, v26, v27);
  uint64_t v30 = &v77[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v28, v31, v32, v33, v34);
  uint64_t v87 = &v77[-v35];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC08);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_235952810;
  long long v99 = *a1;
  sub_2359470F8();
  sub_2357C82B0();
  sub_235686798((uint64_t)&v99);
  uint64_t v37 = sub_2359493A8();
  swift_release();
  *(void *)(v36 + 32) = v37;
  sub_2359470F8();
  sub_2357C82B0();
  sub_235686798((uint64_t)&v99);
  uint64_t v38 = sub_2359493A8();
  swift_release();
  *(void *)(v36 + 40) = v38;
  sub_2359470F8();
  uint64_t v39 = sub_2357C82B0();
  sub_235686798((uint64_t)&v99);
  *(void *)(v36 + 48) = v39;
  v113[0] = v36;
  sub_235949D98();
  uint64_t v40 = v113[0];
  sub_235949688();
  sub_235949698();
  MEMORY[0x237DE7540](v40);
  sub_235948868();
  uint64_t v41 = v88;
  uint64_t v42 = v89;
  uint64_t v43 = v90;
  uint64_t v44 = v91;
  uint64_t v45 = v92;
  sub_235949628();
  sub_2359487C8();
  LOBYTE(v40) = v94;
  uint64_t v81 = v95;
  uint64_t v82 = v93;
  LOBYTE(v36) = v96;
  uint64_t v79 = v98;
  uint64_t v80 = v97;
  int v78 = sub_235948F88();
  sub_235948698();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  unsigned __int8 v102 = v40;
  unsigned __int8 v101 = v36;
  char v100 = 0;
  *(void *)uint64_t v9 = sub_235948BC8();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC10);
  sub_235693B60(v83, (uint64_t)&v9[*(int *)(v54 + 44)]);
  LOBYTE(v40) = sub_235948F88();
  sub_23566A2E4((uint64_t)v9, (uint64_t)v17, &qword_26880FBE8);
  uint64_t v55 = &v17[*(int *)(v11 + 44)];
  *uint64_t v55 = v40;
  *(_OWORD *)(v55 + 8) = 0u;
  *(_OWORD *)(v55 + 24) = 0u;
  v55[40] = 1;
  sub_23566A3AC((uint64_t)v9, &qword_26880FBE8);
  uint64_t v56 = sub_235949628();
  uint64_t v57 = v85;
  sub_23586C6F0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v85, 0.0, 1, 0.0, 1, v56, v58);
  sub_23566A3AC((uint64_t)v17, &qword_26880FBF0);
  sub_2359470F8();
  uint64_t v59 = sub_2357C82B0();
  sub_235686798((uint64_t)&v99);
  LOBYTE(v11) = sub_235948F88();
  sub_23566A2E4((uint64_t)v57, (uint64_t)v30, &qword_26880FBF8);
  id v60 = &v30[*(int *)(v86 + 44)];
  *(void *)id v60 = v59;
  v60[8] = v11;
  sub_23566A3AC((uint64_t)v57, &qword_26880FBF8);
  uint64_t v61 = v87;
  sub_23566A348((uint64_t)v30, (uint64_t)v87, &qword_26880FC00);
  unsigned __int8 v62 = v102;
  LODWORD(v85) = v102;
  LOBYTE(v11) = v101;
  LODWORD(v86) = v101;
  LOBYTE(v59) = v100;
  sub_23566A2E4((uint64_t)v61, (uint64_t)v30, &qword_26880FC00);
  uint64_t v63 = v41;
  *(void *)&long long v103 = v41;
  *((void *)&v103 + 1) = v42;
  *(void *)&long long v104 = v43;
  *((void *)&v104 + 1) = v44;
  *(void *)&long long v105 = v45;
  uint64_t v64 = v81;
  uint64_t v65 = v82;
  *((void *)&v105 + 1) = v82;
  LOBYTE(v106) = v62;
  *((void *)&v106 + 1) = v81;
  LOBYTE(v107) = v11;
  uint64_t v66 = v79;
  uint64_t v67 = v80;
  *((void *)&v107 + 1) = v80;
  *(void *)&long long v108 = v79;
  *((void *)&v108 + 1) = 0x4034000000000000;
  LOBYTE(v109) = 0;
  char v68 = v78;
  BYTE8(v109) = v78;
  *(void *)&long long v110 = v47;
  *((void *)&v110 + 1) = v49;
  *(void *)&long long v111 = v51;
  *((void *)&v111 + 1) = v53;
  char v112 = v59;
  uint64_t v69 = (_OWORD *)v84;
  *(unsigned char *)(v84 + 144) = v59;
  long long v70 = v108;
  v69[4] = v107;
  v69[5] = v70;
  long long v71 = v106;
  v69[2] = v105;
  v69[3] = v71;
  long long v72 = v111;
  long long v73 = v109;
  v69[7] = v110;
  v69[8] = v72;
  v69[6] = v73;
  long long v74 = v104;
  *uint64_t v69 = v103;
  v69[1] = v74;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC18);
  sub_23566A2E4((uint64_t)v30, (uint64_t)v69 + *(int *)(v75 + 48), &qword_26880FC00);
  sub_2356948A0((uint64_t)&v103);
  sub_23566A3AC((uint64_t)v87, &qword_26880FC00);
  sub_23566A3AC((uint64_t)v30, &qword_26880FC00);
  v113[0] = v63;
  v113[1] = v42;
  _OWORD v113[2] = v43;
  v113[3] = v44;
  v113[4] = v45;
  v113[5] = v65;
  char v114 = (char)v85;
  uint64_t v115 = v64;
  char v116 = v86;
  uint64_t v117 = v67;
  uint64_t v118 = v66;
  uint64_t v119 = 0x4034000000000000;
  char v120 = 0;
  char v121 = v68;
  uint64_t v122 = v47;
  uint64_t v123 = v49;
  uint64_t v124 = v51;
  uint64_t v125 = v53;
  char v126 = v59;
  return sub_2356948CC((uint64_t)v113);
}

uint64_t sub_235693B60@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v145 = type metadata accessor for MFReaderTextFormatterView();
  MEMORY[0x270FA5388](v145, v4, v5, v6, v7);
  uint64_t v137 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC20);
  MEMORY[0x270FA5388](v146, v9, v10, v11, v12);
  uint64_t v148 = (uint64_t)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC28);
  uint64_t v18 = MEMORY[0x270FA5388](v147, v14, v15, v16, v17);
  uint64_t v169 = (uint64_t)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18, v20, v21, v22, v23);
  uint64_t v167 = (uint64_t)&v127 - v24;
  long long v25 = a1[1];
  long long v214 = *a1;
  v215[0] = v25;
  uint64_t v26 = *((void *)&v25 + 1);
  uint64_t v27 = *((void *)&v214 + 1);
  uint64_t KeyPath = swift_getKeyPath();
  sub_23569494C((uint64_t)v215);
  sub_23569494C((uint64_t)&v214);
  uint64_t v28 = type metadata accessor for MFReaderSpeechFormatterModel(0);
  uint64_t v29 = sub_235694978(&qword_26880FC30, (void (*)(uint64_t))type metadata accessor for MFReaderSpeechFormatterModel);
  uint64_t v182 = v26;
  uint64_t v30 = (char *)v28;
  uint64_t v31 = (void *)v29;
  uint64_t v32 = sub_235948878();
  uint64_t v172 = v33;
  uint64_t v173 = v32;
  uint64_t v34 = v27;
  uint64_t v35 = (void *)type metadata accessor for MFReaderTextFormatterModel(0);
  uint64_t v36 = sub_235694978(&qword_26880F9A8, (void (*)(uint64_t))type metadata accessor for MFReaderTextFormatterModel);
  uint64_t v37 = sub_235948878();
  uint64_t v170 = v38;
  uint64_t v171 = v37;
  type metadata accessor for MFReaderBlockManager();
  uint64_t v39 = sub_235694978((unint64_t *)&qword_26880FC38, (void (*)(uint64_t))type metadata accessor for MFReaderBlockManager);
  uint64_t v40 = sub_235948A18();
  uint64_t v165 = v41;
  uint64_t v166 = v40;
  uint64_t v139 = a1;
  uint64_t v42 = (void *)*((void *)a1 + 4);
  if (v42)
  {
    uint64_t v168 = *((void *)a1 + 4);
    id v181 = v42;
    uint64_t v164 = sub_235948458();
    int v163 = sub_235948FB8();
    sub_235948698();
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    unsigned __int8 v213 = 0;
    unsigned __int8 v210 = 0;
    LOBYTE(v185) = 0;
    sub_23569494C((uint64_t)v215);
    sub_23569494C((uint64_t)&v214);
    sub_235949458();
    int v141 = v192;
    uint64_t v162 = v193;
    id v176 = v31;
    uint64_t v143 = sub_235948878();
    uint64_t v161 = v51;
    id v175 = v35;
    uint64_t v142 = sub_235948878();
    uint64_t v160 = v52;
    uint64_t v144 = sub_235948A18();
    uint64_t v140 = v53;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v177 = v30;
    uint64_t v178 = v36;
    id v54 = v181;
    sub_2359484D8();

    swift_release();
    swift_release();
    BOOL v55 = v192 < 1;
    uint64_t v159 = swift_getKeyPath();
    uint64_t v157 = swift_allocObject();
    *(unsigned char *)(v157 + 16) = v55;
    id v56 = v54;
    uint64_t v155 = sub_235948458();
    sub_23569494C((uint64_t)v215);
    sub_23569494C((uint64_t)&v214);
    uint64_t v136 = sub_235948878();
    uint64_t v158 = v57;
    uint64_t v135 = sub_235948878();
    uint64_t v156 = v58;
    id v153 = (id)sub_235948A18();
    uint64_t v134 = v59;
    id v151 = v56;
    uint64_t v154 = sub_235948458();
    LOBYTE(v185) = 1;
    sub_23569494C((uint64_t)v215);
    sub_23569494C((uint64_t)&v214);
    sub_235949458();
    int v133 = v192;
    id v181 = v193;
    uint64_t v131 = sub_235948878();
    uint64_t v180 = v60;
    uint64_t v138 = v34;
    uint64_t v132 = sub_235948878();
    uint64_t v179 = v61;
    uint64_t v152 = v39;
    uint64_t v62 = sub_235948A18();
    uint64_t v130 = v63;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v64 = (char *)v151;
    sub_2359484D8();

    swift_release();
    swift_release();
    uint64_t v65 = v192;
    uint64_t v66 = &v64[OBJC_IVAR____TtC16MagnifierSupport20MFReaderBlockManager_blocks];
    swift_beginAccess();
    if (*(void *)v66 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v126 = sub_23594A998();
      swift_bridgeObjectRelease();
      uint64_t v68 = v126 - 1;
      if (!__OFSUB__(v126, 1)) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v67 = *(void *)((*(void *)v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v68 = v67 - 1;
      if (!__OFSUB__(v67, 1))
      {
LABEL_4:
        double v129 = (unsigned char *)(a2 + 256);
        BOOL v69 = v65 >= v68;
        id v151 = (id)swift_getKeyPath();
        uint64_t v150 = swift_allocObject();
        *(unsigned char *)(v150 + 16) = v69;
        uint64_t v128 = v64;
        uint64_t v149 = sub_235948458();
        long long v185 = v139[3];
        sub_23569494C((uint64_t)v215);
        sub_23569494C((uint64_t)&v214);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC40);
        sub_235949488();
        uint64_t v70 = v192;
        long long v71 = v193;
        char v72 = v194;
        uint64_t v73 = swift_getKeyPath();
        uint64_t v74 = v145;
        uint64_t v75 = *(int *)(v145 + 32);
        uint64_t v139 = (_OWORD *)v62;
        uint64_t v76 = (uint64_t)v137;
        *(void *)&v137[v75] = v73;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v76 = sub_235948878();
        *(void *)(v76 + 8) = v77;
        *(void *)(v76 + 16) = sub_235948878();
        *(void *)(v76 + 24) = v78;
        *(void *)(v76 + 32) = v70;
        *(void *)(v76 + 40) = v71;
        *(unsigned char *)(v76 + 48) = v72;
        *(void *)(v76 + 56) = sub_235948A18();
        *(void *)(v76 + 64) = v79;
        uint64_t v80 = v76 + *(int *)(v74 + 36);
        LOBYTE(v185) = 0;
        sub_235949458();
        uint64_t v81 = v193;
        *(unsigned char *)uint64_t v80 = v192;
        *(void *)(v80 + 8) = v81;
        uint64_t v82 = v76 + *(int *)(v74 + 40);
        LOBYTE(v185) = 0;
        sub_235949458();
        id v83 = v193;
        *(unsigned char *)uint64_t v82 = v192;
        *(void *)(v82 + 8) = v83;
        uint64_t v177 = v128;
        uint64_t v84 = sub_235948458();
        uint64_t v85 = v148;
        sub_235694A00(v76, v148);
        uint64_t v86 = (uint64_t *)(v85 + *(int *)(v146 + 36));
        uint64_t v87 = v168;
        uint64_t *v86 = v84;
        v86[1] = v87;
        uint64_t v88 = v87;
        sub_235694A64(v76);
        LOBYTE(v84) = sub_235948FD8();
        sub_235948698();
        uint64_t v90 = v89;
        uint64_t v92 = v91;
        uint64_t v94 = v93;
        uint64_t v96 = v95;
        uint64_t v97 = v169;
        sub_23566A2E4(v85, v169, &qword_26880FC20);
        uint64_t v98 = v97 + *(int *)(v147 + 36);
        *(unsigned char *)uint64_t v98 = v84;
        *(void *)(v98 + 8) = v90;
        *(void *)(v98 + 16) = v92;
        *(void *)(v98 + 24) = v94;
        *(void *)(v98 + 32) = v96;
        *(unsigned char *)(v98 + 40) = 0;
        sub_23566A3AC(v85, &qword_26880FC20);
        uint64_t v99 = v167;
        sub_23566A348(v97, v167, &qword_26880FC28);
        LOBYTE(v82) = v213;
        LODWORD(v178) = v213;
        v184[0] = *(_DWORD *)v212;
        *(_DWORD *)((char *)v184 + 3) = *(_DWORD *)&v212[3];
        v183[0] = *(_DWORD *)v211;
        *(_DWORD *)((char *)v183 + 3) = *(_DWORD *)&v211[3];
        LOBYTE(v84) = v210;
        LODWORD(v182) = v210;
        sub_23566A2E4(v99, v97, &qword_26880FC28);
        HIDWORD(v188) = *(_DWORD *)&v212[3];
        *(_DWORD *)((char *)&v188 + 9) = *(_DWORD *)v212;
        DWORD1(v190) = *(_DWORD *)&v211[3];
        *(_DWORD *)((char *)&v190 + 1) = *(_DWORD *)v211;
        *(unsigned char *)(a2 + 144) = v141;
        *(void *)&long long v185 = v173;
        *((void *)&v185 + 1) = v172;
        *(void *)&long long v186 = v171;
        *((void *)&v186 + 1) = v170;
        *(void *)&long long v187 = v166;
        *((void *)&v187 + 1) = v165;
        *(void *)&long long v188 = KeyPath;
        BYTE8(v188) = v82;
        *(void *)&long long v189 = v164;
        *((void *)&v189 + 1) = v88;
        LOBYTE(v190) = v163;
        *((void *)&v190 + 1) = v44;
        *(void *)&v191[0] = v46;
        *((void *)&v191[0] + 1) = v48;
        *(void *)&v191[1] = v50;
        BYTE8(v191[1]) = v84;
        long long v100 = v185;
        long long v101 = v186;
        long long v102 = v188;
        *(_OWORD *)(a2 + 32) = v187;
        *(_OWORD *)(a2 + 48) = v102;
        *(_OWORD *)a2 = v100;
        *(_OWORD *)(a2 + 16) = v101;
        long long v103 = v189;
        long long v104 = v190;
        long long v105 = v191[0];
        *(_OWORD *)(a2 + 105) = *(_OWORD *)((char *)v191 + 9);
        *(_OWORD *)(a2 + 80) = v104;
        *(_OWORD *)(a2 + 96) = v105;
        *(_OWORD *)(a2 + 64) = v103;
        *(void *)(a2 + 128) = 0;
        uint64_t v106 = v161;
        uint64_t v107 = v143;
        long long v108 = (void *)v144;
        *(void *)(a2 + 152) = v162;
        *(void *)(a2 + 160) = v107;
        *(unsigned char *)(a2 + 136) = 1;
        uint64_t v109 = v142;
        *(void *)(a2 + 168) = v106;
        *(void *)(a2 + 176) = v109;
        *(void *)(a2 + 184) = v160;
        *(void *)(a2 + 192) = v108;
        uint64_t v110 = v159;
        *(void *)(a2 + 200) = v140;
        *(void *)(a2 + 208) = v110;
        *(void *)(a2 + 264) = v136;
        *(void *)(a2 + 280) = v135;
        uint64_t v111 = v134;
        *(unsigned char *)(a2 + 344) = v133;
        uint64_t v112 = v131;
        *(void *)(a2 + 296) = v153;
        *(void *)(a2 + 304) = v111;
        *(void *)(a2 + 352) = v181;
        *(void *)(a2 + 360) = v112;
        uint64_t v113 = v157;
        uint64_t v114 = v158;
        *(void *)(a2 + 216) = sub_2356949E0;
        *(void *)(a2 + 224) = v113;
        uint64_t v115 = v156;
        *(void *)(a2 + 232) = v155;
        *(void *)(a2 + 240) = v88;
        *(void *)(a2 + 248) = 0;
        char v116 = v129;
        *double v129 = 1;
        *(void *)(a2 + 272) = v114;
        *(void *)(a2 + 288) = v115;
        *(void *)(a2 + 312) = v154;
        *(void *)(a2 + 320) = v88;
        uint64_t v117 = v88;
        *(void *)(a2 + 328) = 0;
        v116[80] = 1;
        *(void *)(a2 + 368) = v180;
        *(void *)(a2 + 376) = v132;
        uint64_t v118 = v139;
        *(void *)(a2 + 384) = v179;
        *(void *)(a2 + 392) = v118;
        uint64_t v120 = v150;
        id v119 = v151;
        *(void *)(a2 + 400) = v130;
        *(void *)(a2 + 408) = v119;
        v116[200] = 1;
        *(void *)(a2 + 416) = sub_235694C30;
        *(void *)(a2 + 424) = v120;
        *(void *)(a2 + 432) = v149;
        *(void *)(a2 + 440) = v117;
        *(void *)(a2 + 448) = 0;
        uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC48);
        sub_23566A2E4(v97, a2 + *(int *)(v121 + 160), &qword_26880FC28);
        sub_235694AC0((uint64_t)&v185);
        id v176 = v118;
        sub_2359470F8();
        sub_2359470F8();
        sub_2359470F8();
        uint64_t v122 = v177;
        sub_2359470F8();
        sub_2359470F8();
        sub_2359470F8();
        uint64_t v177 = v108;
        sub_2359470F8();
        sub_2359470F8();
        sub_2359470F8();
        uint64_t v123 = v122;
        sub_2359470F8();
        sub_2359470F8();
        id v175 = v153;
        sub_2359470F8();
        uint64_t v124 = v123;
        sub_2359470F8();
        sub_2359470F8();
        sub_2359470F8();
        sub_23566A3AC(v167, &qword_26880FC28);
        sub_23566A3AC(v169, &qword_26880FC28);
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        uint64_t v192 = v173;
        uint64_t v193 = v172;
        uint64_t v194 = v171;
        uint64_t v195 = v170;
        uint64_t v196 = v166;
        uint64_t v197 = v165;
        uint64_t v198 = KeyPath;
        char v199 = v178;
        *(_DWORD *)uint64_t v200 = v184[0];
        *(_DWORD *)&v200[3] = *(_DWORD *)((char *)v184 + 3);
        uint64_t v201 = v164;
        uint64_t v202 = v168;
        char v203 = v163;
        *(_DWORD *)uint64_t v204 = v183[0];
        *(_DWORD *)&v204[3] = *(_DWORD *)((char *)v183 + 3);
        uint64_t v205 = v44;
        uint64_t v206 = v46;
        uint64_t v207 = v48;
        uint64_t v208 = v50;
        char v209 = v182;
        return sub_235694B48((uint64_t)&v192);
      }
    }
    __break(1u);
  }
  uint64_t result = sub_235948A08();
  __break(1u);
  return result;
}

uint64_t sub_23569483C@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v7[0] = *v1;
  v7[1] = v3;
  long long v4 = v1[3];
  v7[2] = v1[2];
  v7[3] = v4;
  *(void *)a1 = sub_235948C78();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FBE0);
  return sub_23569358C(v7, a1 + *(int *)(v5 + 44));
}

uint64_t sub_2356948A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2356948CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2356948F8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_235948A78();
  *a1 = v3;
  return result;
}

uint64_t sub_235694924()
{
  return sub_235948A88();
}

uint64_t sub_23569494C(uint64_t a1)
{
  return a1;
}

uint64_t sub_235694978(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2356949D0()
{
  return swift_deallocObject();
}

unsigned char *sub_2356949E0(unsigned char *a1)
{
  return sub_2358B01C8(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_2356949E8()
{
  return swift_deallocObject();
}

uint64_t sub_235694A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MFReaderTextFormatterView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_235694A64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MFReaderTextFormatterView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235694AC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);
  uint64_t v4 = *(void **)(a1 + 72);
  id v5 = *(id *)(a1 + 32);
  sub_2359470F8();
  sub_2359470F8();
  sub_235694B3C(v2, v3);
  id v6 = v4;
  sub_2359470F8();
  return a1;
}

uint64_t sub_235694B3C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_2359470F8();
  }
  return result;
}

uint64_t sub_235694B48(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  id v5 = *(void **)(a1 + 72);
  swift_release();
  swift_release();

  sub_235694BC4(v3, v4);
  swift_release();

  return a1;
}

uint64_t sub_235694BC4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_235694BD4()
{
  unint64_t result = qword_26880FC50;
  if (!qword_26880FC50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26880FC58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FC50);
  }
  return result;
}

uint64_t sub_235694C34()
{
  uint64_t v1 = sub_2359496D8();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v7 = MEMORY[0x270FA5388](v1, v3, v4, v5, v6).n128_u64[0];
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_scene, v7);
    if (v11)
    {
      uint64_t v12 = v11;
      sub_2356C21DC(v11);
    }
  }
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  if (v40 == 1)
  {
    type metadata accessor for MAGUtilities();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v14 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v15 = (void *)sub_235949A88();
    uint64_t v16 = (void *)sub_235949A88();
    id v17 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, 0, v16);
    v38[0] = v2;
    uint64_t v18 = v1;
    id v19 = v17;

    uint64_t v20 = sub_235949AC8();
    uint64_t v22 = v21;

    uint64_t v40 = v20;
    uint64_t v41 = v22;
    sub_2356610AC();
    uint64_t v23 = sub_23594A638();
    uint64_t v25 = v24;
    id v26 = sub_23587FE44();
    id v27 = sub_23587EBA4();
    id v28 = sub_235926210();

    uint64_t v29 = v23;
    uint64_t v1 = v18;
    uint64_t v2 = v38[0];
    sub_23587CB9C(v29, v25, v26, v28);
    swift_bridgeObjectRelease();

    uint64_t v30 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    UIAccessibilitySpeakAndDoNotBeInterrupted();

    sub_2357A1B18();
  }
  uint64_t v31 = qword_26AF181E8 + 64;
  swift_beginAccess();
  char v39 = 1;
  if (qword_26AF144C0 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_2359496C8();
  MEMORY[0x270FA5388](v32, v33, v34, v35, v36);
  v38[-2] = &v39;
  v38[-1] = v31;
  sub_23594A298();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v1);
  return swift_endAccess();
}

id sub_235695020()
{
  uint64_t v0 = (int *)type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x270FA5388](v0, v1, v2, v3, v4);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = sub_23587EBA4();
  id result = objc_msgSend(v7, sel_view);
  if (result)
  {
    uint64_t v9 = result;
    objc_msgSend(result, sel_alpha);
    double v11 = v10;

    if (v11 == 0.0)
    {
      type metadata accessor for MAGUtilities();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v13 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      id v14 = (void *)sub_235949A88();
      uint64_t v15 = (void *)sub_235949A88();
      id v16 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, 0, v15);

      uint64_t v17 = sub_235949AC8();
      uint64_t v19 = v18;

      v28[0] = v17;
      v28[1] = v19;
      sub_2356610AC();
      uint64_t v20 = sub_23594A638();
      uint64_t v22 = v21;
      id v23 = sub_23587FE44();
      id v24 = sub_23587EBA4();
      id v25 = sub_235926210();

      sub_23587CB9C(v20, v22, v23, v25);
      swift_bridgeObjectRelease();

      id v26 = (void *)sub_235949A88();
      swift_bridgeObjectRelease();
      UIAccessibilitySpeakAndDoNotBeInterrupted();
    }
    id v27 = &v6[v0[5]];
    type metadata accessor for MAGOutputEvent.EventType(0);
    *(_OWORD *)id v27 = 0u;
    *((_OWORD *)v27 + 1) = 0u;
    *((_OWORD *)v27 + 2) = 0u;
    *((_OWORD *)v27 + 3) = 0u;
    *((_OWORD *)v27 + 4) = 0u;
    *((_OWORD *)v27 + 5) = 0u;
    *((void *)v27 + 12) = 0;
    swift_storeEnumTagMultiPayload();
    sub_235947968();
    v6[v0[6]] = 1;
    v6[v0[7]] = 0;
    sub_235741600((uint64_t)v6);
    sub_235697014((uint64_t)v6);
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (LOBYTE(v28[0]) == 1) {
      sub_2357A1B18();
    }
    return (id)sub_2356C2994();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_235695378(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  *(void *)&double v9 = MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8).n128_u64[0];
  double v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(char **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_objectUnderstandingService);
  id v13 = *(void **)&v12[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession];
  if (v13) {
    objc_msgSend(v13, sel_updateWithFrame_, a2, v9);
  }
  uint64_t v14 = sub_235949EA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  id v15 = objc_msgSend(a2, sel_camera);
  objc_msgSend(v15, sel_transform);
  long long v29 = v17;
  long long v30 = v16;
  long long v27 = v19;
  long long v28 = v18;

  sub_235949E78();
  uint64_t v20 = v12;
  uint64_t v21 = sub_235949E68();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = MEMORY[0x263F8F500];
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v23;
  *(void *)(v22 + 32) = v20;
  long long v24 = v29;
  *(_OWORD *)(v22 + 48) = v30;
  *(_OWORD *)(v22 + 64) = v24;
  long long v25 = v27;
  *(_OWORD *)(v22 + 80) = v28;
  *(_OWORD *)(v22 + 96) = v25;
  sub_2356C0210((uint64_t)v11, (uint64_t)&unk_268810330, v22);
  return swift_release();
}

uint64_t sub_235695514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 112) = a4;
  return MEMORY[0x270FA2498](sub_235695534, 0, 0);
}

uint64_t sub_235695534()
{
  *(void *)(v0 + 120) = sub_235949E78();
  *(void *)(v0 + 128) = sub_235949E68();
  uint64_t v2 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_2356955CC, v2, v1);
}

uint64_t sub_2356955CC()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_release();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectedObjectView);
  *(void *)(v0 + 136) = v2;
  id v3 = v2;
  return MEMORY[0x270FA2498](sub_235695654, 0, 0);
}

uint64_t sub_235695654()
{
  if (v0[17])
  {
    v0[18] = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService;
    v0[19] = sub_235949E68();
    uint64_t v2 = sub_235949E28();
    return MEMORY[0x270FA2498](sub_235695728, v2, v1);
  }
  else
  {
    id v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_235695728()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  swift_release();
  v0[20] = *(void *)(v2 + v1);
  return MEMORY[0x270FA2498](sub_23569579C, 0, 0);
}

uint64_t sub_23569579C()
{
  uint64_t v1 = (id *)(*(void *)(v0 + 160) + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  if (*v1
    && (id v2 = objc_msgSend(*v1, sel_currentFrame), (*(void *)(v0 + 168) = v2) != 0))
  {
    *(void *)(v0 + 176) = sub_235949E68();
    uint64_t v4 = sub_235949E28();
    return MEMORY[0x270FA2498](sub_2356958AC, v4, v3);
  }
  else
  {

    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_2356958AC()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_release();
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  *(void *)(v0 + 184) = v2;
  id v3 = v2;
  return MEMORY[0x270FA2498](sub_235695934, 0, 0);
}

uint64_t sub_235695934()
{
  if (*(void *)(v0 + 184))
  {
    *(void *)(v0 + 192) = sub_235949E68();
    uint64_t v2 = sub_235949E28();
    return MEMORY[0x270FA2498](sub_235695A08, v2, v1);
  }
  else
  {
    id v3 = *(void **)(v0 + 136);

    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_235695A08()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();
  *(void *)(v0 + 200) = objc_msgSend(v1, sel_pointOfView);

  return MEMORY[0x270FA2498](sub_235695A90, 0, 0);
}

uint64_t sub_235695A90()
{
  uint64_t v1 = *(void **)(v0 + 200);
  if (v1)
  {
    objc_msgSend(*(id *)(v0 + 200), sel_simdPosition);
    *(_DWORD *)(v0 + 24) = v2;
    *(void *)(v0 + 16) = v3;

    *(void *)(v0 + 208) = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_objectUnderstandingService;
    *(void *)(v0 + 216) = sub_235949E68();
    uint64_t v5 = sub_235949E28();
    return MEMORY[0x270FA2498](sub_235695B94, v5, v4);
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 136);

    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_235695B94()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[14];
  swift_release();
  v0[28] = *(void *)(v2 + v1);
  return MEMORY[0x270FA2498](sub_235695C08, 0, 0);
}

uint64_t sub_235695C08()
{
  uint64_t v1 = *(void *)(v0 + 224) + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject;
  if (*(void *)v1)
  {
    float32x4_t v16 = *(float32x4_t *)(v1 + 16);
    float32x4_t v15 = *(float32x4_t *)(v1 + 32);
    float32x4_t v14 = *(float32x4_t *)(v1 + 48);
    float32x4_t v13 = *(float32x4_t *)(v1 + 64);
    id v2 = *(id *)v1;
    objc_msgSend(v2, sel_transform);
    float32x4_t v12 = v3;

    float32x4_t v4 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v16, v12.f32[0]), v15, *(float32x2_t *)v12.f32, 1), v14, v12, 2), v13, v12, 3);
    *(float32x4_t *)(v0 + 32) = v4;
    v4.i32[3] = 0;
    *(float32x4_t *)(v0 + 48) = v4;
    *(void *)(v0 + 232) = sub_235949E68();
    uint64_t v5 = sub_235949E28();
    uint64_t v7 = v6;
    uint64_t v8 = sub_235695D90;
  }
  else
  {
    long long v9 = *(_OWORD *)(MEMORY[0x263F001A0] + 16);
    *(_OWORD *)(v0 + 344) = *MEMORY[0x263F001A0];
    *(_OWORD *)(v0 + 360) = v9;
    *(void *)(v0 + 376) = sub_235949E68();
    uint64_t v5 = sub_235949E28();
    uint64_t v7 = v10;
    uint64_t v8 = sub_235696840;
  }
  return MEMORY[0x270FA2498](v8, v5, v7);
}

uint64_t sub_235695D90()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_235695DF8, 0, 0);
}

uint64_t sub_235695DF8()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 224) + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene);
  if (!v1) {
    goto LABEL_5;
  }
  id v2 = objc_msgSend(v1, sel_rootNode);
  if (!v2) {
    goto LABEL_5;
  }
  float32x4_t v3 = v2;
  long long v14 = *(_OWORD *)(v0 + 48);
  float32x4_t v4 = (id *)(*(void *)(v0 + 224)
            + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  id v5 = *v4;
  objc_msgSend(v3, sel_simdConvertPosition_toNode_, v5, *(double *)&v14);
  DWORD2(v14) = v6;

  if (*((float *)&v14 + 2) < 0.0)
  {
    *(void *)(v0 + 240) = sub_235949E68();
    uint64_t v7 = sub_235949E28();
    uint64_t v9 = v8;
    uint64_t v10 = sub_235695F80;
  }
  else
  {
LABEL_5:
    long long v11 = *(_OWORD *)(MEMORY[0x263F001A0] + 16);
    *(_OWORD *)(v0 + 344) = *MEMORY[0x263F001A0];
    *(_OWORD *)(v0 + 360) = v11;
    *(void *)(v0 + 376) = sub_235949E68();
    uint64_t v7 = sub_235949E28();
    uint64_t v9 = v12;
    uint64_t v10 = sub_235696840;
  }
  return MEMORY[0x270FA2498](v10, v7, v9);
}

uint64_t sub_235695F80()
{
  uint64_t v1 = *(void **)(v0 + 112);
  swift_release();
  *(void *)(v0 + 248) = objc_msgSend(v1, sel_view);
  return MEMORY[0x270FA2498](sub_235696008, 0, 0);
}

uint64_t sub_235696008(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  if (*(void *)(v3 + 248))
  {
    *(void *)(v3 + 256) = sub_235949E68();
    uint64_t v4 = sub_235949E28();
    uint64_t v6 = v5;
    a1 = sub_2356960A0;
    a2 = v4;
    a3 = v6;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](a1, a2, a3);
}

uint64_t sub_2356960A0()
{
  uint64_t v1 = *(void **)(v0 + 248);
  swift_release();
  id v2 = objc_msgSend(v1, sel_window);
  id v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_windowScene);

    uint64_t v5 = *(void **)(v0 + 248);
    if (v4)
    {
      id v3 = objc_msgSend(v4, sel_interfaceOrientation);

      uint64_t v5 = v4;
    }
    else
    {
      id v3 = 0;
    }
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + 248);
  }
  *(void *)(v0 + 264) = v3;

  return MEMORY[0x270FA2498](sub_23569618C, 0, 0);
}

uint64_t sub_23569618C()
{
  uint64_t v1 = *(void **)(v0 + 168);
  BOOL IsLandscape = UIInterfaceOrientationIsLandscape(*(void *)(v0 + 264));
  id v3 = (__CVBuffer *)objc_msgSend(v1, sel_capturedImage);
  id v4 = v3;
  if (IsLandscape) {
    size_t Width = CVPixelBufferGetWidth(v3);
  }
  else {
    size_t Width = CVPixelBufferGetHeight(v3);
  }
  uint64_t v6 = Width;
  *(void *)(v0 + 272) = Width;
  uint64_t v7 = *(void *)(v0 + 264);
  uint64_t v8 = *(void **)(v0 + 168);

  LODWORD(v7) = UIInterfaceOrientationIsLandscape(v7);
  uint64_t v9 = (__CVBuffer *)objc_msgSend(v8, sel_capturedImage);
  uint64_t v10 = v9;
  if (v7) {
    size_t Height = CVPixelBufferGetHeight(v9);
  }
  else {
    size_t Height = CVPixelBufferGetWidth(v9);
  }
  uint64_t v12 = Height;
  *(void *)(v0 + 280) = Height;
  uint64_t v13 = *(void *)(v0 + 264);
  long long v24 = *(_OWORD *)(v0 + 48);
  long long v14 = *(void **)(v0 + 168);

  double v15 = (double)v6;
  id v16 = objc_msgSend(v14, sel_camera);
  objc_msgSend(v16, sel_projectPoint_orientation_viewportSize_, v13, *(double *)&v24, v15, (double)v12);
  uint64_t v18 = v17;
  uint64_t v20 = v19;

  *(void *)(v0 + 288) = v18;
  *(void *)(v0 + 296) = v20;
  *(void *)(v0 + 304) = sub_235949E68();
  uint64_t v22 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_235696328, v22, v21);
}

uint64_t sub_235696328()
{
  uint64_t v1 = *(void **)(v0 + 112);
  swift_release();
  *(void *)(v0 + 312) = objc_msgSend(v1, sel_view);
  return MEMORY[0x270FA2498](sub_2356963B0, 0, 0);
}

uint64_t sub_2356963B0(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  if (*(void *)(v3 + 312))
  {
    *(void *)(v3 + 320) = sub_235949E68();
    uint64_t v4 = sub_235949E28();
    uint64_t v6 = v5;
    a1 = sub_235696448;
    a2 = v4;
    a3 = v6;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](a1, a2, a3);
}

uint64_t sub_235696448()
{
  uint64_t v1 = *(void **)(v0 + 312);
  swift_release();
  id v2 = objc_msgSend(v1, sel_window);
  id v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_windowScene);

    uint64_t v5 = *(void **)(v0 + 312);
    if (v4)
    {
      id v3 = objc_msgSend(v4, sel_interfaceOrientation);

      uint64_t v5 = v4;
    }
    else
    {
      id v3 = 0;
    }
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + 312);
  }
  *(void *)(v0 + 328) = v3;

  return MEMORY[0x270FA2498](sub_235696534, 0, 0);
}

uint64_t sub_235696534(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  float32x4_t v4 = vsubq_f32(v3[1], v3[2]);
  float32x4_t v5 = vmulq_f32(v4, v4);
  v5.f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 2), vaddq_f32(v5, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 1))).f32[0]);
  v3[26].i32[0] = v5.i32[0];
  float v6 = v5.f32[0] * 1000.0;
  if ((~LODWORD(v6) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v6 <= -2147500000.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v6 >= 2147500000.0)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  v3[21].i64[0] = sub_235949E68();
  uint64_t v7 = sub_235949E28();
  uint64_t v9 = v8;
  a1 = sub_23569662C;
  a2 = v7;
  a3 = v9;
  return MEMORY[0x270FA2498](a1, a2, a3);
}

uint64_t sub_23569662C()
{
  float v1 = *(float *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 328);
  double v4 = *(double *)(v0 + 288);
  double v3 = *(double *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 280);
  swift_release();
  *(unsigned char *)(v0 + 420) = sub_235861330(v2, (int)(float)(v1 * 1000.0), v3 / (double)v5, ((double)v6 - v4) / (double)v6, 0.001, 0.001) & 1;
  return MEMORY[0x270FA2498](sub_2356966FC, 0, 0);
}

uint64_t sub_2356966FC()
{
  if (*(unsigned char *)(v0 + 420) == 1)
  {
    float v1 = *(NSObject **)(v0 + 168);
    uint64_t v2 = *(void **)(v0 + 136);
  }
  else
  {
    if (qword_26880E440 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_235948278();
    __swift_project_value_buffer(v3, (uint64_t)qword_26880F848);
    float v1 = sub_235948258();
    os_log_type_t v4 = sub_23594A158();
    BOOL v5 = os_log_type_enabled(v1, v4);
    uint64_t v6 = *(void **)(v0 + 168);
    uint64_t v2 = *(void **)(v0 + 136);
    if (v5)
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_235640000, v1, v4, "Unable to update OU interface", v7, 2u);
      MEMORY[0x237DE9F30](v7, -1, -1);
    }
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_235696840()
{
  float v1 = *(void **)(v0 + 112);
  swift_release();
  *(void *)(v0 + 384) = objc_msgSend(v1, sel_view);
  return MEMORY[0x270FA2498](sub_2356968C8, 0, 0);
}

uint64_t sub_2356968C8(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  if (*(void *)(v3 + 384))
  {
    *(void *)(v3 + 392) = sub_235949E68();
    uint64_t v4 = sub_235949E28();
    uint64_t v6 = v5;
    a1 = sub_235696960;
    a2 = v4;
    a3 = v6;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](a1, a2, a3);
}

uint64_t sub_235696960()
{
  float v1 = *(void **)(v0 + 384);
  swift_release();
  id v2 = objc_msgSend(v1, sel_window);
  id v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_windowScene);

    uint64_t v5 = *(void **)(v0 + 384);
    if (v4)
    {
      id v3 = objc_msgSend(v4, sel_interfaceOrientation);

      uint64_t v5 = v4;
    }
    else
    {
      id v3 = 0;
    }
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + 384);
  }
  *(void *)(v0 + 400) = v3;

  return MEMORY[0x270FA2498](sub_235696A4C, 0, 0);
}

uint64_t sub_235696A4C()
{
  *(void *)(v0 + 408) = sub_235949E68();
  uint64_t v2 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_235696AD8, v2, v1);
}

uint64_t sub_235696AD8()
{
  uint64_t v1 = *((void *)v0 + 50);
  CGFloat v3 = v0[45];
  CGFloat v2 = v0[46];
  CGFloat v5 = v0[43];
  CGFloat v4 = v0[44];
  swift_release();
  sub_235861330(v1, 0, v5, v4, v3, v2);
  return MEMORY[0x270FA2498](sub_235696B78, 0, 0);
}

uint64_t sub_235696B78()
{
  uint64_t v1 = *(void **)(v0 + 136);

  CGFloat v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_235696BE0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_objectUnderstandingService);
  uint64_t v4 = (id *)(*(void *)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_arService)
            + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  if (*v4)
  {
    id v5 = objc_msgSend(*v4, sel_currentFrame);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession);
      if (v7)
      {
        id v8 = v7;
        swift_bridgeObjectRetain();
        if (a2 >> 62)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880FCE0);
          sub_23594A978();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_23594AB98();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880FCE0);
        uint64_t v9 = (void *)sub_235949D58();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_updateWithKeyframes_ouframe_, v9, v6);
      }
    }
  }
}

id sub_235696D34(uint64_t a1, uint64_t a2)
{
  id v5 = (int *)type metadata accessor for MAGOutputEvent(0);
  *(void *)&double v10 = MEMORY[0x270FA5388](v5, v6, v7, v8, v9).n128_u64[0];
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = *(id *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  if (result)
  {
    long long v14 = *(void **)a1;
    uint64_t v16 = *(void *)(a1 + 16);
    uint64_t v15 = *(void *)(a1 + 24);
    uint64_t v17 = *(void *)(a1 + 32);
    uint64_t v32 = *(void *)(a1 + 40);
    uint64_t v33 = v15;
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v20 = *(void *)(a1 + 64);
    uint64_t v30 = *(void *)(a1 + 72);
    uint64_t v31 = v18;
    id result = objc_msgSend(result, sel_pointOfView, v10);
    if (result)
    {
      uint64_t v21 = result;
      objc_msgSend(result, sel_simdPosition);
      long long v29 = v22;

      uint64_t v23 = &v12[v5[5]];
      *(void *)uint64_t v23 = v14;
      *((void *)v23 + 1) = 0;
      uint64_t v24 = v33;
      *((void *)v23 + 2) = v16;
      *((void *)v23 + 3) = v24;
      uint64_t v25 = v32;
      *((void *)v23 + 4) = v17;
      *((void *)v23 + 5) = v25;
      uint64_t v26 = v31;
      *((void *)v23 + 6) = v19;
      *((void *)v23 + 7) = v26;
      uint64_t v27 = v30;
      *((void *)v23 + 8) = v20;
      *((void *)v23 + 9) = v27;
      *((_OWORD *)v23 + 5) = v29;
      *((void *)v23 + 12) = a2;
      type metadata accessor for MAGOutputEvent.EventType(0);
      swift_storeEnumTagMultiPayload();
      id v28 = v14;
      swift_bridgeObjectRetain();
      sub_235947968();
      v12[v5[6]] = 1;
      v12[v5[7]] = 0;
      sub_235741600((uint64_t)v12);
      return (id)sub_235697014((uint64_t)v12);
    }
  }
  return result;
}

id sub_235696EC4(uint64_t a1, uint64_t a2)
{
  id v5 = (int *)type metadata accessor for MAGOutputEvent(0);
  *(void *)&double v10 = MEMORY[0x270FA5388](v5, v6, v7, v8, v9).n128_u64[0];
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = *(id *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  if (result)
  {
    id result = objc_msgSend(result, sel_pointOfView, v10);
    if (result)
    {
      long long v14 = result;
      objc_msgSend(result, sel_simdPosition);
      long long v17 = v15;

      uint64_t v16 = &v12[v5[5]];
      *(void *)uint64_t v16 = a1;
      *((_OWORD *)v16 + 1) = v17;
      *((void *)v16 + 4) = a2;
      type metadata accessor for MAGOutputEvent.EventType(0);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_235947968();
      v12[v5[6]] = 1;
      v12[v5[7]] = 0;
      sub_235741600((uint64_t)v12);
      return (id)sub_235697014((uint64_t)v12);
    }
  }
  return result;
}

uint64_t sub_235697014(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MAGOutputEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235697070(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  uint64_t v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2359496D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_235949738();
  uint64_t v17 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService]
                 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSessionQueue);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v1;
  *(void *)(v25 + 24) = a1;
  aBlock[4] = sub_235697424;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2357A194C;
  void aBlock[3] = &block_descriptor_7;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v24;
  id v28 = v1;
  id v29 = a1;
  sub_235949708();
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_23565C0A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_23565C0F8();
  sub_23594A6C8();
  MEMORY[0x237DE8250](0, v23, v16, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v36);
  swift_release();
  uint64_t v30 = sub_235949EA8();
  uint64_t v31 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v37, 1, 1, v30);
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = 0;
  v32[3] = 0;
  v32[4] = v28;
  uint64_t v33 = v28;
  sub_2356C12D8(v31, (uint64_t)&unk_26880FC70, (uint64_t)v32);
  swift_release();
  return sub_235697530(v31);
}

uint64_t sub_2356973E4()
{
  return swift_deallocObject();
}

uint64_t sub_235697424()
{
  return sub_235695378(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_235697444()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_235697484()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_23566A050;
  v3[14] = v2;
  return MEMORY[0x270FA2498](sub_235695534, 0, 0);
}

uint64_t sub_235697530(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235697590()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2356975D0(uint64_t a1)
{
  uint64_t v3 = sub_2359496D8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_235949738();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13, v14, v15, v16);
  uint64_t v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService]
                 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSessionQueue);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v1;
  *(void *)(v20 + 24) = a1;
  aBlock[4] = sub_2356978A4;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2357A194C;
  void aBlock[3] = &block_descriptor_16;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = v19;
  uint64_t v23 = v1;
  swift_bridgeObjectRetain();
  sub_235949708();
  v25[1] = MEMORY[0x263F8EE78];
  sub_23565C0A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_23565C0F8();
  sub_23594A6C8();
  MEMORY[0x237DE8250](0, v18, v10, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  return swift_release();
}

uint64_t sub_235697864()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2356978A4()
{
  sub_235696BE0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

double sub_2356978B4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
  objc_msgSend(v1, sel_contentOffset);
  double v3 = v2;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config);
  uint64_t v5 = *(double (***)(void, void))(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8);
  double v6 = v5[3](v4, v5);
  sub_235697C88();
  double v8 = v7;
  double v9 = v5[6](v4, v5);
  if (v8 <= v9) {
    double v8 = v9;
  }
  double v10 = v5[7](v4, v5);
  if (v10 >= v8) {
    double v10 = v8;
  }
  double v11 = v3 + (v6 + v10) * 0.5;
  objc_msgSend(v1, sel_frame);
  objc_msgSend(v1, sel_contentOffset);
  return v11;
}

uint64_t sub_2356979D8()
{
  uint64_t v1 = sub_2359496D8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3, v4, v5, v6);
  double v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_235949738();
  uint64_t v9 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
  uint64_t v16 = (void *)sub_23594A288();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v0;
  aBlock[4] = sub_23569DFC8;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2357A194C;
  void aBlock[3] = &block_descriptor_50;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v0;
  swift_release();
  sub_235949708();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23565C0A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_2356595F4((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
  sub_23594A6C8();
  MEMORY[0x237DE8250](0, v15, v8, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v22);
}

void sub_235697C88()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
  swift_beginAccess();
  if (!(*(void *)v1 >> 62))
  {
    uint64_t v2 = *(void *)((*(void *)v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v3 = v2 - 1;
    if (!__OFSUB__(v2, 1)) {
      goto LABEL_3;
    }
LABEL_11:
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
    sub_23594A998();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_23594A998();
  swift_bridgeObjectRelease();
  uint64_t v3 = v5 - 1;
  if (__OFSUB__(v5, 1)) {
    goto LABEL_11;
  }
LABEL_3:
  if (v3 < 1) {
    return;
  }
  objc_msgSend(v0, sel_bounds);
  if (*(void *)v1 >> 62) {
    goto LABEL_12;
  }
LABEL_5:
  (*(void (**)(void))(*(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8] + 24))();
  unint64_t v4 = *(void *)v1;
  if (!(v4 >> 62))
  {
    if (!__OFSUB__(*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10), 1)) {
      return;
    }
LABEL_15:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_23594A998();
  swift_bridgeObjectRelease();
  if (__OFSUB__(v6, 1)) {
    goto LABEL_15;
  }
}

double sub_235697E20()
{
  objc_msgSend(v0, sel_bounds);
  unint64_t v4 = (unint64_t *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
  swift_beginAccess();
  unint64_t v5 = *v4;
  if (!(*v4 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 - 1;
    if (!__OFSUB__(v6, 1)) {
      goto LABEL_3;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_23594A998();
  swift_bridgeObjectRelease();
  uint64_t v7 = v14 - 1;
  if (__OFSUB__(v14, 1)) {
    goto LABEL_13;
  }
LABEL_3:
  sub_235697C88();
  double v1 = v8;
  uint64_t v9 = &v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
  uint64_t v0 = *(char **)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
  unint64_t v5 = *((void *)v9 + 1);
  double v2 = (*(double (**)(char *, unint64_t))(v5 + 48))(v0, v5);
  double v3 = (*(double (**)(char *, unint64_t))(v5 + 56))(v0, v5);
  unint64_t v10 = *v4;
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_5;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_23594A998();
  swift_bridgeObjectRelease();
LABEL_5:
  if (v1 > v2) {
    double v12 = v1;
  }
  else {
    double v12 = v2;
  }
  if (v3 < v12) {
    double v12 = v3;
  }
  return v12 * (double)v7 + (*(double (**)(char *, unint64_t))(v5 + 24))(v0, v5) * (double)v11;
}

id sub_235697FC4()
{
  uint64_t v1 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox;
  double v2 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox);
  }
  else
  {
    id v4 = sub_235698024();
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    double v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_235698024()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v1 = objc_msgSend(v0, sel_layer);
  if (qword_26AF140E8 != -1) {
    swift_once();
  }
  objc_msgSend(v1, sel_setCornerRadius_, *(double *)&qword_26AF18220);

  id v2 = objc_msgSend(v0, sel_layer);
  if (qword_26AF140E0 != -1) {
    swift_once();
  }
  objc_msgSend(v2, sel_setCornerCurve_, qword_26AF18218);

  id v3 = objc_msgSend(v0, sel_layer);
  if (qword_26AF140D0 != -1) {
    swift_once();
  }
  objc_msgSend(v3, sel_setBorderWidth_, *(double *)&qword_26AF18210);

  id v4 = objc_msgSend(v0, sel_layer);
  id v5 = objc_msgSend(self, sel_systemWhiteColor);
  id v6 = objc_msgSend(v5, sel_CGColor);

  objc_msgSend(v4, sel_setBorderColor_, v6);
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  return v0;
}

id sub_23569822C(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = &v4[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
  *(void *)uint64_t v11 = &type metadata for LayoutConstants.FilterRow;
  *((void *)v11 + 1) = &off_26E8C3B00;
  uint64_t v12 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView;
  id v13 = objc_allocWithZone(MEMORY[0x263F82B88]);
  uint64_t v14 = v4;
  *(void *)&v5[v12] = objc_msgSend(v13, sel_init);
  v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_shouldHighlight] = 0;
  uint64_t v15 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView;
  *(void *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_subscribers] = MEMORY[0x263F8EE88];
  *(void *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons] = MEMORY[0x263F8EE78];
  uint64_t v16 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_feedbackGenerator;
  id v17 = objc_msgSend(self, sel_lightConfiguration);
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BC0]), sel_initWithConfiguration_, v17);

  objc_msgSend(v18, sel__setOutputMode_, 5);
  *(void *)&v14[v16] = v18;
  *(void *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox] = 0;
  *(void *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___activeItemIndicator] = 0;

  v25.receiver = v14;
  v25.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v20 = self;
  id v21 = v19;
  id v22 = objc_msgSend(v20, sel_clearColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  sub_2356984F8();
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  sub_2356986C8(v24);
  swift_bridgeObjectRelease();
  sub_235698D98();
  sub_235699188();

  return v21;
}

void sub_2356984F8()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView];
  objc_msgSend(v1, sel_setClipsToBounds_, 0);
  id v2 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView];
  objc_msgSend(v2, sel_setClipsToBounds_, 0);
  objc_msgSend(v2, sel_setContentInsetAdjustmentBehavior_, 2);
  objc_msgSend(v2, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v2, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(v2, sel_setDecelerationRate_, *MEMORY[0x263F83970]);
  objc_msgSend(v2, sel_setDelegate_, v0);
  objc_msgSend(v2, sel_setBounces_, 1);
  objc_msgSend(v2, sel_setBouncesVertically_, 0);
  objc_msgSend(v2, sel_setBouncesHorizontally_, 1);
  objc_msgSend(v2, sel_setAlwaysBounceHorizontal_, 1);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_initWithTarget_action_, v0, sel_didTapScrollView_);
  objc_msgSend(v3, sel_setNumberOfTapsRequired_, 1);
  objc_msgSend(v2, sel_addGestureRecognizer_, v3);
  objc_msgSend(v0, sel_addSubview_, v1);
  objc_msgSend(v1, sel_addSubview_, v2);
  id v4 = sub_235697FC4();
  objc_msgSend(v0, sel_addSubview_, v4);
}

void sub_2356986C8(uint64_t a1)
{
  uint64_t v54 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF12EB0);
  uint64_t v8 = MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  unint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v49 - v15;
  id v17 = (void *)sub_2359477E8();
  uint64_t v53 = (char *)*(v17 - 1);
  uint64_t v22 = MEMORY[0x270FA5388](v17, v18, v19, v20, v21);
  uint64_t v50 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22, v24, v25, v26, v27);
  id v29 = (char *)&v49 - v28;
  uint64_t v30 = v1;
  uint64_t v31 = (unint64_t *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
  swift_beginAccess();
  unint64_t v32 = *v31;
  unint64_t v33 = *v31 >> 62;
  uint64_t v51 = v10;
  uint64_t v52 = v17;
  if (v33)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v34 = sub_23594A998();
    if (v34) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v34)
    {
LABEL_3:
      if (v34 < 1)
      {
        __break(1u);
        goto LABEL_40;
      }
      for (uint64_t i = 0; i != v34; ++i)
      {
        if ((v32 & 0xC000000000000001) != 0) {
          id v36 = (id)MEMORY[0x237DE87D0](i, v32);
        }
        else {
          id v36 = *(id *)(v32 + 8 * i + 32);
        }
        uint64_t v37 = v36;
        objc_msgSend(v36, sel_removeFromSuperview);
      }
    }
  }
  swift_bridgeObjectRelease_n();
  unint64_t *v31 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  uint64_t v34 = (uint64_t)v30;
  sub_2356979D8();
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  id v17 = &unk_26AF18000;
  swift_getKeyPath();
  uint64_t KeyPath = (unsigned int (*)(char *, uint64_t, void *))swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  uint64_t v30 = v53;
  if ((v55 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (v55)
    {
      uint64_t v41 = 0;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359484D8();
      swift_release();
      swift_release();
      uint64_t v41 = v55;
    }
    goto LABEL_29;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359470F8();
  sub_2359484D8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t KeyPath = (unsigned int (*)(char *, uint64_t, void *))*((void *)v30 + 6);
  id v17 = v52;
  if (KeyPath(v16, 1, v52) != 1)
  {
    (*((void (**)(char *, char *, void *))v30 + 4))(v29, v16, v17);
    if (qword_26880E610 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_2356F9B6C((uint64_t)v29);
    (*((void (**)(char *, void *))v30 + 1))(v29, v17);
    goto LABEL_29;
  }
  sub_23569DF30((uint64_t)v16);
  if (qword_26880E608 != -1) {
    goto LABEL_41;
  }
  while (1)
  {
    uint64_t v38 = sub_2356F60A0();
    uint64_t v39 = (uint64_t)v51;
    if (*((void *)v38 + 2))
    {
      (*((void (**)(char *, char *, void *))v30 + 2))(v51, &v38[(v30[80] + 32) & ~(unint64_t)v30[80]], v17);
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
    }
    (*((void (**)(uint64_t, uint64_t, uint64_t, void *))v30 + 7))(v39, v40, 1, v17);
    swift_bridgeObjectRelease();
    if (KeyPath((char *)v39, 1, v17) == 1)
    {
      sub_23569DF30(v39);
      uint64_t v41 = 0;
    }
    else
    {
      uint64_t v42 = (uint64_t)v50;
      (*((void (**)(char *, uint64_t, void *))v30 + 4))(v50, v39, v17);
      if (qword_26880E610 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_2356F9B6C(v42);
      (*((void (**)(uint64_t, void *))v30 + 1))(v42, v17);
    }
LABEL_29:
    uint64_t v30 = v41;
    unint64_t v43 = sub_23569D680(v54, (uint64_t)v41);

    if (v43 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_23594A998();
      if (!v44) {
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v44) {
        goto LABEL_38;
      }
    }
    if (v44 >= 1) {
      break;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    swift_once();
  }
  uint64_t v45 = 0;
  uint64_t v46 = *(void **)(v34 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
  do
  {
    if ((v43 & 0xC000000000000001) != 0) {
      id v47 = (id)MEMORY[0x237DE87D0](v45, v43);
    }
    else {
      id v47 = *(id *)(v43 + 8 * v45 + 32);
    }
    uint64_t v48 = v47;
    ++v45;
    objc_msgSend(v46, sel_addSubview_, v47);
  }
  while (v44 != v45);
LABEL_38:
  swift_bridgeObjectRelease();
  unint64_t *v31 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2356979D8();
  swift_bridgeObjectRelease();
}

void sub_235698D98()
{
  id v1 = v0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v2 = sub_235697FC4();
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  sub_23592C7F4(v1, *MEMORY[0x263F834E8], *(double *)(MEMORY[0x263F834E8] + 8), *(double *)(MEMORY[0x263F834E8] + 16), *(double *)(MEMORY[0x263F834E8] + 24));
  swift_bridgeObjectRelease();
  id v3 = sub_235697FC4();
  id v4 = objc_msgSend(v3, sel_leftAnchor);

  id v5 = objc_msgSend(v1, sel_leftAnchor);
  if (qword_26AF14180 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_26AF18280;
  if (qword_26AF14190 != -1) {
    swift_once();
  }
  double v7 = v6 + *(double *)&qword_26AF18288;
  if (qword_26AF140D0 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, v7 + *(double *)&qword_26AF18210 - *(double *)&qword_26AF18210);

  uint64_t v9 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint;
  unint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint];
  *(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint] = v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_235954290;
  uint64_t v12 = *(void **)&v1[v9];
  if (v12)
  {
    uint64_t v13 = (void *)v11;
    uint64_t v28 = self;
    v13[4] = v12;
    id v14 = v12;
    id v15 = sub_235697FC4();
    id v16 = objc_msgSend(v15, sel_centerYAnchor);

    id v17 = objc_msgSend(v1, sel_centerYAnchor);
    id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

    v13[5] = v18;
    id v19 = sub_235697FC4();
    id v20 = objc_msgSend(v19, sel_widthAnchor);

    uint64_t v21 = *(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
    uint64_t v22 = *(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8];
    uint64_t v23 = *(double (**)(uint64_t, uint64_t))(v22 + 24);
    id v24 = objc_msgSend(v20, sel_constraintEqualToConstant_, v23(v21, v22) + *(double *)&qword_26AF18210 + *(double *)&qword_26AF18210);

    v13[6] = v24;
    id v25 = sub_235697FC4();
    id v26 = objc_msgSend(v25, sel_heightAnchor);

    id v27 = objc_msgSend(v26, sel_constraintEqualToConstant_, v23(v21, v22) + *(double *)&qword_26AF18210 + *(double *)&qword_26AF18210);
    v13[7] = v27;
    sub_235949D98();
    sub_2356594B0(0, (unint64_t *)&qword_26AF152B0);
    id v29 = (id)sub_235949D58();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_activateConstraints_, v29);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_235699188()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF14E40);
  uint64_t v107 = *(void *)(v0 - 8);
  uint64_t v108 = v0;
  MEMORY[0x270FA5388](v0, v1, v2, v3, v4);
  uint64_t v106 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF14E70);
  uint64_t v104 = *(void *)(v6 - 8);
  uint64_t v105 = v6;
  MEMORY[0x270FA5388](v6, v7, v8, v9, v10);
  long long v103 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14EE8);
  uint64_t v98 = *(void *)(v12 - 8);
  uint64_t v99 = v12;
  MEMORY[0x270FA5388](v12, v13, v14, v15, v16);
  uint64_t v97 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14B00);
  uint64_t v101 = *(void *)(v18 - 8);
  uint64_t v102 = v18;
  MEMORY[0x270FA5388](v18, v19, v20, v21, v22);
  long long v100 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_2359496E8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v84 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_23594A268();
  uint64_t v91 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94, v32, v33, v34, v35);
  uint64_t v37 = (char *)&v84 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14DF8);
  uint64_t v84 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86, v38, v39, v40, v41);
  unint64_t v43 = (char *)&v84 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF14BA0);
  uint64_t v85 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88, v44, v45, v46, v47);
  uint64_t v49 = (char *)&v84 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14B38);
  uint64_t v89 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92, v50, v51, v52, v53);
  BOOL v55 = (char *)&v84 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF148B0);
  uint64_t v90 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93, v56, v57, v58, v59);
  uint64_t v61 = (char *)&v84 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF148C8);
  uint64_t v95 = *(void *)(v62 - 8);
  uint64_t v96 = v62;
  MEMORY[0x270FA5388](v62, v63, v64, v65, v66);
  uint64_t v87 = (char *)&v84 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_2359470F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14EF0);
  sub_2359484A8();
  swift_endAccess();
  swift_release();
  sub_23594A258();
  sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v31, *MEMORY[0x263F8F068], v24);
  uint64_t v68 = (void *)sub_23594A2E8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v31, v24);
  uint64_t v109 = v68;
  sub_2356595F4(&qword_26AF14DF0, &qword_26AF14DF8);
  sub_23566A590();
  uint64_t v69 = v86;
  sub_235948578();

  (*(void (**)(char *, uint64_t))(v91 + 8))(v37, v94);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v43, v69);
  sub_2356595F4((unint64_t *)&unk_26AF14B90, (uint64_t *)&unk_26AF14BA0);
  uint64_t v70 = v88;
  sub_235948558();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v49, v70);
  sub_2359477E8();
  sub_2356595F4((unint64_t *)&unk_26AF14B28, &qword_26AF14B38);
  uint64_t v71 = v92;
  sub_235948518();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v55, v71);
  sub_2356594B0(0, (unint64_t *)&qword_26AF153B0);
  char v72 = v87;
  uint64_t v73 = v93;
  sub_2359483E8();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v61, v73);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2356595F4((unint64_t *)&unk_26AF148B8, &qword_26AF148C8);
  uint64_t v74 = v96;
  sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v72, v74);
  swift_beginAccess();
  sub_235948428();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF14FE0);
  uint64_t v75 = v97;
  sub_2359484A8();
  swift_endAccess();
  sub_2356595F4((unint64_t *)&unk_26AF14ED8, &qword_26AF14EE8);
  uint64_t v76 = v99;
  uint64_t v77 = v100;
  sub_235948558();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v75, v76);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2356595F4((unint64_t *)&unk_26AF14AF0, &qword_26AF14B00);
  uint64_t v78 = v102;
  sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v77, v78);
  swift_beginAccess();
  sub_235948428();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14F60);
  uint64_t v79 = v103;
  sub_2359484A8();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2356595F4((unint64_t *)&unk_26AF14E60, (uint64_t *)&unk_26AF14E70);
  uint64_t v80 = v105;
  sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v79, v80);
  swift_beginAccess();
  sub_235948428();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF14F40);
  uint64_t v81 = v106;
  sub_2359484A8();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2356595F4((unint64_t *)&unk_26AF14E30, (uint64_t *)&unk_26AF14E40);
  uint64_t v82 = v108;
  sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v81, v82);
  swift_beginAccess();
  sub_235948428();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_235699EF0()
{
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_235699F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23569DEB8(a1, a2);
}

char *sub_235699FA4@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  if (qword_26880E610 != -1) {
    swift_once();
  }
  id result = sub_2356F9B6C(a1);
  *a2 = result;
  return result;
}

char *sub_23569A014(void **a1, uint64_t a2)
{
  uint64_t v45 = sub_2359496D8();
  uint64_t v4 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45, v5, v6, v7, v8);
  uint64_t v44 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_235949738();
  uint64_t v10 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = *a1;
  swift_beginAccess();
  id result = (char *)MEMORY[0x237DEA060](a2 + 16);
  if (result)
  {
    id v35 = result;
    uint64_t v18 = &result[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
    swift_beginAccess();
    uint64_t v19 = *(void *)v18;
    if (*(void *)v18 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v20 = sub_23594A998();
      if (v20) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v20)
      {
LABEL_4:
        id result = (char *)sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
        uint64_t v41 = result;
        if (v20 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v21 = 0;
        unint64_t v38 = v19 & 0xC000000000000001;
        uint64_t v37 = v47;
        uint64_t v36 = (void (**)(char *, uint64_t))(v4 + 8);
        uint64_t v22 = (void (**)(char *, uint64_t))(v10 + 8);
        uint64_t v39 = v20;
        uint64_t v40 = v19;
        uint64_t v23 = v44;
        do
        {
          if (v38) {
            id v24 = (id)MEMORY[0x237DE87D0](v21, v19);
          }
          else {
            id v24 = *(id *)(v19 + 8 * v21 + 32);
          }
          uint64_t v25 = v24;
          uint64_t v26 = v21 + 1;
          uint64_t v27 = (void *)sub_23594A288();
          uint64_t v28 = (void *)swift_allocObject();
          uint64_t v29 = v42;
          void v28[2] = v25;
          v28[3] = v29;
          v28[4] = v21;
          v47[2] = sub_23569DEAC;
          v47[3] = v28;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          v47[0] = sub_2357A194C;
          v47[1] = &block_descriptor_32;
          uint64_t v30 = _Block_copy(aBlock);
          id v31 = v25;
          id v32 = v29;
          swift_release();
          sub_235949708();
          aBlock[0] = MEMORY[0x263F8EE78];
          sub_23565C0A0();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
          sub_2356595F4((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
          uint64_t v33 = v45;
          sub_23594A6C8();
          MEMORY[0x237DE8250](0, v16, v23, v30);
          _Block_release(v30);

          (*v36)(v23, v33);
          (*v22)(v16, v43);

          uint64_t v21 = v26;
          BOOL v34 = v39 == v26;
          uint64_t v19 = v40;
        }
        while (!v34);
      }
    }

    return (char *)swift_bridgeObjectRelease_n();
  }
  return result;
}

void sub_23569A440(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport9ImageCell_imageView);
  objc_msgSend(v5, sel_setImage_, a2);
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  uint64_t v6 = *(void *)(v13 + 16);
  swift_bridgeObjectRelease();
  if ((a3 & 0x8000000000000000) == 0 && v6 > (uint64_t)a3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (*(void *)(v13 + 16) <= a3)
    {
      __break(1u);
    }
    else
    {
      char v7 = *(unsigned char *)(v13 + a3 + 32);
      swift_bridgeObjectRelease();
      uint64_t v8 = OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter;
      *(unsigned char *)(a1 + OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter) = v7;
      id v9 = objc_msgSend(v5, sel_layer);
      int v10 = *(unsigned __int8 *)(a1 + v8);
      if (v10 == 12)
      {
        uint64_t v11 = 0;
      }
      else
      {
        unint64_t v12 = sub_2357A0728(v10);
        sub_23592CC04(v12);
        swift_bridgeObjectRelease();
        uint64_t v11 = (void *)sub_235949D58();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v9, sel_setFilters_, v11);
    }
  }
}

BOOL sub_23569A638()
{
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  return (v1 & 1) == 0;
}

uint64_t sub_23569A6EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v27 = *a1;
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x237DEA060](v2);
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = (unint64_t *)(result + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
    swift_beginAccess();
    unint64_t v6 = *v5;
    swift_bridgeObjectRetain();

    if (v6 >> 62) {
      goto LABEL_22;
    }
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v7; uint64_t v7 = sub_23594A998())
    {
      unint64_t v8 = 0;
      unint64_t v26 = v6 & 0xC000000000000001;
      id v9 = &unk_235954378;
      int v10 = &unk_2359543A0;
      uint64_t v23 = MEMORY[0x263F8EE58] + 8;
      uint64_t v24 = v7;
      unint64_t v25 = v6;
      while (1)
      {
        uint64_t v11 = v26 ? (char *)MEMORY[0x237DE87D0](v8, v6) : (char *)*(id *)(v6 + 8 * v8 + 32);
        unint64_t v12 = v11;
        if (__OFADD__(v8, 1)) {
          break;
        }
        unint64_t v29 = v8 + 1;
        uint64_t v28 = OBJC_IVAR____TtC16MagnifierSupport9ImageCell_imageView;
        objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_imageView], sel_setImage_, v27);
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v13 = v10;
        uint64_t v14 = v9;
        sub_2359484D8();
        swift_release();
        swift_release();
        uint64_t v15 = *(void *)(v30 + 16);
        swift_bridgeObjectRelease();
        if ((uint64_t)v8 >= v15)
        {

          id v9 = v14;
          int v10 = v13;
          if (v29 == v7) {
            return swift_bridgeObjectRelease_n();
          }
        }
        else
        {
          uint64_t v16 = v14;
          swift_getKeyPath();
          swift_getKeyPath();
          sub_2359484D8();
          swift_release();
          swift_release();
          if (v8 >= *(void *)(v30 + 16)) {
            goto LABEL_21;
          }
          int v10 = v13;
          char v17 = *(unsigned char *)(v30 + v8 + 32);
          swift_bridgeObjectRelease();
          uint64_t v18 = OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter;
          v12[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter] = v17;
          id v19 = objc_msgSend(*(id *)&v12[v28], sel_layer);
          int v20 = v12[v18];
          if (v20 == 12)
          {
            uint64_t v21 = 0;
          }
          else
          {
            unint64_t v22 = sub_2357A0728(v20);
            sub_23592CC04(v22);
            swift_bridgeObjectRelease();
            uint64_t v21 = (void *)sub_235949D58();
            swift_bridgeObjectRelease();
          }
          id v9 = v16;
          objc_msgSend(v19, sel_setFilters_, v21, v23);

          uint64_t v7 = v24;
          unint64_t v6 = v25;
          if (v29 == v24) {
            return swift_bridgeObjectRelease_n();
          }
        }
        ++v8;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_23569AA30(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2359496D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_235949738();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v14, v15, v16, v17);
  id v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  swift_beginAccess();
  uint64_t result = MEMORY[0x237DEA060](a2 + 16);
  if (result)
  {
    unint64_t v22 = (void *)result;
    sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
    uint64_t v30 = sub_23594A288();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v22;
    *(void *)(v23 + 24) = v20;
    aBlock[4] = sub_23569DE24;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_2357A194C;
    void aBlock[3] = &block_descriptor_8;
    uint64_t v24 = _Block_copy(aBlock);
    uint64_t v29 = v12;
    unint64_t v25 = v24;
    id v26 = v22;
    swift_bridgeObjectRetain();
    swift_release();
    sub_235949708();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_23565C0A0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
    sub_2356595F4((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
    sub_23594A6C8();
    uint64_t v27 = (void *)v30;
    MEMORY[0x237DE8250](0, v19, v11, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v29);
  }
  return result;
}

void sub_23569AD24(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x237DEA060](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    uint64_t v6 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView;
    uint64_t v7 = *(void **)(v4 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
    if ((objc_msgSend(v7, sel_isDragging) & 1) != 0 || objc_msgSend(v7, sel_isDecelerating)) {
      objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_feedbackGenerator], sel_selectionChanged);
    }
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    uint64_t v8 = sub_23583BF88(v2, v12);
    char v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = *(void **)&v5[v6];
      if (!objc_msgSend(v11, sel_isDragging) || objc_msgSend(v11, sel_isDecelerating)) {
        sub_23569AEB0(v8, 1);
      }
    }
  }
}

void sub_23569AEB0(uint64_t a1, char a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  if ((unint64_t)*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v6 < 0)
    {
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((a1 & 0x8000000000000000) == 0 && v6 > a1)
  {
    swift_beginAccess();
    uint64_t v7 = *v5;
    if ((*v5 & 0xC000000000000001) == 0)
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a1)
      {
        __break(1u);
        return;
      }
      id v8 = *(id *)(v7 + 8 * a1 + 32);
      goto LABEL_8;
    }
LABEL_12:
    id v8 = (id)MEMORY[0x237DE87D0](a1);
LABEL_8:
    char v9 = v8;
    swift_endAccess();
    objc_msgSend(v9, sel_bounds);
    char v10 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
    objc_msgSend(v9, sel_convertRect_toCoordinateSpace_, v10);
    double v12 = v11;
    objc_msgSend(v10, sel_contentOffset);
    objc_msgSend(v10, sel_setContentOffset_animated_, a2 & 1, v12);
  }
}

void sub_23569B01C(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *a1;
  type metadata accessor for ImageCell();
  uint64_t v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v6 = *(void **)&v5[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_imageView];
  objc_msgSend(v6, sel_setImage_, a2);
  uint64_t v7 = OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter;
  v5[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter] = v4;
  id v8 = objc_msgSend(v6, sel_layer);
  char v9 = 0;
  int v10 = v5[v7];
  if (v10 != 12)
  {
    unint64_t v11 = sub_2357A0728(v10);
    sub_23592CC04(v11);
    swift_bridgeObjectRelease();
    char v9 = (void *)sub_235949D58();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v8, sel_setFilters_, v9, a3);

  double v12 = v5;
  sub_23594AB48();
  sub_235949BD8();
  swift_bridgeObjectRelease();
  sub_235949BD8();
  sub_2357A05EC(v4);
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v16 = (void *)sub_235949A88();
  uint64_t v17 = (void *)sub_235949A88();
  id v18 = objc_msgSend(v15, sel_localizedStringForKey_value_table_, v16, 0, v17);

  sub_235949AC8();
  swift_bridgeObjectRelease();

  sub_235949BD8();
  swift_bridgeObjectRelease();
  id v19 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setAccessibilityIdentifier_, v19);

  sub_2357A05EC(v4);
  uint64_t v20 = v12;
  id v21 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  unint64_t v22 = (void *)sub_235949A88();
  uint64_t v23 = (void *)sub_235949A88();
  id v24 = objc_msgSend(v21, sel_localizedStringForKey_value_table_, v22, 0, v23);

  sub_235949AC8();
  swift_bridgeObjectRelease();

  unint64_t v25 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setAccessibilityLabel_, v25);

  *uint64_t v27 = v20;
}

void sub_23569B3B4(uint64_t a1, char a2, char a3)
{
  uint64_t v7 = &v3[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
  swift_beginAccess();
  if (*(void *)v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((a1 & 0x8000000000000000) == 0 && v8 > a1)
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)v7;
    if ((*(void *)v7 & 0xC000000000000001) == 0)
    {
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a1)
      {
        __break(1u);
LABEL_26:
        swift_once();
LABEL_16:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_2359484D8();
        swift_release();
        swift_release();
        sub_2357A05EC(v22);
        type metadata accessor for MAGUtilities();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v14 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        id v15 = (void *)sub_235949A88();
        uint64_t v16 = (void *)sub_235949A88();
        id v17 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, 0, v16);

        sub_235949AC8();
        swift_bridgeObjectRelease();

        id v18 = sub_235949A88();
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setAccessibilityValue_, v18);
        goto LABEL_21;
      }
      int v10 = (unsigned __int8 *)*(id *)(v9 + 8 * a1 + 32);
LABEL_8:
      unint64_t v11 = v10;
      swift_endAccess();
      int v12 = v11[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

      if (v12 != 12)
      {
        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        sub_2359484D8();
        swift_release();
        swift_release();
        if (v22 != v12)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_2359470F8();
          sub_2359484E8();
          swift_getKeyPath();
          swift_getKeyPath();
          unsigned __int8 v22 = 1;
          sub_2359470F8();
          sub_2359484E8();
        }
      }
      if (a2) {
        sub_23569AEB0(a1, a3 & 1);
      }
      if (qword_26AF13B78 == -1) {
        goto LABEL_16;
      }
      goto LABEL_26;
    }
LABEL_24:
    int v10 = (unsigned __int8 *)MEMORY[0x237DE87D0](a1);
    goto LABEL_8;
  }
  if (qword_26880E428 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_235948278();
  __swift_project_value_buffer(v19, (uint64_t)qword_26880F800);
  id v18 = sub_235948258();
  os_log_type_t v20 = sub_23594A148();
  if (os_log_type_enabled(v18, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v21 = 134217984;
    sub_23594A608();
    _os_log_impl(&dword_235640000, v18, v20, "No filter cell at: %ld", v21, 0xCu);
    MEMORY[0x237DE9F30](v21, -1, -1);
  }
LABEL_21:
}

void sub_23569B868()
{
  char v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v35, sel_layoutSubviews);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView];
  objc_msgSend(v2, sel_bounds);
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  if (qword_26AF14180 != -1) {
    swift_once();
  }
  double v9 = *(double *)&qword_26AF18280;
  if (qword_26AF14190 != -1) {
    swift_once();
  }
  double v10 = v9 + *(double *)&qword_26AF18288;
  if (qword_26AF140D0 != -1) {
    swift_once();
  }
  double v11 = *(double *)&qword_26AF18210;
  double v12 = v4 + v10 + *(double *)&qword_26AF18210;
  objc_msgSend(v2, sel_bounds);
  double v13 = v11 + *(double *)&qword_26AF18280 + *(double *)&qword_26AF18288;
  id v15 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView];
  objc_msgSend(v15, sel_setFrame_, v12, v6, v14 - v13, v8);
  objc_msgSend(v15, sel_frame);
  objc_msgSend(v15, sel_setContentInset_, 0.0, 0.0, 0.0, v16- (*(double (**)(void))(*(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8] + 24))());
  objc_msgSend(v15, sel_setContentSize_, sub_235697E20());
  objc_msgSend(v15, sel_setScrollEnabled_, 1);
  id v17 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint];
  if (v17) {
    objc_msgSend(v17, sel_setConstant_, v13 - v11);
  }
  sub_23569BCD4();
  sub_23569BF0C();
  id v18 = &v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
  swift_beginAccess();
  uint64_t v19 = *(void *)v18;
  if (*(void *)v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_23594A998();
    if (v20) {
      goto LABEL_11;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_21;
  }
LABEL_11:
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_2356764A4(0, v20 & ~(v20 >> 63), 0);
  if (v20 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v21 = 0;
  uint64_t v22 = v34;
  do
  {
    if ((v19 & 0xC000000000000001) != 0) {
      uint64_t v23 = (unsigned char *)MEMORY[0x237DE87D0](v21, v19);
    }
    else {
      uint64_t v23 = *(id *)(v19 + 8 * v21 + 32);
    }
    char v24 = v23[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

    unsigned __int8 v33 = v22;
    unint64_t v26 = *(void *)(v22 + 16);
    unint64_t v25 = *(void *)(v22 + 24);
    if (v26 >= v25 >> 1) {
      sub_2356764A4(v25 > 1, v26 + 1, 1);
    }
    ++v21;
    *(void *)(v22 + 16) = v26 + 1;
    *(unsigned char *)(v22 + v26 + 32) = v24;
  }
  while (v20 != v21);
  swift_bridgeObjectRelease();
LABEL_22:
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  uint64_t v27 = *(void *)(v22 + 16);
  if (v27)
  {
    uint64_t v28 = 0;
    while (1)
    {
      int v29 = *(unsigned __int8 *)(v22 + v28 + 32);
      if (v29 != 12 && v29 == v33) {
        break;
      }
      if (v27 == ++v28) {
        goto LABEL_31;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = v28;
    char v32 = 0;
  }
  else
  {
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v31 = 0;
    char v32 = 1;
  }
  sub_23569B3B4(v31, 1, v32);
}

uint64_t sub_23569BCD4()
{
  uint64_t v1 = v0;
  sub_235697C88();
  double v3 = v2;
  uint64_t v4 = v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config;
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config);
  double v5 = *(double (***)(uint64_t, uint64_t))(v4 + 8);
  double v7 = v5[6](v6, (uint64_t)v5);
  if (v3 <= v7) {
    double v3 = v7;
  }
  double v8 = v5[7](v6, (uint64_t)v5);
  if (v8 >= v3) {
    double v9 = v3;
  }
  else {
    double v9 = v8;
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView), sel_bounds);
  double v11 = v10;
  double v12 = v5[3];
  double v13 = v12(v6, (uint64_t)v5);
  double v14 = (unint64_t *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  unint64_t v15 = *v14;
  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v16) {
      goto LABEL_8;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_23594A998();
  uint64_t v16 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_8:
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    double v19 = (v11 - v13) * 0.5;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x237DE87D0](v18, v15);
      }
      else {
        id v20 = *(id *)(v15 + 8 * v18 + 32);
      }
      uint64_t v21 = v20;
      double v22 = v9 * (double)v18 + v12(v6, (uint64_t)v5) * (double)v18;
      double v23 = v12(v6, (uint64_t)v5);
      objc_msgSend(v21, sel_setFrame_, v22, v19, v23, v12(v6, (uint64_t)v5));

      ++v18;
    }
    while (v16 != v18);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_23569BF0C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView);
  objc_msgSend(v1, sel_bounds);
  if (v2 > 0.0)
  {
    id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v40, sel_setFrame_);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15740);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_2359542A0;
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 0.0);
    id v5 = objc_msgSend(v4, sel_CGColor);

    type metadata accessor for CGColor(0);
    uint64_t v7 = v6;
    *(void *)(v3 + 56) = v6;
    *(void *)(v3 + 32) = v5;
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
    id v9 = objc_msgSend(v8, sel_CGColor);

    *(void *)(v3 + 88) = v7;
    *(void *)(v3 + 64) = v9;
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
    id v11 = objc_msgSend(v10, sel_CGColor);

    *(void *)(v3 + 120) = v7;
    *(void *)(v3 + 96) = v11;
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 0.0);
    id v13 = objc_msgSend(v12, sel_CGColor);

    *(void *)(v3 + 152) = v7;
    *(void *)(v3 + 128) = v13;
    double v14 = (void *)sub_235949D58();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setColors_, v14);

    if (qword_26AF14180 != -1) {
      swift_once();
    }
    double v15 = *(double *)&qword_26AF18280;
    double v16 = *(double *)&qword_26AF18280 + -4.0;
    objc_msgSend(v1, sel_bounds);
    double v18 = v17;
    if (qword_26AF14190 != -1) {
      swift_once();
    }
    double v19 = *(double *)&qword_26AF18288;
    double v20 = v16 / v18;
    if (qword_26AF140D0 != -1) {
      swift_once();
    }
    double v21 = *(double *)&qword_26AF18210;
    objc_msgSend(v1, sel_bounds);
    double v23 = v22;
    double v24 = sub_23572FF1C();
    objc_msgSend(v1, sel_bounds);
    if (v20 > 0.0
      && ((double v26 = (v15 + v19 + v21 - v21) / v23, v27 = 1.0 - v24 / v25, v20 < v26) ? (v28 = v26 < v27) : (v28 = 0),
          v28 ? (BOOL v29 = v27 < 1.0) : (BOOL v29 = 0),
          v29))
    {
      id v30 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v20);
      id v31 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v26);
      id v32 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v27);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_235954290;
      *(void *)(v33 + 32) = v30;
      *(void *)(v33 + 40) = v31;
      *(void *)(v33 + 48) = v32;
      sub_2356594B0(0, (unint64_t *)&unk_26AF153E0);
      id v34 = v30;
      id v35 = v31;
      id v36 = v32;
      *(void *)(v33 + 56) = sub_23594A498();
      sub_235949D98();
      uint64_t v37 = (void *)sub_235949D58();
      swift_bridgeObjectRelease();
      objc_msgSend(v40, sel_setLocations_, v37);

      objc_msgSend(v40, sel_setStartPoint_, 0.0, 0.5);
      objc_msgSend(v40, sel_setEndPoint_, 1.0, 0.5);
      id v38 = objc_msgSend(v1, sel_layer);
      objc_msgSend(v38, sel_setMask_, v40);

      uint64_t v39 = v38;
    }
    else
    {
      uint64_t v39 = v40;
    }
  }
}

uint64_t type metadata accessor for LensFiltersScrubber()
{
  return self;
}

void sub_23569C550(void *a1)
{
  double v2 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
  objc_msgSend(a1, sel_locationInView_, v2);
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  id v7 = objc_msgSend(v2, sel_subviews);
  sub_2356594B0(0, (unint64_t *)&unk_26AF153A0);
  unint64_t v8 = sub_235949D78();

  id v9 = v2;
  LOBYTE(v7) = sub_23569D908(v8, (uint64_t)v9, v4, v6);
  swift_bridgeObjectRelease();

  if (v7)
  {
    uint64_t v10 = sub_23569C6A0(v4);
    if (v10)
    {
      id v11 = (void *)v10;
      id v12 = (unint64_t *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
      swift_beginAccess();
      unint64_t v13 = *v12;
      swift_bridgeObjectRetain();
      sub_23583BFEC((uint64_t)v11, v13);
      uint64_t v15 = v14;
      char v17 = v16;
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0) {
        sub_23569B3B4(v15, 1, 1);
      }
    }
  }
}

uint64_t sub_23569C6A0(double a1)
{
  double v2 = v1;
  id v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView], sel_subviews);
  sub_2356594B0(0, (unint64_t *)&unk_26AF153A0);
  unint64_t v5 = sub_235949D78();

  unint64_t v14 = MEMORY[0x263F8EE78];
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v11 = MEMORY[0x263F8EE78];
LABEL_17:
    swift_bridgeObjectRelease();
    id v12 = v2;
    uint64_t v13 = sub_23569DA30(v11, (uint64_t)v12, a1);
    swift_bridgeObjectRelease();

    return v13;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_23594A998();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x237DE87D0](i, v5);
      }
      else {
        id v9 = *(id *)(v5 + 8 * i + 32);
      }
      uint64_t v10 = v9;
      type metadata accessor for ImageCell();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x237DE7CE0]();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_235949DA8();
        }
        sub_235949DD8();
        sub_235949D98();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v11 = v14;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void *sub_23569C904(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config);
  unint64_t v5 = *(double (***)(void, void))(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8);
  double v6 = v5[3](v4, v5);
  sub_235697C88();
  double v8 = v7;
  double v9 = v5[6](v4, v5);
  if (v8 <= v9) {
    double v8 = v9;
  }
  double v10 = v5[7](v4, v5);
  if (v10 >= v8) {
    double v10 = v8;
  }
  uint64_t result = (void *)sub_23569C6A0((v6 + v10) * 0.5 + a1);
  id v12 = result;
  if (result)
  {
    objc_msgSend(result, sel_bounds);
    objc_msgSend(v12, sel_convertRect_toCoordinateSpace_, *(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView));
    uint64_t v14 = v13;

    return (void *)v14;
  }
  return result;
}

void sub_23569CA38(void *a1)
{
  double v3 = sub_2356978B4();
  uint64_t v4 = sub_23569C6A0(v3);
  if (v4)
  {
    id v11 = (id)v4;
    sub_2356594B0(0, (unint64_t *)&qword_26AF15420);
    if ((sub_23594A4B8() & 1) != 0
      && ((objc_msgSend(a1, sel_isDragging) & 1) != 0 || objc_msgSend(a1, sel_isDecelerating)))
    {
      unint64_t v5 = (unint64_t *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
      swift_beginAccess();
      unint64_t v6 = *v5;
      swift_bridgeObjectRetain();
      sub_23583BFEC((uint64_t)v11, v6);
      uint64_t v8 = v7;
      char v10 = v9;
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0) {
        sub_23569B3B4(v8, 0, 0);
      }
    }
    else
    {
    }
  }
}

uint64_t sub_23569CD78()
{
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  double v3 = (uint64_t *)sub_235949A88();
  uint64_t v4 = (void *)sub_235949A88();
  id v5 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, 0, v4);

  sub_235949AC8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15720);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2359527E0;
  uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  double v24 = v7;
  uint64_t v8 = *v7;
  if (!(*v7 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_23594A998();
  if (!v9) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2356764A4(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v11 = 0;
    uint64_t v12 = v26;
    double v3 = &OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter;
    do
    {
      if ((v8 & 0xC000000000000001) != 0) {
        uint64_t v13 = (unsigned char *)MEMORY[0x237DE87D0](v11, v8);
      }
      else {
        uint64_t v13 = *(id *)(v8 + 8 * v11 + 32);
      }
      char v14 = v13[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

      unsigned __int8 v25 = v12;
      unint64_t v16 = *(void *)(v12 + 16);
      unint64_t v15 = *(void *)(v12 + 24);
      if (v16 >= v15 >> 1) {
        sub_2356764A4(v15 > 1, v16 + 1, 1);
      }
      ++v11;
      *(void *)(v12 + 16) = v16 + 1;
      *(unsigned char *)(v12 + v16 + 32) = v14;
    }
    while (v9 != v11);
    swift_bridgeObjectRelease();
LABEL_14:
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_26AF181E0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    uint64_t v18 = *(void *)(v12 + 16);
    if (v18)
    {
      uint64_t v19 = 0;
      while (1)
      {
        int v20 = *(unsigned __int8 *)(v12 + 32 + v19);
        if (v20 != 12 && v20 == v25) {
          break;
        }
        if (v18 == ++v19) {
          goto LABEL_23;
        }
      }
    }
    else
    {
LABEL_23:
      uint64_t v19 = 0;
    }
    swift_bridgeObjectRelease();
    if (__OFADD__(v19, 1))
    {
      __break(1u);
    }
    else
    {
      double v3 = (uint64_t *)MEMORY[0x263F8D6C8];
      uint64_t v17 = MEMORY[0x263F8D750];
      *(void *)(v6 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v6 + 64) = v17;
      *(void *)(v6 + 32) = v19 + 1;
      if (!(*v24 >> 62))
      {
        uint64_t v22 = *(void *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_27:
        *(void *)(v6 + 96) = v3;
        *(void *)(v6 + 104) = v17;
        *(void *)(v6 + 72) = v22;
        uint64_t v23 = sub_235949B08();
        swift_bridgeObjectRelease();
        return v23;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_23594A998();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

void sub_23569D140()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_23594A998();
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v15 = MEMORY[0x263F8EE78];
  sub_2356764A4(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v15;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      uint64_t v6 = (unsigned char *)MEMORY[0x237DE87D0](v4, v2);
    }
    else {
      uint64_t v6 = *(id *)(v2 + 8 * v4 + 32);
    }
    char v7 = v6[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

    unsigned __int8 v14 = v5;
    unint64_t v9 = *(void *)(v5 + 16);
    unint64_t v8 = *(void *)(v5 + 24);
    if (v9 >= v8 >> 1) {
      sub_2356764A4(v8 > 1, v9 + 1, 1);
    }
    ++v4;
    *(void *)(v5 + 16) = v9 + 1;
    *(unsigned char *)(v5 + v9 + 32) = v7;
  }
  while (v3 != v4);
  swift_bridgeObjectRelease();
LABEL_14:
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  uint64_t v10 = *(void *)(v5 + 16);
  if (v10)
  {
    uint64_t v11 = 0;
    while (1)
    {
      int v12 = *(unsigned __int8 *)(v5 + 32 + v11);
      if (v12 != 12 && v12 == v14) {
        break;
      }
      if (v10 == ++v11) {
        goto LABEL_23;
      }
    }
  }
  else
  {
LABEL_23:
    uint64_t v11 = 0;
  }
  swift_bridgeObjectRelease();
  sub_23569B3B4(v11 - 1, 1, 1);
}

void sub_23569D3D4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_23594A998();
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v15 = MEMORY[0x263F8EE78];
  sub_2356764A4(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0) {
    goto LABEL_27;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v15;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      uint64_t v6 = (unsigned char *)MEMORY[0x237DE87D0](v4, v2);
    }
    else {
      uint64_t v6 = *(id *)(v2 + 8 * v4 + 32);
    }
    char v7 = v6[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

    unsigned __int8 v14 = v5;
    unint64_t v9 = *(void *)(v5 + 16);
    unint64_t v8 = *(void *)(v5 + 24);
    if (v9 >= v8 >> 1) {
      sub_2356764A4(v8 > 1, v9 + 1, 1);
    }
    ++v4;
    *(void *)(v5 + 16) = v9 + 1;
    *(unsigned char *)(v5 + v9 + 32) = v7;
  }
  while (v3 != v4);
  swift_bridgeObjectRelease();
LABEL_14:
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  uint64_t v10 = *(void *)(v5 + 16);
  if (v10)
  {
    uint64_t v11 = 0;
    while (1)
    {
      int v12 = *(unsigned __int8 *)(v5 + 32 + v11);
      if (v12 != 12 && v12 == v14) {
        break;
      }
      if (v10 == ++v11) {
        goto LABEL_23;
      }
    }
  }
  else
  {
LABEL_23:
    uint64_t v11 = 0;
  }
  swift_bridgeObjectRelease();
  if (!__OFADD__(v11, 1))
  {
    sub_23569B3B4(v11 + 1, 1, 1);
    return;
  }
  __break(1u);
LABEL_27:
  __break(1u);
}

uint64_t sub_23569D680(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_23594A898();
    unint64_t v8 = (char *)(a1 + 32);
    while (1)
    {
      char v9 = *v8++;
      char v10 = v9;
      sub_23569B01C(&v10, a2, (uint64_t)&v11);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      sub_23594A868();
      sub_23594A8A8();
      sub_23594A8B8();
      sub_23594A878();
      if (!--v5) {
        return v12;
      }
    }
    return swift_release();
  }
  return result;
}

void sub_23569D768()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
  *uint64_t v1 = &type metadata for LayoutConstants.FilterRow;
  v1[1] = &off_26E8C3B00;
  uint64_t v2 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82B88]), sel_init);
  v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_shouldHighlight] = 0;
  uint64_t v3 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_subscribers] = MEMORY[0x263F8EE88];
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons] = MEMORY[0x263F8EE78];
  uint64_t v4 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_feedbackGenerator;
  id v5 = objc_msgSend(self, sel_lightConfiguration);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BC0]), sel_initWithConfiguration_, v5);

  objc_msgSend(v6, sel__setOutputMode_, 5);
  *(void *)&v0[v4] = v6;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___activeItemIndicator] = 0;

  sub_23594A968();
  __break(1u);
}

BOOL sub_23569D908(unint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4)
{
  if (a1 >> 62) {
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_23594A998())
  {
    uint64_t v9 = 4;
    while (1)
    {
      id v10 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x237DE87D0](v9 - 4, a1) : *(id *)(a1 + 8 * v9);
      uint64_t v11 = v10;
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1)) {
        break;
      }
      objc_msgSend(v10, sel_bounds);
      objc_msgSend(v11, sel_convertRect_toCoordinateSpace_, a2);
      v15.CGFloat x = a3;
      v15.CGFloat y = a4;
      BOOL v13 = CGRectContainsPoint(v16, v15);

      if (!v13)
      {
        ++v9;
        if (v12 != v8) {
          continue;
        }
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  BOOL v13 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_23569DA30(unint64_t a1, uint64_t a2, double a3)
{
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x237DE87D0](0, a1);
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        id v6 = *(id *)(a1 + 32);
      }
      char v7 = v6;
      if (v4 == 1) {
        break;
      }
      uint64_t v31 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView;
      unint64_t v9 = 1;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v10 = (id)MEMORY[0x237DE87D0](v9, a1);
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0) {
            goto LABEL_22;
          }
          if (v9 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_23;
          }
          id v10 = *(id *)(a1 + 8 * v9 + 32);
        }
        uint64_t v8 = v10;
        unint64_t v11 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          break;
        }
        uint64_t v12 = v4;
        objc_msgSend(v10, sel_bounds);
        uint64_t v13 = *(void *)(a2 + v31);
        objc_msgSend(v8, sel_convertRect_toCoordinateSpace_, v13);
        CGFloat v15 = v14;
        CGFloat v17 = v16;
        CGFloat v19 = v18;
        CGFloat v21 = v20;
        objc_msgSend(v7, sel_bounds);
        objc_msgSend(v7, sel_convertRect_toCoordinateSpace_, v13);
        CGFloat v23 = v22;
        CGFloat v25 = v24;
        CGFloat v27 = v26;
        CGFloat v29 = v28;
        v34.origin.CGFloat x = v15;
        v34.origin.CGFloat y = v17;
        v34.size.CGFloat width = v19;
        v34.size.CGFloat height = v21;
        double v30 = vabdd_f64(CGRectGetMidX(v34), a3);
        v35.origin.CGFloat x = v23;
        v35.origin.CGFloat y = v25;
        v35.size.CGFloat width = v27;
        v35.size.CGFloat height = v29;
        if (v30 < vabdd_f64(CGRectGetMidX(v35), a3))
        {

          char v7 = v8;
          ++v9;
          uint64_t v4 = v12;
          if (v11 == v12) {
            goto LABEL_8;
          }
        }
        else
        {

          ++v9;
          uint64_t v4 = v12;
          if (v11 == v12) {
            goto LABEL_7;
          }
        }
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      swift_bridgeObjectRetain();
      uint64_t result = sub_23594A998();
      uint64_t v4 = result;
      if (!result) {
        goto LABEL_25;
      }
    }
LABEL_7:
    uint64_t v8 = v7;
LABEL_8:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  return (uint64_t)v8;
}

uint64_t sub_23569DC94()
{
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = (void *)sub_235949A88();
  uint64_t v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  uint64_t v5 = sub_235949AC8();
  return v5;
}

uint64_t sub_23569DD8C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

char *sub_23569DDC4(void **a1)
{
  return sub_23569A014(a1, v1);
}

uint64_t sub_23569DDCC(uint64_t *a1)
{
  return sub_23569A6EC(a1, v1);
}

uint64_t sub_23569DDD4(uint64_t *a1)
{
  return sub_23569AA30(a1, v1);
}

void sub_23569DDDC(unsigned __int8 *a1)
{
  sub_23569AD24(a1, v1);
}

uint64_t sub_23569DDE4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23569DE24()
{
  sub_2356986C8(*(void *)(v0 + 24));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_23569DE6C()
{
  return swift_deallocObject();
}

void sub_23569DEAC()
{
  sub_23569A440(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_23569DEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF12EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23569DF30(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF12EB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23569DF90()
{
  return swift_deallocObject();
}

id sub_23569DFC8()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setNeedsLayout);
}

id sub_23569DFE8()
{
  v9[1] = *(double *)MEMORY[0x263EF8340];
  double v8 = 0.0;
  v9[0] = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  objc_msgSend(v0, sel_getRed_green_blue_alpha_, v9, &v8, &v7, &v6);
  if (v9[0] == v8 && v8 == v7) {
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, v9[0], v6 * 0.8);
  }
  double v4 = 0.0;
  double v5 = 0.0;
  double v3 = 0.0;
  objc_msgSend(v0, sel_getHue_saturation_brightness_alpha_, &v5, &v4, &v3, &v6, v8);
  return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithHue_saturation_brightness_alpha_, v5, v4, v3, v6 * 0.8);
}

id sub_23569E118(void *a1, void *a2)
{
  v7[1] = *(double *)MEMORY[0x263EF8340];
  uint64_t v6 = 0;
  v7[0] = 0.0;
  objc_msgSend(a1, sel_getWhite_alpha_, &v6, v7);
  id v3 = objc_msgSend(a2, sel_userInterfaceStyle);
  double v4 = 0.35;
  if (v3 == (id)2) {
    double v4 = 0.45;
  }
  return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, v7[0], v7[0] * v4);
}

void sub_23569E1E0()
{
  uint64_t v0 = sub_2359496D8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2, v3, v4, v5);
  double v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23569E5B0();
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  if (v33 == 1)
  {
    type metadata accessor for MAGUtilities();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v9 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    id v10 = (void *)sub_235949A88();
    unint64_t v11 = (void *)sub_235949A88();
    id v12 = objc_msgSend(v9, sel_localizedStringForKey_value_table_, v10, 0, v11);
    v31[0] = v1;
    uint64_t v13 = v0;
    id v14 = v12;

    uint64_t v15 = sub_235949AC8();
    uint64_t v17 = v16;

    uint64_t v33 = v15;
    uint64_t v34 = v17;
    sub_2356610AC();
    uint64_t v18 = sub_23594A638();
    uint64_t v20 = v19;
    id v21 = sub_23587FE44();
    id v22 = sub_23587FFB0();
    uint64_t v23 = v18;
    uint64_t v0 = v13;
    uint64_t v1 = v31[0];
    sub_23587CB9C(v23, v20, v21, v22);
    swift_bridgeObjectRelease();

    double v24 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    UIAccessibilitySpeakAndDoNotBeInterrupted();

    sub_2357A1B18();
  }
  uint64_t v25 = qword_26AF181E8 + 40;
  swift_beginAccess();
  char v32 = 1;
  if (qword_26AF144C0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_2359496C8();
  MEMORY[0x270FA5388](v26, v27, v28, v29, v30);
  v31[-2] = &v32;
  v31[-1] = v25;
  sub_23594A298();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  swift_endAccess();
  if (*(unsigned char *)(qword_26AF181E0
                + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorSignsAssetDownloaded) != 1
    || (*(unsigned char *)(qword_26AF181E0
                 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorAttributesAssetDownloaded) & 1) == 0)
  {
    sub_2357C32AC();
  }
}

uint64_t sub_23569E5B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2359496D8();
  uint64_t v35 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v3, v4, v5, v6);
  double v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_235949738();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  MEMORY[0x270FA5388](v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v16 = (uint64_t *)(qword_26AF181E0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedDoorDetectionFeedbacks);
  swift_beginAccess();
  uint64_t v17 = v16[1];
  uint64_t v18 = (uint64_t (*)(uint64_t))v16[2];
  aBlocuint64_t k = *v16;
  uint64_t v37 = v17;
  id v38 = v18;
  uint64_t v19 = qword_26AF144C0;
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_bridgeObjectRetain();
  if (v19 != -1) {
    uint64_t v20 = swift_once();
  }
  MEMORY[0x270FA5388](v20, v21, v22, v23, v24);
  *(&v33 - 2) = (uint64_t)&aBlock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15110);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v42;
  BOOL v26 = sub_2356BFD20(2, v42);
  BOOL v27 = sub_2356BFD20(3, v25);
  BOOL v28 = sub_2356BFD20(1, v25);
  swift_bridgeObjectRelease();
  v1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_useDoorSpeechFeedback] = v28;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v1;
  *(unsigned char *)(v29 + 24) = v26;
  *(unsigned char *)(v29 + 25) = v27;
  id v40 = sub_2356A39CC;
  uint64_t v41 = v29;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  id v38 = sub_2357A194C;
  uint64_t v39 = &block_descriptor_8;
  uint64_t v30 = _Block_copy(&aBlock);
  uint64_t v31 = v1;
  sub_235949708();
  uint64_t v42 = MEMORY[0x263F8EE78];
  sub_2356A5BC8((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_23565C0F8();
  sub_23594A6C8();
  MEMORY[0x237DE8250](0, v15, v8, v30);
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v2);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v34);
  return swift_release();
}

void sub_23569E9D0()
{
  uint64_t v1 = (int *)type metadata accessor for DetectedDoor(0);
  MEMORY[0x270FA5388](v1, v2, v3, v4, v5);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = (int *)type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x270FA5388](v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23569EEF0();
  if (*(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectedPersonView))
  {
    uint64_t v15 = *MEMORY[0x263F001A8];
    uint64_t v16 = *(void *)(MEMORY[0x263F001A8] + 8);
    uint64_t v17 = *(void *)(MEMORY[0x263F001A8] + 16);
    uint64_t v18 = *(void *)(MEMORY[0x263F001A8] + 24);
    uint64_t v19 = *MEMORY[0x263F00148];
    uint64_t v20 = *(void *)(MEMORY[0x263F00148] + 8);
    sub_235947968();
    uint64_t v21 = &v7[v1[5]];
    *(void *)uint64_t v21 = v15;
    *((void *)v21 + 1) = v16;
    *((void *)v21 + 2) = v17;
    *((void *)v21 + 3) = v18;
    uint64_t v22 = &v7[v1[6]];
    *(void *)uint64_t v22 = v15;
    *((void *)v22 + 1) = v16;
    *((void *)v22 + 2) = v17;
    *((void *)v22 + 3) = v18;
    uint64_t v23 = &v7[v1[7]];
    *(void *)uint64_t v23 = v19;
    *((void *)v23 + 1) = v20;
    uint64_t v24 = &v7[v1[8]];
    *(void *)uint64_t v24 = v19;
    *((void *)v24 + 1) = v20;
    *(void *)&v7[v1[9]] = 0;
    uint64_t v25 = &v7[v1[10]];
    *(_DWORD *)uint64_t v25 = 0;
    v25[4] = 1;
    BOOL v26 = &v7[v1[11]];
    *((_OWORD *)v26 + 4) = 0u;
    *((_OWORD *)v26 + 5) = 0u;
    *((_OWORD *)v26 + 2) = 0u;
    *((_OWORD *)v26 + 3) = 0u;
    *(_OWORD *)BOOL v26 = 0u;
    *((_OWORD *)v26 + 1) = 0u;
    *(void *)&v7[v1[12]] = 0;
    uint64_t v27 = (uint64_t)&v14[v8[5]];
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FD40);
    uint64_t v29 = *(int *)(v28 + 48);
    uint64_t v30 = *(int *)(v28 + 64);
    sub_2356A45E4((uint64_t)v7, v27, type metadata accessor for DetectedDoor);
    *(void *)(v27 + v29) = MEMORY[0x263F8EE78];
    *(_DWORD *)(v27 + v30) = 0;
    type metadata accessor for MAGOutputEvent.EventType(0);
    swift_storeEnumTagMultiPayload();
    sub_235947968();
    v14[v8[6]] = 1;
    v14[v8[7]] = 0;
    sub_2356A46B4((uint64_t)v7, type metadata accessor for DetectedDoor);
    sub_235741600((uint64_t)v14);
    sub_2356A46B4((uint64_t)v14, type metadata accessor for MAGOutputEvent);
    uint64_t v31 = (char *)sub_23587F0FC();
    char v32 = &v31[OBJC_IVAR____TtC16MagnifierSupport17MFLivePreviewView_textValue];
    *(void *)char v32 = 0;
    *((void *)v32 + 1) = 0xE000000000000000;

    swift_bridgeObjectRelease();
    uint64_t v33 = (id *)(*(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pulseFeedbackProcessor)
               + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_doorToneGenerator);
    swift_beginAccess();
    objc_msgSend(*v33, sel_setUseHapticFeedback_, 0);
    objc_msgSend(*v33, sel_setUseSoundFeedback_, 0);
    id v34 = sub_23587EBA4();
    id v35 = objc_msgSend(v34, sel_view);
    if (v35)
    {
      id v36 = v35;
      objc_msgSend(v35, sel_alpha);
      double v38 = v37;

      if (v38 == 0.0)
      {
        type metadata accessor for MAGUtilities();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        id v40 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        uint64_t v41 = (void *)sub_235949A88();
        uint64_t v42 = (void *)sub_235949A88();
        id v43 = objc_msgSend(v40, sel_localizedStringForKey_value_table_, v41, 0, v42);

        uint64_t v44 = sub_235949AC8();
        uint64_t v46 = v45;

        uint64_t v54 = v44;
        uint64_t v55 = v46;
        sub_2356610AC();
        uint64_t v47 = sub_23594A638();
        uint64_t v49 = v48;
        id v50 = sub_23587FE44();
        id v51 = sub_23587FFB0();
        sub_23587CB9C(v47, v49, v50, v51);
        swift_bridgeObjectRelease();

        uint64_t v52 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        UIAccessibilitySpeakAndDoNotBeInterrupted();
      }
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359484D8();
      swift_release();
      swift_release();
      if (v54 == 1) {
        sub_23569F204();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_23569EEF0()
{
  uint64_t v1 = sub_2359496D8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3, v4, v5, v6);
  double v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_235949738();
  uint64_t v9 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
  uint64_t v16 = (void *)sub_23594A288();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v0;
  aBlock[4] = sub_23569FF44;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_2357A194C;
  void aBlock[3] = &block_descriptor_9;
  uint64_t v18 = _Block_copy(aBlock);
  uint64_t v19 = v0;
  swift_release();
  sub_235949708();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2356A5BC8((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_23565C0F8();
  sub_23594A6C8();
  MEMORY[0x237DE8250](0, v15, v8, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v24);
  uint64_t v20 = *(void **)&v19[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = (void *)sub_235949D58();
    objc_msgSend(v21, sel_setAccessibilityElements_, v22);
  }
}

uint64_t sub_23569F204()
{
  sub_2356594B0(0, &qword_26880FD48);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportsFrameSemantics_, 8))
  {
    uint64_t v1 = (id *)(*(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService)
              + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
    swift_beginAccess();
    if (*v1)
    {
      id v2 = objc_msgSend(*v1, sel_configuration);
      if (v2)
      {
        uint64_t v3 = v2;
        objc_msgSend(v2, sel_setFrameSemantics_, (unint64_t)objc_msgSend(v2, sel_frameSemantics) & 0xFFFFFFFFFFFFFFF7);
      }
    }
  }
  return sub_2357A1B18();
}

id sub_23569F2E8(uint64_t a1, char a2, char a3)
{
  uint64_t v5 = (id *)(*(void *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pulseFeedbackProcessor)
            + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_doorToneGenerator);
  swift_beginAccess();
  objc_msgSend(*v5, sel_setUseSoundFeedback_, a2 & 1);
  objc_msgSend(*v5, sel_setUseHapticFeedback_, a3 & 1);
  return objc_msgSend(*v5, sel_setDetectionType_, 1);
}

uint64_t sub_23569F38C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 88) = a8;
  *(double *)(v8 + 32) = a1;
  *(double *)(v8 + 40) = a2;
  *(void *)(v8 + 16) = a6;
  *(void *)(v8 + 24) = a7;
  sub_235949E78();
  *(void *)(v8 + 48) = sub_235949E68();
  uint64_t v10 = sub_235949E28();
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 64) = v9;
  return MEMORY[0x270FA2498](sub_23569F42C, v10, v9);
}

uint64_t sub_23569F42C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_23569F4DC;
  char v2 = *(unsigned char *)(v0 + 88);
  double v3 = *(double *)(v0 + 32);
  double v4 = *(double *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 24);
  return sub_235829FE4(v5, v2, v3, v4);
}

uint64_t sub_23569F4DC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return MEMORY[0x270FA2498](sub_23569F604, v4, v3);
}

uint64_t sub_23569F604()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  if (v1)
  {
    sub_2356A3DC8(*(void *)(v0 + 80), *(void **)(v0 + 24), *(unsigned char *)(v0 + 88));
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_23569F688(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v15 = qword_26AF144C0;
  uint64_t v16 = swift_bridgeObjectRetain();
  if (v15 != -1) {
    uint64_t v16 = swift_once();
  }
  MEMORY[0x270FA5388](v16, v17, v18, v19, v20);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, v57, v58, v59, 1.0);
  v60.origin.CGFloat x = a1;
  v60.origin.CGFloat y = a2;
  v60.size.CGFloat width = a3;
  v60.size.CGFloat height = a4;
  CGPathRef v56 = CGPathCreateWithRoundedRect(v60, 16.0, 16.0, 0);
  if (qword_26880E5C8 != -1) {
    swift_once();
  }
  uint64_t v55 = v7;
  if (byte_268812C68 != 1) {
    goto LABEL_17;
  }
  id v22 = objc_msgSend(self, sel_currentDevice);
  id v23 = objc_msgSend(v22, sel_orientation);

  if (v23 == (id)4)
  {
    id result = objc_msgSend(v7, sel_view);
    if (result)
    {
      uint64_t v25 = result;
      objc_msgSend(result, sel_bounds);
      double v27 = v26;

      v61.origin.CGFloat x = a1;
      v61.origin.CGFloat y = a2;
      v61.size.CGFloat width = a3;
      v61.size.CGFloat height = a4;
      double MinY = CGRectGetMinY(v61);
      v62.origin.CGFloat x = a1;
      v62.origin.CGFloat y = a2;
      v62.size.CGFloat width = a3;
      v62.size.CGFloat height = a4;
      double Height = CGRectGetHeight(v62);
      id result = objc_msgSend(v7, sel_view);
      if (result)
      {
        uint64_t v30 = result;
        double v31 = v27 - MinY - Height;
LABEL_16:
        objc_msgSend(v30, sel_bounds);
        double v35 = v34;

        v64.origin.CGFloat x = a1;
        v64.origin.CGFloat y = a2;
        v64.size.CGFloat width = a3;
        v64.size.CGFloat height = a4;
        double v36 = v35 - CGRectGetMinX(v64);
        v65.origin.CGFloat x = a1;
        v65.origin.CGFloat y = a2;
        v65.size.CGFloat width = a3;
        v65.size.CGFloat height = a4;
        CGFloat v37 = v36 - CGRectGetWidth(v65);
        v66.origin.CGFloat x = a1;
        v66.origin.CGFloat y = a2;
        v66.size.CGFloat width = a3;
        v66.size.CGFloat height = a4;
        CGFloat v38 = CGRectGetHeight(v66);
        v67.origin.CGFloat x = a1;
        v67.origin.CGFloat y = a2;
        v67.size.CGFloat width = a3;
        v67.size.CGFloat height = a4;
        v68.size.CGFloat height = CGRectGetWidth(v67);
        v68.origin.CGFloat x = v31;
        v68.origin.CGFloat y = v37;
        v68.size.CGFloat width = v38;
        CGPathRef v39 = CGPathCreateWithRoundedRect(v68, 16.0, 16.0, 0);

        CGPathRef v56 = v39;
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (byte_268812C68 == 1)
  {
    id v32 = objc_msgSend(self, sel_currentDevice);
    id v33 = objc_msgSend(v32, sel_orientation);

    if (v33 == (id)3)
    {
      v63.origin.CGFloat x = a1;
      v63.origin.CGFloat y = a2;
      v63.size.CGFloat width = a3;
      v63.size.CGFloat height = a4;
      double v31 = CGRectGetMinY(v63);
      id result = objc_msgSend(v7, sel_view);
      if (result)
      {
        uint64_t v30 = result;
        goto LABEL_16;
      }
LABEL_25:
      __break(1u);
      return result;
    }
  }
LABEL_17:
  objc_msgSend(v14, sel_setPath_, v56);
  id v40 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v14, sel_setFillColor_, v40);

  id v41 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v14, sel_setStrokeColor_, v41);

  id v42 = v14;
  id v43 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v42, sel_setBorderColor_, v43);

  if (a6) {
    double v44 = 1.5;
  }
  else {
    double v44 = 5.0;
  }
  objc_msgSend(v42, sel_setLineWidth_, v44);
  LODWORD(v45) = 1045220557;
  objc_msgSend(v42, sel_setOpacity_, v45);
  objc_msgSend(v42, sel_setCornerRadius_, 16.0);
  objc_msgSend(v54, sel_setPath_, v56);
  id v46 = objc_msgSend(self, sel_clearColor);
  id v47 = objc_msgSend(v46, sel_CGColor);

  objc_msgSend(v54, sel_setFillColor_, v47);
  id v48 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v54, sel_setStrokeColor_, v48);

  id v49 = v54;
  id v50 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v49, sel_setBorderColor_, v50);

  objc_msgSend(v49, sel_setLineWidth_, v44);
  LODWORD(v51) = 1.0;
  objc_msgSend(v49, sel_setOpacity_, v51);
  objc_msgSend(v49, sel_setCornerRadius_, 16.0);
  objc_msgSend(v13, sel_addSublayer_, v42);
  objc_msgSend(v13, sel_addSublayer_, v49);
  objc_msgSend(v13, sel_setDrawsAsynchronously_, 1);
  uint64_t v52 = *(void **)&v55[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeView];
  if (v52)
  {
    id v53 = objc_msgSend(v52, sel_layer);
    objc_msgSend(v53, sel_insertSublayer_atIndex_, v13, 0);

    id v49 = v21;
    id v21 = v53;
  }

  return v13;
}

id sub_23569FDC4(uint64_t a1)
{
  uint64_t v2 = self;
  objc_msgSend(v2, sel_begin);
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorDetectionDoorBoxLayers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    *uint64_t v3 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    return objc_msgSend(v2, sel_commit);
  }
  swift_bridgeObjectRetain();
  id result = (id)sub_23594A998();
  uint64_t v5 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x237DE87D0](i, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      objc_msgSend(v8, sel_removeFromSuperlayer);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23569FF0C()
{
  return swift_deallocObject();
}

id sub_23569FF44()
{
  return sub_23569FDC4(*(void *)(v0 + 16));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_23569FF64()
{
  uint64_t v1 = sub_2359496D8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3, v4, v5, v6);
  id v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_235949738();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)aBlock - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
  uint64_t v17 = (void *)sub_23594A288();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v0;
  aBlock[4] = sub_2356A4144;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_2357A194C;
  void aBlock[3] = &block_descriptor_26;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v0;
  swift_release();
  sub_235949708();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2356A5BC8((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_23565C0F8();
  sub_23594A6C8();
  MEMORY[0x237DE8250](0, v16, v8, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

id sub_2356A0220(char *a1, uint64_t a2, void *a3, int a4)
{
  int v144 = a4;
  uint64_t v160 = a3;
  uint64_t v149 = a2;
  uint64_t v5 = 0;
  uint64_t v6 = type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x270FA5388](v6, v7, v8, v9, v10);
  uint64_t v142 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for DetectedDoor(0);
  uint64_t v150 = *(void *)(v155 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v155 - 8, v12, v13, v14, v15);
  uint64_t v148 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v18, v19, v20, v21);
  id v23 = (char **)((char *)&v141 - v22);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FD60);
  uint64_t v29 = MEMORY[0x270FA5388](v24 - 8, v25, v26, v27, v28);
  uint64_t v159 = (uint64_t *)((char *)&v141 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v29, v31, v32, v33, v34);
  uint64_t v158 = (double *)((char *)&v141 - v35);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FD68);
  uint64_t v41 = MEMORY[0x270FA5388](v36 - 8, v37, v38, v39, v40);
  uint64_t v147 = (char *)&v141 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41, v43, v44, v45, v46);
  uint64_t v152 = (uint64_t)&v141 - v47;
  id v48 = &a1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorDetectionDoorBoxLayers];
  swift_beginAccess();
  uint64_t v49 = *(void *)v48;
  uint64_t v50 = *(void *)v48 >> 62;
  uint64_t v143 = v6;
  if (v50)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_23594A998();
    uint64_t v51 = (uint64_t)result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v51 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (!v51) {
      goto LABEL_10;
    }
  }
  if (v51 < 1)
  {
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  for (uint64_t i = 0; i != v51; ++i)
  {
    if ((v49 & 0xC000000000000001) != 0) {
      id v54 = (id)MEMORY[0x237DE87D0](i, v49);
    }
    else {
      id v54 = *(id *)(v49 + 8 * i + 32);
    }
    uint64_t v55 = v54;
    objc_msgSend(v54, sel_removeFromSuperlayer);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v56 = MEMORY[0x263F8EE78];
  *(void *)id v48 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  uint64_t v169 = v56;
  uint64_t v57 = v149;
  if (*(void *)(v149 + 16))
  {
    uint64_t v58 = v150;
    uint64_t v59 = v152;
    sub_2356A45E4(v149 + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80)), v152, type metadata accessor for DetectedDoor);
    CGRect v60 = *(void (**)(uint64_t, void, uint64_t, int *))(v58 + 56);
    CGRect v61 = (int *)v155;
    uint64_t v146 = v58 + 56;
    uint64_t v145 = v60;
    v60(v59, 0, 1, (int *)v155);
  }
  else
  {
    CGRect v62 = *(void (**)(uint64_t, void, uint64_t, int *))(v150 + 56);
    CGRect v61 = (int *)v155;
    uint64_t v146 = v150 + 56;
    uint64_t v145 = v62;
    v62(v152, 1, 1, (int *)v155);
  }
  CGRect v63 = v158;
  uint64_t v167 = 0;
  uint64_t v168 = 0;
  uint64_t v166 = v57;
  uint64_t v154 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorDetectionService;
  id v151 = (CGFloat *)&a1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorDecorationsCache];
  uint64_t v156 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView;
  swift_bridgeObjectRetain();
  float v64 = 3.4028e38;
  uint64_t v153 = MEMORY[0x263F8EE58] + 8;
LABEL_14:
  float v157 = v64;
  while (1)
  {
    CGRect v65 = v159;
    sub_2357D558C(v159);
    sub_23566A348((uint64_t)v65, (uint64_t)v63, &qword_26880FD60);
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2688109C0);
    if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 48))(v63, 1, v66) == 1) {
      break;
    }
    CGFloat v67 = *v63;
    sub_2356A464C((uint64_t)v63 + *(int *)(v66 + 48), (uint64_t)v23, type metadata accessor for DetectedDoor);
    uint64_t v69 = (char *)v23 + v61[10];
    if ((v69[4] & 1) != 0 || (LODWORD(v68) = *(_DWORD *)v69, *(float *)v69 > 4.0))
    {
      unint64_t v70 = sub_23582CC34(v160, *(CGFloat *)((char *)v23 + v61[6]), *(CGFloat *)((char *)v23 + v61[6] + 8), *(CGFloat *)((char *)v23 + v61[6] + 16), *(CGFloat *)((char *)v23 + v61[6] + 24));
      *(_DWORD *)uint64_t v69 = v70;
      v69[4] = BYTE4(v70) & 1;
    }
    uint64_t v71 = (CGFloat *)((char *)v23 + v61[6]);
    CGFloat v72 = *v71;
    CGFloat v73 = v71[1];
    CGFloat v74 = v71[2];
    CGFloat v75 = v71[3];
    id result = objc_msgSend(a1, sel_view, v68);
    if (!result) {
      goto LABEL_61;
    }
    uint64_t v76 = result;
    objc_msgSend(result, sel_bounds);
    double v78 = v77;
    double v80 = v79;

    objc_msgSend(v160, sel_displayTransformForOrientation_viewportSize_, 1, v78, v80);
    long long v162 = *(_OWORD *)&t1.a;
    long long v161 = *(_OWORD *)&t1.c;
    tdouble x = t1.tx;
    tdouble y = t1.ty;
    CGAffineTransformMakeScale(&t1, v78, v80);
    long long v83 = *(_OWORD *)&t1.a;
    long long v84 = *(_OWORD *)&t1.c;
    long long v85 = *(_OWORD *)&t1.tx;
    *(_OWORD *)&t1.double a = v162;
    *(_OWORD *)&t1.double c = v161;
    t1.tdouble x = tx;
    t1.tdouble y = ty;
    *(_OWORD *)&t2.double a = v83;
    *(_OWORD *)&t2.double c = v84;
    *(_OWORD *)&t2.tdouble x = v85;
    CGAffineTransformConcat(&v163, &t1, &t2);
    CGAffineTransform t1 = v163;
    v170.origin.double x = v72;
    v170.origin.double y = v73;
    v170.size.double width = v74;
    v170.size.double height = v75;
    CGRect v171 = CGRectApplyAffineTransform(v170, &t1);
    double x = v171.origin.x;
    double y = v171.origin.y;
    double width = v171.size.width;
    double height = v171.size.height;
    if (AXIsInternalInstall())
    {
      sub_2356A10EC((uint64_t)v23, x, y, width, height);
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      uint64_t v90 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
      swift_beginAccess();
      CGFloat v91 = *(double *)(v90 + 8);
      char v92 = *(unsigned char *)(v90 + 16);
      t1.double a = *(CGFloat *)v90;
      t1.double b = v91;
      LOBYTE(t1.c) = v92;
      uint64_t v93 = qword_26AF144C0;
      uint64_t v94 = swift_bridgeObjectRetain();
      if (v93 != -1) {
        uint64_t v94 = swift_once();
      }
      MEMORY[0x270FA5388](v94, v95, v96, v97, v98);
      *(&v141 - 2) = (uint64_t)&t1;
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      if (LOBYTE(t2.a) == 1)
      {
        uint64_t v99 = *(uint64_t *)((char *)v23 + v61[12]);
        if (v99)
        {
          if (*(void *)(v99 + 16))
          {
            t1.double a = v67;
            swift_bridgeObjectRetain();
            uint64_t v100 = sub_23594AB48();
            *(void *)&long long v162 = v5;
            uint64_t v101 = v100;
            uint64_t v103 = v102;
            uint64_t v104 = v151;
            swift_beginAccess();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            t2.double a = *v104;
            *uint64_t v104 = -0.0;
            uint64_t v106 = v101;
            uint64_t v5 = v162;
            sub_23594086C(v99, v106, v103, isUniquelyReferenced_nonNull_native);
            *uint64_t v104 = t2.a;
            CGRect v61 = (int *)v155;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
          }
        }
      }
    }
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (LOBYTE(t1.a) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23569EEF0();
      sub_2356A46B4((uint64_t)v23, type metadata accessor for DetectedDoor);
      uint64_t v128 = v152;
      return (id)sub_2356A41B4(v128);
    }
    id v107 = sub_23569F688(x, y, width, height, (uint64_t)v23, *(uint64_t *)&v67);
    swift_beginAccess();
    id v108 = v107;
    MEMORY[0x237DE7CE0]();
    if (*(void *)((*(void *)v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v48 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      sub_235949DA8();
    sub_235949DD8();
    sub_235949D98();
    swift_endAccess();
    uint64_t v109 = sub_2356A1C30(v23, x, y, width, height);
    MEMORY[0x237DE7CE0]();
    if (*(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_235949DA8();
    }
    sub_235949DD8();
    sub_235949D98();
    uint64_t v110 = *(void **)&a1[v156];
    float v64 = v157;
    if (v110)
    {
      id v111 = v110;
      unint64_t v112 = swift_bridgeObjectRetain();
      sub_23592CE68(v112);
      swift_bridgeObjectRelease();
      uint64_t v113 = (void *)sub_235949D58();
      CGRect v61 = (int *)v155;
      swift_bridgeObjectRelease();
      objc_msgSend(v111, sel_setAccessibilityElements_, v113);
    }
    if (v69[4])
    {
      *(float *)&int v114 = 3.4028e38;
      if (v64 > 3.4028e38) {
        goto LABEL_43;
      }
    }
    else
    {
      int v114 = *(int *)v69;
      if (*(float *)v69 < v64)
      {
LABEL_43:
        uint64_t v115 = v152;
        sub_2356A41B4(v152);
        sub_2356A45E4((uint64_t)v23, v115, type metadata accessor for DetectedDoor);
        v145(v115, 0, 1, v61);
        char v116 = (char *)sub_23587F0FC();
        sub_2356A42B8((uint64_t)v23);
        uint64_t v118 = v117;
        id v119 = objc_msgSend(v117, sel_string);

        uint64_t v120 = sub_235949AC8();
        uint64_t v122 = v121;

        CGRect v61 = (int *)v155;
        sub_2356A46B4((uint64_t)v23, type metadata accessor for DetectedDoor);
        uint64_t v123 = (uint64_t *)&v116[OBJC_IVAR____TtC16MagnifierSupport17MFLivePreviewView_textValue];
        uint64_t *v123 = v120;
        v123[1] = v122;

        swift_bridgeObjectRelease();
        float v64 = *(float *)&v114;
        CGRect v63 = v158;
        goto LABEL_14;
      }
    }
    sub_2356A46B4((uint64_t)v23, type metadata accessor for DetectedDoor);

    CGRect v63 = v158;
  }
  swift_bridgeObjectRelease();
  id result = (id)swift_bridgeObjectRelease();
  uint64_t v124 = (uint64_t)v148;
  uint64_t v125 = v152;
  uint64_t v126 = (uint64_t)v147;
  if (v64 >= 3.4028e38)
  {
LABEL_49:
    sub_2356A414C(v125, v126);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v150 + 48))(v126, 1, v61) == 1)
    {
      sub_2356A41B4(v125);
      uint64_t v128 = v126;
    }
    else
    {
      sub_2356A464C(v126, v124, type metadata accessor for DetectedDoor);
      if (v144)
      {
        double v129 = (id *)(*(void *)&a1[v154]
                    + OBJC_IVAR____TtC16MagnifierSupport23MAGDoorDetectionService_openStateConfidenceThreshold);
        swift_beginAccess();
        id v130 = *v129;
        sub_235949FB8();
        int v132 = v131;

        uint64_t v133 = v143;
        uint64_t v134 = (uint64_t)v142;
        uint64_t v135 = (uint64_t)&v142[*(int *)(v143 + 20)];
        uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FD40);
        uint64_t v137 = v124;
        uint64_t v138 = *(int *)(v136 + 48);
        uint64_t v139 = *(int *)(v136 + 64);
        sub_2356A45E4(v137, v135, type metadata accessor for DetectedDoor);
        *(void *)(v135 + v138) = v149;
        *(_DWORD *)(v135 + v139) = v132;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        sub_235947968();
        *(unsigned char *)(v134 + *(int *)(v133 + 24)) = 1;
        *(unsigned char *)(v134 + *(int *)(v133 + 28)) = 0;
        sub_235741600(v134);
        sub_2356A46B4(v134, type metadata accessor for MAGOutputEvent);
        uint64_t v140 = v137;
      }
      else
      {
        uint64_t v140 = v124;
      }
      sub_2356A46B4(v140, type metadata accessor for DetectedDoor);
      uint64_t v128 = v125;
    }
    return (id)sub_2356A41B4(v128);
  }
  float v127 = v64 * 1000.0;
  if ((~COERCE_INT(v64 * 1000.0) & 0x7F800000) == 0) {
    goto LABEL_58;
  }
  if (v127 > -2147500000.0)
  {
    if (v127 >= 2147500000.0) {
      goto LABEL_60;
    }
    sub_23585C700((int)v127);
    goto LABEL_49;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_2356A10EC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_26880FD70);
  uint64_t v13 = *(v12 - 1);
  MEMORY[0x270FA5388](v12, v14, v15, v16, v17);
  uint64_t v19 = (char *)v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FD78);
  uint64_t v25 = MEMORY[0x270FA5388](v20 - 8, v21, v22, v23, v24);
  int v132 = (char *)v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25, v27, v28, v29, v30);
  int v131 = (char *)v102 - v31;
  uint64_t v126 = sub_235947908();
  uint64_t v32 = *(void (***)(char *, uint64_t))(v126 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v126, v33, v34, v35, v36);
  uint64_t v125 = (char *)v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37, v39, v40, v41, v42);
  uint64_t v44 = (char *)v102 - v43;
  uint64_t v45 = type metadata accessor for DoorAttributesCacheItem(0);
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v45, v47, v48, v49, v50);
  uint64_t v135 = (void *)((char *)v102 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v51, v53, v54, v55, v56);
  uint64_t v58 = (char *)v102 - v57;
  uint64_t result = type metadata accessor for DetectedDoor(0);
  CGRect v60 = (unint64_t *)(a1 + *(int *)(result + 44));
  unint64_t v61 = v60[10];
  if (v61)
  {
    uint64_t v130 = v46;
    uint64_t v124 = v32;
    uint64_t v133 = v13;
    uint64_t v128 = v19;
    unint64_t v108 = v60[9];
    double v129 = v6;
    unint64_t v62 = v60[8];
    unint64_t v107 = v60[7];
    unint64_t v63 = v60[5];
    unint64_t v106 = v60[6];
    unint64_t v64 = *v60;
    unint64_t v105 = v60[1];
    unint64_t v113 = HIDWORD(v64);
    unint64_t v115 = HIDWORD(v105);
    unint64_t v65 = v60[4];
    unint64_t v109 = v60[3];
    unint64_t v103 = v60[2];
    unint64_t v66 = v103;
    unint64_t v116 = HIDWORD(v103);
    unint64_t v117 = HIDWORD(v109);
    unint64_t v119 = HIDWORD(v65);
    uint64_t v120 = (char *)HIDWORD(v63);
    unint64_t v121 = HIDWORD(v106);
    uint64_t v122 = (void *)HIDWORD(v107);
    uint64_t v123 = (void (**)(char *, uint64_t, uint64_t))HIDWORD(v62);
    unint64_t v127 = HIDWORD(v108);
    int v110 = v64 & 1;
    int v112 = v65 & 1;
    int v114 = v63 & 1;
    int v118 = v62 & 1;
    unint64_t v104 = v60[11];
    unint64_t v67 = v61;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810A50);
    uint64_t v68 = swift_allocObject();
    uint64_t v111 = v68;
    *(_OWORD *)(v68 + 16) = xmmword_23594FD70;
    *(_OWORD *)(v68 + 32) = 0u;
    uint64_t v69 = *(int *)(v45 + 28);
    uint64_t v134 = v45;
    v102[1] = &v58[v69];
    char v70 = v105;
    v137[0] = v64;
    v137[1] = v105;
    v137[2] = v66;
    LOBYTE(v66) = v109;
    v137[3] = v109;
    v137[4] = v65;
    v137[5] = v63;
    LOBYTE(v63) = v106;
    LOBYTE(v64) = v107;
    v137[6] = v106;
    v137[7] = v107;
    LOBYTE(v65) = v108;
    v137[8] = v62;
    v137[9] = v108;
    unint64_t v71 = v104;
    v137[10] = v67;
    v137[11] = v104;
    sub_2356A45AC((uint64_t)v137);
    sub_2359478F8();
    char *v58 = v110;
    *((_DWORD *)v58 + 1) = v113;
    v58[8] = v70;
    *((_DWORD *)v58 + 3) = v115;
    v58[16] = v103;
    *((_DWORD *)v58 + 5) = v116;
    v58[24] = v66;
    *((_DWORD *)v58 + 7) = v117;
    v58[32] = v112;
    *((_DWORD *)v58 + 9) = v119;
    v58[40] = v114;
    *((_DWORD *)v58 + 11) = v120;
    v58[48] = v63;
    *((_DWORD *)v58 + 13) = v121;
    v58[56] = v64;
    *((_DWORD *)v58 + 15) = v122;
    v58[64] = v118;
    *((_DWORD *)v58 + 17) = v123;
    v58[72] = v65;
    *((_DWORD *)v58 + 19) = v127;
    *((void *)v58 + 10) = v67;
    *((void *)v58 + 11) = v71;
    *((_OWORD *)v58 + 6) = 0u;
    *((void *)v58 + 14) = v111;
    CGFloat v72 = (double *)&v58[*(int *)(v134 + 32)];
    *CGFloat v72 = a2;
    v72[1] = a3;
    v72[2] = a4;
    v72[3] = a5;
    uint64_t v120 = v58;
    uint64_t v73 = (uint64_t)v58;
    CGFloat v74 = v135;
    sub_2356A45E4(v73, (uint64_t)v135, type metadata accessor for DoorAttributesCacheItem);
    CGFloat v75 = (uint64_t *)&v129[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorAttributesCache];
    swift_beginAccess();
    uint64_t v76 = *v75;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *CGFloat v75 = v76;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_38:
      uint64_t v76 = sub_2356CDFF4(0, *(void *)(v76 + 16) + 1, 1, v76);
      *CGFloat v75 = v76;
    }
    unint64_t v79 = *(void *)(v76 + 16);
    unint64_t v78 = *(void *)(v76 + 24);
    if (v79 >= v78 >> 1)
    {
      uint64_t v76 = sub_2356CDFF4(v78 > 1, v79 + 1, 1, v76);
      *CGFloat v75 = v76;
    }
    *(void *)(v76 + 16) = v79 + 1;
    unint64_t v80 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v81 = *(void *)(v130 + 72);
    sub_2356A464C((uint64_t)v74, v76 + v80 + v81 * v79, type metadata accessor for DoorAttributesCacheItem);
    swift_endAccess();
    sub_2359478F8();
    uint64_t v82 = *v75;
    uint64_t v135 = (void *)v80;
    unint64_t v127 = v82 + v80;
    uint64_t v83 = *(void *)(v82 + 16);
    uint64_t v130 = v133 + 56;
    double v129 = (char *)(v133 + 48);
    uint64_t v123 = (void (**)(char *, uint64_t, uint64_t))(v124 + 2);
    ++v124;
    uint64_t v133 = v82;
    swift_bridgeObjectRetain();
    uint64_t v84 = 0;
    unint64_t v121 = 0;
    uint64_t v122 = (void *)MEMORY[0x263F8EE78];
    long long v85 = v125;
    while (1)
    {
      if (v83)
      {
        --v83;
        CGFloat v74 = v132;
        if (v83 >= *(void *)(v133 + 16))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        uint64_t v76 = (uint64_t)&v128[*((int *)v12 + 12)];
        sub_2356A45E4(v127 + v83 * v81, v76, type metadata accessor for DoorAttributesCacheItem);
        if (__OFADD__(v84, 1)) {
          goto LABEL_37;
        }
        uint64_t v86 = (uint64_t)v74 + *((int *)v12 + 12);
        *CGFloat v74 = v84;
        sub_2356A464C(v76, v86, type metadata accessor for DoorAttributesCacheItem);
        uint64_t v87 = 0;
        ++v84;
      }
      else
      {
        uint64_t v87 = 1;
        CGFloat v74 = v132;
      }
      uint64_t v88 = (uint64_t *)v131;
      (*(void (**)(void *, uint64_t, uint64_t, void *))v130)(v74, v87, 1, v12);
      sub_23566A348((uint64_t)v74, (uint64_t)v88, &qword_26880FD78);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, void *))v129)(v88, 1, v12) == 1) {
        break;
      }
      uint64_t v89 = *v88;
      uint64_t v76 = (uint64_t)v88 + *((int *)v12 + 12);
      uint64_t v90 = v126;
      (*v123)(v85, v76 + *(int *)(v134 + 28), v126);
      sub_2356A46B4(v76, type metadata accessor for DoorAttributesCacheItem);
      sub_235947848();
      double v92 = v91;
      (*v124)(v85, v90);
      if (v92 > 1.0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v122 = sub_2356CDB20(0, v122[2] + 1, 1, v122);
        }
        unint64_t v94 = v122[2];
        unint64_t v93 = v122[3];
        uint64_t v76 = v94 + 1;
        if (v94 >= v93 >> 1) {
          uint64_t v122 = sub_2356CDB20((void *)(v93 > 1), v94 + 1, 1, v122);
        }
        uint64_t v95 = v122;
        v122[2] = v76;
        v95[v94 + 4] = v89;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v136 = v122;
    swift_bridgeObjectRetain();
    unint64_t v96 = v121;
    sub_2356A2FC0((uint64_t *)&v136);
    if (v96) {
      goto LABEL_40;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = v136;
    uint64_t v97 = v136[2];
    if (v97)
    {
      while (1)
      {
        if (v97 > v12[2])
        {
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        unint64_t v98 = v12[v97 + 3];
        swift_beginAccess();
        uint64_t v76 = *v75;
        char v99 = swift_isUniquelyReferenced_nonNull_native();
        *CGFloat v75 = v76;
        if ((v99 & 1) == 0)
        {
          uint64_t v76 = sub_2357007E0(v76);
          *CGFloat v75 = v76;
        }
        unint64_t v100 = *(void *)(v76 + 16);
        if (v98 >= v100) {
          goto LABEL_35;
        }
        unint64_t v101 = v100 - 1;
        CGFloat v74 = (void *)((char *)v135 + v76 + v98 * v81);
        sub_2356A46B4((uint64_t)v74, type metadata accessor for DoorAttributesCacheItem);
        if ((uint64_t)(v101 - v98) < 0) {
          break;
        }
        if (v81 > 0 || v74 >= (void *)((char *)v74 + v81 + (v101 - v98) * v81))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v81)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        --v97;
        *(void *)(v76 + 16) = v101;
        *CGFloat v75 = v76;
        swift_endAccess();
        if (!v97) {
          goto LABEL_32;
        }
      }
      sub_23594A9E8();
      __break(1u);
LABEL_40:
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
LABEL_32:
    swift_release();
    (*v124)(v44, v126);
    return sub_2356A46B4((uint64_t)v120, type metadata accessor for DoorAttributesCacheItem);
  }
  return result;
}

char *sub_2356A1C30(char **i, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = *(void **)(v5 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  id v12 = objc_allocWithZone((Class)type metadata accessor for DoorUIAccessibilityElement());
  id v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FD80);
  id v14 = objc_msgSend(v12, sel_initWithAccessibilityContainer_, sub_23594ABE8());

  swift_unknownObjectRelease();
  uint64_t v15 = self;
  uint64_t v16 = (char *)v14;
  id v17 = objc_msgSend(v15, sel_bezierPathWithRoundedRect_cornerRadius_, a2, a3, a4, a5, 16.0);
  objc_msgSend(v16, sel_setAccessibilityPath_, v17);

  sub_2356A421C((uint64_t)i);
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v19 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v20 = (void *)sub_235949A88();
  uint64_t v21 = (void *)sub_235949A88();
  id v22 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, 0, v21);

  sub_235949AC8();
  swift_bridgeObjectRetain();
  sub_235949BD8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_235949BD8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2356A42B8((uint64_t)i);
  uint64_t v24 = v23;
  if (qword_26AF13B78 != -1) {
LABEL_54:
  }
    swift_once();
  int v110 = v24;
  swift_beginAccess();
  uint64_t v25 = qword_26AF144C0;
  uint64_t v26 = swift_bridgeObjectRetain();
  if (v25 != -1) {
    uint64_t v26 = swift_once();
  }
  MEMORY[0x270FA5388](v26, v27, v28, v29, v30);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  if ((v120 & 1) == 0)
  {
    uint64_t v31 = swift_beginAccess();
    MEMORY[0x270FA5388](v31, v32, v33, v34, v35);
    swift_bridgeObjectRetain();
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    if ((v119 & 1) == 0)
    {
      uint64_t v36 = v16;
      uint64_t v37 = (void *)sub_235949A88();
      objc_msgSend(v36, sel_setAccessibilityLabel_, v37);

      sub_2356594B0(0, (unint64_t *)&unk_26880FD88);
      uint64_t v38 = (void *)sub_235949D58();
      objc_msgSend(v36, sel_setAccessibilityCustomContent_, v38);
    }
  }
  uint64_t v39 = swift_beginAccess();
  MEMORY[0x270FA5388](v39, v40, v41, v42, v43);
  swift_bridgeObjectRetain();
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  uint64_t v44 = v110;
  if (v118 == 1)
  {
    uint64_t v45 = *(uint64_t *)((char *)i + *(int *)(type metadata accessor for DetectedDoor(0) + 48));
    if (v45)
    {
      uint64_t v46 = v16;
      sub_2356A4714(v45);
      sub_2356594B0(0, (unint64_t *)&unk_26880FD88);
      uint64_t v47 = (void *)sub_235949D58();
      swift_bridgeObjectRelease();
      objc_msgSend(v46, sel_setAccessibilityCustomContent_, v47);

      id v48 = objc_allocWithZone(MEMORY[0x263F089B8]);
      swift_bridgeObjectRetain();
      uint64_t v49 = (void *)sub_235949A88();
      swift_bridgeObjectRelease();
      id v50 = objc_msgSend(v48, sel_initWithString_, v49);

      id v51 = sub_2356A52A0(v45);
      if ((uint64_t)objc_msgSend(v51, sel_length) >= 1)
      {
        id v52 = objc_allocWithZone(MEMORY[0x263F089B8]);
        uint64_t v53 = (void *)sub_235949A88();
        id v54 = objc_msgSend(v52, sel_initWithString_, v53);

        objc_msgSend(v50, sel_appendAttributedString_, v54);
        objc_msgSend(v50, sel_appendAttributedString_, v51);
      }
      objc_msgSend(v46, sel_setAccessibilityAttributedLabel_, v50);

      uint64_t v44 = v110;
    }
  }
  uint64_t v55 = swift_beginAccess();
  MEMORY[0x270FA5388](v55, v56, v57, v58, v59);
  swift_bridgeObjectRetain();
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  if (v117 != 1) {
    goto LABEL_46;
  }
  CGRect v60 = &selRef_didToggleFlashlightSwitch_;
  if (!*(char **)((char *)i + *(int *)(type metadata accessor for DetectedDoor(0) + 44) + 80))
  {
LABEL_43:
    uint64_t v88 = swift_beginAccess();
    MEMORY[0x270FA5388](v88, v89, v90, v91, v92);
    swift_bridgeObjectRetain();
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    if (v116 == 1)
    {
      id v93 = objc_allocWithZone(MEMORY[0x263F089B8]);
      unint64_t v94 = (void *)sub_235949A88();
      id v95 = objc_msgSend(v93, v60[179], v94);

      id v96 = objc_msgSend(v16, sel_accessibilityAttributedLabel);
      if (v96)
      {
        uint64_t v97 = v96;
        swift_bridgeObjectRelease();
        id v98 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_initWithAttributedString_, v97);
      }
      else
      {
        id v99 = objc_allocWithZone(MEMORY[0x263F089B8]);
        uint64_t v97 = (void *)sub_235949A88();
        swift_bridgeObjectRelease();
        id v98 = objc_msgSend(v99, v60[179], v97);
      }
      unint64_t v100 = v98;

      if ((uint64_t)objc_msgSend(v44, sel_length) >= 1)
      {
        id v101 = objc_allocWithZone(MEMORY[0x263F089B8]);
        uint64_t v102 = (void *)sub_235949A88();
        id v103 = objc_msgSend(v101, v60[179], v102);

        objc_msgSend(v100, sel_appendAttributedString_, v103);
        objc_msgSend(v100, sel_appendAttributedString_, v44);
        unint64_t v104 = v16;
        objc_msgSend(v104, sel_setAccessibilityAttributedLabel_, v100);
      }
      goto LABEL_51;
    }
LABEL_46:
    swift_bridgeObjectRelease();
LABEL_51:
    id v105 = objc_msgSend(v44, sel_string);
    uint64_t v106 = sub_235949AC8();
    uint64_t v108 = v107;

    unint64_t v109 = (uint64_t *)&v16[OBJC_IVAR____TtC16MagnifierSupport26DoorUIAccessibilityElement_textValue];
    uint64_t *v109 = v106;
    v109[1] = v108;

    swift_bridgeObjectRelease();
    return v16;
  }
  unint64_t v61 = sub_2357F7ACC();
  uint64_t v24 = 0;
  unint64_t v111 = v61 + 64;
  uint64_t v62 = 1 << *(unsigned char *)(v61 + 32);
  uint64_t v63 = -1;
  if (v62 < 64) {
    uint64_t v63 = ~(-1 << v62);
  }
  uint64_t v64 = v63 & *(void *)(v61 + 64);
  int64_t v112 = (unint64_t)(v62 + 63) >> 6;
  for (uint64_t i = &selRef_didToggleFlashlightSwitch_; ; uint64_t i = v84)
  {
    if (v64)
    {
      uint64_t v113 = (v64 - 1) & v64;
      int64_t v114 = (int64_t)v24;
    }
    else
    {
      int64_t v66 = (int64_t)v24 + 1;
      if (__OFADD__(v24, 1))
      {
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      if (v66 >= v112) {
        goto LABEL_42;
      }
      uint64_t v67 = *(void *)(v111 + 8 * v66);
      int64_t v68 = (int64_t)v24 + 1;
      if (!v67)
      {
        int64_t v68 = (int64_t)v24 + 2;
        if ((uint64_t)v24 + 2 >= v112) {
          goto LABEL_42;
        }
        uint64_t v67 = *(void *)(v111 + 8 * v68);
        if (!v67)
        {
          int64_t v68 = (int64_t)v24 + 3;
          if ((uint64_t)v24 + 3 >= v112) {
            goto LABEL_42;
          }
          uint64_t v67 = *(void *)(v111 + 8 * v68);
          if (!v67)
          {
            uint64_t v69 = (uint64_t)v24 + 4;
            if ((uint64_t)v24 + 4 >= v112)
            {
LABEL_42:
              swift_release();
              uint64_t v44 = v110;
              goto LABEL_43;
            }
            uint64_t v67 = *(void *)(v111 + 8 * v69);
            if (!v67)
            {
              while (1)
              {
                int64_t v68 = v69 + 1;
                if (__OFADD__(v69, 1)) {
                  goto LABEL_53;
                }
                if (v68 >= v112) {
                  goto LABEL_42;
                }
                uint64_t v67 = *(void *)(v111 + 8 * v68);
                ++v69;
                if (v67) {
                  goto LABEL_34;
                }
              }
            }
            int64_t v68 = (int64_t)v24 + 4;
          }
        }
      }
LABEL_34:
      uint64_t v113 = (v67 - 1) & v67;
      int64_t v114 = v68;
    }
    id v70 = objc_allocWithZone(MEMORY[0x263F086A0]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v71 = (void *)sub_235949A88();
    id v72 = objc_msgSend(v70, v60[179], v71);
    swift_bridgeObjectRelease();

    id v73 = objc_allocWithZone(MEMORY[0x263F086A0]);
    CGFloat v74 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    id v75 = objc_msgSend(v73, v60[179], v74);

    unint64_t v115 = v72;
    id v76 = objc_msgSend(self, sel_customContentWithAttributedLabel_attributedValue_, v72, v75);
    id v77 = [v16 i[189]];
    unint64_t v78 = i;
    if (!v77)
    {
      sub_2356594B0(0, (unint64_t *)&unk_26880FD88);
      unint64_t v79 = v16;
      id v77 = (id)sub_235949D58();
      objc_msgSend(v79, sel_setAccessibilityCustomContent_, v77);
    }
    unint64_t v80 = v60;

    uint64_t v81 = v16;
    uint64_t v82 = v16;
    id v83 = v76;
    uint64_t v84 = v78;
    uint64_t result = (char *)[v82 (SEL)v78 + 3426];
    if (!result) {
      break;
    }
    uint64_t v86 = result;
    sub_2356594B0(0, (unint64_t *)&unk_26880FD88);
    uint64_t v87 = sub_235949D78();

    uint64_t v117 = v87;
    MEMORY[0x237DE7CE0]();
    if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_235949DA8();
    }
    sub_235949DD8();
    sub_235949D98();
    if (v87)
    {
      unint64_t v65 = (void *)sub_235949D58();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v65 = 0;
    }
    CGRect v60 = v80;
    uint64_t v24 = (void *)v114;
    uint64_t v64 = v113;
    objc_msgSend(v82, sel_setAccessibilityCustomContent_, v65);

    uint64_t v16 = v81;
  }
  __break(1u);
  return result;
}

uint64_t sub_2356A2B00(uint64_t a1)
{
  sub_23569EEF0();
  uint64_t v2 = (id *)(*(void *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pulseFeedbackProcessor)
            + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_doorToneGenerator);
  swift_beginAccess();
  objc_msgSend(*v2, sel_stopPulse);
  uint64_t v3 = (char *)sub_23587F0FC();
  uint64_t v4 = &v3[OBJC_IVAR____TtC16MagnifierSupport17MFLivePreviewView_textValue];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0xE000000000000000;

  swift_bridgeObjectRelease();
  unsigned __int8 v6 = 2;
  return sub_23574B17C(&v6);
}

id sub_2356A2BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268812E70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23594FD70;
  uint64_t v9 = (void *)*MEMORY[0x263F83218];
  *(void *)(inited + 32) = *MEMORY[0x263F83218];
  int v10 = *(unsigned __int8 *)(a5 + 48);
  if (v10 == 1)
  {
    id v11 = v9;
    swift_bridgeObjectRetain();
    uint64_t v12 = a3;
    uint64_t v13 = a4;
  }
  else
  {
    id v14 = self;
    id v15 = v9;
    id v16 = objc_msgSend(v14, sel_currentLanguageCode);
    uint64_t v12 = sub_235949AC8();
    uint64_t v13 = v17;
  }
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v12;
  *(void *)(inited + 48) = v13;
  sub_23566DBA8(inited);
  if (sub_2357C5B18(a3, a4, v10))
  {
    id v18 = objc_allocWithZone(MEMORY[0x263F086A0]);
    swift_bridgeObjectRetain();
    id v19 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_0(0);
    sub_2356A5BC8((unint64_t *)&qword_26880EE20, _s3__C3KeyVMa_0);
    uint64_t v20 = (void *)sub_235949968();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v21;
}

id sub_2356A2DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268812E70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23594FD70;
  uint64_t v9 = (void *)*MEMORY[0x263F83218];
  *(void *)(inited + 32) = *MEMORY[0x263F83218];
  int v10 = *(unsigned __int8 *)(a5 + *(int *)(type metadata accessor for DetectedTextBlock() + 32));
  if (v10 == 1)
  {
    id v11 = v9;
    swift_bridgeObjectRetain();
    uint64_t v12 = a3;
    uint64_t v13 = a4;
  }
  else
  {
    id v14 = self;
    id v15 = v9;
    id v16 = objc_msgSend(v14, sel_currentLanguageCode);
    uint64_t v12 = sub_235949AC8();
    uint64_t v13 = v17;
  }
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v12;
  *(void *)(inited + 48) = v13;
  sub_23566DBA8(inited);
  if (sub_2357C5B18(a3, a4, v10))
  {
    id v18 = objc_allocWithZone(MEMORY[0x263F086A0]);
    swift_bridgeObjectRetain();
    id v19 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_0(0);
    sub_2356A5BC8((unint64_t *)&qword_26880EE20, _s3__C3KeyVMa_0);
    uint64_t v20 = (void *)sub_235949968();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v21;
}

uint64_t sub_2356A2FC0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2356EB518(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2356A302C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2356A302C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_23594AB38();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      id v11 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          uint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_2356A36B8((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_2356EB304((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          id v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_235949DC8();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  id v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      id v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        uint64_t v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *uint64_t v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v11 = sub_2356EAB30(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      id v77 = sub_2356EAB30((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      id v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            int64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        unint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        id v73 = v29;
        CGFloat v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_2356A36B8((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)unint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_23594A958();
  __break(1u);
  return result;
}

uint64_t sub_2356A36B8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      id v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            id v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    id v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_2356EB020((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

id sub_2356A3928@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  long long v9 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  uint64_t v12[3] = v9;
  uint64_t v13 = *(void *)(a2 + 64);
  long long v10 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v10;
  id result = sub_2356A2BBC(v5, v6, v7, v8, (uint64_t)v12);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_2356A3994()
{
  return swift_deallocObject();
}

id sub_2356A39CC()
{
  return sub_23569F2E8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_2356A39DC(void *a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v8 - 8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v36[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)(qword_26AF181E0
                 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedDoorDetectionFeedbacks);
  swift_beginAccess();
  uint64_t v16 = v15[1];
  uint64_t v17 = v15[2];
  v36[0] = *v15;
  v36[1] = v16;
  void v36[2] = v17;
  uint64_t v18 = qword_26AF144C0;
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  if (v18 != -1) {
    uint64_t v19 = swift_once();
  }
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  *(&v35 - 2) = (uint64_t)v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15110);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v24 = 1;
  BOOL v25 = sub_2356BFD20(1, v36[3]);
  swift_bridgeObjectRelease();
  if (v25)
  {
    id v26 = sub_235746F18();
    unsigned __int8 v27 = objc_msgSend(v26, sel_isSpeaking);

    char v24 = v27 ^ 1;
  }
  uint64_t v28 = sub_235949EA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v14, 1, 1, v28);
  sub_235949E78();
  id v29 = v4;
  id v30 = a1;
  uint64_t v31 = sub_235949E68();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = MEMORY[0x263F8F500];
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = v33;
  *(void *)(v32 + 32) = v29;
  *(void *)(v32 + 40) = v30;
  *(double *)(v32 + 48) = a2;
  *(double *)(v32 + 56) = a3;
  *(unsigned char *)(v32 + 64) = v24;
  sub_2356C0210((uint64_t)v14, (uint64_t)&unk_26880FD58, v32);
  return swift_release();
}

uint64_t sub_2356A3CA4()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2356A3CEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  double v8 = *(double *)(v1 + 48);
  double v9 = *(double *)(v1 + 56);
  char v10 = *(unsigned char *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_23566A050;
  return sub_23569F38C(v8, v9, a1, v4, v5, v6, v7, v10);
}

uint64_t sub_2356A3DC8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_2359496D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_235949738();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t result = MEMORY[0x270FA5388](v16, v18, v19, v20, v21);
  char v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (*(void *)(a1 + 16))
    {
      sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
      uint64_t v31 = v9;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_23594A288();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v4;
      *(void *)(v25 + 24) = a1;
      *(void *)(v25 + 32) = a2;
      *(unsigned char *)(v25 + 40) = a3 & 1;
      aBlock[4] = sub_2356A4134;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_2357A194C;
      void aBlock[3] = &block_descriptor_20;
      id v26 = _Block_copy(aBlock);
      id v27 = v4;
      id v28 = a2;
      swift_release();
      sub_235949708();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_2356A5BC8((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
      sub_23565C0F8();
      sub_23594A6C8();
      id v29 = (void *)v30;
      MEMORY[0x237DE8250](0, v24, v15, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v8);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    }
    else
    {
      return sub_23569FF64();
    }
  }
  return result;
}

uint64_t sub_2356A40EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_2356A4134()
{
  return sub_2356A0220(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_2356A4144()
{
  return sub_2356A2B00(*(void *)(v0 + 16));
}

uint64_t sub_2356A414C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FD68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2356A41B4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FD68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2356A421C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetectedDoor(0);
  uint64_t result = 0;
  uint64_t v4 = a1 + *(int *)(v2 + 40);
  if ((*(unsigned char *)(v4 + 4) & 1) == 0)
  {
    float v5 = *(float *)v4 * 1000.0;
    if ((~LODWORD(v5) & 0x7F800000) != 0)
    {
      if (v5 > -2147500000.0)
      {
        if (v5 < 2147500000.0) {
          return generateTextToDisplay(depth:longUnitStyle:)((int)v5, 0)._countAndFlagsBits;
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

void sub_2356A42B8(uint64_t a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x263F089B8]);
  uint64_t v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v2, sel_initWithString_, v3);

  float v5 = (long long *)(a1 + *(int *)(type metadata accessor for DetectedDoor(0) + 44));
  if (!*((void *)v5 + 10)) {
    return;
  }
  long long v27 = *v5;
  long long v28 = v5[1];
  long long v29 = v5[2];
  long long v30 = v5[3];
  long long v31 = v5[4];
  uint64_t v32 = *((void *)v5 + 10);
  uint64_t v33 = *((void *)v5 + 11);
  unint64_t v6 = sub_2357F7ACC();
  int64_t v7 = 0;
  unint64_t v8 = v6 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  uint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v11 &= v11 - 1;
LABEL_23:
    id v16 = objc_allocWithZone(MEMORY[0x263F086A0]);
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v16, sel_initWithString_, v17, v27, v28, v29, v30, v31, v32, v33);

    id v19 = objc_msgSend(v4, sel_string);
    uint64_t v20 = sub_235949AC8();
    uint64_t v22 = v21;

    if (!v20 && v22 == 0xE000000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_23594AB78();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        id v24 = objc_allocWithZone(MEMORY[0x263F089B8]);
        uint64_t v25 = (void *)sub_235949A88();
        id v26 = objc_msgSend(v24, sel_initWithString_, v25);

        objc_msgSend(v4, sel_appendAttributedString_, v26);
      }
    }
    objc_msgSend(v4, sel_appendAttributedString_, v18);
  }
  int64_t v13 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v13 >= v12) {
    goto LABEL_27;
  }
  uint64_t v14 = *(void *)(v8 + 8 * v13);
  ++v7;
  if (v14) {
    goto LABEL_22;
  }
  int64_t v7 = v13 + 1;
  if (v13 + 1 >= v12) {
    goto LABEL_27;
  }
  uint64_t v14 = *(void *)(v8 + 8 * v7);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v7 = v13 + 2;
  if (v13 + 2 >= v12) {
    goto LABEL_27;
  }
  uint64_t v14 = *(void *)(v8 + 8 * v7);
  if (v14)
  {
LABEL_22:
    uint64_t v11 = (v14 - 1) & v14;
    goto LABEL_23;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v12)
  {
LABEL_27:
    swift_release();
    return;
  }
  uint64_t v14 = *(void *)(v8 + 8 * v15);
  if (v14)
  {
    int64_t v7 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_27;
    }
    uint64_t v14 = *(void *)(v8 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_2356A45AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2356A45E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2356A464C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2356A46B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2356A4714(uint64_t a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x263F089B8]);
  uint64_t v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v2, sel_initWithString_, v3);

  id v5 = objc_allocWithZone(MEMORY[0x263F089B8]);
  unint64_t v6 = (void *)sub_235949A88();
  id v7 = objc_msgSend(v5, sel_initWithString_, v6);

  uint64_t v8 = *(void *)(a1 + 16);
  id v98 = v4;
  id v99 = v7;
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v97 = 0;
    uint64_t v96 = a1;
    uint64_t v9 = (id *)(a1 + 96);
    do
    {
      double v13 = *((double *)v9 - 1);
      if (v13 <= 0.25)
      {
        uint64_t v14 = (uint64_t)*(v9 - 8);
        uint64_t v16 = (uint64_t)*(v9 - 7);
        uint64_t v15 = (uint64_t)*(v9 - 6);
        uint64_t v18 = (uint64_t)*(v9 - 5);
        uint64_t v17 = (uint64_t)*(v9 - 4);
        uint64_t v19 = (uint64_t)*(v9 - 3);
        char v20 = *((unsigned char *)v9 - 16);
        int v21 = *((unsigned __int8 *)v9 - 14);
        id v22 = *v9;
        char v23 = *((unsigned char *)v9 - 15);
        id v100 = *v9;
        uint64_t v101 = v14;
        swift_bridgeObjectRetain();
        if (v23)
        {
          id v24 = v99;
          uint64_t v25 = (uint64_t)objc_msgSend(v99, sel_length);
          if (v25 >= 1)
          {
            id v30 = objc_allocWithZone(MEMORY[0x263F086A0]);
            long long v31 = (void *)sub_235949A88();
            id v32 = objc_msgSend(v30, sel_initWithString_, v31);

            id v4 = v98;
            objc_msgSend(v24, sel_appendAttributedString_, v32);
          }
          if (v21 == 4)
          {
            id v33 = objc_allocWithZone(MEMORY[0x263F086A0]);
            uint64_t v34 = (void *)sub_235949A88();
            id v12 = objc_msgSend(v33, sel_initWithString_, v34);
          }
          else
          {
            uint64_t v102 = v101;
            uint64_t v103 = v16;
            uint64_t v104 = v15;
            uint64_t v105 = v18;
            uint64_t v106 = v17;
            uint64_t v107 = v19;
            char v108 = v20;
            uint64_t v57 = v101;
            char v109 = 1;
            char v110 = v21;
            double v111 = v13;
            id v112 = v22;
            if (v101)
            {
              MEMORY[0x270FA5388](v25, v26, v27, v28, v29);
              uint64_t v95 = &v102;
              swift_bridgeObjectRetain();
              uint64_t v58 = v97;
              uint64_t v59 = sub_235707434((void (*)(uint64_t *__return_ptr, void *))sub_2356A5C10, (uint64_t)v94, v57);
              uint64_t v97 = v58;
              swift_bridgeObjectRelease();
              uint64_t v34 = (void *)sub_2358D05AC(v59);
              swift_bridgeObjectRelease();
              sub_2358629E8();
              id v60 = objc_allocWithZone(MEMORY[0x263F089B8]);
              uint64_t v61 = (void *)sub_235949A88();
              swift_bridgeObjectRelease();
              id v12 = objc_msgSend(v60, sel_initWithString_, v61);

              sub_235862AE8();
              id v62 = objc_allocWithZone(MEMORY[0x263F089B8]);
              uint64_t v63 = (void *)sub_235949A88();
              swift_bridgeObjectRelease();
              id v64 = objc_msgSend(v62, sel_initWithString_, v63);

              id v65 = objc_allocWithZone(MEMORY[0x263F086A0]);
              int64_t v66 = (void *)sub_235949A88();
              id v67 = objc_msgSend(v65, sel_initWithString_, v66);

              objc_msgSend(v12, sel_appendAttributedString_, v67);
              objc_msgSend(v12, sel_appendAttributedString_, v34);
              id v68 = objc_allocWithZone(MEMORY[0x263F086A0]);
              uint64_t v69 = (void *)sub_235949A88();
              id v70 = objc_msgSend(v68, (SEL)&selRef_handleDoneButtonTap_, v69);

              objc_msgSend(v12, sel_appendAttributedString_, v70);
              objc_msgSend(v12, sel_appendAttributedString_, v64);
            }
            else
            {
              sub_235862AE8();
              id v72 = objc_allocWithZone(MEMORY[0x263F086A0]);
              uint64_t v34 = (void *)sub_235949A88();
              swift_bridgeObjectRelease();
              id v12 = objc_msgSend(v72, sel_initWithString_, v34);
            }
            id v4 = v98;
          }

          objc_msgSend(v99, sel_appendAttributedString_, v12);
        }
        else
        {
          uint64_t v35 = (uint64_t)objc_msgSend(v4, sel_length);
          if (v35 >= 1)
          {
            id v40 = objc_allocWithZone(MEMORY[0x263F086A0]);
            uint64_t v41 = (void *)sub_235949A88();
            id v42 = objc_msgSend(v40, sel_initWithString_, v41);

            objc_msgSend(v4, sel_appendAttributedString_, v42);
          }
          if (v21 == 4)
          {
            id v10 = objc_allocWithZone(MEMORY[0x263F086A0]);
            uint64_t v11 = (void *)sub_235949A88();
            id v12 = objc_msgSend(v10, sel_initWithString_, v11);
          }
          else
          {
            uint64_t v102 = v101;
            uint64_t v103 = v16;
            uint64_t v104 = v15;
            uint64_t v105 = v18;
            uint64_t v106 = v17;
            uint64_t v107 = v19;
            char v108 = v20;
            uint64_t v43 = v101;
            char v109 = 0;
            char v110 = v21;
            double v111 = v13;
            id v112 = v22;
            if (v101)
            {
              MEMORY[0x270FA5388](v35, v36, v37, v38, v39);
              uint64_t v95 = &v102;
              swift_bridgeObjectRetain();
              uint64_t v44 = v97;
              uint64_t v45 = sub_235707434((void (*)(uint64_t *__return_ptr, void *))sub_2356A5C10, (uint64_t)v94, v43);
              uint64_t v97 = v44;
              swift_bridgeObjectRelease();
              uint64_t v11 = (void *)sub_2358D05AC(v45);
              swift_bridgeObjectRelease();
              sub_2358629E8();
              id v46 = objc_allocWithZone(MEMORY[0x263F089B8]);
              uint64_t v47 = (void *)sub_235949A88();
              swift_bridgeObjectRelease();
              id v12 = objc_msgSend(v46, sel_initWithString_, v47);

              sub_235862AE8();
              id v48 = objc_allocWithZone(MEMORY[0x263F089B8]);
              uint64_t v49 = (void *)sub_235949A88();
              swift_bridgeObjectRelease();
              id v50 = objc_msgSend(v48, sel_initWithString_, v49);

              id v51 = objc_allocWithZone(MEMORY[0x263F086A0]);
              BOOL v52 = (void *)sub_235949A88();
              id v53 = objc_msgSend(v51, sel_initWithString_, v52);

              objc_msgSend(v12, sel_appendAttributedString_, v53);
              objc_msgSend(v12, sel_appendAttributedString_, v11);
              id v54 = objc_allocWithZone(MEMORY[0x263F086A0]);
              uint64_t v55 = (void *)sub_235949A88();
              id v56 = objc_msgSend(v54, (SEL)&selRef_handleDoneButtonTap_, v55);

              objc_msgSend(v12, sel_appendAttributedString_, v56);
              objc_msgSend(v12, sel_appendAttributedString_, v50);
            }
            else
            {
              sub_235862AE8();
              id v71 = objc_allocWithZone(MEMORY[0x263F086A0]);
              uint64_t v11 = (void *)sub_235949A88();
              swift_bridgeObjectRelease();
              id v12 = objc_msgSend(v71, sel_initWithString_, v11);
            }
            id v4 = v98;
          }

          objc_msgSend(v4, sel_appendAttributedString_, v12);
        }

        swift_bridgeObjectRelease();
      }
      v9 += 9;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    id v7 = v99;
  }
  uint64_t v102 = MEMORY[0x263F8EE78];
  if ((uint64_t)objc_msgSend(v4, sel_length) >= 1)
  {
    type metadata accessor for MAGUtilities();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v74 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    id v75 = v4;
    unint64_t v76 = (void *)sub_235949A88();
    id v77 = (void *)sub_235949A88();
    id v78 = objc_msgSend(v74, sel_localizedStringForKey_value_table_, v76, 0, v77);

    sub_235949AC8();
    id v79 = objc_allocWithZone(MEMORY[0x263F086A0]);
    unint64_t v80 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    id v81 = objc_msgSend(v79, sel_initWithString_, v80);

    id v82 = objc_msgSend(self, sel_customContentWithAttributedLabel_attributedValue_, v81, v75);
    MEMORY[0x237DE7CE0]();
    if (*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_235949DA8();
    }
    sub_235949DD8();
    sub_235949D98();
    id v4 = v98;
    id v7 = v99;
  }
  if ((uint64_t)objc_msgSend(v7, sel_length) >= 1)
  {
    type metadata accessor for MAGUtilities();
    uint64_t v83 = swift_getObjCClassFromMetadata();
    id v84 = objc_msgSend(self, sel_bundleForClass_, v83);
    unint64_t v85 = (void *)sub_235949A88();
    id v86 = v7;
    uint64_t v87 = (void *)sub_235949A88();
    id v88 = objc_msgSend(v84, sel_localizedStringForKey_value_table_, v85, 0, v87);

    sub_235949AC8();
    id v89 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v90 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    id v91 = objc_msgSend(v89, sel_initWithString_, v90);

    id v92 = objc_msgSend(self, sel_customContentWithAttributedLabel_attributedValue_, v91, v86);
    MEMORY[0x237DE7CE0]();
    if (*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_235949DA8();
    }
    sub_235949DD8();
    sub_235949D98();
    id v4 = v98;
    id v7 = v99;
  }

  return v102;
}

id sub_2356A52A0(uint64_t a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x263F089B8]);
  uint64_t v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v2, sel_initWithString_, v3);

  id v5 = objc_allocWithZone(MEMORY[0x263F089B8]);
  unint64_t v6 = (void *)sub_235949A88();
  id v7 = objc_msgSend(v5, sel_initWithString_, v6);

  id v8 = objc_allocWithZone(MEMORY[0x263F089B8]);
  uint64_t v9 = (void *)sub_235949A88();
  id v10 = objc_msgSend(v8, sel_initWithString_, v9);

  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    id v86 = v10;
    swift_bridgeObjectRetain();
    uint64_t v87 = 0;
    uint64_t v85 = a1;
    id v12 = (id *)(a1 + 96);
    id v88 = v4;
    id v89 = v7;
    while (1)
    {
      double v18 = *((double *)v12 - 1);
      if (v18 > 0.25) {
        goto LABEL_7;
      }
      uint64_t v19 = v4;
      uint64_t v20 = (uint64_t)*(v12 - 8);
      uint64_t v22 = (uint64_t)*(v12 - 7);
      uint64_t v21 = (uint64_t)*(v12 - 6);
      uint64_t v24 = (uint64_t)*(v12 - 5);
      uint64_t v23 = (uint64_t)*(v12 - 4);
      uint64_t v25 = (uint64_t)*(v12 - 3);
      char v26 = *((unsigned char *)v12 - 16);
      int v27 = *((unsigned __int8 *)v12 - 14);
      id v28 = *v12;
      char v29 = *((unsigned char *)v12 - 15);
      id v90 = *v12;
      uint64_t v91 = v20;
      swift_bridgeObjectRetain();
      if (v29)
      {
        uint64_t v30 = (uint64_t)objc_msgSend(v7, sel_length);
        id v4 = v19;
        if (v30 >= 1)
        {
          id v35 = objc_allocWithZone(MEMORY[0x263F086A0]);
          uint64_t v36 = (void *)sub_235949A88();
          id v37 = objc_msgSend(v35, sel_initWithString_, v36);

          id v4 = v88;
          objc_msgSend(v7, sel_appendAttributedString_, v37);
        }
        if (v27 == 4)
        {
          id v38 = objc_allocWithZone(MEMORY[0x263F086A0]);
          uint64_t v39 = (void *)sub_235949A88();
          id v40 = objc_msgSend(v38, sel_initWithString_, v39, v85);
          goto LABEL_23;
        }
        uint64_t v63 = v91;
        uint64_t v92 = v91;
        uint64_t v93 = v22;
        uint64_t v94 = v21;
        uint64_t v95 = v24;
        uint64_t v96 = v23;
        uint64_t v97 = v25;
        char v98 = v26;
        char v99 = 1;
        char v100 = v27;
        double v101 = v18;
        id v102 = v28;
        if (v91)
        {
          MEMORY[0x270FA5388](v30, v31, v32, v33, v34);
          id v84 = &v92;
          swift_bridgeObjectRetain();
          uint64_t v64 = v87;
          uint64_t v65 = sub_235707434((void (*)(uint64_t *__return_ptr, void *))sub_2356A5BA8, (uint64_t)v83, v63);
          uint64_t v87 = v64;
          swift_bridgeObjectRelease();
          uint64_t v39 = (void *)sub_2358D05AC(v65);
          swift_bridgeObjectRelease();
          sub_2358629E8();
          id v66 = objc_allocWithZone(MEMORY[0x263F089B8]);
          id v67 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          id v16 = objc_msgSend(v66, sel_initWithString_, v67);

          sub_235862AE8();
          id v68 = objc_allocWithZone(MEMORY[0x263F089B8]);
          uint64_t v69 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          id v70 = objc_msgSend(v68, sel_initWithString_, v69);

          id v71 = objc_allocWithZone(MEMORY[0x263F086A0]);
          id v72 = (void *)sub_235949A88();
          id v73 = objc_msgSend(v71, sel_initWithString_, v72);

          objc_msgSend(v16, sel_appendAttributedString_, v73);
          objc_msgSend(v16, sel_appendAttributedString_, v39);
          id v74 = objc_allocWithZone(MEMORY[0x263F086A0]);
          id v75 = (void *)sub_235949A88();
          id v76 = objc_msgSend(v74, sel_initWithString_, v75);

          id v4 = v88;
          objc_msgSend(v16, sel_appendAttributedString_, v76);

          objc_msgSend(v16, sel_appendAttributedString_, v70);
        }
        else
        {
          sub_235862AE8();
          id v78 = objc_allocWithZone(MEMORY[0x263F086A0]);
          uint64_t v39 = (void *)sub_235949A88();
          id v4 = v88;
          swift_bridgeObjectRelease();
          id v40 = objc_msgSend(v78, sel_initWithString_, v39, v85);
LABEL_23:
          id v16 = v40;
        }
        uint64_t v17 = v90;

        id v7 = v89;
        objc_msgSend(v89, sel_appendAttributedString_, v16);
        goto LABEL_6;
      }
      id v4 = v19;
      uint64_t v41 = (uint64_t)objc_msgSend(v19, sel_length, v85);
      if (v41 >= 1)
      {
        id v46 = objc_allocWithZone(MEMORY[0x263F086A0]);
        uint64_t v47 = (void *)sub_235949A88();
        id v48 = objc_msgSend(v46, sel_initWithString_, v47);

        objc_msgSend(v19, sel_appendAttributedString_, v48);
      }
      if (v27 == 4)
      {
        id v13 = objc_allocWithZone(MEMORY[0x263F086A0]);
        uint64_t v14 = (void *)sub_235949A88();
        id v15 = objc_msgSend(v13, sel_initWithString_, v14);
      }
      else
      {
        uint64_t v49 = v91;
        uint64_t v92 = v91;
        uint64_t v93 = v22;
        uint64_t v94 = v21;
        uint64_t v95 = v24;
        uint64_t v96 = v23;
        uint64_t v97 = v25;
        char v98 = v26;
        char v99 = 0;
        char v100 = v27;
        double v101 = v18;
        id v102 = v28;
        if (v91)
        {
          MEMORY[0x270FA5388](v41, v42, v43, v44, v45);
          id v84 = &v92;
          swift_bridgeObjectRetain();
          uint64_t v50 = v87;
          uint64_t v51 = sub_235707434((void (*)(uint64_t *__return_ptr, void *))sub_2356A5C10, (uint64_t)v83, v49);
          uint64_t v87 = v50;
          swift_bridgeObjectRelease();
          uint64_t v14 = (void *)sub_2358D05AC(v51);
          swift_bridgeObjectRelease();
          sub_2358629E8();
          id v52 = objc_allocWithZone(MEMORY[0x263F089B8]);
          id v53 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          id v16 = objc_msgSend(v52, sel_initWithString_, v53);

          sub_235862AE8();
          id v54 = objc_allocWithZone(MEMORY[0x263F089B8]);
          uint64_t v55 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          id v56 = objc_msgSend(v54, sel_initWithString_, v55);

          id v57 = objc_allocWithZone(MEMORY[0x263F086A0]);
          uint64_t v58 = (void *)sub_235949A88();
          id v59 = objc_msgSend(v57, sel_initWithString_, v58);

          objc_msgSend(v16, sel_appendAttributedString_, v59);
          objc_msgSend(v16, sel_appendAttributedString_, v14);
          id v60 = objc_allocWithZone(MEMORY[0x263F086A0]);
          uint64_t v61 = (void *)sub_235949A88();
          id v62 = objc_msgSend(v60, sel_initWithString_, v61);

          id v4 = v88;
          objc_msgSend(v16, sel_appendAttributedString_, v62);

          objc_msgSend(v16, sel_appendAttributedString_, v56);
          goto LABEL_5;
        }
        sub_235862AE8();
        id v77 = objc_allocWithZone(MEMORY[0x263F086A0]);
        uint64_t v14 = (void *)sub_235949A88();
        id v4 = v88;
        swift_bridgeObjectRelease();
        id v15 = objc_msgSend(v77, sel_initWithString_, v14);
      }
      id v16 = v15;
LABEL_5:
      uint64_t v17 = v90;

      objc_msgSend(v4, sel_appendAttributedString_, v16);
      id v7 = v89;
LABEL_6:

      swift_bridgeObjectRelease();
LABEL_7:
      v12 += 9;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        id v10 = v86;
        break;
      }
    }
  }
  objc_msgSend(v10, sel_appendAttributedString_, v4, v85);
  if ((uint64_t)objc_msgSend(v7, sel_length) >= 1)
  {
    id v79 = objc_allocWithZone(MEMORY[0x263F086A0]);
    unint64_t v80 = (void *)sub_235949A88();
    id v81 = objc_msgSend(v79, sel_initWithString_, v80);

    objc_msgSend(v10, sel_appendAttributedString_, v81);
    objc_msgSend(v10, sel_appendAttributedString_, v7);
  }

  return v10;
}

id sub_2356A5BA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_2356A3928(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2356A5BC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_2356A5C10@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_2356A5BA8(a1, a2);
}

uint64_t sub_2356A5C44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_235947978();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a1, 1, v13) == 1)
  {
    sub_23566A3AC(a1, (uint64_t *)&unk_268810340);
    unint64_t v21 = sub_2358782D4(a2);
    if (v22)
    {
      unint64_t v23 = v21;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v25 = *v3;
      uint64_t v29 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_235941A38();
        uint64_t v25 = v29;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v14 + 32))(v12, *(void *)(v25 + 56) + *(void *)(v14 + 72) * v23, v13);
      sub_23568878C(v23, v25);
      *uint64_t v3 = v25;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    }
    return sub_23566A3AC((uint64_t)v12, (uint64_t *)&unk_268810340);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v20, a1, v13);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_235940128((uint64_t)v20, a2, v26);
    *uint64_t v3 = v29;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2356A5EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((a1 & 0x100000000) != 0)
  {
    uint64_t result = sub_2358781A8(a2);
    if ((v8 & 1) == 0) {
      return result;
    }
    unint64_t v9 = result;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v2;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_235941F2C();
      uint64_t v11 = v13;
    }
    sub_235688B40(v9, v11);
    *uint64_t v3 = v11;
  }
  else
  {
    float v5 = *(float *)&a1;
    char v6 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_2359405BC(a2, v6, v5);
    *uint64_t v2 = v12;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2356A5F78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFD8);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SpatialTextBlock();
  __n128 v17 = MEMORY[0x270FA5388](v13, v14, v13, v15, v16);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v20 + 48))(a1, 1, v17) == 1)
  {
    sub_23566A3AC(a1, &qword_26880EFD8);
    sub_235687FCC(a2, (uint64_t)v12);
    sub_2356B4D10(a2, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
    return sub_23566A3AC((uint64_t)v12, &qword_26880EFD8);
  }
  else
  {
    sub_2356B4CA8(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2359409DC((uint64_t)v19, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v24;
    swift_bridgeObjectRelease();
    return sub_2356B4D10(a2, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
  }
}

uint64_t MAGPointAndSpeakService.__allocating_init(eventHandler:arService:textDetectionService:outputEngine:pulseFeedbackProcessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  MAGPointAndSpeakService.init(eventHandler:arService:textDetectionService:outputEngine:pulseFeedbackProcessor:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t MAGPointAndSpeakService.init(eventHandler:arService:textDetectionService:outputEngine:pulseFeedbackProcessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v36 = a1;
  uint64_t v35 = sub_23594A278();
  uint64_t v7 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35, v8, v9, v10, v11);
  uint64_t v34 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_23594A208();
  MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
  uint64_t v18 = sub_235949738();
  MEMORY[0x270FA5388](v18 - 8, v19, v20, v21, v22);
  sub_2359478F8();
  sub_2359478F8();
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument) = 0;
  uint64_t v23 = MEMORY[0x263F8EE78];
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks) = MEMORY[0x263F8EE78];
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks) = MEMORY[0x263F8EE80];
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_startedPulseForOutOfFrame) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForQueue) = 0;
  *(void *)(v5
            + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutDeviceDirectionMessage) = 0;
  *(void *)(v5
            + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutText) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithBlur) = 0;
  uint64_t v24 = v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint;
  *(void *)uint64_t v24 = 0;
  *(void *)(v24 + 8) = 0;
  *(unsigned char *)(v24 + 16) = 1;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedTextTooCloseFeedback) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements) = 0;
  uint64_t v25 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_engine;
  *(void *)(v6 + v25) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F21568]), sel_init);
  uint64_t v26 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_rotationRateManager;
  type metadata accessor for RotationRateManager();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F01788]), sel_init);
  *(unsigned char *)(v27 + 24) = 0;
  *(void *)(v6 + v26) = v27;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastOrientation) = 0;
  uint64_t v33 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textQueue;
  v32[4] = sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
  sub_235949728();
  uint64_t v41 = v23;
  v32[2] = sub_2356B54A8((unint64_t *)&unk_26AF15270, MEMORY[0x263F8F0F8]);
  v32[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151C0);
  v32[3] = sub_2356B4404((unint64_t *)&unk_26AF151D0, (uint64_t *)&unk_26AF151C0);
  sub_23594A6C8();
  uint64_t v28 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  uint64_t v29 = v34;
  uint64_t v30 = v35;
  v28(v34, *MEMORY[0x263F8F130], v35);
  *(void *)(v6 + v33) = sub_23594A2D8();
  uint64_t v33 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pointSpeakQueue;
  sub_235949718();
  uint64_t v41 = MEMORY[0x263F8EE78];
  sub_23594A6C8();
  v28(v29, *MEMORY[0x263F8F138], v30);
  *(void *)(v6 + v33) = sub_23594A2D8();
  *(void *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_eventHandler) = v36;
  *(void *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService) = v37;
  *(void *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textDetectionService) = v38;
  *(void *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine) = v39;
  *(void *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseFeedbackProcessor) = v40;
  return v6;
}

uint64_t sub_2356A66C8(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2356A66E8, 0, 0);
}

uint64_t sub_2356A66E8()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2356A67D8;
  return MEMORY[0x270FA2360]();
}

uint64_t sub_2356A67D8()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2356A690C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2356A68F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356A68F4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2356A690C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356A6970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v32[0] = a3;
  uint64_t v5 = sub_2359496D8();
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_235949738();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  MEMORY[0x270FA5388](v12, v13, v14, v15, v16);
  uint64_t v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF08);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v19, v22, v23, v24, v25);
  uint64_t v26 = (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[1] = *(void *)(a2 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pointSpeakQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v26, a1, v19);
  unint64_t v27 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v32[0];
  *(void *)(v28 + 16) = a2;
  *(void *)(v28 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v28 + v27, v26, v19);
  aBlock[4] = sub_2356B5794;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_2357A194C;
  void aBlock[3] = &block_descriptor_214;
  uint64_t v30 = _Block_copy(aBlock);
  sub_2359470F8();
  sub_2359470F8();
  sub_235949708();
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_2356B54A8((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_2356B4404((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
  sub_23594A6C8();
  MEMORY[0x237DE81D0](0, v18, v11, v30);
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v5);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v34);
  return swift_release();
}

uint64_t sub_2356A6D00(uint64_t a1)
{
  return sub_2356A6970(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2356A6D08(uint64_t a1, uint64_t a2)
{
  id v2 = *(id *)(a2 + 16);
  sub_2356A6E50(v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF08);
  return sub_235949E48();
}

uint64_t sub_2356A6E50(void *a1)
{
  id v90 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_235948208();
  uint64_t v83 = *(void *)(v2 - 8);
  uint64_t v84 = v2;
  MEMORY[0x270FA5388](v2, v3, v4, v5, v6);
  id v82 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2359481C8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  id v88 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v14, v16, v17, v18, v19);
  uint64_t v92 = (char *)&v81 - v21;
  MEMORY[0x270FA5388](v20, v22, v23, v24, v25);
  unint64_t v27 = (char *)&v81 - v26;
  uint64_t v28 = sub_2359497A8();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28, v30, v31, v32, v33);
  uint64_t v35 = (void (**)(char *, char *, uint64_t))((char *)&v81 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pointSpeakQueue];
  *uint64_t v35 = v36;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v35, *MEMORY[0x263F8F0E0], v28);
  id v37 = v36;
  uint64_t v38 = sub_2359497D8();
  (*(void (**)(void *, uint64_t))(v29 + 8))(v35, v28);
  if (v38)
  {
    uint64_t v38 = v8;
    if (qword_26880E4B8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  id v89 = v1;
  uint64_t v39 = sub_2359481F8();
  uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_26880FBC8);
  sub_2359481B8();
  uint64_t v87 = v40;
  uint64_t v41 = sub_2359481D8();
  os_signpost_type_t v42 = sub_23594A318();
  if (sub_23594A5B8())
  {
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v44 = v92;
    v43(v92, v27, v38);
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    os_signpost_id_t v46 = sub_2359481A8();
    _os_signpost_emit_with_name_impl(&dword_235640000, v41, v42, v46, "HandPose", "", v45, 2u);
    MEMORY[0x237DE9F30](v45, -1, -1);

    uint64_t v47 = v38;
    id v48 = v44;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v44, v38);
  }
  else
  {

    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v47 = v38;
    id v48 = v92;
  }
  id v81 = v43;
  v43(v48, v27, v47);
  sub_235948238();
  swift_allocObject();
  uint64_t v91 = sub_235948228();
  uint64_t v85 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v86 = v9 + 8;
  v85(v27, v47);
  id v49 = objc_msgSend(self, sel_currentDevice);
  id v50 = objc_msgSend(v49, sel_orientation);

  if (v50 == (id)3) {
    unsigned int v51 = 1;
  }
  else {
    unsigned int v51 = 6;
  }
  if (v50 == (id)4) {
    uint64_t v52 = 3;
  }
  else {
    uint64_t v52 = v51;
  }
  id v53 = v90;
  sub_23566E524(MEMORY[0x263F8EE78]);
  id v54 = objc_allocWithZone(MEMORY[0x263F1EF40]);
  type metadata accessor for VNImageOption(0);
  sub_2356B54A8((unint64_t *)&qword_26880EA48, type metadata accessor for VNImageOption);
  uint64_t v55 = (void *)sub_235949968();
  swift_bridgeObjectRelease();
  id v56 = objc_msgSend(v54, sel_initWithCVPixelBuffer_orientation_options_, v53, v52, v55);

  id v57 = objc_allocWithZone(MEMORY[0x263F1EEA0]);
  aBlock[4] = sub_2356B56B8;
  aBlock[5] = v89;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  void aBlock[2] = sub_2356B3EB4;
  void aBlock[3] = &block_descriptor_208;
  uint64_t v58 = _Block_copy(aBlock);
  sub_2359470F8();
  swift_release();
  id v59 = objc_msgSend(v57, sel_initWithCompletionHandler_, v58);
  _Block_release(v58);
  objc_msgSend(v59, sel_setMaximumHandCount_, 1);
  objc_msgSend(v59, sel_setRevision_, 1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_235952800;
  *(void *)(v60 + 32) = v59;
  aBlock[0] = (id)v60;
  sub_235949D98();
  sub_2356594B0(0, &qword_26880FF00);
  id v61 = v59;
  id v62 = (void *)sub_235949D58();
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  LODWORD(v55) = objc_msgSend(v56, sel_performRequests_error_, v62, aBlock);

  if (v55)
  {
    id v63 = aBlock[0];
    uint64_t v64 = sub_2359481D8();
    uint64_t v65 = v88;
    sub_235948218();
    os_signpost_type_t v66 = sub_23594A308();
    if (sub_23594A5B8())
    {
      os_signpost_type_t v67 = v66;
      sub_2359470F8();
      id v68 = v82;
      sub_235948248();
      swift_release();
      uint64_t v70 = v83;
      uint64_t v69 = v84;
      if ((*(unsigned int (**)(char *, uint64_t))(v83 + 88))(v68, v84) == *MEMORY[0x263F90238])
      {
        id v71 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v69);
        id v71 = "";
      }
      id v74 = v92;
      id v75 = v88;
      v81(v92, v88, v47);
      uint64_t v76 = v47;
      id v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v77 = 0;
      os_signpost_id_t v78 = sub_2359481A8();
      _os_signpost_emit_with_name_impl(&dword_235640000, v64, v67, v78, "HandPose", v71, v77, 2u);
      MEMORY[0x237DE9F30](v77, -1, -1);

      id v79 = v75;
      unint64_t v80 = (uint64_t (*)(char *, uint64_t))v85;
      v85(v79, v76);
      swift_release();
      return v80(v74, v76);
    }
    else
    {

      v85(v65, v47);
      return swift_release();
    }
  }
  else
  {
    id v72 = aBlock[0];
    sub_235947678();

    swift_willThrow();
    return swift_release();
  }
}

void sub_2356A76D8(id a1, void *a2)
{
  uint64_t v3 = v2;
  id aBlock[7] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = sub_2359496D8();
  uint64_t v7 = *(void (***)(void, uint64_t))(v6 - 8);
  MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_235949738();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16, v17, v18, v19);
  int64_t v114 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v21 - 8, v22, v23, v24, v25);
  uint64_t v113 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v27 = 0x26880E000uLL;
  if (a2)
  {
    id v115 = a1;
    if (qword_26880E448 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_235948278();
    __swift_project_value_buffer(v28, (uint64_t)qword_26880F860);
    id v29 = a2;
    id v30 = a2;
    uint64_t v31 = sub_235948258();
    os_log_type_t v32 = sub_23594A148();
    if (os_log_type_enabled(v31, v32))
    {
      char v109 = (void (**)(void, uint64_t))v3;
      uint64_t v33 = swift_slowAlloc();
      double v111 = v13;
      uint64_t v34 = (uint8_t *)v33;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v112 = v14;
      uint64_t v36 = (void *)v35;
      uint64_t v110 = v15;
      *(_DWORD *)uint64_t v34 = 138412290;
      id v37 = a2;
      uint64_t v38 = v7;
      uint64_t v39 = v6;
      uint64_t v40 = (void *)_swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v40;
      uint64_t v3 = v109;
      uint64_t v15 = v110;
      sub_23594A608();
      void *v36 = v40;
      uint64_t v6 = v39;
      uint64_t v7 = v38;
      unint64_t v27 = 0x26880E000;

      _os_log_impl(&dword_235640000, v31, v32, "Hand-pose request error : %@", v34, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880F1D0);
      swift_arrayDestroy();
      uint64_t v41 = v36;
      uint64_t v14 = v112;
      MEMORY[0x237DE9F30](v41, -1, -1);
      os_signpost_type_t v42 = v34;
      uint64_t v13 = v111;
      MEMORY[0x237DE9F30](v42, -1, -1);
    }
    else
    {
    }
    a1 = v115;
  }
  if (!a1) {
    goto LABEL_65;
  }
  self;
  uint64_t v43 = swift_dynamicCastObjCClass();
  if (!v43) {
    goto LABEL_65;
  }
  uint64_t v44 = (void *)v43;
  unint64_t v45 = v27;
  id v46 = a1;
  id v47 = objc_msgSend(v44, sel_results);
  if (v47)
  {
    id v48 = v47;
    sub_2356594B0(0, &qword_26880FED0);
    unint64_t v49 = sub_235949D78();

    if (v49 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v103 = sub_23594A998();
      swift_bridgeObjectRelease();
      if (v103) {
        goto LABEL_13;
      }
    }
    else if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_13:
      id v115 = v46;
      if ((v49 & 0xC000000000000001) != 0)
      {
        id v50 = (id)MEMORY[0x237DE87D0](0, v49);
      }
      else
      {
        if (!*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_72;
        }
        id v50 = *(id *)(v49 + 32);
      }
      unsigned int v51 = v50;
      swift_bridgeObjectRelease();
      uint64_t v52 = *MEMORY[0x263F1F248];
      aBlock[0] = 0;
      id v53 = objc_msgSend(v51, sel_recognizedPointsForJointsGroupName_error_, v52, aBlock);
      id v54 = aBlock[0];
      if (v53)
      {
        uint64_t v55 = v53;
        uint64_t v110 = v15;
        double v111 = v13;
        uint64_t v112 = v14;
        type metadata accessor for JointName(0);
        sub_2356594B0(0, &qword_26880FED8);
        sub_2356B54A8(&qword_26880EDA0, type metadata accessor for JointName);
        uint64_t v56 = sub_235949978();
        id v57 = v54;

        if (*(void *)(v56 + 16))
        {
          id v58 = (id)*MEMORY[0x263F1F1B8];
          unint64_t v59 = sub_235878478((uint64_t)v58);
          if (v60)
          {
            id v61 = *(id *)(*(void *)(v56 + 56) + 8 * v59);

            objc_msgSend(v61, sel_confidence);
            float v63 = v62;

            v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_startedPulseForOutOfFrame] = 0;
            *(double *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand] = *(double *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand] + 1.0;
            sub_2357A878C(0);
            uint64_t v64 = v51;
            double v65 = COERCE_DOUBLE(sub_2358D0E60());
            double v66 = 0.0;
            id v67 = v115;
            if ((v68 & 1) != 0 || (double v66 = v65, v65 < 0.03))
            {
              v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback] = 0;
              goto LABEL_22;
            }
            if (v65 <= 0.6)
            {
LABEL_22:
              objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer], sel_invalidate);
              if (v66 >= 0.03)
              {
                id v108 = v58;
                char v109 = v7;
                uint64_t v69 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback;
                if ((v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback] & 1) == 0
                  && *(uint64_t *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage] >= 61
                  && *(void *)(v56 + 16))
                {
                  uint64_t v70 = sub_235949EA8();
                  uint64_t v71 = (uint64_t)v113;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v113, 1, 1, v70);
                  id v72 = (void *)swift_allocObject();
                  v72[2] = 0;
                  v72[3] = 0;
                  v72[4] = v3;
                  sub_2359470F8();
                  sub_2357A1990(v71, (uint64_t)&unk_26880FEE8, (uint64_t)v72);
                  swift_release();
                }
                v3[v69] = 1;
                *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage] = 0;
                uint64_t v113 = *(char **)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textQueue];
                aBlock[4] = sub_2356B54F0;
                aBlock[5] = v3;
                aBlock[0] = (id)MEMORY[0x263EF8330];
                aBlock[1] = (id)1107296256;
                void aBlock[2] = sub_2357A194C;
                void aBlock[3] = &block_descriptor_193;
                id v73 = _Block_copy(aBlock);
                sub_2359470F8();
                id v74 = v114;
                sub_235949708();
                uint64_t v116 = MEMORY[0x263F8EE78];
                sub_2356B54A8((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
                sub_2356B4404((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
                id v75 = v111;
                sub_23594A6C8();
                MEMORY[0x237DE8250](0, v74, v75, v73);
                _Block_release(v73);
                ((void (**)(char *, uint64_t))v109)[1](v75, v6);
                (*(void (**)(char *, uint64_t))(v110 + 8))(v74, v112);
                swift_release();
                if (!*(void *)(v56 + 16))
                {

                  goto LABEL_44;
                }
                id v76 = v108;
                sub_235878478((uint64_t)v76);
                char v78 = v77;

                id v67 = v115;
                if (v78)
                {
                  if (*(void *)(v56 + 16))
                  {
                    id v79 = v76;
                    unint64_t v80 = sub_235878478((uint64_t)v79);
                    if (v81)
                    {
                      id v82 = *(void **)(*(void *)(v56 + 56) + 8 * v80);
                      id v83 = v82;

                      uint64_t v84 = (double *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint];
                      if ((v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint + 16] & 1) == 0)
                      {
                        if (v83)
                        {
                          double v85 = *v84;
                          objc_msgSend(v83, sel_x);
                          if (vabdd_f64(v85, v86) > 0.01)
                          {
                            if (v63 >= 0.67) {
                              goto LABEL_55;
                            }
LABEL_54:

                            goto LABEL_45;
                          }
                          if (((_BYTE)v84[2] & 1) == 0)
                          {
                            double v95 = v84[1];
                            objc_msgSend(v83, sel_y);
                            if (v63 >= 0.67 || vabdd_f64(v95, v96) <= 0.01)
                            {
LABEL_55:
                              if (*(void *)(v56 + 16))
                              {
                                id v97 = v76;
                                unint64_t v98 = sub_235878478((uint64_t)v97);
                                if (v99)
                                {
                                  id v100 = *(id *)(*(void *)(v56 + 56) + 8 * v98);
                                  swift_bridgeObjectRelease();

                                  objc_msgSend(v100, sel_x);
                                  *(double *)&uint64_t v101 = CGRectMake(objc_msgSend(v100, sel_y));
                                  sub_2356A9CE8(v101, v102, 0, 0, 0, 1, 0, 0, 0, 1);

LABEL_60:
                                  return;
                                }
                              }
                              swift_bridgeObjectRelease();
                              goto LABEL_60;
                            }
                            goto LABEL_54;
                          }
                          goto LABEL_74;
                        }
LABEL_73:
                        __break(1u);
LABEL_74:
                        __break(1u);
                        return;
                      }
                      goto LABEL_49;
                    }
                  }
                  if ((v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint + 16] & 1) == 0) {
                    goto LABEL_73;
                  }
                  id v82 = 0;
LABEL_49:
                  if (v63 >= 0.67) {
                    goto LABEL_55;
                  }

LABEL_45:
                  swift_bridgeObjectRelease();
                  return;
                }
              }

LABEL_44:
              goto LABEL_45;
            }
            swift_bridgeObjectRelease();
            uint64_t v89 = *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements];
            BOOL v90 = __OFADD__(v89, 1);
            uint64_t v91 = v89 + 1;
            if (!v90)
            {
              *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements] = v91;
              uint64_t v92 = sub_235949EA8();
              uint64_t v93 = (uint64_t)v113;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v113, 1, 1, v92);
              uint64_t v94 = (void *)swift_allocObject();
              v94[2] = 0;
              void v94[3] = 0;
              v94[4] = v3;
              sub_2359470F8();
              sub_2357A1990(v93, (uint64_t)&unk_26880FEF8, (uint64_t)v94);

              swift_release();
              return;
            }
LABEL_72:
            __break(1u);
          }
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        id v87 = aBlock[0];
        id v88 = (void *)sub_235947678();

        swift_willThrow();
      }
      goto LABEL_64;
    }
    swift_bridgeObjectRelease();
  }

LABEL_64:
  unint64_t v27 = v45;
LABEL_65:
  if (*(void *)(v27 + 1096) != -1) {
    swift_once();
  }
  uint64_t v104 = sub_235948278();
  __swift_project_value_buffer(v104, (uint64_t)qword_26880F860);
  uint64_t v105 = sub_235948258();
  os_log_type_t v106 = sub_23594A148();
  if (os_log_type_enabled(v105, v106))
  {
    uint64_t v107 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v107 = 0;
    _os_log_impl(&dword_235640000, v105, v106, "No hand pose points detected", v107, 2u);
    MEMORY[0x237DE9F30](v107, -1, -1);
  }

  sub_2356B123C();
}

uint64_t sub_2356A8354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(void *)(v4 + 24) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356A83E4, 0, 0);
}

uint64_t sub_2356A83E4()
{
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2356A84A4;
  uint64_t v2 = *(void *)(v0 + 24);
  return MAGPointAndSpeakEventHandler.send(_:)(v2);
}

uint64_t sub_2356A84A4()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2356B5870;
  }
  else {
    uint64_t v2 = sub_2356B5874;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356A85B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(void *)(v4 + 24) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356A8648, 0, 0);
}

uint64_t sub_2356A8648()
{
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2356A84A4;
  uint64_t v2 = *(void *)(v0 + 24);
  return MAGPointAndSpeakEventHandler.send(_:)(v2);
}

void sub_2356A8708()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_235947908();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DetectedTextBlock();
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)&double v16 = MEMORY[0x270FA5388](v10 - 8, v12, v13, v14, v15).n128_u64[0];
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument;
  if (*(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument)
    || (uint64_t v20 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks,
        *(void *)(*(void *)(v0
                              + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks)
                  + 16)))
  {
    uint64_t v21 = v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastImageCacheTime;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v21, v2);
    sub_235947898();
    double v23 = v22;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    if (v23 < -0.5)
    {
      uint64_t v24 = (id *)(*(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService)
                 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
      swift_beginAccess();
      if (*v24)
      {
        id v25 = objc_msgSend(*v24, sel_currentFrame);
        if (v25)
        {
          uint64_t v26 = v25;
          id v27 = objc_msgSend(v25, sel_capturedImage);
          id v28 = objc_msgSend(v26, sel_camera);
          uint64_t v29 = *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textDetectionService);
          id v30 = v27;
          sub_2359470F8();
          id v62 = v30;
          uint64_t v63 = v29;
          sub_2359470F8();
          id v31 = v28;
          id v64 = v26;
          sub_23566E524(MEMORY[0x263F8EE78]);
          id v32 = objc_allocWithZone(MEMORY[0x263F1EF40]);
          type metadata accessor for VNImageOption(0);
          sub_2356B54A8((unint64_t *)&qword_26880EA48, type metadata accessor for VNImageOption);
          uint64_t v33 = (void *)sub_235949968();
          swift_bridgeObjectRelease();
          uint64_t v34 = v62;
          id v35 = objc_msgSend(v32, sel_initWithCVPixelBuffer_orientation_options_, v62, 6, v33);

          uint64_t v36 = v34;
          unint64_t v45 = sub_23573DD7C(v35, 0);

          id v46 = v45;
          id v47 = v45;
          id v48 = v64;
          sub_2356A8DFC(v47, v1, v36, v31, v64);

          swift_release();
          swift_release();
          sub_2359478F8();
          swift_beginAccess();
          (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v21, v9, v2);
          swift_endAccess();

LABEL_10:
        }
      }
    }
  }
  else
  {
    id v37 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
    if (v37)
    {
      id v38 = objc_msgSend(v37, sel_capturedImage, v16);
      if (v38)
      {
        uint64_t v39 = v38;
        uint64_t v63 = *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textDetectionService);
        sub_2359470F8();
        sub_2359470F8();
        id v40 = v39;
        sub_23566E524(MEMORY[0x263F8EE78]);
        id v41 = objc_allocWithZone(MEMORY[0x263F1EF40]);
        type metadata accessor for VNImageOption(0);
        sub_2356B54A8((unint64_t *)&qword_26880EA48, type metadata accessor for VNImageOption);
        os_signpost_type_t v42 = (void *)sub_235949968();
        swift_bridgeObjectRelease();
        id v43 = objc_msgSend(v41, sel_initWithCVPixelBuffer_orientation_options_, v40, 6, v42);

        id v64 = v40;
        uint64_t v44 = sub_23573DD7C(v43, 0);

        unint64_t v49 = *(void **)(v1 + v19);
        *(void *)(v1 + v19) = v44;
        id v50 = v44;

        *(void *)(v1 + v20) = sub_2356B3FB4(v50);
        swift_bridgeObjectRelease();
        uint64_t v51 = *(void *)(v1 + v20);
        uint64_t v52 = MEMORY[0x263F8EE80];
        v65[0] = MEMORY[0x263F8EE80];
        uint64_t v53 = *(void *)(v51 + 16);
        if (v53)
        {
          uint64_t v54 = v51 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
          uint64_t v55 = *(void *)(v11 + 72);
          swift_bridgeObjectRetain_n();
          do
          {
            uint64_t v56 = sub_2356B4D70(v54, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
            id v57 = (void *)MEMORY[0x237DE9500](v56);
            sub_2356A98E4(v1, (uint64_t)v18, (uint64_t)v65);
            sub_2356B4D10((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
            v54 += v55;
            --v53;
          }
          while (v53);
          swift_bridgeObjectRelease_n();
          uint64_t v52 = v65[0];
        }
        *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks) = v52;
        swift_bridgeObjectRelease();
        id v58 = objc_msgSend(self, sel_currentDevice);
        unint64_t v59 = (char *)objc_msgSend(v58, sel_orientation);

        if ((unint64_t)(v59 - 2) >= 3) {
          uint64_t v60 = 1;
        }
        else {
          uint64_t v60 = qword_235954678[(void)(v59 - 2)];
        }
        id v31 = v64;
        *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastOrientation) = v60;
        swift_release();
        swift_release();

        goto LABEL_10;
      }
    }
  }
}

void sub_2356A8DFC(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v10 = type metadata accessor for DetectedTextBlock();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v18 = a1;
    unint64_t v19 = sub_2356B3FB4(v18);
    unint64_t v20 = v19;
    uint64_t v21 = MEMORY[0x263F8EE80];
    v50[0] = MEMORY[0x263F8EE80];
    uint64_t v22 = *(void *)(v19 + 16);
    if (v22)
    {
      id v48 = a5;
      id v49 = v18;
      uint64_t v23 = v19 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      uint64_t v24 = *(void *)(v11 + 72);
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v25 = sub_2356B4D70(v23, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        uint64_t v26 = (void *)MEMORY[0x237DE9500](v25);
        sub_2356A98E4(a2, (uint64_t)v17, (uint64_t)v50);
        sub_2356B4D10((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        v23 += v24;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      id v18 = v49;
      uint64_t v21 = v50[0];
      a5 = v48;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FEC0);
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = MEMORY[0x263F8D310];
    *(_OWORD *)(v27 + 16) = xmmword_235954560;
    *(void *)(v27 + 56) = v28;
    *(void *)(v27 + 32) = 0x6675426C65786970;
    *(void *)(v27 + 40) = 0xEB00000000726566;
    type metadata accessor for CVBuffer(0);
    *(void *)(v27 + 64) = a3;
    *(void *)(v27 + 120) = v28;
    *(void *)(v27 + 88) = v29;
    *(void *)(v27 + 96) = 0x636F6C4274786574;
    *(void *)(v27 + 104) = 0xEA0000000000736BLL;
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810480);
    *(void *)(v27 + 128) = v20;
    *(void *)(v27 + 184) = v28;
    *(void *)(v27 + 152) = v30;
    *(void *)(v27 + 160) = 0xD000000000000011;
    *(void *)(v27 + 168) = 0x800000023596D000;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FE68);
    *(void *)(v27 + 192) = v21;
    *(void *)(v27 + 248) = v28;
    *(void *)(v27 + 216) = v31;
    *(void *)(v27 + 224) = 0x6172656D6163;
    *(void *)(v27 + 232) = 0xE600000000000000;
    uint64_t v32 = sub_2356594B0(0, &qword_26880FDF0);
    *(void *)(v27 + 256) = a4;
    *(void *)(v27 + 312) = v28;
    *(void *)(v27 + 280) = v32;
    *(void *)(v27 + 288) = 0x7461746E6569726FLL;
    *(void *)(v27 + 296) = 0xEB000000006E6F69;
    uint64_t v33 = self;
    id v34 = a3;
    id v35 = a4;
    id v36 = objc_msgSend(v33, sel_currentDevice);
    id v37 = (char *)objc_msgSend(v36, sel_orientation);

    if ((unint64_t)(v37 - 2) > 2) {
      uint64_t v38 = 1;
    }
    else {
      uint64_t v38 = qword_235954678[(void)(v37 - 2)];
    }
    type metadata accessor for UIInterfaceOrientation(0);
    *(void *)(v27 + 344) = v39;
    *(void *)(v27 + 320) = v38;
    sub_2356594B0(0, &qword_26880FEC8);
    id v40 = (void *)sub_23594A108();
    id v41 = objc_msgSend(a5, sel_sceneDepth);
    if (v41)
    {
      os_signpost_type_t v42 = v41;
      id v43 = objc_msgSend(v41, sel_depthMap);

      if (v43)
      {
        v50[0] = 0x70614D6874706564;
        v50[1] = 0xE800000000000000;
        id v44 = v43;
        objc_msgSend(v40, sel___swift_setObject_forKeyedSubscript_, v44, sub_23594ABE8());
        swift_unknownObjectRelease();
      }
    }
    if (qword_26880E568 != -1) {
      swift_once();
    }
    id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF910]), sel_init);
    id v46 = v40;
    sub_23577974C(v40, v45);
  }
}

uint64_t sub_2356A9268(void *a1, unint64_t *a2)
{
  uint64_t v9 = (int *)type metadata accessor for DetectedTextBlock();
  uint64_t v10 = *((void *)v9 - 1);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v22 = MEMORY[0x270FA5388](v17, v18, v19, v20, v21).n128_u64[0];
  uint64_t v24 = (char *)&v76 - v23;
  id v25 = objc_msgSend(a1, sel_getLines, v22);
  uint64_t v82 = sub_2356594B0(0, &qword_26880FEB8);
  unint64_t v26 = sub_235949D78();

  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v27) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v86 = MEMORY[0x263F8EE78];
  sub_2356764C4(0, v27 & ~(v27 >> 63), 0);
  if (v27 < 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  char v77 = a1;
  char v78 = v9;
  id v79 = v16;
  unint64_t v80 = a2;
  uint64_t v81 = v10;
  uint64_t v28 = 0;
  uint64_t v29 = v86;
  do
  {
    if ((v26 & 0xC000000000000001) != 0) {
      id v30 = (id)MEMORY[0x237DE87D0](v28, v26);
    }
    else {
      id v30 = *(id *)(v26 + 8 * v28 + 32);
    }
    uint64_t v31 = v30;
    objc_msgSend(v30, sel_confidence);
    int v33 = v32;

    uint64_t v86 = v29;
    unint64_t v35 = *(void *)(v29 + 16);
    unint64_t v34 = *(void *)(v29 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_2356764C4(v34 > 1, v35 + 1, 1);
      uint64_t v29 = v86;
    }
    ++v28;
    *(void *)(v29 + 16) = v35 + 1;
    *(_DWORD *)(v29 + 4 * v35 + 32) = v33;
  }
  while (v27 != v28);
  swift_bridgeObjectRelease();
  a2 = v80;
  uint64_t v10 = v81;
  uint64_t v9 = v78;
  uint64_t v16 = v79;
  a1 = v77;
LABEL_14:
  uint64_t v36 = *(void *)(v29 + 16);
  if (!v36)
  {
    swift_bridgeObjectRelease();
    double v6 = 0.0;
    goto LABEL_24;
  }
  if (v36 == 1)
  {
    uint64_t v37 = 0;
    float v38 = 0.0;
  }
  else
  {
    uint64_t v37 = v36 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v39 = (float *)(v29 + 36);
    float v38 = 0.0;
    uint64_t v40 = v36 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      float v38 = (float)(v38 + *(v39 - 1)) + *v39;
      v39 += 2;
      v40 -= 2;
    }
    while (v40);
    if (v36 == v37) {
      goto LABEL_23;
    }
  }
  uint64_t v41 = v36 - v37;
  os_signpost_type_t v42 = (float *)(v29 + 4 * v37 + 32);
  do
  {
    float v43 = *v42++;
    float v38 = v38 + v43;
    --v41;
  }
  while (v41);
LABEL_23:
  swift_bridgeObjectRelease();
  double v6 = v38;
LABEL_24:
  sub_235799C2C();
  uint64_t v81 = v44;
  objc_msgSend(a1, sel_boundingBox);
  uint64_t v2 = v45;
  uint64_t v3 = v46;
  uint64_t v4 = v47;
  uint64_t v5 = v48;
  id v49 = objc_msgSend(a1, sel_getLines);
  unint64_t v50 = sub_235949D78();

  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_23594A998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v51)
  {
    id v52 = objc_msgSend(a1, sel_getLines);
    unint64_t v53 = sub_235949D78();

    if (!(v53 >> 62))
    {
      uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_29:
      swift_bridgeObjectRelease();
      double v55 = v6 / (double)v54;
      goto LABEL_31;
    }
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_23594A998();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  objc_msgSend(a1, sel_confidence);
  double v55 = v56;
LABEL_31:
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  id v57 = a1;
  uint64_t v58 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectLanguages;
  swift_beginAccess();
  uint64_t v59 = *(void *)(v58 + 8);
  char v60 = *(unsigned char *)(v58 + 16);
  v83[0] = *(void *)v58;
  v83[1] = v59;
  char v84 = v60;
  uint64_t v61 = qword_26AF144C0;
  uint64_t v62 = swift_bridgeObjectRetain();
  if (v61 != -1) {
    uint64_t v62 = swift_once();
  }
  MEMORY[0x270FA5388](v62, v63, v64, v65, v66);
  *(&v76 - 2) = (uint64_t)v83;
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  char v67 = v85;
  id v68 = objc_msgSend(v57, sel_getCROutputRegion);
  sub_235947968();
  uint64_t v69 = v9[9];
  *(void *)&v24[v9[5]] = v81;
  uint64_t v70 = &v24[v9[6]];
  *(void *)uint64_t v70 = v2;
  *((void *)v70 + 1) = v3;
  *((void *)v70 + 2) = v4;
  *((void *)v70 + 3) = v5;
  *(double *)&v24[v9[7]] = v55;
  v24[v9[8]] = v67;
  *(void *)&v24[v69] = v68;
  sub_2356B4D70((uint64_t)v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
  unint64_t v71 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v71;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v71 = sub_2356CE028(0, *(void *)(v71 + 16) + 1, 1, v71);
    *a2 = v71;
  }
  unint64_t v74 = *(void *)(v71 + 16);
  unint64_t v73 = *(void *)(v71 + 24);
  if (v74 >= v73 >> 1)
  {
    unint64_t v71 = sub_2356CE028(v73 > 1, v74 + 1, 1, v71);
    *a2 = v71;
  }
  *(void *)(v71 + 16) = v74 + 1;
  sub_2356B4CA8((uint64_t)v16, v71+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v74, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
  return sub_2356B4D10((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
}

void sub_2356A98E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v59 = a2;
  uint64_t v4 = type metadata accessor for DetectedTextBlock();
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFD8);
  MEMORY[0x270FA5388](v11 - 8, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v54 - v23;
  uint64_t v25 = type metadata accessor for SpatialTextBlock();
  uint64_t v58 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v54 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v32 = objc_msgSend(self, sel_currentDevice);
  int v33 = (char *)objc_msgSend(v32, sel_orientation);

  if ((unint64_t)(v33 - 2) > 2) {
    uint64_t v34 = 1;
  }
  else {
    uint64_t v34 = qword_235954678[(void)(v33 - 2)];
  }
  uint64_t v35 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame;
  uint64_t v36 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
  if (v36)
  {
    id v37 = objc_msgSend(v36, sel_camera);
    if (v37)
    {
      float v38 = v37;
      uint64_t v39 = *(void **)(a1 + v35);
      if (v39 && (id v40 = objc_msgSend(v39, sel_capturedImage)) != 0)
      {
        uint64_t v41 = v40;
        os_signpost_type_t v42 = *(void **)(a1 + v35);
        if (v42)
        {
          id v56 = v41;
          id v43 = objc_msgSend(v42, sel_sceneDepth);
          if (v43
            && (uint64_t v44 = v43,
                id v45 = objc_msgSend(v43, sel_depthMap),
                v44,
                v45))
          {
            uint64_t v46 = v45;
            sub_2356B4D70(v59, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
            id v47 = v38;
            id v48 = v56;
            id v49 = v46;
            id v56 = v48;
            unint64_t v50 = (__CVBuffer *)v48;
            uint64_t v51 = v49;
            sub_235921B18((uint64_t)v10, v47, v50, v49, v34, (uint64_t)v24);
            uint64_t v52 = v58;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v24, 1, v25) == 1)
            {

              sub_23566A3AC((uint64_t)v24, &qword_26880EFD8);
            }
            else
            {
              id v55 = v47;
              sub_2356B4CA8((uint64_t)v24, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
              sub_2356B4D70(v59, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
              sub_2356B4D70((uint64_t)v31, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v17, 0, 1, v25);
              sub_2356A5F78((uint64_t)v17, (uint64_t)v10);

              sub_2356B4D10((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
            }
          }
          else
          {
          }
        }
        else
        {
          unint64_t v53 = v41;
        }
      }
      else
      {
      }
    }
  }
}

void sub_2356A9CE8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, char a6, int a7, unint64_t a8, uint64_t a9, char a10)
{
  unint64_t v380 = a8;
  LODWORD(v381) = a7;
  id v382 = a5;
  uint64_t v383 = a4;
  uint64_t v15 = sub_235947908();
  uint64_t v348 = *(void *)(v15 - 8);
  uint64_t v349 = v15;
  MEMORY[0x270FA5388](v15, v16, v17, v18, v19);
  v347 = (char *)&v331 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFD8);
  MEMORY[0x270FA5388](v21 - 8, v22, v23, v24, v25);
  uint64_t v371 = (uint64_t)&v331 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v370 = type metadata accessor for SpatialTextBlock();
  uint64_t v362 = *(void *)(v370 - 8);
  MEMORY[0x270FA5388](v370, v27, v28, v29, v30);
  uint64_t v365 = (uint64_t)&v331 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v389 = (int *)type metadata accessor for DetectedTextBlock();
  uint64_t v388 = *((void *)v389 - 1);
  MEMORY[0x270FA5388](v389, v32, v33, v34, v35);
  id v37 = (char *)&v331 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38, v39, v40, v41, v42);
  uint64_t v384 = (uint64_t)&v331 - v43;
  MEMORY[0x270FA5388](v44, v45, v46, v47, v48);
  uint64_t v385 = (uint64_t)&v331 - v49;
  MEMORY[0x270FA5388](v50, v51, v52, v53, v54);
  v386 = (char *)&v331 - v55;
  MEMORY[0x270FA5388](v56, v57, v58, v59, v60);
  uint64_t v62 = (char *)&v331 - v61;
  uint64_t v346 = v63;
  MEMORY[0x270FA5388](v64, v65, v66, v67, v68);
  uint64_t v70 = (char *)&v331 - v69;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v71 - 8, v72, v73, v74, v75);
  char v77 = (char *)&v331 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    return;
  }
  LODWORD(v387) = a6 & 1;
  double v78 = *(double *)&a1;
  double v79 = *(double *)&a2;
  v400[0] = 0;
  double v379 = *(double *)&OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint;
  if (sub_2358D0060()) {
    double v80 = *(double *)&a2;
  }
  else {
    double v80 = 1.0 - *(double *)&a2;
  }
  double v398 = 0.0;
  double v399 = 0.0;
  uint64_t v81 = v10;
  id v82 = *(id *)(v10 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService);
  BOOL v83 = sub_2357A2314();

  if (v83)
  {
    if ((v381 & 1) == 0)
    {
      uint64_t v87 = sub_235949EA8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v77, 1, 1, v87);
      uint64_t v85 = swift_allocObject();
      *(void *)(v85 + 16) = 0;
      *(void *)(v85 + 24) = 0;
      *(void *)(v85 + 32) = a1;
      *(double *)(v85 + 40) = *(double *)&a2;
      *(double *)(v85 + 48) = v80;
      *(unsigned char *)(v85 + 56) = 0;
      *(void *)(v85 + 64) = v81;
      sub_2359470F8();
      uint64_t v86 = &unk_26880FE78;
      goto LABEL_10;
    }
    if ((a10 & 1) == 0)
    {
      uint64_t v84 = sub_235949EA8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v77, 1, 1, v84);
      uint64_t v85 = swift_allocObject();
      *(void *)(v85 + 16) = 0;
      *(void *)(v85 + 24) = 0;
      *(void *)(v85 + 32) = v380;
      *(void *)(v85 + 40) = a9;
      *(void *)(v85 + 48) = v81;
      sub_2359470F8();
      uint64_t v86 = &unk_26880FE88;
LABEL_10:
      sub_2357A1990((uint64_t)v77, (uint64_t)v86, v85);
      swift_release();
    }
  }
  uint64_t v88 = *(void *)(v81 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument);
  v339 = v77;
  uint64_t v335 = a1;
  v336 = v37;
  uint64_t v369 = a2;
  if (v88
    && (uint64_t v89 = *(void *)(v81 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks),
        (uint64_t v90 = *(void *)(v89 + 16)) != 0))
  {
    BOOL v337 = v90 != 1;
    if (v90 == 1)
    {
      swift_bridgeObjectRetain();
      unsigned int v341 = 0;
      int v343 = 0;
    }
    else
    {
      uint64_t v91 = swift_bridgeObjectRetain();
      uint64_t v92 = sub_23592CE7C(v91);
      sub_235751CFC(v92, 1, (char *)&v396);
      uint64_t v93 = swift_bridgeObjectRelease();
      int v343 = v396;
      CGFloat v94 = CGRectMake(v93);
      sub_2356B08B0(v89, &v398, (char *)&v396, v94, v95);
      unsigned int v341 = v396;
    }
    uint64_t v97 = sub_23571A558(v89);
    if (v97)
    {
      uint64_t v98 = v97;
      uint64_t v99 = 0;
      unint64_t v96 = 0;
      uint64_t v100 = *(unsigned __int8 *)(v388 + 80);
      uint64_t v381 = v89;
      uint64_t v101 = v89 + ((v100 + 32) & ~v100);
      do
      {
        uint64_t v102 = v99 + 1;
        if (__OFADD__(v99, 1))
        {
          __break(1u);
          goto LABEL_147;
        }
        uint64_t v103 = sub_2356B4D70(v101 + *(void *)(v388 + 72) * v99, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        uint64_t v104 = (void *)MEMORY[0x237DE9500](v103);
        sub_2356AD484((uint64_t)v70, v81, v383, (uint64_t)v382, (__int32)v387, v400, v78, v79);
        sub_2356B4D10((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        ++v99;
      }
      while (v102 != v98);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v337 = 0;
    unsigned int v341 = 0;
    int v343 = 0;
  }
  unint64_t v96 = 0;
LABEL_23:
  if (qword_26880E568 != -1) {
    goto LABEL_151;
  }
LABEL_24:
  uint64_t v105 = qword_26882BFB0;
  swift_beginAccess();
  unint64_t v363 = *(void *)(v105 + 24);
  if (v363 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_23594A998();
    if (!v106)
    {
LABEL_153:
      swift_bridgeObjectRelease();
      unsigned int v359 = 0;
      *(void *)&long long v396 = 0;
      *((void *)&v396 + 1) = 0xE000000000000000;
      int v345 = 1;
LABEL_154:
      unint64_t v276 = 0xE900000000000074;
      int v265 = 1;
      int v266 = v343;
      switch(v343)
      {
        case 1:
          swift_bridgeObjectRelease();
          int v266 = 0;
          break;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          char v277 = sub_23594AB78();
          swift_bridgeObjectRelease();
          if ((v277 & 1) == 0)
          {
            if (qword_26880E5C8 != -1) {
              goto LABEL_238;
            }
            goto LABEL_159;
          }
          int v266 = 0;
          break;
        default:
          goto LABEL_163;
      }
      goto LABEL_163;
    }
  }
  else
  {
    uint64_t v106 = *(void *)((v363 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v106) {
      goto LABEL_153;
    }
  }
  uint64_t v344 = v106;
  double v332 = v79;
  uint64_t v352 = v81 + *(void *)&v379;
  unint64_t v107 = v363;
  BOOL v108 = sub_2357A7F44(v363);
  uint64_t v109 = v107;
  BOOL v355 = v108;
  unsigned int v359 = 0;
  int v340 = 0;
  unint64_t v110 = 0;
  unint64_t v338 = v107 + 32;
  v111.i32[1] = HIDWORD(v383);
  *(float *)&long long v112 = *(float *)&v383 / 100.0;
  long long v358 = v112;
  *(float *)&long long v112 = *((float *)&v383 + 1) / 100.0;
  v366 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v362 + 48);
  v367 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v362 + 56);
  int v345 = 1;
  unint64_t v354 = 0xEA0000000000736BLL;
  uint64_t v113 = &selRef_didToggleFlashlightSwitch_;
  uint64_t v353 = MEMORY[0x263F8EE58] + 8;
  *(float *)v111.i32 = *(float *)&v382 / 100.0;
  unint64_t v351 = 0xEB00000000726566;
  float32x4_t v357 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v112, 0);
  double v79 = -0.025;
  double v379 = 1.05;
  double v350 = 0.01;
  float32x4_t v356 = (float32x4_t)vdupq_lane_s32(v111, 0);
  unint64_t v372 = 0x800000023596D000;
  uint64_t v368 = v81;
  while (1)
  {
    BOOL v114 = v355;
    unint64_t v115 = v110;
    uint64_t v116 = v109;
    sub_23590CAFC(v110, v355, v109);
    if (v114) {
      id v117 = *(id *)(v338 + 8 * v115);
    }
    else {
      id v117 = (id)MEMORY[0x237DE87D0](v115, v116);
    }
    BOOL v118 = __OFADD__(v115, 1);
    unint64_t v119 = v115 + 1;
    if (v118) {
      goto LABEL_149;
    }
    unint64_t v360 = v119;
    id v361 = v117;
    id v120 = sub_2357799A0(v117);
    if (!v120)
    {
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v121 = v120;
    *(void *)&long long v394 = 0x636F6C4274786574;
    *((void *)&v394 + 1) = v354;
    uint64_t v122 = sub_23594ABE8();
    uint64_t v123 = v113[53];
    id v378 = v121;
    id v124 = objc_msgSend(v121, v123, v122);
    swift_unknownObjectRelease();
    if (v124)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v394 = 0u;
      long long v395 = 0u;
    }
    sub_23566A348((uint64_t)&v394, (uint64_t)&v396, &qword_26AF15750);
    id v125 = v378;
    if (!v397)
    {

      goto LABEL_130;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_268810480);
    if ((swift_dynamicCast() & 1) == 0)
    {

      goto LABEL_135;
    }
    unint64_t v126 = v392;
    *(void *)&long long v394 = 0x7461746E6569726FLL;
    *((void *)&v394 + 1) = 0xEB000000006E6F69;
    id v127 = objc_msgSend(v125, v113[53], sub_23594ABE8());
    swift_unknownObjectRelease();
    if (v127)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v394 = 0u;
      long long v395 = 0u;
    }
    sub_23566A348((uint64_t)&v394, (uint64_t)&v396, &qword_26AF15750);
    id v128 = v378;
    if (!v397)
    {

      swift_bridgeObjectRelease();
LABEL_130:
      sub_23566A3AC((uint64_t)&v396, &qword_26AF15750);
LABEL_135:
      swift_bridgeObjectRelease();
      return;
    }
    type metadata accessor for UIInterfaceOrientation(0);
    if ((swift_dynamicCast() & 1) == 0
      || (uint64_t v342 = v392,
          *(void *)&long long v394 = 0x70614D6874706564,
          *((void *)&v394 + 1) = 0xE800000000000000,
          id v129 = objc_msgSend(v128, sel___swift_objectForKeyedSubscript_, sub_23594ABE8()),
          swift_unknownObjectRelease(),
          !v129))
    {

      swift_bridgeObjectRelease();
      goto LABEL_135;
    }
    sub_23594A6A8();
    swift_unknownObjectRelease();
    sub_23567183C(&v394, &v396);
    *(void *)&long long v392 = 0x6172656D6163;
    *((void *)&v392 + 1) = 0xE600000000000000;
    id v130 = objc_msgSend(v128, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
    swift_unknownObjectRelease();
    uint64_t v113 = &selRef_didToggleFlashlightSwitch_;
    if (v130)
    {
      sub_23594A6A8();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v392 = 0u;
      long long v393 = 0u;
    }
    sub_23566A348((uint64_t)&v392, (uint64_t)&v394, &qword_26AF15750);
    id v131 = v378;
    if (!*((void *)&v395 + 1))
    {

      swift_bridgeObjectRelease();
      sub_23566A3AC((uint64_t)&v394, &qword_26AF15750);
LABEL_134:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v396);
      goto LABEL_135;
    }
    sub_2356594B0(0, &qword_26880FDF0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_134;
    }
    id v377 = *(id *)&v390[0];
    *(void *)&long long v392 = 0x6675426C65786970;
    *((void *)&v392 + 1) = v351;
    id v132 = objc_msgSend(v131, (SEL)&selRef_boundingBox + 7, sub_23594ABE8());
    swift_unknownObjectRelease();
    if (!v132)
    {

      swift_bridgeObjectRelease();
      goto LABEL_134;
    }
    sub_23594A6A8();
    swift_unknownObjectRelease();
    sub_23567183C(&v392, &v394);
    if (sub_23571A558(v126) < 1)
    {
      int v345 = 0;
    }
    else
    {
      uint64_t v133 = sub_23592CE7C(v126);
      sub_235751CFC(v133, 1, (char *)&v392);
      uint64_t v134 = swift_bridgeObjectRelease();
      int v340 = v392;
      CGFloat v135 = CGRectMake(v134);
      sub_2356B08B0(v126, &v399, (char *)&v392, v135, v136);
      unsigned int v359 = v392;
    }
    if (qword_26AF13B78 != -1) {
      swift_once();
    }
    uint64_t v137 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakFingerLocation;
    swift_beginAccess();
    uint64_t v138 = *(void *)(v137 + 8);
    char v139 = *(unsigned char *)(v137 + 16);
    *(void *)&long long v392 = *(void *)v137;
    *((void *)&v392 + 1) = v138;
    LOBYTE(v393) = v139;
    uint64_t v140 = qword_26AF144C0;
    uint64_t v141 = swift_bridgeObjectRetain();
    if (v140 != -1) {
      uint64_t v141 = swift_once();
    }
    MEMORY[0x270FA5388](v141, v142, v143, v144, v145);
    *(&v331 - 2) = (uint64_t)&v392;
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    if (LOBYTE(v390[0]) == 1)
    {
      sub_2356FEC24(v126);
      unint64_t v126 = v146;
    }
    if (*(unsigned char *)(v352 + 16))
    {
      BOOL v147 = 1;
LABEL_63:
      BOOL v364 = v147;
      goto LABEL_65;
    }
    if (vabdd_f64(*(double *)v352, v78) > v350)
    {
      BOOL v147 = vabdd_f64(*(double *)(v352 + 8), v332) > v350;
      goto LABEL_63;
    }
    BOOL v364 = 0;
LABEL_65:
    uint64_t v383 = sub_23571A558(v126);
    if (v383) {
      break;
    }
LABEL_27:

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v394);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v396);
    unint64_t v110 = v360;
    uint64_t v109 = v363;
    if (v360 == v344)
    {
      unint64_t v96 = 0xE900000000000074;
      swift_bridgeObjectRelease();
      *(void *)&long long v396 = 0;
      *((void *)&v396 + 1) = 0xE000000000000000;
      switch(v340)
      {
        case 1:
          swift_bridgeObjectRelease();
          int v265 = 0;
          int v266 = 1;
          break;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          goto LABEL_139;
        default:
          goto LABEL_154;
      }
      goto LABEL_163;
    }
  }
  uint64_t v148 = self;
  unint64_t v149 = 0;
  uint64_t v150 = *(unsigned __int8 *)(v388 + 80);
  uint64_t v331 = ~v150;
  uint64_t v333 = (v150 + 32) & ~v150;
  uint64_t v334 = v150;
  uint64_t v381 = v126 + v333;
  id v382 = v148;
  unint64_t v380 = v126;
  while (1)
  {
    sub_23590CADC(v149, 1, v126);
    unint64_t v151 = v149 + 1;
    if (__OFADD__(v149, 1)) {
      break;
    }
    sub_2356B4D70(v381 + *(void *)(v388 + 72) * v149, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
    uint64_t v152 = (double *)&v62[v389[6]];
    double v153 = *v152;
    double v154 = v152[1];
    double v155 = v152[2];
    double v156 = v152[3];
    id v157 = objc_msgSend(v382, sel_currentDevice);
    id v158 = objc_msgSend(v157, sel_orientation);

    if (v158 == (id)3 || v158 == (id)4)
    {
      double v153 = CGRectMake(v159);
      double v155 = v161;
      double v156 = v162;
    }
    else
    {
      double v160 = 0.0;
      if (1.0 - v154 - v156 > 0.0) {
        double v160 = 1.0 - v154 - v156;
      }
    }
    double v163 = v153 + -0.025;
    double v164 = v160 + -0.025;
    double v165 = (v155 + 0.05) * v379;
    double v166 = (v156 + 0.05) * v379;
    uint64_t v167 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakFingerLocation;
    uint64_t v168 = swift_beginAccess();
    uint64_t v169 = *(void *)(v167 + 8);
    char v170 = *(unsigned char *)(v167 + 16);
    *(void *)&long long v392 = *(void *)v167;
    *((void *)&v392 + 1) = v169;
    LOBYTE(v393) = v170;
    MEMORY[0x270FA5388](v168, v171, v172, v173, v174);
    *(&v331 - 2) = (uint64_t)&v392;
    swift_bridgeObjectRetain();
    sub_23594A2A8();
    uint64_t v175 = swift_bridgeObjectRelease();
    if (v387)
    {
      v401.double x = CGRectMake(v175);
      v401.double y = v182;
      v402.origin.double x = v163;
      v402.origin.double y = v164;
      v402.size.double width = v165;
      v402.size.double height = v166;
      BOOL v183 = CGRectContainsPoint(v402, v401);
      id v181 = v386;
      uint64_t v184 = sub_2356B4D70((uint64_t)v62, (uint64_t)v386, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
      uint64_t v113 = &selRef_didToggleFlashlightSwitch_;
      if (!v183) {
        goto LABEL_106;
      }
    }
    else
    {
      objc_msgSend(v377, sel_transform);
      float32x4_t v373 = v176;
      float32x4_t v374 = v177;
      float32x4_t v375 = v179;
      float32x4_t v376 = v178;
      *(void *)&v390[0] = 0xD000000000000011;
      *((void *)&v390[0] + 1) = v372;
      uint64_t v113 = &selRef_didToggleFlashlightSwitch_;
      id v180 = objc_msgSend(v378, sel___swift_objectForKeyedSubscript_, sub_23594ABE8());
      swift_unknownObjectRelease();
      id v181 = v386;
      if (v180)
      {
        sub_23594A6A8();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v390, 0, sizeof(v390));
      }
      sub_23566A348((uint64_t)v390, (uint64_t)&v392, &qword_26AF15750);
      if (!*((void *)&v393 + 1))
      {
        sub_23566A3AC((uint64_t)&v392, &qword_26AF15750);
LABEL_105:
        sub_2356B4D70((uint64_t)v62, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
LABEL_106:
        sub_2356B4D10((uint64_t)v181, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        uint64_t v225 = v385;
        sub_2356B4D70((uint64_t)v62, v385, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        sub_2356B4D10(v225, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
LABEL_107:
        uint64_t v226 = v384;
        sub_2356B4D70((uint64_t)v62, v384, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        goto LABEL_108;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880FE68);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_105;
      }
      uint64_t v197 = v391;
      if (*(void *)(v391 + 16) && (uint64_t v198 = sub_235878460((uint64_t)v62), (v199 & 1) != 0))
      {
        sub_2356B4D70(*(void *)(v197 + 56) + *(void *)(v362 + 72) * v198, v371, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
        uint64_t v200 = 0;
      }
      else
      {
        uint64_t v200 = 1;
      }
      uint64_t v220 = v370;
      uint64_t v219 = v371;
      (*v367)(v371, v200, 1, v370);
      swift_bridgeObjectRelease();
      if ((*v366)(v219, 1, v220) == 1)
      {
        sub_23566A3AC(v219, &qword_26880EFD8);
        uint64_t v113 = &selRef_didToggleFlashlightSwitch_;
        goto LABEL_105;
      }
      float32x4_t v221 = vaddq_f32(v375, vmlaq_f32(vmlaq_f32(vmulq_n_f32(v373, *(float *)&v358), v357, v374), v356, v376));
      v221.i32[3] = 0;
      float32x4_t v376 = v221;
      uint64_t v222 = v219;
      uint64_t v223 = v365;
      sub_2356B4CA8(v222, v365, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
      unint64_t v224 = sub_2359223A8(v376);
      sub_2356B4D10(v223, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
      uint64_t v113 = &selRef_didToggleFlashlightSwitch_;
      if ((v224 & 0x100000000) != 0 || *(float *)&v224 >= 0.25) {
        goto LABEL_105;
      }
      uint64_t v184 = sub_2356B4D70((uint64_t)v62, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
    }
    uint64_t v189 = *(void *)&v181[v389[5]];
    if (!v189) {
      goto LABEL_106;
    }
    MEMORY[0x270FA5388](v184, v185, v186, v187, v188);
    *(&v331 - 2) = (uint64_t)v181;
    swift_bridgeObjectRetain();
    uint64_t v190 = sub_235707434((void (*)(uint64_t *__return_ptr, void *))sub_2356B5830, (uint64_t)(&v331 - 4), v189);
    swift_bridgeObjectRelease();
    unint64_t v191 = sub_2358D1930(0);
    *(void *)&long long v392 = v191;
    uint64_t v192 = sub_235724598(v190);
    if (v192)
    {
      uint64_t v193 = v192;
      if (v192 < 1)
      {
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        swift_once();
        goto LABEL_24;
      }
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v193; ++i)
      {
        uint64_t v195 = *(void **)(v190 + 8 * i + 32);
        if (v195)
        {
          id v196 = v195;
          MEMORY[0x237DE7CE0]();
          sub_2358D19E8(*(void *)((v392 & 0xFFFFFFFFFFFFFF8) + 0x10));
          sub_235949DD8();
          sub_235949D98();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v191 = v392;
      uint64_t v81 = v368;
    }
    sub_2358D0B1C(8236, 0xE200000000000000, v191);
    uint64_t v202 = v201;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v203 = objc_msgSend(v202, sel_string);

    sub_2356B4D10((uint64_t)v386, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
    uint64_t v204 = v385;
    sub_2356B4D70((uint64_t)v62, v385, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
    uint64_t v209 = v204;
    uint64_t v210 = *(void *)(v204 + v389[5]);
    if (!v210)
    {
      sub_2356B4D10(v209, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
      uint64_t v226 = v384;
      sub_2356B4D70((uint64_t)v62, v384, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
      uint64_t v233 = v369;
      uint64_t v113 = &selRef_didToggleFlashlightSwitch_;
LABEL_117:
      *(double *)v376.i64 = v165;
      double v235 = *(double *)(v226 + v389[7]);
      sub_2356B4D10(v226, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
      BOOL v236 = v364;
      if (v235 <= 0.25) {
        BOOL v236 = 0;
      }
      if (v236)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v237 = (uint64_t (*)(void))sub_235949EA8();
        uint64_t v238 = *((void *)v237 - 1);
        v386 = *(char **)(v238 + 56);
        v387 = (uint64_t (*)())v237;
        uint64_t v385 = v238 + 56;
        ((void (*)(char *, uint64_t, uint64_t))v386)(v339, 1, 1);
        uint64_t v239 = v81;
        uint64_t v240 = (uint64_t)v336;
        sub_2356B4D70((uint64_t)v62, (uint64_t)v336, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        uint64_t v241 = v333;
        uint64_t v388 = v346 + 7;
        unint64_t v242 = (v333 + v346 + 7) & 0xFFFFFFFFFFFFFFF8;
        v389 = (int *)(v334 | 7);
        uint64_t v243 = swift_allocObject();
        *(void *)(v243 + 16) = 0;
        *(void *)(v243 + 24) = 0;
        sub_2356B4CA8(v240, v243 + v241, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        *(void *)(v243 + v242) = v239;
        sub_2359470F8();
        uint64_t v244 = (uint64_t)v339;
        sub_2357A1990((uint64_t)v339, (uint64_t)&unk_26880FE50, v243);
        swift_release();
        uint64_t v245 = v352;
        *(void *)uint64_t v352 = v335;
        *(void *)(v245 + 8) = v233;
        *(unsigned char *)(v245 + 16) = 0;
        *(void *)(v239 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements) = 0;
        *(unsigned char *)(v239 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback) = 0;
        uint64_t v246 = v347;
        sub_2359478F8();
        uint64_t v247 = v239 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastPointSpeakAnnouncementTime;
        swift_beginAccess();
        (*(void (**)(uint64_t, char *, uint64_t))(v348 + 40))(v247, v246, v349);
        swift_endAccess();
        uint64_t v248 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__outlinePointSpeak;
        uint64_t v249 = swift_beginAccess();
        uint64_t v250 = *(void *)(v248 + 8);
        char v251 = *(unsigned char *)(v248 + 16);
        *(void *)&long long v392 = *(void *)v248;
        *((void *)&v392 + 1) = v250;
        LOBYTE(v393) = v251;
        MEMORY[0x270FA5388](v249, v252, v253, v254, v255);
        *(&v331 - 2) = (uint64_t)&v392;
        swift_bridgeObjectRetain();
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        if (LOBYTE(v390[0]) == 1)
        {
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)()))v386)(v244, 1, 1, v387);
          v387 = type metadata accessor for DetectedTextBlock;
          uint64_t v256 = (uint64_t)v336;
          sub_2356B4D70((uint64_t)v62, (uint64_t)v336, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
          sub_23566A650((uint64_t)&v394, (uint64_t)&v392);
          sub_23566A650((uint64_t)&v396, (uint64_t)v390);
          uint64_t v257 = (v334 + 64) & v331;
          unint64_t v258 = (v257 + v388) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v259 = (v258 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v260 = (v259 + 39) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v261 = (v260 + 39) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v262 = swift_allocObject();
          *(void *)(v262 + 16) = 0;
          *(void *)(v262 + 24) = 0;
          *(double *)(v262 + 32) = v163;
          *(double *)(v262 + 40) = v164;
          *(void *)(v262 + 48) = v376.i64[0];
          *(double *)(v262 + 56) = v166;
          sub_2356B4CA8(v256, v262 + v257, (uint64_t (*)(void))v387);
          id v263 = v377;
          *(void *)(v262 + v258) = v377;
          sub_23567183C(&v392, (_OWORD *)(v262 + v259));
          sub_23567183C(v390, (_OWORD *)(v262 + v260));
          *(void *)(v262 + v261) = v342;
          *(void *)(v262 + ((v261 + 15) & 0xFFFFFFFFFFFFFFF8)) = v368;
          sub_2359470F8();
          id v264 = v263;
          sub_2357A1990((uint64_t)v339, (uint64_t)&unk_26880FE60, v262);
          swift_release();
        }

        sub_2356B4D10((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v394);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v396);
        return;
      }
      goto LABEL_109;
    }
    MEMORY[0x270FA5388](v209, v205, v206, v207, v208);
    *(&v331 - 2) = v211;
    swift_bridgeObjectRetain();
    uint64_t v212 = sub_235707434((void (*)(uint64_t *__return_ptr, void *))sub_2356B4C88, (uint64_t)(&v331 - 4), v210);
    swift_bridgeObjectRelease();
    unint64_t v213 = sub_2358D1930(0);
    *(void *)&long long v392 = v213;
    uint64_t v214 = sub_235724598(v212);
    if (v214)
    {
      uint64_t v215 = v214;
      if (v214 < 1) {
        goto LABEL_150;
      }
      swift_bridgeObjectRetain();
      for (uint64_t j = 0; j != v215; ++j)
      {
        uint64_t v217 = *(void **)(v212 + 8 * j + 32);
        if (v217)
        {
          id v218 = v217;
          MEMORY[0x237DE7CE0]();
          sub_2358D19E8(*(void *)((v392 & 0xFFFFFFFFFFFFFF8) + 0x10));
          sub_235949DD8();
          sub_235949D98();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v213 = v392;
      uint64_t v81 = v368;
    }
    sub_2358D0B1C(8236, 0xE200000000000000, v213);
    uint64_t v228 = v227;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v229 = objc_msgSend(v228, sel_string);

    uint64_t v230 = sub_235949AC8();
    uint64_t v232 = v231;

    uint64_t v233 = v369;
    if (!v230 && v232 == 0xE000000000000000)
    {
      sub_2356B4D10(v385, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
      swift_bridgeObjectRelease();
      uint64_t v113 = &selRef_didToggleFlashlightSwitch_;
      goto LABEL_107;
    }
    char v234 = sub_23594AB78();
    sub_2356B4D10(v385, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
    swift_bridgeObjectRelease();
    uint64_t v226 = v384;
    sub_2356B4D70((uint64_t)v62, v384, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
    uint64_t v113 = &selRef_didToggleFlashlightSwitch_;
    if ((v234 & 1) == 0) {
      goto LABEL_117;
    }
LABEL_108:
    sub_2356B4D10(v226, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
LABEL_109:
    sub_2356B4D10((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
    unint64_t v149 = v151;
    unint64_t v126 = v380;
    if (v151 == v383) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_139:
  char v267 = sub_23594AB78();
  swift_bridgeObjectRelease();
  if ((v267 & 1) == 0)
  {
    if (qword_26880E5C8 == -1) {
      goto LABEL_142;
    }
    goto LABEL_240;
  }
  int v265 = 0;
  int v266 = v340;
LABEL_163:
  while (2)
  {
    while (2)
    {
      *(void *)&long long v394 = 0;
      *((void *)&v394 + 1) = 0xE000000000000000;
      if (_BYTE)v359 && (v345)
      {
        switch((char)v359)
        {
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
            char v292 = sub_23594AB78();
            swift_bridgeObjectRelease();
            if (v292) {
              goto LABEL_181;
            }
            *(void *)&long long v394 = 0x6E69662E65766F6DLL;
            *((void *)&v394 + 1) = 0xEB00000000726567;
            double v288 = v80;
            sub_235949BD8();
            swift_bridgeObjectRelease();
            uint64_t v294 = String.localized.getter();
            uint64_t v296 = v295;
            swift_bridgeObjectRelease();
            *(void *)&long long v392 = v294;
            *((void *)&v392 + 1) = v296;
            sub_2356610AC();
            uint64_t v297 = sub_23594A638();
            uint64_t v299 = v298;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)&long long v394 = v297;
            *((void *)&v394 + 1) = v299;
            double v80 = v399;
            int v289 = v343;
            if (v265) {
              goto LABEL_191;
            }
            goto LABEL_195;
          default:
            swift_bridgeObjectRelease();
LABEL_181:
            double v288 = v80;
            if (!v265) {
              goto LABEL_188;
            }
            double v80 = 0.0;
            int v265 = 1;
            int v289 = v343;
            if (!v343) {
              goto LABEL_192;
            }
            goto LABEL_197;
        }
      }
      unsigned int v286 = v341;
      char v287 = !v337;
      if (!v341) {
        char v287 = 1;
      }
      if ((v287 & 1) == 0)
      {
        switch(v341)
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 7u:
          case 8u:
          case 9u:
            char v293 = sub_23594AB78();
            swift_bridgeObjectRelease();
            if (v293) {
              goto LABEL_186;
            }
            *(void *)&long long v394 = 0x6E69662E65766F6DLL;
            *((void *)&v394 + 1) = 0xEB00000000726567;
            double v288 = v80;
            sub_235949BD8();
            swift_bridgeObjectRelease();
            uint64_t v300 = String.localized.getter();
            uint64_t v302 = v301;
            swift_bridgeObjectRelease();
            *(void *)&long long v392 = v300;
            *((void *)&v392 + 1) = v302;
            sub_2356610AC();
            uint64_t v303 = sub_23594A638();
            uint64_t v305 = v304;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)&long long v394 = v303;
            *((void *)&v394 + 1) = v305;
            double v80 = v398;
            int v289 = v343;
            if (!v265) {
              goto LABEL_195;
            }
            break;
          default:
            swift_bridgeObjectRelease();
LABEL_186:
            double v288 = v80;
            int v289 = v343;
            if (!v265) {
              goto LABEL_188;
            }
            double v80 = 0.0;
            break;
        }
LABEL_191:
        int v265 = 1;
        if (!v289)
        {
LABEL_192:
          int v290 = 10;
          goto LABEL_198;
        }
LABEL_197:
        int v290 = v289;
        LOBYTE(v390[0]) = v289;
        sub_235753AB0(0, &v392);
        char v306 = v392;
        if (v392 == 12)
        {
LABEL_198:
          uint64_t v291 = (uint64_t)v339;
          unsigned int v286 = v341;
        }
        else
        {
          uint64_t v307 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutDeviceDirectionMessage;
          uint64_t v308 = *(void *)(v81
                           + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutDeviceDirectionMessage);
          if (v308 < 61)
          {
            uint64_t v311 = v308 + 1;
            uint64_t v291 = (uint64_t)v339;
          }
          else
          {
            uint64_t v309 = sub_235949EA8();
            uint64_t v291 = (uint64_t)v339;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v309 - 8) + 56))(v339, 1, 1, v309);
            uint64_t v310 = swift_allocObject();
            *(void *)(v310 + 16) = 0;
            *(void *)(v310 + 24) = 0;
            *(void *)(v310 + 32) = v81;
            *(unsigned char *)(v310 + 40) = v306;
            sub_2359470F8();
            sub_2357A1990(v291, (uint64_t)&unk_26880FE40, v310);
            swift_release();
            uint64_t v311 = 0;
          }
          unsigned int v286 = v341;
          *(void *)(v81 + v307) = v311;
        }
        goto LABEL_203;
      }
      if ((v345 & 1) == 0)
      {
        double v288 = v80;
        double v80 = 0.0;
        int v289 = v343;
        if (v265)
        {
          if (v343)
          {
            int v265 = v337;
            goto LABEL_197;
          }
          int v290 = 10;
          uint64_t v291 = (uint64_t)v339;
          int v265 = v337;
          goto LABEL_203;
        }
        int v265 = v337;
LABEL_196:
        int v289 = v266;
        goto LABEL_197;
      }
      double v288 = v80;
      int v289 = v343;
      if (!v265)
      {
LABEL_188:
        double v80 = 0.0;
LABEL_195:
        int v265 = 1;
        goto LABEL_196;
      }
      double v80 = 0.0;
      int v265 = 1;
      if (v343) {
        goto LABEL_197;
      }
      int v290 = 10;
      uint64_t v291 = (uint64_t)v339;
LABEL_203:
      if (v286) {
        unsigned int v312 = v286;
      }
      else {
        unsigned int v312 = 10;
      }
      if ((_BYTE)v359) {
        unint64_t v96 = v359;
      }
      else {
        unint64_t v96 = v312;
      }
      if (v265)
      {
        if (!v400[0] && v80 > 0.08)
        {
          id v313 = objc_retain(*(id *)(v81
                                   + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseFeedbackProcessor));
          sub_23585D7E4(v80);

          if (v290 == 10)
          {
            char v314 = v96 - 3;
            if (v96 - 3) <= 5u && ((0x2Du >> v314))
            {
              if (*(uint64_t *)(v81
                              + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutDeviceDirectionMessage) < 76)
              {
                uint64_t v317 = *(void *)(v81
                                 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage);
                BOOL v118 = __OFADD__(v317, 1);
                uint64_t v318 = v317 + 1;
                if (v118)
                {
                  __break(1u);
                  JUMPOUT(0x2356ACAA4);
                }
                *(void *)(v81
                          + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage) = v318;
              }
              else
              {
                unint64_t v96 = 0xA09090B0908uLL >> (8 * v314);
                uint64_t v315 = sub_235949EA8();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v315 - 8) + 56))(v291, 1, 1, v315);
                uint64_t v316 = swift_allocObject();
                *(void *)(v316 + 16) = 0;
                *(void *)(v316 + 24) = 0;
                *(void *)(v316 + 32) = v81;
                *(unsigned char *)(v316 + 40) = v96;
                sub_2359470F8();
                sub_2357A1990(v291, (uint64_t)&unk_26880FE30, v316);
                swift_release();
                *(void *)(v81
                          + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage) = 0;
              }
            }
          }
        }
      }
      if (v288 >= 0.2)
      {
        if (v288 <= 0.8) {
          goto LABEL_231;
        }
        if (*(uint64_t *)(v81
                        + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutDeviceDirectionMessage) >= 46)
        {
          uint64_t v322 = sub_235949EA8();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v322 - 8) + 56))(v291, 1, 1, v322);
          uint64_t v320 = swift_allocObject();
          *(void *)(v320 + 16) = 0;
          *(void *)(v320 + 24) = 0;
          *(void *)(v320 + 32) = v81;
          *(unsigned char *)(v320 + 40) = 8;
          sub_2359470F8();
          v321 = &unk_26880FE10;
          goto LABEL_225;
        }
      }
      else
      {
        if (*(uint64_t *)(v81
                        + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutDeviceDirectionMessage) >= 46)
        {
          uint64_t v319 = sub_235949EA8();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v319 - 8) + 56))(v291, 1, 1, v319);
          uint64_t v320 = swift_allocObject();
          *(void *)(v320 + 16) = 0;
          *(void *)(v320 + 24) = 0;
          *(void *)(v320 + 32) = v81;
          *(unsigned char *)(v320 + 40) = 10;
          sub_2359470F8();
          v321 = &unk_26880FE20;
LABEL_225:
          sub_2357A1990(v291, (uint64_t)v321, v320);
          swift_release();
          *(void *)(v81
                    + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage) = 0;
          goto LABEL_231;
        }
        uint64_t v323 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage;
        uint64_t v324 = *(void *)(v81
                         + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage);
        BOOL v118 = __OFADD__(v324, 1);
        uint64_t v325 = v324 + 1;
        if (!v118) {
          break;
        }
        __break(1u);
      }
      uint64_t v323 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage;
      uint64_t v326 = *(void *)(v81
                       + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage);
      BOOL v118 = __OFADD__(v326, 1);
      uint64_t v325 = v326 + 1;
      if (v118)
      {
        __break(1u);
LABEL_240:
        swift_once();
LABEL_142:
        unint64_t v268 = v96 - 48;
        uint64_t v269 = 0x4850492E65766F6DLL;
        if (byte_268812C68) {
          uint64_t v269 = 0x4150492E65766F6DLL;
        }
        else {
          unint64_t v268 = 0xEB00000000454E4FLL;
        }
        *(void *)&long long v396 = v269;
        *((void *)&v396 + 1) = v268;
LABEL_147:
        sub_235949BD8();
        swift_bridgeObjectRelease();
        uint64_t v270 = String.localized.getter();
        uint64_t v272 = v271;
        swift_bridgeObjectRelease();
        *(void *)&long long v394 = v270;
        *((void *)&v394 + 1) = v272;
        sub_2356610AC();
        uint64_t v273 = sub_23594A638();
        uint64_t v275 = v274;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v265 = 0;
        *(void *)&long long v396 = v273;
        *((void *)&v396 + 1) = v275;
        int v266 = v340;
        continue;
      }
      break;
    }
    *(void *)(v81 + v323) = v325;
LABEL_231:
    unint64_t v276 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutText;
    if (v265) {
      goto LABEL_235;
    }
    uint64_t v327 = *(void *)(v81 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutText);
    BOOL v118 = __OFADD__(v327, 1);
    uint64_t v328 = v327 + 1;
    if (v118)
    {
      __break(1u);
LABEL_238:
      swift_once();
LABEL_159:
      unint64_t v278 = v276 - 48;
      uint64_t v279 = 0x4850492E65766F6DLL;
      if (byte_268812C68) {
        uint64_t v279 = 0x4150492E65766F6DLL;
      }
      else {
        unint64_t v278 = 0xEB00000000454E4FLL;
      }
      *(void *)&long long v396 = v279;
      *((void *)&v396 + 1) = v278;
      sub_235949BD8();
      swift_bridgeObjectRelease();
      uint64_t v280 = String.localized.getter();
      uint64_t v282 = v281;
      swift_bridgeObjectRelease();
      *(void *)&long long v394 = v280;
      *((void *)&v394 + 1) = v282;
      sub_2356610AC();
      uint64_t v283 = sub_23594A638();
      uint64_t v285 = v284;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v266 = 0;
      *(void *)&long long v396 = v283;
      *((void *)&v396 + 1) = v285;
      continue;
    }
    break;
  }
  *(void *)(v81 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutText) = v328;
  if (v328 < 61) {
    return;
  }
  uint64_t v329 = sub_235949EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v329 - 8) + 56))(v291, 1, 1, v329);
  v330 = (void *)swift_allocObject();
  v330[2] = 0;
  v330[3] = 0;
  v330[4] = v81;
  sub_2359470F8();
  sub_2357A1990(v291, (uint64_t)&unk_26880FE00, (uint64_t)v330);
  swift_release();
LABEL_235:
  *(void *)(v81 + v276) = 0;
}

uint64_t sub_2356ACBBC(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 32) = a8;
  *(unsigned char *)(v8 + 80) = a7;
  *(double *)(v8 + 16) = a1;
  *(double *)(v8 + 24) = a3;
  *(void *)(v8 + 40) = type metadata accessor for DetectedTextBlock();
  *(void *)(v8 + 48) = swift_task_alloc();
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(void *)(v8 + 56) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356ACC84, 0, 0);
}

uint64_t sub_2356ACC84()
{
  uint64_t v1 = *(int **)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  long long v31 = *MEMORY[0x263F001A8];
  uint64_t v3 = *(void *)(MEMORY[0x263F001A8] + 16);
  uint64_t v4 = *(void *)(MEMORY[0x263F001A8] + 24);
  sub_235947968();
  uint64_t v5 = v1[9];
  *(void *)(v2 + v1[5]) = 0;
  uint64_t v6 = v2 + v1[6];
  *(_OWORD *)uint64_t v6 = v31;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  *(void *)(v2 + v1[7]) = 0;
  *(unsigned char *)(v2 + v1[8]) = 0;
  *(void *)(v2 + v5) = 0;
  id v7 = objc_msgSend(self, sel_currentDevice);
  uint64_t v8 = (char *)objc_msgSend(v7, sel_orientation);

  if ((unint64_t)(v8 - 2) > 2) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = qword_235954678[(void)(v8 - 2)];
  }
  uint64_t v32 = v10;
  double v11 = CGRectMake(v9);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v0 + 48);
  uint64_t v19 = *(void **)(v0 + 56);
  char v20 = *(unsigned char *)(v0 + 80);
  uint64_t v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_26880EFF0);
  uint64_t v22 = (uint64_t)v19 + v21[12];
  uint64_t v23 = v21[16];
  uint64_t v24 = v21[20];
  uint64_t v25 = v21[24];
  uint64_t v26 = v21[28];
  uint64_t v27 = v21[32];
  *(double *)uint64_t v19 = v11;
  v19[1] = v13;
  v19[2] = v15;
  v19[3] = v17;
  sub_2356B4D70(v18, v22, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
  *(void *)((char *)v19 + v23) = 0;
  *(void *)((char *)v19 + v24) = 0;
  *(void *)((char *)v19 + v25) = 0;
  *(void *)((char *)v19 + v26) = v32;
  *((unsigned char *)v19 + v27) = v20;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  sub_2356B4D10(v18, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_2356ACEE0;
  uint64_t v29 = *(void *)(v0 + 56);
  return MAGPointAndSpeakEventHandler.send(_:)(v29);
}

uint64_t sub_2356ACEE0()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2356AD080;
  }
  else {
    uint64_t v2 = sub_2356ACFF4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356ACFF4()
{
  sub_2356B4D10(*(void *)(v0 + 56), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356AD080()
{
  sub_2356B4D10(*(void *)(v0 + 56), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356AD10C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  v5[2].n128_u64[0] = a5;
  v5[1] = a1;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  v5[2].n128_u64[1] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356AD1A0, 0, 0);
}

uint64_t sub_2356AD1A0()
{
  *(_OWORD *)*(void *)(v0 + 40) = *(_OWORD *)(v0 + 16);
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2356AD268;
  uint64_t v2 = *(void *)(v0 + 40);
  return MAGPointAndSpeakEventHandler.send(_:)(v2);
}

uint64_t sub_2356AD268()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2356AD400;
  }
  else {
    uint64_t v2 = sub_2356AD37C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356AD37C()
{
  sub_2356B4D10(*(void *)(v0 + 40), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356AD400()
{
  sub_2356B4D10(*(void *)(v0 + 40), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2356AD484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int32 a5, unsigned char *a6, double a7, double a8)
{
  CGFloat v182 = a6;
  v191.i32[0] = a5;
  uint64_t v178 = a4;
  uint64_t v179 = a3;
  uint64_t v185 = sub_235947908();
  uint64_t v184 = *(void *)(v185 - 8);
  MEMORY[0x270FA5388](v185, v13, v14, v15, v16);
  BOOL v183 = (char *)&v169 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v18 - 8, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v169 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DetectedTextBlock();
  uint64_t v180 = *(void *)(v25 - 8);
  uint64_t v30 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x270FA5388])(v25, v26, v27, v28, v29);
  uint64_t v186 = (char *)&v169 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x270FA5388])(v30, v32, v33, v34, v35);
  uint64_t v189 = (char *)&v169 - v37;
  uint64_t v181 = v38;
  MEMORY[0x270FA5388](v36, v39, v40, v41, v42);
  uint64_t v190 = (uint64_t)&v169 - v43;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFD8);
  uint64_t v49 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x270FA5388])(v44 - 8, v45, v46, v47, v48);
  uint64_t v51 = (char *)&v169 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v49, v52, v53, v54, v55);
  uint64_t v187 = (uint64_t)&v169 - v56;
  uint64_t v57 = type metadata accessor for SpatialTextBlock();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v63 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x270FA5388])(v57, v59, v60, v61, v62);
  uint64_t v65 = (char *)&v169 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v63, v66, v67, v68, v69);
  uint64_t v177 = (uint64_t)&v169 - v70;
  uint64_t v188 = v25;
  double v71 = sub_2358D00C0(1, *(double *)(a1 + *(int *)(v25 + 24)));
  uint64_t v75 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame;
  uint64_t v76 = *(void **)(a2 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
  if (v76)
  {
    CGFloat v77 = v71;
    CGFloat v78 = v72;
    CGFloat v79 = v73;
    CGFloat v80 = v74;
    uint64_t v81 = (__CVBuffer *)objc_msgSend(v76, sel_capturedImage);
    if (v81)
    {
      uint64_t v175 = v81;
      uint64_t v172 = v24;
      uint64_t v174 = a2;
      uint64_t v173 = a1;
      uint64_t v82 = v8;
      if (qword_26AF13B78 != -1) {
        swift_once();
      }
      uint64_t v83 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakFingerLocation;
      swift_beginAccess();
      double v84 = *(double *)(v83 + 8);
      char v85 = *(unsigned char *)(v83 + 16);
      double v195 = *(double *)v83;
      double v196 = v84;
      LOBYTE(v197) = v85;
      uint64_t v86 = qword_26AF144C0;
      uint64_t v87 = swift_bridgeObjectRetain();
      if (v86 != -1) {
        uint64_t v87 = swift_once();
      }
      MEMORY[0x270FA5388](v87, v88, v89, v90, v91);
      *((void *)&v169 - 2) = &v195;
      sub_23594A2A8();
      uint64_t v176 = v82;
      swift_bridgeObjectRelease();
      uint64_t v92 = v174;
      if ((v191.i8[0] & 1) == 0)
      {
        uint64_t v93 = *(void **)(v174 + v75);
        if (v93)
        {
          id v94 = objc_msgSend(v93, sel_camera);
          objc_msgSend(v94, sel_transform);
          float32x4_t v169 = v95;
          float32x4_t v170 = v96;
          float32x4_t v191 = v97;
          float32x4_t v171 = v98;

          uint64_t v99 = *(void *)(v92
                          + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks);
          uint64_t v100 = v173;
          uint64_t v101 = (uint64_t)v172;
          uint64_t v102 = v190;
          if (!*(void *)(v99 + 16))
          {
            uint64_t v104 = v187;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v187, 1, 1, v57);
LABEL_33:
            sub_23566A3AC(v104, &qword_26880EFD8);
            uint64_t v113 = (uint64_t)v189;
LABEL_34:
            sub_2356B4D70(v100, v102, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
            goto LABEL_35;
          }
          swift_bridgeObjectRetain();
          uint64_t v103 = sub_235878460(v100);
          uint64_t v104 = v187;
          if (v105)
          {
            sub_2356B4D70(*(void *)(v99 + 56) + *(void *)(v58 + 72) * v103, v187, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
            uint64_t v106 = 0;
          }
          else
          {
            uint64_t v106 = 1;
          }
          uint64_t v111 = v176;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v104, v106, 1, v57);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v104, 1, v57) == 1) {
            goto LABEL_33;
          }
          float32x4_t v140 = vaddq_f32(v171, vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v169, *(float *)&v179 / 100.0), v170, *((float *)&v179 + 1) / 100.0), v191, *(float *)&v178 / 100.0));
          v140.i32[3] = 0;
          float32x4_t v191 = v140;
          uint64_t v141 = v177;
          sub_2356B4CA8(v104, v177, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
          unint64_t v142 = sub_2359223A8(v191);
          sub_2356B4D10(v141, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
          uint64_t v113 = (uint64_t)v189;
          if ((v142 & 0x100000000) != 0 || *(float *)&v142 >= 0.25) {
            goto LABEL_34;
          }
          uint64_t v116 = sub_2356B4D70(v100, v102, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
LABEL_20:
          uint64_t v121 = *(void *)(v102 + *(int *)(v188 + 20));
          if (v121)
          {
            MEMORY[0x270FA5388](v116, v117, v118, v119, v120);
            *((void *)&v169 - 2) = v102;
            swift_bridgeObjectRetain();
            uint64_t v122 = sub_235707434((void (*)(uint64_t *__return_ptr, void *))sub_2356B5830, (uint64_t)(&v169 - 2), v121);
            swift_bridgeObjectRelease();
            uint64_t v123 = (void *)sub_2358D05AC(v122);
            swift_bridgeObjectRelease();
            id v124 = objc_msgSend(v123, sel_string);

            sub_2356B4D10(v102, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
            uint64_t v125 = sub_2356B4D70(v100, v113, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
            uint64_t v130 = *(void *)(v113 + *(int *)(v188 + 20));
            if (v130)
            {
              MEMORY[0x270FA5388](v125, v126, v127, v128, v129);
              *((void *)&v169 - 2) = v113;
              swift_bridgeObjectRetain();
              uint64_t v131 = sub_235707434((void (*)(uint64_t *__return_ptr, void *))sub_2356B5830, (uint64_t)(&v169 - 2), v130);
              swift_bridgeObjectRelease();
              id v132 = (void *)sub_2358D05AC(v131);
              swift_bridgeObjectRelease();
              id v133 = objc_msgSend(v132, sel_string);

              uint64_t v134 = sub_235949AC8();
              uint64_t v136 = v135;

              if (!v134 && v136 == 0xE000000000000000)
              {
                sub_2356B4D10(v113, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
                swift_bridgeObjectRelease();
LABEL_42:

                return;
              }
              char v144 = sub_23594AB78();
              sub_2356B4D10(v113, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
              swift_bridgeObjectRelease();
              uint64_t v143 = (uint64_t)v186;
              if (v144) {
                goto LABEL_42;
              }
              uint64_t v176 = v111;
            }
            else
            {
              uint64_t v176 = v111;
              sub_2356B4D10(v113, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
              uint64_t v143 = (uint64_t)v186;
            }
            unsigned char *v182 = 1;
            uint64_t v145 = sub_235949EA8();
            uint64_t v146 = *(void *)(v145 - 8);
            v191.i64[0] = *(void *)(v146 + 56);
            uint64_t v190 = v146 + 56;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v191.i64[0])(v101, 1, 1, v145);
            sub_2356B4D70(v100, v143, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
            uint64_t v147 = *(unsigned __int8 *)(v180 + 80);
            uint64_t v148 = v143;
            uint64_t v149 = v101;
            uint64_t v150 = (v147 + 32) & ~v147;
            uint64_t v188 = v181 + 7;
            unint64_t v151 = (v150 + v181 + 7) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v189 = (char *)(v147 | 7);
            uint64_t v152 = swift_allocObject();
            *(void *)(v152 + 16) = 0;
            *(void *)(v152 + 24) = 0;
            sub_2356B4CA8(v148, v152 + v150, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
            uint64_t v153 = v174;
            *(void *)(v152 + v151) = v174;
            sub_2359470F8();
            sub_2357A1990(v149, (uint64_t)&unk_26880FE98, v152);
            swift_release();
            uint64_t v154 = v153 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint;
            *(double *)uint64_t v154 = a7;
            *(double *)(v154 + 8) = a8;
            *(unsigned char *)(v154 + 16) = 0;
            *(void *)(v153 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements) = 0;
            *(unsigned char *)(v153 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback) = 0;
            double v155 = v183;
            sub_2359478F8();
            uint64_t v156 = v153 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastPointSpeakAnnouncementTime;
            swift_beginAccess();
            (*(void (**)(uint64_t, char *, uint64_t))(v184 + 40))(v156, v155, v185);
            swift_endAccess();
            uint64_t v157 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__outlinePointSpeak;
            uint64_t v158 = swift_beginAccess();
            uint64_t v159 = *(void *)(v157 + 8);
            char v160 = *(unsigned char *)(v157 + 16);
            v192[0] = *(void *)v157;
            v192[1] = v159;
            char v193 = v160;
            MEMORY[0x270FA5388](v158, v161, v162, v163, v164);
            *((void *)&v169 - 2) = v192;
            swift_bridgeObjectRetain();
            sub_23594A2A8();
            swift_bridgeObjectRelease();
            if (v200 == 1)
            {
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v191.i64[0])(v149, 1, 1, v145);
              sub_2356B4D70(v173, v148, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
              uint64_t v165 = (v147 + 40) & ~v147;
              unint64_t v166 = (v165 + v188) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v167 = (void *)swift_allocObject();
              v167[2] = 0;
              v167[3] = 0;
              v167[4] = v153;
              sub_2356B4CA8(v148, (uint64_t)v167 + v165, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
              uint64_t v168 = (CGFloat *)((char *)v167 + v166);
              *uint64_t v168 = v77;
              v168[1] = v78;
              v168[2] = v79;
              v168[3] = v80;
              sub_2359470F8();
              sub_2357A1990(v149, (uint64_t)&unk_26880FEA8, (uint64_t)v167);
              swift_release();
            }
            goto LABEL_42;
          }
LABEL_35:
          sub_2356B4D10(v102, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
          sub_2356B4D70(v100, v113, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);

          sub_2356B4D10(v113, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
          return;
        }
      }
      uint64_t v107 = *(void *)(v174
                       + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks);
      uint64_t v100 = v173;
      uint64_t v101 = (uint64_t)v172;
      if (*(void *)(v107 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v108 = sub_235878460(v100);
        if (v109)
        {
          sub_2356B4D70(*(void *)(v107 + 56) + *(void *)(v58 + 72) * v108, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
          uint64_t v110 = 0;
        }
        else
        {
          uint64_t v110 = 1;
        }
        uint64_t v111 = v176;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v51, v110, 1, v57);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v51, 1, v57) != 1)
        {
          sub_2356B4CA8((uint64_t)v51, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
          id v137 = objc_msgSend(self, sel_currentDevice);
          uint64_t v138 = (char *)objc_msgSend(v137, sel_orientation);

          uint64_t v113 = (uint64_t)v189;
          if ((unint64_t)(v138 - 2) > 2) {
            uint64_t v139 = 1;
          }
          else {
            uint64_t v139 = qword_235954678[(void)(v138 - 2)];
          }
          sub_2356B1A60((uint64_t)v65, v175, v139, (uint64_t)v194);
          sub_2356B4D10((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
          uint64_t v112 = sub_23566A348((uint64_t)v194, (uint64_t)&v195, &qword_26880FEB0);
          if ((v199 & 1) == 0)
          {
            CGFloat v77 = v195;
            CGFloat v78 = v196;
            CGFloat v79 = v197;
            CGFloat v80 = v198;
          }
LABEL_19:
          v201.double x = CGRectMake(v112);
          v201.double y = v114;
          v202.origin.double x = v77;
          v202.origin.double y = v78;
          v202.size.double width = v79;
          v202.size.double height = v80;
          BOOL v115 = CGRectContainsPoint(v202, v201);
          uint64_t v102 = v190;
          uint64_t v116 = sub_2356B4D70(v100, v190, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
          if (!v115) {
            goto LABEL_35;
          }
          goto LABEL_20;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v51, 1, 1, v57);
        uint64_t v111 = v176;
      }
      uint64_t v112 = sub_23566A3AC((uint64_t)v51, &qword_26880EFD8);
      uint64_t v113 = (uint64_t)v189;
      goto LABEL_19;
    }
  }
}

uint64_t sub_2356AE4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  v5[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356AE548, 0, 0);
}

uint64_t sub_2356AE548()
{
  uint64_t v1 = (uint64_t *)v0[4];
  uint64_t v2 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688105F0);
  uint64_t v3 = *(void *)(type metadata accessor for DetectedTextBlock() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23594FD70;
  sub_2356B4D70(v2, v5 + v4, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
  *uint64_t v1 = v5;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2356AE6C4;
  uint64_t v7 = v0[4];
  return MAGPointAndSpeakEventHandler.send(_:)(v7);
}

uint64_t sub_2356AE6C4()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2356AE85C;
  }
  else {
    uint64_t v2 = sub_2356AE7D8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356AE7D8()
{
  sub_2356B4D10(*(void *)(v0 + 32), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356AE85C()
{
  sub_2356B4D10(*(void *)(v0 + 32), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356AE8E0(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(double *)(v9 + 48) = a3;
  *(double *)(v9 + 56) = a4;
  *(double *)(v9 + 32) = a1;
  *(double *)(v9 + 40) = a2;
  *(void *)(v9 + 16) = a8;
  *(void *)(v9 + 24) = a9;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(void *)(v9 + 64) = swift_task_alloc();
  *(void *)(v9 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFD8);
  *(void *)(v9 + 80) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SpatialTextBlock();
  *(void *)(v9 + 88) = v10;
  *(void *)(v9 + 96) = *(void *)(v10 - 8);
  *(void *)(v9 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356AEA14, 0, 0);
}

uint64_t sub_2356AEA14()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_235878460(v2);
    if (v4)
    {
      sub_2356B4D70(*(void *)(v1 + 56) + *(void *)(*(void *)(v0 + 96) + 72) * v3, *(void *)(v0 + 80), (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = 1;
    }
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 80);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, v5, 1, v6);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) != 1)
    {
      uint64_t v18 = *(void *)(v0 + 104);
      uint64_t v19 = *(void *)(v0 + 64);
      sub_2356B4CA8(*(void *)(v0 + 80), v18, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
      sub_2356B4D70(v18, v19, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
      type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_2356AEDD0;
      uint64_t v21 = *(void *)(v0 + 64);
      goto LABEL_17;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 96) + 56))(*(void *)(v0 + 80), 1, 1, *(void *)(v0 + 88));
  }
  uint64_t v9 = *(void *)(v0 + 16);
  sub_23566A3AC(*(void *)(v0 + 80), &qword_26880EFD8);
  uint64_t v10 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame;
  double v11 = *(void **)(v9 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
  if (!v11)
  {
    id v37 = 0;
    id v38 = 0;
LABEL_14:
    id v36 = 0;
    goto LABEL_16;
  }
  id v12 = objc_msgSend(v11, sel_camera);
  uint64_t v13 = *(void **)(v9 + v10);
  id v38 = v12;
  if (!v13)
  {
    id v36 = 0;
    id v37 = 0;
    goto LABEL_16;
  }
  id v14 = objc_msgSend(v13, sel_capturedImage);
  uint64_t v15 = *(void **)(v9 + v10);
  id v37 = v14;
  if (!v15) {
    goto LABEL_14;
  }
  id v16 = objc_msgSend(v15, sel_sceneDepth);
  if (!v16) {
    goto LABEL_14;
  }
  uint64_t v17 = v16;
  id v36 = objc_msgSend(v16, sel_depthMap);

LABEL_16:
  uint64_t v22 = *(void *)(v0 + 72);
  uint64_t v24 = *(void *)(v0 + 48);
  uint64_t v23 = *(void *)(v0 + 56);
  long long v39 = *(_OWORD *)(v0 + 32);
  uint64_t v25 = *(void *)(v0 + 24);
  uint64_t v26 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastOrientation);
  uint64_t v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_26880EFF0);
  uint64_t v28 = v22 + v27[12];
  uint64_t v29 = v27[16];
  uint64_t v30 = v27[20];
  uint64_t v31 = v27[24];
  uint64_t v32 = v27[28];
  uint64_t v33 = v27[32];
  *(_OWORD *)uint64_t v22 = v39;
  *(void *)(v22 + 16) = v24;
  *(void *)(v22 + 24) = v23;
  sub_2356B4D70(v25, v28, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
  *(void *)(v22 + v29) = v38;
  *(void *)(v22 + v30) = v37;
  *(void *)(v22 + v31) = v36;
  *(void *)(v22 + v32) = v26;
  *(unsigned char *)(v22 + v33) = 0;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_2356AEFAC;
  uint64_t v21 = *(void *)(v0 + 72);
LABEL_17:
  return MAGPointAndSpeakEventHandler.send(_:)(v21);
}

uint64_t sub_2356AEDD0()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2356AF168;
  }
  else {
    uint64_t v2 = sub_2356AEEE4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356AEEE4()
{
  uint64_t v1 = v0[13];
  sub_2356B4D10(v0[8], type metadata accessor for MAGPointAndSpeakEvent);
  sub_2356B4D10(v1, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2356AEFAC()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2356AF230;
  }
  else {
    uint64_t v2 = sub_2356AF0C0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356AF0C0()
{
  sub_2356B4D10(*(void *)(v0 + 72), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356AF168()
{
  uint64_t v1 = v0[13];
  sub_2356B4D10(v0[8], type metadata accessor for MAGPointAndSpeakEvent);
  sub_2356B4D10(v1, (uint64_t (*)(void))type metadata accessor for SpatialTextBlock);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_2356AF230()
{
  sub_2356B4D10(*(void *)(v0 + 72), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356AF2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  v5[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356AF368, 0, 0);
}

uint64_t sub_2356AF368()
{
  uint64_t v1 = (uint64_t *)v0[4];
  uint64_t v2 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688105F0);
  uint64_t v3 = *(void *)(type metadata accessor for DetectedTextBlock() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23594FD70;
  sub_2356B4D70(v2, v5 + v4, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
  *uint64_t v1 = v5;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2356AF4E4;
  uint64_t v7 = v0[4];
  return MAGPointAndSpeakEventHandler.send(_:)(v7);
}

uint64_t sub_2356AF4E4()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2356B5848;
  }
  else {
    uint64_t v2 = sub_2356B585C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356AF5F8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 160) = a12;
  *(void *)(v12 + 168) = v15;
  *(void *)(v12 + 144) = a10;
  *(void *)(v12 + 152) = a11;
  *(void *)(v12 + 128) = a8;
  *(void *)(v12 + 136) = a9;
  *(double *)(v12 + 112) = a3;
  *(double *)(v12 + 120) = a4;
  *(double *)(v12 + 96) = a1;
  *(double *)(v12 + 104) = a2;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(void *)(v12 + 176) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356AF6A0, 0, 0);
}

uint64_t sub_2356AF6A0()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v21 = *(void *)(v0 + 160);
  uint64_t v19 = *(void *)(v0 + 128);
  uint64_t v20 = *(void **)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  long long v18 = *(_OWORD *)(v0 + 96);
  sub_23566A650(*(void *)(v0 + 144), v0 + 16);
  type metadata accessor for CVBuffer(0);
  swift_dynamicCast();
  uint64_t v5 = *(void *)(v0 + 80);
  sub_23566A650(v2, v0 + 48);
  swift_dynamicCast();
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_26880EFF0);
  uint64_t v8 = v1 + v7[12];
  uint64_t v9 = v7[16];
  uint64_t v10 = v7[20];
  uint64_t v11 = v7[24];
  uint64_t v12 = v7[28];
  uint64_t v13 = v7[32];
  *(_OWORD *)uint64_t v1 = v18;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v3;
  sub_2356B4D70(v19, v8, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
  *(void *)(v1 + v9) = v20;
  *(void *)(v1 + v10) = v5;
  *(void *)(v1 + v11) = v6;
  *(void *)(v1 + v12) = v21;
  *(unsigned char *)(v1 + v13) = 0;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  id v14 = v20;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_2356AF890;
  uint64_t v16 = *(void *)(v0 + 176);
  return MAGPointAndSpeakEventHandler.send(_:)(v16);
}

uint64_t sub_2356AF890()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2356AFA28;
  }
  else {
    uint64_t v2 = sub_2356AF9A4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356AF9A4()
{
  sub_2356B4D10(*(void *)(v0 + 176), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356AFA28()
{
  sub_2356B4D10(*(void *)(v0 + 176), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356AFAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 80) = a5;
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = type metadata accessor for MAGOutputEvent(0);
  *(void *)(v5 + 32) = swift_task_alloc();
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(void *)(v5 + 40) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356AFB70, 0, 0);
}

uint64_t sub_2356AFB70()
{
  uint64_t v1 = *(uint64_t **)(v0 + 40);
  sub_235713C70();
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_235949A88();
  uint64_t v5 = (void *)sub_235949A88();
  id v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

  uint64_t v7 = sub_235949AC8();
  uint64_t v9 = v8;

  swift_bridgeObjectRelease();
  *uint64_t v1 = v7;
  v1[1] = v9;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_2356AFD28;
  uint64_t v11 = *(void *)(v0 + 40);
  return MAGPointAndSpeakEventHandler.send(_:)(v11);
}

uint64_t sub_2356AFD28()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  sub_2356B4D10(v2, type metadata accessor for MAGPointAndSpeakEvent);
  if (v0) {
    id v3 = sub_2356B0018;
  }
  else {
    id v3 = sub_2356AFE6C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2356AFE6C()
{
  uint64_t v2 = *(int **)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 80);
  *(void *)(v0 + 64) = *(void *)(*(void *)(v0 + 16)
                                   + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
  *(unsigned char *)(v1 + v2[5]) = v3;
  type metadata accessor for MAGOutputEvent.EventType(0);
  swift_storeEnumTagMultiPayload();
  sub_2359470F8();
  sub_235947968();
  *(unsigned char *)(v1 + v2[6]) = 1;
  *(unsigned char *)(v1 + v2[7]) = 0;
  sub_235949E78();
  *(void *)(v0 + 72) = sub_235949E68();
  uint64_t v5 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_2356AFF6C, v5, v4);
}

uint64_t sub_2356AFF6C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  sub_235741600(v1);
  swift_release();
  sub_2356B4D10(v1, type metadata accessor for MAGOutputEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2356B0018()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356B0084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 80) = a5;
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = type metadata accessor for MAGOutputEvent(0);
  *(void *)(v5 + 32) = swift_task_alloc();
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(void *)(v5 + 40) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356B0148, 0, 0);
}

uint64_t sub_2356B0148()
{
  uint64_t v1 = *(uint64_t **)(v0 + 40);
  sub_235713C70();
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_235949A88();
  uint64_t v5 = (void *)sub_235949A88();
  id v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

  uint64_t v7 = sub_235949AC8();
  uint64_t v9 = v8;

  swift_bridgeObjectRelease();
  *uint64_t v1 = v7;
  v1[1] = v9;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_2356B0300;
  uint64_t v11 = *(void *)(v0 + 40);
  return MAGPointAndSpeakEventHandler.send(_:)(v11);
}

uint64_t sub_2356B0300()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  sub_2356B4D10(v2, type metadata accessor for MAGPointAndSpeakEvent);
  if (v0) {
    id v3 = sub_2356B5878;
  }
  else {
    id v3 = sub_2356B0444;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2356B0444()
{
  uint64_t v2 = *(int **)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 80);
  *(void *)(v0 + 64) = *(void *)(*(void *)(v0 + 16)
                                   + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
  *(unsigned char *)(v1 + v2[5]) = v3;
  type metadata accessor for MAGOutputEvent.EventType(0);
  swift_storeEnumTagMultiPayload();
  sub_2359470F8();
  sub_235947968();
  *(unsigned char *)(v1 + v2[6]) = 1;
  *(unsigned char *)(v1 + v2[7]) = 0;
  sub_235949E78();
  *(void *)(v0 + 72) = sub_235949E68();
  uint64_t v5 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_2356B587C, v5, v4);
}

uint64_t sub_2356B0544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(void *)(v4 + 24) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356B05D4, 0, 0);
}

uint64_t sub_2356B05D4()
{
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2356B0694;
  uint64_t v2 = *(void *)(v0 + 24);
  return MAGPointAndSpeakEventHandler.send(_:)(v2);
}

uint64_t sub_2356B0694()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2356B082C;
  }
  else {
    uint64_t v2 = sub_2356B07A8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356B07A8()
{
  sub_2356B4D10(*(void *)(v0 + 24), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356B082C()
{
  sub_2356B4D10(*(void *)(v0 + 24), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2356B08B0(uint64_t a1@<X0>, double *a2@<X1>, char *a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>)
{
  uint64_t v10 = type metadata accessor for DetectedTextBlock();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  long long v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    uint64_t v65 = a2;
    uint64_t v66 = a3;
    uint64_t v20 = (double *)&v18[*(int *)(v16 + 24)];
    uint64_t v21 = self;
    unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    uint64_t v63 = v19 - 1;
    uint64_t v64 = v24;
    unint64_t v26 = v24 + v22;
    int v27 = 1;
    double v75 = 1.79769313e308;
    double v74 = -0.025;
    double v73 = 0.05;
    double v72 = 1.05;
    double v28 = 0.0;
    double v29 = 0.0;
    double v30 = 0.0;
    double v31 = 0.0;
    unint64_t v62 = v24 + v22;
LABEL_3:
    double v67 = v31;
    double v68 = v30;
    double v69 = v29;
    double v70 = v28;
    int v71 = v27;
    uint64_t v32 = v26 + v23 * v25;
    do
    {
      sub_2356B4D70(v32, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
      double v33 = *v20;
      double v34 = v20[1];
      double v35 = v20[2];
      double v36 = v20[3];
      sub_2356B4D10((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
      id v37 = objc_msgSend(v21, sel_currentDevice);
      id v38 = objc_msgSend(v37, sel_orientation);

      if (v38 == (id)3 || v38 == (id)4)
      {
        double v33 = CGRectMake(v39);
        double v35 = v41;
        double v36 = v42;
      }
      else if (1.0 - v34 - v36 > 0.0)
      {
        double v40 = 1.0 - v34 - v36;
      }
      else
      {
        double v40 = 0.0;
      }
      double v43 = v33 + v74;
      double v45 = (v35 + v73) * v72;
      double v46 = (v36 + v73) * v72;
      v76.origin.double x = v43;
      v76.origin.double y = v40 + v74;
      double y = v76.origin.y;
      v76.size.double width = v45;
      v76.size.double height = v46;
      double v47 = CGRectGetMinX(v76) - a4;
      v77.origin.double x = v43;
      v77.origin.double y = y;
      v77.size.double width = v45;
      v77.size.double height = v46;
      double MaxX = CGRectGetMaxX(v77);
      if (v47 > 0.0) {
        double v49 = v47;
      }
      else {
        double v49 = 0.0;
      }
      double v50 = a4;
      double v51 = a4 - MaxX;
      if (v49 > v51) {
        double v52 = v49;
      }
      else {
        double v52 = v51;
      }
      v78.origin.double x = v43;
      v78.origin.double y = y;
      v78.size.double width = v45;
      v78.size.double height = v46;
      double v53 = a5;
      double v54 = CGRectGetMinY(v78) - a5;
      v79.origin.double x = v43;
      v79.origin.double y = y;
      v79.size.double width = v45;
      v79.size.double height = v46;
      double MaxY = CGRectGetMaxY(v79);
      double v56 = 0.0;
      if (v54 > 0.0) {
        double v56 = v54;
      }
      a5 = v53;
      double v57 = v53 - MaxY;
      if (v56 > v57) {
        double v57 = v56;
      }
      double v58 = sqrt(v52 * v52 + v57 * v57);
      if (v58 < v75)
      {
        int v27 = 0;
        double v28 = v43;
        double v29 = y;
        double v30 = v45;
        double v31 = v46;
        double v75 = v58;
        BOOL v59 = v63 == v25++;
        a4 = v50;
        unint64_t v26 = v62;
        if (!v59) {
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
        a3 = v66;
        *uint64_t v65 = v58;
        goto LABEL_28;
      }
      ++v25;
      v32 += v23;
      a4 = v50;
    }
    while (v19 != v25);
    swift_bridgeObjectRelease();
    a3 = v66;
    *uint64_t v65 = v75;
    if (v71) {
      goto LABEL_31;
    }
    double y = v69;
    double v43 = v70;
    double v46 = v67;
    double v45 = v68;
LABEL_28:
    v80.origin.double x = v43;
    v80.origin.double y = y;
    v80.size.double width = v45;
    v80.size.double height = v46;
    if (CGRectGetMinX(v80) > a4)
    {
      char v60 = 6;
      goto LABEL_32;
    }
    v81.origin.double x = v43;
    v81.origin.double y = y;
    v81.size.double width = v45;
    v81.size.double height = v46;
    if (CGRectGetMaxX(v81) < a4)
    {
      char v60 = 5;
      goto LABEL_32;
    }
    v82.origin.double x = v43;
    v82.origin.double y = y;
    v82.size.double width = v45;
    v82.size.double height = v46;
    if (CGRectGetMinY(v82) > a5)
    {
      char v60 = 8;
      goto LABEL_32;
    }
    v83.origin.double x = v43;
    v83.origin.double y = y;
    v83.size.double width = v45;
    v83.size.double height = v46;
    if (CGRectGetMaxY(v83) < a5)
    {
      char v60 = 3;
      goto LABEL_32;
    }
  }
  else
  {
    *a2 = 1.79769313e308;
  }
LABEL_31:
  char v60 = 0;
LABEL_32:
  *a3 = v60;
}

void sub_2356B0D20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2359496D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_235949738();
  uint64_t v10 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45, v11, v12, v13, v14);
  uint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_235949758();
  MEMORY[0x270FA5388](v17, v18, v19, v20, v21);
  uint64_t v23 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24, v25, v26, v27, v28);
  uint64_t v32 = (char *)v42 - v31;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_startedPulseForOutOfFrame) & 1) == 0)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_startedPulseForOutOfFrame) = 1;
    uint64_t v33 = v29;
    uint64_t v43 = v29;
    uint64_t v34 = v30;
    id v35 = objc_msgSend(self, sel_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_, v1, sel_playHandAbsentTone, 0, 1, 0.25);
    double v36 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer);
    *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer) = v35;

    sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
    uint64_t v44 = v10;
    uint64_t v37 = v3;
    v42[0] = sub_23594A288();
    sub_235949748();
    MEMORY[0x237DE7760](v23, 2.0);
    uint64_t v38 = v34 + 8;
    uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
    v42[1] = v38;
    v39(v23, v33);
    aBlock[4] = sub_2356B43EC;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_2357A194C;
    void aBlock[3] = &block_descriptor_116;
    double v40 = _Block_copy(aBlock);
    sub_2359470F8();
    sub_235949708();
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_2356B54A8((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
    sub_2356B4404((unint64_t *)&qword_26AF151B0, (uint64_t *)&unk_26AF151A0);
    sub_23594A6C8();
    double v41 = (void *)v42[0];
    MEMORY[0x237DE81B0](v32, v16, v9, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v2);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v45);
    v39(v32, v43);
    swift_release();
  }
}

void sub_2356B123C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  uint64_t v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_235949EA8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v50[1] = v10 + 56;
  double v51 = v11;
  v11(v8, 1, 1, v9);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  uint64_t v12[3] = 0;
  _OWORD v12[4] = v1;
  sub_2359470F8();
  sub_2357A1990((uint64_t)v8, (uint64_t)&unk_26880FDD8, (uint64_t)v12);
  swift_release();
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)(qword_26AF181E0
                 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedPointSpeakFeedbacks);
  swift_beginAccess();
  uint64_t v14 = v13[1];
  uint64_t v15 = v13[2];
  v54[0] = *v13;
  v54[1] = v14;
  v54[2] = v15;
  uint64_t v16 = qword_26AF144C0;
  swift_bridgeObjectRetain();
  uint64_t v17 = swift_bridgeObjectRetain();
  if (v16 != -1) {
    uint64_t v17 = swift_once();
  }
  MEMORY[0x270FA5388](v17, v18, v19, v20, v21);
  v50[-2] = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF150D0);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v22 = sub_2356BFD20(2, v53[0]);
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_22;
  }
  uint64_t v23 = (uint64_t *)(qword_26AF181E0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedPointSpeakFeedbacks);
  uint64_t v24 = swift_beginAccess();
  uint64_t v25 = v23[1];
  uint64_t v26 = v23[2];
  v53[0] = *v23;
  v53[1] = v25;
  v53[2] = v26;
  MEMORY[0x270FA5388](v24, v27, v28, v29, v30);
  v50[-2] = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v31 = sub_2356BFD20(3, v52);
  swift_bridgeObjectRelease();
  if (v31)
  {
LABEL_22:
    uint64_t v32 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand;
    if (*(double *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand) > 2.0)
    {
      v51(v8, 1, 1, v9);
      uint64_t v33 = (void *)swift_allocObject();
      v33[2] = 0;
      v33[3] = 0;
      v33[4] = v1;
      sub_2359470F8();
      sub_2356C0210((uint64_t)v8, (uint64_t)&unk_26880FDE8, (uint64_t)v33);
      swift_release();
      *(void *)(v1 + v32) = 0;
    }
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback) = 0;
  uint64_t v34 = v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint;
  *(void *)uint64_t v34 = 0;
  *(void *)(v34 + 8) = 0;
  uint64_t v35 = 1;
  *(unsigned char *)(v34 + 16) = 1;
  double v36 = (id *)(*(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService)
             + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  id v37 = objc_msgSend(*v36, sel_currentFrame);
  uint64_t v38 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
  *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame) = v37;

  uint64_t v39 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument);
  *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument) = 0;

  uint64_t v40 = MEMORY[0x263F8EE78];
  *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks) = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(self, sel_currentDevice);
  double v42 = (char *)objc_msgSend(v41, sel_orientation);

  if ((unint64_t)(v42 - 2) <= 2) {
    uint64_t v35 = qword_235954678[(void)(v42 - 2)];
  }
  *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastOrientation) = v35;
  uint64_t v43 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForQueue;
  uint64_t v44 = *(void *)(v1
                  + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForQueue);
  BOOL v45 = __OFADD__(v44, 1);
  uint64_t v46 = v44 + 1;
  if (v45)
  {
    __break(1u);
    goto LABEL_18;
  }
  *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForQueue) = v46;
  uint64_t v47 = *(void *)(v1
                  + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage);
  BOOL v45 = __OFADD__(v47, 1);
  uint64_t v48 = v47 + 1;
  if (v45)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage) = v48;
  if (v46 >= 3)
  {
    if (qword_26880E568 == -1)
    {
LABEL_15:
      uint64_t v49 = qword_26882BFB0;
      swift_beginAccess();
      *(void *)(v49 + 24) = v40;
      swift_bridgeObjectRelease();
      objc_msgSend(*(id *)(qword_26882BFB0 + 16), sel_removeAllObjects);
      *(void *)(v1 + v43) = 0;
      goto LABEL_16;
    }
LABEL_19:
    swift_once();
    goto LABEL_15;
  }
LABEL_16:
  *(void *)(v1
            + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutDeviceDirectionMessage) = 0;
  *(void *)(v1
            + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage) = 0;
  sub_2357A878C(2);
}

uint64_t sub_2356B17F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(void *)(v4 + 24) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356B1888, 0, 0);
}

uint64_t sub_2356B1888()
{
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2356A84A4;
  uint64_t v2 = *(void *)(v0 + 24);
  return MAGPointAndSpeakEventHandler.send(_:)(v2);
}

uint64_t sub_2356B1948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_2356B1968, 0, 0);
}

uint64_t sub_2356B1968()
{
  sub_235949E78();
  *(void *)(v0 + 24) = sub_235949E68();
  uint64_t v2 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_2356B19FC, v2, v1);
}

uint64_t sub_2356B19FC()
{
  swift_release();
  sub_2356B0D20();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2356B1A60(uint64_t a1@<X0>, __CVBuffer *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for SpatialTextBlock();
  long long v29 = *(_OWORD *)(a1 + *(int *)(v9 + 32));
  long long v30 = *(_OWORD *)(a1 + *(int *)(v9 + 24));
  if (UIInterfaceOrientationIsLandscape(a3))
  {
    int64_t Width = CVPixelBufferGetWidth(a2);
    size_t Height = CVPixelBufferGetHeight(a2);
  }
  else
  {
    int64_t Width = CVPixelBufferGetHeight(a2);
    size_t Height = CVPixelBufferGetWidth(a2);
  }
  uint64_t v12 = Height;
  uint64_t v13 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService;
  uint64_t v14 = (id *)(*(void *)(v4 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService)
             + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  double v15 = 0.0;
  if (!*v14) {
    goto LABEL_9;
  }
  id v16 = objc_msgSend(*v14, sel_currentFrame);
  if (!v16) {
    goto LABEL_9;
  }
  uint64_t v17 = v16;
  double v18 = (double)Width;
  id v19 = objc_msgSend(v16, sel_camera);

  objc_msgSend(v19, sel_projectPoint_orientation_viewportSize_, a3, *(double *)&v30, v18, (double)v12);
  uint64_t v20 = (id *)(*(void *)(v4 + v13) + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  if (!*v20) {
    goto LABEL_9;
  }
  id v21 = objc_msgSend(*v20, sel_currentFrame);
  if (v21)
  {
    BOOL v22 = v21;
    id v23 = objc_msgSend(v21, sel_camera);

    objc_msgSend(v23, sel_projectPoint_orientation_viewportSize_, a3, *(double *)&v29, v18, (double)v12);
    double v15 = CGRectMake(v24);
    char v28 = 0;
  }
  else
  {
LABEL_9:
    char v28 = 1;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
  }
  *(double *)a4 = v15;
  *(void *)(a4 + 8) = v25;
  *(void *)(a4 + 16) = v26;
  *(void *)(a4 + 24) = v27;
  *(unsigned char *)(a4 + 32) = v28;
}

void sub_2356B1C90()
{
  uint64_t v1 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements) = v4;
    if (v4 >= 3) {
      *(void *)(v0 + v1) = 0;
    }
    type metadata accessor for MAGUtilities();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v7 = (void *)sub_235949A88();
    uint64_t v8 = (void *)sub_235949A88();
    id v9 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, 0, v8);

    sub_235949AC8();
  }
}

uint64_t sub_2356B1DFC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2356B1E1C, 0, 0);
}

uint64_t sub_2356B1E1C()
{
  id v1 = objc_msgSend(*(id *)(v0[1].i64[1] + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_engine), sel_imageNode);

  if (v1
    && ((id v2 = objc_msgSend(*(id *)(*(void *)(v0[1].i64[1]+ OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_rotationRateManager)+ 16), sel_deviceMotion)) == 0|| (v3 = v2, objc_msgSend(v2, sel_rotationRate), v5 = v4, v7 = v6, v9 = v8, v3, sqrt(v9 * v9 + v5 * v5 + v7 * v7) <= 1.75)))
  {
    uint64_t v12 = (int8x16_t *)swift_task_alloc();
    v0[2].i64[0] = (uint64_t)v12;
    v12[1] = vextq_s8(v0[1], v0[1], 8uLL);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[2].i64[1] = (uint64_t)v13;
    *uint64_t v13 = v0;
    v13[1] = sub_2356B2004;
    uint64_t v14 = MEMORY[0x263F8D4F8];
    return MEMORY[0x270FA2360](&v0[3].u64[1], 0, 0, 0xD000000000000010, 0x800000023596CF50, sub_2356B3B58, v12, v14);
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(uint64_t))v0->i64[1];
    return v10(1);
  }
}

uint64_t sub_2356B2004()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_2356B213C;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_2356B2120;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2356B2120()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_2356B213C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

void sub_2356B21A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  id v13 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_engine), sel_imageNode, MEMORY[0x270FA5388](v6, v9, v10, v11, v12).n128_f64[0]);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void **)(a3 + 16);
    id v16 = objc_allocWithZone(MEMORY[0x263F21550]);
    id v17 = v15;
    id v18 = objc_msgSend(v16, sel_init);
    objc_msgSend(v18, sel_setDetectTraits_, 1);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    aBlock[4] = sub_2356B3C30;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_235824E50;
    void aBlock[3] = &block_descriptor_10;
    id v21 = _Block_copy(aBlock);
    sub_2359470F8();
    swift_release();
    objc_msgSend(v14, sel_triggerWithPixelBuffer_exifOrientation_options_cacheKey_resultHandler_, v17, 6, v18, 0, v21);
    _Block_release(v21);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2356B23F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7, v10, v11, v12, v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v14 - 8, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_235949EA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  id v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = 0;
  *((void *)v23 + 3) = 0;
  *((void *)v23 + 4) = a1;
  *((void *)v23 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v23[v22], (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  id v24 = a1;
  sub_2359470F8();
  sub_2356C0210((uint64_t)v20, (uint64_t)&unk_26880FDC8, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_2356B25D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[26] = a5;
  v6[27] = a6;
  v6[25] = a4;
  v6[28] = type metadata accessor for MAGOutputEvent(0);
  v6[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2356B2670, 0, 0);
}

uint64_t sub_2356B2670()
{
  id v2 = *(void **)(v0 + 200);
  if (!v2) {
    goto LABEL_51;
  }
  id v3 = objc_msgSend(v2, sel_blurFeatures);
  sub_2356594B0(0, (unint64_t *)&qword_26880F450);
  unint64_t v4 = sub_235949D78();

  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  uint64_t v68 = sub_23594A998();
  swift_bridgeObjectRelease();
  if (!v68)
  {
LABEL_50:
    swift_bridgeObjectRelease();
LABEL_51:
    sub_23567196C();
    uint64_t v69 = swift_allocError();
    *(void *)(v70 + 8) = 0;
    *(void *)(v70 + 16) = 0;
    *(void *)uint64_t v70 = 8;
    *(unsigned char *)(v70 + 24) = 4;
    *(void *)(v0 + 192) = v69;
    goto LABEL_52;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x237DE87D0](0, v4);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      swift_once();
      goto LABEL_11;
    }
    id v5 = *(id *)(v4 + 32);
  }
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 208);
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_blur);
  double v9 = v8;
  *(double *)(v0 + 240) = v8;

  uint64_t v10 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithBlur;
  *(void *)(v0 + 248) = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithBlur;
  if (v9 < 0.85)
  {
LABEL_29:
    *(void *)(*(void *)(v0 + 208) + *(void *)(v0 + 248)) = 0;
    goto LABEL_30;
  }
  uint64_t v11 = *(void *)(v7 + v10);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    goto LABEL_58;
  }
  *(void *)(v7 + v10) = v13;
  if (v13 < 31)
  {
LABEL_30:
    if (*(double *)(v0 + 240) < 0.85)
    {
      *(unsigned char *)(v0 + 323) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
      sub_235949E48();
LABEL_53:
      swift_task_dealloc();
      int v71 = *(uint64_t (**)(void))(v0 + 8);
      return v71();
    }
    sub_23567196C();
    uint64_t v34 = swift_allocError();
    *(void *)(v35 + 8) = 0;
    *(void *)(v35 + 16) = 0;
    *(void *)uint64_t v35 = 9;
    *(unsigned char *)(v35 + 24) = 4;
    *(void *)(v0 + 184) = v34;
LABEL_52:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
    sub_235949E38();
    goto LABEL_53;
  }
  uint64_t v73 = v0 + 16;
  uint64_t v1 = v0 + 136;
  if (qword_26AF13B78 != -1) {
    goto LABEL_59;
  }
LABEL_11:
  uint64_t v14 = (uint64_t *)(qword_26AF181E0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedPointSpeakFeedbacks);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v17 = v14[2];
  *(void *)(v0 + 136) = v15;
  *(void *)(v0 + 144) = v16;
  *(void *)(v0 + 152) = v17;
  uint64_t v18 = qword_26AF144C0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  *(void *)(swift_task_alloc() + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF150D0);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  BOOL v19 = sub_2356BFD20(1, *(void *)(v0 + 160));
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)(qword_26AF181E0
                 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedTextDetectionFeedbacks);
  swift_beginAccess();
  uint64_t v21 = v20[1];
  uint64_t v22 = v20[2];
  *(void *)(v0 + 16) = *v20;
  *(void *)(v0 + 24) = v21;
  *(void *)(v0 + 32) = v22;
  *(void *)(swift_task_alloc() + 16) = v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15130);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  char v74 = sub_2356BFD24(1, *(void *)(v0 + 168));
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2359484D8();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 322) == 1
    && (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_2359484D8(),
        swift_release(),
        swift_release(),
        *(unsigned char *)(v0 + 321) == 1))
  {
    if (v19)
    {
      id v23 = (uint64_t *)(qword_26AF181E0
                      + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedTextDetectionFeedbacks);
      swift_beginAccess();
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = v23[2];
      *(void *)(v0 + 64) = v24;
      *(void *)(v0 + 72) = v25;
      *(void *)(v0 + 80) = v26;
      *(void *)(swift_task_alloc() + 16) = v0 + 64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23594A2A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      LOBYTE(v26) = sub_2356BFD24(1, *(void *)(v0 + 176));
      swift_bridgeObjectRelease();
      if (v26 & 1) == 0 && (v74) {
        goto LABEL_25;
      }
      goto LABEL_22;
    }
    if ((v74 & 1) == 0) {
      goto LABEL_25;
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2359484D8();
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 320) != 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2359484D8();
      swift_release();
      swift_release();
      if (*(unsigned char *)(v0 + 324) == 1)
      {
LABEL_22:
        sub_2356B1C90();
        goto LABEL_23;
      }
LABEL_25:
      uint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      goto LABEL_26;
    }
  }
  uint64_t v27 = sub_2356B4134();
LABEL_23:
  uint64_t v29 = v27;
  unint64_t v30 = v28;
LABEL_26:
  uint64_t v31 = *(void *)(v0 + 208);
  uint64_t v32 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback;
  *(void *)(v0 + 256) = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback;
  if ((*(unsigned char *)(v31 + v32) & 1) != 0
    || (uint64_t v33 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedTextTooCloseFeedback,
        *(void *)(v0 + 264) = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedTextTooCloseFeedback,
        (*(unsigned char *)(v31 + v33) & 1) != 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (UIAccessibilityIsVoiceOverRunning())
  {
    double v36 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    UIAccessibilitySpeakIfNotSpeaking();

    goto LABEL_29;
  }
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v38 = self;
  id v39 = objc_msgSend(v38, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v40 = (void *)sub_235949A88();
  id v41 = (void *)sub_235949A88();
  id v42 = objc_msgSend(v39, sel_localizedStringForKey_value_table_, v40, 0, v41);

  uint64_t v43 = sub_235949AC8();
  uint64_t v45 = v44;

  if (v29 == v43 && v30 == v45)
  {
    swift_bridgeObjectRelease();
LABEL_39:
    uint64_t v48 = *(int **)(v0 + 224);
    uint64_t v47 = *(void *)(v0 + 232);
    uint64_t v49 = *(void *)(v0 + 208);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 272) = *(void *)(v49 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
    *(unsigned char *)(v47 + v48[5]) = 11;
    type metadata accessor for MAGOutputEvent.EventType(0);
    swift_storeEnumTagMultiPayload();
    sub_2359470F8();
    sub_235947968();
    *(unsigned char *)(v47 + v48[6]) = 0;
    *(unsigned char *)(v47 + v48[7]) = 0;
    sub_235949E78();
    *(void *)(v0 + 280) = sub_235949E68();
    uint64_t v50 = sub_235949E28();
    uint64_t v52 = v51;
    double v53 = sub_2356B3214;
    goto LABEL_40;
  }
  char v46 = sub_23594AB78();
  swift_bridgeObjectRelease();
  if (v46) {
    goto LABEL_39;
  }
  id v54 = objc_msgSend(v38, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v55 = (void *)sub_235949A88();
  double v56 = (void *)sub_235949A88();
  id v57 = objc_msgSend(v54, sel_localizedStringForKey_value_table_, v55, 0, v56);

  uint64_t v58 = sub_235949AC8();
  uint64_t v60 = v59;

  if (v29 == v58 && v30 == v60)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v61 = sub_23594AB78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v61 & 1) == 0)
    {
      uint64_t v66 = *(int **)(v0 + 224);
      uint64_t v65 = *(void *)(v0 + 232);
      *(void *)(v0 + 304) = *(void *)(*(void *)(v0 + 208)
                                        + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
      *(unsigned char *)(v65 + v66[5]) = 12;
      type metadata accessor for MAGOutputEvent.EventType(0);
      swift_storeEnumTagMultiPayload();
      sub_2359470F8();
      sub_235947968();
      *(unsigned char *)(v65 + v66[6]) = 0;
      *(unsigned char *)(v65 + v66[7]) = 0;
      sub_235949E78();
      *(void *)(v0 + 312) = sub_235949E68();
      uint64_t v50 = sub_235949E28();
      uint64_t v52 = v67;
      double v53 = sub_2356B3550;
      goto LABEL_40;
    }
  }
  uint64_t v63 = *(int **)(v0 + 224);
  uint64_t v62 = *(void *)(v0 + 232);
  *(void *)(v0 + 288) = *(void *)(*(void *)(v0 + 208)
                                    + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
  *(unsigned char *)(v62 + v63[5]) = 10;
  type metadata accessor for MAGOutputEvent.EventType(0);
  swift_storeEnumTagMultiPayload();
  sub_2359470F8();
  sub_235947968();
  *(unsigned char *)(v62 + v63[6]) = 0;
  *(unsigned char *)(v62 + v63[7]) = 0;
  sub_235949E78();
  *(void *)(v0 + 296) = sub_235949E68();
  uint64_t v50 = sub_235949E28();
  uint64_t v52 = v64;
  double v53 = sub_2356B33B8;
LABEL_40:
  return MEMORY[0x270FA2498](v53, v50, v52);
}

uint64_t sub_2356B3214()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_release();
  sub_235741600(v1);
  swift_release();
  sub_2356B4D10(v1, type metadata accessor for MAGOutputEvent);
  return MEMORY[0x270FA2498](sub_2356B32AC, 0, 0);
}

uint64_t sub_2356B32AC()
{
  *(unsigned char *)(*(void *)(v0 + 208) + *(void *)(v0 + 256)) = 1;
  *(void *)(*(void *)(v0 + 208) + *(void *)(v0 + 248)) = 0;
  if (*(double *)(v0 + 240) >= 0.85)
  {
    sub_23567196C();
    uint64_t v1 = swift_allocError();
    *(void *)(v2 + 8) = 0;
    *(void *)(v2 + 16) = 0;
    *(void *)uint64_t v2 = 9;
    *(unsigned char *)(v2 + 24) = 4;
    *(void *)(v0 + 184) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
    sub_235949E38();
  }
  else
  {
    *(unsigned char *)(v0 + 323) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
    sub_235949E48();
  }
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2356B33B8()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_release();
  sub_235741600(v1);
  swift_release();
  sub_2356B4D10(v1, type metadata accessor for MAGOutputEvent);
  return MEMORY[0x270FA2498](sub_2356B3450, 0, 0);
}

uint64_t sub_2356B3450()
{
  *(void *)(*(void *)(v0 + 208) + *(void *)(v0 + 248)) = 0;
  if (*(double *)(v0 + 240) >= 0.85)
  {
    sub_23567196C();
    uint64_t v1 = swift_allocError();
    *(void *)(v2 + 8) = 0;
    *(void *)(v2 + 16) = 0;
    *(void *)uint64_t v2 = 9;
    *(unsigned char *)(v2 + 24) = 4;
    *(void *)(v0 + 184) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
    sub_235949E38();
  }
  else
  {
    *(unsigned char *)(v0 + 323) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
    sub_235949E48();
  }
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2356B3550()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_release();
  sub_235741600(v1);
  swift_release();
  sub_2356B4D10(v1, type metadata accessor for MAGOutputEvent);
  return MEMORY[0x270FA2498](sub_2356B35E8, 0, 0);
}

uint64_t sub_2356B35E8()
{
  *(unsigned char *)(*(void *)(v0 + 208) + *(void *)(v0 + 264)) = 1;
  *(void *)(*(void *)(v0 + 208) + *(void *)(v0 + 248)) = 0;
  if (*(double *)(v0 + 240) >= 0.85)
  {
    sub_23567196C();
    uint64_t v1 = swift_allocError();
    *(void *)(v2 + 8) = 0;
    *(void *)(v2 + 16) = 0;
    *(void *)uint64_t v2 = 9;
    *(unsigned char *)(v2 + 24) = 4;
    *(void *)(v0 + 184) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
    sub_235949E38();
  }
  else
  {
    *(unsigned char *)(v0 + 323) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
    sub_235949E48();
  }
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t MAGPointAndSpeakService.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastImageCacheTime;
  uint64_t v2 = sub_235947908();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastPointSpeakAnnouncementTime, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return v0;
}

uint64_t MAGPointAndSpeakService.__deallocating_deinit()
{
  MAGPointAndSpeakService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2356B38C0()
{
  return type metadata accessor for MAGPointAndSpeakService();
}

uint64_t type metadata accessor for MAGPointAndSpeakService()
{
  uint64_t result = qword_26880FD98;
  if (!qword_26880FD98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2356B3914()
{
  uint64_t result = sub_235947908();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for MAGPointAndSpeakService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MAGPointAndSpeakService);
}

uint64_t dispatch thunk of MAGPointAndSpeakService.__allocating_init(eventHandler:arService:textDetectionService:outputEngine:pulseFeedbackProcessor:)()
{
  return (*(uint64_t (**)(void))(v0 + 920))();
}

uint64_t dispatch thunk of MAGPointAndSpeakService.predictHandPose(fromPixelBufferWrapper:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 936) + **(int **)(*(void *)v1 + 936));
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_23566A050;
  return v6(a1);
}

void sub_2356B3B58(uint64_t a1)
{
  sub_2356B21A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2356B3B60()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2356B3C30(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_2356B23F0(a1, a2, v6, v7);
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_2359470F8();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_2356B3CD0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2356B3DB0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26880FDB8) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_23566A050;
  return sub_2356B25D8(a1, v5, v6, v7, v8, v9);
}

void sub_2356B3EB4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  sub_2359470F8();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_2356B3F40@<X0>(uint64_t *a1@<X8>)
{
  return sub_23571FF94(*(void **)(v1 + 16), a1);
}

id sub_2356B3F5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id result = sub_2356A2DB4(*a1, a1[1], a1[2], a1[3], a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

unint64_t sub_2356B3FB4(void *a1)
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  unint64_t v12 = MEMORY[0x263F8EE78];
  id v2 = objc_msgSend(a1, sel_blocksWithTypes_inRegion_, 2, 0.0, 0.0, 1.0, 1.0);
  sub_2356594B0(0, (unint64_t *)&qword_268813780);
  unint64_t v3 = sub_235949D78();

  unint64_t v4 = sub_235751B14(v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (v4 >> 62) {
      goto LABEL_12;
    }
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v5)
    {
      for (uint64_t i = 4; ; ++i)
      {
        id v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x237DE87D0](i - 4, v4) : *(id *)(v4 + 8 * i);
        uint64_t v8 = v7;
        uint64_t v9 = i - 3;
        if (__OFADD__(i - 4, 1)) {
          break;
        }
        uint64_t v10 = (void *)MEMORY[0x237DE9500]();
        sub_2356A9268(v8, &v12);

        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_23594A998();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v1;
}

uint64_t sub_2356B4134()
{
  if (qword_26880E5C8 != -1) {
    swift_once();
  }
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v2 = (void *)sub_235949A88();
  unint64_t v3 = (void *)sub_235949A88();
  id v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  uint64_t v5 = sub_235949AC8();
  return v5;
}

uint64_t sub_2356B4280()
{
  return objectdestroy_103Tm();
}

uint64_t sub_2356B4288(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_2356B582C;
  return sub_2356B17F8(a1, v4, v5, v6);
}

uint64_t sub_2356B433C()
{
  return objectdestroy_103Tm();
}

uint64_t sub_2356B4344()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_2356B582C;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_2356B1968, 0, 0);
}

id sub_2356B43EC()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer), sel_invalidate);
}

uint64_t sub_2356B4404(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2356B4454@<X0>(unsigned char *a1@<X8>)
{
  return sub_2357F02F0(*(void *)(v1 + 16), a1);
}

uint64_t sub_2356B4470()
{
  return objectdestroy_103Tm();
}

uint64_t sub_2356B4478(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_2356B582C;
  return sub_2356B0544(a1, v4, v5, v6);
}

uint64_t sub_2356B452C()
{
  return objectdestroy_103Tm();
}

uint64_t sub_2356B4534(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_2356B582C;
  return sub_2356B0084(a1, v4, v5, v6, v7);
}

uint64_t sub_2356B45F8()
{
  return objectdestroy_103Tm();
}

uint64_t sub_2356B4600(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_2356B582C;
  return sub_2356B0084(a1, v4, v5, v6, v7);
}

uint64_t sub_2356B46C4()
{
  return objectdestroy_103Tm();
}

uint64_t sub_2356B46CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_2356B582C;
  return sub_2356B0084(a1, v4, v5, v6, v7);
}

uint64_t sub_2356B4790()
{
  return objectdestroy_103Tm();
}

uint64_t sub_2356B4798(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_2356B582C;
  return sub_2356AFAAC(a1, v4, v5, v6, v7);
}

uint64_t sub_2356B4860(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DetectedTextBlock() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_2356B582C;
  return sub_2356AF2D8(a1, v6, v7, v8, v9);
}

uint64_t sub_2356B4984()
{
  uint64_t v1 = (int *)(type metadata accessor for DetectedTextBlock() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v2;
  uint64_t v6 = sub_235947978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + v4);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + ((v4 + 39) & 0xFFFFFFFFFFFFFFF8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2356B4AE4(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for DetectedTextBlock() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *((void *)v1 + 2);
  uint64_t v11 = *((void *)v1 + 3);
  double v12 = v1[4];
  double v13 = v1[5];
  double v14 = v1[6];
  double v15 = v1[7];
  uint64_t v16 = (uint64_t)v1 + v6;
  uint64_t v17 = *(void *)((char *)v1 + v7);
  uint64_t v18 = (uint64_t)v1 + v8;
  uint64_t v19 = (uint64_t)v1 + v9;
  uint64_t v20 = *(void *)((char *)v1 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v21;
  void *v21 = v3;
  v21[1] = sub_2356B582C;
  return sub_2356AF5F8(v12, v13, v14, v15, a1, v10, v11, v16, v17, v18, v19, v20);
}

id sub_2356B4C88@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_2356B3F5C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2356B4CA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2356B4D10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2356B4D70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2356B4DD8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2356B4E18(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  double v6 = *(double *)(v1 + 32);
  double v7 = *(double *)(v1 + 40);
  double v8 = *(double *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_2356B582C;
  return sub_2356ACBBC(v6, v7, v8, a1, v4, v5, v9, v10);
}

uint64_t sub_2356B4EF8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2356B4F38(uint64_t a1)
{
  uint64_t v4 = v1[1].n128_i64[0];
  uint64_t v5 = v1[1].n128_i64[1];
  __n128 v9 = v1[2];
  unint64_t v6 = v1[3].n128_u64[0];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_2356B582C;
  return sub_2356AD10C(v9, a1, v4, v5, v6);
}

uint64_t objectdestroy_139Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for DetectedTextBlock() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_235947978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2356B511C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DetectedTextBlock() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_2356B582C;
  return sub_2356AE4B8(a1, v6, v7, v8, v9);
}

uint64_t sub_2356B5240()
{
  uint64_t v1 = (int *)(type metadata accessor for DetectedTextBlock() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_235947978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2356B5358(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DetectedTextBlock() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  double v11 = *(double *)((char *)v1 + v6);
  double v12 = *(double *)((char *)v1 + v6 + 8);
  double v13 = *(double *)((char *)v1 + v6 + 16);
  double v14 = *(double *)((char *)v1 + v6 + 24);
  double v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *double v15 = v2;
  v15[1] = sub_2356B582C;
  return sub_2356AE8E0(v11, v12, v13, v14, a1, v7, v8, v9, v10);
}

uint64_t sub_2356B54A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2356B54F4()
{
  return objectdestroy_103Tm();
}

uint64_t sub_2356B54FC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2356B582C;
  return sub_2356A85B8(a1, v4, v5, v6);
}

uint64_t sub_2356B55B0()
{
  return objectdestroy_103Tm();
}

uint64_t objectdestroy_103Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2356B5604(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2356B582C;
  return sub_2356A8354(a1, v4, v5, v6);
}

uint64_t sub_2356B56BC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF08);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2356B5794()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF08);
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_2356A6D08(v1, v2);
}

uint64_t sub_2356B57FC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2356B3F40(a1);
}

uint64_t sub_2356B5814@<X0>(unsigned char *a1@<X8>)
{
  return sub_2356B4454(a1);
}

id sub_2356B5830@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_2356B4C88(a1, a2);
}

id sub_2356B5880(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = &v2[OBJC_IVAR____TtC16MagnifierSupport32ActivityOnboardingViewController_dismissAction];
  *(void *)unint64_t v3 = a1;
  *((void *)v3 + 1) = a2;
  sub_2359470F8();
  sub_235689A84(0);
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v7 = (void *)sub_235949A88();
  uint64_t v8 = (void *)sub_235949A88();
  id v9 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, 0, v8);

  sub_235949AC8();
  id v10 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  double v11 = (void *)sub_235949A88();
  double v12 = (void *)sub_235949A88();
  id v13 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, 0, v12);

  sub_235949AC8();
  double v14 = (void *)sub_235949A88();
  id v15 = objc_msgSend(self, sel__systemImageNamed_, v14);

  if (v15)
  {
    uint64_t v16 = self;
    id v17 = v15;
    id v18 = objc_msgSend(v16, sel_systemYellowColor);
    id v19 = objc_msgSend(v17, sel_imageWithTintColor_, v18);
  }
  else
  {
    id v19 = 0;
  }
  uint64_t v20 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  v27.receiver = v2;
  v27.super_class = (Class)type metadata accessor for ActivityOnboardingViewController();
  id v22 = objc_msgSendSuper2(&v27, sel_initWithTitle_detailText_icon_contentLayout_, v20, v21, v19, 2);

  id v23 = v22;
  id result = objc_msgSend(v23, sel_view);
  if (result)
  {
    uint64_t v25 = result;
    id v26 = objc_msgSend(self, sel_systemYellowColor);
    objc_msgSend(v25, sel_setTintColor_, v26);

    sub_2356B5BFC();
    swift_release();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2356B5BFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF20);
  MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v10, v11, v12, v13);
  id v15 = (char *)&v30 - v14;
  id v16 = objc_msgSend(self, sel_boldButton);
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v18 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v19 = (void *)sub_235949A88();
  uint64_t v20 = (void *)sub_235949A88();
  id v21 = objc_msgSend(v18, sel_localizedStringForKey_value_table_, v19, 0, v20);

  sub_235949AC8();
  id v22 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setTitle_forState_, v22, 0);

  id v23 = v16;
  sub_23594A588();
  uint64_t v24 = sub_23594A578();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v15, 1, v24))
  {
    sub_2356B62DC((uint64_t)v15, (uint64_t)v8);
    sub_23594A598();

    sub_2356B6344((uint64_t)v15);
  }
  else
  {
    id v25 = objc_msgSend(self, sel_blackColor);
    sub_23594A548();
    sub_23594A598();
  }
  objc_msgSend(v23, sel_addTarget_action_forControlEvents_, v1, sel_didTapStart, 64);
  id v26 = self;
  id v27 = v23;
  id v28 = objc_msgSend(v26, sel_systemYellowColor);
  objc_msgSend(v27, sel_setTintColor_, v28);

  id v29 = objc_msgSend(v1, sel_buttonTray);
  objc_msgSend(v29, sel_addButton_, v27);
}

void sub_2356B5F10()
{
  uint64_t v1 = v0;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2359470F8();
  sub_235949458();
  sub_235949458();
  swift_release();
  id v2 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26880FF18));
  uint64_t v3 = (void *)sub_235948CD8();
  id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MFNavigationController()), sel_initWithRootViewController_, v3);

  objc_msgSend(v4, sel_setModalPresentationStyle_, 2);
  id v5 = objc_msgSend(v4, sel_navigationBar);
  id v6 = objc_msgSend(self, sel_systemYellowColor);
  objc_msgSend(v5, sel_setTintColor_, v6);

  objc_msgSend(v1, sel_presentViewController_animated_completion_, v4, 1, 0);
}

void sub_2356B60E0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x237DEA060](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(void (**)(void))(v2 + OBJC_IVAR____TtC16MagnifierSupport32ActivityOnboardingViewController_dismissAction);
    sub_2356B62CC((uint64_t)v4);

    if (v4)
    {
      v4();
      sub_235689A84((uint64_t)v4);
    }
  }
}

id sub_2356B6220()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityOnboardingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ActivityOnboardingViewController()
{
  return self;
}

uint64_t sub_2356B628C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2356B62C4()
{
  sub_2356B60E0(v0);
}

uint64_t sub_2356B62CC(uint64_t result)
{
  if (result) {
    return sub_2359470F8();
  }
  return result;
}

uint64_t sub_2356B62DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2356B6344(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MFRubberBand()
{
  return &type metadata for MFRubberBand;
}

double sub_2356B63B4(double result, double a2, double a3, double a4, double a5)
{
  if (a3 < result) {
    return (1.0 - 1.0 / ((result - a3) / a4 * a5 + 1.0)) * a4 + a3;
  }
  if (result < a2) {
    return a2 - (1.0 - 1.0 / ((a2 - result) / a4 * a5 + 1.0)) * a4;
  }
  return result;
}

uint64_t sub_2356B6414()
{
  return sub_2357C8B40();
}

uint64_t sub_2356B644C()
{
  type metadata accessor for MFReaderSpeechFormatterModel(0);
  uint64_t v0 = swift_allocObject();
  sub_2356B82F0(1, 0xD000000000000022, 0x800000023596D210, 0, 0);
  return v0;
}

uint64_t sub_2356B64B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v157 = a1;
  uint64_t v133 = sub_235948DB8();
  MEMORY[0x270FA5388](v133, v3, v4, v5, v6);
  uint64_t v131 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_235948728();
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143, v8, v9, v10, v11);
  uint64_t v141 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810008);
  *(void *)&long long v148 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150, v13, v14, v15, v16);
  *(void *)&long long v145 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for MFReaderTextDisplayView() - 8;
  MEMORY[0x270FA5388](v123, v18, v19, v20, v21);
  id v23 = (uint64_t *)((char *)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810010);
  MEMORY[0x270FA5388](v134, v24, v25, v26, v27);
  uint64_t v124 = (uint64_t)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810018);
  uint64_t v137 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138, v29, v30, v31, v32);
  uint64_t v135 = (char *)&v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810020);
  uint64_t v139 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140, v34, v35, v36, v37);
  uint64_t v136 = (char *)&v123 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810028);
  MEMORY[0x270FA5388](v132, v39, v40, v41, v42);
  char v144 = (char *)&v123 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810030);
  MEMORY[0x270FA5388](v147, v44, v45, v46, v47);
  uint64_t v127 = (uint64_t)&v123 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810038);
  uint64_t v155 = *(void *)(v49 - 8);
  uint64_t v156 = v49;
  MEMORY[0x270FA5388](v49, v50, v51, v52, v53);
  uint64_t v153 = (char *)&v123 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810040);
  MEMORY[0x270FA5388](v154, v55, v56, v57, v58);
  unint64_t v151 = (char *)&v123 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810048);
  uint64_t v149 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152, v60, v61, v62, v63);
  uint64_t v146 = (char *)&v123 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MFReaderSpeechFormatterModel(0);
  sub_2356BAD78(&qword_26880FC30, (void (*)(uint64_t))type metadata accessor for MFReaderSpeechFormatterModel);
  sub_235948758();
  uint64_t v65 = *(void *)(v1 + 16);
  uint64_t v66 = *(void *)(v1 + 24);
  int v67 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v68 = type metadata accessor for MFReaderTextFormatterModel(0);
  uint64_t v69 = sub_2356BAD78(&qword_26880F9A8, (void (*)(uint64_t))type metadata accessor for MFReaderTextFormatterModel);
  uint64_t v130 = v65;
  uint64_t v129 = v66;
  int v128 = v67;
  sub_235948758();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v71 = v123;
  *(uint64_t *)((char *)v23 + *(int *)(v123 + 36)) = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  swift_storeEnumTagMultiPayload();
  uint64_t *v23 = sub_235948878();
  v23[1] = v72;
  uint64_t v126 = v68;
  uint64_t v125 = v69;
  v23[2] = sub_235948878();
  v23[3] = v73;
  type metadata accessor for MFReaderBlockManager();
  sub_2356BAD78((unint64_t *)&qword_26880FC38, (void (*)(uint64_t))type metadata accessor for MFReaderBlockManager);
  v23[4] = sub_235948A18();
  v23[5] = v74;
  *(uint64_t *)((char *)v23 + *(int *)(v71 + 40)) = 0x3FC999999999999ALL;
  uint64_t v75 = *(void **)v1;
  if (*(void *)v1)
  {
    id v76 = v75;
    uint64_t v77 = sub_235948458();
    uint64_t v78 = v124;
    sub_2356BB1FC((uint64_t)v23, v124, (uint64_t (*)(void))type metadata accessor for MFReaderTextDisplayView);
    uint64_t v79 = v134;
    CGRect v80 = (uint64_t *)(v78 + *(int *)(v134 + 36));
    uint64_t *v80 = v77;
    v80[1] = (uint64_t)v75;
    sub_2356BB264((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for MFReaderTextDisplayView);
    CGRect v81 = (_OWORD *)swift_allocObject();
    long long v82 = *(_OWORD *)(v1 + 80);
    v81[5] = *(_OWORD *)(v1 + 64);
    v81[6] = v82;
    long long v83 = *(_OWORD *)(v1 + 112);
    v81[7] = *(_OWORD *)(v1 + 96);
    v81[8] = v83;
    long long v84 = *(_OWORD *)(v1 + 16);
    v81[1] = *(_OWORD *)v1;
    v81[2] = v84;
    long long v85 = *(_OWORD *)(v1 + 48);
    v81[3] = *(_OWORD *)(v1 + 32);
    v81[4] = v85;
    sub_2356BAB68(v1);
    unint64_t v86 = sub_2356BAC24();
    uint64_t v87 = v135;
    sub_2359491A8();
    swift_release();
    sub_23566A3AC(v78, &qword_268810010);
    sub_235948E58();
    uint64_t v88 = v141;
    sub_235948708();
    uint64_t v89 = (_OWORD *)swift_allocObject();
    long long v90 = *(_OWORD *)(v1 + 80);
    v89[5] = *(_OWORD *)(v1 + 64);
    v89[6] = v90;
    long long v91 = *(_OWORD *)(v1 + 112);
    v89[7] = *(_OWORD *)(v1 + 96);
    v89[8] = v91;
    long long v92 = *(_OWORD *)(v1 + 16);
    v89[1] = *(_OWORD *)v1;
    v89[2] = v92;
    long long v93 = *(_OWORD *)(v1 + 48);
    v89[3] = *(_OWORD *)(v1 + 32);
    v89[4] = v93;
    sub_2356BAB68(v1);
    sub_2356BAD78(&qword_268810070, MEMORY[0x263F185B8]);
    sub_2356BAD78(&qword_268810078, MEMORY[0x263F18588]);
    uint64_t v94 = v145;
    uint64_t v95 = v143;
    sub_235949588();
    swift_release();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v88, v95);
    sub_235948748();
    uint64_t v158 = v79;
    unint64_t v159 = v86;
    swift_getOpaqueTypeConformance2();
    sub_2356595F4(&qword_268810080, &qword_268810008);
    float32x4_t v96 = v136;
    uint64_t v97 = v138;
    uint64_t v98 = v150;
    sub_235949258();
    (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v94, v98);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v87, v97);
    uint64_t v99 = sub_235949618();
    uint64_t v101 = v100;
    uint64_t v102 = (uint64_t)v144;
    uint64_t v103 = (uint64_t)&v144[*(int *)(v132 + 36)];
    sub_2356B7308(v2, v103);
    uint64_t v104 = (uint64_t *)(v103 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268810088) + 36));
    *uint64_t v104 = v99;
    v104[1] = v101;
    (*(void (**)(uint64_t, char *, uint64_t))(v139 + 32))(v102, v96, v140);
    uint64_t v105 = sub_235949608();
    uint64_t v107 = v106;
    uint64_t v108 = sub_235948BC8();
    sub_2356B808C(v2, (uint64_t)&v158);
    uint64_t v109 = v158;
    long long v150 = v160;
    long long v148 = v161;
    uint64_t v110 = v162;
    uint64_t v111 = v164;
    uint64_t v112 = v165;
    long long v145 = v163;
    char v168 = 1;
    char v167 = v159;
    uint64_t v113 = v127;
    sub_23566A2E4(v102, v127, &qword_268810028);
    uint64_t v114 = v113 + *(int *)(v147 + 36);
    *(void *)uint64_t v114 = v108;
    *(void *)(v114 + 8) = 0;
    *(unsigned char *)(v114 + 16) = v168;
    *(_DWORD *)(v114 + 17) = v158;
    *(_DWORD *)(v114 + 20) = *(_DWORD *)((char *)&v158 + 3);
    *(void *)(v114 + 24) = v109;
    *(unsigned char *)(v114 + 32) = v167;
    *(_DWORD *)(v114 + 33) = *(_DWORD *)v166;
    *(_DWORD *)(v114 + 36) = *(_DWORD *)&v166[3];
    *(_OWORD *)(v114 + 40) = v150;
    *(_OWORD *)(v114 + 56) = v148;
    *(void *)(v114 + 72) = v110;
    *(_OWORD *)(v114 + 80) = v145;
    *(void *)(v114 + 96) = v111;
    *(void *)(v114 + 104) = v112;
    *(void *)(v114 + 112) = v105;
    *(void *)(v114 + 120) = v107;
    sub_23566A3AC(v102, &qword_268810028);
    sub_2356BADC0();
    BOOL v115 = v153;
    sub_235949318();
    sub_23566A3AC(v113, &qword_268810030);
    sub_235948758();
    uint64_t v116 = sub_2357C82B0();
    swift_release();
    LOBYTE(v107) = sub_235948F88();
    uint64_t v118 = v155;
    uint64_t v117 = v156;
    uint64_t v119 = (uint64_t)v151;
    (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v151, v115, v156);
    uint64_t v120 = v119 + *(int *)(v154 + 36);
    *(void *)uint64_t v120 = v116;
    *(unsigned char *)(v120 + 8) = v107;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v115, v117);
    sub_2356BAFB8();
    uint64_t v121 = v146;
    sub_235949248();
    sub_23566A3AC(v119, &qword_268810040);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v149 + 32))(v157, v121, v152);
  }
  else
  {
    uint64_t result = sub_235948A08();
    __break(1u);
  }
  return result;
}

uint64_t sub_2356B71F0(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 96);
  sub_23566A348((uint64_t)&v2 + 8, (uint64_t)v3, &qword_268810158);
  sub_2356BB2C4((uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC40);
  sub_235949468();
  sub_235949478();
  return sub_235686798((uint64_t)&v2);
}

uint64_t sub_2356B7290()
{
  return sub_235949478();
}

uint64_t sub_2356B7308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688100D0);
  MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688100D8);
  MEMORY[0x270FA5388](v11, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v57 = *(_OWORD *)(a1 + 80);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC40);
  sub_235949468();
  uint64_t v53 = a2;
  if (v54) {
    goto LABEL_7;
  }
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__alwaysShowReaderModePlayer;
  swift_beginAccess();
  uint64_t v20 = *(void *)(v19 + 8);
  char v21 = *(unsigned char *)(v19 + 16);
  *(void *)&long long v54 = *(void *)v19;
  *((void *)&v54 + 1) = v20;
  char v55 = v21;
  uint64_t v22 = qword_26AF144C0;
  uint64_t v23 = swift_bridgeObjectRetain();
  if (v22 != -1) {
    uint64_t v23 = swift_once();
  }
  MEMORY[0x270FA5388](v23, v24, v25, v26, v27);
  *(&v45 - 2) = (uint64_t)&v54;
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  if (v56 == 1)
  {
LABEL_7:
    uint64_t v48 = v18;
    uint64_t v49 = v11;
    uint64_t v50 = v4;
    type metadata accessor for MFReaderTextFormatterModel(0);
    sub_2356BAD78(&qword_26880F9A8, (void (*)(uint64_t))type metadata accessor for MFReaderTextFormatterModel);
    sub_235948758();
    type metadata accessor for MFReaderSpeechFormatterModel(0);
    sub_2356BAD78(&qword_26880FC30, (void (*)(uint64_t))type metadata accessor for MFReaderSpeechFormatterModel);
    sub_235948758();
    uint64_t v51 = sub_235948878();
    uint64_t v52 = v28;
    uint64_t v29 = sub_235948878();
    uint64_t v46 = v30;
    uint64_t v47 = v29;
    type metadata accessor for MFReaderBlockManager();
    sub_2356BAD78((unint64_t *)&qword_26880FC38, (void (*)(uint64_t))type metadata accessor for MFReaderBlockManager);
    uint64_t v31 = sub_235948A18();
    uint64_t v33 = v32;
    char v56 = 1;
    sub_235949458();
    uint64_t v34 = *(void **)a1;
    if (*(void *)a1)
    {
      char v35 = v54;
      uint64_t v36 = *((void *)&v54 + 1);
      id v37 = v34;
      uint64_t v38 = sub_235948458();
      long long v54 = *(_OWORD *)(a1 + 96);
      sub_235949468();
      if ((v56 & 1) == 0 || (v54 = *(_OWORD *)(a1 + 112), sub_235949468(), double v39 = 1.0, (v56 & 1) == 0)) {
        double v39 = 0.0;
      }
      uint64_t v40 = v52;
      *(void *)uint64_t v17 = v51;
      *((void *)v17 + 1) = v40;
      uint64_t v41 = v46;
      *((void *)v17 + 2) = v47;
      *((void *)v17 + 3) = v41;
      *((void *)v17 + 4) = v31;
      *((void *)v17 + 5) = v33;
      v17[48] = v35;
      *((void *)v17 + 7) = v36;
      *((void *)v17 + 8) = v38;
      *((void *)v17 + 9) = v34;
      *((double *)v17 + 10) = v39;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688100F0);
      sub_2356BB08C();
      sub_2356595F4(&qword_268810118, &qword_2688100D0);
      return sub_235948DA8();
    }
    else
    {
      uint64_t result = sub_235948A08();
      __break(1u);
    }
  }
  else
  {
    *(void *)uint64_t v10 = sub_235948C78();
    *((void *)v10 + 1) = 0;
    v10[16] = 1;
    uint64_t v43 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688100E0) + 44)];
    *(void *)uint64_t v43 = sub_235948BC8();
    *((void *)v43 + 1) = 0;
    v43[16] = 1;
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688100E8);
    sub_2356B78A8(a1, &v43[*(int *)(v44 + 44)]);
    sub_23566A2E4((uint64_t)v10, (uint64_t)v17, &qword_2688100D0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688100F0);
    sub_2356BB08C();
    sub_2356595F4(&qword_268810118, &qword_2688100D0);
    sub_235948DA8();
    return sub_23566A3AC((uint64_t)v10, &qword_2688100D0);
  }
  return result;
}

uint64_t sub_2356B78A8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v3 = sub_2359489F8();
  uint64_t v111 = *(void *)(v3 - 8);
  uint64_t v112 = v3;
  MEMORY[0x270FA5388](v3, v4, v5, v6, v7);
  uint64_t v110 = (char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MFReaderTextFormatterView();
  uint64_t v10 = (int *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810120) - 8;
  MEMORY[0x270FA5388](v99, v17, v18, v19, v20);
  uint64_t v97 = (char *)v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810128);
  MEMORY[0x270FA5388](v101, v22, v23, v24, v25);
  uint64_t v106 = (uint64_t)v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810130);
  MEMORY[0x270FA5388](v103, v27, v28, v29, v30);
  uint64_t v104 = (uint64_t)v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810138);
  MEMORY[0x270FA5388](v102, v32, v33, v34, v35);
  uint64_t v107 = (uint64_t)v95 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810140);
  MEMORY[0x270FA5388](v100, v37, v38, v39, v40);
  uint64_t v109 = (uint64_t)v95 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42, v43, v44, v45, v46);
  uint64_t v105 = (char *)v95 - v47;
  MEMORY[0x270FA5388](v48, v49, v50, v51, v52);
  uint64_t v108 = (uint64_t)v95 - v53;
  v95[1] = type metadata accessor for MFReaderTextFormatterModel(0);
  sub_2356BAD78(&qword_26880F9A8, (void (*)(uint64_t))type metadata accessor for MFReaderTextFormatterModel);
  v95[0] = sub_235948758();
  uint64_t v96 = a1;
  type metadata accessor for MFReaderSpeechFormatterModel(0);
  sub_2356BAD78(&qword_26880FC30, (void (*)(uint64_t))type metadata accessor for MFReaderSpeechFormatterModel);
  sub_235948758();
  long long v114 = *(_OWORD *)(a1 + 80);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC40);
  sub_235949488();
  long long v54 = v115;
  char v55 = v116;
  *(void *)&v16[v10[10]] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F980);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v16 = sub_235948878();
  *((void *)v16 + 1) = v56;
  uint64_t v57 = (uint64_t)v97;
  *((void *)v16 + 2) = sub_235948878();
  *((void *)v16 + 3) = v58;
  *((_OWORD *)v16 + 2) = v54;
  v16[48] = v55;
  type metadata accessor for MFReaderBlockManager();
  sub_2356BAD78((unint64_t *)&qword_26880FC38, (void (*)(uint64_t))type metadata accessor for MFReaderBlockManager);
  *((void *)v16 + 7) = sub_235948A18();
  *((void *)v16 + 8) = v59;
  uint64_t v60 = &v16[v10[11]];
  LOBYTE(v114) = 0;
  sub_235949458();
  uint64_t v61 = *((void *)&v115 + 1);
  *uint64_t v60 = v115;
  *((void *)v60 + 1) = v61;
  uint64_t v62 = &v16[v10[12]];
  LOBYTE(v114) = 0;
  sub_235949458();
  uint64_t v63 = *((void *)&v115 + 1);
  *uint64_t v62 = v115;
  *((void *)v62 + 1) = v63;
  char v64 = sub_235948FD8();
  sub_235948698();
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  sub_2356BB1FC((uint64_t)v16, v57, (uint64_t (*)(void))type metadata accessor for MFReaderTextFormatterView);
  uint64_t v73 = v57 + *(int *)(v99 + 44);
  *(unsigned char *)uint64_t v73 = v64;
  *(void *)(v73 + 8) = v66;
  *(void *)(v73 + 16) = v68;
  *(void *)(v73 + 24) = v70;
  *(void *)(v73 + 32) = v72;
  *(unsigned char *)(v73 + 40) = 0;
  uint64_t v74 = (uint64_t)v16;
  uint64_t v75 = v96;
  sub_2356BB264(v74, (uint64_t (*)(void))type metadata accessor for MFReaderTextFormatterView);
  id v76 = *(void **)v75;
  if (*(void *)v75)
  {
    id v77 = v76;
    uint64_t v78 = sub_235948458();
    uint64_t v79 = v106;
    sub_23566A2E4(v57, v106, &qword_268810120);
    CGRect v80 = (uint64_t *)(v79 + *(int *)(v101 + 36));
    uint64_t *v80 = v78;
    v80[1] = (uint64_t)v76;
    sub_23566A3AC(v57, &qword_268810120);
    long long v115 = *(_OWORD *)(v75 + 96);
    sub_235949468();
    if ((_BYTE)v114) {
      double v81 = 1.0;
    }
    else {
      double v81 = 0.0;
    }
    uint64_t v82 = v104;
    sub_23566A2E4(v79, v104, &qword_268810128);
    *(double *)(v82 + *(int *)(v103 + 36)) = v81;
    sub_23566A3AC(v79, &qword_268810128);
    uint64_t v83 = v107;
    sub_23566A2E4(v82, v107, &qword_268810130);
    *(unsigned char *)(v83 + *(int *)(v102 + 36)) = 1;
    sub_23566A3AC(v82, &qword_268810130);
    long long v84 = v110;
    sub_2359489E8();
    uint64_t v85 = (uint64_t)v105;
    unint64_t v86 = &v105[*(int *)(v100 + 36)];
    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810148);
    uint64_t v89 = v111;
    uint64_t v88 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(&v86[*(int *)(v87 + 40)], v84, v112);
    char *v86 = 0;
    sub_23566A2E4(v83, v85, &qword_268810138);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v84, v88);
    sub_23566A3AC(v83, &qword_268810138);
    uint64_t v90 = v108;
    sub_23566A348(v85, v108, &qword_268810140);
    uint64_t v91 = v109;
    sub_23566A2E4(v90, v109, &qword_268810140);
    long long v92 = v113;
    *uint64_t v113 = 0;
    *((unsigned char *)v92 + 8) = 1;
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810150);
    sub_23566A2E4(v91, (uint64_t)v92 + *(int *)(v93 + 48), &qword_268810140);
    sub_23566A3AC(v90, &qword_268810140);
    return sub_23566A3AC(v91, &qword_268810140);
  }
  else
  {
    uint64_t result = sub_235948A08();
    __break(1u);
  }
  return result;
}

void sub_2356B808C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  sub_2356B62CC(v4);
  type metadata accessor for MFReaderTextFormatterModel(0);
  sub_2356BAD78(&qword_26880F9A8, (void (*)(uint64_t))type metadata accessor for MFReaderTextFormatterModel);
  sub_235948758();
  type metadata accessor for MFReaderBlockManager();
  sub_2356BAD78((unint64_t *)&qword_26880FC38, (void (*)(uint64_t))type metadata accessor for MFReaderBlockManager);
  uint64_t v6 = (void *)sub_235948A18();
  uint64_t v17 = v7;
  uint64_t v8 = sub_235948878();
  uint64_t v10 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    id v18 = v10;
    uint64_t v13 = sub_235948458();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FC40);
    sub_235949468();
    double v14 = 0.0;
    *(void *)a2 = 0;
    if (v19) {
      double v14 = 1.0;
    }
    *(unsigned char *)(a2 + 8) = 1;
    *(void *)(a2 + 16) = v4;
    *(void *)(a2 + 24) = v5;
    *(void *)(a2 + 32) = v6;
    *(void *)(a2 + 40) = v17;
    *(void *)(a2 + 48) = v11;
    *(void *)(a2 + 56) = v12;
    *(void *)(a2 + 64) = v13;
    *(void *)(a2 + 72) = v10;
    *(double *)(a2 + 80) = v14;
    sub_2356B62CC(v4);
    id v15 = v6;
    sub_2359470F8();
    sub_2359470F8();
    id v16 = v18;
    sub_235689A84(v4);

    swift_release();
    swift_release();
  }
  else
  {
    sub_235948A08();
    __break(1u);
  }
}

uint64_t sub_2356B82A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2356B64B8(a1);
}

uint64_t sub_2356B82F0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF28);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  id v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v28 = a2;
  id v18 = (void *)sub_235949A88();
  id v19 = objc_msgSend(v17, sel_dataForKey_, v18);

  if (v19)
  {
    int v26 = a1;
    uint64_t v27 = a3;
    uint64_t v20 = sub_235947818();
    unint64_t v22 = v21;

    sub_2359473A8();
    swift_allocObject();
    sub_235947398();
    sub_2356BA2AC();
    sub_235947388();
    swift_release();
    char v30 = v31;
    sub_235948498();
    sub_235676264(v20, v22);
    a3 = v27;
  }
  else
  {
    char v31 = a1;
    sub_235948498();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF30);
  sub_2359484A8();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v28;
  *(void *)(v23 + 24) = a3;
  sub_2356595F4(&qword_26880FF38, &qword_26880FF28);
  sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  if (qword_26880E5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_235948428();
  swift_endAccess();
  swift_release();
  return sub_235689A84(a4);
}

uint64_t sub_2356B86F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v26[4] = a5;
  uint64_t v28 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FFC8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  id v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v27 = a2;
  id v19 = (void *)sub_235949A88();
  id v20 = objc_msgSend(v18, sel_dataForKey_, v19);

  if (v20)
  {
    v26[3] = a6;
    uint64_t v21 = sub_235947818();
    unint64_t v23 = v22;

    sub_2359473A8();
    swift_allocObject();
    sub_235947398();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FFD0);
    sub_2356BA584(&qword_26880FFE8, (void (*)(void))sub_2356BA530);
    sub_235947388();
    swift_release();
    uint64_t v29 = v30;
    sub_2359470F8();
    sub_235948498();
    sub_235676264(v21, v23);
    swift_release();
  }
  else
  {
    uint64_t v30 = a1;
    sub_2359470F8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26880FFD0);
    sub_235948498();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FFD8);
  sub_2359484A8();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v27;
  *(void *)(v24 + 24) = a3;
  sub_2356595F4(&qword_26880FFE0, &qword_26880FFC8);
  sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  if (qword_26880E5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_235948428();
  swift_endAccess();
  swift_release();
  sub_235689A84(v28);
  return swift_release();
}

uint64_t sub_2356B8B7C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FFA0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v28 = a2;
  id v18 = (void *)sub_235949A88();
  id v19 = objc_msgSend(v17, sel_dataForKey_, v18);

  if (v19)
  {
    int v26 = a1;
    uint64_t v27 = a3;
    uint64_t v20 = sub_235947818();
    unint64_t v22 = v21;

    sub_2359473A8();
    swift_allocObject();
    sub_235947398();
    sub_2356BA47C();
    sub_235947388();
    swift_release();
    char v30 = v31;
    sub_235948498();
    sub_235676264(v20, v22);
    a3 = v27;
  }
  else
  {
    char v31 = a1;
    sub_235948498();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FFA8);
  sub_2359484A8();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v28;
  *(void *)(v23 + 24) = a3;
  sub_2356595F4(&qword_26880FFB0, &qword_26880FFA0);
  sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  if (qword_26880E5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_235948428();
  swift_endAccess();
  swift_release();
  return sub_235689A84(a4);
}

uint64_t sub_2356B8F84(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF78);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v28 = a2;
  id v18 = (void *)sub_235949A88();
  id v19 = objc_msgSend(v17, sel_dataForKey_, v18);

  if (v19)
  {
    int v26 = a1;
    uint64_t v27 = a3;
    uint64_t v20 = sub_235947818();
    unint64_t v22 = v21;

    sub_2359473A8();
    swift_allocObject();
    sub_235947398();
    sub_2356BA398();
    sub_235947388();
    swift_release();
    char v30 = v31;
    sub_235948498();
    sub_235676264(v20, v22);
    a3 = v27;
  }
  else
  {
    char v31 = a1;
    sub_235948498();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF80);
  sub_2359484A8();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v28;
  *(void *)(v23 + 24) = a3;
  sub_2356595F4(&qword_26880FF88, &qword_26880FF78);
  sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  if (qword_26880E5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_235948428();
  swift_endAccess();
  swift_release();
  return sub_235689A84(a4);
}

uint64_t sub_2356B938C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v47 = a1;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF50);
  uint64_t v9 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44, v10, v11, v12, v13);
  uint64_t v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2359488B8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18, v19, v20, v21);
  uint64_t v23 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24, v25, v26, v27, v28);
  char v30 = (char *)v41 - v29;
  id v31 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v32 = (void *)sub_235949A88();
  id v33 = objc_msgSend(v31, sel_dataForKey_, v32);

  if (v33)
  {
    v41[1] = a6;
    uint64_t v34 = sub_235947818();
    unint64_t v36 = v35;

    sub_2359473A8();
    swift_allocObject();
    sub_235947398();
    sub_2356BAD78(&qword_26880FF68, MEMORY[0x263F18D80]);
    sub_235947388();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v30, v16);
    sub_235948498();
    sub_235676264(v34, v36);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v30, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v23, v47, v16);
    sub_235948498();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FF58);
  sub_2359484A8();
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = v43;
  *(void *)(v37 + 16) = v42;
  *(void *)(v37 + 24) = v38;
  sub_2356595F4(&qword_26880FF60, &qword_26880FF50);
  uint64_t v39 = v44;
  sub_2359485C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v39);
  if (qword_26880E5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_235948428();
  swift_endAccess();
  swift_release();
  sub_235689A84(v45);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v47, v16);
}

void sub_2356B98D0()
{
  sub_2359473D8();
  swift_allocObject();
  sub_2359473C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880FFD0);
  sub_2356BA584(&qword_26880FFF8, (void (*)(void))sub_2356BA5F4);
  uint64_t v0 = sub_2359473B8();
  unint64_t v2 = v1;
  swift_release();
  id v3 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v4 = (void *)sub_235947808();
  uint64_t v5 = (void *)sub_235949A88();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);

  id v6 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v7 = (void *)sub_235949A88();
  id v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  if (v8)
  {
    uint64_t v9 = (void *)sub_235947808();
    uint64_t v10 = (void *)sub_235949A88();
    objc_msgSend(v8, sel_setValue_forKey_, v9, v10);
    sub_235676264(v0, v2);
  }
  else
  {
    sub_235676264(v0, v2);
  }
}

void sub_2356B9B84(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_2359473D8();
  swift_allocObject();
  sub_2359473C8();
  a4();
  uint64_t v5 = sub_2359473B8();
  unint64_t v7 = v6;
  swift_release();
  id v8 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v9 = (void *)sub_235947808();
  uint64_t v10 = (void *)sub_235949A88();
  objc_msgSend(v8, sel_setObject_forKey_, v9, v10);

  id v11 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v12 = (void *)sub_235949A88();
  id v13 = objc_msgSend(v11, sel_initWithSuiteName_, v12);

  if (v13)
  {
    uint64_t v14 = (void *)sub_235947808();
    uint64_t v15 = (void *)sub_235949A88();
    objc_msgSend(v13, sel_setValue_forKey_, v14, v15);
    sub_235676264(v5, v7);
  }
  else
  {
    sub_235676264(v5, v7);
  }
}

void sub_2356B9E04()
{
  sub_2359473D8();
  swift_allocObject();
  sub_2359473C8();
  sub_2359488B8();
  sub_2356BAD78(&qword_26880FF70, MEMORY[0x263F18D80]);
  uint64_t v0 = sub_2359473B8();
  unint64_t v2 = v1;
  swift_release();
  id v3 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v4 = (void *)sub_235947808();
  uint64_t v5 = (void *)sub_235949A88();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);

  id v6 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  unint64_t v7 = (void *)sub_235949A88();
  id v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  if (v8)
  {
    uint64_t v9 = (void *)sub_235947808();
    os_log_t oslog = (os_log_t)sub_235949A88();
    objc_msgSend(v8, sel_setValue_forKey_, v9, oslog);
    sub_235676264(v0, v2);
  }
  else
  {
    sub_235676264(v0, v2);
  }
}

uint64_t sub_2356BA0DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  type metadata accessor for MFReaderBlockManager();
  sub_2356BAD78((unint64_t *)&qword_26880FC38, (void (*)(uint64_t))type metadata accessor for MFReaderBlockManager);
  uint64_t v9 = sub_235948A18();
  uint64_t v11 = v10;
  sub_235949458();
  sub_235949458();
  uint64_t result = sub_235949458();
  *(void *)a7 = v9;
  *(void *)(a7 + 8) = v11;
  *(void *)(a7 + 16) = a1;
  *(void *)(a7 + 24) = a2;
  *(unsigned char *)(a7 + 32) = 0;
  *(void *)(a7 + 40) = a3;
  *(void *)(a7 + 48) = a4;
  *(unsigned char *)(a7 + 56) = 0;
  *(void *)(a7 + 64) = a5;
  *(void *)(a7 + 72) = a6;
  *(unsigned char *)(a7 + 80) = v18;
  *(void *)(a7 + 88) = v19;
  *(unsigned char *)(a7 + 96) = v18;
  *(void *)(a7 + 104) = v19;
  *(unsigned char *)(a7 + 112) = v18;
  *(void *)(a7 + 120) = v19;
  return result;
}

uint64_t sub_2356BA238()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2356BA270(unsigned __int8 *a1)
{
  sub_2356B9B84(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(void))sub_2356BA300);
}

unint64_t sub_2356BA2AC()
{
  unint64_t result = qword_26880FF40;
  if (!qword_26880FF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FF40);
  }
  return result;
}

unint64_t sub_2356BA300()
{
  unint64_t result = qword_26880FF48;
  if (!qword_26880FF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FF48);
  }
  return result;
}

void sub_2356BA354()
{
}

void sub_2356BA35C(unsigned __int8 *a1)
{
  sub_2356B9B84(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(void))sub_2356BA3EC);
}

unint64_t sub_2356BA398()
{
  unint64_t result = qword_26880FF90;
  if (!qword_26880FF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FF90);
  }
  return result;
}

unint64_t sub_2356BA3EC()
{
  unint64_t result = qword_26880FF98;
  if (!qword_26880FF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FF98);
  }
  return result;
}

void sub_2356BA440(unsigned __int8 *a1)
{
  sub_2356B9B84(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(void))sub_2356BA4D0);
}

unint64_t sub_2356BA47C()
{
  unint64_t result = qword_26880FFB8;
  if (!qword_26880FFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FFB8);
  }
  return result;
}

unint64_t sub_2356BA4D0()
{
  unint64_t result = qword_26880FFC0;
  if (!qword_26880FFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FFC0);
  }
  return result;
}

void sub_2356BA524()
{
}

unint64_t sub_2356BA530()
{
  unint64_t result = qword_26880FFF0;
  if (!qword_26880FFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26880FFF0);
  }
  return result;
}

uint64_t sub_2356BA584(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26880FFD0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2356BA5F4()
{
  unint64_t result = qword_268810000;
  if (!qword_268810000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810000);
  }
  return result;
}

uint64_t sub_2356BA648()
{
  return sub_2359470F8();
}

uint64_t destroy for MFReaderModeView(uint64_t a1)
{
  sub_2356BA6C4();
  sub_2356BA6C4();
  if (*(void *)(a1 + 64)) {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2356BA6C4()
{
  return swift_release();
}

uint64_t initializeWithCopy for MFReaderModeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  id v9 = v4;
  sub_2356BA648();
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  char v12 = *(unsigned char *)(a2 + 56);
  sub_2356BA648();
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  uint64_t v13 = *(void *)(a2 + 64);
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v14;
    sub_2359470F8();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  sub_2359470F8();
  sub_2359470F8();
  sub_2359470F8();
  return a1;
}

uint64_t assignWithCopy for MFReaderModeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  sub_2356BA648();
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  sub_2356BA6C4();
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  char v12 = *(unsigned char *)(a2 + 56);
  sub_2356BA648();
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  sub_2356BA6C4();
  uint64_t v13 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v13)
    {
      uint64_t v15 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v13;
      *(void *)(a1 + 72) = v15;
      sub_2359470F8();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v14 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  sub_2359470F8();
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_2359470F8();
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_2359470F8();
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  sub_2359470F8();
  swift_release();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for MFReaderModeView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_2356BA6C4();
  char v7 = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v7;
  sub_2356BA6C4();
  uint64_t v8 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v8;
      *(void *)(a1 + 72) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MFReaderModeView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 128)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MFReaderModeView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MFReaderModeView()
{
  return &type metadata for MFReaderModeView;
}

uint64_t sub_2356BAB38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2356BAB60()
{
  return sub_2356B71F0(v0 + 16);
}

uint64_t sub_2356BAB68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  id v3 = *(id *)a1;
  sub_2356BA648();
  sub_2356BA648();
  sub_2356B62CC(v2);
  sub_2359470F8();
  sub_2359470F8();
  sub_2359470F8();
  return a1;
}

unint64_t sub_2356BAC24()
{
  unint64_t result = qword_268810050;
  if (!qword_268810050)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810010);
    sub_2356BAD78(&qword_268810058, (void (*)(uint64_t))type metadata accessor for MFReaderTextDisplayView);
    sub_2356595F4((unint64_t *)&qword_268810060, &qword_268810068);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810050);
  }
  return result;
}

uint64_t objectdestroy_14Tm()
{
  sub_2356BA6C4();
  sub_2356BA6C4();
  if (*(void *)(v0 + 80)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2356BAD70()
{
  return sub_2356B7290();
}

uint64_t sub_2356BAD78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2356BADC0()
{
  unint64_t result = qword_268810090;
  if (!qword_268810090)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810030);
    sub_2356BAE60();
    sub_2356595F4(&qword_2688100A8, &qword_2688100B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810090);
  }
  return result;
}

unint64_t sub_2356BAE60()
{
  unint64_t result = qword_268810098;
  if (!qword_268810098)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810028);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810018);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810008);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810010);
    sub_2356BAC24();
    swift_getOpaqueTypeConformance2();
    sub_2356595F4(&qword_268810080, &qword_268810008);
    swift_getOpaqueTypeConformance2();
    sub_2356595F4(&qword_2688100A0, &qword_268810088);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810098);
  }
  return result;
}

unint64_t sub_2356BAFB8()
{
  unint64_t result = qword_2688100B8;
  if (!qword_2688100B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810040);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810030);
    sub_2356BADC0();
    swift_getOpaqueTypeConformance2();
    sub_2356595F4(&qword_2688100C0, &qword_2688100C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688100B8);
  }
  return result;
}

unint64_t sub_2356BB08C()
{
  unint64_t result = qword_2688100F8;
  if (!qword_2688100F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688100F0);
    sub_2356BB108();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688100F8);
  }
  return result;
}

unint64_t sub_2356BB108()
{
  unint64_t result = qword_268810100;
  if (!qword_268810100)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810108);
    sub_2356BB1A8();
    sub_2356595F4((unint64_t *)&qword_268810060, &qword_268810068);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810100);
  }
  return result;
}

unint64_t sub_2356BB1A8()
{
  unint64_t result = qword_268810110;
  if (!qword_268810110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810110);
  }
  return result;
}

uint64_t sub_2356BB1FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2356BB264(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2356BB2C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2356BB2F0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2356BB35C()
{
  if (v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] == 1)
  {
    id v1 = objc_msgSend(self, sel_whiteColor);
    id v2 = objc_msgSend(v0, sel_traitCollection);
    id v6 = sub_23569E118(v1, v2);
  }
  else
  {
    int v3 = v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isGlowing];
    int v4 = self;
    if (v3 == 1) {
      id v5 = objc_msgSend(v4, sel_systemYellowColor);
    }
    else {
      id v5 = objc_msgSend(v4, sel_whiteColor);
    }
    id v6 = v5;
  }
  objc_msgSend(v0, sel_setTintColor_, v6);
}

id sub_2356BB46C()
{
  uint64_t v1 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label);
  }
  else
  {
    id v4 = sub_2356BB870(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2356BB4D0()
{
  uint64_t v1 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton);
  }
  else
  {
    id v4 = sub_2356BB530();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2356BB530()
{
  type metadata accessor for CameraTrayUIButton();
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);
  objc_msgSend(v0, sel_setContentMode_, 4);
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = objc_msgSend(v1, sel_whiteColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = v2;
  id v5 = objc_msgSend(v1, sel_blackColor);
  objc_msgSend(v4, sel_setTintColor_, v5);

  id v6 = objc_msgSend(v4, sel_layer);
  if (qword_26AF14128 != -1) {
    swift_once();
  }
  objc_msgSend(v6, sel_setCornerRadius_, (*(double *)&qword_26AF18248 + -10.0) * 0.5);

  id v7 = objc_msgSend(v4, sel_layer);
  if (qword_26AF140F8 != -1) {
    swift_once();
  }
  objc_msgSend(v7, sel_setCornerCurve_, qword_26AF18228);

  id v8 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v8, sel_setMasksToBounds_, 1);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v9 = sub_2356BD8B0();
  objc_msgSend(v4, sel_setImage_forState_, v9, 0);

  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v11 = self;
  id v12 = v4;
  id v13 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v14 = (void *)sub_235949A88();
  uint64_t v15 = (void *)sub_235949A88();
  id v16 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, 0, v15);

  sub_235949AC8();
  uint64_t v17 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setAccessibilityLabel_, v17);

  return v12;
}

id sub_2356BB870(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_control) == 15)
  {
    type metadata accessor for MAGUtilities();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    id v5 = (void *)sub_235949A88();
    id v6 = (void *)sub_235949A88();
    id v7 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v5, 0, v6);

    sub_235949AC8();
    id v8 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setText_, v8);
  }
  objc_msgSend(v2, sel_setTextAlignment_, 0);
  objc_msgSend(v2, sel_setAlpha_, 0.0);
  id v9 = objc_msgSend(v2, sel_layer);
  if (qword_26AF14140 != -1) {
    swift_once();
  }
  objc_msgSend(v9, sel_setCornerRadius_, *(double *)&qword_26AF18258);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v2, sel_setLineBreakMode_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  id v10 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F83628]);
  objc_msgSend(v2, sel_setFont_, v10);

  objc_msgSend(v2, sel_setUserInteractionEnabled_, 1);
  LODWORD(v11) = 1.0;
  objc_msgSend(v2, sel__setHyphenationFactor_, v11);
  objc_msgSend(v2, sel_setIsAccessibilityElement_, 0);
  return v2;
}

id sub_2356BBB18()
{
  uint64_t v1 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config;
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config);
    uint64_t v7 = *(void *)(v5 + 8);
    id v8 = objc_allocWithZone((Class)type metadata accessor for RoundButton());
    id v9 = sub_2357CC830(v6, v7);
    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v9;
    id v3 = v9;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_2356BBBA8()
{
  id v1 = sub_2356BB46C();
  id v2 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  double v3 = 0.0;
  if (*v2 == 1)
  {
    double v3 = 1.0;
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed)) {
      double v3 = 0.25;
    }
  }
  objc_msgSend(v1, sel_setAlpha_, v3);

  id v4 = sub_2356BB4D0();
  uint64_t v5 = v4;
  double v6 = 1.0;
  if (!*v2) {
    double v6 = 0.0;
  }
  objc_msgSend(v4, sel_setAlpha_, v6);

  id v7 = sub_2356BB4D0();
  objc_msgSend(v7, sel_setUserInteractionEnabled_, *v2);
}

void sub_2356BBC88(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed) = a1;
  id v3 = sub_2356BB46C();
  id v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  double v5 = 0.0;
  if (*v4 == 1)
  {
    double v5 = 1.0;
    if (*(unsigned char *)(v1 + v2)) {
      double v5 = 0.25;
    }
  }
  objc_msgSend(v3, sel_setAlpha_, v5);

  sub_2356BB35C();
  id v6 = sub_2356BB4D0();
  objc_msgSend(v6, sel_setUserInteractionEnabled_, (*(unsigned char *)(v1 + v2) & 1) == 0);
}

id sub_2356BBD4C(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  LOBYTE(a1) = *a1;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isOn] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isGlowing] = 0;
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_glowSubscription] = 0;
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_expandsWithClickInteractionOnly] = 0;
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton] = 0;
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label] = 0;
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_control] = (_BYTE)a1;
  id v8 = &v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config];
  void *v8 = a2;
  v8[1] = a3;
  v11.receiver = v3;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_2356BBE80();

  return v9;
}

void sub_2356BBE80()
{
  uint64_t v1 = v0;
  if (qword_26AF14100 != -1) {
    swift_once();
  }
  objc_msgSend(v0, sel_setBackgroundColor_, qword_26AF18230);
  id v2 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v1, sel_setTintColor_, v2);

  id v3 = sub_23579D108();
  id v4 = sub_2356BBB18();
  objc_msgSend(v4, sel_setImage_forState_, v3, 0);

  double v5 = &v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded];
  swift_beginAccess();
  *double v5 = 0;
  sub_2356BBBA8();
  id v6 = objc_msgSend(v1, sel_layer);
  if (qword_26AF14180 != -1) {
    swift_once();
  }
  objc_msgSend(v6, sel_setCornerRadius_, *(double *)&qword_26AF18280 * 0.5);

  id v7 = objc_msgSend(v1, sel_layer);
  if (qword_26AF140F8 != -1) {
    swift_once();
  }
  objc_msgSend(v7, sel_setCornerCurve_, qword_26AF18228);

  id v8 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v8, sel_setMasksToBounds_, 1);

  id v9 = sub_2356BB46C();
  objc_msgSend(v9, sel_setAlpha_, 0.0);

  id v10 = sub_2356BBB18();
  id v11 = objc_msgSend(v10, sel_layer);

  objc_msgSend(v11, sel_setCornerRadius_, (*(double (**)(void))(*(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config + 8] + 24))()* 0.5);
  id v12 = sub_2356BBB18();
  id v13 = objc_msgSend(v12, sel_layer);

  objc_msgSend(v13, sel_setMasksToBounds_, 1);
  id v14 = sub_2356BBB18();
  objc_msgSend(v14, sel_addTarget_action_forControlEvents_, v1, sel_didTap_, 64);

  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_initWithTarget_action_, v1, sel_handleLabelTapWithSender_);
  objc_msgSend(v15, sel_setNumberOfTapsRequired_, 1);
  id v16 = sub_2356BB46C();
  objc_msgSend(v16, sel_addGestureRecognizer_, v15);

  id v17 = sub_2356BB46C();
  objc_msgSend(v1, sel_addSubview_, v17);

  id v18 = sub_2356BBB18();
  objc_msgSend(v1, sel_addSubview_, v18);

  id v19 = sub_2356BB4D0();
  objc_msgSend(v1, sel_addSubview_, v19);

  id v20 = sub_2356BB4D0();
  objc_msgSend(v1, sel_bringSubviewToFront_, v20);

  sub_2356BC49C();
}

uint64_t sub_2356BC2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = sub_2356BBB18();
  sub_2356BDF8C(a1, (uint64_t)v18);
  uint64_t v7 = v19;
  if (v19)
  {
    id v8 = __swift_project_boxed_opaque_existential_1(v18, v19);
    uint64_t v9 = *(void *)(v7 - 8);
    __n128 v13 = MEMORY[0x270FA5388](v8, v8, v10, v11, v12);
    id v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v9 + 16))(v15, v13);
    uint64_t v16 = sub_23594AB68();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v7);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
  }
  else
  {
    uint64_t v16 = 0;
  }
  objc_msgSend(v6, sel_addTarget_action_forControlEvents_, v16, a2, a3);

  return swift_unknownObjectRelease();
}

void sub_2356BC49C()
{
  id v1 = sub_2356BBB18();
  objc_msgSend(v1, sel_setIsAccessibilityElement_, 1);

  id v2 = sub_2356BBB18();
  sub_23579D854();
  id v3 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityLabel_, v3);

  id v4 = sub_2356BBB18();
  Control.rawValue.getter();
  double v5 = (void *)sub_235949A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  id v6 = sub_2356BBB18();
  uint64_t v7 = (unsigned char *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  id v8 = 0;
  if ((*v7 & 1) == 0)
  {
    type metadata accessor for MAGUtilities();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v11 = (void *)sub_235949A88();
    uint64_t v12 = (void *)sub_235949A88();
    id v13 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, 0, v12);

    sub_235949AC8();
    id v8 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v6, sel_setAccessibilityHint_, v8);
}

void sub_2356BC6BC()
{
  id v1 = v0;
  v42.receiver = v0;
  v42.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v42, sel_layoutSubviews);
  id v2 = &v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config];
  uint64_t v4 = *((void *)v2 + 1);
  double v5 = *(double (**)(uint64_t, uint64_t))(v4 + 24);
  double v6 = v5(v3, v4);
  double v7 = v5(v3, v4);
  objc_msgSend(v1, sel_bounds);
  double v9 = v8;
  id v10 = *(double (**)(uint64_t, uint64_t))(v4 + 40);
  double v11 = v10(v3, v4);
  double v12 = v10(v3, v4);
  id v13 = &v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded];
  swift_beginAccess();
  if (*v13)
  {
    double v14 = sub_23572FF24();
    double v15 = sub_23572FF1C();
    objc_msgSend(v1, sel_bounds);
    double v17 = v16 - v6 - v14 - v15;
    v43.origin.double x = 0.0;
    v43.origin.double y = 0.0;
    v43.size.double width = v6;
    v43.size.double height = v7;
    double v18 = v14 + CGRectGetMaxX(v43);
  }
  else
  {
    double v17 = 0.0;
    double v18 = 0.0;
  }
  id v19 = sub_2356BBB18();
  objc_msgSend(v19, sel_setFrame_, 0.0, 0.0, v6, v7);

  id v20 = sub_2356BB46C();
  objc_msgSend(v20, sel_setFrame_, v18, (v9 - v11) * 0.5, v17, v12);

  uint64_t v21 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_235954290;
  id v23 = sub_2356BB4D0();
  id v24 = objc_msgSend(v23, sel_trailingAnchor);

  id v25 = objc_msgSend(v1, sel_trailingAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v25, -5.0);

  *(void *)(v22 + 32) = v26;
  id v27 = sub_2356BB4D0();
  id v28 = objc_msgSend(v27, sel_centerYAnchor);

  id v29 = objc_msgSend(v1, sel_centerYAnchor);
  id v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

  *(void *)(v22 + 40) = v30;
  id v31 = sub_2356BB4D0();
  id v32 = objc_msgSend(v31, sel_widthAnchor);

  id v33 = sub_2356BBB18();
  id v34 = objc_msgSend(v33, sel_widthAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, -10.0);
  *(void *)(v22 + 48) = v35;
  id v36 = sub_2356BB4D0();
  id v37 = objc_msgSend(v36, sel_heightAnchor);

  id v38 = sub_2356BBB18();
  id v39 = objc_msgSend(v38, sel_widthAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, -10.0);
  *(void *)(v22 + 56) = v40;
  sub_235949D98();
  sub_2356594B0(0, (unint64_t *)&qword_26AF152B0);
  uint64_t v41 = (void *)sub_235949D58();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_activateConstraints_, v41, v22);
}

uint64_t type metadata accessor for MultiControlButton()
{
  return self;
}

uint64_t sub_2356BCD1C()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  return *v1;
}

void sub_2356BCD64(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  *uint64_t v3 = a1;
  sub_2356BBBA8();
}

void (*sub_2356BCDBC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2356BCE1C;
}

void sub_2356BCE1C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_2356BBBA8();
  }
}

uint64_t sub_2356BCE50()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed);
}

void sub_2356BCE64(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_control);
}

uint64_t sub_2356BCE7C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_2356BCEC8()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15730);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_235952800;
  *(void *)(v0 + 32) = sub_2356BBB18();
  sub_235949D98();
  return v0;
}

void sub_2356BCFA0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction];
  if (v4)
  {
    sub_2356594B0(0, (unint64_t *)&qword_268810230);
    id v6 = a1;
    id v7 = v4;
    LOBYTE(a1) = sub_23594A4B8();

    if (a1)
    {
      double v8 = &v2[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded];
      swift_beginAccess();
      int v9 = *v8;
      if (qword_26880E400 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_235948278();
      __swift_project_value_buffer(v10, (uint64_t)qword_26880F788);
      double v11 = v2;
      double v12 = sub_235948258();
      os_log_type_t v13 = sub_23594A148();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 67109632;
        sub_23594A608();
        *(_WORD *)(v14 + 8) = 1024;
        sub_23594A608();
        *(_WORD *)(v14 + 14) = 1024;
        sub_23594A608();

        _os_log_impl(&dword_235640000, v12, v13, "should begin: %{BOOL}d, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v14, 0x14u);
        MEMORY[0x237DE9F30](v14, -1, -1);

        if (!v9) {
          return;
        }
      }
      else
      {

        if (!v9) {
          return;
        }
      }
      double v15 = *(void **)&v2[v3];
      if (v15)
      {
        objc_msgSend(v15, sel_cancelInteraction);
        double v16 = *(void **)&v2[v3];
        if (v16)
        {
          id v17 = v16;
          sub_2356BDD58();

          if (*(void *)&v2[v3])
          {
            objc_msgSend(v11, sel_removeInteraction_);
            return;
          }
LABEL_16:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_16;
    }
  }
}

void sub_2356BD268(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction];
  if (v4)
  {
    sub_2356594B0(0, (unint64_t *)&qword_268810230);
    id v6 = a1;
    id v7 = v4;
    LOBYTE(a1) = sub_23594A4B8();

    if (a1)
    {
      if ((v2[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] & 1) == 0)
      {
        if (qword_26880E400 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_235948278();
        __swift_project_value_buffer(v16, (uint64_t)qword_26880F788);
        double v12 = sub_235948258();
        os_log_type_t v13 = sub_23594A148();
        if (!os_log_type_enabled(v12, v13)) {
          goto LABEL_17;
        }
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        double v15 = "will present";
        goto LABEL_16;
      }
      double v8 = *(void **)&v2[v3];
      if (v8)
      {
        objc_msgSend(v8, sel_cancelInteraction);
        int v9 = *(void **)&v2[v3];
        if (v9)
        {
          id v10 = v9;
          sub_2356BDD58();

          if (*(void *)&v2[v3])
          {
            objc_msgSend(v2, sel_removeInteraction_);
            if (qword_26880E400 != -1) {
              swift_once();
            }
            uint64_t v11 = sub_235948278();
            __swift_project_value_buffer(v11, (uint64_t)qword_26880F788);
            double v12 = sub_235948258();
            os_log_type_t v13 = sub_23594A148();
            if (!os_log_type_enabled(v12, v13)) {
              goto LABEL_17;
            }
            uint64_t v14 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v14 = 0;
            double v15 = "will not present";
LABEL_16:
            _os_log_impl(&dword_235640000, v12, v13, v15, v14, 2u);
            MEMORY[0x237DE9F30](v14, -1, -1);
LABEL_17:

            return;
          }
          goto LABEL_20;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_20:
      __break(1u);
    }
  }
}

id sub_2356BD57C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction];
  if (!v3) {
    return 0;
  }
  sub_2356594B0(0, (unint64_t *)&qword_268810230);
  id v5 = a1;
  id v6 = v3;
  LOBYTE(a1) = sub_23594A4B8();

  id result = 0;
  if (a1)
  {
    if (qword_26880E400 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_235948278();
    __swift_project_value_buffer(v8, (uint64_t)qword_26880F788);
    id v9 = v2;
    id v10 = sub_235948258();
    os_log_type_t v11 = sub_23594A148();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v16 = v13;
      *(_DWORD *)uint64_t v12 = 136315650;
      uint64_t v14 = sub_23594A428();
      sub_235687708(v14, v15, &v16);
      sub_23594A608();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 1024;
      swift_beginAccess();

      sub_23594A608();
      *(_WORD *)(v12 + 18) = 1024;

      sub_23594A608();
      _os_log_impl(&dword_235640000, v10, v11, "location: %s, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v12, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x237DE9F30](v13, -1, -1);
      MEMORY[0x237DE9F30](v12, -1, -1);
    }
    else
    {
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CC8]), sel_initWithView_, v9);
  }
  return result;
}

id sub_2356BD8B0()
{
  uint64_t v0 = (void *)sub_235949A88();
  id v1 = objc_msgSend(self, sel_systemImageNamed_, v0);

  if (v1)
  {
    if (qword_26AF14120 != -1) {
      swift_once();
    }
    id v2 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 4, -1, *(double *)&qword_26AF18240);
    id v3 = objc_msgSend(v1, sel_imageByApplyingSymbolConfiguration_, v2);

    if (v3)
    {
      id v1 = objc_msgSend(v3, sel_imageWithRenderingMode_, 1);
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_2356BD9F8()
{
  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isOn] = 0;
  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isGlowing] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_glowSubscription] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction] = 0;
  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_expandsWithClickInteractionOnly] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton] = 0;
  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded] = 0;
  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] = 0;

  sub_23594A968();
  __break(1u);
}

uint64_t sub_2356BDAE8(void *a1)
{
  id v2 = v1;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction];
  if (v3)
  {
    sub_2356594B0(0, (unint64_t *)&qword_268810230);
    id v5 = a1;
    id v6 = v3;
    LOBYTE(a1) = sub_23594A4B8();

    if (a1)
    {
      if (qword_26880E400 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_235948278();
      __swift_project_value_buffer(v7, (uint64_t)qword_26880F788);
      uint64_t v8 = v2;
      id v9 = sub_235948258();
      os_log_type_t v10 = sub_23594A148();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 67109376;
        swift_beginAccess();
        sub_23594A608();
        *(_WORD *)(v11 + 8) = 1024;
        sub_23594A608();

        _os_log_impl(&dword_235640000, v9, v10, "expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v11, 0xEu);
        MEMORY[0x237DE9F30](v11, -1, -1);
      }
      else
      {
      }
      if (v8[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] != 1
        || (uint64_t v12 = &v8[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded], swift_beginAccess(), *v12 == 1))
      {
        uint64_t v13 = &v8[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate];
        if (MEMORY[0x237DEA060](&v8[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate]))
        {
          uint64_t v14 = *((void *)v13 + 1);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v14 + 8))(v8, &off_26E8C2278, ObjectType, v14);
          swift_unknownObjectRelease();
        }
      }
    }
  }
  return 0;
}

void sub_2356BDD58()
{
  if (qword_26880E400 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_235948278();
  __swift_project_value_buffer(v1, (uint64_t)qword_26880F788);
  id v5 = v0;
  id v2 = sub_235948258();
  os_log_type_t v3 = sub_23594A148();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109632;
    sub_23594A608();
    *(_WORD *)(v4 + 8) = 1024;
    swift_beginAccess();
    sub_23594A608();
    *(_WORD *)(v4 + 14) = 1024;
    sub_23594A608();

    _os_log_impl(&dword_235640000, v2, v3, "was cancelled: %{BOOL}d, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v4, 0x14u);
    MEMORY[0x237DE9F30](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_2356BDF2C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15750);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2356BDF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2356BE064(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction];
  if (v4)
  {
    sub_2356BEA1C();
    id v6 = a1;
    id v7 = v4;
    LOBYTE(a1) = sub_23594A4B8();

    if (a1)
    {
      uint64_t v8 = &v2[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_isExpanded];
      swift_beginAccess();
      int v9 = *v8;
      if (qword_26880E400 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_235948278();
      __swift_project_value_buffer(v10, (uint64_t)qword_26880F788);
      uint64_t v11 = v2;
      uint64_t v12 = sub_235948258();
      os_log_type_t v13 = sub_23594A148();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 67109632;
        sub_23594A608();
        *(_WORD *)(v14 + 8) = 1024;
        sub_23594A608();
        *(_WORD *)(v14 + 14) = 1024;
        sub_23594A608();

        _os_log_impl(&dword_235640000, v12, v13, "should begin: %{BOOL}d, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v14, 0x14u);
        MEMORY[0x237DE9F30](v14, -1, -1);

        if (!v9) {
          return;
        }
      }
      else
      {

        if (!v9) {
          return;
        }
      }
      unint64_t v15 = *(void **)&v2[v3];
      if (v15)
      {
        objc_msgSend(v15, sel_cancelInteraction);
        uint64_t v16 = *(void **)&v2[v3];
        if (v16)
        {
          id v17 = v16;
          sub_2356BECCC();

          if (*(void *)&v2[v3])
          {
            objc_msgSend(v11, sel_removeInteraction_);
            if (v11[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_control] != 4) {
              return;
            }
            id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82EE8]), sel_initWithDelegate_, v11);
            id v19 = *(void **)&v2[v3];
            *(void *)&v2[v3] = v18;

            if (*(void *)&v2[v3])
            {
              objc_msgSend(v11, sel_addInteraction_);
              return;
            }
LABEL_19:
            __break(1u);
            return;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_18;
    }
  }
}

void sub_2356BE384(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction];
  if (v4)
  {
    sub_2356BEA1C();
    id v6 = a1;
    id v7 = v4;
    LOBYTE(a1) = sub_23594A4B8();

    if (a1)
    {
      if ((v2[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_isDimmed] & 1) == 0)
      {
        if (qword_26880E400 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_235948278();
        __swift_project_value_buffer(v18, (uint64_t)qword_26880F788);
        uint64_t v14 = sub_235948258();
        os_log_type_t v15 = sub_23594A148();
        if (!os_log_type_enabled(v14, v15)) {
          goto LABEL_20;
        }
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        id v17 = "will present";
        goto LABEL_19;
      }
      uint64_t v8 = *(void **)&v2[v3];
      if (v8)
      {
        objc_msgSend(v8, sel_cancelInteraction);
        int v9 = *(void **)&v2[v3];
        if (v9)
        {
          id v10 = v9;
          sub_2356BECCC();

          if (*(void *)&v2[v3])
          {
            objc_msgSend(v2, sel_removeInteraction_);
            if (v2[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_control] != 4)
            {
LABEL_10:
              if (qword_26880E400 != -1) {
                swift_once();
              }
              uint64_t v13 = sub_235948278();
              __swift_project_value_buffer(v13, (uint64_t)qword_26880F788);
              uint64_t v14 = sub_235948258();
              os_log_type_t v15 = sub_23594A148();
              if (!os_log_type_enabled(v14, v15)) {
                goto LABEL_20;
              }
              uint64_t v16 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v16 = 0;
              id v17 = "will not present";
LABEL_19:
              _os_log_impl(&dword_235640000, v14, v15, v17, v16, 2u);
              MEMORY[0x237DE9F30](v16, -1, -1);
LABEL_20:

              return;
            }
            id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82EE8]), sel_initWithDelegate_, v2);
            uint64_t v12 = *(void **)&v2[v3];
            *(void *)&v2[v3] = v11;

            if (*(void *)&v2[v3])
            {
              objc_msgSend(v2, sel_addInteraction_);
              goto LABEL_10;
            }
            goto LABEL_24;
          }
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_23;
    }
  }
}

id sub_2356BE6EC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction];
  if (!v3) {
    return 0;
  }
  sub_2356BEA1C();
  id v5 = a1;
  id v6 = v3;
  LOBYTE(a1) = sub_23594A4B8();

  id result = 0;
  if (a1)
  {
    if (qword_26880E400 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_235948278();
    __swift_project_value_buffer(v8, (uint64_t)qword_26880F788);
    id v9 = v2;
    id v10 = sub_235948258();
    os_log_type_t v11 = sub_23594A148();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v16 = v13;
      *(_DWORD *)uint64_t v12 = 136315650;
      uint64_t v14 = sub_23594A428();
      sub_235687708(v14, v15, &v16);
      sub_23594A608();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 1024;
      swift_beginAccess();

      sub_23594A608();
      *(_WORD *)(v12 + 18) = 1024;

      sub_23594A608();
      _os_log_impl(&dword_235640000, v10, v11, "location: %s, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v12, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x237DE9F30](v13, -1, -1);
      MEMORY[0x237DE9F30](v12, -1, -1);
    }
    else
    {
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CC8]), sel_initWithView_, v9);
  }
  return result;
}

unint64_t sub_2356BEA1C()
{
  unint64_t result = qword_268810230;
  if (!qword_268810230)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268810230);
  }
  return result;
}

uint64_t sub_2356BEA5C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction];
  if (v3)
  {
    sub_2356BEA1C();
    id v5 = a1;
    id v6 = v3;
    LOBYTE(a1) = sub_23594A4B8();

    if (a1)
    {
      if (qword_26880E400 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_235948278();
      __swift_project_value_buffer(v7, (uint64_t)qword_26880F788);
      uint64_t v8 = v2;
      id v9 = sub_235948258();
      os_log_type_t v10 = sub_23594A148();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 67109376;
        swift_beginAccess();
        sub_23594A608();
        *(_WORD *)(v11 + 8) = 1024;
        sub_23594A608();

        _os_log_impl(&dword_235640000, v9, v10, "expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v11, 0xEu);
        MEMORY[0x237DE9F30](v11, -1, -1);
      }
      else
      {
      }
      if (v8[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_isDimmed] != 1
        || (uint64_t v12 = &v8[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_isExpanded], swift_beginAccess(), *v12 == 1))
      {
        uint64_t v13 = &v8[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_delegate];
        if (MEMORY[0x237DEA060](&v8[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_delegate]))
        {
          uint64_t v14 = *((void *)v13 + 1);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v14 + 8))(v8, &off_26E8C6BC0, ObjectType, v14);
          swift_unknownObjectRelease();
        }
      }
    }
  }
  return 0;
}

void sub_2356BECCC()
{
  if (qword_26880E400 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_235948278();
  __swift_project_value_buffer(v1, (uint64_t)qword_26880F788);
  id v5 = v0;
  uint64_t v2 = sub_235948258();
  os_log_type_t v3 = sub_23594A148();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109632;
    sub_23594A608();
    *(_WORD *)(v4 + 8) = 1024;
    swift_beginAccess();
    sub_23594A608();
    *(_WORD *)(v4 + 14) = 1024;
    sub_23594A608();

    _os_log_impl(&dword_235640000, v2, v3, "was cancelled: %{BOOL}d, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v4, 0x14u);
    MEMORY[0x237DE9F30](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t MFReaderPlaybackSpeed.id.getter()
{
  uint64_t v0 = sub_235947978();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2, v3, v4, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_235947968();
  uint64_t v8 = sub_235947928();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  return v8;
}

uint64_t MFReaderPlaybackSpeed.localizedName.getter()
{
  if (qword_26880E700 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26882C300;
  uint64_t v1 = (void *)sub_235949FC8();
  id v2 = objc_msgSend(v0, sel_stringForObjectValue_, v1);

  if (v2)
  {
    uint64_t v3 = sub_235949AC8();
    unint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v5 = 0;
  }
  type metadata accessor for MAGUtilities();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v8 = (void *)sub_235949A88();
  id v9 = (void *)sub_235949A88();
  id v10 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, 0, v9);

  sub_235949AC8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF15720);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23594FD70;
  *(void *)(v11 + 56) = MEMORY[0x263F8D310];
  *(void *)(v11 + 64) = sub_23567F0EC();
  uint64_t v12 = 3157553;
  if (v5) {
    uint64_t v12 = v3;
  }
  unint64_t v13 = 0xE300000000000000;
  if (v5) {
    unint64_t v13 = v5;
  }
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v13;
  uint64_t v14 = sub_235949A98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

float MFReaderPlaybackSpeed.rawValue.getter()
{
  return flt_235954994[*v0];
}

MagnifierSupport::MFReaderPlaybackSpeed_optional __swiftcall MFReaderPlaybackSpeed.init(rawValue:)(Swift::Float rawValue)
{
  if (rawValue == 0.75)
  {
    *uint64_t v1 = 0;
  }
  else if (rawValue == 1.0)
  {
    *uint64_t v1 = 1;
  }
  else if (rawValue == 1.25)
  {
    *uint64_t v1 = 2;
  }
  else if (rawValue == 1.5)
  {
    *uint64_t v1 = 3;
  }
  else
  {
    if (rawValue == 2.0) {
      char v2 = 5;
    }
    else {
      char v2 = 6;
    }
    if (rawValue == 1.75) {
      char v3 = 4;
    }
    else {
      char v3 = v2;
    }
    *uint64_t v1 = v3;
  }
  return result;
}

void *static MFReaderPlaybackSpeed.allCases.getter()
{
  return &unk_26E8BD910;
}

uint64_t sub_2356BF23C()
{
  return sub_2357986A4();
}

uint64_t sub_2356BF248()
{
  return sub_235875D10();
}

uint64_t sub_2356BF250()
{
  return sub_2357986A4();
}

MagnifierSupport::MFReaderPlaybackSpeed_optional sub_2356BF258(Swift::Float *a1)
{
  return MFReaderPlaybackSpeed.init(rawValue:)(*a1);
}

float sub_2356BF260@<S0>(float *a1@<X8>)
{
  float result = flt_235954994[*v1];
  *a1 = result;
  return result;
}

void sub_2356BF278(void *a1@<X8>)
{
  *a1 = &unk_26E8BD910;
}

BOOL sub_2356BF288(char *a1, char *a2)
{
  return flt_235954994[*a1] == flt_235954994[*a2];
}

uint64_t sub_2356BF2AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_235947978();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_235947968();
  uint64_t v10 = sub_235947928();
  uint64_t v12 = v11;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  *a1 = v10;
  a1[1] = v12;
  return result;
}

uint64_t sub_2356BF388()
{
  return sub_235949D28();
}

uint64_t sub_2356BF3E8()
{
  return sub_235949CF8();
}

unint64_t sub_2356BF43C()
{
  unint64_t result = qword_268810240;
  if (!qword_268810240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810240);
  }
  return result;
}

unint64_t sub_2356BF494()
{
  unint64_t result = qword_268810248;
  if (!qword_268810248)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268810250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810248);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MFReaderPlaybackSpeed(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MFReaderPlaybackSpeed(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2356BF64CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MFReaderPlaybackSpeed()
{
  return &type metadata for MFReaderPlaybackSpeed;
}

unint64_t sub_2356BF684()
{
  unint64_t result = qword_268810258;
  if (!qword_268810258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268810258);
  }
  return result;
}

uint64_t sub_2356BF6D8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PulseFrequencyGenerator()
{
  return self;
}

uint64_t dispatch thunk of StillImageStore.saveAVCapturePhoto(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StillImageStore.imageURLs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of StillImageStore.imageDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StillImageStore.thumbnailDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2356BF770(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (2)
  {
    uint64_t v6 = a2 + v5++;
    unint64_t v7 = 0xEA0000000000726FLL;
    uint64_t v8 = 0x746361466D6F6F7ALL;
    switch(*(unsigned char *)(v6 + 32))
    {
      case 1:
        unint64_t v7 = 0x8000000235969F50;
        uint64_t v8 = 0xD000000000000011;
        break;
      case 2:
        uint64_t v8 = 0x4379616C70736964;
        unint64_t v7 = 0xEF74736172746E6FLL;
        break;
      case 3:
        unint64_t v7 = 0xE700000000000000;
        uint64_t v8 = 0x737265746C6966;
        break;
      case 4:
        unint64_t v7 = 0xEA00000000007468;
        uint64_t v8 = 0x67696C6873616C66;
        break;
      case 5:
        uint64_t v8 = 0x6544656C706F6570;
        unint64_t v7 = 0xEF6E6F6974636574;
        break;
      case 6:
        uint64_t v8 = 0x636F4C7375636F66;
        unint64_t v7 = 0xE90000000000006BLL;
        break;
      case 7:
        unint64_t v7 = 0xEA00000000006570;
        uint64_t v8 = 0x79546172656D6163;
        break;
      case 8:
        uint64_t v8 = 0x4D65727574706163;
        unint64_t v7 = 0xEB0000000065646FLL;
        break;
      case 9:
        uint64_t v8 = 0x6F69746365746564;
        unint64_t v7 = 0xED000065646F4D6ELL;
        break;
      case 0xA:
        unsigned int v9 = 1919905636;
        goto LABEL_18;
      case 0xB:
        uint64_t v8 = 0xD000000000000013;
        unint64_t v7 = 0x8000000235969D10;
        break;
      case 0xC:
        uint64_t v8 = 0x7061436567616D69;
        unint64_t v7 = 0xEC0000006E6F6974;
        break;
      case 0xD:
        unint64_t v7 = 0xEA00000000006B61;
        uint64_t v8 = 0x657053746E696F70;
        break;
      case 0xE:
        unsigned int v9 = 1954047348;
LABEL_18:
        uint64_t v8 = v9 | 0x6574654400000000;
        unint64_t v7 = 0xED00006E6F697463;
        break;
      case 0xF:
        uint64_t v8 = 0x6F68706F7263696DLL;
        unint64_t v7 = 0xEA0000000000656ELL;
        break;
      case 0x10:
        unint64_t v7 = 0xEA00000000007365;
        uint64_t v8 = 0x6974697669746361;
        break;
      default:
        break;
    }
    unint64_t v10 = 0xEA0000000000726FLL;
    uint64_t v11 = 0x746361466D6F6F7ALL;
    switch(a1)
    {
      case 1:
        unint64_t v10 = 0x8000000235969F50;
        if (v8 == 0xD000000000000011) {
          goto LABEL_52;
        }
        goto LABEL_53;
      case 2:
        unint64_t v10 = 0xEF74736172746E6FLL;
        if (v8 != 0x4379616C70736964) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 3:
        unint64_t v10 = 0xE700000000000000;
        if (v8 != 0x737265746C6966) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 4:
        unint64_t v10 = 0xEA00000000007468;
        if (v8 != 0x67696C6873616C66) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 5:
        unint64_t v10 = 0xEF6E6F6974636574;
        if (v8 != 0x6544656C706F6570) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 6:
        unint64_t v10 = 0xE90000000000006BLL;
        if (v8 != 0x636F4C7375636F66) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 7:
        unint64_t v10 = 0xEA00000000006570;
        if (v8 != 0x79546172656D6163) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 8:
        unint64_t v10 = 0xEB0000000065646FLL;
        if (v8 != 0x4D65727574706163) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 9:
        uint64_t v12 = 0x6F69746365746564;
        uint64_t v13 = 0x65646F4D6ELL;
        goto LABEL_48;
      case 10:
        unsigned int v14 = 1919905636;
        goto LABEL_47;
      case 11:
        unint64_t v10 = 0x8000000235969D10;
        if (v8 != 0xD000000000000013) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 12:
        unint64_t v10 = 0xEC0000006E6F6974;
        if (v8 != 0x7061436567616D69) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 13:
        unint64_t v10 = 0xEA00000000006B61;
        if (v8 != 0x657053746E696F70) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 14:
        unsigned int v14 = 1954047348;
LABEL_47:
        uint64_t v12 = v14 | 0x6574654400000000;
        uint64_t v13 = 0x6E6F697463;
LABEL_48:
        unint64_t v10 = v13 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
        if (v8 != v12) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 15:
        uint64_t v11 = 0x6F68706F7263696DLL;
        unint64_t v10 = 0xEA0000000000656ELL;
        goto LABEL_51;
      case 16:
        unint64_t v10 = 0xEA00000000007365;
        if (v8 != 0x6974697669746361) {
          goto LABEL_53;
        }
        goto LABEL_52;
      default:
LABEL_51:
        if (v8 != v11) {
          goto LABEL_53;
        }
LABEL_52:
        if (v7 == v10)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
LABEL_53:
        char v15 = sub_23594AB78();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          if (v2 == v5)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        return 1;
    }
  }
}

uint64_t sub_2356BFD28(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    goto LABEL_5;
  }
  if ((((result & 1) == 0) ^ *(unsigned __int8 *)(a2 + 32))) {
    return 1;
  }
  if (v2 != 1)
  {
    uint64_t v4 = 33;
    while (1)
    {
      uint64_t v5 = v4 - 31;
      if (__OFADD__(v4 - 32, 1)) {
        break;
      }
      char v3 = ((result & 1) == 0) ^ *(unsigned char *)(a2 + v4);
      if ((v3 & 1) == 0)
      {
        ++v4;
        if (v5 != v2) {
          continue;
        }
      }
      return v3 & 1;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    char v3 = 0;
    return v3 & 1;
  }
  return result;
}

uint64_t sub_2356BFDA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_23594AB78();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  unsigned int v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_23594AB78() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_2356BFE6C(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2356BFECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_235949AC8();
  uint64_t v5 = v4;
  if (v3 == sub_235949AC8() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = sub_23594AB78();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = sub_235949AC8();
    uint64_t v14 = v13;
    if (v12 == sub_235949AC8() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = sub_23594AB78();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2356C0024(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2356C0088(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_23594A998())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x237DE87D0](0, a2);
LABEL_5:
      BOOL v6 = v5;
      sub_2356594B0(0, (unint64_t *)&unk_26AF15260);
      char v7 = sub_23594A4B8();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_23594A4B8();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x237DE87D0](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_23594A4B8();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2356C0210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_235949EA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_235949E98();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_23566A3AC(a1, &qword_26AF151E0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_235949E28();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2356C03BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_235949EA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_235949E98();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_23566A3AC(a1, &qword_26AF151E0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_235949E28();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810520);
  return swift_task_create();
}

uint64_t sub_2356C0570(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_23594ACD8();
    Control.rawValue.getter();
    sub_235949B88();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_23594AD28();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xEA0000000000726FLL;
        uint64_t v10 = 0x746361466D6F6F7ALL;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0x8000000235969F50;
            uint64_t v10 = 0xD000000000000011;
            break;
          case 2:
            uint64_t v10 = 0x4379616C70736964;
            unint64_t v9 = 0xEF74736172746E6FLL;
            break;
          case 3:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x737265746C6966;
            break;
          case 4:
            unint64_t v9 = 0xEA00000000007468;
            uint64_t v10 = 0x67696C6873616C66;
            break;
          case 5:
            uint64_t v10 = 0x6544656C706F6570;
            unint64_t v9 = 0xEF6E6F6974636574;
            break;
          case 6:
            uint64_t v10 = 0x636F4C7375636F66;
            unint64_t v9 = 0xE90000000000006BLL;
            break;
          case 7:
            unint64_t v9 = 0xEA00000000006570;
            uint64_t v10 = 0x79546172656D6163;
            break;
          case 8:
            uint64_t v10 = 0x4D65727574706163;
            unint64_t v9 = 0xEB0000000065646FLL;
            break;
          case 9:
            uint64_t v10 = 0x6F69746365746564;
            unint64_t v9 = 0xED000065646F4D6ELL;
            break;
          case 0xA:
            unsigned int v11 = 1919905636;
            goto LABEL_19;
          case 0xB:
            uint64_t v10 = 0xD000000000000013;
            unint64_t v9 = 0x8000000235969D10;
            break;
          case 0xC:
            uint64_t v10 = 0x7061436567616D69;
            unint64_t v9 = 0xEC0000006E6F6974;
            break;
          case 0xD:
            unint64_t v9 = 0xEA00000000006B61;
            uint64_t v10 = 0x657053746E696F70;
            break;
          case 0xE:
            unsigned int v11 = 1954047348;
LABEL_19:
            uint64_t v10 = v11 | 0x6574654400000000;
            unint64_t v9 = 0xED00006E6F697463;
            break;
          case 0xF:
            uint64_t v10 = 0x6F68706F7263696DLL;
            unint64_t v9 = 0xEA0000000000656ELL;
            break;
          case 0x10:
            unint64_t v9 = 0xEA00000000007365;
            uint64_t v10 = 0x6974697669746361;
            break;
          default:
            break;
        }
        unint64_t v12 = 0xEA0000000000726FLL;
        uint64_t v13 = 0x746361466D6F6F7ALL;
        switch(v8)
        {
          case 1:
            unint64_t v12 = 0x8000000235969F50;
            if (v10 == 0xD000000000000011) {
              goto LABEL_53;
            }
            goto LABEL_54;
          case 2:
            unint64_t v12 = 0xEF74736172746E6FLL;
            if (v10 != 0x4379616C70736964) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 3:
            unint64_t v12 = 0xE700000000000000;
            if (v10 != 0x737265746C6966) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 4:
            unint64_t v12 = 0xEA00000000007468;
            if (v10 != 0x67696C6873616C66) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 5:
            unint64_t v12 = 0xEF6E6F6974636574;
            if (v10 != 0x6544656C706F6570) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 6:
            unint64_t v12 = 0xE90000000000006BLL;
            if (v10 != 0x636F4C7375636F66) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 7:
            unint64_t v12 = 0xEA00000000006570;
            if (v10 != 0x79546172656D6163) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 8:
            unint64_t v12 = 0xEB0000000065646FLL;
            if (v10 != 0x4D65727574706163) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 9:
            uint64_t v14 = 0x6F69746365746564;
            uint64_t v15 = 0x65646F4D6ELL;
            goto LABEL_49;
          case 10:
            unsigned int v16 = 1919905636;
            goto LABEL_48;
          case 11:
            unint64_t v12 = 0x8000000235969D10;
            if (v10 != 0xD000000000000013) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 12:
            unint64_t v12 = 0xEC0000006E6F6974;
            if (v10 != 0x7061436567616D69) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 13:
            unint64_t v12 = 0xEA00000000006B61;
            if (v10 != 0x657053746E696F70) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 14:
            unsigned int v16 = 1954047348;
LABEL_48:
            uint64_t v14 = v16 | 0x6574654400000000;
            uint64_t v15 = 0x6E6F697463;
LABEL_49:
            unint64_t v12 = v15 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
            if (v10 != v14) {
              goto LABEL_54;
            }
            goto LABEL_53;
          case 15:
            uint64_t v13 = 0x6F68706F7263696DLL;
            unint64_t v12 = 0xEA0000000000656ELL;
            goto LABEL_52;
          case 16:
            unint64_t v12 = 0xEA00000000007365;
            if (v10 != 0x6974697669746361) {
              goto LABEL_54;
            }
            goto LABEL_53;
          default:
LABEL_52:
            if (v10 != v13) {
              goto LABEL_54;
            }
LABEL_53:
            if (v9 == v12)
            {
              swift_bridgeObjectRelease_n();
              char v17 = 1;
              return v17 & 1;
            }
LABEL_54:
            char v17 = sub_23594AB78();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              return v17 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v17 & 1;
            }
            break;
        }
      }
    }
  }
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_2356C0B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_23594ACD8();
    sub_235949B88();
    uint64_t v6 = sub_23594AD28();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unsigned int v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_23594AB78() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unsigned int v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_23594AB78() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_2356C0CCC(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_9;
  }
  int v3 = a1 & 1;
  sub_23594ACD8();
  sub_23594ACE8();
  uint64_t v4 = sub_23594AD28();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (((v3 == 0) ^ *(unsigned __int8 *)(v8 + v6)))
  {
    char v9 = 1;
    return v9 & 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_9:
    char v9 = 0;
    return v9 & 1;
  }
  do
  {
    char v9 = (v3 == 0) ^ *(unsigned char *)(v8 + v11);
    if (v9) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return v9 & 1;
}

BOOL sub_2356C0DD8(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  int v3 = a1;
  sub_23594ACD8();
  sub_23594ACE8();
  uint64_t v4 = sub_23594AD28();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_2356C0EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_235947978();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]),
        uint64_t v11 = sub_235949998(),
        uint64_t v12 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v13 = v11 & ~v12,
        uint64_t v14 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0))
  {
    uint64_t v21 = ~v12;
    uint64_t v22 = a2;
    uint64_t v15 = v4 + 16;
    unsigned int v16 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v18 = (void (**)(char *, uint64_t))(v15 - 8);
    do
    {
      v16(v10, *(void *)(v22 + 48) + v17 * v13, v3);
      sub_2356DF564((unint64_t *)&unk_2688105B0, MEMORY[0x263F07508]);
      char v19 = sub_235949A18();
      (*v18)(v10, v3);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v21;
    }
    while (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  else
  {
    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_2356C10DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23566A2E4(a1, (uint64_t)v12, &qword_26AF151E0);
  uint64_t v13 = sub_235949EA8();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_23566A3AC((uint64_t)v12, &qword_26AF151E0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = sub_235949E28();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_235949E98();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v15 = 0;
  uint64_t v17 = 0;
LABEL_6:
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810520);
  if (v17 | v15)
  {
    v20[0] = 0;
    v20[1] = 0;
    v20[2] = v15;
    v20[3] = v17;
  }
  return swift_task_create();
}

uint64_t sub_2356C12D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23566A2E4(a1, (uint64_t)v12, &qword_26AF151E0);
  uint64_t v13 = sub_235949EA8();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_23566A3AC((uint64_t)v12, &qword_26AF151E0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = sub_235949E28();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_235949E98();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v15 = 0;
  uint64_t v17 = 0;
LABEL_6:
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  if (v17 | v15)
  {
    v20[0] = 0;
    v20[1] = 0;
    v20[2] = v15;
    v20[3] = v17;
  }
  return swift_task_create();
}

void sub_2356C14CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + 56;
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = 1 << v4;
  uint64_t v6 = -1;
  if (1 << v4 < 64) {
    uint64_t v6 = ~(-1 << (1 << v4));
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  if (v7)
  {
    uint64_t v31 = a2;
    uint64_t v8 = 0;
    unint64_t v9 = __clz(__rbit64(v7));
    unint64_t v10 = (v7 - 1) & v7;
    int64_t v11 = (unint64_t)(v5 + 63) >> 6;
    while (2)
    {
      uint64_t v12 = *(void *)(a1 + 48) + 96 * v9;
      uint64_t v13 = *(void **)v12;
      uint64_t v34 = *(void *)(v12 + 16);
      uint64_t v35 = *(void *)(v12 + 24);
      uint64_t v36 = *(void *)(v12 + 32);
      uint64_t v37 = *(void *)(v12 + 40);
      uint64_t v38 = *(void *)(v12 + 48);
      uint64_t v14 = *(void *)(v12 + 64);
      uint64_t v33 = *(void *)(v12 + 56);
      uint64_t v15 = *(void *)(v12 + 72);
      uint64_t v16 = *(void *)(v12 + 80);
      float v17 = *(float *)(v12 + 88);
      swift_bridgeObjectRetain();
      id v39 = v13;
      uint64_t v40 = v16;
      swift_bridgeObjectRetain();
      if (v10)
      {
LABEL_6:
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v8 << 6);
        goto LABEL_7;
      }
      while (1)
      {
        a2 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          break;
        }
        if (a2 >= v11) {
          goto LABEL_27;
        }
        unint64_t v23 = *(void *)(v3 + 8 * a2);
        ++v8;
        if (!v23)
        {
          uint64_t v8 = a2 + 1;
          if (a2 + 1 >= v11) {
            goto LABEL_27;
          }
          unint64_t v23 = *(void *)(v3 + 8 * v8);
          if (!v23)
          {
            uint64_t v8 = a2 + 2;
            if (a2 + 2 >= v11) {
              goto LABEL_27;
            }
            unint64_t v23 = *(void *)(v3 + 8 * v8);
            if (!v23)
            {
              uint64_t v8 = a2 + 3;
              if (a2 + 3 >= v11) {
                goto LABEL_27;
              }
              unint64_t v23 = *(void *)(v3 + 8 * v8);
              if (!v23)
              {
                a2 += 4;
                if (a2 >= v11)
                {
LABEL_27:
                  swift_release();
                  *(void *)uint64_t v31 = v39;
                  *(void *)(v31 + 8) = 0;
                  *(void *)(v31 + 16) = v34;
                  *(void *)(v31 + 24) = v35;
                  *(void *)(v31 + 32) = v36;
                  *(void *)(v31 + 40) = v37;
                  *(void *)(v31 + 48) = v38;
                  *(void *)(v31 + 56) = v33;
                  *(void *)(v31 + 64) = v14;
                  *(void *)(v31 + 72) = v15;
                  *(void *)(v31 + 80) = v40;
                  *(float *)(v31 + 88) = v17;
                  return;
                }
                unint64_t v23 = *(void *)(v3 + 8 * a2);
                if (!v23)
                {
                  while (1)
                  {
                    uint64_t v8 = a2 + 1;
                    if (__OFADD__(a2, 1)) {
                      break;
                    }
                    if (v8 >= v11) {
                      goto LABEL_27;
                    }
                    unint64_t v23 = *(void *)(v3 + 8 * v8);
                    ++a2;
                    if (v23) {
                      goto LABEL_24;
                    }
                  }
                  __break(1u);
LABEL_44:
                  uint64_t v28 = 0;
                  uint64_t v29 = 6;
                  if (v11 > 6) {
                    uint64_t v29 = v11;
                  }
                  uint64_t v30 = v29 - 6;
                  while (v30 != v28)
                  {
                    unint64_t v27 = *(void *)(a1 + 104 + 8 * v28++);
                    if (v27)
                    {
                      uint64_t v8 = v28 + 5;
                      goto LABEL_31;
                    }
                  }
                  goto LABEL_50;
                }
                uint64_t v8 = a2;
              }
            }
          }
        }
LABEL_24:
        unsigned int v18 = v23 - 1;
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v20 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_7:
        uint64_t v21 = *(void *)(a1 + 48) + 96 * v20;
        float v22 = *(float *)(v21 + 88);
        if (v22 < v17)
        {
          uint64_t v24 = *(void *)(v21 + 72);
          uint64_t v25 = *(void *)(v21 + 80);
          uint64_t v32 = *(void *)(v21 + 64);
          uint64_t v33 = *(void *)(v21 + 56);
          uint64_t v37 = *(void *)(v21 + 40);
          uint64_t v38 = *(void *)(v21 + 48);
          uint64_t v35 = *(void *)(v21 + 24);
          uint64_t v36 = *(void *)(v21 + 32);
          uint64_t v34 = *(void *)(v21 + 16);
          id v26 = *(id *)v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();

          id v39 = v26;
          uint64_t v40 = v25;
          uint64_t v15 = v24;
          uint64_t v14 = v32;
          float v17 = v22;
          if (v10) {
            goto LABEL_6;
          }
        }
        else if (v10)
        {
          goto LABEL_6;
        }
      }
      __break(1u);
LABEL_38:
      if (v18 >= 9)
      {
        unint64_t v27 = *(void *)(a1 + 88);
        if (v27)
        {
          uint64_t v8 = 4;
        }
        else
        {
          unint64_t v27 = *(void *)(a1 + 96);
          if (!v27) {
            goto LABEL_44;
          }
          uint64_t v8 = 5;
        }
LABEL_31:
        unint64_t v10 = (v27 - 1) & v27;
        unint64_t v9 = __clz(__rbit64(v27)) + (v8 << 6);
        continue;
      }
      break;
    }
  }
  else
  {
    unsigned int v18 = v4 & 0x3F;
    if (v18 > 6)
    {
      int64_t v11 = (unint64_t)(v5 + 63) >> 6;
      unint64_t v27 = *(void *)(a1 + 64);
      if (v27)
      {
        uint64_t v31 = a2;
        uint64_t v8 = 1;
        goto LABEL_31;
      }
      if (v18 >= 8)
      {
        unint64_t v27 = *(void *)(a1 + 72);
        uint64_t v31 = a2;
        if (v27)
        {
          uint64_t v8 = 2;
        }
        else
        {
          unint64_t v27 = *(void *)(a1 + 80);
          if (!v27) {
            goto LABEL_38;
          }
          uint64_t v8 = 3;
        }
        goto LABEL_31;
      }
    }
  }
LABEL_50:
  *(_OWORD *)(a2 + 76) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
}

uint64_t sub_2356C183C()
{
  return sub_23594AD28();
}

uint64_t sub_2356C18C4()
{
  sub_235947978();
  sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
  return sub_2359499A8();
}

uint64_t sub_2356C1948()
{
  return sub_23594AD28();
}

uint64_t sub_2356C19CC()
{
  if ((sub_235947948() & 1) == 0) {
    return 0;
  }
  return sub_2359478C8();
}

void sub_2356C1A34(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  char v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

id sub_2356C1A98()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_2356C1AF0(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  char v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*sub_2356C1B44())()
{
  return j__swift_endAccess;
}

id MAGObjectUnderstandingService.__allocating_init(arService:eventHandler:pulseFeedbackProcessor:)(void *a1, uint64_t a2, void *a3)
{
  id v7 = objc_allocWithZone(v3);
  return MAGObjectUnderstandingService.init(arService:eventHandler:pulseFeedbackProcessor:)(a1, a2, a3);
}

id MAGObjectUnderstandingService.init(arService:eventHandler:pulseFeedbackProcessor:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v40 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedStorageGroups] = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache] = v13;
  uint64_t v14 = MEMORY[0x263F8EE80];
  *(void *)&v3[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants] = MEMORY[0x263F8EE80];
  uint64_t v15 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode;
  id v16 = objc_allocWithZone(MEMORY[0x263F16A98]);
  float v17 = v3;
  *(void *)&v3[v15] = objc_msgSend(v16, sel_init);
  uint64_t v18 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
  *(void *)&v17[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16A98]), sel_init);
  *(void *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTableChairGroups] = v14;
  *(_DWORD *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance] = 0;
  unint64_t v19 = &v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject];
  *((_OWORD *)v19 + 3) = 0u;
  *((_OWORD *)v19 + 4) = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *((_OWORD *)v19 + 2) = 0u;
  *(_OWORD *)unint64_t v19 = 0u;
  *(void *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetOccupancy] = 0;
  unint64_t v20 = (void **)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode];
  *unint64_t v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16A98]), sel_init);
  uint64_t v21 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer;
  id v22 = objc_allocWithZone((Class)type metadata accessor for ObjectPointer());
  *(void *)&v17[v21] = ObjectPointer.init(length:)(3.0);
  uint64_t v23 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pointerHitTestDebugNode;
  id v24 = objc_msgSend(self, sel_sphereWithRadius_, 0.05);
  id v25 = objc_msgSend(self, sel_nodeWithGeometry_, v24);

  *(void *)&v17[v23] = v25;
  *(void *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene] = 0;
  *(void *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession] = 0;
  *(void *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_arService] = a1;
  *(void *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_eventHandler] = v40;
  *(void *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pulseFeedbackProcessor] = a3;
  swift_beginAccess();
  id v26 = *v20;
  unint64_t v27 = *(void **)&v17[v21];
  id v28 = a1;
  sub_2359470F8();
  id v29 = a3;
  id v30 = v26;
  id v31 = v27;
  objc_msgSend(v30, sel_addChildNode_, v31);

  uint64_t v32 = (objc_class *)type metadata accessor for MAGObjectUnderstandingService();
  v41.receiver = v17;
  v41.super_class = v32;
  id v33 = objc_msgSendSuper2(&v41, sel_init);
  uint64_t v34 = sub_235949EA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v12, 1, 1, v34);
  sub_235949E78();
  id v35 = v33;
  uint64_t v36 = sub_235949E68();
  uint64_t v37 = (void *)swift_allocObject();
  uint64_t v38 = MEMORY[0x263F8F500];
  v37[2] = v36;
  v37[3] = v38;
  void v37[4] = v35;
  sub_2356C0210((uint64_t)v12, (uint64_t)&unk_2688102F8, (uint64_t)v37);

  swift_release();
  swift_release();
  return v35;
}

uint64_t sub_2356C1F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  sub_235949E78();
  *(void *)(v4 + 48) = sub_235949E68();
  uint64_t v6 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_2356C200C, v6, v5);
}

uint64_t sub_2356C200C()
{
  uint64_t v1 = *(char **)(v0 + 40);
  swift_release();
  uint64_t v2 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_arService]
                 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_eventHandler);
  sub_2359470F8();
  uint64_t v3 = v1;
  id v4 = objc_msgSend(v3, sel_description);
  uint64_t v5 = sub_235949AC8();
  uint64_t v7 = v6;

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_2688106E0;
  *(void *)(v9 + 24) = v8;
  swift_beginAccess();
  swift_retain_n();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = 0x8000000000000000;
  sub_235940BC8((uint64_t)&unk_268813C20, v9, v5, v7, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 16) = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_2356C21DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2359481C8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13, v14, v15, v16);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  id v25 = (char *)&v75 - v24;
  if (qword_26880E440 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_235948278();
  __swift_project_value_buffer(v26, (uint64_t)qword_26880F848);
  unint64_t v27 = sub_235948258();
  os_log_type_t v28 = sub_23594A148();
  if (os_log_type_enabled(v27, v28))
  {
    id v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v29 = 0;
    _os_log_impl(&dword_235640000, v27, v28, "Starting object understanding service", v29, 2u);
    MEMORY[0x237DE9F30](v29, -1, -1);
  }

  if (qword_26880E4A8 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_2359481F8();
  __swift_project_value_buffer(v30, (uint64_t)qword_26880FB98);
  sub_2359481B8();
  id v31 = sub_2359481D8();
  os_signpost_type_t v32 = sub_23594A328();
  if (sub_23594A5B8())
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v25, v11);
    id v33 = (uint8_t *)swift_slowAlloc();
    id v76 = v10;
    uint64_t v34 = a1;
    id v35 = v33;
    *(_WORD *)id v33 = 0;
    os_signpost_id_t v36 = sub_2359481A8();
    _os_signpost_emit_with_name_impl(&dword_235640000, v31, v32, v36, "StartObjUndrerstandService", "", v35, 2u);
    uint64_t v37 = v35;
    a1 = v34;
    uint64_t v10 = v76;
    MEMORY[0x237DE9F30](v37, -1, -1);

    uint64_t v38 = *(void (**)(char *, uint64_t))(v12 + 8);
    v38(v25, v11);
    v38(v18, v11);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v11);
  }
  if (qword_26AF13B78 != -1) {
    swift_once();
  }
  id v39 = (void *)(qword_26AF181E0
                 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedObjectUnderstandingFeedbacks);
  swift_beginAccess();
  uint64_t v40 = v39[1];
  uint64_t v41 = v39[2];
  v78[0] = *v39;
  v78[1] = v40;
  v78[2] = v41;
  uint64_t v42 = qword_26AF144C0;
  swift_bridgeObjectRetain();
  uint64_t v43 = swift_bridgeObjectRetain();
  if (v42 != -1) {
    uint64_t v43 = swift_once();
  }
  MEMORY[0x270FA5388](v43, v44, v45, v46, v47);
  *(&v75 - 2) = (uint64_t)v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810300);
  sub_23594A2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = v77;
  uint64_t v49 = (id *)(*(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pulseFeedbackProcessor)
             + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_objectUnderstandingToneGenerator);
  swift_beginAccess();
  objc_msgSend(*v49, sel_setUseHapticFeedback_, sub_2356BFE6C(3, v48));
  id v50 = *v49;
  LOBYTE(v49) = sub_2356BFE6C(2, v48);
  id v51 = v50;
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_setUseSoundFeedback_, v49 & 1);

  sub_2356C2EDC();
  uint64_t v52 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene;
  uint64_t v53 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene);
  *(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene) = a1;
  id v54 = a1;

  uint64_t v55 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer), sel_removeFromParentNode);
  id v56 = objc_allocWithZone((Class)type metadata accessor for ObjectPointer());
  id v57 = ObjectPointer.init(length:)(3.0);
  uint64_t v58 = *(void **)(v2 + v55);
  *(void *)(v2 + v55) = v57;

  uint64_t v59 = (id *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  objc_msgSend(*v59, sel_addChildNode_, *(void *)(v2 + v55));
  uint64_t v60 = *(void **)(v2 + v52);
  if (v60)
  {
    id v61 = objc_msgSend(v60, sel_rootNode);
    objc_msgSend(v61, sel_addChildNode_, *v59);

    uint64_t v62 = *(void **)(v2 + v52);
    if (v62)
    {
      id v63 = objc_msgSend(v62, sel_rootNode);
      objc_msgSend(v63, sel_addChildNode_, *(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode));

      char v64 = *(void **)(v2 + v52);
      if (v64)
      {
        id v65 = objc_msgSend(v64, sel_rootNode);
        objc_msgSend(v65, sel_addChildNode_, *(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode));
      }
    }
  }
  uint64_t v66 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession;
  if (!*(void *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession))
  {
    id v67 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F5B6A0]), sel_init_, 1);
    uint64_t v68 = *(void **)(v2 + v66);
    *(void *)(v2 + v66) = v67;

    uint64_t v69 = *(void **)(v2 + v66);
    if (v69) {
      objc_msgSend(v69, sel_setDelegate_, v2);
    }
  }
  uint64_t v70 = sub_235949EA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v10, 1, 1, v70);
  uint64_t v71 = *(void **)(v2 + v66);
  uint64_t v72 = (void *)swift_allocObject();
  v72[2] = 0;
  v72[3] = 0;
  v72[4] = v71;
  id v73 = v71;
  sub_2356C10DC((uint64_t)v10, (uint64_t)&unk_268810310, (uint64_t)v72);
  swift_release();
  return sub_23566A3AC((uint64_t)v10, &qword_26AF151E0);
}

uint64_t sub_2356C28D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_2356C28F0, 0, 0);
}

uint64_t sub_2356C28F0()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F5B688]), sel_init);
    objc_msgSend(v1, sel_runWithConfiguration_, v2);
  }
  **(unsigned char **)(v0 + 16) = v1 == 0;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2356C2994()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  uint64_t v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_2359481C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11, v12, v13, v14);
  uint64_t v16 = &v43[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17, v18, v19, v20, v21);
  uint64_t v23 = &v43[-v22];
  if (qword_26880E440 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_235948278();
  __swift_project_value_buffer(v24, (uint64_t)qword_26880F848);
  id v25 = sub_235948258();
  os_log_type_t v26 = sub_23594A148();
  if (os_log_type_enabled(v25, v26))
  {
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v27 = 0;
    _os_log_impl(&dword_235640000, v25, v26, "Stopping object understanding service", v27, 2u);
    MEMORY[0x237DE9F30](v27, -1, -1);
  }

  if (qword_26880E4A8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_2359481F8();
  __swift_project_value_buffer(v28, (uint64_t)qword_26880FB98);
  sub_2359481B8();
  id v29 = sub_2359481D8();
  os_signpost_type_t v30 = sub_23594A328();
  if (sub_23594A5B8())
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v16, v23, v9);
    id v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v31 = 0;
    os_signpost_id_t v32 = sub_2359481A8();
    _os_signpost_emit_with_name_impl(&dword_235640000, v29, v30, v32, "StopObjUndrerstandService", "", v31, 2u);
    MEMORY[0x237DE9F30](v31, -1, -1);

    id v33 = *(void (**)(unsigned char *, uint64_t))(v10 + 8);
    v33(v23, v9);
    v33(v16, v9);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v23, v9);
  }
  uint64_t v34 = (id *)(*(void *)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pulseFeedbackProcessor]
             + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_objectUnderstandingToneGenerator);
  swift_beginAccess();
  objc_msgSend(*v34, sel_setUseHapticFeedback_, 0);
  objc_msgSend(*v34, sel_setUseSoundFeedback_, 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode], sel_removeFromParentNode);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode], sel_removeFromParentNode);
  id v35 = (id *)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode];
  swift_beginAccess();
  objc_msgSend(*v35, sel_removeFromParentNode);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pointerHitTestDebugNode], sel_removeFromParentNode);
  uint64_t v36 = sub_235949EA8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v8, 1, 1, v36);
  uint64_t v37 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession];
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v1;
  id v39 = (void *)swift_allocObject();
  v39[2] = 0;
  double v39[3] = 0;
  v39[4] = v37;
  v39[5] = sub_2356DAABC;
  v39[6] = v38;
  id v40 = v37;
  uint64_t v41 = v1;
  sub_2356C12D8((uint64_t)v8, (uint64_t)&unk_268810320, (uint64_t)v39);
  swift_release();
  return sub_23566A3AC((uint64_t)v8, &qword_26AF151E0);
}

uint64_t sub_2356C2E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x270FA2498](sub_2356C2E68, 0, 0);
}

uint64_t sub_2356C2E68()
{
  (*(void (**)(id))(v0 + 24))(objc_msgSend(*(id *)(v0 + 16), sel_stop));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2356C2EDC()
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x263F8EE80];
  *uint64_t v2 = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16A98]), sel_init);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode);
  *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode) = v4;

  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16A98]), sel_init);
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode);
  *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode) = v6;

  *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedStorageGroups) = v1;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTableChairGroups) = v3;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance) = 0;
  uint64_t v8 = (_OWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject);
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject);
  id v8[2] = 0u;
  void v8[3] = 0u;
  v8[4] = 0u;
  _OWORD *v8 = 0u;
  v8[1] = 0u;

  *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetOccupancy) = 0;
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession);
  *(void *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession) = 0;
}

uint64_t sub_2356C3028(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  *(void *)&double v8 = MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7).n128_u64[0];
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession];
  if (v11) {
    objc_msgSend(v11, sel_updateWithFrame_, a1, v8);
  }
  uint64_t v12 = sub_235949EA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  id v13 = objc_msgSend(a1, sel_camera);
  objc_msgSend(v13, sel_transform);
  long long v27 = v15;
  long long v28 = v14;
  long long v25 = v17;
  long long v26 = v16;

  sub_235949E78();
  uint64_t v18 = v1;
  uint64_t v19 = sub_235949E68();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = MEMORY[0x263F8F500];
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v21;
  *(void *)(v20 + 32) = v18;
  long long v22 = v27;
  *(_OWORD *)(v20 + 48) = v28;
  *(_OWORD *)(v20 + 64) = v22;
  long long v23 = v25;
  *(_OWORD *)(v20 + 80) = v26;
  *(_OWORD *)(v20 + 96) = v23;
  sub_2356C0210((uint64_t)v10, (uint64_t)&unk_268810330, v20);
  return swift_release();
}

uint64_t sub_2356C31B4(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  v8[13] = a3;
  v8[14] = a4;
  v8[11] = a1;
  v8[12] = a2;
  v8[29].n128_u64[0] = a8;
  uint64_t v9 = sub_2359496D8();
  v8[29].n128_u64[1] = v9;
  v8[30].n128_u64[0] = *(void *)(v9 - 8);
  v8[30].n128_u64[1] = swift_task_alloc();
  uint64_t v10 = sub_235949738();
  v8[31].n128_u64[0] = v10;
  v8[31].n128_u64[1] = *(void *)(v10 - 8);
  v8[32].n128_u64[0] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF151E0);
  v8[32].n128_u64[1] = swift_task_alloc();
  v8[33].n128_u64[0] = sub_235949E78();
  v8[33].n128_u64[1] = sub_235949E68();
  uint64_t v12 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_2356C3340, v12, v11);
}

void sub_2356C3340()
{
  unint64_t v287 = v0;
  unint64_t v2 = v0;
  uint64_t v3 = *(void *)(v0 + 464);
  long long v267 = *(_OWORD *)(v0 + 192);
  long long v272 = *(_OWORD *)(v0 + 176);
  long long v262 = *(_OWORD *)(v0 + 224);
  long long v264 = *(_OWORD *)(v0 + 208);
  swift_release();
  uint64_t v4 = (id *)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  objc_msgSend(*v4, sel_setSimdWorldTransform_, *(double *)&v272, *(double *)&v267, *(double *)&v264, *(double *)&v262);
  objc_msgSend(*v4, sel_simdPosition);
  float32x4_t v214 = v5;
  uint64_t v6 = sub_2356CA54C();
  unint64_t v240 = v0;
  if (v6)
  {
    unint64_t v7 = v6;
    id v8 = *(id *)(v0 + 464);
    uint64_t v9 = sub_2356DC4C4(v7, v214);
    swift_bridgeObjectRelease();

    uint64_t v10 = v9[2];
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    if (v10)
    {
      uint64_t v12 = v9 + 8;
      do
      {
        uint64_t v19 = (void *)*(v12 - 4);
        uint64_t v20 = *(v12 - 3);
        uint64_t v22 = *(v12 - 2);
        uint64_t v21 = *(v12 - 1);
        uint64_t v23 = *v12;
        uint64_t v24 = v12[1];
        uint64_t v25 = v12[2];
        if ((v20 & 0x8000000000000000) == 0 || v19[2])
        {
          int v265 = *((_DWORD *)v12 + 14);
          uint64_t v268 = v12[6];
          uint64_t v273 = v12[5];
          uint64_t v253 = v12[4];
          uint64_t v257 = v12[3];
          sub_2356DF7EC(v19, v20);
          v276[0] = v11;
          *(void *)&long long v261 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_235676584(0, v11[2] + 1, 1);
            uint64_t v11 = v276[0];
          }
          unint64_t v14 = v11[2];
          unint64_t v13 = v11[3];
          uint64_t v15 = v273;
          uint64_t v16 = v268;
          int v17 = v265;
          if (v14 >= v13 >> 1)
          {
            sub_235676584(v13 > 1, v14 + 1, 1);
            int v17 = v265;
            uint64_t v16 = v268;
            uint64_t v15 = v273;
            uint64_t v11 = v276[0];
          }
          v11[2] = v14 + 1;
          uint64_t v18 = &v11[12 * v14];
          v18[4] = v19;
          v18[5] = v20;
          v18[6] = v22;
          v18[7] = v21;
          v18[8] = v23;
          v18[9] = v24;
          v18[10] = v261;
          v18[11] = v257;
          v18[12] = v253;
          v18[13] = v15;
          v18[14] = v16;
          *((_DWORD *)v18 + 30) = v17;
        }
        v12 += 12;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
    int64_t v26 = v11[2];
    if (v26)
    {
      long long v27 = (float *)v11;
      long long v28 = v11;
      id v29 = (int64_t *)v11[4];
      uint64_t v30 = *((void *)v27 + 5);
      v27 += 8;
      uint64_t v31 = *((void *)v27 + 2);
      uint64_t v32 = *((void *)v27 + 3);
      uint64_t v33 = *((void *)v27 + 4);
      uint64_t v34 = *((void *)v27 + 5);
      int64_t v216 = (int64_t)v27;
      int64_t v35 = v26 - 1;
      uint64_t v274 = v28;
      int64_t v231 = v26;
      id v263 = v29;
      unint64_t v249 = *((void *)v27 + 7);
      uint64_t v250 = *((void *)v27 + 6);
      uint64_t v247 = *((void *)v27 + 9);
      uint64_t v248 = *((void *)v27 + 8);
      uint64_t v269 = *((void *)v27 + 10);
      float v212 = v27[22];
      if (v26 == 1)
      {
        uint64_t v36 = v29;
        uint64_t v37 = v30;
        sub_2356DF7EC(v36, v30);
        unint64_t v2 = v240;
      }
      else
      {
        sub_2359470F8();
        sub_2356DF7EC(v29, v30);
        float v51 = v212;
        uint64_t v52 = v30;
        uint64_t v53 = v274 + 27;
        do
        {
          uint64_t v54 = *((void *)v53 - 10);
          float v55 = *(float *)v53;
          if (v54 >= 0) {
            float v56 = *(float *)v53;
          }
          else {
            LODWORD(v56) = *((void *)v53 - 10);
          }
          float v57 = v56;
          if (v52 >= 0) {
            float v58 = v51;
          }
          else {
            float v58 = *(float *)&v52;
          }
          if (v57 < v58)
          {
            *(void *)&long long v261 = *((void *)v53 - 1);
            uint64_t v258 = *((void *)v53 - 2);
            uint64_t v254 = *((void *)v53 - 3);
            uint64_t v243 = *((void *)v53 - 5);
            unint64_t v245 = *((void *)v53 - 4);
            uint64_t v241 = *((void *)v53 - 7);
            uint64_t v242 = *((void *)v53 - 6);
            uint64_t v59 = *((void *)v53 - 9);
            uint64_t v32 = *((void *)v53 - 8);
            uint64_t v60 = (void *)*((void *)v53 - 11);
            uint64_t v61 = v52;
            sub_2356DF7EC(v60, v54);
            sub_2356DF828(v263, v61);
            id v263 = (int64_t *)v60;
            uint64_t v52 = v54;
            uint64_t v31 = v59;
            uint64_t v33 = v241;
            uint64_t v34 = v242;
            uint64_t v250 = v243;
            unint64_t v249 = v245;
            uint64_t v248 = v254;
            uint64_t v247 = v258;
            uint64_t v269 = v261;
            float v51 = v55;
          }
          v53 += 24;
          --v35;
        }
        while (v35);
        float v212 = v51;
        uint64_t v37 = v52;
        swift_release();
        unint64_t v2 = v240;
        int64_t v26 = v231;
      }
      uint64_t v251 = v34;
      uint64_t v252 = v33;
      uint64_t v204 = v31;
      uint64_t v213 = v37;
      if (v37 < 0)
      {
        if (qword_26880E440 != -1) {
          swift_once();
        }
        uint64_t v82 = sub_235948278();
        __swift_project_value_buffer(v82, (uint64_t)qword_26880F848);
        uint64_t v83 = sub_235948258();
        os_log_type_t v84 = sub_23594A148();
        if (os_log_type_enabled(v83, v84))
        {
          uint64_t v85 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v85 = 0;
          _os_log_impl(&dword_235640000, v83, v84, "Create multi-object contact event", v85, 2u);
          MEMORY[0x237DE9F30](v85, -1, -1);
        }

        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v86 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectPointerShape;
        swift_beginAccess();
        uint64_t v87 = *(void *)(v86 + 8);
        char v88 = *(unsigned char *)(v86 + 16);
        *(void *)(v2 + 432) = *(void *)v86;
        *(void *)(v2 + 440) = v87;
        *(unsigned char *)(v2 + 448) = v88;
        uint64_t v89 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        if (v89 != -1) {
          swift_once();
        }
        *(void *)(swift_task_alloc() + 16) = v2 + 432;
        unint64_t v90 = 0;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        if (*(unsigned char *)(v2 + 403))
        {
          uint64_t v91 = sub_2359470F8();
          id v229 = (void *)sub_2356DD114(v91);
          swift_release();
          uint64_t v225 = 0;
          char v92 = 2;
          uint64_t v93 = (uint64_t)v263;
          uint64_t v94 = v269;
        }
        else
        {
          int64_t v98 = v263[2];
          uint64_t v97 = MEMORY[0x263F8EE78];
          if (v98)
          {
            v276[0] = (id)MEMORY[0x263F8EE78];
            sub_235676564(0, v98, 0);
            uint64_t v97 = (uint64_t)v276[0];
            uint64_t v99 = sub_235720158(v263);
            int64_t v96 = v100;
            uint64_t v102 = v101 & 1;
            int64_t v26 = (int64_t)v263;
            while (1)
            {
              if (v99 < 0 || v99 >= 1 << *((unsigned char *)v263 + 32)) {
                goto LABEL_125;
              }
              if (((*(unint64_t *)((char *)v263 + (((unint64_t)v99 >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) >> v99) & 1) == 0) {
                break;
              }
              if (*((_DWORD *)v263 + 9) != v96) {
                goto LABEL_127;
              }
              uint64_t v103 = v263[6] + 96 * v99;
              uint64_t v104 = *(void **)v103;
              long long v260 = *(_OWORD *)(v103 + 32);
              long long v261 = *(_OWORD *)(v103 + 16);
              long long v255 = *(_OWORD *)(v103 + 48);
              long long v246 = *(_OWORD *)(v103 + 64);
              v276[0] = (id)v97;
              unint64_t v2 = *(void *)(v97 + 16);
              unint64_t v90 = *(void *)(v97 + 24);
              id v105 = v104;
              if (v2 >= v90 >> 1)
              {
                sub_235676564(v90 > 1, v2 + 1, 1);
                uint64_t v97 = (uint64_t)v276[0];
              }
              *(void *)(v97 + 16) = v2 + 1;
              uint64_t v106 = v97 + 80 * v2;
              *(void *)(v106 + 32) = v105;
              *(_OWORD *)(v106 + 48) = v261;
              *(_OWORD *)(v106 + 64) = v260;
              *(_OWORD *)(v106 + 80) = v255;
              *(_OWORD *)(v106 + 96) = v246;
              uint64_t v107 = sub_2357201FC(v99, v96, v102 & 1, v263);
              uint64_t v99 = v107;
              int64_t v96 = v108;
              uint64_t v102 = v109 & 1;
              if (!--v98)
              {
                sub_2356DF438(v107, v108, v109 & 1);
                unint64_t v2 = v240;
                uint64_t v94 = v269;
                int64_t v26 = v231;
                goto LABEL_67;
              }
            }
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
            goto LABEL_128;
          }
          uint64_t v94 = v269;
LABEL_67:
          id v229 = (void *)sub_2356DC284(v97);
          swift_bridgeObjectRelease();
          uint64_t v93 = (uint64_t)v263;
          uint64_t v110 = swift_bridgeObjectRetain();
          uint64_t v111 = sub_23570845C(v110);
          uint64_t v225 = sub_2356DCE6C(v111);
          swift_bridgeObjectRelease();
          sub_2356DF828(v263, v213);
          char v92 = 1;
        }
        char v227 = v92;
        uint64_t v269 = v94;
        sub_2356C14CC(v93, (uint64_t)v276);
        *(void *)&long long v261 = 0;
        id v112 = v276[0];
        if (!v276[0])
        {
          __break(1u);
          return;
        }
        int v256 = v286;
        uint64_t v113 = v277;
        uint64_t v114 = v278;
        uint64_t v211 = v279;
        uint64_t v115 = v280;
        uint64_t v116 = v281;
        uint64_t v118 = v282;
        uint64_t v117 = v283;
        uint64_t v119 = v284;
        uint64_t v244 = v285;
        unint64_t v259 = (int64_t *)v276[0];
        LODWORD(v198) = v256;
        uint64_t v195 = v119;
        uint64_t v197 = v244;
        uint64_t v205 = v119;
        uint64_t v206 = v118;
        uint64_t v207 = v117;
        uint64_t v208 = v115;
        uint64_t v194 = v117;
        uint64_t v203 = v113;
        uint64_t v209 = v116;
        uint64_t v210 = v114;
        sub_2356DF898(v112);
        uint64_t v221 = 0;
        uint64_t v223 = 0;
        uint64_t v217 = 0;
        uint64_t v219 = 0;
        uint64_t v97 = 0;
        int64_t v98 = 0;
        unint64_t v90 = 0;
        int64_t v96 = 0;
        uint64_t v215 = 0;
      }
      else
      {
        uint64_t v62 = qword_26880E440;
        id v63 = v263;
        swift_bridgeObjectRetain();
        if (v62 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_235948278();
        __swift_project_value_buffer(v64, (uint64_t)qword_26880F848);
        id v65 = sub_235948258();
        os_log_type_t v66 = sub_23594A148();
        if (os_log_type_enabled(v65, v66))
        {
          id v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v67 = 0;
          _os_log_impl(&dword_235640000, v65, v66, "Create single object contact event", v67, 2u);
          MEMORY[0x237DE9F30](v67, -1, -1);
        }

        if (qword_26AF13B78 != -1) {
          swift_once();
        }
        uint64_t v68 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectPointerShape;
        swift_beginAccess();
        uint64_t v69 = *(void *)(v68 + 8);
        char v70 = *(unsigned char *)(v68 + 16);
        *(void *)(v2 + 408) = *(void *)v68;
        *(void *)(v2 + 416) = v69;
        *(unsigned char *)(v2 + 424) = v70;
        uint64_t v71 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        if (v71 != -1) {
          swift_once();
        }
        *(void *)(swift_task_alloc() + 16) = v2 + 408;
        sub_23594A2A8();
        *(void *)&long long v261 = 0;
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        if (*(unsigned char *)(v2 + 402))
        {
          uint64_t v72 = sub_2359470F8();
          id v229 = (void *)sub_2356DD114(v72);
          swift_release();
          uint64_t v221 = 0;
          uint64_t v223 = 0;
          uint64_t v217 = 0;
          uint64_t v219 = 0;
          int64_t v237 = 0;
          uint64_t v239 = 0;
          int64_t v233 = 0;
          unint64_t v235 = 0;
          uint64_t v215 = 0;
          char v227 = 2;
          uint64_t v73 = v204;
          uint64_t v75 = v34;
          uint64_t v74 = v33;
          id v76 = v63;
          uint64_t v77 = v249;
          uint64_t v78 = v250;
          uint64_t v80 = v247;
          uint64_t v79 = v248;
          uint64_t v81 = v269;
        }
        else
        {
          uint64_t v95 = v63;
          uint64_t v81 = v269;
          swift_bridgeObjectRetain();
          char v227 = 0;
          id v229 = v263;
          uint64_t v73 = v204;
          uint64_t v221 = v32;
          uint64_t v223 = v204;
          uint64_t v75 = v34;
          uint64_t v74 = v33;
          uint64_t v78 = v250;
          int64_t v237 = v250;
          uint64_t v239 = v251;
          id v76 = v63;
          uint64_t v79 = v248;
          uint64_t v77 = v249;
          int64_t v233 = v248;
          unint64_t v235 = v249;
          uint64_t v80 = v247;
          uint64_t v217 = v247;
          uint64_t v219 = v252;
          uint64_t v215 = v269;
        }
        unint64_t v259 = v76;
        *(float *)&uint64_t v198 = v212;
        uint64_t v269 = v81;
        uint64_t v195 = v80;
        uint64_t v197 = v81;
        uint64_t v194 = v79;
        sub_2356DF828(v263, v213);
        uint64_t v225 = 0;
        uint64_t v203 = v73;
        uint64_t v210 = v32;
        uint64_t v211 = v74;
        uint64_t v208 = v75;
        uint64_t v209 = v78;
        uint64_t v206 = v77;
        uint64_t v207 = v79;
        uint64_t v205 = v80;
        int64_t v26 = v231;
        int64_t v96 = v233;
        int64_t v98 = v237;
        uint64_t v97 = v239;
        unint64_t v90 = v235;
      }
      uint64_t v102 = v2 + 384;
      uint64_t v120 = *(void *)(v2 + 464);
      uint64_t v121 = v259;
      objc_msgSend(v121, sel_transform, v194, v195, v197, v198);
      float32x4_t v201 = v122;
      CGRect v202 = v121;

      uint64_t v199 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance;
      uint64_t v200 = v120;
      float v1 = *(float *)(v120 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance);
      if (qword_26AF13B78 == -1)
      {
LABEL_71:
        uint64_t v232 = v96;
        uint64_t v234 = v90;
        uint64_t v236 = v98;
        uint64_t v238 = v97;
        uint64_t v123 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectPointerShape;
        swift_beginAccess();
        uint64_t v124 = *(void *)(v123 + 8);
        char v125 = *(unsigned char *)(v123 + 16);
        *(void *)(v2 + 384) = *(void *)v123;
        *(void *)(v2 + 392) = v124;
        *(unsigned char *)(v2 + 400) = v125;
        uint64_t v126 = qword_26AF144C0;
        swift_bridgeObjectRetain();
        if (v126 != -1) {
          swift_once();
        }
        uint64_t v97 = qword_26AF144B0;
        *(void *)(swift_task_alloc() + 16) = v102;
        unint64_t v90 = v261;
        sub_23594A2A8();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        if (*(unsigned char *)(v2 + 401))
        {
          int64_t v98 = MEMORY[0x263F8EE78];
          v275[0] = (void *)MEMORY[0x263F8EE78];
          sub_2359470F8();
          uint64_t v127 = 0;
          uint64_t v102 = 96;
          int64_t v96 = v216;
          do
          {
            uint64_t v129 = v127 + 1;
            if (__OFADD__(v127, 1))
            {
LABEL_123:
              __break(1u);
              goto LABEL_124;
            }
            uint64_t v130 = (unint64_t *)(v96 + 96 * v127);
            uint64_t v131 = v130[1];
            if (v131 < 0)
            {
              unint64_t v2 = *v130;
              unint64_t v132 = v130[7];
              v276[0] = (id)v98;
              unint64_t v133 = v2 + 56;
              uint64_t v97 = -1 << *(unsigned char *)(v2 + 32);
              if (-v97 < 64) {
                uint64_t v134 = ~(-1 << -(char)v97);
              }
              else {
                uint64_t v134 = -1;
              }
              int64_t v98 = v134 & *(void *)(v2 + 56);
              unint64_t v90 = v131;
              *(void *)&long long v261 = v132;
              sub_2356DF7EC((void *)v2, v131);
              int64_t v96 = (unint64_t)(63 - v97) >> 6;
              swift_bridgeObjectRetain_n();
              int64_t v26 = 0;
              while (1)
              {
                if (v98)
                {
                  v98 &= v98 - 1;
                }
                else
                {
                  int64_t v136 = v26 + 1;
                  if (__OFADD__(v26, 1))
                  {
                    __break(1u);
                    goto LABEL_123;
                  }
                  if (v136 >= v96) {
                    goto LABEL_104;
                  }
                  uint64_t v137 = *(void *)(v133 + 8 * v136);
                  ++v26;
                  if (!v137)
                  {
                    int64_t v26 = v136 + 1;
                    if (v136 + 1 >= v96) {
                      goto LABEL_104;
                    }
                    uint64_t v137 = *(void *)(v133 + 8 * v26);
                    if (!v137)
                    {
                      int64_t v26 = v136 + 2;
                      if (v136 + 2 >= v96) {
                        goto LABEL_104;
                      }
                      uint64_t v137 = *(void *)(v133 + 8 * v26);
                      if (!v137)
                      {
                        int64_t v26 = v136 + 3;
                        if (v136 + 3 >= v96) {
                          goto LABEL_104;
                        }
                        uint64_t v137 = *(void *)(v133 + 8 * v26);
                        if (!v137)
                        {
                          int64_t v26 = v136 + 4;
                          if (v136 + 4 >= v96) {
                            goto LABEL_104;
                          }
                          uint64_t v137 = *(void *)(v133 + 8 * v26);
                          if (!v137)
                          {
                            int64_t v138 = v136 + 5;
                            if (v138 >= v96)
                            {
LABEL_104:
                              swift_release();
                              uint64_t v128 = sub_2356DCE6C((uint64_t)v276[0]);
                              swift_bridgeObjectRelease();
                              sub_2356DF828((void *)v2, v90);
                              sub_2356DF828((void *)v2, v90);
                              unint64_t v2 = v240;
                              int64_t v98 = MEMORY[0x263F8EE78];
                              int64_t v26 = v231;
                              int64_t v96 = v216;
                              goto LABEL_76;
                            }
                            uint64_t v137 = *(void *)(v133 + 8 * v138);
                            if (!v137)
                            {
                              while (1)
                              {
                                int64_t v26 = v138 + 1;
                                if (__OFADD__(v138, 1)) {
                                  break;
                                }
                                if (v26 >= v96) {
                                  goto LABEL_104;
                                }
                                uint64_t v137 = *(void *)(v133 + 8 * v26);
                                ++v138;
                                if (v137) {
                                  goto LABEL_103;
                                }
                              }
LABEL_124:
                              __break(1u);
LABEL_125:
                              __break(1u);
                              goto LABEL_126;
                            }
                            int64_t v26 = v138;
                          }
                        }
                      }
                    }
                  }
LABEL_103:
                  int64_t v98 = (v137 - 1) & v137;
                }
                uint64_t v135 = swift_bridgeObjectRetain();
                uint64_t v97 = (uint64_t)v276;
                sub_235718EFC(v135);
              }
            }
            uint64_t v128 = swift_bridgeObjectRetain();
LABEL_76:
            uint64_t v97 = (uint64_t)v275;
            sub_235718EFC(v128);
            uint64_t v127 = v129;
          }
          while (v129 != v26);
          swift_release_n();
          uint64_t v139 = sub_2356DCE6C((uint64_t)v275[0]);
          swift_bridgeObjectRelease();
          uint64_t v140 = *(void *)(v139 + 16);
          swift_bridgeObjectRelease();
          uint64_t v48 = v221;
          uint64_t v47 = v223;
          uint64_t v49 = v219;
        }
        else
        {
          swift_release();
          uint64_t v48 = v221;
          uint64_t v47 = v223;
          uint64_t v49 = v219;
          if (v213 < 0)
          {
            uint64_t v141 = swift_bridgeObjectRetain();
            uint64_t v142 = sub_23570845C(v141);
            uint64_t v143 = sub_2356DCE6C(v142);
            swift_bridgeObjectRelease();
            sub_2356DF828(v263, v213);
            uint64_t v140 = *(void *)(v143 + 16);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v140 = *(void *)(v269 + 16);
          }
        }
        v144.i64[0] = v203;
        v144.i64[1] = v210;
        v145.i64[0] = v211;
        v146.i64[0] = v209;
        v145.i64[1] = v208;
        v147.i64[0] = v207;
        v146.i64[1] = v206;
        v147.i64[1] = v205;
        int8x16_t v148 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v144, v201.f32[0]), v145, *(float32x2_t *)v201.f32, 1), v146, v201, 2), v147, v201, 3);
        *(float32x2_t *)v148.i8 = vsub_f32((float32x2_t)vzip1_s32(*(int32x2_t *)v214.f32, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v214, (int8x16_t)v214, 8uLL)), (float32x2_t)vzip1_s32(*(int32x2_t *)v148.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v148, v148, 8uLL)));
        uint64_t v149 = *(void *)(v2 + 464)
             + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject;
        long long v150 = *(void **)v149;
        unint64_t v151 = *(void **)(v149 + 8);
        float v152 = sqrtf(vaddv_f32(vmul_f32(*(float32x2_t *)v148.i8, *(float32x2_t *)v148.i8)));
        uint64_t v154 = *(void **)(v149 + 16);
        uint64_t v153 = *(void **)(v149 + 24);
        uint64_t v156 = *(void **)(v149 + 32);
        uint64_t v155 = *(void **)(v149 + 40);
        uint64_t v158 = *(void **)(v149 + 48);
        uint64_t v157 = *(void **)(v149 + 56);
        long long v160 = *(void **)(v149 + 64);
        unint64_t v159 = *(void **)(v149 + 72);
        long long v161 = &qword_268810000;
        if (*(void *)v149)
        {
          v275[0] = *(void **)v149;
          v275[1] = v151;
          v275[2] = v154;
          v275[3] = v153;
          v275[4] = v156;
          v275[5] = v155;
          v275[6] = v158;
          v275[7] = v157;
          v275[8] = v160;
          v275[9] = v159;
          v276[0] = v202;
          uint64_t v277 = v203;
          uint64_t v278 = v210;
          uint64_t v279 = v211;
          uint64_t v280 = v208;
          uint64_t v281 = v209;
          uint64_t v282 = v206;
          uint64_t v283 = v207;
          uint64_t v284 = v205;
          id v162 = v150;
          char v163 = _s16MagnifierSupport14DetectedObjectV2eeoiySbAC_ACtFZ_0(v275, v276);
          uint64_t v164 = v275[0];

          uint64_t v165 = *(void *)(v2 + 464);
          if ((v163 & 1) != 0 && vabds_f32(v1, v152) <= 0.3048)
          {
            uint64_t v166 = v217;
            uint64_t v168 = v210;
            uint64_t v167 = v211;
            uint64_t v170 = v208;
            uint64_t v169 = v209;
            uint64_t v172 = v206;
            uint64_t v171 = v207;
            uint64_t v173 = v205;
            uint64_t v174 = v202;
            if (*(void *)(v165
                           + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetOccupancy) == v140)
            {

              sub_2356DF5D4(v229, v225, v47, v48, v49, v238, v236, v234, v232, v217, v215, v227);
              sub_2356DF828(v263, v213);
              goto LABEL_114;
            }
          }
          else
          {
            uint64_t v166 = v217;
            uint64_t v168 = v210;
            uint64_t v167 = v211;
            uint64_t v170 = v208;
            uint64_t v169 = v209;
            uint64_t v172 = v206;
            uint64_t v171 = v207;
            uint64_t v173 = v205;
            uint64_t v174 = v202;
          }
        }
        else
        {
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = v151;
          *(void *)(v2 + 32) = v154;
          *(void *)(v2 + 40) = v153;
          *(void *)(v2 + 48) = v156;
          *(void *)(v2 + 56) = v155;
          *(void *)(v2 + 64) = v158;
          *(void *)(v2 + 72) = v157;
          *(void *)(v2 + 80) = v160;
          *(void *)(v2 + 88) = v159;
          *(void *)(v2 + 96) = v202;
          *(void *)(v2 + 104) = 0;
          *(void *)(v2 + 112) = v203;
          *(void *)(v2 + 120) = v210;
          *(void *)(v2 + 128) = v211;
          *(void *)(v2 + 136) = v208;
          *(void *)(v2 + 144) = v209;
          *(void *)(v2 + 152) = v206;
          *(void *)(v2 + 160) = v207;
          *(void *)(v2 + 168) = v205;
          uint64_t v175 = v202;
          sub_2356DF864(v2 + 16);
          uint64_t v174 = v202;
          long long v161 = &qword_268810000;
          uint64_t v173 = v205;
          uint64_t v172 = v206;
          uint64_t v171 = v207;
          uint64_t v170 = v208;
          uint64_t v169 = v209;
          uint64_t v168 = v210;
          uint64_t v167 = v211;
          uint64_t v165 = *(void *)(v2 + 464);
          uint64_t v166 = v217;
        }
        uint64_t v218 = v166;
        *(float *)(v200 + v199) = v152;
        uint64_t v176 = *(void **)v149;
        *(void *)uint64_t v149 = v174;
        *(void *)(v149 + 8) = 0;
        *(void *)(v149 + 16) = v203;
        *(void *)(v149 + 24) = v168;
        *(void *)(v149 + 32) = v167;
        *(void *)(v149 + 40) = v170;
        *(void *)(v149 + 48) = v169;
        *(void *)(v149 + 56) = v172;
        *(void *)(v149 + 64) = v171;
        *(void *)(v149 + 72) = v173;

        sub_2356DF828(v263, v213);
        *(void *)(v165 + v161[86]) = v140;
        char v50 = v227;
        uint64_t v196 = v166;
        uint64_t v45 = v229;
        uint64_t v46 = v225;
        sub_2356DF644(v229, v225, v47, v48, v49, v238, v236, v234, v232, v196, v215, v227);
LABEL_118:
        uint64_t v220 = v49;
        unsigned __int8 v228 = v50;
        uint64_t v226 = v46;
        uint64_t v230 = v45;
        uint64_t v177 = *(void *)(v2 + 520);
        uint64_t v178 = *(void **)(v2 + 464);
        uint64_t v179 = sub_235949EA8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v179 - 8) + 56))(v177, 1, 1, v179);
        id v270 = v178;
        uint64_t v222 = v48;
        uint64_t v224 = v47;
        sub_2356DF644(v45, v46, v47, v48, v49, v238, v236, v234, v232, v218, v215, v50);
        uint64_t v180 = sub_235949E68();
        uint64_t v181 = swift_allocObject();
        uint64_t v182 = MEMORY[0x263F8F500];
        *(void *)(v181 + 16) = v180;
        *(void *)(v181 + 24) = v182;
        *(void *)(v181 + 32) = v270;
        *(void *)(v181 + 48) = v45;
        *(void *)(v181 + 56) = v46;
        *(void *)(v181 + 64) = v47;
        *(void *)(v181 + 72) = v48;
        *(void *)(v181 + 80) = v49;
        *(void *)(v181 + 88) = v238;
        *(void *)(v181 + 96) = v236;
        *(void *)(v181 + 104) = v234;
        *(void *)(v181 + 112) = v232;
        *(void *)(v181 + 120) = v218;
        *(void *)(v181 + 128) = v215;
        *(unsigned char *)(v181 + 136) = v50;
        sub_2357A1990(v177, (uint64_t)&unk_268810698, v181);
        sub_2356DF5D4(v45, v46, v47, v48, v49, v238, v236, v234, v232, v218, v215, v50);
        swift_release();
        unint64_t v2 = v240;
        goto LABEL_119;
      }
LABEL_128:
      swift_once();
      goto LABEL_71;
    }
    swift_release();
    unint64_t v2 = v240;
  }
  uint64_t v38 = *(void *)(v2 + 464);
  uint64_t v39 = v38 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject;
  if (*(void *)(v38 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject))
  {
    *(_DWORD *)(v38 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance) = 0;
    id v40 = *(void **)v39;
    *(_OWORD *)(v39 + 32) = 0u;
    *(_OWORD *)(v39 + 48) = 0u;
    *(_OWORD *)(v39 + 64) = 0u;
    *(_OWORD *)uint64_t v39 = 0u;
    *(_OWORD *)(v39 + 16) = 0u;

    *(void *)(v38 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetOccupancy) = 0;
    if (qword_26880E440 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_235948278();
    __swift_project_value_buffer(v41, (uint64_t)qword_26880F848);
    uint64_t v42 = sub_235948258();
    os_log_type_t v43 = sub_23594A148();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_235640000, v42, v43, "Create empty contact event", v44, 2u);
      MEMORY[0x237DE9F30](v44, -1, -1);
    }

    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v236 = 0;
    uint64_t v238 = 0;
    uint64_t v232 = 0;
    uint64_t v234 = 0;
    uint64_t v218 = 0;
    uint64_t v215 = 0;
    char v50 = 3;
    goto LABEL_118;
  }
LABEL_114:
  uint64_t v230 = 0;
  uint64_t v224 = 0;
  uint64_t v226 = 0;
  uint64_t v220 = 0;
  uint64_t v222 = 0;
  uint64_t v236 = 0;
  uint64_t v238 = 0;
  uint64_t v232 = 0;
  uint64_t v234 = 0;
  uint64_t v218 = 0;
  uint64_t v215 = 0;
  unsigned __int8 v228 = -1;
LABEL_119:
  BOOL v183 = (void *)v2;
  uint64_t v184 = (const void *)(v2 + 240);
  uint64_t v185 = *(void *)(v2 + 512);
  uint64_t v266 = *(void *)(v2 + 504);
  uint64_t v186 = *(void *)(v2 + 488);
  uint64_t v271 = *(void *)(v2 + 496);
  uint64_t v187 = *(void *)(v2 + 472);
  uint64_t v188 = *(void *)(v2 + 480);
  sub_2356594B0(0, (unint64_t *)&qword_26AF152A0);
  uint64_t v189 = (void *)sub_23594A288();
  uint64_t v190 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v191 = swift_allocObject();
  *(void *)(v191 + 16) = v190;
  *(float32x4_t *)(v191 + 32) = v214;
  v183[34] = sub_2356DF558;
  v183[35] = v191;
  v183[30] = MEMORY[0x263EF8330];
  v183[31] = 1107296256;
  v183[32] = sub_2357A194C;
  v183[33] = &block_descriptor_84;
  uint64_t v192 = _Block_copy(v184);
  sub_2359470F8();
  sub_235949708();
  v183[57] = MEMORY[0x263F8EE78];
  sub_2356DF564((unint64_t *)&qword_26AF15000, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF151A0);
  sub_23565C0F8();
  sub_23594A6C8();
  MEMORY[0x237DE8250](0, v185, v186, v192);
  _Block_release(v192);

  sub_2356DF5AC(v230, v226, v224, v222, v220, v238, v236, v234, v232, v218, v215, v228);
  (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v186, v187);
  (*(void (**)(uint64_t, uint64_t))(v266 + 8))(v185, v271);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v193 = (void (*)(void))v183[1];
  v193();
}

void sub_2356C4C18(uint64_t a1)
{
  type metadata accessor for OU3DObjectType(0);
  sub_2356DF564(&qword_26880EDB0, type metadata accessor for OU3DObjectType);
  int64_t v2 = 0;
  v13[1] = (id)sub_23594A008();
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_2356CF4A8(v13, *(id *)(*(void *)(a1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_2356C4DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  sub_235949E78();
  v5[16] = sub_235949E68();
  uint64_t v7 = sub_235949E28();
  v5[17] = v7;
  v5[18] = v6;
  return MEMORY[0x270FA2498](sub_2356C4E70, v7, v6);
}

uint64_t sub_2356C4E70()
{
  if (qword_26880E440 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_235948278();
  __swift_project_value_buffer(v1, (uint64_t)qword_26880F848);
  int64_t v2 = sub_235948258();
  os_log_type_t v3 = sub_23594A148();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_235640000, v2, v3, "Dispatch contact event", v4, 2u);
    MEMORY[0x237DE9F30](v4, -1, -1);
  }
  uint64_t v5 = *(_OWORD **)(v0 + 120);

  long long v6 = v5[1];
  *(_OWORD *)(v0 + 16) = *v5;
  *(_OWORD *)(v0 + 32) = v6;
  long long v8 = v5[3];
  long long v7 = v5[4];
  long long v9 = v5[2];
  *(_OWORD *)(v0 + 89) = *(_OWORD *)((char *)v5 + 73);
  *(_OWORD *)(v0 + 64) = v8;
  *(_OWORD *)(v0 + 80) = v7;
  *(_OWORD *)(v0 + 48) = v9;
  int64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v10;
  *int64_t v10 = v0;
  v10[1] = sub_2356C4FF4;
  return MAGOUEventHandler.send(_:)(v0 + 16);
}

uint64_t sub_2356C4FF4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_2356C516C;
  }
  else {
    uint64_t v5 = sub_2356C5108;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_2356C5108()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2356C516C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2356C51D0(uint64_t a1, float32x4_t a2)
{
  uint64_t v2 = a1 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x237DEA060](v2);
  if (!v3) {
    goto LABEL_5;
  }
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject);
  float32x4_t v21 = *(float32x4_t *)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject + 16);
  float32x4_t v20 = *(float32x4_t *)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject + 32);
  float32x4_t v19 = *(float32x4_t *)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject + 48);
  float32x4_t v18 = *(float32x4_t *)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject + 64);
  id v6 = v5;

  if (v5)
  {
    swift_beginAccess();
    uint64_t v7 = MEMORY[0x237DEA060](v2);
    if (v7)
    {
      long long v8 = (void *)v7;
      id v9 = objc_retain(*(id *)(v7
                             + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pulseFeedbackProcessor));

      id v6 = v6;
      objc_msgSend(v6, sel_transform);
      float32x4_t v17 = v10;

      float32x4_t v11 = vsubq_f32(a2, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v21, v17.f32[0]), v20, *(float32x2_t *)v17.f32, 1), v19, v17, 2), v18, v17, 3));
      float32x4_t v12 = vmulq_f32(v11, v11);
      sub_23585CF24(sqrtf(vaddq_f32(v12, (float32x4_t)vdupq_laneq_s32((int32x4_t)v12, 2)).f32[0]));
    }
  }
  else
  {
LABEL_5:
    swift_beginAccess();
    uint64_t v13 = MEMORY[0x237DEA060](v2);
    if (!v13) {
      return;
    }
    unint64_t v14 = (void *)v13;
    uint64_t v15 = (char *)objc_retain(*(id *)(v13
                                    + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pulseFeedbackProcessor));

    uint64_t v16 = (id *)&v15[OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_objectUnderstandingToneGenerator];
    swift_beginAccess();
    id v6 = *v16;

    objc_msgSend(v6, sel_stopPulse);
  }
}

void sub_2356C53AC(unint64_t a1)
{
  uint64_t v3 = (id *)(*(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_arService)
            + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  if (*v3)
  {
    id v4 = objc_msgSend(*v3, sel_currentFrame);
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession);
      if (v6)
      {
        id v7 = v6;
        swift_bridgeObjectRetain();
        if (a1 >> 62)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880FCE0);
          sub_23594A978();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_23594AB98();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26880FCE0);
        long long v8 = (void *)sub_235949D58();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_updateWithKeyframes_ouframe_, v8, v5);
      }
    }
  }
}

id sub_2356C54F0(uint64_t a1, unint64_t a2)
{
  return sub_2356DD3A4(a2);
}

uint64_t sub_2356C5584(void (*a1)(char *, uint64_t, uint64_t))
{
  uint64_t v197 = 0;
  uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810588);
  MEMORY[0x270FA5388](v208, v2, v3, v4, v5);
  float v212 = (char *)v196 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v8, v9, v10, v11);
  uint64_t v207 = (char *)v196 - v12;
  MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
  uint64_t v211 = (uint64_t)v196 - v18;
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  uint64_t v206 = (char *)v196 - v24;
  MEMORY[0x270FA5388](v25, v26, v27, v28, v29);
  uint64_t v205 = (uint64_t)v196 - v30;
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810590);
  uint64_t v203 = *(void *)(v204 - 8);
  MEMORY[0x270FA5388](v204, v31, v32, v33, v34);
  uint64_t v215 = (char *)v196 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v36 - 8, v37, v38, v39, v40);
  uint64_t v220 = (char *)v196 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42, v43, v44, v45, v46);
  uint64_t v218 = (char *)v196 - v47;
  MEMORY[0x270FA5388](v48, v49, v50, v51, v52);
  uint64_t v54 = (char *)v196 - v53;
  uint64_t v55 = sub_235947978();
  uint64_t v210 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55, v56, v57, v58, v59);
  unsigned __int8 v228 = (char *)v196 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v61, v62, v63, v64, v65);
  uint64_t v230 = (char *)v196 - v66;
  MEMORY[0x270FA5388](v67, v68, v69, v70, v71);
  int64_t v231 = (char *)v196 - v72;
  *(void *)&double v78 = MEMORY[0x270FA5388](v73, v74, v75, v76, v77).n128_u64[0];
  unint64_t v227 = (unint64_t)v196 - v79;
  uint64_t v80 = *((void *)a1 + 2);
  int64_t v216 = a1;
  if (v80)
  {
    swift_bridgeObjectRetain();
    uint64_t v81 = (_OWORD *)((char *)a1 + 48);
    uint64_t v82 = v80;
    uint64_t v83 = v198;
    uint64_t v84 = v197;
    do
    {
      long long v86 = v81[2];
      long long v85 = v81[3];
      long long v88 = *v81;
      long long v87 = v81[1];
      id v233 = (id)*((void *)v81 - 2);
      long long v234 = v88;
      long long v235 = v87;
      long long v236 = v86;
      long long v237 = v85;
      id v89 = v233;
      sub_2356C6AE8((uint64_t)&v233, v83);

      v81 += 5;
      --v82;
    }
    while (v82);
    uint64_t v197 = v84;
    a1 = v216;
    swift_bridgeObjectRelease();
  }
  id v90 = objc_msgSend(*(id *)(v198 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode), sel_childNodes, v78);
  sub_2356594B0(0, (unint64_t *)&qword_268814020);
  unint64_t v91 = sub_235949D78();

  if (v91 >> 62) {
    goto LABEL_93;
  }
  uint64_t v92 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v92) {
    goto LABEL_7;
  }
  while (1)
  {
LABEL_27:
    swift_bridgeObjectRelease_n();
    uint64_t v116 = (void *)MEMORY[0x263F8EE78];
    if (v80)
    {
      uint64_t v117 = (void *)MEMORY[0x263F8EE78];
      id v233 = (id)MEMORY[0x263F8EE78];
      sub_23594A898();
      uint64_t v118 = (void **)((char *)a1 + 32);
      do
      {
        uint64_t v119 = *v118;
        v118 += 10;
        id v120 = v119;
        sub_23594A868();
        sub_23594A8A8();
        sub_23594A8B8();
        sub_23594A878();
        --v80;
      }
      while (v80);
      id v121 = v233;
      uint64_t v116 = v117;
    }
    else
    {
      id v121 = (id)MEMORY[0x263F8EE78];
    }
    float32x4_t v122 = self;
    uint64_t v123 = sub_2356594B0(0, &qword_268810598);
    id v200 = v121;
    v196[1] = v123;
    uint64_t v124 = (void *)sub_235949D58();
    id v199 = v122;
    id v125 = objc_msgSend(v122, sel_storageGroupsForObjects_, v124);

    v196[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_2688105A0);
    uint64_t v126 = sub_235949D78();

    int64_t v127 = *(void *)(v126 + 16);
    uint64_t v128 = v218;
    if (v127)
    {
      id v233 = v116;
      sub_2356765E4(0, v127, 0);
      v196[0] = v126;
      uint64_t v209 = (char *)(v126 + 32);
      id v229 = (void (**)(char *, uint64_t))(v210 + 16);
      uint64_t v129 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v210 + 56);
      uint64_t v219 = (unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48);
      uint64_t v217 = v210 + 32;
      uint64_t v130 = (void (**)(char *, uint64_t))(v210 + 8);
      uint64_t v224 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
      uint64_t v131 = 0;
      uint64_t v221 = v129;
      unint64_t v202 = (unint64_t)v129 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v201 = v127;
      unint64_t v132 = v231;
      do
      {
        uint64_t v214 = v131;
        unint64_t v133 = *(void *)&v209[8 * v131];
        swift_bridgeObjectRetain();
        uint64_t v134 = sub_23594A008();
        uint64_t v223 = *(char **)(v133 + 16);
        unint64_t v213 = v133;
        if (v223)
        {
          uint64_t v135 = 0;
          uint64_t v222 = (char *)(v133
                        + ((*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80)));
          unint64_t v227 = *(void *)(v210 + 72);
          int64_t v136 = *(void (**)(char *, char *, uint64_t))(v210 + 16);
          v136(v128, v222, v55);
          while (1)
          {
            uint64_t v140 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))v221;
            (*(void (**)(char *, void, uint64_t, uint64_t))v221)(v128, 0, 1, v55);
            if ((*v219)(v128, 1, v55) == 1)
            {
              int64_t v127 = v201;
              goto LABEL_49;
            }
            uint64_t v225 = v135;
            uint64_t v226 = v140;
            (*(void (**)(char *, char *, uint64_t))v217)(v230, v128, v55);
            swift_bridgeObjectRetain();
            uint64_t v141 = sub_235949998();
            uint64_t v142 = -1 << *(unsigned char *)(v134 + 32);
            unint64_t v143 = v141 & ~v142;
            if ((*(void *)(v134 + 56 + ((v143 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v143))
            {
              uint64_t v144 = ~v142;
              while (1)
              {
                v136(v132, (char *)(*(void *)(v134 + 48) + v143 * v227), v55);
                sub_2356DF564((unint64_t *)&unk_2688105B0, MEMORY[0x263F07508]);
                char v145 = sub_235949A18();
                float32x4_t v146 = *v130;
                (*v130)(v132, v55);
                if (v145) {
                  break;
                }
                unint64_t v143 = (v143 + 1) & v144;
                if (((*(void *)(v134 + 56 + ((v143 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v143) & 1) == 0) {
                  goto LABEL_36;
                }
              }
              swift_bridgeObjectRelease();
              v146(v230, v55);
            }
            else
            {
LABEL_36:
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v139 = v230;
              uint64_t v138 = (uint64_t)v231;
              v136(v231, v230, v55);
              uint64_t v232 = v134;
              sub_2356D4A14(v138, v143, isUniquelyReferenced_nonNull_native);
              uint64_t v134 = v232;
              swift_bridgeObjectRelease();
              (*v130)(v139, v55);
            }
            uint64_t v135 = v225 + 1;
            uint64_t v128 = v218;
            if (v225 + 1 == v223) {
              break;
            }
            v136(v218, &v222[v227 * (void)v135], v55);
          }
          int64_t v127 = v201;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v226)(v218, 1, 1, v55);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v221)(v128, 1, 1, v55);
        }
LABEL_49:
        swift_bridgeObjectRelease();
        float32x4_t v147 = v233;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2356765E4(0, v147[2] + 1, 1);
          float32x4_t v147 = v233;
        }
        uint64_t v148 = v214;
        unint64_t v150 = v147[2];
        unint64_t v149 = v147[3];
        if (v150 >= v149 >> 1)
        {
          sub_2356765E4(v149 > 1, v150 + 1, 1);
          uint64_t v148 = v214;
          float32x4_t v147 = v233;
        }
        uint64_t v131 = v148 + 1;
        v147[2] = v150 + 1;
        v147[v150 + 4] = v134;
      }
      while (v131 != v127);
      swift_bridgeObjectRelease();
      uint64_t v116 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      swift_bridgeObjectRelease();
      float32x4_t v147 = (void *)MEMORY[0x263F8EE78];
    }
    *(void *)(v198 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedStorageGroups) = v147;
    swift_bridgeObjectRelease();
    unint64_t v151 = (void *)sub_235949D58();
    swift_bridgeObjectRelease();
    id v152 = objc_msgSend(v199, sel_tableChairGroupsForObjects_, v151);

    uint64_t v226 = (void (**)(char *, uint64_t, uint64_t, uint64_t))sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
    uint64_t v80 = sub_235949978();

    int64_t v153 = *(void *)(v80 + 16);
    if (!v153) {
      break;
    }
    id v233 = v116;
    id v200 = (id)v153;
    sub_2356765C4(0, v153, 0);
    uint64_t v154 = sub_2356DACF8(v80);
    uint64_t v156 = v155;
    unint64_t v213 = 0;
    char v158 = v157 & 1;
    uint64_t v201 = v80 + 64;
    uint64_t v230 = (char *)(v210 + 16);
    uint64_t v225 = (char *)(v210 + 32);
    unint64_t v159 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v210 + 56);
    uint64_t v219 = (unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48);
    id v229 = (void (**)(char *, uint64_t))(v210 + 8);
    unint64_t v202 = v80;
    uint64_t v218 = (char *)(v210 + 56);
    while (1)
    {
      uint64_t v160 = v208;
      uint64_t v161 = *(int *)(v208 + 48);
      uint64_t v162 = v205;
      uint64_t v217 = v154;
      uint64_t v214 = v156;
      uint64_t v163 = sub_2356DAD80(v205, v154, v156, v158 & 1, v80);
      *(void *)(v162 + v161) = v163;
      uint64_t v164 = *(void (**)(char *, uint64_t, uint64_t))v230;
      uint64_t v165 = (uint64_t)v206;
      (*(void (**)(char *, uint64_t, uint64_t))v230)(v206, v162, v55);
      *(void *)(v165 + *(int *)(v160 + 48)) = v163;
      uint64_t v166 = v211;
      sub_23566A348(v165, v211, &qword_268810588);
      swift_bridgeObjectRetain();
      sub_23566A3AC(v162, &qword_268810588);
      uint64_t v167 = *(int *)(v160 + 48);
      uint64_t v168 = v207;
      v164(v207, v166, v55);
      uint64_t v54 = *(char **)(v166 + v167);
      *(void *)&v168[v167] = v54;
      uint64_t v224 = *(unsigned int (**)(char *, uint64_t, uint64_t))v225;
      v224(v215, (uint64_t)v168, v55);
      uint64_t v169 = *(int *)(v160 + 48);
      uint64_t v170 = v212;
      a1 = v164;
      v164(v212, v166, v55);
      *(void *)&v170[v169] = v54;
      unint64_t v91 = *((void *)v54 + 2);
      swift_bridgeObjectRetain();
      uint64_t v171 = sub_23594A008();
      uint64_t v223 = (char *)*((void *)v54 + 2);
      if (v223)
      {
        id v199 = (id)((unint64_t)v159 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
        unint64_t v91 = 0;
        unint64_t v172 = (*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80);
        uint64_t v209 = v54;
        uint64_t v222 = &v54[v172];
        uint64_t v173 = *(void *)(v210 + 72);
        uint64_t v174 = v220;
        do
        {
          a1(v174, (uint64_t)&v222[v173 * v91], v55);
          uint64_t v221 = *v159;
          v221(v174, 0, 1, v55);
          if ((*v219)(v174, 1, v55) == 1)
          {
            uint64_t v184 = v201;
            goto LABEL_72;
          }
          unint64_t v227 = v91;
          v224(v228, (uint64_t)v174, v55);
          swift_bridgeObjectRetain();
          uint64_t v177 = sub_235949998();
          uint64_t v178 = -1 << *(unsigned char *)(v171 + 32);
          unint64_t v179 = v177 & ~v178;
          uint64_t v54 = (char *)(v171 + 56);
          if ((*(void *)(v171 + 56 + ((v179 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v179))
          {
            uint64_t v180 = ~v178;
            while (1)
            {
              uint64_t v181 = v231;
              a1(v231, *(void *)(v171 + 48) + v179 * v173, v55);
              sub_2356DF564((unint64_t *)&unk_2688105B0, MEMORY[0x263F07508]);
              char v182 = sub_235949A18();
              BOOL v183 = *v229;
              (*v229)(v181, v55);
              if (v182) {
                break;
              }
              unint64_t v179 = (v179 + 1) & v180;
              if (((*(void *)&v54[(v179 >> 3) & 0xFFFFFFFFFFFFFF8] >> v179) & 1) == 0) {
                goto LABEL_60;
              }
            }
            swift_bridgeObjectRelease();
            v183(v228, v55);
          }
          else
          {
LABEL_60:
            swift_bridgeObjectRelease();
            uint64_t v54 = (char *)swift_isUniquelyReferenced_nonNull_native();
            uint64_t v175 = (uint64_t)v231;
            uint64_t v176 = v228;
            a1(v231, (uint64_t)v228, v55);
            uint64_t v232 = v171;
            sub_2356D4A14(v175, v179, (char)v54);
            uint64_t v171 = v232;
            swift_bridgeObjectRelease();
            (*v229)(v176, v55);
          }
          unint64_t v91 = v227 + 1;
          uint64_t v174 = v220;
          unint64_t v159 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v218;
        }
        while ((char *)(v227 + 1) != v223);
        uint64_t v184 = v201;
        v221(v220, 1, 1, v55);
      }
      else
      {
        uint64_t v184 = v201;
        (*v159)(v220, 1, 1, v55);
      }
LABEL_72:
      swift_bridgeObjectRelease();
      uint64_t v185 = *(int *)(v204 + 48);
      (*v229)(v212, v55);
      *(void *)&v215[v185] = v171;
      sub_23566A3AC(v211, &qword_268810588);
      uint64_t v186 = v233;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unint64_t v91 = (unint64_t)&v233;
        sub_2356765C4(0, v186[2] + 1, 1);
        uint64_t v186 = v233;
      }
      unint64_t v188 = v186[2];
      unint64_t v187 = v186[3];
      if (v188 >= v187 >> 1)
      {
        unint64_t v91 = (unint64_t)&v233;
        sub_2356765C4(v187 > 1, v188 + 1, 1);
        uint64_t v186 = v233;
      }
      v186[2] = v188 + 1;
      sub_23566A348((uint64_t)v215, (uint64_t)v186+ ((*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80))+ *(void *)(v203 + 72) * v188, &qword_268810590);
      uint64_t v80 = v202;
      if (v217 < 0 || v217 >= -(-1 << *(unsigned char *)(v202 + 32))) {
        break;
      }
      if (((*(void *)(v184 + (((unint64_t)v217 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v217) & 1) == 0) {
        goto LABEL_91;
      }
      if (*(_DWORD *)(v202 + 36) != v214) {
        goto LABEL_92;
      }
      id v189 = (id)(v213 + 1);
      uint64_t v190 = sub_23594A6E8();
      if (v189 == v200)
      {
        swift_bridgeObjectRelease();
        goto LABEL_84;
      }
      uint64_t v154 = v190;
      unint64_t v213 = (unint64_t)v189;
      char v158 = 0;
      uint64_t v156 = *(unsigned int *)(v80 + 36);
    }
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    swift_bridgeObjectRetain_n();
    uint64_t v92 = sub_23594A998();
    swift_bridgeObjectRelease();
    if (!v92) {
      continue;
    }
LABEL_7:
    uint64_t v93 = 0;
    uint64_t v221 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v91 & 0xC000000000000001);
    unint64_t v213 = v91 + 32;
    uint64_t v94 = (void (**)(char *, char *, uint64_t))(v210 + 32);
    uint64_t v225 = (char *)(v210 + 48);
    uint64_t v226 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v210 + 56);
    uint64_t v224 = (unsigned int (*)(char *, uint64_t, uint64_t))(v210 + 8);
    uint64_t v219 = (unsigned int (**)(char *, uint64_t, uint64_t))v80;
    uint64_t v217 = v91;
    uint64_t v214 = v92;
    uint64_t v223 = (char *)(v210 + 32);
    while (1)
    {
LABEL_10:
      if (v221) {
        int64_t v96 = (void (**)(char *, uint64_t))MEMORY[0x237DE87D0](v93, v91);
      }
      else {
        int64_t v96 = (void (**)(char *, uint64_t))*(id *)(v213 + 8 * (void)v93);
      }
      id v229 = v96;
      if (__OFADD__(v93++, 1))
      {
        __break(1u);
        goto LABEL_90;
      }
      if (v80) {
        break;
      }
LABEL_9:
      uint64_t v95 = v229;
      objc_msgSend(v229, sel_removeFromParentNode);

      if (v93 == (char *)v92) {
        goto LABEL_27;
      }
    }
    uint64_t v222 = v93;
    swift_bridgeObjectRetain();
    uint64_t v98 = 32;
    uint64_t v99 = v80;
    while (1)
    {
      id v100 = *(id *)((char *)a1 + v98);
      id v101 = objc_msgSend(v100, sel_identifier);
      if (!v101)
      {
        (*v226)(v54, 1, 1, v55);
LABEL_96:
        __break(1u);
        goto LABEL_97;
      }
      uint64_t v102 = v101;
      uint64_t v103 = v231;
      sub_235947958();

      uint64_t v104 = *v94;
      (*v94)(v54, v103, v55);
      (*v226)(v54, 0, 1, v55);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v225)(v54, 1, v55) == 1) {
        goto LABEL_96;
      }
      id v105 = (char *)v227;
      v104((char *)v227, v54, v55);

      uint64_t v106 = sub_235947928();
      uint64_t v108 = v107;
      (*(void (**)(char *, uint64_t))v224)(v105, v55);
      id v109 = objc_msgSend(v229, sel_name);
      if (!v109)
      {

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      uint64_t v110 = v109;
      uint64_t v111 = v54;
      uint64_t v112 = sub_235949AC8();
      uint64_t v114 = v113;

      if (v106 == v112 && v108 == v114) {
        break;
      }
      char v115 = sub_23594AB78();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v54 = v111;
      uint64_t v94 = (void (**)(char *, char *, uint64_t))v223;
      if (v115) {
        goto LABEL_26;
      }
LABEL_17:
      v98 += 80;
      --v99;
      a1 = v216;
      if (!v99)
      {
        swift_bridgeObjectRelease();
        uint64_t v80 = (uint64_t)v219;
        unint64_t v91 = v217;
        uint64_t v92 = v214;
        uint64_t v93 = v222;
        goto LABEL_9;
      }
    }

    swift_bridgeObjectRelease_n();
    uint64_t v54 = v111;
    uint64_t v94 = (void (**)(char *, char *, uint64_t))v223;
LABEL_26:

    a1 = v216;
    swift_bridgeObjectRelease();
    uint64_t v92 = v214;
    uint64_t v93 = v222;
    uint64_t v80 = (uint64_t)v219;
    unint64_t v91 = v217;
    if (v222 != (char *)v214) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v186 = (void *)MEMORY[0x263F8EE78];
LABEL_84:
  uint64_t v191 = v198;
  uint64_t v192 = v197;
  if (v186[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688105A8);
    char v193 = (void *)sub_23594A9D8();
  }
  else
  {
    char v193 = (void *)MEMORY[0x263F8EE80];
  }
  id v233 = v193;
  uint64_t v194 = swift_bridgeObjectRetain();
  sub_2356D8FDC(v194, 1, &v233);
  if (v192)
  {
LABEL_97:
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v191 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTableChairGroups) = v233;
    swift_bridgeObjectRelease();
    *(void *)(v191 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache) = v216;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2356C6AE8(uint64_t a1, uint64_t a2)
{
  v111.i64[0] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v3 - 8, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_235947978();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18, v19, v20, v21, v22);
  v106.i64[0] = (uint64_t)&v95 - v23;
  uint64_t v24 = *(void **)a1;
  float32x4_t v107 = *(float32x4_t *)(a1 + 16);
  float32x4_t v25 = *(float32x4_t *)(a1 + 48);
  float32x4_t v108 = *(float32x4_t *)(a1 + 32);
  float32x4_t v109 = v25;
  float32x4_t v110 = *(float32x4_t *)(a1 + 64);
  id v26 = v24;
  id v27 = objc_msgSend(v26, sel_type);
  if (!v27)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v28 = v27;

  uint64_t v29 = sub_235949AC8();
  uint64_t v31 = v30;
  if (v29 == sub_235949AC8() && v31 == v32) {
    goto LABEL_9;
  }
  char v34 = sub_23594AB78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34)
  {
LABEL_10:

LABEL_11:
    objc_msgSend(v26, sel_dimensions);
    long long v105 = v39;
    objc_msgSend(v26, sel_dimensions);
    objc_msgSend(v26, sel_dimensions);
    sub_23594A0C8();
    id v43 = objc_msgSend(self, sel_boxWithWidth_height_length_chamferRadius_, v40, v41, v42, 0.0);
    float32x4_t v101 = *(float32x4_t *)MEMORY[0x263EF89A8];
    float32x4_t v102 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 16);
    float32x4_t v103 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 32);
    float32x4_t v104 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 48);
    objc_msgSend(v26, sel_dimensions);
    *(float *)&long long v44 = vmuls_lane_f32(0.05, *(float32x2_t *)&v44, 1);
    long long v105 = v44;
    objc_msgSend(v26, sel_dimensions);
    int v100 = 0;
    float32x4_t v46 = vmulq_f32(v101, (float32x4_t)0);
    float32x4_t v47 = vmlaq_f32(vmlaq_f32(vaddq_f32(v102, v46), (float32x4_t)0, v103), (float32x4_t)0, v104);
    float32x4_t v48 = vmlaq_f32(vaddq_f32(v103, vmlaq_f32(v46, (float32x4_t)0, v102)), (float32x4_t)0, v104);
    float32x4_t v49 = vaddq_f32(v104, vmlaq_n_f32(vmlaq_n_f32(v46, v102, *(float *)&v105), v103, vmuls_lane_f32(0.05, v45, 2)));
    float32x4_t v50 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v101, (float32x4_t)0, v102), (float32x4_t)0, v103), (float32x4_t)0, v104);
    *(void *)&long long v105 = v50.i64[1];
    v104.i64[0] = v50.i64[0];
    v103.i64[0] = v47.i64[1];
    double v99 = *(double *)v47.i64;
    v102.i64[0] = v48.i64[1];
    double v98 = *(double *)v48.i64;
    v101.i64[0] = v49.i64[1];
    double v97 = *(double *)v49.i64;
    goto LABEL_12;
  }
  uint64_t v35 = sub_235949AC8();
  uint64_t v37 = v36;
  if (v35 == sub_235949AC8() && v37 == v38) {
    goto LABEL_9;
  }
  char v76 = sub_23594AB78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v76) {
    goto LABEL_10;
  }
  uint64_t v77 = sub_235949AC8();
  uint64_t v79 = v78;
  if (v77 == sub_235949AC8() && v79 == v80) {
    goto LABEL_9;
  }
  char v81 = sub_23594AB78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v81) {
    goto LABEL_10;
  }
  uint64_t v82 = sub_235949AC8();
  uint64_t v84 = v83;
  if (v82 == sub_235949AC8() && v84 == v85)
  {
LABEL_9:
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  char v86 = sub_23594AB78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v86) {
    goto LABEL_10;
  }
  uint64_t v87 = sub_235949AC8();
  uint64_t v89 = v88;
  if (v87 == sub_235949AC8() && v89 == v90)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v91 = sub_23594AB78();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v91) {
    goto LABEL_11;
  }
  objc_msgSend(v26, sel_dimensions);
  sub_23594A0D8();
  id v43 = objc_msgSend(self, sel_boxWithWidth_height_length_chamferRadius_, v92, v93, v94, 0.0);
  v104.i64[0] = 0;
  *(void *)&long long v105 = 0;
  double v99 = 0.0;
  v103.i64[0] = 0;
  double v98 = 0.0;
  v102.i64[0] = 0;
  double v97 = 0.0;
  v101.i64[0] = 0;
  int v100 = 1;
LABEL_12:
  v96.i64[0] = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode;
  uint64_t v51 = *(void **)(v111.i64[0]
                 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode);
  id v52 = v26;
  id v53 = v51;
  id v54 = objc_msgSend(v52, sel_identifier);
  if (!v54)
  {
LABEL_42:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_43;
  }
  uint64_t v55 = v54;
  sub_235947958();

  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v56(v9, v17, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    uint64_t v57 = v106.i64[0];
    v56((char *)v106.i64[0], v9, v10);

    sub_235947928();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v57, v10);
    uint64_t v58 = (void *)sub_235949A88();
    swift_bridgeObjectRelease();
    id v59 = objc_msgSend(v53, sel_childNodeWithName_recursively_, v58, 0);

    if (v59)
    {
      objc_msgSend(v59, sel_setGeometry_, v43);
      objc_msgSend(v59, sel_setOpacity_, 0.0);
      id v60 = objc_msgSend(v59, sel_physicsBody);
      if (v60)
      {
        uint64_t v61 = v60;
        id v62 = objc_msgSend(self, sel_shapeWithGeometry_options_, v43, 0);
        objc_msgSend(v61, sel_setPhysicsShape_, v62);
      }
      id v63 = v52;
      objc_msgSend(v63, sel_transform);
      float32x4_t v95 = v64;
      float32x4_t v96 = v65;
      float32x4_t v106 = v66;
      float32x4_t v111 = v67;

      objc_msgSend(v59, sel_setSimdTransform_, *(double *)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v95.f32[0]), v108, *(float32x2_t *)v95.f32, 1), v109, v95, 2), v110, v95, 3).i64, *(double *)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v96.f32[0]), v108, *(float32x2_t *)v96.f32, 1), v109, v96, 2), v110, v96,
                     3).i64,
        *(double *)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v106.f32[0]), v108, *(float32x2_t *)v106.f32, 1), v109, v106, 2), v110, v106, 3).i64, *(double *)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v111.f32[0]), v108, *(float32x2_t *)v111.f32, 1), v109, v111, 2), v110, v111, 3).i64);
    }
    else
    {
      sub_2356594B0(0, (unint64_t *)&qword_268814020);
      v112[0] = v52;
      float32x4_t v113 = v107;
      float32x4_t v114 = v108;
      float32x4_t v115 = v109;
      float32x4_t v116 = v110;
      id v68 = v52;
      uint64_t v69 = SCNNode.init(_:)((uint64_t)v112);
      if (!v69)
      {
LABEL_28:

        return;
      }
      id v59 = (id)v69;
      id v70 = objc_msgSend(self, sel_shapeWithGeometry_options_, v43, 0);
      id v71 = objc_msgSend(self, sel_bodyWithType_shape_, 2, v70);

      objc_msgSend(v59, sel_setPhysicsBody_, v71);
      id v72 = objc_msgSend(v59, sel_physicsBody);
      if (v72)
      {
        uint64_t v73 = v72;
        objc_msgSend(v72, sel_setCategoryBitMask_, 2);
      }
      objc_msgSend(v59, sel_setCategoryBitMask_, 2);
      v112[0] = v68;
      float32x4_t v113 = v107;
      float32x4_t v114 = v108;
      float32x4_t v115 = v109;
      float32x4_t v116 = v110;
      if (sub_2358C4F88())
      {
        id v74 = objc_msgSend(v59, sel_physicsBody);
        if (v74)
        {
          uint64_t v75 = v74;
          objc_msgSend(v74, sel_setContactTestBitMask_, 4);
        }
      }
      objc_msgSend(*(id *)(v111.i64[0] + v96.i64[0]), sel_addChildNode_, v59);
    }
    if ((v100 & 1) == 0) {
      objc_msgSend(v59, sel_setSimdPivot_, *(double *)v104.i64, v99, v98, v97);
    }

    goto LABEL_28;
  }
LABEL_43:
  __break(1u);
}

void sub_2356C75D4(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v66 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v5 - 8, v6, v7, v8, v9);
  uint64_t v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_235947978();
  MEMORY[0x270FA5388](v12, v13, v14, v15, v16);
  float32x4_t v64 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18, v19, v20, v21, v22);
  id v63 = (char *)v50 - v24;
  uint64_t v25 = *(void *)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache);
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    uint64_t v51 = a3;
    uint64_t v61 = (void (**)(char *, char *, uint64_t))(v23 + 32);
    id v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    id v59 = (void (**)(char *, uint64_t))(v23 + 8);
    id v60 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain_n();
    v50[1] = v25;
    id v27 = (uint64_t *)(v25 + 48);
    uint64_t v28 = v61;
    while (1)
    {
      uint64_t v29 = (void *)*(v27 - 2);
      uint64_t v30 = *v27;
      uint64_t v31 = v27[1];
      uint64_t v32 = v27[3];
      uint64_t v56 = v27[2];
      uint64_t v57 = v30;
      uint64_t v33 = v27[4];
      uint64_t v34 = v27[5];
      uint64_t v58 = v27[7];
      uint64_t v54 = v27[6];
      uint64_t v55 = v33;
      id v35 = v29;
      id v36 = objc_msgSend(v35, sel_identifier);
      if (!v36) {
        break;
      }
      uint64_t v37 = v36;
      uint64_t v52 = v34;
      uint64_t v53 = v32;
      uint64_t v38 = v64;
      sub_235947958();

      long long v39 = *v28;
      (*v28)(v11, v38, v12);
      (*v62)(v11, 0, 1, v12);
      if ((*v60)(v11, 1, v12) == 1) {
        goto LABEL_19;
      }
      float v40 = v63;
      float v41 = v11;
      v39(v63, v11, v12);

      uint64_t v42 = sub_235947928();
      uint64_t v44 = v43;
      (*v59)(v40, v12);
      if (v66)
      {
        if (v42 == v65 && v44 == v66)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
LABEL_16:
          float32x4_t v46 = v51;
          *uint64_t v51 = v35;
          v46[1] = 0;
          v46[2] = v57;
          v46[3] = v31;
          uint64_t v47 = v53;
          v46[4] = v56;
          v46[5] = v47;
          uint64_t v48 = v52;
          v46[6] = v55;
          v46[7] = v48;
          uint64_t v49 = v58;
          v46[8] = v54;
          v46[9] = v49;
          return;
        }
        char v45 = sub_23594AB78();
        swift_bridgeObjectRelease();
        if (v45)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_16;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      v27 += 10;
      --v26;
      uint64_t v11 = v41;
      if (!v26)
      {
        swift_bridgeObjectRelease_n();
        a3 = v51;
        goto LABEL_13;
      }
    }
    (*v62)(v11, 1, 1, v12);
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_13:
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
}

void sub_2356C7974(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SpatialPersonDetection();
  uint64_t v196 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v175 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v11, v12, v13, v14);
  uint64_t v194 = (char *)&v175 - v15;
  MEMORY[0x270FA5388](v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v175 - v21;
  uint64_t v23 = sub_235947908();
  MEMORY[0x270FA5388](v23, v24, v25, v26, v27);
  uint64_t v29 = (SEL *)((char *)&v175 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v30, v31, v32, v33, v34);
  uint64_t v37 = (SEL *)((char *)&v175 - v36);
  uint64_t v192 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene;
  uint64_t v38 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene);
  if (v38)
  {
    id v189 = v9;
    uint64_t v186 = v3;
    uint64_t v39 = v35;
    id v199 = v38;
    sub_2359478D8();
    sub_235947878();
    float v40 = *(void (**)(SEL *, uint64_t))(v39 + 8);
    uint64_t v178 = v39 + 8;
    uint64_t v176 = v40;
    v40(v29, v23);
    uint64_t v41 = swift_beginAccess();
    MEMORY[0x270FA5388](v41, v42, v43, v44, v45);
    uint64_t v198 = v46;
    *(&v175 - 2) = (uint64_t)v46;
    *(&v175 - 1) = (uint64_t)v37;
    uint64_t v177 = v37;
    uint64_t v47 = swift_bridgeObjectRetain();
    sub_2356DB06C(v47, (void (*)(char *, uint64_t))sub_2356DD694);
    swift_bridgeObjectRelease();
    int64_t v48 = *(void *)(a1 + 16);
    uint64_t v49 = MEMORY[0x263F8EE78];
    uint64_t v185 = a1;
    unint64_t v195 = v48;
    uint64_t v179 = v23;
    if (v48)
    {
      aBlocuint64_t k = MEMORY[0x263F8EE78];
      sub_2356763C4(0, v48, 0);
      uint64_t v50 = a1 + ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80));
      uint64_t v51 = *(void *)(v196 + 72);
      uint64_t v49 = aBlock;
      do
      {
        sub_2356DF258(v50, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for SpatialPersonDetection);
        uint64_t v52 = sub_235947928();
        uint64_t v54 = v53;
        sub_2356DF1F8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for SpatialPersonDetection);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2356763C4(0, *(void *)(v49 + 16) + 1, 1);
          uint64_t v49 = aBlock;
        }
        unint64_t v56 = *(void *)(v49 + 16);
        unint64_t v55 = *(void *)(v49 + 24);
        uint64_t v37 = (SEL *)(v56 + 1);
        if (v56 >= v55 >> 1)
        {
          sub_2356763C4(v55 > 1, v56 + 1, 1);
          uint64_t v49 = aBlock;
        }
        *(void *)(v49 + 16) = v37;
        uint64_t v57 = v49 + 16 * v56;
        *(void *)(v57 + 32) = v52;
        *(void *)(v57 + 40) = v54;
        v50 += v51;
        --v48;
        uint64_t v58 = v198;
      }
      while (v48);
    }
    else
    {
      uint64_t v58 = v198;
    }
    uint64_t v59 = sub_2356DD1E0(v49);
    swift_bridgeObjectRelease();
    unint64_t v60 = (unint64_t)objc_msgSend(v199, sel_rootNode);
    uint64_t v204 = sub_2356C9088;
    uint64_t v205 = 0;
    aBlocuint64_t k = MEMORY[0x263EF8330];
    uint64_t v201 = 1107296256;
    unint64_t v202 = sub_2356C90DC;
    uint64_t v203 = &block_descriptor_11;
    uint64_t v61 = _Block_copy(&aBlock);
    swift_release();
    id v62 = objc_msgSend((id)v60, sel_childNodesPassingTest_, v61);

    _Block_release(v61);
    if (swift_isEscapingClosureAtFileLocation()) {
      goto LABEL_129;
    }
    uint64_t v37 = (SEL *)sub_2356594B0(0, (unint64_t *)&qword_268814020);
    unint64_t v60 = sub_235949D78();

    uint64_t v198 = (void *)v59;
    if (v60 >> 62)
    {
LABEL_130:
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_23594A998();
    }
    else
    {
      uint64_t v63 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v64 = v195;
    uint64_t v180 = v37;
    if (v63)
    {
      if (v63 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v65 = 0;
      uint64_t v66 = (void *)MEMORY[0x263F8EE78];
      do
      {
        if ((v60 & 0xC000000000000001) != 0) {
          id v67 = (id)MEMORY[0x237DE87D0](v65, v60);
        }
        else {
          id v67 = *(id *)(v60 + 8 * v65 + 32);
        }
        id v68 = v67;
        id v69 = objc_msgSend(v67, sel_name);
        if (v69)
        {
          id v70 = v69;
          uint64_t v71 = sub_235949AC8();
          uint64_t v73 = v72;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v66 = sub_2356CD498(0, v66[2] + 1, 1, v66);
          }
          unint64_t v75 = v66[2];
          unint64_t v74 = v66[3];
          if (v75 >= v74 >> 1) {
            uint64_t v66 = sub_2356CD498((void *)(v74 > 1), v75 + 1, 1, v66);
          }
          v66[2] = v75 + 1;
          char v76 = &v66[2 * v75];
          v76[4] = v71;
          v76[5] = v73;
          unint64_t v64 = v195;
        }
        else
        {
        }
        ++v65;
      }
      while (v63 != v65);
    }
    else
    {
      uint64_t v66 = (void *)MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease_n();
    uint64_t v77 = sub_2356DD1E0((uint64_t)v66);
    swift_bridgeObjectRelease();
    uint64_t v78 = (uint64_t)v198;
    swift_bridgeObjectRetain();
    uint64_t v191 = sub_2356D9E34(v77, v78, v79, v80, v81);
    if (*(void *)(v77 + 16) <= *(void *)(v78 + 16) >> 3)
    {
      aBlocuint64_t k = v78;
      swift_bridgeObjectRetain();
      sub_2356D953C(v77);
      uint64_t v188 = aBlock;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v188 = sub_2356D96E4(v77, v78);
    }
    uint64_t v82 = v185;
    uint64_t v83 = v186;
    uint64_t v84 = (uint64_t)v189;
    uint64_t v85 = (uint64_t)v194;
    if (*(void *)(v78 + 16) <= *(void *)(v77 + 16) >> 3)
    {
      aBlocuint64_t k = v77;
      swift_bridgeObjectRetain();
      sub_2356D953C(v78);
      swift_bridgeObjectRelease();
      unint64_t v60 = aBlock;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v60 = sub_2356D96E4(v78, v77);
      swift_bridgeObjectRelease();
    }
    unint64_t v208 = v60;
    id v181 = self;
    objc_msgSend(v181, sel_begin);
    uint64_t v86 = MEMORY[0x263F8EE58];
    if (v64)
    {
      *(void *)&long long v197 = v82
                       + ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80));
      uint64_t v196 = *(void *)(v196 + 72);
      uint64_t v184 = &v207;
      uint64_t v198 = (void *)v77;
      unint64_t v193 = v77 + 56;
      swift_bridgeObjectRetain();
      uint64_t v87 = 0;
      __asm
      {
        FMOV            V14.2S, #0.75
        FMOV            V15.2S, #0.25
      }
      *(void *)&long long v93 = 136315138;
      long long v183 = v93;
      uint64_t v182 = v86 + 8;
      while (1)
      {
        sub_2356DF258(v197 + v196 * v87, v85, (uint64_t (*)(void))type metadata accessor for SpatialPersonDetection);
        float32x4_t v95 = *(float32x4_t *)(v85 + *(int *)(v83 + 20));
        if (vmulq_laneq_f32(vmulq_lane_f32(v95, *(float32x2_t *)v95.f32, 1), v95, 2).f32[0] >= 0.02)
        {
          float32x4_t v190 = *(float32x4_t *)(v85 + *(int *)(v83 + 20));
          id v109 = sub_2356801A8(0.0);
          uint64_t v110 = sub_235947928();
          char v112 = sub_2356C0B94(v110, v111, v191);
          swift_bridgeObjectRelease();
          if ((v112 & 1) != 0
            && (id v113 = objc_msgSend(v199, sel_rootNode),
                sub_235947928(),
                float32x4_t v114 = (void *)sub_235949A88(),
                swift_bridgeObjectRelease(),
                id v115 = objc_msgSend(v113, sel_childNodeWithName_recursively_, v114, 0),
                v113,
                v114,
                v115))
          {
            objc_msgSend(v115, sel_simdWorldPosition);
            long long v187 = v116;
            objc_msgSend(v109, sel_simdWorldPosition);
            objc_msgSend(v115, sel_setSimdWorldPosition_, COERCE_DOUBLE(vadd_f32(vmul_f32(*(float32x2_t *)&v187, _D14), vmul_f32(v117, _D15))));
            id v118 = objc_msgSend(v115, sel_geometry);
            if (v118)
            {
              uint64_t v119 = v118;
              self;
              id v120 = (void *)swift_dynamicCastObjCClass();
              if (v120)
              {
                id v121 = v120;
                objc_msgSend(v120, sel_width);
                objc_msgSend(v121, sel_height);
                objc_msgSend(v121, sel_length);
                sub_23594A0B8();
                sub_23594A0C8();
                sub_23594A0D8();
                sub_23594A0C8();
                sub_23594A0C8();
                float v123 = v122;
                float v125 = v124;
                objc_msgSend(v121, sel_setWidth_, v126);
                objc_msgSend(v121, sel_setHeight_, v123);
                objc_msgSend(v121, sel_setLength_, v125);
              }

              uint64_t v83 = v186;
              uint64_t v84 = (uint64_t)v189;
            }
            objc_msgSend(v115, sel_simdOrientation);
            float32x4_t v190 = v127;
            objc_msgSend(v109, sel_simdOrientation);
            simd_slerp(v190, v128, v129);
            objc_msgSend(v115, sel_setSimdOrientation_);
          }
          else
          {
            uint64_t v130 = sub_235947928();
            char v132 = sub_2356C0B94(v130, v131, v188);
            swift_bridgeObjectRelease();
            if ((v132 & 1) == 0)
            {
              if (qword_26880E440 != -1) {
                swift_once();
              }
              uint64_t v134 = sub_235948278();
              __swift_project_value_buffer(v134, (uint64_t)qword_26880F848);
              sub_2356DF258(v85, v84, (uint64_t (*)(void))type metadata accessor for SpatialPersonDetection);
              uint64_t v135 = sub_235948258();
              os_log_type_t v136 = sub_23594A158();
              if (os_log_type_enabled(v135, v136))
              {
                uint64_t v137 = (uint8_t *)swift_slowAlloc();
                uint64_t v138 = swift_slowAlloc();
                aBlocuint64_t k = v138;
                *(_DWORD *)uint64_t v137 = v183;
                uint64_t v139 = sub_235947928();
                uint64_t v206 = sub_235687708(v139, v140, &aBlock);
                uint64_t v85 = (uint64_t)v194;
                unint64_t v64 = v195;
                sub_23594A608();
                swift_bridgeObjectRelease();
                sub_2356DF1F8((uint64_t)v189, (uint64_t (*)(void))type metadata accessor for SpatialPersonDetection);
                _os_log_impl(&dword_235640000, v135, v136, "Person %s should have been added or updated in objectUnderstanding scene, but was not.", v137, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x237DE9F30](v138, -1, -1);
                uint64_t v141 = v137;
                uint64_t v84 = (uint64_t)v189;
                uint64_t v83 = v186;
                MEMORY[0x237DE9F30](v141, -1, -1);
              }
              else
              {

                sub_2356DF1F8(v84, (uint64_t (*)(void))type metadata accessor for SpatialPersonDetection);
              }
              uint64_t v94 = v85;
              goto LABEL_39;
            }
            id v133 = objc_msgSend(v199, sel_rootNode);
            objc_msgSend(v133, sel_addChildNode_, v109);
          }
        }
        else
        {
          uint64_t v96 = sub_235947928();
          uint64_t v98 = v97;
          if (v198[2])
          {
            uint64_t v99 = v96;
            int v100 = v198;
            sub_23594ACD8();
            sub_235949B88();
            uint64_t v101 = sub_23594AD28();
            uint64_t v102 = -1 << *((unsigned char *)v100 + 32);
            unint64_t v103 = v101 & ~v102;
            if ((*(void *)(v193 + ((v103 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v103))
            {
              uint64_t v104 = v198[6];
              long long v105 = (void *)(v104 + 16 * v103);
              _ZF = *v105 == v99 && v105[1] == v98;
              if (_ZF || (sub_23594AB78() & 1) != 0)
              {
LABEL_48:
                swift_bridgeObjectRelease();
                uint64_t v85 = (uint64_t)v194;
                uint64_t v107 = sub_235947928();
                sub_2356D0E10(&aBlock, v107, v108);
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
              uint64_t v142 = ~v102;
              while (1)
              {
                unint64_t v103 = (v103 + 1) & v142;
                if (((*(void *)(v193 + ((v103 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v103) & 1) == 0) {
                  break;
                }
                unint64_t v143 = (void *)(v104 + 16 * v103);
                BOOL v144 = *v143 == v99 && v143[1] == v98;
                if (v144 || (sub_23594AB78() & 1) != 0) {
                  goto LABEL_48;
                }
              }
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v85 = (uint64_t)v194;
        }
LABEL_38:
        uint64_t v94 = v85;
LABEL_39:
        sub_2356DF1F8(v94, (uint64_t (*)(void))type metadata accessor for SpatialPersonDetection);
        if (++v87 == v64)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v60 = v208;
          goto LABEL_74;
        }
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
LABEL_74:
    swift_bridgeObjectRelease();
    int64_t v145 = 0;
    uint64_t v37 = (SEL *)(v60 + 56);
    uint64_t v146 = 1 << *(unsigned char *)(v60 + 32);
    uint64_t v147 = -1;
    if (v146 < 64) {
      uint64_t v147 = ~(-1 << v146);
    }
    uint64_t v148 = v147 & *(void *)(v60 + 56);
    int64_t v149 = (unint64_t)(v146 + 63) >> 6;
    while (1)
    {
      if (v148)
      {
        v148 &= v148 - 1;
        goto LABEL_78;
      }
      int64_t v153 = v145 + 1;
      if (__OFADD__(v145, 1))
      {
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
        goto LABEL_127;
      }
      if (v153 >= v149) {
        goto LABEL_94;
      }
      SEL v154 = v37[v153];
      ++v145;
      if (!v154)
      {
        int64_t v145 = v153 + 1;
        if (v153 + 1 >= v149) {
          goto LABEL_94;
        }
        SEL v154 = v37[v145];
        if (!v154)
        {
          int64_t v145 = v153 + 2;
          if (v153 + 2 >= v149) {
            goto LABEL_94;
          }
          SEL v154 = v37[v145];
          if (!v154) {
            break;
          }
        }
      }
LABEL_93:
      uint64_t v148 = (unint64_t)(v154 - 1) & (unint64_t)v154;
LABEL_78:
      swift_bridgeObjectRetain();
      id v150 = objc_msgSend(v199, sel_rootNode);
      unint64_t v151 = (void *)sub_235949A88();
      swift_bridgeObjectRelease();
      id v152 = objc_msgSend(v150, sel_childNodeWithName_recursively_, v151, 0);

      objc_msgSend(v152, sel_removeFromParentNode);
    }
    int64_t v155 = v153 + 3;
    if (v155 < v149)
    {
      SEL v154 = v37[v155];
      if (!v154)
      {
        while (1)
        {
          int64_t v145 = v155 + 1;
          if (__OFADD__(v155, 1)) {
            break;
          }
          if (v145 >= v149) {
            goto LABEL_94;
          }
          SEL v154 = v37[v145];
          ++v155;
          if (v154) {
            goto LABEL_93;
          }
        }
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      int64_t v145 = v155;
      goto LABEL_93;
    }
LABEL_94:
    swift_release();
    objc_msgSend(v181, sel_commit);
    unint64_t v156 = (unint64_t)objc_msgSend(v199, sel_rootNode);
    uint64_t v204 = sub_2356C9088;
    uint64_t v205 = 0;
    aBlocuint64_t k = MEMORY[0x263EF8330];
    uint64_t v201 = 1107296256;
    unint64_t v202 = sub_2356C90DC;
    uint64_t v203 = &block_descriptor_19;
    char v157 = _Block_copy(&aBlock);
    swift_release();
    id v158 = objc_msgSend((id)v156, sel_childNodesPassingTest_, v157);

    _Block_release(v157);
    if (swift_isEscapingClosureAtFileLocation())
    {
      __break(1u);
    }
    else
    {
      unint64_t v156 = sub_235949D78();

      if (!(v156 >> 62))
      {
        unint64_t v60 = *(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_97;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v60 = sub_23594A998();
    swift_bridgeObjectRelease();
LABEL_97:
    if (v60)
    {
      unint64_t v159 = 0;
      unint64_t v160 = v156 & 0xC000000000000001;
      uint64_t v191 = v156 & 0xFFFFFFFFFFFFFF8;
      v190.i64[0] = v156 + 32;
      uint64_t v198 = (void *)*MEMORY[0x263F16BB8];
      uint64_t v37 = (SEL *)&selRef_didToggleFlashlightSwitch_;
      long long v197 = xmmword_23594FD70;
      uint64_t v196 = MEMORY[0x263F8EE58] + 8;
      uint64_t v194 = (char *)v60;
      unint64_t v193 = v156 & 0xC000000000000001;
      unint64_t v195 = v156;
      while (1)
      {
        if (v160)
        {
          id v161 = (id)MEMORY[0x237DE87D0](v159, v156);
        }
        else
        {
          if (v159 >= *(void *)(v191 + 16)) {
            goto LABEL_126;
          }
          id v161 = *(id *)(v190.i64[0] + 8 * v159);
        }
        uint64_t v162 = v161;
        if (__OFADD__(v159++, 1))
        {
          __break(1u);
          goto LABEL_125;
        }
        id v163 = [v161 v37[89]];
        if (v163) {
          break;
        }
LABEL_100:

        if (v159 == v60) {
          goto LABEL_122;
        }
      }
      uint64_t v164 = v163;
      uint64_t v165 = *(void **)((char *)v58 + v192);
      if (!v165)
      {

        goto LABEL_100;
      }
      unint64_t v60 = (unint64_t)objc_msgSend(v165, sel_physicsWorld);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810350);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v197;
      *(void *)(inited + 64) = MEMORY[0x263F8D6C8];
      uint64_t v167 = v198;
      *(void *)(inited + 32) = v198;
      *(void *)(inited + 40) = 2;
      id v168 = v167;
      sub_23566E54C(inited);
      type metadata accessor for TestOption(0);
      sub_2356DF564(&qword_26880EA58, type metadata accessor for TestOption);
      uint64_t v37 = (SEL *)sub_235949968();
      swift_bridgeObjectRelease();
      id v169 = objc_msgSend((id)v60, sel_contactTestWithBody_options_, v164, v37);

      sub_2356594B0(0, (unint64_t *)&unk_268810360);
      uint64_t v170 = sub_235949D78();

      if ((unint64_t)v170 >> 62)
      {
        if (v170 < 0) {
          unint64_t v60 = v170;
        }
        else {
          unint64_t v60 = v170 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v171 = sub_23594A998();
        swift_bridgeObjectRelease();
        if (v171) {
          goto LABEL_110;
        }
      }
      else
      {
        uint64_t v171 = *(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v171)
        {
LABEL_110:
          if (v171 < 1) {
            goto LABEL_128;
          }
          for (uint64_t i = 0; i != v171; ++i)
          {
            if ((v170 & 0xC000000000000001) != 0) {
              id v173 = (id)MEMORY[0x237DE87D0](i, v170);
            }
            else {
              id v173 = *(id *)(v170 + 8 * i + 32);
            }
            uint64_t v174 = v173;
            sub_2356C9B8C(v173);
          }
        }
      }

      swift_bridgeObjectRelease();
      unint64_t v156 = v195;
      unint64_t v60 = (unint64_t)v194;
      unint64_t v160 = v193;
      uint64_t v37 = (SEL *)&selRef_didToggleFlashlightSwitch_;
      goto LABEL_100;
    }
LABEL_122:

    swift_bridgeObjectRelease();
    v176(v177, v179);
  }
}

uint64_t sub_2356C8EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_235947978();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v14 = MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  uint64_t v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v9 + 16))(v16, a1, v8, v14);
  uint64_t v24 = a4;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_2356DA4FC((uint64_t)sub_2356DF490, (uint64_t)v23, a2, v17, v18);
  uint64_t v20 = (uint64_t *)(a3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v20;
  *uint64_t v20 = 0x8000000000000000;
  sub_235940BD4(v19, (uint64_t)v16, isUniquelyReferenced_nonNull_native);
  *uint64_t v20 = v25;
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v16, v8);
  return swift_endAccess();
}

id sub_2356C908C(void *a1)
{
  id result = objc_msgSend(a1, sel_physicsBody);
  if (result)
  {
    uint64_t v2 = result;
    unint64_t v3 = (unint64_t)objc_msgSend(result, sel_categoryBitMask);

    return (id)((v3 >> 2) & 1);
  }
  return result;
}

uint64_t sub_2356C90DC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_2356C9128(id *a1, uint64_t a2)
{
  uint64_t v79 = a2;
  uint64_t v78 = type metadata accessor for Occupant();
  MEMORY[0x270FA5388](v78, v4, v5, v6, v7);
  uint64_t v77 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v10, v11, v12, v13);
  uint64_t v76 = (uint64_t)&v70 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v15 - 8, v16, v17, v18, v19);
  uint64_t v80 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)&v70 - v26;
  uint64_t v28 = sub_235947978();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28, v30, v31, v32, v33);
  uint64_t v73 = (char *)&v70 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35, v36, v37, v38, v39);
  uint64_t v41 = (char *)&v70 - v40;
  MEMORY[0x270FA5388](v42, v43, v44, v45, v46);
  int64_t v48 = (char *)&v70 - v47;
  id v49 = *a1;
  id v50 = objc_msgSend(v49, sel_identifier);
  if (!v50)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
    goto LABEL_11;
  }
  uint64_t v51 = v50;
  sub_235947958();

  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v52(v27, v41, v28);
  unint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v75 = v29 + 56;
  v74(v27, 0, 1, v28);
  uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v72(v27, 1, v28) == 1)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    uint64_t result = v74(v80, 1, 1, v28);
    goto LABEL_13;
  }
  uint64_t v71 = v52;
  v52(v48, v27, v28);

  uint64_t v53 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  swift_beginAccess();
  uint64_t v54 = *v53;
  uint64_t v55 = *(void *)(*v53 + 16);
  swift_bridgeObjectRetain();
  if (v55 && (unint64_t v56 = sub_23587852C((uint64_t)v48), (v57 & 1) != 0))
  {
    uint64_t v58 = *(void *)(*(void *)(v54 + 56) + 8 * v56);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v58 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  uint64_t v82 = v58;
  id v70 = *(void (**)(char *, uint64_t))(v29 + 8);
  v70(v48, v28);
  uint64_t v59 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v77, v79, v28);
  sub_2359478D8();
  uint64_t v60 = v76;
  sub_2356D0B10(v76, v59);
  sub_2356DF1F8(v60, (uint64_t (*)(void))type metadata accessor for Occupant);
  id v61 = v49;
  id v62 = objc_msgSend(v61, sel_identifier);
  if (!v62) {
    goto LABEL_12;
  }
  uint64_t v63 = v62;
  sub_235947958();

  unint64_t v64 = v80;
  uint64_t v65 = v71;
  v71(v80, v41, v28);
  v74(v64, 0, 1, v28);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v72)(v64, 1, v28);
  if (result != 1)
  {
    uint64_t v67 = (uint64_t)v73;
    v65(v73, v64, v28);

    uint64_t v68 = v82;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v81 = *v53;
    *uint64_t v53 = 0x8000000000000000;
    sub_235940BD4(v68, v67, isUniquelyReferenced_nonNull_native);
    *uint64_t v53 = v81;
    swift_bridgeObjectRelease();
    v70((char *)v67, v28);
    return swift_endAccess();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_2356C9630(id *a1, uint64_t a2)
{
  uint64_t v81 = a2;
  uint64_t v80 = type metadata accessor for Occupant();
  MEMORY[0x270FA5388](v80, v4, v5, v6, v7);
  uint64_t v82 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810578);
  MEMORY[0x270FA5388](v9 - 8, v10, v11, v12, v13);
  uint64_t v79 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v15 - 8, v16, v17, v18, v19);
  uint64_t v83 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)&v71 - v26;
  uint64_t v28 = sub_235947978();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28, v30, v31, v32, v33);
  uint64_t v78 = (char *)&v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35, v36, v37, v38, v39);
  uint64_t v41 = (char *)&v71 - v40;
  MEMORY[0x270FA5388](v42, v43, v44, v45, v46);
  int64_t v48 = (char *)&v71 - v47;
  id v49 = *a1;
  id v50 = objc_msgSend(v49, sel_identifier);
  if (!v50)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
    goto LABEL_12;
  }
  uint64_t v51 = v50;
  sub_235947958();

  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  uint64_t v76 = v41;
  v52(v27, v41, v28);
  uint64_t v77 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  v77(v27, 0, 1, v28);
  uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v75(v27, 1, v28) == 1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v52(v48, v27, v28);

  uint64_t v53 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  swift_beginAccess();
  uint64_t v54 = *v53;
  if (*(void *)(*v53 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v55 = sub_23587852C((uint64_t)v48);
    if (v56)
    {
      unint64_t v74 = v52;
      uint64_t v57 = *(void *)(*(void *)(v54 + 56) + 8 * v55);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v72 = *(void (**)(char *, uint64_t))(v29 + 8);
      uint64_t v73 = v29 + 8;
      v72(v48, v28);
      uint64_t v85 = v57;
      uint64_t v58 = (uint64_t)v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v82, v81, v28);
      sub_2359478D8();
      uint64_t v59 = v79;
      sub_2357EC1D4(v79);
      sub_2356DF1F8(v58, (uint64_t (*)(void))type metadata accessor for Occupant);
      sub_23566A3AC(v59, &qword_268810578);
      id v60 = v49;
      id v61 = objc_msgSend(v60, sel_identifier);
      if (v61)
      {
        id v62 = v61;
        uint64_t v63 = v76;
        sub_235947958();

        unint64_t v64 = v83;
        uint64_t v65 = v63;
        uint64_t v66 = v74;
        v74(v83, v65, v28);
        v77(v64, 0, 1, v28);
        uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v64, 1, v28);
        if (result != 1)
        {
          uint64_t v68 = (uint64_t)v78;
          v66(v78, v64, v28);

          uint64_t v69 = v85;
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v84 = *v53;
          *uint64_t v53 = 0x8000000000000000;
          sub_235940BD4(v69, v68, isUniquelyReferenced_nonNull_native);
          *uint64_t v53 = v84;
          swift_bridgeObjectRelease();
          v72((char *)v68, v28);
          return swift_endAccess();
        }
        goto LABEL_14;
      }
LABEL_13:
      uint64_t result = v77(v83, 1, 1, v28);
LABEL_14:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v48, v28);
}

void sub_2356C9B8C(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v104 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v11, v12, v13, v14);
  long long v105 = (char *)&v99 - v15;
  MEMORY[0x270FA5388](v16, v17, v18, v19, v20);
  float32x4_t v106 = (char *)&v99 - v21;
  MEMORY[0x270FA5388](v22, v23, v24, v25, v26);
  uint64_t v28 = (char *)&v99 - v27;
  uint64_t v29 = sub_235947978();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29, v31, v32, v33, v34);
  uint64_t v36 = (char *)&v99 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37, v38, v39, v40, v41);
  uint64_t v43 = (char *)&v99 - v42;
  MEMORY[0x270FA5388](v44, v45, v46, v47, v48);
  id v120 = (char *)&v99 - v49;
  *(void *)&double v55 = MEMORY[0x270FA5388](v50, v51, v52, v53, v54).n128_u64[0];
  uint64_t v119 = (char *)&v99 - v56;
  id v107 = a1;
  id v57 = objc_msgSend(a1, sel_nodeA, v55);
  id v58 = objc_msgSend(v57, sel_physicsBody);

  if (!v58) {
    return;
  }
  unsigned __int8 v59 = objc_msgSend(v58, sel_categoryBitMask);

  if ((v59 & 4) == 0) {
    return;
  }
  uint64_t v102 = v36;
  uint64_t v103 = *(void *)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache);
  swift_bridgeObjectRetain();
  id v60 = objc_msgSend(v107, sel_nodeB);
  id v61 = objc_msgSend(v60, sel_name);

  uint64_t v101 = v1;
  int v100 = v43;
  if (v61)
  {
    uint64_t v62 = sub_235949AC8();
    uint64_t v117 = v63;
    uint64_t v118 = v62;
  }
  else
  {
    uint64_t v117 = 0;
    uint64_t v118 = 0;
  }
  uint64_t v64 = *(void *)(v103 + 16);
  if (!v64)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  long long v116 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
  float32x4_t v114 = (void (**)(char *, char *, uint64_t))(v30 + 32);
  id v115 = (unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  id v113 = (void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v65 = (_OWORD *)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    uint64_t v66 = (void *)*((void *)v65 - 2);
    long long v109 = *v65;
    long long v110 = v65[1];
    long long v111 = v65[2];
    long long v112 = v65[3];
    id v67 = v66;
    id v68 = objc_msgSend(v67, sel_identifier);
    if (!v68)
    {
      (*v116)(v28, 1, 1, v29);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    uint64_t v69 = v68;
    id v70 = v120;
    sub_235947958();

    uint64_t v71 = *v114;
    (*v114)(v28, v70, v29);
    uint64_t v2 = *v116;
    (*v116)(v28, 0, 1, v29);
    uint64_t v72 = *v115;
    if ((*v115)(v28, 1, v29) == 1) {
      goto LABEL_43;
    }
    uint64_t v73 = v119;
    v71(v119, v28, v29);

    uint64_t v74 = sub_235947928();
    uint64_t v75 = v29;
    uint64_t v76 = v74;
    uint64_t v78 = v77;
    uint64_t v79 = v73;
    uint64_t v80 = v75;
    uint64_t v108 = *v113;
    v108(v79, v75);
    if (v117) {
      break;
    }

    swift_bridgeObjectRelease();
LABEL_9:
    v65 += 5;
    --v64;
    uint64_t v29 = v80;
    if (!v64)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  if (v76 == v118 && v117 == v78)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  char v81 = sub_23594AB78();
  swift_bridgeObjectRelease();
  if ((v81 & 1) == 0)
  {

    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_23:
  uint64_t v64 = v80;
  uint64_t v82 = (uint64_t)v102;
  v121[0] = v67;
  long long v122 = v109;
  long long v123 = v110;
  long long v124 = v111;
  long long v125 = v112;
  if ((sub_2358C4F88() & 1) == 0) {
    goto LABEL_32;
  }
  id v83 = objc_msgSend(v107, sel_nodeA);
  id v84 = objc_msgSend(v83, sel_name);

  if (v84)
  {
    sub_235949AC8();
  }
  uint64_t v85 = (uint64_t)v105;
  sub_235947918();
  swift_bridgeObjectRelease();
  if (v72((char *)v85, 1, v64))
  {
    sub_23566A3AC(v85, (uint64_t *)&unk_268810340);
    uint64_t v86 = (uint64_t)v106;
    v2(v106, 1, 1, v64);
LABEL_29:

    sub_23566A3AC(v86, (uint64_t *)&unk_268810340);
    return;
  }
  uint64_t v86 = (uint64_t)v106;
  v71(v106, (char *)v85, v64);
  v2((char *)v86, 0, 1, v64);
  if (v72((char *)v86, 1, v64) == 1) {
    goto LABEL_29;
  }
  uint64_t v87 = (uint64_t)v100;
  v71(v100, (char *)v86, v64);
  objc_msgSend(v107, sel_penetrationDistance);
  if (v88 > 0.05)
  {
    v121[0] = v67;
    long long v122 = v109;
    long long v123 = v110;
    long long v124 = v111;
    long long v125 = v112;
    sub_2356C9128(v121, v87);
    v108((char *)v87, v64);
LABEL_32:

    return;
  }
  id v89 = v67;
  id v90 = objc_msgSend(v89, sel_identifier);
  if (!v90)
  {
LABEL_44:
    v2(v104, 1, 1, v64);
    goto LABEL_45;
  }
  char v91 = v90;
  float v92 = v120;
  sub_235947958();

  long long v93 = v104;
  v71(v104, v92, v64);
  v2(v93, 0, 1, v64);
  if (v72(v93, 1, v64) != 1)
  {
    v71((char *)v82, v93, v64);

    uint64_t v94 = v101 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants;
    swift_beginAccess();
    if (*(void *)(*(void *)v94 + 16))
    {
      swift_bridgeObjectRetain();
      sub_23587852C(v82);
      if (v95)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v96 = v82;
        uint64_t v97 = (void (*)(uint64_t, uint64_t))v108;
        v108((char *)v96, v64);
        swift_bridgeObjectRelease();
        v121[0] = v89;
        long long v122 = v109;
        long long v123 = v110;
        long long v124 = v111;
        long long v125 = v112;
        sub_2356C9630(v121, v87);
        v97(v87, v64);
LABEL_41:

        return;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v98 = (void (*)(uint64_t, uint64_t))v108;
    v108((char *)v82, v64);
    v98(v87, v64);
    goto LABEL_41;
  }
LABEL_45:
  __break(1u);
}

uint64_t sub_2356CA54C()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer), sel_physicsBody);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene);
  if (!v3)
  {

    return 0;
  }
  id v4 = objc_msgSend(v3, sel_physicsWorld);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810350);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23594FD70;
  uint64_t v6 = (void *)*MEMORY[0x263F16BB8];
  *(void *)(inited + 64) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = 2;
  id v7 = v6;
  sub_23566E54C(inited);
  type metadata accessor for TestOption(0);
  sub_2356DF564(&qword_26880EA58, type metadata accessor for TestOption);
  uint64_t v8 = (void *)sub_235949968();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v4, sel_contactTestWithBody_options_, v2, v8);

  sub_2356594B0(0, (unint64_t *)&unk_268810360);
  uint64_t v10 = sub_235949D78();

  return v10;
}

void sub_2356CA6F0(void *a1@<X0>, _OWORD *a2@<X8>, float32x4_t a3@<Q0>)
{
  id v4 = v3;
  float32x4_t v98 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v7 - 8, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_235947978();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16, v17, v18, v19);
  long long v112 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21, v22, v23, v24, v25);
  long long v111 = (char *)&v94 - v26;
  uint64_t v27 = *(void **)&v3[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer];
  sub_2356594B0(0, (unint64_t *)&qword_268814020);
  id v28 = v27;
  sub_23594A2F8();
  float v29 = *(float *)&v119;
  sub_23594A2F8();
  float v30 = (float)(v29 + *((float *)&v119 + 3)) * 0.5;
  sub_23594A2F8();
  int v31 = v120;
  sub_23594A2F8();
  float v32 = *((float *)&v119 + 2);
  sub_23594A2F8();
  *(float *)&double v33 = (float)(v32 + *((float *)&v120 + 1)) * 0.5;
  *(float *)&double v34 = v30;
  LODWORD(v35) = v31;
  objc_msgSend(v28, sel_convertPosition_toNode_, 0, v34, v35, v33);

  id v36 = objc_msgSend(a1, sel_nodeB);
  LOBYTE(v28) = sub_2356DB9C4(v36);

  if (v28) {
    goto LABEL_18;
  }
  uint64_t v37 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache;
  uint64_t v99 = *(void *)&v4[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache];
  swift_bridgeObjectRetain();
  id v38 = objc_msgSend(a1, sel_nodeB);
  id v39 = objc_msgSend(v38, sel_name);

  uint64_t v97 = v37;
  if (v39)
  {
    uint64_t v113 = sub_235949AC8();
    uint64_t v110 = v40;
  }
  else
  {
    uint64_t v113 = 0;
    uint64_t v110 = 0;
  }
  uint64_t v41 = *(void *)(v99 + 16);
  if (!v41)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_18:
    *a2 = xmmword_235954A00;
    a2[1] = 0u;
    a2[2] = 0u;
    a2[3] = 0u;
    a2[4] = 0u;
    *(_OWORD *)((char *)a2 + 76) = 0u;
    return;
  }
  char v95 = v4;
  uint64_t v96 = a2;
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  long long v109 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v44 = (void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v45 = swift_bridgeObjectRetain() + 48;
  while (1)
  {
    long long v119 = *(_OWORD *)(v45 - 16);
    long long v47 = *(_OWORD *)v45;
    long long v48 = *(_OWORD *)(v45 + 16);
    long long v49 = *(_OWORD *)(v45 + 48);
    long long v122 = *(_OWORD *)(v45 + 32);
    long long v123 = v49;
    long long v120 = v47;
    long long v121 = v48;
    uint64_t v104 = *(void *)(v45 - 16);
    uint64_t v108 = *(void *)(v45 + 8);
    uint64_t v103 = *(void *)v45;
    uint64_t v107 = *(void *)(v45 + 24);
    uint64_t v102 = *(void *)(v45 + 16);
    uint64_t v106 = *(void *)(v45 + 40);
    uint64_t v101 = *(void *)(v45 + 32);
    uint64_t v105 = *(void *)(v45 + 56);
    uint64_t v100 = *(void *)(v45 + 48);
    uint64_t v50 = (void *)v119;
    sub_2356DD6E0((id *)&v119);
    sub_2356DD6E0((id *)&v119);
    id v51 = objc_msgSend(v50, sel_identifier);
    if (!v51)
    {
      (*v109)(v13, 1, 1, v14);
LABEL_37:
      __break(1u);
      return;
    }
    uint64_t v52 = v51;
    uint64_t v53 = v112;
    sub_235947958();

    uint64_t v54 = *v42;
    (*v42)(v13, v53, v14);
    (*v109)(v13, 0, 1, v14);
    if ((*v43)(v13, 1, v14) == 1) {
      goto LABEL_37;
    }
    double v55 = v111;
    v54(v111, v13, v14);
    sub_2356DD70C((id *)&v119);
    uint64_t v56 = sub_235947928();
    uint64_t v58 = v57;
    (*v44)(v55, v14);
    if (!v110)
    {
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    if (v56 == v113 && v110 == v58)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v46 = sub_23594AB78();
    swift_bridgeObjectRelease();
    if (v46) {
      break;
    }
LABEL_8:
    sub_2356DD70C((id *)&v119);
    v45 += 80;
    if (!--v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      a2 = v96;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_20:
  unsigned __int8 v59 = v95;
  uint64_t v60 = *(void *)&v95[v97];
  uint64_t v61 = *(void *)&v95[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedStorageGroups];
  uint64_t v62 = *(void *)&v95[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTableChairGroups];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v63 = sub_2356CB000((id *)&v119, v61, v62, v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v63)
  {
    uint64_t v73 = (uint64_t *)&v59[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants];
    swift_beginAccess();
    uint64_t v74 = *v73;
    long long v116 = v121;
    long long v117 = v122;
    long long v118 = v123;
    long long v115 = v120;
    long long v114 = v119;
    sub_2356DD6E0((id *)&v119);
    swift_bridgeObjectRetain();
    uint64_t v75 = Dictionary<>.occupants(of:)((id *)&v114, v74);
    swift_bridgeObjectRelease();
    long long v116 = v121;
    long long v117 = v122;
    long long v118 = v123;
    long long v115 = v120;
    long long v114 = v119;
    sub_2358C53C4(v98);
    float32x4_t v77 = vsubq_f32(v98, v76);
    float32x4_t v78 = vmulq_f32(v77, v77);
    float v79 = sqrtf(vaddq_f32(v78, (float32x4_t)vdupq_laneq_s32((int32x4_t)v78, 2)).f32[0]);
    sub_2356DD70C((id *)&v119);
    uint64_t v80 = (float *)v96;
    *uint64_t v96 = v104;
    *((void *)v80 + 1) = 0;
    uint64_t v81 = v108;
    *((void *)v80 + 2) = v103;
    *((void *)v80 + 3) = v81;
    uint64_t v82 = v107;
    *((void *)v80 + 4) = v102;
    *((void *)v80 + 5) = v82;
    uint64_t v83 = v106;
    *((void *)v80 + 6) = v101;
    *((void *)v80 + 7) = v83;
    uint64_t v84 = v105;
    *((void *)v80 + 8) = v100;
    *((void *)v80 + 9) = v84;
    *((void *)v80 + 10) = v75;
    v80[22] = v79;
    return;
  }
  uint64_t v64 = v59;
  uint64_t v65 = sub_2356DB66C((uint64_t)v63, (uint64_t)v64, v98);
  swift_bridgeObjectRelease();

  int64_t v66 = *(void *)(v65 + 16);
  if (v66)
  {
    *(void *)&long long v114 = MEMORY[0x263F8EE78];
    sub_2356764C4(0, v66, 0);
    uint64_t v67 = v114;
    id v68 = (int *)(v65 + 120);
    unint64_t v69 = *(void *)(v114 + 16);
    do
    {
      int v70 = *v68;
      *(void *)&long long v114 = v67;
      unint64_t v71 = *(void *)(v67 + 24);
      unint64_t v72 = v69 + 1;
      if (v69 >= v71 >> 1)
      {
        sub_2356764C4(v71 > 1, v69 + 1, 1);
        uint64_t v67 = v114;
      }
      *(void *)(v67 + 16) = v72;
      *(_DWORD *)(v67 + 4 * v69 + 32) = v70;
      v68 += 24;
      ++v69;
      --v66;
    }
    while (v66);
  }
  else
  {
    uint64_t v67 = MEMORY[0x263F8EE78];
    unint64_t v72 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v72)
    {
      swift_bridgeObjectRelease();
      sub_2356DD70C((id *)&v119);
      swift_bridgeObjectRelease();
      long long v93 = v96;
      *(_OWORD *)uint64_t v96 = xmmword_235954A00;
      v93[1] = 0u;
      v93[2] = 0u;
      v93[3] = 0u;
      v93[4] = 0u;
      *(_OWORD *)((char *)v93 + 76) = 0u;
      return;
    }
  }
  uint64_t v85 = v96;
  float v86 = *(float *)(v67 + 32);
  unint64_t v87 = v72 - 1;
  if (v72 != 1)
  {
    double v88 = (float *)(v67 + 36);
    float v89 = *(float *)(v67 + 32);
    do
    {
      float v90 = *v88++;
      float v91 = v90;
      if (v90 < v89)
      {
        float v86 = v91;
        float v89 = v91;
      }
      --v87;
    }
    while (v87);
  }
  swift_bridgeObjectRelease();
  uint64_t v92 = sub_2356DC320(v65);
  swift_bridgeObjectRelease();
  sub_2356DD70C((id *)&v119);
  uint64_t *v85 = v92;
  v85[1] = LODWORD(v86) | 0x8000000000000000;
  *((_OWORD *)v85 + 1) = 0u;
  *((_OWORD *)v85 + 2) = 0u;
  *((_OWORD *)v85 + 3) = 0u;
  *((_OWORD *)v85 + 4) = 0u;
  *(_OWORD *)((char *)v85 + 76) = 0u;
}

id sub_2356CB000(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = *a1;
  sub_2356DD6E0(a1);
  id result = objc_msgSend(v8, sel_type);
  if (!result)
  {
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v10 = result;
  sub_2356DD70C(a1);
  uint64_t v11 = sub_235949AC8();
  uint64_t v13 = v12;
  if (v11 == sub_235949AC8() && v13 == v14) {
    goto LABEL_10;
  }
  char v16 = sub_23594AB78();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_11:
    return (id)sub_2356CC084(a1, a2, a4);
  }
  sub_2356DD6E0(a1);
  id result = objc_msgSend(v8, sel_type);
  if (!result) {
    goto LABEL_37;
  }
  uint64_t v10 = result;
  sub_2356DD70C(a1);
  uint64_t v17 = sub_235949AC8();
  uint64_t v19 = v18;
  if (v17 == sub_235949AC8() && v19 == v20) {
    goto LABEL_10;
  }
  char v21 = sub_23594AB78();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_11;
  }
  sub_2356DD6E0(a1);
  id result = objc_msgSend(v8, sel_type);
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v10 = result;
  sub_2356DD70C(a1);
  uint64_t v22 = sub_235949AC8();
  uint64_t v24 = v23;
  if (v22 == sub_235949AC8() && v24 == v25) {
    goto LABEL_10;
  }
  char v26 = sub_23594AB78();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_11;
  }
  sub_2356DD6E0(a1);
  id result = objc_msgSend(v8, sel_type);
  if (!result)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v10 = result;
  sub_2356DD70C(a1);
  uint64_t v27 = sub_235949AC8();
  uint64_t v29 = v28;
  if (v27 == sub_235949AC8() && v29 == v30)
  {
LABEL_10:

    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v31 = sub_23594AB78();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_11;
  }
  sub_2356DD6E0(a1);
  id result = objc_msgSend(v8, sel_type);
  if (!result) {
    goto LABEL_40;
  }
  float v32 = result;
  sub_2356DD70C(a1);
  uint64_t v33 = sub_235949AC8();
  uint64_t v35 = v34;
  if (v33 != sub_235949AC8() || v35 != v36)
  {
    char v37 = sub_23594AB78();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_28;
    }
    sub_2356DD6E0(a1);
    id result = objc_msgSend(v8, sel_type);
    if (result)
    {
      float v32 = result;
      sub_2356DD70C(a1);
      uint64_t v38 = sub_235949AC8();
      uint64_t v40 = v39;
      if (v38 != sub_235949AC8() || v40 != v41)
      {
        char v42 = sub_23594AB78();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0) {
          return 0;
        }
        goto LABEL_28;
      }
      goto LABEL_26;
    }
LABEL_41:
    __break(1u);
    return result;
  }
LABEL_26:

  swift_bridgeObjectRelease_n();
LABEL_28:
  return (id)sub_2356CC5A0((uint64_t)a1, a3, a4);
}

uint64_t sub_2356CB48C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a2;
  uint64_t v4 = sub_235947978();
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = *(void *)(v4 - 8);
  *(void *)(v2 + 64) = swift_task_alloc();
  *(_OWORD *)(v2 + 72) = *(_OWORD *)a1;
  *(unsigned char *)(v2 + 96) = *(unsigned char *)(a1 + 16);
  sub_235949E78();
  *(void *)(v2 + 88) = sub_235949E68();
  uint64_t v6 = sub_235949E28();
  return MEMORY[0x270FA2498](sub_2356CB594, v6, v5);
}

uint64_t sub_2356CB594()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x237DEA060](v1 + 16);
  if (v2)
  {
    id v3 = (char *)v2;
    int v4 = *(unsigned __int8 *)(v0 + 96);
    uint64_t v51 = v0;
    if (v4 != 4)
    {
      if (v4 == 3)
      {
        unint64_t v39 = *(void *)(v0 + 80);
        uint64_t v40 = (char *)*(id *)(v0 + 72);
        sub_2356DD738(v39);
      }
      else
      {
        if (v4 != 2)
        {
LABEL_36:

          goto LABEL_37;
        }
        uint64_t v5 = *(char **)(v0 + 72);
        unint64_t v6 = *(void *)(v0 + 80);
        uint64_t v45 = v5;
        if (v6 >> 62) {
          goto LABEL_42;
        }
        uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v8 = v5;
        swift_bridgeObjectRetain();
        for (; v7; uint64_t v7 = sub_23594A998())
        {
          uint64_t v9 = 0;
          unint64_t v10 = *(void *)(v51 + 80) & 0xC000000000000001;
          uint64_t v49 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
          while (1)
          {
            id v11 = v10 ? (id)MEMORY[0x237DE87D0](v9, v6) : *(id *)(v6 + 8 * v9 + 32);
            uint64_t v12 = v11;
            uint64_t v13 = v9 + 1;
            if (__OFADD__(v9, 1)) {
              break;
            }
            self;
            uint64_t v14 = swift_dynamicCastObjCClass();
            if (!v14)
            {

              goto LABEL_29;
            }
            uint64_t v15 = (void *)v14;
            objc_allocWithZone((Class)type metadata accessor for Plane());
            id v16 = v12;
            uint64_t v17 = sub_2358C77B0(v15);
            objc_msgSend(v16, sel_transform);
            objc_msgSend(v17, sel_setSimdTransform_);
            objc_msgSend(*(id *)&v3[v49], sel_addChildNode_, v17);

            ++v9;
            if (v13 == v7) {
              goto LABEL_29;
            }
          }
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          uint64_t v43 = v5;
          swift_bridgeObjectRetain();
        }
LABEL_29:
        swift_bridgeObjectRelease();
        uint64_t v40 = v45;
        uint64_t v0 = v51;
      }
LABEL_35:

      id v3 = v40;
      goto LABEL_36;
    }
    uint64_t v18 = *(char **)(v0 + 72);
    unint64_t v19 = *(void *)(v0 + 80);
    uint64_t v45 = v18;
    if (v19 >> 62)
    {
      uint64_t v44 = v18;
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_23594A998();
      if (v20)
      {
LABEL_17:
        uint64_t v22 = 0;
        long long v47 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 56) + 8);
        unint64_t v48 = *(void *)(v0 + 80) & 0xC000000000000001;
        uint64_t v46 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
        while (1)
        {
          if (v48) {
            id v23 = (id)MEMORY[0x237DE87D0](v22, v19);
          }
          else {
            id v23 = *(id *)(v19 + 8 * v22 + 32);
          }
          id v24 = v23;
          unint64_t v6 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_41;
          }
          self;
          uint64_t v25 = swift_dynamicCastObjCClass();
          if (!v25) {
            break;
          }
          char v26 = (void *)v25;
          uint64_t v50 = v22 + 1;
          uint64_t v27 = v20;
          uint64_t v28 = v3;
          unint64_t v29 = v19;
          uint64_t v30 = *(void *)(v0 + 64);
          uint64_t v31 = *(void *)(v0 + 48);
          float v32 = v28;
          uint64_t v33 = *(void **)&v28[v46];
          id v34 = v24;
          id v35 = v33;
          id v36 = objc_msgSend(v26, sel_identifier);
          sub_235947958();

          sub_235947928();
          (*v47)(v30, v31);
          char v37 = (void *)sub_235949A88();
          swift_bridgeObjectRelease();
          id v24 = objc_msgSend(v35, sel_childNodeWithName_recursively_, v37, 0);

          if (!v24)
          {
            id v24 = v34;
LABEL_32:
            id v3 = v32;

            uint64_t v0 = v51;
            break;
          }
          type metadata accessor for Plane();
          uint64_t v38 = (void *)swift_dynamicCastClass();
          unint64_t v19 = v29;
          if (!v38)
          {

            goto LABEL_32;
          }
          objc_msgSend(v38, sel_removeFromParentNode);

          ++v22;
          uint64_t v20 = v27;
          id v3 = v32;
          uint64_t v0 = v51;
          if (v50 == v27) {
            goto LABEL_34;
          }
        }
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      char v21 = v18;
      swift_bridgeObjectRetain();
      if (v20) {
        goto LABEL_17;
      }
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v40 = v45;
    goto LABEL_35;
  }
LABEL_37:
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

void sub_2356CBA04(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (!(a2 >> 62))
  {
    uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_23594A998();
  if (!v5) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v6 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
  uint64_t v7 = 4;
  while (1)
  {
    uint64_t v8 = v7 - 4;
    if ((a2 & 0xC000000000000001) != 0)
    {
      id v9 = (id)MEMORY[0x237DE87D0](v7 - 4, a2);
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v8, 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      id v9 = *(id *)(a2 + 8 * v7);
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    id v15 = v9;
    self;
    uint64_t v11 = swift_dynamicCastObjCClass();
    if (!v11) {
      break;
    }
    uint64_t v12 = (void *)v11;
    objc_allocWithZone((Class)type metadata accessor for Plane());
    id v13 = v15;
    uint64_t v14 = sub_2358C77B0(v12);
    objc_msgSend(v13, sel_transform);
    objc_msgSend(v14, sel_setSimdTransform_);
    objc_msgSend(*(id *)(v3 + v6), sel_addChildNode_, v14);

    ++v7;
    if (v10 == v5) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
}

void sub_2356CBBC8(uint64_t a1, unint64_t a2)
{
}

void sub_2356CBBD0(uint64_t a1, unint64_t a2)
{
  uint64_t v26 = sub_235947978();
  uint64_t v3 = *(void (***)(char *, uint64_t))(v26 - 8);
  MEMORY[0x270FA5388](v26, v4, v5, v6, v7);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62) {
    goto LABEL_19;
  }
  uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_23594A998())
  {
    uint64_t v24 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
    unint64_t v25 = a2 & 0xC000000000000001;
    id v23 = v3 + 1;
    uint64_t v11 = 4;
    while (1)
    {
      uint64_t v12 = v25
          ? (void (**)(char *, uint64_t))MEMORY[0x237DE87D0](v11 - 4, a2)
          : (void (**)(char *, uint64_t))*(id *)(a2 + 8 * v11);
      uint64_t v3 = v12;
      uint64_t v13 = v11 - 3;
      if (__OFADD__(v11 - 4, 1)) {
        break;
      }
      self;
      uint64_t v14 = swift_dynamicCastObjCClass();
      if (!v14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      id v15 = (void *)v14;
      id v16 = *(void **)(v27 + v24);
      uint64_t v3 = v3;
      id v17 = v16;
      id v18 = objc_msgSend(v15, sel_identifier);
      sub_235947958();

      sub_235947928();
      (*v23)(v9, v26);
      unint64_t v19 = (void *)sub_235949A88();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v17, sel_childNodeWithName_recursively_, v19, 0);

      if (!v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      type metadata accessor for Plane();
      char v21 = (void *)swift_dynamicCastClass();
      if (!v21)
      {
        swift_bridgeObjectRelease();

LABEL_16:
LABEL_17:

        return;
      }
      objc_msgSend(v21, sel_removeFromParentNode);

      ++v11;
      if (v13 == v10) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
}

id MAGObjectUnderstandingService.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MAGObjectUnderstandingService.init()()
{
}

id MAGObjectUnderstandingService.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MAGObjectUnderstandingService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2356CC084(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_235947978();
  MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
  unint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v21, v22, v23, v24);
  id v63 = (char *)&v48 - v26;
  uint64_t v55 = *(void *)(a2 + 16);
  if (v55)
  {
    uint64_t v49 = a3;
    uint64_t v50 = a2;
    uint64_t v27 = (void (**)(char *, char *, uint64_t))(v25 + 32);
    id v57 = *a1;
    uint64_t v58 = a2 + 32;
    unsigned __int8 v59 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
    uint64_t v56 = (uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    uint64_t v51 = v25;
    uint64_t v61 = v25 + 16;
    uint64_t v62 = (void (**)(char *, uint64_t))(v25 + 8);
    swift_bridgeObjectRetain();
    uint64_t v28 = 0;
    uint64_t v53 = v12;
    uint64_t v54 = a1;
    uint64_t v52 = v27;
    while (1)
    {
      uint64_t v29 = *(void *)(v58 + 8 * v28);
      swift_bridgeObjectRetain();
      sub_2356DD6E0(a1);
      id v30 = objc_msgSend(v57, sel_identifier);
      if (!v30)
      {
        uint64_t result = (*v59)(v12, 1, 1, v13);
LABEL_23:
        __break(1u);
        return result;
      }
      uint64_t v31 = v30;
      uint64_t v60 = v28;
      sub_235947958();

      float v32 = *v27;
      (*v27)(v12, v19, v13);
      (*v59)(v12, 0, 1, v13);
      uint64_t result = (*v56)(v12, 1, v13);
      if (result == 1) {
        goto LABEL_23;
      }
      v32(v63, v12, v13);
      sub_2356DD70C(a1);
      if (*(void *)(v29 + 16))
      {
        sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
        uint64_t v34 = sub_235949998();
        uint64_t v35 = -1 << *(unsigned char *)(v29 + 32);
        unint64_t v36 = v34 & ~v35;
        if ((*(void *)(v29 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36)) {
          break;
        }
      }
LABEL_3:
      uint64_t v28 = v60 + 1;
      (*v62)(v63, v13);
      swift_bridgeObjectRelease();
      a1 = v54;
      uint64_t v27 = v52;
      uint64_t v12 = v53;
      if (v28 == v55)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    uint64_t v37 = ~v35;
    uint64_t v38 = *(void *)(v51 + 72);
    unint64_t v39 = *(void (**)(char *, unint64_t, uint64_t))(v51 + 16);
    while (1)
    {
      v39(v19, *(void *)(v29 + 48) + v38 * v36, v13);
      sub_2356DF564((unint64_t *)&unk_2688105B0, MEMORY[0x263F07508]);
      char v40 = sub_235949A18();
      uint64_t v41 = *v62;
      (*v62)(v19, v13);
      if (v40) {
        break;
      }
      unint64_t v36 = (v36 + 1) & v37;
      if (((*(void *)(v29 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0) {
        goto LABEL_3;
      }
    }
    v41(v63, v13);
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_2356CCBC8(v29, v49);
    swift_bridgeObjectRelease();
    if (*(void *)(v42 + 16))
    {
      uint64_t v43 = sub_2356DC284(v42);
      swift_bridgeObjectRelease();
      return v43;
    }
    swift_bridgeObjectRelease();
    if (qword_26880E440 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_235948278();
    __swift_project_value_buffer(v44, (uint64_t)qword_26880F848);
    uint64_t v45 = sub_235948258();
    os_log_type_t v46 = sub_23594A158();
    if (os_log_type_enabled(v45, v46))
    {
      long long v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v47 = 0;
      _os_log_impl(&dword_235640000, v45, v46, "Warning: group of found objects is unexpectedly empty", v47, 2u);
      MEMORY[0x237DE9F30](v47, -1, -1);
    }
  }
  return 0;
}

uint64_t sub_2356CC5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v83 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v5 - 8, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_235947978();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v14, v15, v16, v17);
  uint64_t v92 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  float v91 = (char *)&v80 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810660);
  MEMORY[0x270FA5388](v25 - 8, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810668);
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32, v34, v35, v36, v37);
  unint64_t v39 = (char *)&v80 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40, v41, v42, v43, v44);
  os_log_type_t v46 = (char *)&v80 - v45;
  uint64_t v93 = a1;
  sub_2358769E4(a2, (uint64_t (*)(char *, uint64_t))sub_2356DF464, (uint64_t)v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    long long v47 = &qword_268810660;
    uint64_t v48 = (uint64_t)v31;
    goto LABEL_16;
  }
  uint64_t v49 = *(int *)(v32 + 48);
  float v89 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v89(v46, v31, v12);
  uint64_t v50 = *(void *)&v31[v49];
  *(void *)&v46[v49] = v50;
  uint64_t v51 = *(int *)(v32 + 48);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v39, v46, v12);
  *(void *)&v39[v51] = v50;
  uint64_t v52 = v83;
  uint64_t v53 = *(void *)(v83 + 16);
  if (!v53)
  {
    swift_bridgeObjectRetain_n();
LABEL_11:
    sub_23566A3AC((uint64_t)v39, (uint64_t *)&unk_268810668);
    swift_bridgeObjectRelease();
    if (qword_26880E440 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_235948278();
    __swift_project_value_buffer(v69, (uint64_t)qword_26880F848);
    int v70 = sub_235948258();
    os_log_type_t v71 = sub_23594A158();
    if (os_log_type_enabled(v70, v71))
    {
      unint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v72 = 0;
      _os_log_impl(&dword_235640000, v70, v71, "Warning: could not find DetectedObject expected to match given ID", v72, 2u);
      MEMORY[0x237DE9F30](v72, -1, -1);
    }

    long long v47 = (uint64_t *)&unk_268810668;
    uint64_t v48 = (uint64_t)v46;
LABEL_16:
    sub_23566A3AC(v48, v47);
    return 0;
  }
  float v90 = v39;
  uint64_t v82 = v46;
  double v88 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v54 = v50;
  uint64_t v55 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v56 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v81 = v54;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  id v57 = (_OWORD *)(v52 + 48);
  while (1)
  {
    uint64_t v58 = (void *)*((void *)v57 - 2);
    long long v59 = *v57;
    long long v86 = v57[1];
    long long v87 = v59;
    long long v60 = v57[2];
    long long v84 = v57[3];
    long long v85 = v60;
    id v61 = v58;
    id v62 = objc_msgSend(v61, sel_identifier);
    if (!v62) {
      break;
    }
    id v63 = v62;
    uint64_t v64 = v92;
    sub_235947958();

    uint64_t v65 = v89;
    v89(v11, v64, v12);
    (*v88)(v11, 0, 1, v12);
    uint64_t result = (*v55)(v11, 1, v12);
    if (result == 1) {
      goto LABEL_20;
    }
    uint64_t v67 = v91;
    v65(v91, v11, v12);

    char v68 = sub_235947948();
    (*v56)(v67, v12);
    if (v68)
    {
      uint64_t v74 = v83;
      swift_bridgeObjectRelease();
      sub_23566A3AC((uint64_t)v90, (uint64_t *)&unk_268810668);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268810640);
      uint64_t v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = xmmword_23594FD70;
      *(void *)(v75 + 32) = v61;
      long long v76 = v86;
      *(_OWORD *)(v75 + 48) = v87;
      *(_OWORD *)(v75 + 64) = v76;
      long long v77 = v84;
      *(_OWORD *)(v75 + 80) = v85;
      *(_OWORD *)(v75 + 96) = v77;
      id v78 = v61;
      uint64_t v79 = sub_2356CCBC8(v81, v74);
      swift_bridgeObjectRelease();
      uint64_t v94 = v75;
      sub_2357197BC(v79);
      uint64_t v73 = sub_2356DC284(v94);

      swift_bridgeObjectRelease();
      sub_23566A3AC((uint64_t)v82, (uint64_t *)&unk_268810668);
      return v73;
    }

    v57 += 5;
    if (!--v53)
    {
      swift_bridgeObjectRelease();
      os_log_type_t v46 = v82;
      unint64_t v39 = v90;
      goto LABEL_11;
    }
  }
  uint64_t result = (*v88)(v11, 1, 1, v12);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_2356CCBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2;
  void v10[2] = &v12;
  uint64_t v3 = sub_235707840((void (*)(void *__return_ptr, char *))sub_2356DF444, (uint64_t)v10, a1);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4 != *(void *)(a1 + 16))
  {
    if (qword_26880E440 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_235948278();
    __swift_project_value_buffer(v5, (uint64_t)qword_26880F848);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_235948258();
    os_log_type_t v7 = sub_23594A158();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 134218496;
      uint64_t v11 = *(void *)(a1 + 16) - v4;
      sub_23594A608();
      *(_WORD *)(v8 + 12) = 2048;
      uint64_t v11 = *(void *)(a1 + 16);
      sub_23594A608();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 22) = 2048;
      uint64_t v11 = v4;
      sub_23594A608();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_235640000, v6, v7, "Warning: %ld/%ld object IDs did not have a corresponding DetectedObject. Continuing with %ld found objects.", (uint8_t *)v8, 0x20u);
      MEMORY[0x237DE9F30](v8, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v3;
}

void sub_2356CCDAC(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_235947978();
  MEMORY[0x270FA5388](v13, v14, v15, v16, v17);
  id v63 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  id v61 = (char *)&v47 - v25;
  uint64_t v26 = *(void *)(a2 + 16);
  if (v26)
  {
    long long v60 = v12;
    uint64_t v48 = a3;
    uint64_t v49 = v3;
    uint64_t v27 = (void (**)(char *, char *, uint64_t))(v24 + 32);
    uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    long long v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    id v57 = (void (**)(char *, uint64_t))(v24 + 8);
    swift_bridgeObjectRetain();
    uint64_t v47 = a2;
    uint64_t v28 = (uint64_t *)(a2 + 48);
    uint64_t v29 = v60;
    while (1)
    {
      uint64_t v30 = (void *)*(v28 - 2);
      uint64_t v31 = v28[1];
      uint64_t v32 = *v28;
      uint64_t v55 = v28[3];
      uint64_t v56 = v31;
      uint64_t v51 = v28[2];
      uint64_t v52 = v32;
      uint64_t v33 = v28[5];
      uint64_t v34 = v28[6];
      uint64_t v50 = v28[4];
      uint64_t v53 = v28[7];
      uint64_t v54 = v33;
      id v35 = v30;
      id v36 = objc_msgSend(v35, sel_identifier, v47);
      if (!v36) {
        break;
      }
      uint64_t v37 = v36;
      uint64_t v38 = v63;
      sub_235947958();

      unint64_t v39 = *v27;
      (*v27)(v29, v38, v13);
      (*v59)(v29, 0, 1, v13);
      if ((*v58)(v29, 1, v13) == 1) {
        goto LABEL_11;
      }
      uint64_t v40 = v61;
      v39(v61, v29, v13);

      char v41 = sub_235947948();
      (*v57)(v40, v13);
      if (v41)
      {
        swift_bridgeObjectRelease();
        uint64_t v42 = v48;
        *uint64_t v48 = v35;
        v42[1] = 0;
        uint64_t v43 = v56;
        void v42[2] = v52;
        v42[3] = v43;
        uint64_t v44 = v55;
        v42[4] = v51;
        v42[5] = v44;
        uint64_t v45 = v54;
        v42[6] = v50;
        v42[7] = v45;
        uint64_t v46 = v53;
        v42[8] = v34;
        v42[9] = v46;
        return;
      }

      v28 += 10;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        a3 = v48;
        goto LABEL_8;
      }
    }
    (*v59)(v60, 1, 1, v13);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_8:
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
}

uint64_t type metadata accessor for MAGObjectUnderstandingService()
{
  return self;
}

uint64_t sub_2356CD100(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_23566A050;
  return sub_2356C1F74(a1, v4, v5, v6);
}

uint64_t sub_2356CD1B4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2356CD290;
  return v6(a1);
}

uint64_t sub_2356CD290()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

char *sub_2356CD388(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, &qword_26AF156A8);
}

char *sub_2356CD394(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, &qword_2688105D0);
}

char *sub_2356CD3A0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2356DEC40(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_2356CD498(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF156C0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2356DB2D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2356CD5A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2356CD888(a1, a2, a3, a4, (uint64_t *)&unk_2688105F8, type metadata accessor for MAGOutputEvent, type metadata accessor for MAGOutputEvent);
}

void *sub_2356CD5DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810A70);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2356DB3CC(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2356CD6FC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2356CE468(a1, a2, a3, a4, &qword_26AF15638, (uint64_t *)&unk_26AF13230);
}

char *sub_2356CD710(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, (uint64_t *)&unk_26AF15690);
}

void *sub_2356CD71C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688106F8);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2356DC8FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2356CD848(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, (uint64_t *)&unk_26AF15680);
}

uint64_t sub_2356CD854(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2356CD888(a1, a2, a3, a4, &qword_2688106F0, (uint64_t (*)(void))type metadata accessor for SpatialPersonDetection, (uint64_t (*)(void))type metadata accessor for SpatialPersonDetection);
}

uint64_t sub_2356CD888(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_23594A958();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  void v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2356DED28(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

char *sub_2356CDB08(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, (uint64_t *)&unk_26AF15640);
}

char *sub_2356CDB14(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, &qword_26AF15618);
}

void *sub_2356CDB20(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268810960);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2356DCAA8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2356CDC30(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2356CDDA8(a1, a2, a3, a4, (uint64_t *)&unk_268810980, (uint64_t *)&unk_26880EAE0);
}

uint64_t sub_2356CDC44(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2356CD888(a1, a2, a3, a4, &qword_2688104C0, type metadata accessor for DetectedDoor, type metadata accessor for DetectedDoor);
}

char *sub_2356CDC78(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688104C8);
      int64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_2356DB8D8(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2356CDD88(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, &qword_2688104D0);
}

void *sub_2356CDD94(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2356CDDA8(a1, a2, a3, a4, &qword_2688104D8, &qword_2688104E0);
}

void *sub_2356CDDA8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      id v13[2] = v11;
      void v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2356DEF90(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_2356CDEC4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688104E8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2356DCB94(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2356CDFD4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, &qword_2688104F0);
}

void *sub_2356CDFE0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2356CDDA8(a1, a2, a3, a4, &qword_2688104F8, (uint64_t *)&unk_268810500);
}

uint64_t sub_2356CDFF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2356CD888(a1, a2, a3, a4, &qword_268810470, type metadata accessor for DoorAttributesCacheItem, type metadata accessor for DoorAttributesCacheItem);
}

uint64_t sub_2356CE028(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2356CD888(a1, a2, a3, a4, &qword_2688105F0, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock, (uint64_t (*)(void))type metadata accessor for DetectedTextBlock);
}

void *sub_2356CE05C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26880EFE0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2356DCC80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2356CE16C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2356CD888(a1, a2, a3, a4, (uint64_t *)&unk_2688105E0, MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

void *sub_2356CE1A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688106B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2356DC3CC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2356CE2C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268810640);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2356DC18C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2356CE3E8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, &qword_26AF156A0);
}

char *sub_2356CE3F4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, (uint64_t *)&unk_268810460);
}

void *sub_2356CE400(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2356CEA94(a1, a2, a3, a4, &qword_26AF15658, (void (*)(void, int64_t, void *, void *))sub_2356DC6B8);
}

uint64_t sub_2356CE420(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2356CD888(a1, a2, a3, a4, &qword_268810930, MEMORY[0x263F06EA8], MEMORY[0x263F06EA8]);
}

void *sub_2356CE454(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2356CE468(a1, a2, a3, a4, &qword_268810620, &qword_268810628);
}

void *sub_2356CE468(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      id v13[2] = v11;
      void v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2356DEB34(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_2356CE598(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268810630);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2356DC7C4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2356CE6C0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268810458);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2356DEC40(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2356CE7BC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, (uint64_t *)&unk_26AF15620);
}

char *sub_2356CE7C8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, (uint64_t *)&unk_268810558);
}

char *sub_2356CE7D4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, &qword_26AF15650);
}

char *sub_2356CE7E0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, (uint64_t *)&unk_268810530);
}

char *sub_2356CE7EC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, (uint64_t *)&unk_26AF15660);
}

char *sub_2356CE7F8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2356CD3A0(a1, a2, a3, a4, (uint64_t *)&unk_26AF15670);
}

uint64_t sub_2356CE804(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2356CD888(a1, a2, a3, a4, (uint64_t *)&unk_268810700, (uint64_t (*)(void))type metadata accessor for ActionListItem, (uint64_t (*)(void))type metadata accessor for ActionListItem);
}

void *sub_2356CE838(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688104B8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2356DCD74(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2356CE964(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268810488);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2356DEE84(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2356CEA74(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2356CEA94(a1, a2, a3, a4, &qword_2688105D8, (void (*)(void, int64_t, void *, void *))sub_2356DCB94);
}

void *sub_2356CEA94(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      id v13[2] = v11;
      void v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_2356CEBB0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268810498);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2356DCAA8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2356CECC0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2356CDDA8(a1, a2, a3, a4, &qword_2688104A0, (uint64_t *)&unk_2688104A8);
}

void *sub_2356CECD4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2356CDDA8(a1, a2, a3, a4, &qword_268810478, &qword_268810480);
}

void *sub_2356CECE8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688109D0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2356DB578(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2356CEDF8(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_23594ACD8();
  Control.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_235949B88();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_23594AD28();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v23 = a2;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_58:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    char v21 = v23;
    sub_2356D3BF4(v23, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v25;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_62;
  }
  uint64_t v9 = ~v7;
  uint64_t v10 = a2;
  while (2)
  {
    unint64_t v11 = 0xEA0000000000726FLL;
    uint64_t v12 = 0x746361466D6F6F7ALL;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        unint64_t v11 = 0x8000000235969F50;
        uint64_t v12 = 0xD000000000000011;
        break;
      case 2:
        uint64_t v12 = 0x4379616C70736964;
        unint64_t v11 = 0xEF74736172746E6FLL;
        break;
      case 3:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x737265746C6966;
        break;
      case 4:
        unint64_t v11 = 0xEA00000000007468;
        uint64_t v12 = 0x67696C6873616C66;
        break;
      case 5:
        uint64_t v12 = 0x6544656C706F6570;
        unint64_t v11 = 0xEF6E6F6974636574;
        break;
      case 6:
        uint64_t v12 = 0x636F4C7375636F66;
        unint64_t v11 = 0xE90000000000006BLL;
        break;
      case 7:
        unint64_t v11 = 0xEA00000000006570;
        uint64_t v12 = 0x79546172656D6163;
        break;
      case 8:
        uint64_t v12 = 0x4D65727574706163;
        unint64_t v11 = 0xEB0000000065646FLL;
        break;
      case 9:
        uint64_t v12 = 0x6F69746365746564;
        unint64_t v11 = 0xED000065646F4D6ELL;
        break;
      case 0xA:
        unsigned int v13 = 1919905636;
        goto LABEL_18;
      case 0xB:
        uint64_t v12 = 0xD000000000000013;
        unint64_t v11 = 0x8000000235969D10;
        break;
      case 0xC:
        uint64_t v12 = 0x7061436567616D69;
        unint64_t v11 = 0xEC0000006E6F6974;
        break;
      case 0xD:
        unint64_t v11 = 0xEA00000000006B61;
        uint64_t v12 = 0x657053746E696F70;
        break;
      case 0xE:
        unsigned int v13 = 1954047348;
LABEL_18:
        uint64_t v12 = v13 | 0x6574654400000000;
        unint64_t v11 = 0xED00006E6F697463;
        break;
      case 0xF:
        uint64_t v12 = 0x6F68706F7263696DLL;
        unint64_t v11 = 0xEA0000000000656ELL;
        break;
      case 0x10:
        unint64_t v11 = 0xEA00000000007365;
        uint64_t v12 = 0x6974697669746361;
        break;
      default:
        break;
    }
    unint64_t v14 = 0xEA0000000000726FLL;
    uint64_t v15 = 0x746361466D6F6F7ALL;
    switch(v10)
    {
      case 1:
        unint64_t v14 = 0x8000000235969F50;
        if (v12 == 0xD000000000000011) {
          goto LABEL_52;
        }
        goto LABEL_53;
      case 2:
        unint64_t v14 = 0xEF74736172746E6FLL;
        if (v12 != 0x4379616C70736964) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 3:
        unint64_t v14 = 0xE700000000000000;
        if (v12 != 0x737265746C6966) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 4:
        unint64_t v14 = 0xEA00000000007468;
        if (v12 != 0x67696C6873616C66) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 5:
        unint64_t v14 = 0xEF6E6F6974636574;
        if (v12 != 0x6544656C706F6570) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 6:
        unint64_t v14 = 0xE90000000000006BLL;
        if (v12 != 0x636F4C7375636F66) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 7:
        unint64_t v14 = 0xEA00000000006570;
        if (v12 != 0x79546172656D6163) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 8:
        unint64_t v14 = 0xEB0000000065646FLL;
        if (v12 != 0x4D65727574706163) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 9:
        uint64_t v16 = 0x6F69746365746564;
        uint64_t v17 = 0x65646F4D6ELL;
        goto LABEL_48;
      case 10:
        unsigned int v18 = 1919905636;
        goto LABEL_47;
      case 11:
        unint64_t v14 = 0x8000000235969D10;
        if (v12 != 0xD000000000000013) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 12:
        unint64_t v14 = 0xEC0000006E6F6974;
        if (v12 != 0x7061436567616D69) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 13:
        unint64_t v14 = 0xEA00000000006B61;
        if (v12 != 0x657053746E696F70) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 14:
        unsigned int v18 = 1954047348;
LABEL_47:
        uint64_t v16 = v18 | 0x6574654400000000;
        uint64_t v17 = 0x6E6F697463;
LABEL_48:
        unint64_t v14 = v17 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
        if (v12 != v16) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 15:
        uint64_t v15 = 0x6F68706F7263696DLL;
        unint64_t v14 = 0xEA0000000000656ELL;
        goto LABEL_51;
      case 16:
        unint64_t v14 = 0xEA00000000007365;
        if (v12 != 0x6974697669746361) {
          goto LABEL_53;
        }
        goto LABEL_52;
      default:
LABEL_51:
        if (v12 != v15) {
          goto LABEL_53;
        }
LABEL_52:
        if (v11 == v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_61;
        }
LABEL_53:
        char v19 = sub_23594AB78();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_58;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_61:
        uint64_t result = 0;
        char v21 = *(unsigned char *)(*(void *)(*v3 + 48) + v8);
LABEL_62:
        *a1 = v21;
        return result;
    }
  }
}

uint64_t sub_2356CF494(unsigned char *a1, uint64_t a2)
{
  return sub_2356D1164(a1, a2, &qword_268810418);
}

uint64_t sub_2356CF4A8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_235949AC8();
  sub_23594ACD8();
  swift_bridgeObjectRetain();
  sub_235949B88();
  uint64_t v7 = sub_23594AD28();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_2356D42B8((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_235949AC8();
  uint64_t v12 = v11;
  if (v10 == sub_235949AC8() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_23594AB78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_235949AC8();
        uint64_t v19 = v18;
        if (v17 == sub_235949AC8() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_23594AB78();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_2356CF6D4(_OWORD *a1, id *a2)
{
  uint64_t v3 = v2;
  id v57 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v5 - 8, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_235947978();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v14, v15, v16, v17);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v21, v22, v23, v24);
  uint64_t v26 = (char *)&v57 - v25;
  long long v27 = *((_OWORD *)a2 + 3);
  long long v61 = *((_OWORD *)a2 + 2);
  long long v62 = v27;
  long long v63 = *((_OWORD *)a2 + 4);
  long long v28 = *((_OWORD *)a2 + 1);
  long long v59 = *(_OWORD *)a2;
  long long v60 = v28;
  uint64_t v29 = *v3;
  sub_23594ACD8();
  id v30 = *a2;
  swift_bridgeObjectRetain();
  sub_2356DD6E0(a2);
  id v31 = objc_msgSend(v30, sel_identifier);
  if (!v31)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_11;
  }
  uint64_t v32 = v31;
  sub_235947958();

  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v33(v11, v19, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (result == 1)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v33(v26, v11, v12);
  sub_2356DD70C(a2);
  sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
  sub_2359499A8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
  uint64_t v35 = sub_23594AD28();
  uint64_t v36 = -1 << *(unsigned char *)(v29 + 32);
  unint64_t v37 = v35 & ~v36;
  if ((*(void *)(v29 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37))
  {
    uint64_t v38 = ~v36;
    while (1)
    {
      uint64_t v39 = *(void *)(v29 + 48) + 80 * v37;
      long long v40 = *(_OWORD *)(v39 + 16);
      long long v41 = *(_OWORD *)(v39 + 32);
      long long v42 = *(_OWORD *)(v39 + 48);
      long long v43 = *(_OWORD *)(v39 + 64);
      *(void *)&long long v64 = *(void *)v39;
      long long v65 = v40;
      long long v66 = v41;
      long long v67 = v42;
      long long v68 = v43;
      if (_s16MagnifierSupport14DetectedObjectV2eeoiySbAC_ACtFZ_0((void **)&v64, (id *)&v59)) {
        break;
      }
      unint64_t v37 = (v37 + 1) & v38;
      if (((*(void *)(v29 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();

    uint64_t v49 = *(void *)(*v3 + 48) + 80 * v37;
    uint64_t v50 = *(void **)v49;
    long long v51 = *(_OWORD *)(v49 + 16);
    long long v52 = *(_OWORD *)(v49 + 32);
    long long v53 = *(_OWORD *)(v49 + 48);
    long long v54 = *(_OWORD *)(v49 + 64);
    uint64_t v55 = v57;
    *(void *)id v57 = v50;
    v55[1] = v51;
    v55[2] = v52;
    v55[3] = v53;
    v55[4] = v54;
    id v56 = v50;
    return 0;
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v67 = v62;
    long long v68 = v63;
    long long v65 = v60;
    long long v66 = v61;
    long long v64 = v59;
    uint64_t v58 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2356DD6E0((id *)&v64);
    sub_2356D44E8((id *)&v64, v37, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v58;
    swift_bridgeObjectRelease();
    long long v45 = v67;
    long long v46 = v68;
    uint64_t v47 = v57;
    _OWORD v57[2] = v66;
    v47[3] = v45;
    void v47[4] = v46;
    long long v48 = v65;
    *uint64_t v47 = v64;
    v47[1] = v48;
    return 1;
  }
}

uint64_t sub_2356CFAE8(unsigned char *a1, char a2)
{
  return sub_2356D0FFC(a1, a2, &qword_268810540);
}

uint64_t sub_2356CFAFC(unsigned char *a1, uint64_t a2)
{
  return sub_2356D1164(a1, a2, &qword_268810428);
}

uint64_t sub_2356CFB10(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_235947978();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v2;
  sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  unint64_t v37 = a2;
  uint64_t v15 = sub_235949998();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  unint64_t v17 = v15 & ~v16;
  uint64_t v36 = v14 + 56;
  if ((*(void *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
  {
    uint64_t v32 = v2;
    uint64_t v33 = a1;
    uint64_t v34 = ~v16;
    uint64_t v31 = v7;
    uint64_t v20 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v35 = *(void *)(v19 + 56);
    uint64_t v21 = (void (**)(char *, uint64_t))(v19 - 8);
    v30[1] = v19 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v22 = v14;
      unint64_t v23 = v35 * v17;
      uint64_t v24 = v18;
      v18(v13, *(void *)(v14 + 48) + v35 * v17, v6);
      sub_2356DF564((unint64_t *)&unk_2688105B0, MEMORY[0x263F07508]);
      char v25 = sub_235949A18();
      uint64_t v26 = *v21;
      (*v21)(v13, v6);
      if (v25) {
        break;
      }
      unint64_t v17 = (v17 + 1) & v34;
      uint64_t v14 = v22;
      uint64_t v18 = v24;
      if (((*(void *)(v36 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v32;
        a1 = v33;
        uint64_t v7 = v31;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v26(v37, v6);
    v24(v33, *(void *)(*v32 + 48) + v23, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v28 = v37;
    v18(v13, v37, v6);
    uint64_t v38 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2356D4A14((uint64_t)v13, v17, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v38;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v28, v6);
    return 1;
  }
}

uint64_t sub_2356CFE34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a2;
  sub_2356DF92C(a2, (uint64_t)v90);
  uint64_t v64 = v90[1];
  uint64_t v65 = v90[0];
  uint64_t v62 = v90[3];
  uint64_t v63 = v90[2];
  uint64_t v60 = v90[5];
  uint64_t v61 = v90[4];
  uint64_t v58 = v90[7];
  uint64_t v59 = v90[6];
  uint64_t v56 = v90[9];
  uint64_t v57 = v90[8];
  uint64_t v55 = v90[10];
  int v54 = v91;
  uint64_t v6 = *v2;
  sub_2356DF92C(v4, (uint64_t)v76);
  sub_23594ACD8();
  swift_bridgeObjectRetain();
  FurnitureDetectionResult.hash(into:)((uint64_t)&v95);
  uint64_t v7 = sub_23594AD28();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v53 = v6 + 56;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    long long v45 = v2;
    uint64_t v46 = a1;
    uint64_t v51 = ~v8;
    uint64_t v52 = v6;
    uint64_t v67 = v4;
    for (uint64_t i = v4; ; uint64_t i = v67)
    {
      uint64_t v11 = 96 * v9;
      uint64_t v12 = *(void *)(v6 + 48) + 96 * v9;
      uint64_t v13 = *(void **)v12;
      uint64_t v14 = *(void *)(v12 + 8);
      uint64_t v16 = *(void **)(v12 + 16);
      uint64_t v15 = *(void **)(v12 + 24);
      uint64_t v18 = *(void **)(v12 + 32);
      unint64_t v17 = *(void **)(v12 + 40);
      uint64_t v20 = *(void **)(v12 + 48);
      uint64_t v19 = *(void **)(v12 + 56);
      uint64_t v21 = *(void **)(v12 + 64);
      uint64_t v22 = *(void **)(v12 + 72);
      uint64_t v23 = *(void *)(v12 + 80);
      LODWORD(v12) = *(_DWORD *)(v12 + 88);
      uint64_t v24 = v13;
      v76[0] = v13;
      v76[1] = v14;
      char v25 = v16;
      v76[2] = v16;
      v76[3] = v15;
      uint64_t v69 = v15;
      uint64_t v70 = v23;
      v76[4] = v18;
      v76[5] = v17;
      v76[6] = v20;
      os_log_type_t v71 = v19;
      v76[7] = v19;
      uint64_t v26 = v21;
      v76[8] = v21;
      long long v27 = v22;
      v76[9] = v22;
      v76[10] = v23;
      float v73 = *(float *)&v12;
      int v77 = v12;
      uint64_t v78 = v65;
      uint64_t v79 = v64;
      uint64_t v80 = v63;
      uint64_t v81 = v62;
      uint64_t v82 = v61;
      uint64_t v83 = v60;
      uint64_t v84 = v59;
      uint64_t v85 = v58;
      uint64_t v86 = v57;
      uint64_t v87 = v56;
      uint64_t v88 = v55;
      int v89 = v54;
      uint64_t v72 = v14;
      unint64_t v68 = v9;
      if (v14 < 0)
      {
        uint64_t v30 = i;
        sub_2356DF92C(i, (uint64_t)&v95);
        if ((*(void *)v96 & 0x8000000000000000) == 0) {
          goto LABEL_14;
        }
        uint64_t v47 = v11;
        float v50 = v96[0];
        *(void *)v96 &= ~0x8000000000000000;
        uint64_t v66 = v95;
        sub_2356DF7EC(v24, v72);
        sub_2356DFA5C(i, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF7EC);
        sub_2356DF7EC(v24, v72);
        LOBYTE(v66) = sub_235805E30((uint64_t)v24, v66);
        sub_2356DF988((uint64_t)v76);
        sub_2356DF828(v24, v72);
        uint64_t v6 = v52;
        if ((v66 & 1) != 0 && v50 == *(float *)&v72)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          sub_2356DFA5C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF828);
          uint64_t v33 = *(void *)(*v45 + 48) + v47;
          uint64_t v34 = *(void **)v33;
          uint64_t v35 = *(void *)(v33 + 8);
          uint64_t v36 = *(void *)(v33 + 16);
          uint64_t v37 = *(void *)(v33 + 24);
          uint64_t v38 = *(void *)(v33 + 32);
          uint64_t v39 = *(void *)(v33 + 40);
          uint64_t v40 = *(void *)(v33 + 48);
          uint64_t v41 = *(void *)(v33 + 56);
          uint64_t v42 = *(void *)(v33 + 64);
          uint64_t v43 = *(void *)(v33 + 72);
          uint64_t v44 = *(void *)(v33 + 80);
          LODWORD(v33) = *(_DWORD *)(v33 + 88);
          *(void *)uint64_t v46 = v34;
          *(void *)(v46 + 8) = v35;
          *(void *)(v46 + 16) = v36;
          *(void *)(v46 + 24) = v37;
          *(void *)(v46 + 32) = v38;
          *(void *)(v46 + 40) = v39;
          *(void *)(v46 + 48) = v40;
          *(void *)(v46 + 56) = v41;
          *(void *)(v46 + 64) = v42;
          *(void *)(v46 + 72) = v43;
          *(void *)(v46 + 80) = v44;
          *(_DWORD *)(v46 + 88) = v33;
          sub_2356DF7EC(v34, v35);
          return 0;
        }
      }
      else
      {
        sub_2356DF92C(i, (uint64_t)v92);
        if ((*((void *)&v92[0] + 1) & 0x8000000000000000) != 0)
        {
          *((void *)&v92[0] + 1) &= ~0x8000000000000000;
          uint64_t v30 = i;
LABEL_14:
          sub_2356DFA5C(v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF7EC);
          sub_2356DF7EC(v24, v72);
          sub_2356DF988((uint64_t)v76);
LABEL_16:
          uint64_t v6 = v52;
          goto LABEL_17;
        }
        v74[2] = v92[2];
        v74[3] = v92[3];
        void v74[4] = v92[4];
        v74[0] = v92[0];
        v74[1] = v92[1];
        uint64_t v47 = 96 * v9;
        uint64_t v48 = v93;
        float v28 = v94;
        v75[0] = v24;
        v75[2] = v25;
        v75[3] = v69;
        v75[4] = v18;
        v75[5] = v17;
        v75[8] = v26;
        v75[9] = v27;
        v75[6] = v20;
        v75[7] = v71;
        sub_2356DF7EC(v24, v72);
        sub_2356DFA5C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF7EC);
        sub_2356DF7EC(v24, v72);
        sub_2356DFA5C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF7EC);
        sub_2356DF7EC(v24, v72);
        if ((_s16MagnifierSupport14DetectedObjectV2eeoiySbAC_ACtFZ_0(v75, (id *)v74) & 1) == 0)
        {
          sub_2356DF988((uint64_t)v76);
          sub_2356DFA5C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF828);
          sub_2356DF828(v24, v72);
          sub_2356DF828(v24, v72);
          goto LABEL_16;
        }
        sub_2358067C0(v70, v48);
        char v49 = v29;
        sub_2356DF988((uint64_t)v76);
        sub_2356DFA5C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF828);
        sub_2356DF828(v24, v72);
        sub_2356DF828(v24, v72);
        uint64_t v6 = v52;
        if ((v49 & 1) != 0 && v28 == v73) {
          goto LABEL_22;
        }
      }
LABEL_17:
      unint64_t v9 = (v68 + 1) & v51;
      if (((*(void *)(v53 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v45;
        a1 = v46;
        uint64_t v4 = v67;
        goto LABEL_21;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v76[0] = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_2356DFA5C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF7EC);
  sub_2356D4CB4(v4, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v76[0];
  swift_bridgeObjectRelease();
  sub_2356DF92C(v4, a1);
  return 1;
}

uint64_t sub_2356D0604(_OWORD *a1, long long *a2)
{
  uint64_t v67 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_235947978();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13, v14, v15, v16);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  unint64_t v68 = (char *)&v65 - v24;
  uint64_t v66 = v2;
  uint64_t v25 = *v2;
  sub_23594ACD8();
  long long v26 = a2[1];
  long long v71 = *a2;
  long long v72 = v26;
  long long v27 = a2[3];
  long long v73 = a2[2];
  long long v74 = v27;
  long long v75 = a2[4];
  float v28 = (void *)v71;
  sub_2356DD6E0((id *)&v71);
  sub_2356DD6E0((id *)&v71);
  swift_bridgeObjectRetain();
  id v29 = objc_msgSend(v28, sel_identifier);
  if (!v29)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_13;
  }
  uint64_t v30 = v29;
  sub_235947958();

  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v31(v10, v18, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v33 = *((void *)a2 + 10);
  float v34 = *((float *)a2 + 22);
  uint64_t v35 = v68;
  v31(v68, v10, v11);
  sub_2356DD70C((id *)&v71);
  sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
  sub_2359499A8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v35, v11);
  sub_2356DD70C((id *)&v71);
  swift_bridgeObjectRetain();
  sub_23571CECC(v70, v33);
  swift_bridgeObjectRelease();
  sub_23594AD08();
  uint64_t v36 = sub_23594AD28();
  uint64_t v37 = -1 << *(unsigned char *)(v25 + 32);
  unint64_t v38 = v36 & ~v37;
  if ((*(void *)(v25 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38))
  {
    uint64_t v39 = ~v37;
    do
    {
      uint64_t v40 = *(void *)(v25 + 48) + 96 * v38;
      long long v41 = *(_OWORD *)(v40 + 16);
      long long v42 = *(_OWORD *)(v40 + 32);
      long long v43 = *(_OWORD *)(v40 + 48);
      long long v44 = *(_OWORD *)(v40 + 64);
      uint64_t v45 = *(void *)(v40 + 80);
      float v46 = *(float *)(v40 + 88);
      *(void *)&v70[0] = *(void *)v40;
      v70[1] = v41;
      v70[2] = v42;
      v70[3] = v43;
      v70[4] = v44;
      v69[2] = v73;
      v69[3] = v74;
      v69[4] = v75;
      v69[1] = v72;
      v69[0] = v71;
      id v47 = *(id *)&v70[0];
      swift_bridgeObjectRetain();
      if (_s16MagnifierSupport14DetectedObjectV2eeoiySbAC_ACtFZ_0((void **)v70, (id *)v69))
      {
        sub_2358067C0(v45, v33);
        char v49 = v48;
        swift_bridgeObjectRelease();

        if ((v49 & 1) != 0 && v46 == v34)
        {
          swift_bridgeObjectRelease();
          sub_2356DF404((void **)a2);
          uint64_t v50 = *(void *)(*v66 + 48) + 96 * v38;
          uint64_t v51 = *(void **)v50;
          long long v52 = *(_OWORD *)(v50 + 16);
          long long v53 = *(_OWORD *)(v50 + 32);
          long long v54 = *(_OWORD *)(v50 + 48);
          long long v55 = *(_OWORD *)(v50 + 64);
          uint64_t v56 = *(void *)(v50 + 80);
          int v57 = *(_DWORD *)(v50 + 88);
          uint64_t v58 = v67;
          *(void *)uint64_t v67 = v51;
          v58[1] = v52;
          v58[2] = v53;
          v58[3] = v54;
          v58[4] = v55;
          *((void *)v58 + 10) = v56;
          *((_DWORD *)v58 + 22) = v57;
          id v59 = v51;
          swift_bridgeObjectRetain();
          return 0;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      unint64_t v38 = (v38 + 1) & v39;
    }
    while (((*(void *)(v25 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  uint64_t v60 = v66;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v70[0] = *v60;
  *uint64_t v60 = 0x8000000000000000;
  sub_2356DF3CC((id *)a2);
  sub_2356D5398(a2, v38, isUniquelyReferenced_nonNull_native);
  *uint64_t v60 = *(void *)&v70[0];
  swift_bridgeObjectRelease();
  long long v62 = a2[3];
  uint64_t v63 = v67;
  v67[2] = a2[2];
  v63[3] = v62;
  void v63[4] = a2[4];
  *(_OWORD *)((char *)v63 + 76) = *(long long *)((char *)a2 + 76);
  long long v64 = a2[1];
  uint64_t result = 1;
  *uint64_t v63 = *a2;
  v63[1] = v64;
  return result;
}

uint64_t sub_2356D0B10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Occupant();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v15, v16, v17, v18);
  uint64_t v31 = (char *)&v29 - v19;
  uint64_t v20 = *v2;
  sub_23594ACD8();
  sub_235947978();
  sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  sub_2359499A8();
  uint64_t v21 = sub_23594AD28();
  uint64_t v22 = -1 << *(unsigned char *)(v20 + 32);
  unint64_t v23 = v21 & ~v22;
  if ((*(void *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
  {
    uint64_t v30 = a1;
    uint64_t v24 = ~v22;
    uint64_t v25 = *(void *)(v7 + 72);
    do
    {
      sub_2356DF258(*(void *)(v20 + 48) + v25 * v23, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Occupant);
      if (sub_235947948() & 1) != 0 && (sub_2359478C8())
      {
        sub_2356DF1F8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Occupant);
        swift_bridgeObjectRelease();
        sub_2356DF1F8(a2, (uint64_t (*)(void))type metadata accessor for Occupant);
        sub_2356DF258(*(void *)(*v3 + 48) + v25 * v23, v30, (uint64_t (*)(void))type metadata accessor for Occupant);
        return 0;
      }
      sub_2356DF1F8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Occupant);
      unint64_t v23 = (v23 + 1) & v24;
    }
    while (((*(void *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) != 0);
    swift_bridgeObjectRelease();
    a1 = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = (uint64_t)v31;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2356DF258(a2, v27, (uint64_t (*)(void))type metadata accessor for Occupant);
  uint64_t v32 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_2356D5848(v27, v23, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v32;
  swift_bridgeObjectRelease();
  sub_2356DF2C0(a2, a1);
  return 1;
}

uint64_t sub_2356D0E10(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_23594ACD8();
  swift_bridgeObjectRetain();
  sub_235949B88();
  uint64_t v8 = sub_23594AD28();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_23594AB78() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_23594AB78() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2356D5AE4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2356D0FC0(unsigned char *a1, uint64_t a2)
{
  return sub_2356D1164(a1, a2, &qword_268810568);
}

uint64_t sub_2356D0FD4(unsigned char *a1, uint64_t a2)
{
  return sub_2356D1164(a1, a2, &qword_268810438);
}

uint64_t sub_2356D0FE8(unsigned char *a1, char a2)
{
  return sub_2356D0FFC(a1, a2, &qword_268810408);
}

uint64_t sub_2356D0FFC(unsigned char *a1, char a2, uint64_t *a3)
{
  uint64_t v6 = a2 & 1;
  uint64_t v7 = *v3;
  sub_23594ACD8();
  sub_23594ACE8();
  uint64_t v8 = sub_23594AD28();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2356D5C80(v6, v10, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if ((((v6 == 0) ^ *(unsigned __int8 *)(v11 + v10)) & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while ((((v6 == 0) ^ *(unsigned __int8 *)(v11 + v10)) & 1) == 0);
  }
  uint64_t result = 0;
  LOBYTE(v6) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = v6;
  return result;
}

uint64_t sub_2356D1150(unsigned char *a1, uint64_t a2)
{
  return sub_2356D1164(a1, a2, &qword_2688103F8);
}

uint64_t sub_2356D1164(unsigned char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  sub_23594ACD8();
  sub_23594ACE8();
  uint64_t v8 = sub_23594AD28();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2356D48B8(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2356D129C(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x237DE8C50](*(void *)(v6 + 40), a2, 4);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2356D5DF4(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v10 + 4 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2356D13A0()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15590);
  uint64_t v3 = sub_23594A7D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain_n();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_31;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v21 = v19 + 2;
        if (v21 >= v9) {
          break;
        }
        unint64_t v20 = v6[v21];
        if (!v20)
        {
          while (1)
          {
            int64_t v11 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_38;
            }
            if (v11 >= v9) {
              goto LABEL_32;
            }
            unint64_t v20 = v6[v11];
            ++v21;
            if (v20) {
              goto LABEL_30;
            }
          }
        }
        int64_t v11 = v21;
      }
    }
LABEL_30:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_31:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_23594ACD8();
    sub_235949B88();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_23594AD28();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x2356D1868);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_32:
  swift_release_n();
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  id v1 = v0;
  *(void *)(v2 + 16) = 0;
LABEL_36:
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

uint64_t sub_2356D18AC()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810608);
  uint64_t v3 = sub_23594A7D8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = sub_2359470F8();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                id v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_235949AC8();
      sub_23594ACD8();
      sub_235949B88();
      uint64_t v18 = sub_23594AD28();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

unint64_t sub_2356D1BC0()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810610);
  uint64_t v3 = sub_23594A7D8();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = sub_2359470F8();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v16 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_22;
        }
        unint64_t v17 = v5[v16];
        ++v10;
        if (!v17)
        {
          int64_t v10 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v17 = v5[v10];
          if (!v17)
          {
            int64_t v10 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v17 = v5[v10];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v19 = 1 << *(unsigned char *)(v2 + 32);
                if (v19 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v5 = -1 << v19;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v5[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v10 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_28;
                  }
                  if (v10 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v17 = v5[v10];
                  ++v18;
                  if (v17) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v10 = v18;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v10 << 6);
      }
      unint64_t v13 = (_OWORD *)(*(void *)(v2 + 48) + 80 * v12);
      long long v14 = v13[3];
      v20[2] = v13[2];
      v20[3] = v14;
      void v20[4] = v13[4];
      long long v15 = v13[1];
      v20[0] = *v13;
      v20[1] = v15;
      unint64_t result = sub_2356D35AC((uint64_t)v20, v3);
    }
  }
  unint64_t result = swift_release();
  *id v1 = v3;
  return result;
}

uint64_t sub_2356D1DB4()
{
  id v1 = v0;
  uint64_t v46 = sub_235947978();
  uint64_t v2 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46, v3, v4, v5, v6);
  uint64_t v45 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F4D0);
  uint64_t v9 = sub_23594A7D8();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 56);
    long long v41 = (void *)(v8 + 56);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    uint64_t v39 = v0;
    int64_t v40 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v43 = v2;
    uint64_t v15 = v9 + 56;
    uint64_t result = sub_2359470F8();
    int64_t v17 = 0;
    uint64_t v42 = v10;
    int64_t v18 = v45;
    uint64_t v19 = v46;
    while (1)
    {
      if (v14)
      {
        unint64_t v21 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        int64_t v44 = v17;
        unint64_t v22 = v21 | (v17 << 6);
      }
      else
      {
        int64_t v23 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v23 >= v40) {
          goto LABEL_33;
        }
        unint64_t v24 = v41[v23];
        int64_t v25 = v17 + 1;
        if (!v24)
        {
          int64_t v25 = v17 + 2;
          if (v17 + 2 >= v40) {
            goto LABEL_33;
          }
          unint64_t v24 = v41[v25];
          if (!v24)
          {
            int64_t v25 = v17 + 3;
            if (v17 + 3 >= v40) {
              goto LABEL_33;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              uint64_t v26 = v17 + 4;
              if (v17 + 4 >= v40)
              {
LABEL_33:
                swift_release();
                id v1 = v39;
                uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
                if (v38 > 63) {
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v41 = -1 << v38;
                }
                *(void *)(v8 + 16) = 0;
                break;
              }
              unint64_t v24 = v41[v26];
              if (!v24)
              {
                while (1)
                {
                  int64_t v25 = v26 + 1;
                  if (__OFADD__(v26, 1)) {
                    goto LABEL_39;
                  }
                  if (v25 >= v40) {
                    goto LABEL_33;
                  }
                  unint64_t v24 = v41[v25];
                  ++v26;
                  if (v24) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v25 = v17 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v14 = (v24 - 1) & v24;
        int64_t v44 = v25;
        unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
      }
      uint64_t v27 = v8;
      uint64_t v28 = *(void *)(v8 + 48);
      uint64_t v29 = *(void *)(v43 + 72);
      uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v18, v28 + v29 * v22, v19);
      uint64_t v10 = v42;
      sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
      uint64_t result = sub_235949998();
      uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v15 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v20 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(void *)(v10 + 48) + v20 * v29, v45, v46);
      ++*(void *)(v10 + 16);
      uint64_t v8 = v27;
      int64_t v17 = v44;
    }
  }
  uint64_t result = swift_release();
  *id v1 = v10;
  return result;
}

uint64_t sub_2356D21B0()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688106A8);
  uint64_t v3 = sub_23594A7D8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v38 = v1;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v40 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v39 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = sub_2359470F8();
    int64_t v10 = 0;
    uint64_t v41 = v2;
    while (1)
    {
      if (v7)
      {
        uint64_t v47 = (v7 - 1) & v7;
        int64_t v48 = v10;
        unint64_t v13 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v39) {
          goto LABEL_33;
        }
        unint64_t v15 = v40[v14];
        int64_t v16 = v10 + 1;
        if (!v15)
        {
          int64_t v16 = v10 + 2;
          if (v10 + 2 >= v39) {
            goto LABEL_33;
          }
          unint64_t v15 = v40[v16];
          if (!v15)
          {
            int64_t v16 = v10 + 3;
            if (v10 + 3 >= v39) {
              goto LABEL_33;
            }
            unint64_t v15 = v40[v16];
            if (!v15)
            {
              uint64_t v17 = v10 + 4;
              if (v10 + 4 >= v39)
              {
LABEL_33:
                swift_release();
                id v1 = v38;
                uint64_t v37 = 1 << *(unsigned char *)(v2 + 32);
                if (v37 > 63) {
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v40 = -1 << v37;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v40[v17];
              if (!v15)
              {
                while (1)
                {
                  int64_t v16 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v16 >= v39) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v40[v16];
                  ++v17;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v16 = v10 + 4;
            }
          }
        }
LABEL_23:
        uint64_t v47 = (v15 - 1) & v15;
        int64_t v48 = v16;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 96 * v13;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      uint64_t v22 = *(void *)(v18 + 16);
      uint64_t v21 = *(void *)(v18 + 24);
      uint64_t v24 = *(void *)(v18 + 32);
      uint64_t v23 = *(void *)(v18 + 40);
      uint64_t v25 = *(void *)(v18 + 48);
      uint64_t v26 = *(void *)(v18 + 56);
      uint64_t v27 = *(void *)(v18 + 64);
      uint64_t v28 = *(void *)(v18 + 72);
      uint64_t v29 = *(void *)(v18 + 80);
      LODWORD(v18) = *(_DWORD *)(v18 + 88);
      uint64_t v50 = v19;
      uint64_t v51 = v20;
      uint64_t v52 = v22;
      uint64_t v53 = v21;
      uint64_t v54 = v24;
      uint64_t v55 = v23;
      uint64_t v45 = v27;
      uint64_t v46 = v23;
      uint64_t v56 = v25;
      uint64_t v57 = v26;
      uint64_t v58 = v27;
      uint64_t v59 = v28;
      uint64_t v43 = v29;
      uint64_t v44 = v28;
      uint64_t v60 = v29;
      int v42 = v18;
      int v61 = v18;
      sub_23594ACD8();
      FurnitureDetectionResult.hash(into:)((uint64_t)v49);
      uint64_t result = sub_23594AD28();
      uint64_t v30 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v8 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v31) & ~*(void *)(v8 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v8 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v11 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 96 * v11;
      *(void *)uint64_t v12 = v19;
      *(void *)(v12 + 8) = v20;
      *(void *)(v12 + 16) = v22;
      *(void *)(v12 + 24) = v21;
      unint64_t v7 = v47;
      *(void *)(v12 + 32) = v24;
      *(void *)(v12 + 40) = v46;
      *(void *)(v12 + 48) = v25;
      *(void *)(v12 + 56) = v26;
      *(void *)(v12 + 64) = v45;
      *(void *)(v12 + 72) = v44;
      *(void *)(v12 + 80) = v43;
      *(_DWORD *)(v12 + 88) = v42;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v41;
      int64_t v10 = v48;
    }
  }
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

unint64_t sub_2356D253C()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810650);
  uint64_t v3 = sub_23594A7D8();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = sub_2359470F8();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v16 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_22;
        }
        unint64_t v17 = v5[v16];
        ++v10;
        if (!v17)
        {
          int64_t v10 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v17 = v5[v10];
          if (!v17)
          {
            int64_t v10 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v17 = v5[v10];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v19 = 1 << *(unsigned char *)(v2 + 32);
                if (v19 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v5 = -1 << v19;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v5[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v10 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_28;
                  }
                  if (v10 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v17 = v5[v10];
                  ++v18;
                  if (v17) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v10 = v18;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v10 << 6);
      }
      unint64_t v13 = (_OWORD *)(*(void *)(v2 + 48) + 96 * v12);
      long long v14 = v13[3];
      v20[2] = v13[2];
      v20[3] = v14;
      v21[0] = v13[4];
      *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)((char *)v13 + 76);
      long long v15 = v13[1];
      v20[0] = *v13;
      v20[1] = v15;
      unint64_t result = sub_2356D38A0((uint64_t)v20, v3);
    }
  }
  unint64_t result = swift_release();
  *id v1 = v3;
  return result;
}

uint64_t sub_2356D2738()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Occupant();
  uint64_t v38 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  int64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810580);
  uint64_t v10 = sub_23594A7D8();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    BOOL v35 = v0;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v37 = (void *)(v9 + 56);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v36 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v16 = v10 + 56;
    uint64_t result = sub_2359470F8();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v37[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v37[v18];
          if (!v23)
          {
            int64_t v18 = v22 + 2;
            if (v22 + 2 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = v37[v18];
            if (!v23)
            {
              int64_t v24 = v22 + 3;
              if (v24 >= v36)
              {
LABEL_33:
                swift_release();
                id v1 = v35;
                uint64_t v33 = 1 << *(unsigned char *)(v9 + 32);
                if (v33 > 63) {
                  bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v33;
                }
                *(void *)(v9 + 16) = 0;
                break;
              }
              unint64_t v23 = v37[v24];
              if (!v23)
              {
                while (1)
                {
                  int64_t v18 = v24 + 1;
                  if (__OFADD__(v24, 1)) {
                    goto LABEL_39;
                  }
                  if (v18 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v23 = v37[v18];
                  ++v24;
                  if (v23) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v18 = v24;
            }
          }
        }
LABEL_23:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v38 + 72);
      sub_2356DF2C0(*(void *)(v9 + 48) + v25 * v21, (uint64_t)v8);
      sub_23594ACD8();
      sub_235947978();
      sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
      sub_2359499A8();
      uint64_t result = sub_23594AD28();
      uint64_t v26 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v19 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = sub_2356DF2C0((uint64_t)v8, *(void *)(v11 + 48) + v19 * v25);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v1 = v11;
  return result;
}

uint64_t sub_2356D2AFC()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810680);
  uint64_t v3 = sub_23594A7D8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = sub_2359470F8();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                id v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_23594ACD8();
      sub_235949B88();
      uint64_t result = sub_23594AD28();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

uint64_t sub_2356D2DDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_23594A7D8();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    int64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
      sub_23594ACD8();
      sub_23594ACE8();
      uint64_t result = sub_23594AD28();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_2356D3084()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810450);
  uint64_t v3 = sub_23594A7D8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = sub_2359470F8();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                id v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_23594A4A8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

uint64_t sub_2356D3324()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15598);
  uint64_t result = sub_23594A7D8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                id v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      uint64_t result = MEMORY[0x237DE8C50](*(void *)(v4 + 40), v18, 4);
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

unint64_t sub_2356D35AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  int64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_235947978();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13, v14, v15, v16);
  unsigned int v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&v35 - v24;
  sub_23594ACD8();
  id v26 = *(id *)a1;
  sub_2356DD6E0((id *)a1);
  id v27 = objc_msgSend(v26, sel_identifier);
  if (v27)
  {
    uint64_t v28 = v27;
    sub_235947958();

    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v29(v10, v18, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    if (result != 1)
    {
      v29(v25, v10, v11);
      sub_2356DD70C((id *)a1);
      sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
      sub_2359499A8();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v11);
      sub_23594AD28();
      unint64_t result = sub_23594A6F8();
      *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      BOOL v31 = (_OWORD *)(*(void *)(a2 + 48) + 80 * result);
      _OWORD *v31 = *(_OWORD *)a1;
      long long v32 = *(_OWORD *)(a1 + 16);
      long long v33 = *(_OWORD *)(a1 + 32);
      long long v34 = *(_OWORD *)(a1 + 64);
      v31[3] = *(_OWORD *)(a1 + 48);
      v31[4] = v34;
      v31[1] = v32;
      void v31[2] = v33;
      ++*(void *)(a2 + 16);
      return result;
    }
  }
  else
  {
    unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  __break(1u);
  return result;
}

unint64_t sub_2356D38A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v4 - 8, v5, v6, v7, v8);
  int64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_235947978();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13, v14, v15, v16);
  unsigned int v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&v37 - v24;
  sub_23594ACD8();
  long long v26 = *(_OWORD *)(a1 + 16);
  v39[0] = *(_OWORD *)a1;
  v39[1] = v26;
  long long v27 = *(_OWORD *)(a1 + 48);
  v39[2] = *(_OWORD *)(a1 + 32);
  double v39[3] = v27;
  v39[4] = *(_OWORD *)(a1 + 64);
  uint64_t v28 = *(void **)&v39[0];
  sub_2356DD6E0((id *)v39);
  sub_2356DD6E0((id *)v39);
  id v29 = objc_msgSend(v28, sel_identifier);
  if (v29)
  {
    unint64_t v30 = v29;
    sub_235947958();

    BOOL v31 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v31(v10, v18, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    if (result != 1)
    {
      uint64_t v33 = *(void *)(a1 + 80);
      v31(v25, v10, v11);
      sub_2356DD70C((id *)v39);
      sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
      sub_2359499A8();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v11);
      sub_2356DD70C((id *)v39);
      swift_bridgeObjectRetain();
      sub_23571CECC(v38, v33);
      swift_bridgeObjectRelease();
      sub_23594AD08();
      sub_23594AD28();
      unint64_t result = sub_23594A6F8();
      *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      long long v34 = (_OWORD *)(*(void *)(a2 + 48) + 96 * result);
      long long v35 = *(_OWORD *)(a1 + 48);
      v34[2] = *(_OWORD *)(a1 + 32);
      v34[3] = v35;
      v34[4] = *(_OWORD *)(a1 + 64);
      *(_OWORD *)((char *)v34 + 76) = *(_OWORD *)(a1 + 76);
      long long v36 = *(_OWORD *)(a1 + 16);
      *long long v34 = *(_OWORD *)a1;
      v34[1] = v36;
      ++*(void *)(a2 + 16);
      return result;
    }
  }
  else
  {
    unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  __break(1u);
  return result;
}

uint64_t sub_2356D3BF4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unsigned __int8 v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  char v25 = result;
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_2356D13A0();
    }
    else
    {
      if (v8 > v7)
      {
        unint64_t result = (uint64_t)sub_2356D5F1C();
        goto LABEL_65;
      }
      sub_2356D720C();
    }
    uint64_t v9 = *v3;
    sub_23594ACD8();
    Control.rawValue.getter();
    sub_235949B88();
    swift_bridgeObjectRelease();
    unint64_t result = sub_23594AD28();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      uint64_t v12 = v6;
      while (2)
      {
        unint64_t v13 = 0xEA0000000000726FLL;
        uint64_t v14 = 0x746361466D6F6F7ALL;
        switch(*(unsigned char *)(*(void *)(v9 + 48) + a2))
        {
          case 1:
            unint64_t v13 = 0x8000000235969F50;
            uint64_t v14 = 0xD000000000000011;
            break;
          case 2:
            uint64_t v14 = 0x4379616C70736964;
            unint64_t v13 = 0xEF74736172746E6FLL;
            break;
          case 3:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x737265746C6966;
            break;
          case 4:
            unint64_t v13 = 0xEA00000000007468;
            uint64_t v14 = 0x67696C6873616C66;
            break;
          case 5:
            uint64_t v14 = 0x6544656C706F6570;
            unint64_t v13 = 0xEF6E6F6974636574;
            break;
          case 6:
            uint64_t v14 = 0x636F4C7375636F66;
            unint64_t v13 = 0xE90000000000006BLL;
            break;
          case 7:
            unint64_t v13 = 0xEA00000000006570;
            uint64_t v14 = 0x79546172656D6163;
            break;
          case 8:
            uint64_t v14 = 0x4D65727574706163;
            unint64_t v13 = 0xEB0000000065646FLL;
            break;
          case 9:
            uint64_t v14 = 0x6F69746365746564;
            unint64_t v13 = 0xED000065646F4D6ELL;
            break;
          case 0xA:
            unsigned int v15 = 1919905636;
            goto LABEL_26;
          case 0xB:
            uint64_t v14 = 0xD000000000000013;
            unint64_t v13 = 0x8000000235969D10;
            break;
          case 0xC:
            uint64_t v14 = 0x7061436567616D69;
            unint64_t v13 = 0xEC0000006E6F6974;
            break;
          case 0xD:
            unint64_t v13 = 0xEA00000000006B61;
            uint64_t v14 = 0x657053746E696F70;
            break;
          case 0xE:
            unsigned int v15 = 1954047348;
LABEL_26:
            uint64_t v14 = v15 | 0x6574654400000000;
            unint64_t v13 = 0xED00006E6F697463;
            break;
          case 0xF:
            uint64_t v14 = 0x6F68706F7263696DLL;
            unint64_t v13 = 0xEA0000000000656ELL;
            break;
          case 0x10:
            unint64_t v13 = 0xEA00000000007365;
            uint64_t v14 = 0x6974697669746361;
            break;
          default:
            break;
        }
        unint64_t v16 = 0xEA0000000000726FLL;
        uint64_t v17 = 0x746361466D6F6F7ALL;
        switch(v12)
        {
          case 1:
            unint64_t v16 = 0x8000000235969F50;
            if (v14 != 0xD000000000000011) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 2:
            unint64_t v16 = 0xEF74736172746E6FLL;
            if (v14 != 0x4379616C70736964) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 3:
            unint64_t v16 = 0xE700000000000000;
            if (v14 != 0x737265746C6966) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 4:
            unint64_t v16 = 0xEA00000000007468;
            if (v14 != 0x67696C6873616C66) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 5:
            unint64_t v16 = 0xEF6E6F6974636574;
            if (v14 != 0x6544656C706F6570) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 6:
            unint64_t v16 = 0xE90000000000006BLL;
            if (v14 != 0x636F4C7375636F66) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 7:
            unint64_t v16 = 0xEA00000000006570;
            if (v14 != 0x79546172656D6163) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 8:
            unint64_t v16 = 0xEB0000000065646FLL;
            if (v14 != 0x4D65727574706163) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 9:
            uint64_t v18 = 0x6F69746365746564;
            uint64_t v19 = 0x65646F4D6ELL;
            goto LABEL_39;
          case 10:
            uint64_t v17 = 0x65746544726F6F64;
            unint64_t v16 = 0xED00006E6F697463;
            goto LABEL_58;
          case 11:
            unint64_t v16 = 0x8000000235969D10;
            if (v14 != 0xD000000000000013) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 12:
            unint64_t v16 = 0xEC0000006E6F6974;
            if (v14 != 0x7061436567616D69) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 13:
            unint64_t v16 = 0xEA00000000006B61;
            if (v14 != 0x657053746E696F70) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 14:
            uint64_t v18 = 0x6574654474786574;
            uint64_t v19 = 0x6E6F697463;
LABEL_39:
            unint64_t v16 = v19 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
            if (v14 != v18) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 15:
            unint64_t v16 = 0xEA0000000000656ELL;
            if (v14 != 0x6F68706F7263696DLL) {
              goto LABEL_60;
            }
            goto LABEL_59;
          case 16:
            unint64_t v16 = 0xEA00000000007365;
            if (v14 != 0x6974697669746361) {
              goto LABEL_60;
            }
            goto LABEL_59;
          default:
LABEL_58:
            if (v14 != v17) {
              goto LABEL_60;
            }
LABEL_59:
            if (v13 == v16) {
              goto LABEL_68;
            }
LABEL_60:
            char v20 = sub_23594AB78();
            swift_bridgeObjectRelease();
            unint64_t result = swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_69;
            }
            a2 = (a2 + 1) & v11;
            if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_65:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v21 + 48) + a2) = v25;
  uint64_t v22 = *(void *)(v21 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_68:
    swift_bridgeObjectRelease_n();
LABEL_69:
    sub_23594ABF8();
    __break(1u);
    JUMPOUT(0x2356D4230);
  }
  *(void *)(v21 + 16) = v24;
  return result;
}

uint64_t sub_2356D42B8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_2356D18AC();
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = (uint64_t)sub_2356D60A8();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_2356D76DC();
  }
  uint64_t v9 = *v3;
  sub_235949AC8();
  sub_23594ACD8();
  sub_235949B88();
  uint64_t v10 = sub_23594AD28();
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_235949AC8();
  uint64_t v14 = v13;
  if (v12 == sub_235949AC8() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_23594AB78();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = sub_235949AC8();
      uint64_t v21 = v20;
      if (v19 == sub_235949AC8() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_23594AB78();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for OU3DObjectType(0);
  unint64_t result = sub_23594ABF8();
  __break(1u);
  return result;
}

void sub_2356D44E8(id *a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v8 - 8, v9, v10, v11, v12);
  uint64_t v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_235947978();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15, v17, v18, v19, v20);
  uint64_t v22 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23, v24, v25, v26, v27);
  id v29 = (char *)v56 - v28;
  long long v30 = *((_OWORD *)a1 + 3);
  long long v63 = *((_OWORD *)a1 + 2);
  long long v64 = v30;
  long long v65 = *((_OWORD *)a1 + 4);
  long long v31 = *((_OWORD *)a1 + 1);
  long long v61 = *(_OWORD *)a1;
  long long v62 = v31;
  unint64_t v32 = *(void *)(*v4 + 16);
  unint64_t v33 = *(void *)(*v4 + 24);
  if (v33 > v32 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2356D1BC0();
    goto LABEL_8;
  }
  if (v33 > v32)
  {
    sub_2356D6254();
LABEL_14:
    uint64_t v47 = *v4;
    *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
    uint64_t v48 = *(void *)(v47 + 48) + 80 * a2;
    long long v49 = v62;
    long long v50 = v63;
    long long v51 = v64;
    long long v52 = v65;
    *(void *)uint64_t v48 = v61;
    *(_OWORD *)(v48 + 16) = v49;
    *(_OWORD *)(v48 + 32) = v50;
    *(_OWORD *)(v48 + 48) = v51;
    *(_OWORD *)(v48 + 64) = v52;
    uint64_t v53 = *(void *)(v47 + 16);
    BOOL v54 = __OFADD__(v53, 1);
    uint64_t v55 = v53 + 1;
    if (!v54)
    {
      *(void *)(v47 + 16) = v55;
      return;
    }
    __break(1u);
    goto LABEL_17;
  }
  sub_2356D79BC();
LABEL_8:
  uint64_t v34 = *v4;
  sub_23594ACD8();
  id v35 = *a1;
  sub_2356DD6E0(a1);
  id v36 = objc_msgSend(v35, sel_identifier);
  if (!v36)
  {
LABEL_17:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_18;
  }
  uint64_t v37 = v36;
  sub_235947958();

  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v38(v14, v22, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    v38(v29, v14, v15);
    sub_2356DD70C(a1);
    sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
    sub_2359499A8();
    int64_t v39 = *(void (**)(char *, uint64_t))(v16 + 8);
    v16 += 8;
    v39(v29, v15);
    uint64_t v40 = sub_23594AD28();
    uint64_t v41 = -1 << *(unsigned char *)(v34 + 32);
    a2 = v40 & ~v41;
    if ((*(void *)(v34 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v15 = ~v41;
      while (1)
      {
        uint64_t v42 = *(void *)(v34 + 48) + 80 * a2;
        long long v43 = *(_OWORD *)(v42 + 16);
        long long v44 = *(_OWORD *)(v42 + 32);
        long long v45 = *(_OWORD *)(v42 + 48);
        long long v46 = *(_OWORD *)(v42 + 64);
        v56[0] = *(void **)v42;
        long long v57 = v43;
        long long v58 = v44;
        long long v59 = v45;
        long long v60 = v46;
        if (_s16MagnifierSupport14DetectedObjectV2eeoiySbAC_ACtFZ_0(v56, (id *)&v61)) {
          goto LABEL_19;
        }
        a2 = (a2 + 1) & v15;
        if (((*(void *)(v34 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  sub_23594ABF8();
  __break(1u);
}

uint64_t sub_2356D48B8(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  int v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_2356D2DDC(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = (uint64_t)sub_2356D6EDC(a4);
      goto LABEL_14;
    }
    sub_2356D8AFC(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_23594ACD8();
  sub_23594ACE8();
  unint64_t result = sub_23594AD28();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      unint64_t result = sub_23594ABF8();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_2356D4A14(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v36 = a1;
  uint64_t v6 = sub_235947978();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v12 = MEMORY[0x270FA5388](v6, v8, v9, v10, v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = *(void *)(*v3 + 16);
  unint64_t v16 = *(void *)(*v3 + 24);
  unint64_t v33 = v3;
  uint64_t v34 = v7;
  if (v16 > v15 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2356D1DB4();
  }
  else
  {
    if (v16 > v15)
    {
      sub_2356D6434();
      goto LABEL_12;
    }
    sub_2356D7B84();
  }
  uint64_t v17 = *v3;
  sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
  uint64_t v18 = sub_235949998();
  uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
  a2 = v18 & ~v19;
  uint64_t v35 = v17;
  uint64_t v20 = v17 + 56;
  if ((*(void *)(v17 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v21 = ~v19;
    uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v23 = v7 + 16;
    uint64_t v22 = v24;
    uint64_t v25 = *(void *)(v23 + 56);
    do
    {
      v22(v14, *(void *)(v35 + 48) + v25 * a2, v6);
      sub_2356DF564((unint64_t *)&unk_2688105B0, MEMORY[0x263F07508]);
      char v26 = sub_235949A18();
      (*(void (**)(char *, uint64_t))(v23 - 8))(v14, v6);
      if (v26) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v21;
    }
    while (((*(void *)(v20 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v27 = v34;
  uint64_t v28 = *v33;
  *(void *)(v28 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v27 + 32))(*(void *)(v28 + 48) + *(void *)(v27 + 72) * a2, v36, v6, v12);
  uint64_t v30 = *(void *)(v28 + 16);
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (!v31)
  {
    *(void *)(v28 + 16) = v32;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_23594ABF8();
  __break(1u);
  return result;
}

uint64_t sub_2356D4CB4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6 = a1;
  sub_2356DF92C(a1, (uint64_t)v71);
  long long v52 = v71[1];
  long long v53 = v71[0];
  long long v50 = v71[3];
  long long v51 = v71[2];
  long long v49 = v71[4];
  uint64_t v48 = v72;
  int v47 = v73;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_2356D21B0();
    }
    else
    {
      if (v8 > v7)
      {
        sub_2356D66D8();
        goto LABEL_24;
      }
      sub_2356D7F34();
    }
    uint64_t v9 = *v3;
    sub_2356DF92C(v6, (uint64_t)v62);
    sub_23594ACD8();
    FurnitureDetectionResult.hash(into:)((uint64_t)&v77);
    uint64_t v10 = sub_23594AD28();
    uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
    a2 = v10 & ~v11;
    uint64_t v45 = v9 + 56;
    uint64_t v46 = v9;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v44 = ~v11;
      uint64_t v54 = v6;
      do
      {
        unint64_t v55 = a2;
        uint64_t v12 = *(void *)(v46 + 48) + 96 * a2;
        uint64_t v13 = *(void **)v12;
        uint64_t v14 = *(void *)(v12 + 8);
        unint64_t v16 = *(void **)(v12 + 16);
        unint64_t v15 = *(void **)(v12 + 24);
        uint64_t v18 = *(void **)(v12 + 32);
        uint64_t v17 = *(void **)(v12 + 40);
        uint64_t v20 = *(void **)(v12 + 48);
        uint64_t v19 = *(void **)(v12 + 56);
        uint64_t v22 = *(void **)(v12 + 64);
        uint64_t v21 = *(void **)(v12 + 72);
        uint64_t v23 = *(void *)(v12 + 80);
        LODWORD(v12) = *(_DWORD *)(v12 + 88);
        uint64_t v24 = v13;
        v62[0] = v13;
        v62[1] = v14;
        uint64_t v25 = v16;
        v62[2] = v16;
        v62[3] = v15;
        char v26 = v15;
        uint64_t v27 = v18;
        v62[4] = v18;
        v62[5] = v17;
        uint64_t v28 = v17;
        id v29 = v20;
        v62[6] = v20;
        v62[7] = v19;
        uint64_t v30 = v19;
        long long v57 = v22;
        v62[8] = v22;
        BOOL v31 = v21;
        v62[9] = v21;
        uint64_t v59 = v23;
        v62[10] = v23;
        float v58 = *(float *)&v12;
        int v63 = v12;
        long long v64 = v53;
        long long v65 = v52;
        long long v66 = v51;
        long long v67 = v50;
        long long v68 = v49;
        uint64_t v69 = v48;
        int v70 = v47;
        uint64_t v56 = v14;
        if (v14 < 0)
        {
          sub_2356DF92C(v6, (uint64_t)&v77);
          if ((*(void *)v78 & 0x8000000000000000) == 0) {
            goto LABEL_11;
          }
          float v42 = v78[0];
          *(void *)v78 &= ~0x8000000000000000;
          uint64_t v43 = v77;
          sub_2356DF7EC(v24, v56);
          sub_2356DF7EC(v24, v56);
          sub_2356DFA5C(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF7EC);
          char v34 = sub_235805E30((uint64_t)v24, v43);
          sub_2356DF988((uint64_t)v62);
          sub_2356DF828(v24, v56);
          if ((v34 & 1) != 0 && v42 == *(float *)&v56) {
            goto LABEL_27;
          }
        }
        else
        {
          sub_2356DF92C(v6, (uint64_t)v74);
          if ((*((void *)&v74[0] + 1) & 0x8000000000000000) != 0)
          {
            *((void *)&v74[0] + 1) &= ~0x8000000000000000;
LABEL_11:
            sub_2356DF7EC(v24, v56);
            sub_2356DFA5C(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF7EC);
            sub_2356DF988((uint64_t)v62);
            goto LABEL_12;
          }
          v60[2] = v74[2];
          v60[3] = v74[3];
          v60[4] = v74[4];
          v60[0] = v74[0];
          v60[1] = v74[1];
          uint64_t v40 = v75;
          float v32 = v76;
          v61[0] = v24;
          v61[2] = v25;
          v61[3] = v26;
          v61[4] = v27;
          v61[5] = v28;
          v61[6] = v29;
          v61[7] = v30;
          v61[8] = v57;
          v61[9] = v31;
          sub_2356DF7EC(v24, v56);
          sub_2356DF7EC(v24, v56);
          sub_2356DFA5C(v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF7EC);
          sub_2356DF7EC(v24, v56);
          sub_2356DFA5C(v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF7EC);
          if (_s16MagnifierSupport14DetectedObjectV2eeoiySbAC_ACtFZ_0(v61, (id *)v60))
          {
            sub_2358067C0(v59, v40);
            char v41 = v33;
            sub_2356DF988((uint64_t)v62);
            sub_2356DFA5C(v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF828);
            sub_2356DF828(v24, v56);
            sub_2356DF828(v24, v56);
            if ((v41 & 1) != 0 && v32 == v58) {
              goto LABEL_27;
            }
          }
          else
          {
            sub_2356DF988((uint64_t)v62);
            sub_2356DFA5C(v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_2356DF828);
            sub_2356DF828(v24, v56);
            sub_2356DF828(v24, v56);
          }
        }
LABEL_12:
        a2 = (v55 + 1) & v44;
        uint64_t v6 = v54;
      }
      while (((*(void *)(v45 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_24:
  uint64_t v35 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_2356DF92C(v6, *(void *)(v35 + 48) + 96 * a2);
  uint64_t v37 = *(void *)(v35 + 16);
  BOOL v38 = __OFADD__(v37, 1);
  uint64_t v39 = v37 + 1;
  if (v38)
  {
    __break(1u);
LABEL_27:
    uint64_t result = sub_23594ABF8();
    __break(1u);
  }
  else
  {
    *(void *)(v35 + 16) = v39;
  }
  return result;
}

void sub_2356D5398(long long *a1, unint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810340);
  MEMORY[0x270FA5388](v7 - 8, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)sub_235947978();
  uint64_t v15 = *(v14 - 1);
  MEMORY[0x270FA5388](v14, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22, v23, v24, v25, v26);
  uint64_t v28 = (char *)&v59 - v27;
  unint64_t v29 = *(void *)(*v3 + 16);
  unint64_t v30 = *(void *)(*v3 + 24);
  long long v60 = v3;
  if (v30 > v29 && (a3 & 1) != 0)
  {
LABEL_18:
    uint64_t v51 = *v60;
    *(void *)(v51 + 8 * (a2 >> 6) + 56) |= 1 << a2;
    long long v52 = (_OWORD *)(*(void *)(v51 + 48) + 96 * a2);
    long long v53 = a1[1];
    *long long v52 = *a1;
    v52[1] = v53;
    *(_OWORD *)((char *)v52 + 76) = *(long long *)((char *)a1 + 76);
    long long v54 = a1[4];
    long long v55 = a1[2];
    v52[3] = a1[3];
    v52[4] = v54;
    v52[2] = v55;
    uint64_t v56 = *(void *)(v51 + 16);
    BOOL v57 = __OFADD__(v56, 1);
    uint64_t v58 = v56 + 1;
    if (!v57)
    {
      *(void *)(v51 + 16) = v58;
      return;
    }
    __break(1u);
  }
  else
  {
    if (a3)
    {
      sub_2356D253C();
    }
    else
    {
      if (v30 > v29)
      {
        sub_2356D68D4();
        goto LABEL_18;
      }
      sub_2356D82E0();
    }
    uint64_t v31 = *v3;
    sub_23594ACD8();
    long long v32 = a1[1];
    long long v63 = *a1;
    long long v64 = v32;
    long long v33 = a1[3];
    long long v65 = a1[2];
    long long v66 = v33;
    long long v67 = a1[4];
    char v34 = (void *)v63;
    sub_2356DD6E0((id *)&v63);
    sub_2356DD6E0((id *)&v63);
    id v35 = objc_msgSend(v34, sel_identifier);
    if (v35)
    {
      uint64_t v36 = v35;
      sub_235947958();

      uint64_t v37 = *(void (**)(char *, char *, void *))(v15 + 32);
      v37(v13, v21, v14);
      (*(void (**)(char *, void, uint64_t, void *))(v15 + 56))(v13, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v15 + 48))(v13, 1, v14) != 1)
      {
        uint64_t v38 = *((void *)a1 + 10);
        float v39 = *((float *)a1 + 22);
        v37(v28, v13, v14);
        sub_2356DD70C((id *)&v63);
        sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
        sub_2359499A8();
        uint64_t v40 = *(void (**)(char *, void *))(v15 + 8);
        v15 += 8;
        v40(v28, v14);
        sub_2356DD70C((id *)&v63);
        swift_bridgeObjectRetain();
        sub_23571CECC(v62, v38);
        swift_bridgeObjectRelease();
        sub_23594AD08();
        uint64_t v41 = sub_23594AD28();
        uint64_t v42 = -1 << *(unsigned char *)(v31 + 32);
        a2 = v41 & ~v42;
        if (((*(void *)(v31 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v15 = ~v42;
        while (1)
        {
          uint64_t v43 = *(void *)(v31 + 48) + 96 * a2;
          long long v44 = *(_OWORD *)(v43 + 16);
          long long v45 = *(_OWORD *)(v43 + 32);
          long long v46 = *(_OWORD *)(v43 + 48);
          long long v47 = *(_OWORD *)(v43 + 64);
          uint64_t v48 = *(void *)(v43 + 80);
          float v49 = *(float *)(v43 + 88);
          *(void *)&v62[0] = *(void *)v43;
          v62[1] = v44;
          v62[2] = v45;
          v62[3] = v46;
          v62[4] = v47;
          v61[2] = v65;
          v61[3] = v66;
          v61[4] = v67;
          v61[1] = v64;
          v61[0] = v63;
          uint64_t v14 = *(id *)&v62[0];
          swift_bridgeObjectRetain();
          if (_s16MagnifierSupport14DetectedObjectV2eeoiySbAC_ACtFZ_0((void **)v62, (id *)v61))
          {
            sub_2358067C0(v48, v38);
            uint64_t v13 = v50;
            swift_bridgeObjectRelease();

            if ((v13 & 1) != 0 && v49 == v39)
            {
              sub_23594ABF8();
              __break(1u);
              goto LABEL_18;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          a2 = (a2 + 1) & v15;
          if (((*(void *)(v31 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
            goto LABEL_18;
          }
        }
      }
      goto LABEL_22;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, void *))(v15 + 56))(v13, 1, 1, v14);
LABEL_22:
  __break(1u);
}

uint64_t sub_2356D5848(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Occupant();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *(void *)(*v4 + 16);
  unint64_t v17 = *(void *)(*v4 + 24);
  if (v17 > v16 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2356D2738();
  }
  else
  {
    if (v17 > v16)
    {
      sub_2356D6AB4();
      goto LABEL_14;
    }
    sub_2356D84B0();
  }
  uint64_t v18 = *v4;
  sub_23594ACD8();
  sub_235947978();
  sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
  sub_2359499A8();
  uint64_t v19 = sub_23594AD28();
  uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
  a2 = v19 & ~v20;
  if ((*(void *)(v18 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v21 = ~v20;
    uint64_t v22 = *(void *)(v9 + 72);
    while (1)
    {
      sub_2356DF258(*(void *)(v18 + 48) + v22 * a2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Occupant);
      if (sub_235947948() & 1) != 0 && (sub_2359478C8()) {
        break;
      }
      sub_2356DF1F8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Occupant);
      a2 = (a2 + 1) & v21;
      if (((*(void *)(v18 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_14;
      }
    }
    sub_2356DF1F8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Occupant);
    sub_23594ABF8();
    __break(1u);
  }
LABEL_14:
  uint64_t v23 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_2356DF2C0(a1, *(void *)(v23 + 48) + *(void *)(v9 + 72) * a2);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v23 + 16) = v27;
  }
  return result;
}

uint64_t sub_2356D5AE4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2356D2AFC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_2356D6D04();
      goto LABEL_22;
    }
    sub_2356D884C();
  }
  uint64_t v11 = *v4;
  sub_23594ACD8();
  sub_235949B88();
  uint64_t result = sub_23594AD28();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_23594AB78(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_23594ABF8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_23594AB78();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_2356D5C80(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  int v6 = result & 1;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_2356D2DDC(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_2356D6EDC(a4);
      goto LABEL_14;
    }
    sub_2356D8AFC(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_23594ACD8();
  sub_23594ACE8();
  uint64_t result = sub_23594AD28();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (((v6 == 0) ^ *(unsigned __int8 *)(v12 + a2)))
    {
LABEL_13:
      uint64_t result = sub_23594ABF8();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (((v6 == 0) ^ *(unsigned __int8 *)(v12 + a2))) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_2356D5DF4(uint64_t result, unint64_t a2, char a3)
{
  unsigned int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2356D3324();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2356D7074();
      goto LABEL_14;
    }
    sub_2356D8D74();
  }
  uint64_t v8 = *v3;
  uint64_t result = MEMORY[0x237DE8C50](*(void *)(*v3 + 40), v5, 4);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_23594ABF8();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_2356D5F1C()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15590);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23594A7C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v19 + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2356D609C()
{
  return sub_2356D6EDC(&qword_268810418);
}

id sub_2356D60A8()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810608);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23594A7C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2356D6254()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810610);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23594A7C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 80 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    int64_t v18 = *(void **)v17;
    long long v19 = *(_OWORD *)(v17 + 16);
    long long v20 = *(_OWORD *)(v17 + 32);
    long long v21 = *(_OWORD *)(v17 + 48);
    long long v22 = *(_OWORD *)(v17 + 64);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v23 = *(void *)v17;
    *(_OWORD *)(v23 + 16) = v19;
    *(_OWORD *)(v23 + 32) = v20;
    *(_OWORD *)(v23 + 48) = v21;
    *(_OWORD *)(v23 + 64) = v22;
    id result = v18;
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v13) {
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2356D641C()
{
  return sub_2356D6EDC(&qword_268810540);
}

void *sub_2356D6428()
{
  return sub_2356D6EDC(&qword_268810428);
}

void *sub_2356D6434()
{
  id v1 = v0;
  uint64_t v2 = sub_235947978();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  int64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F4D0);
  uint64_t v10 = *v0;
  uint64_t v11 = sub_23594A7C8();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_27:
    *id v1 = v12;
    return result;
  }
  int64_t v26 = v1;
  id result = (void *)(v11 + 56);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 56 + 8 * v14) {
    id result = memmove(result, (const void *)(v10 + 56), 8 * v14);
  }
  uint64_t v27 = v10 + 56;
  int64_t v15 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v10 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v22 >= v28) {
      goto LABEL_25;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_25;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_25;
        }
        unint64_t v23 = *(void *)(v27 + 8 * v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v9, *(void *)(v10 + 48) + v21, v2);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v12 + 48) + v21, v9, v2);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_25:
    id result = (void *)swift_release();
    id v1 = v26;
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_25;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v15);
    ++v24;
    if (v23) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_2356D66D8()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688106A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23594A7C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v30 >= v13) {
      goto LABEL_28;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      int64_t v9 = v30 + 1;
      if (v30 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v31 = *(void *)(v6 + 8 * v9);
      if (!v31)
      {
        int64_t v9 = v30 + 2;
        if (v30 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v31 = *(void *)(v6 + 8 * v9);
        if (!v31) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v31 - 1) & v31;
    unint64_t v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 96 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    unint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v22 = *(void *)(v17 + 32);
    uint64_t v23 = *(void *)(v17 + 40);
    uint64_t v24 = *(void *)(v17 + 48);
    uint64_t v25 = *(void *)(v17 + 56);
    uint64_t v26 = *(void *)(v17 + 64);
    uint64_t v27 = *(void *)(v17 + 72);
    uint64_t v28 = *(void *)(v17 + 80);
    LODWORD(v17) = *(_DWORD *)(v17 + 88);
    uint64_t v29 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v29 = v18;
    *(void *)(v29 + 8) = v19;
    *(void *)(v29 + 16) = v20;
    *(void *)(v29 + 24) = v21;
    *(void *)(v29 + 32) = v22;
    *(void *)(v29 + 40) = v23;
    *(void *)(v29 + 48) = v24;
    *(void *)(v29 + 56) = v25;
    *(void *)(v29 + 64) = v26;
    *(void *)(v29 + 72) = v27;
    *(void *)(v29 + 80) = v28;
    *(_DWORD *)(v29 + 88) = v17;
    id result = (void *)sub_2356DF7EC(v18, v19);
  }
  int64_t v32 = v30 + 3;
  if (v32 >= v13) {
    goto LABEL_28;
  }
  unint64_t v31 = *(void *)(v6 + 8 * v32);
  if (v31)
  {
    int64_t v9 = v32;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v9);
    ++v32;
    if (v31) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2356D68D4()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810650);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23594A7C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v13) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28)
      {
        int64_t v9 = v27 + 2;
        if (v27 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v28 = *(void *)(v6 + 8 * v9);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 96 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    unint64_t v18 = *(void **)v17;
    long long v19 = *(_OWORD *)(v17 + 16);
    long long v20 = *(_OWORD *)(v17 + 32);
    long long v21 = *(_OWORD *)(v17 + 48);
    long long v22 = *(_OWORD *)(v17 + 64);
    uint64_t v23 = *(void *)(v17 + 80);
    int v24 = *(_DWORD *)(v17 + 88);
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v25 = *(void *)v17;
    *(_OWORD *)(v25 + 16) = v19;
    *(_OWORD *)(v25 + 32) = v20;
    *(_OWORD *)(v25 + 48) = v21;
    *(_OWORD *)(v25 + 64) = v22;
    *(void *)(v25 + 80) = v23;
    *(_DWORD *)(v25 + 88) = v24;
    id v26 = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v13) {
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2356D6AB4()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Occupant();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v4, v5, v6, v7);
  int64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810580);
  uint64_t v10 = *v0;
  uint64_t v11 = sub_23594A7C8();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
LABEL_25:
    id result = (void *)swift_release();
    *id v1 = v12;
    return result;
  }
  id result = (void *)(v11 + 56);
  uint64_t v14 = v10 + 56;
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v14 + 8 * v15) {
    id result = memmove(result, (const void *)(v10 + 56), 8 * v15);
  }
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v20) {
      goto LABEL_25;
    }
    unint64_t v25 = *(void *)(v14 + 8 * v24);
    ++v16;
    if (!v25)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v20) {
        goto LABEL_25;
      }
      unint64_t v25 = *(void *)(v14 + 8 * v16);
      if (!v25)
      {
        int64_t v16 = v24 + 2;
        if (v24 + 2 >= v20) {
          goto LABEL_25;
        }
        unint64_t v25 = *(void *)(v14 + 8 * v16);
        if (!v25) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_9:
    unint64_t v23 = *(void *)(v3 + 72) * v22;
    sub_2356DF258(*(void *)(v10 + 48) + v23, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Occupant);
    id result = (void *)sub_2356DF2C0((uint64_t)v9, *(void *)(v12 + 48) + v23);
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v20) {
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v14 + 8 * v26);
  if (v25)
  {
    int64_t v16 = v26;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v16 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_25;
    }
    unint64_t v25 = *(void *)(v14 + 8 * v16);
    ++v26;
    if (v25) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2356D6D04()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810680);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23594A7C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2356D6EB8()
{
  return sub_2356D6EDC(&qword_268810568);
}

void *sub_2356D6EC4()
{
  return sub_2356D6EDC(&qword_268810438);
}

void *sub_2356D6ED0()
{
  return sub_2356D6EDC(&qword_268810408);
}

void *sub_2356D6EDC(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_23594A7C8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2356D7068()
{
  return sub_2356D6EDC(&qword_2688103F8);
}

void *sub_2356D7074()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15598);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23594A7C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2356D720C()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15590);
  uint64_t v3 = sub_23594A7D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_33;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain_n();
  int64_t i = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (i << 6);
      goto LABEL_22;
    }
    int64_t v19 = i + 1;
    if (__OFADD__(i, 1)) {
      goto LABEL_34;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++i;
    if (!v20)
    {
      int64_t i = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * i);
      if (!v20)
      {
        int64_t v21 = v19 + 2;
        if (v21 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v21);
        for (int64_t i = v21; !v20; ++v21)
        {
          int64_t i = v21 + 1;
          if (__OFADD__(v21, 1)) {
            goto LABEL_35;
          }
          if (i >= v9) {
            goto LABEL_31;
          }
          unint64_t v20 = *(void *)(v6 + 8 * i);
        }
      }
    }
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (i << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_23594ACD8();
    sub_235949B88();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_23594AD28();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        JUMPOUT(0x2356D7698);
      }
      BOOL v25 = v15 == v24;
      if (v15 == v24) {
        unint64_t v15 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v15);
    }
    while (v26 == -1);
    unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v22;
    ++*(void *)(v4 + 16);
  }
LABEL_31:
  uint64_t result = swift_release_n();
  id v1 = v0;
LABEL_33:
  *id v1 = v4;
  return result;
}

uint64_t sub_2356D76DC()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810608);
  uint64_t v3 = sub_23594A7D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = sub_2359470F8();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_235949AC8();
    sub_23594ACD8();
    id v18 = v17;
    sub_235949B88();
    uint64_t v19 = sub_23594AD28();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_2356D79BC()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810610);
  uint64_t v3 = sub_23594A7D8();
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = swift_release();
LABEL_24:
    *id v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = sub_2359470F8();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v8) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v18 = *(void *)(v5 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_6:
    unint64_t v13 = (_OWORD *)(*(void *)(v2 + 48) + 80 * v12);
    v20[0] = *v13;
    long long v14 = v13[3];
    long long v15 = v13[4];
    long long v16 = v13[2];
    v20[1] = v13[1];
    v20[2] = v16;
    v20[3] = v14;
    _OWORD v20[4] = v15;
    sub_2356DD6E0((id *)v20);
    unint64_t result = sub_2356D35AC((uint64_t)v20, v3);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v8)
  {
LABEL_22:
    unint64_t result = swift_release_n();
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2356D7B84()
{
  id v1 = v0;
  uint64_t v2 = sub_235947978();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4, v5, v6, v7);
  int64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26880F4D0);
  uint64_t v11 = sub_23594A7D8();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v1 = v12;
    return result;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 56);
  uint64_t v38 = v0;
  uint64_t v39 = v10 + 56;
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v40 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v41 = v3 + 16;
  uint64_t v17 = v11 + 56;
  uint64_t v42 = v3;
  unint64_t v18 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_2359470F8();
  int64_t v20 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_24;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v24 >= v40) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v39 + 8 * v24);
    ++v20;
    if (!v25)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v39 + 8 * v20);
      if (!v25)
      {
        int64_t v20 = v24 + 2;
        if (v24 + 2 >= v40) {
          goto LABEL_33;
        }
        unint64_t v25 = *(void *)(v39 + 8 * v20);
        if (!v25) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_24:
    uint64_t v27 = v10;
    uint64_t v28 = *(void *)(v10 + 48);
    uint64_t v29 = *(void *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v9, v28 + v29 * v23, v2);
    sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
    uint64_t result = sub_235949998();
    uint64_t v30 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v31) & ~*(void *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v21 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = (*v18)(*(void *)(v12 + 48) + v21 * v29, v9, v2);
    ++*(void *)(v12 + 16);
    uint64_t v10 = v27;
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v40)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v38;
    goto LABEL_35;
  }
  unint64_t v25 = *(void *)(v39 + 8 * v26);
  if (v25)
  {
    int64_t v20 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v20 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v20 >= v40) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v39 + 8 * v20);
    ++v26;
    if (v25) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2356D7F34()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688106A8);
  uint64_t v43 = sub_23594A7D8();
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v1 = v43;
    return result;
  }
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  char v33 = v0;
  uint64_t v34 = v2 + 56;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v2 + 56);
  int64_t v35 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v37 = v43 + 56;
  uint64_t result = sub_2359470F8();
  int64_t v7 = 0;
  uint64_t v36 = v2;
  while (1)
  {
    if (v5)
    {
      uint64_t v39 = (v5 - 1) & v5;
      int64_t v40 = v7;
      unint64_t v10 = __clz(__rbit64(v5)) | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v11 >= v35) {
      goto LABEL_33;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v11);
    int64_t v13 = v7 + 1;
    if (!v12)
    {
      int64_t v13 = v7 + 2;
      if (v7 + 2 >= v35) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v34 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v7 + 3;
        if (v7 + 3 >= v35) {
          goto LABEL_33;
        }
        unint64_t v12 = *(void *)(v34 + 8 * v13);
        if (!v12) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v39 = (v12 - 1) & v12;
    int64_t v40 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_24:
    uint64_t v15 = *(void *)(v2 + 48) + 96 * v10;
    uint64_t v17 = *(void *)(v15 + 24);
    uint64_t v41 = *(void *)(v15 + 8);
    uint64_t v42 = *(void *)(v15 + 16);
    uint64_t v18 = *(void *)(v15 + 32);
    uint64_t v19 = *(void *)(v15 + 40);
    uint64_t v21 = *(void *)(v15 + 48);
    uint64_t v20 = *(void *)(v15 + 56);
    uint64_t v22 = *(void *)(v15 + 64);
    uint64_t v23 = *(void *)(v15 + 72);
    uint64_t v24 = *(void *)(v15 + 80);
    int v25 = *(_DWORD *)(v15 + 88);
    long long v45 = *(void **)v15;
    unint64_t v16 = v45;
    uint64_t v46 = v41;
    uint64_t v47 = v42;
    uint64_t v48 = v17;
    uint64_t v49 = v18;
    uint64_t v50 = v19;
    uint64_t v51 = v21;
    uint64_t v52 = v20;
    uint64_t v53 = v22;
    uint64_t v54 = v23;
    uint64_t v55 = v24;
    int v56 = v25;
    sub_23594ACD8();
    int v38 = v25;
    sub_2356DF7EC(v16, v41);
    FurnitureDetectionResult.hash(into:)((uint64_t)v44);
    uint64_t result = sub_23594AD28();
    uint64_t v26 = -1 << *(unsigned char *)(v43 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v37 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v27) & ~*(void *)(v37 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v37 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v8 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v37 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    uint64_t v9 = *(void *)(v43 + 48) + 96 * v8;
    *(void *)uint64_t v9 = v16;
    *(void *)(v9 + 8) = v41;
    *(void *)(v9 + 16) = v42;
    *(void *)(v9 + 24) = v17;
    *(void *)(v9 + 32) = v18;
    *(void *)(v9 + 40) = v19;
    unint64_t v5 = v39;
    *(void *)(v9 + 48) = v21;
    *(void *)(v9 + 56) = v20;
    *(void *)(v9 + 64) = v22;
    *(void *)(v9 + 72) = v23;
    *(void *)(v9 + 80) = v24;
    *(_DWORD *)(v9 + 88) = v38;
    ++*(void *)(v43 + 16);
    uint64_t v2 = v36;
    int64_t v7 = v40;
  }
  uint64_t v14 = v7 + 4;
  if (v7 + 4 >= v35)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v33;
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v34 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v7 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v35) {
      goto LABEL_33;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_2356D82E0()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268810650);
  uint64_t v3 = sub_23594A7D8();
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = swift_release();
LABEL_24:
    *id v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = sub_2359470F8();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v8) {
      goto LABEL_22;
    }
    unint64_t v19 = *(void *)(v5 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v19 = *(void *)(v5 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v19 = *(void *)(v5 + 8 * v10);
        if (!v19) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v12 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_6:
    int64_t v13 = (_OWORD *)(*(void *)(v2 + 48) + 96 * v12);
    long long v14 = v13[1];
    v21[0] = *v13;
    v21[1] = v14;
    long long v16 = v13[3];
    long long v15 = v13[4];
    long long v17 = v13[2];
    *(_OWORD *)&v22[12] = *(_OWORD *)((char *)v13 + 76);
    v21[3] = v16;
    *(_OWORD *)uint64_t v22 = v15;
    _OWORD v21[2] = v17;
    sub_2356DF3CC((id *)v21);
    unint64_t result = sub_2356D38A0((uint64_t)v21, v3);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v8)
  {
LABEL_22:
    unint64_t result = swift_release_n();
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v5 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v19 = *(void *)(v5 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2356D84B0()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Occupant();
  uint64_t v37 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v3, v4, v5, v6);
  int64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810580);
  uint64_t v10 = sub_23594A7D8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v1 = v11;
    return result;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v9 + 56;
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v36 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 56;
  uint64_t result = sub_2359470F8();
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_24;
    }
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v22 >= v36) {
      goto LABEL_33;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v22);
    ++v18;
    if (!v23)
    {
      int64_t v18 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v18);
      if (!v23)
      {
        int64_t v18 = v22 + 2;
        if (v22 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v18);
        if (!v23) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
LABEL_24:
    uint64_t v25 = *(void *)(v37 + 72);
    sub_2356DF258(*(void *)(v9 + 48) + v25 * v21, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Occupant);
    sub_23594ACD8();
    sub_235947978();
    sub_2356DF564((unint64_t *)&qword_26880F4D8, MEMORY[0x263F07508]);
    sub_2359499A8();
    uint64_t result = sub_23594AD28();
    uint64_t v26 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v16 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v19 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = sub_2356DF2C0((uint64_t)v8, *(void *)(v11 + 48) + v19 * v25);
    ++*(void *)(v11 + 16);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v34;
    goto LABEL_35;
  }
  unint64_t v23 = *(void *)(v35 + 8 * v24);
  if (v23)
  {
    int64_t v18 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v18 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v18 >= v36) {
      goto LABEL_33;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v18);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2356D884C()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268810680);
  uint64_t v3 = sub_23594A7D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = sub_2359470F8();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_23594ACD8();
    swift_bridgeObjectRetain();
    sub_235949B88();
    uint64_t result = sub_23594AD28();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2356D8AFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_23594A7D8();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
    sub_23594ACD8();
    sub_23594ACE8();
    uint64_t result = sub_23594AD28();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2356D8D74()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF15598);
  uint64_t result = sub_23594A7D8();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    uint64_t result = MEMORY[0x237DE8C50](*(void *)(v4 + 40), v18, 4);
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    id v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_2356D8FDC(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = sub_235947978();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9, v10, v11, v12);
  unint64_t v14 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810590);
  MEMORY[0x270FA5388](v15, v16, v17, v18, v19);
  unint64_t v23 = (char *)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v67) = a2;
  v64[1] = v3;
  uint64_t v25 = *(int *)(v20 + 48);
  v64[0] = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v26 = a1 + v64[0];
  uint64_t v69 = *(void *)(v21 + 72);
  uint64_t v66 = a1;
  swift_bridgeObjectRetain();
  sub_23566A2E4(v26, (uint64_t)v23, &qword_268810590);
  uint64_t v65 = v8;
  uint64_t v27 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v70 = v7;
  long long v71 = v27;
  v27((unint64_t)v14, v23, v7);
  uint64_t v68 = v25;
  uint64_t v28 = *(void *)&v23[v25];
  uint64_t v72 = a3;
  uint64_t v29 = *a3;
  unint64_t v31 = sub_23587852C((uint64_t)v14);
  uint64_t v32 = *(void *)(v29 + 16);
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33)) {
    goto LABEL_24;
  }
  char v35 = v30;
  if (*(void *)(v29 + 24) >= v34)
  {
    if (v67)
    {
      if (v30) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_23594276C();
      if (v35) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v42 = (void *)*v72;
    *(void *)(*v72 + 8 * (v31 >> 6) + 64) |= 1 << v31;
    uint64_t v43 = v42[6];
    uint64_t v67 = *(void *)(v65 + 72);
    uint64_t v44 = v70;
    v71(v43 + v67 * v31, v14, v70);
    *(void *)(v42[7] + 8 * v31) = v28;
    uint64_t v45 = v42[2];
    BOOL v46 = __OFADD__(v45, 1);
    uint64_t v47 = v45 + 1;
    if (v46)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v48 = v44;
    void v42[2] = v47;
    uint64_t v49 = v24 - 1;
    if (v24 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v50 = v66 + v69 + v64[0];
    while (1)
    {
      sub_23566A2E4(v50, (uint64_t)v23, &qword_268810590);
      v71((unint64_t)v14, v23, v48);
      uint64_t v51 = *(void *)&v23[v68];
      uint64_t v52 = (void *)*v72;
      unint64_t v54 = sub_23587852C((uint64_t)v14);
      uint64_t v55 = v52[2];
      BOOL v56 = (v53 & 1) == 0;
      uint64_t v57 = v55 + v56;
      if (__OFADD__(v55, v56)) {
        break;
      }
      char v58 = v53;
      if (v52[3] < v57)
      {
        sub_23593B920(v57, 1);
        unint64_t v59 = sub_23587852C((uint64_t)v14);
        if ((v58 & 1) != (v60 & 1)) {
          goto LABEL_26;
        }
        unint64_t v54 = v59;
      }
      if (v58) {
        goto LABEL_10;
      }
      long long v61 = (void *)*v72;
      *(void *)(*v72 + 8 * (v54 >> 6) + 64) |= 1 << v54;
      uint64_t v48 = v70;
      v71(v61[6] + v67 * v54, v14, v70);
      *(void *)(v61[7] + 8 * v54) = v51;
      uint64_t v62 = v61[2];
      BOOL v46 = __OFADD__(v62, 1);
      uint64_t v63 = v62 + 1;
      if (v46) {
        goto LABEL_25;
      }
      v61[2] = v63;
      v50 += v69;
      if (!--v49) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_23593B920(v34, v67 & 1);
  unint64_t v36 = sub_23587852C((uint64_t)v14);
  if ((v35 & 1) == (v37 & 1))
  {
    unint64_t v31 = v36;
    if ((v35 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    int v38 = (void *)swift_allocError();
    swift_willThrow();
    id v75 = v38;
    id v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2688105C0);
    char v40 = swift_dynamicCast();
    uint64_t v41 = v70;
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v41);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_23594AC08();
  __break(1u);
LABEL_27:
  uint64_t v73 = 0;
  unint64_t v74 = 0xE000000000000000;
  sub_23594A7F8();
  sub_235949BD8();
  sub_23594A948();
  sub_235949BD8();
  sub_23594A968();
  __break(1u);
}

uint64_t sub_2356D953C(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_2357EC4B0(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_2356D96E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v47 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v41 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v39 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v40 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v40) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v41 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v40) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v41 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v40) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v41 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v40) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v41 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v40)
                {
LABEL_47:
                  sub_2356DF488();
                  return v2;
                }
                unint64_t v13 = *(void *)(v41 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v40) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v41 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_23594ACD8();
      swift_bridgeObjectRetain();
      sub_235949B88();
      uint64_t v19 = sub_23594AD28();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    unint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_23594AB78() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v42 = a1;
      uint64_t v43 = v41;
      uint64_t v44 = v39;
      int64_t v45 = v9;
      unint64_t v46 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_23594AB78() & 1) == 0);
      uint64_t v42 = a1;
      uint64_t v43 = v41;
      uint64_t v44 = v39;
      int64_t v45 = v9;
      unint64_t v46 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v33 = *(unsigned char *)(v2 + 32);
    unint64_t v34 = (unint64_t)((1 << v33) + 63) >> 6;
    size_t v35 = 8 * v34;
    if ((v33 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe, v29, v30, v31, v32);
      memcpy((char *)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v35);
      uint64_t v36 = sub_2356D9B54((uint64_t)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0), v34, v2, v21, &v42);
      swift_release();
      sub_2356DF488();
    }
    else
    {
      char v37 = (void *)swift_slowAlloc();
      memcpy(v37, (const void *)(v2 + 56), v35);
      uint64_t v36 = sub_2356D9B54((uint64_t)v37, v34, v2, v21, &v42);
      swift_release();
      sub_2356DF488();
      MEMORY[0x237DE9F30](v37, -1, -1);
    }
    return v36;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_2356D9B54(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  int v38 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_43;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_43;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_43;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_43;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v15 = v14 - 1;
                  int64_t v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  sub_2359470F8();
                  return sub_23572D840(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_23594ACD8();
        swift_bridgeObjectRetain();
        sub_235949B88();
        uint64_t v22 = sub_23594AD28();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      uint64_t v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_23594AB78() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          unint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_23594AB78() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_29:
      unint64_t v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_2356D9E34(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a2 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe, a2, a3, a4, a5);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_2356D9FBC((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a2, v6);
    swift_release();
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    uint64_t v10 = sub_2356D9FBC((uint64_t)v11, v8, a2, v6);
    swift_release();
    MEMORY[0x237DE9F30](v11, -1, -1);
  }
  return v10;
}

uint64_t sub_2356D9FBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_23594ACD8();
        swift_bridgeObjectRetain();
        sub_235949B88();
        uint64_t v20 = sub_23594AD28();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      uint64_t v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_23594AB78() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          uint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_23594AB78() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_23594ACD8();
    swift_bridgeObjectRetain();
    sub_235949B88();
    uint64_t v47 = sub_23594AD28();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_23594AB78() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        sub_2359470F8();
        return sub_23572D840(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        unint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_23594AB78() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_2356DA4FC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (uint64_t (*)(char *))isStackAllocationSafe;
  v16[1] = *MEMORY[0x263EF8340];
  char v8 = *(unsigned char *)(a3 + 32);
  unint64_t v9 = (unint64_t)((1 << v8) + 63) >> 6;
  size_t v10 = 8 * v9;
  if ((v8 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe, a2, a3, a4, a5);
    bzero((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    sub_2356DA680((void *)((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a3, v7);
    uint64_t v12 = v11;
    swift_release();
    if (v5) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    sub_2356DA680((unint64_t *)v13, v9, a3, v7);
    uint64_t v12 = v14;
    swift_release();
    MEMORY[0x237DE9F30](v13, -1, -1);
  }
  return v12;
}

void sub_2356DA680(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  BOOL v33 = a4;
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  uint64_t v6 = type metadata accessor for Occupant();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  uint64_t v14 = a3;
  uint64_t v15 = *(void *)(a3 + 56);
  uint64_t v29 = 0;
  uint64_t v30 = a3 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v31 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    unint64_t v19 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    unint64_t v20 = v19 | (v13 << 6);
LABEL_17:
    sub_2356DF258(*(void *)(v14 + 48) + *(void *)(v32 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Occupant);
    char v24 = v33(v12);
    sub_2356DF1F8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Occupant);
    if (v4) {
      return;
    }
    if (v24)
    {
      *(unint64_t *)((char *)v28 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      BOOL v21 = __OFADD__(v29++, 1);
      if (v21) {
        goto LABEL_30;
      }
    }
  }
  BOOL v21 = __OFADD__(v13++, 1);
  if (v21)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v13 >= v31) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v13);
  if (v22)
  {
LABEL_16:
    unint64_t v18 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
    goto LABEL_17;
  }
  int64_t v23 = v13 + 1;
  if (v13 + 1 >= v31) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22) {
    goto LABEL_15;
  }
  int64_t v23 = v13 + 2;
  if (v13 + 2 >= v31) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22) {
    goto LABEL_15;
  }
  int64_t v23 = v13 + 3;
  if (v13 + 3 >= v31)
  {
LABEL_27:
    uint64_t v25 = v27;
    uint64_t v26 = v29;
    sub_2359470F8();
    sub_23572DAD8(v28, v25, v26, v14);
    return;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22)
  {
LABEL_15:
    int64_t v13 = v23;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v31) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v30 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_2356DA920@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_23579B054(*a1, a1[1], a1[2]);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2356DA958@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23579B054(**(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 8), *(void *)(*(void *)(v1 + 16) + 16));
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2356DA9D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  void v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_2356B582C;
  return MEMORY[0x270FA2498](sub_2356C28F0, 0, 0);
}

uint64_t sub_2356DAA84()
{
  return swift_deallocObject();
}

void sub_2356DAABC()
{
}

uint64_t sub_2356DAAE0()
{
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2356DAB28()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_2356B582C;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 16) = v2;
  return MEMORY[0x270FA2498](sub_2356C2E68, 0, 0);
}

uint64_t sub_2356DABDC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2356DAC1C(uint64_t a1)
{
  uint64_t v4 = v1[1].n128_i64[0];
  uint64_t v5 = v1[1].n128_i64[1];
  unint64_t v6 = v1[2].n128_u64[0];
  __n128 v11 = v1[4];
  __n128 v12 = v1[3];
  __n128 v9 = v1[6];
  __n128 v10 = v1[5];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2356B582C;
  return sub_2356C31B4(v12, v11, v10, v9, a1, v4, v5, v6);
}

uint64_t sub_2356DACF8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  __n128 v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_2356DAD80(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = *(void *)(a5 + 48);
  uint64_t v8 = sub_235947978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a2, v8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2356DAE50(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  char v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2356DAF30;
  return v5(v2 + 32);
}

uint64_t sub_2356DAF30()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_2356DB044(uint64_t a1)
{
  return sub_2356DCA1C(a1, (void (*)(void))sub_2356DEA38, (uint64_t)&type metadata for ObjectUnderstandingFeedback, &qword_268810418);
}

uint64_t sub_2356DB06C(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268810688);
  MEMORY[0x270FA5388](v4, v5, v6, v7, v8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v27 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v16;
    if (!v23)
    {
      int64_t v16 = v22 + 1;
      if (v22 + 1 >= v27) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v26 + 8 * v16);
      if (!v23)
      {
        int64_t v16 = v22 + 2;
        if (v22 + 2 >= v27) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v26 + 8 * v16);
        if (!v23)
        {
          int64_t v16 = v22 + 3;
          if (v22 + 3 >= v27) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v26 + 8 * v16);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_5:
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v20 = sub_235947978();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v10, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v20);
    uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8 * v18);
    *(void *)&v10[*(int *)(v4 + 48)] = v21;
    swift_bridgeObjectRetain();
    a2(v10, v21);
    uint64_t result = sub_23566A3AC((uint64_t)v10, &qword_268810688);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v16 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v16 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v16);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2356DB2D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

char *sub_2356DB3CC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 80 * a1 + 32);
    size_t v6 = 80 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_23594A9E8();
  __break(1u);
  return result;
}

uint64_t sub_2356DB4BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for OU3DObjectType(0);
  sub_2356DF564(&qword_26880EDB0, type metadata accessor for OU3DObjectType);
  uint64_t result = sub_23594A008();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      unint64_t v5 = *v4++;
      sub_2356CF4A8(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_2356DB578(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

uint64_t sub_2356DB66C(uint64_t a1, uint64_t a2, float32x4_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3) {
    return v4;
  }
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_2356765A4(0, v3, 0);
  uint64_t v4 = v39;
  uint64_t v7 = sub_235720158(a1);
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v26 = (uint64_t *)(a2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  uint64_t result = swift_beginAccess();
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_14;
    }
    char v28 = v11;
    uint64_t v13 = *(void *)(a1 + 48) + 80 * v7;
    long long v32 = *(_OWORD *)(v13 + 32);
    long long v33 = *(_OWORD *)(v13 + 16);
    long long v30 = *(_OWORD *)(v13 + 64);
    long long v31 = *(_OWORD *)(v13 + 48);
    uint64_t v14 = v4;
    uint64_t v15 = *v26;
    id v34 = *(id *)v13;
    long long v35 = v33;
    long long v36 = v32;
    long long v37 = v31;
    long long v38 = v30;
    id v16 = v34;
    swift_bridgeObjectRetain();
    uint64_t v17 = Dictionary<>.occupants(of:)(&v34, v15);
    swift_bridgeObjectRelease();
    id v34 = v16;
    long long v35 = v33;
    long long v36 = v32;
    long long v37 = v31;
    long long v38 = v30;
    sub_2358C53C4(a3);
    uint64_t v4 = v14;
    float32x4_t v27 = v18;

    uint64_t v39 = v14;
    unint64_t v20 = *(void *)(v14 + 16);
    unint64_t v19 = *(void *)(v14 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_2356765A4(v19 > 1, v20 + 1, 1);
      uint64_t v4 = v39;
    }
    float32x4_t v21 = vsubq_f32(a3, v27);
    float32x4_t v22 = vmulq_f32(v21, v21);
    *(void *)(v4 + 16) = v20 + 1;
    uint64_t v23 = v4 + 96 * v20;
    *(void *)(v23 + 32) = v16;
    *(_OWORD *)(v23 + 48) = v33;
    *(_OWORD *)(v23 + 64) = v32;
    *(_OWORD *)(v23 + 80) = v31;
    *(_OWORD *)(v23 + 96) = v30;
    *(void *)(v23 + 112) = v17;
    *(float *)(v23 + 120) = sqrtf(vaddq_f32(v22, (float32x4_t)vdupq_laneq_s32((int32x4_t)v22, 2)).f32[0]);
    uint64_t result = sub_2357201FC(v7, v9, v28 & 1, a1);
    uint64_t v7 = result;
    uint64_t v9 = v24;
    char v11 = v25 & 1;
    if (!--v3)
    {
      sub_2356DF438(result, v24, v25 & 1);
      return v4;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

char *sub_2356DB8D8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_23594A9E8();
  __break(1u);
  return result;
}

uint64_t sub_2356DB9C4(void *a1)
{
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF156D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_235952810;
  *(void *)(inited + 32) = sub_235949AC8();
  *(void *)(inited + 40) = v4;
  uint64_t v6 = qword_26E8BD3C8;
  uint64_t v5 = unk_26E8BD3D0;
  if ((unk_26E8BD3D0 & ~qword_26E8BD3C8) == 0) {
    uint64_t v5 = 0;
  }
  uint64_t v7 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 48) = v5 | v6;
  *(void *)(inited + 80) = sub_235949AC8();
  *(void *)(inited + 88) = v8;
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 96) = 1;
  *(void *)(inited + 128) = sub_235949AC8();
  *(void *)(inited + 136) = v9;
  *(void *)(inited + 168) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 144) = 0;
  sub_23566E2C8(inited);
  if (qword_26AF13B78 != -1) {
    goto LABEL_34;
  }
  while (1)
  {
    uint64_t v10 = qword_26AF181E0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectPointerShape;
    swift_beginAccess();
    uint64_t v81 = *(void *)v10;
    uint64_t v82 = *(void *)(v10 + 8);
    LOBYTE(v83) = *(unsigned char *)(v10 + 16);
    uint64_t v11 = qword_26AF144C0;
    uint64_t v12 = swift_bridgeObjectRetain();
    if (v11 != -1) {
      uint64_t v12 = swift_once();
    }
    MEMORY[0x270FA5388](v12, v13, v14, v15, v16);
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    if (v79 > 1u)
    {
      objc_msgSend(a1, sel_position);
      int v23 = v28;
      int v25 = v29;
      int v27 = v30;
    }
    else
    {
      uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer);
      sub_2356594B0(0, (unint64_t *)&qword_268814020);
      id v18 = v17;
      sub_23594A2F8();
      sub_23594A2F8();
      sub_23594A2F8();
      sub_23594A2F8();
      sub_23594A2F8();
      *(float *)&double v19 = (float)(*(float *)&v82 + v84) * 0.5;
      *(float *)&double v20 = (float)(*(float *)&v81 + *((float *)&v82 + 1)) * 0.5;
      LODWORD(v21) = v83;
      objc_msgSend(v18, sel_convertPosition_toNode_, 0, v20, v21, v19);
      int v23 = v22;
      int v25 = v24;
      int v27 = v26;
    }
    long long v31 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene);
    if (!v31)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      return 1;
    }
    id v32 = objc_msgSend(v31, sel_rootNode);
    long long v33 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer);
    sub_2356594B0(0, (unint64_t *)&qword_268814020);
    id v34 = v33;
    sub_23594A2F8();
    sub_23594A2F8();
    sub_23594A2F8();
    sub_23594A2F8();
    sub_23594A2F8();
    *(float *)&double v35 = (float)(*(float *)&v82 + v84) * 0.5;
    *(float *)&double v36 = (float)(*(float *)&v81 + *((float *)&v82 + 1)) * 0.5;
    LODWORD(v37) = HIDWORD(v81);
    objc_msgSend(v34, sel_convertPosition_toNode_, 0, v36, v37, v35);
    int v39 = v38;
    int v41 = v40;
    int v43 = v42;

    uint64_t v44 = (void *)sub_235949968();
    swift_bridgeObjectRelease();
    LODWORD(v45) = v39;
    LODWORD(v46) = v41;
    LODWORD(v47) = v43;
    LODWORD(v48) = v23;
    LODWORD(v49) = v25;
    LODWORD(v50) = v27;
    id v51 = objc_msgSend(v32, sel_hitTestWithSegmentFromPoint_toPoint_options_, v44, v45, v46, v47, v48, v49, v50);

    sub_2356594B0(0, &qword_268810678);
    unint64_t v2 = sub_235949D78();

    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_23594A998();
      uint64_t v52 = result;
      if (!result)
      {
LABEL_36:
        swift_bridgeObjectRelease_n();
        return 1;
      }
    }
    else
    {
      uint64_t v52 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v52) {
        goto LABEL_36;
      }
    }
    if ((v2 & 0xC000000000000001) == 0) {
      break;
    }
    id v54 = (id)MEMORY[0x237DE87D0](0, v2);
LABEL_15:
    BOOL v55 = v54;
    swift_bridgeObjectRelease();
    BOOL v56 = (uint64_t *)(qword_26AF181E0
                    + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectPointerShape);
    uint64_t v57 = swift_beginAccess();
    uint64_t v79 = *v56;
    MEMORY[0x270FA5388](v57, v58, v59, v60, v61);
    swift_bridgeObjectRetain();
    sub_23594A2A8();
    swift_bridgeObjectRelease();
    if (!v80)
    {
      swift_bridgeObjectRelease();
      sub_2356594B0(0, (unint64_t *)&qword_26AF15420);
      id v70 = objc_msgSend(v55, sel_node);
      char v71 = sub_23594A4B8();

      if (v71)
      {

        return 0;
      }
      id v72 = objc_msgSend(v55, sel_node);
      id v73 = objc_msgSend(v72, sel_physicsBody);

      if (!v73 || (unsigned __int8 v74 = objc_msgSend(v73, sel_categoryBitMask), v73, (v74 & 2) == 0))
      {
        id v75 = objc_msgSend(v55, sel_node, v77);
        id v76 = objc_msgSend(v75, sel_categoryBitMask);

        return v76 == (id)16;
      }

      return 1;
    }
    uint64_t v77 = v55;
    sub_2356594B0(0, (unint64_t *)&qword_26AF15420);
    uint64_t v62 = 4;
    while (1)
    {
      id v63 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x237DE87D0](v62 - 4, v2) : *(id *)(v2 + 8 * v62);
      long long v64 = v63;
      uint64_t v65 = v62 - 3;
      if (__OFADD__(v62 - 4, 1)) {
        break;
      }
      id v66 = objc_msgSend(v63, sel_node);
      char v67 = sub_23594A4B8();

      if (v67)
      {

        swift_bridgeObjectRelease();
        return 0;
      }
      id v68 = objc_msgSend(v64, sel_node);
      id v69 = objc_msgSend(v68, sel_categoryBitMask);

      if (v69 != (id)16)
      {
        ++v62;
        if (v65 != v52) {
          continue;
        }
      }

      goto LABEL_25;
    }
    __break(1u);
LABEL_34:
    swift_once();
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v54 = *(id *)(v2 + 32);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_2356DC18C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

uint64_t sub_2356DC284(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2356DF324();
  uint64_t result = sub_23594A008();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = (long long *)(a1 + 32);
    do
    {
      long long v5 = v4[3];
      void v10[2] = v4[2];
      void v10[3] = v5;
      v10[4] = v4[4];
      long long v7 = *v4;
      long long v6 = v4[1];
      v4 += 5;
      v10[0] = v7;
      v10[1] = v6;
      sub_2356DD6E0((id *)v10);
      sub_2356CF6D4(v8, (id *)v10);

      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_2356DC320(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2356DF378();
  uint64_t result = sub_23594A008();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (long long *)(a1 + 32);
    do
    {
      long long v5 = v4[3];
      v11[2] = v4[2];
      void v11[3] = v5;
      v12[0] = v4[4];
      *(_OWORD *)((char *)v12 + 12) = *(long long *)((char *)v4 + 76);
      long long v6 = *v4;
      long long v7 = v4[1];
      v4 += 6;
      v11[0] = v6;
      v11[1] = v7;
      sub_2356DF3CC((id *)v11);
      sub_2356D0604(v9, v11);
      uint64_t v8 = *(void **)&v9[0];
      swift_bridgeObjectRelease();

      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_2356DC3CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

void *sub_2356DC4C4(unint64_t a1, float32x4_t a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_23594A998())
  {
    unint64_t v4 = a1 & 0xC000000000000001;
    unint64_t v5 = (void *)MEMORY[0x263F8EE78];
    uint64_t v6 = 4;
    uint64_t v31 = v3;
    while (1)
    {
      id v8 = v4 ? (id)MEMORY[0x237DE87D0](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      uint64_t v9 = v8;
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      sub_2356CA6F0(v8, &v24, a2);

      if ((unint64_t)v25 <= 0xFFFFFFFEFFFFFFFFLL)
      {
        long long v22 = v25;
        uint64_t v11 = v24;
        long long v20 = v27;
        long long v21 = v26;
        long long v18 = v29;
        long long v19 = v28;
        int v12 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v5 = sub_2356CE1A0(0, v5[2] + 1, 1, v5);
        }
        unint64_t v14 = v5[2];
        unint64_t v13 = v5[3];
        long long v15 = v22;
        if (v14 >= v13 >> 1)
        {
          uint64_t v16 = sub_2356CE1A0((void *)(v13 > 1), v14 + 1, 1, v5);
          long long v15 = v22;
          unint64_t v5 = v16;
        }
        void v5[2] = v14 + 1;
        long long v7 = &v5[12 * v14];
        long long v7[4] = v11;
        *(_OWORD *)(v7 + 5) = v15;
        *(_OWORD *)(v7 + 7) = v21;
        *(_OWORD *)(v7 + 9) = v20;
        *(_OWORD *)(v7 + 11) = v19;
        *(_OWORD *)(v7 + 13) = v18;
        *((_DWORD *)v7 + 30) = v12;
        uint64_t v3 = v31;
        unint64_t v4 = a1 & 0xC000000000000001;
      }
      ++v6;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  unint64_t v5 = (void *)MEMORY[0x263F8EE78];
LABEL_18:
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2356DC6B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF14430);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

uint64_t sub_2356DC7C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268810638);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

uint64_t sub_2356DC8D4(uint64_t a1)
{
  return sub_2356DD2F0(a1, (void (*)(void))sub_2356DF150, (uint64_t)&type metadata for TextDetectionFeedback, &qword_268810540);
}

uint64_t sub_2356DC8FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23594A9E8();
  __break(1u);
  return result;
}

uint64_t sub_2356DC9F4(uint64_t a1)
{
  return sub_2356DCA1C(a1, (void (*)(void))sub_2356DEA8C, (uint64_t)&type metadata for DoorDetectionFeedback, &qword_268810428);
}

uint64_t sub_2356DCA1C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_23594A008();
  uint64_t v11 = result;
  if (v6)
  {
    id v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      sub_2356D1164(&v10, v9, a4);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}