uint64_t Optional.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  long long v18[2];
  uint64_t v19;
  void v20[4];

  v1 = *(void *)(a1 + 16);
  v2 = *(void *)(v1 - 8);
  v3 = ((uint64_t (*)(void))__chkstk_darwin)();
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)v18 - v7;
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v18 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v13, 1, v1) == 1) {
    return 7104878;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v11, v13, v1);
  v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v16(v8, v11, v1);
  sub_100004BB0(&qword_1000A5E48);
  if (swift_dynamicCast())
  {
    sub_100004C54(v18, (uint64_t)v20);
    sub_100004C6C(v20, v20[3]);
    v15 = sub_100085530();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
    sub_100004CB0((uint64_t)v20);
  }
  else
  {
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_100004BF4((uint64_t)v18);
    v16(v5, v11, v1);
    v15 = sub_100084D20();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
  }
  return v15;
}

uint64_t sub_100004BB0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100004BF4(uint64_t a1)
{
  uint64_t v2 = sub_100004BB0((uint64_t *)&unk_1000A7110);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100004C54(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *sub_100004C6C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100004CB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t variable initialization expression of MainHostViewController.contentVC()
{
  return 0;
}

id variable initialization expression of MainHostViewController.statusInfoViewCtrl()
{
  LOBYTE(v5) = 2;
  id v0 = objc_allocWithZone((Class)sub_100004BB0(&qword_1000A5E50));
  uint64_t v1 = (void *)sub_100084750();
  id result = objc_msgSend(v1, "view", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v5);
  if (result)
  {
    long long v3 = result;
    id v4 = [self clearColor];
    [v3 setBackgroundColor:v4];

    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100004DD4(void *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_100004DDC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void *sub_100004DF0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_100004DFC(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

__n128 initializeWithTake for AnalyticsError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ProfileIcon(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ProfileIcon(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize()
{
  if (!qword_1000A5E58)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1000A5E58);
    }
  }
}

uint64_t sub_100004EB8()
{
  return sub_100005CE0((unint64_t *)&qword_1000A5E60, (void (*)(uint64_t))sub_100004F00);
}

unint64_t sub_100004F00()
{
  unint64_t result = qword_1000A5E68;
  if (!qword_1000A5E68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A5E68);
  }
  return result;
}

uint64_t sub_100004F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100004F64, v3, 0);
}

uint64_t sub_100004F64()
{
  v0[6] = *(void *)(v0[5] + 120);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005014;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_100065AD0(v4, v2, v3);
}

uint64_t sub_100005014()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100005124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100005148, v3, 0);
}

uint64_t sub_100005148()
{
  v0[6] = *(void *)(v0[5] + 120);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005D28;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_10006763C(v4, v2, v3);
}

uint64_t sub_1000051F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_1000052B8;
  return _swift_task_switch(sub_100004F64, v3, 0);
}

uint64_t sub_1000052B8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000053AC()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1000053CC, v0, 0);
}

uint64_t sub_1000053CC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 120);
  *(void *)(v0 + 24) = v1;
  swift_retain();
  return _swift_task_switch(sub_100005444, v1, 0);
}

uint64_t sub_100005444()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100071EF8(v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1000054E0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_100005500, v1, 0);
}

uint64_t sub_100005500()
{
  v0[4] = *(void *)(v0[3] + 120);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000055AC;
  uint64_t v2 = v0[2];
  return sub_100065CA0(v2);
}

uint64_t sub_1000055AC()
{
  uint64_t v2 = (void *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3];
    return _swift_task_switch(sub_1000056E8, v3, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_1000056E8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000574C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_100005D30;
  return _swift_task_switch(sub_100005148, v3, 0);
}

uint64_t sub_10000580C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100005830, v3, 0);
}

uint64_t sub_100005830()
{
  v0[6] = *(void *)(v0[5] + 120);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000058E0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_1000680F4(v4, v2, v3);
}

uint64_t sub_1000058E0()
{
  uint64_t v2 = (void *)*v1;
  v2[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[5];
    return _swift_task_switch(sub_100005A1C, v3, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_100005A1C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100005A80(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_100005AA0, v1, 0);
}

uint64_t sub_100005AA0()
{
  v0[4] = *(void *)(v0[3] + 120);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005B4C;
  uint64_t v2 = v0[2];
  return sub_100068988(v2);
}

uint64_t sub_100005B4C()
{
  uint64_t v2 = (void *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3];
    return _swift_task_switch(sub_100005D2C, v3, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_100005C88(uint64_t a1)
{
  uint64_t result = sub_100005CE0(&qword_1000A5F10, (void (*)(uint64_t))type metadata accessor for NetworkManager);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100005CE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100005D34()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB588 = result;
  unk_1000AB590 = v1;
  byte_1000AB598 = v2 & 1;
  qword_1000AB5A0 = v3;
  return result;
}

uint64_t sub_100005D78()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB5A8 = result;
  unk_1000AB5B0 = v1;
  byte_1000AB5B8 = v2 & 1;
  qword_1000AB5C0 = v3;
  return result;
}

uint64_t sub_100005DC8()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB5C8 = result;
  unk_1000AB5D0 = v1;
  byte_1000AB5D8 = v2 & 1;
  qword_1000AB5E0 = v3;
  return result;
}

uint64_t sub_100005E04()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB5E8 = result;
  unk_1000AB5F0 = v1;
  byte_1000AB5F8 = v2 & 1;
  qword_1000AB600 = v3;
  return result;
}

uint64_t sub_100005E48()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB608 = result;
  unk_1000AB610 = v1;
  byte_1000AB618 = v2 & 1;
  qword_1000AB620 = v3;
  return result;
}

uint64_t sub_100005E90()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB628 = result;
  unk_1000AB630 = v1;
  byte_1000AB638 = v2 & 1;
  qword_1000AB640 = v3;
  return result;
}

uint64_t sub_100005EDC()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB648 = result;
  unk_1000AB650 = v1;
  byte_1000AB658 = v2 & 1;
  qword_1000AB660 = v3;
  return result;
}

uint64_t sub_100005F2C()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB668 = result;
  unk_1000AB670 = v1;
  byte_1000AB678 = v2 & 1;
  qword_1000AB680 = v3;
  return result;
}

uint64_t sub_100005F6C()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB688 = result;
  unk_1000AB690 = v1;
  byte_1000AB698 = v2 & 1;
  qword_1000AB6A0 = v3;
  return result;
}

uint64_t sub_100005FB4()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB6A8 = result;
  unk_1000AB6B0 = v1;
  byte_1000AB6B8 = v2 & 1;
  qword_1000AB6C0 = v3;
  return result;
}

uint64_t sub_100005FFC()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB6C8 = result;
  unk_1000AB6D0 = v1;
  byte_1000AB6D8 = v2 & 1;
  qword_1000AB6E0 = v3;
  return result;
}

uint64_t sub_100006044()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB6E8 = result;
  unk_1000AB6F0 = v1;
  byte_1000AB6F8 = v2 & 1;
  qword_1000AB700 = v3;
  return result;
}

uint64_t sub_10000608C()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB708 = result;
  unk_1000AB710 = v1;
  byte_1000AB718 = v2 & 1;
  qword_1000AB720 = v3;
  return result;
}

uint64_t sub_1000060D0()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB728 = result;
  unk_1000AB730 = v1;
  byte_1000AB738 = v2 & 1;
  qword_1000AB740 = v3;
  return result;
}

uint64_t sub_100006118()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB748 = result;
  unk_1000AB750 = v1;
  byte_1000AB758 = v2 & 1;
  qword_1000AB760 = v3;
  return result;
}

uint64_t sub_100006160()
{
  if (qword_1000A5E10 != -1) {
    swift_once();
  }
  if (byte_1000AB9AB == 1)
  {
    swift_bridgeObjectRetain();
    v4._countAndFlagsBits = 0x495041575FLL;
    v4._object = (void *)0xE500000000000000;
    sub_100084D60(v4);
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_100084710();
  qword_1000AB768 = result;
  unk_1000AB770 = v1;
  byte_1000AB778 = v2 & 1;
  qword_1000AB780 = v3;
  return result;
}

uint64_t sub_100006290()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB788 = result;
  unk_1000AB790 = v1;
  byte_1000AB798 = v2 & 1;
  qword_1000AB7A0 = v3;
  return result;
}

uint64_t sub_1000062D8()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB7A8 = result;
  unk_1000AB7B0 = v1;
  byte_1000AB7B8 = v2 & 1;
  qword_1000AB7C0 = v3;
  return result;
}

uint64_t sub_100006324()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB7C8 = result;
  unk_1000AB7D0 = v1;
  byte_1000AB7D8 = v2 & 1;
  qword_1000AB7E0 = v3;
  return result;
}

uint64_t sub_10000636C()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB7E8 = result;
  unk_1000AB7F0 = v1;
  byte_1000AB7F8 = v2 & 1;
  qword_1000AB800 = v3;
  return result;
}

uint64_t sub_1000063B4()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB808 = result;
  unk_1000AB810 = v1;
  byte_1000AB818 = v2 & 1;
  qword_1000AB820 = v3;
  return result;
}

uint64_t sub_1000063FC()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB828 = result;
  unk_1000AB830 = v1;
  byte_1000AB838 = v2 & 1;
  qword_1000AB840 = v3;
  return result;
}

uint64_t sub_100006444()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB848 = result;
  unk_1000AB850 = v1;
  byte_1000AB858 = v2 & 1;
  qword_1000AB860 = v3;
  return result;
}

uint64_t sub_100006490()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB868 = result;
  unk_1000AB870 = v1;
  byte_1000AB878 = v2 & 1;
  qword_1000AB880 = v3;
  return result;
}

uint64_t sub_1000064D8()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB888 = result;
  unk_1000AB890 = v1;
  byte_1000AB898 = v2 & 1;
  qword_1000AB8A0 = v3;
  return result;
}

uint64_t sub_100006520()
{
  if (qword_1000A5E10 != -1) {
    swift_once();
  }
  uint64_t result = sub_100084710();
  qword_1000AB8A8 = result;
  unk_1000AB8B0 = v1;
  byte_1000AB8B8 = v2 & 1;
  qword_1000AB8C0 = v3;
  return result;
}

uint64_t sub_1000065FC()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB8C8 = result;
  unk_1000AB8D0 = v1;
  byte_1000AB8D8 = v2 & 1;
  qword_1000AB8E0 = v3;
  return result;
}

uint64_t sub_100006644()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB8E8 = result;
  unk_1000AB8F0 = v1;
  byte_1000AB8F8 = v2 & 1;
  qword_1000AB900 = v3;
  return result;
}

uint64_t sub_10000668C()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB908 = result;
  unk_1000AB910 = v1;
  byte_1000AB918 = v2 & 1;
  qword_1000AB920 = v3;
  return result;
}

uint64_t sub_1000066D4()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB928 = result;
  unk_1000AB930 = v1;
  byte_1000AB938 = v2 & 1;
  qword_1000AB940 = v3;
  return result;
}

uint64_t sub_100006714()
{
  uint64_t result = sub_1000846F0();
  qword_1000AB948 = result;
  unk_1000AB950 = v1;
  byte_1000AB958 = v2 & 1;
  qword_1000AB960 = v3;
  return result;
}

uint64_t *sub_100006750()
{
  type metadata accessor for NetworkManager();
  swift_allocObject();
  uint64_t result = sub_10000678C();
  qword_1000AB968 = (uint64_t)result;
  return result;
}

uint64_t *sub_10000678C()
{
  uint64_t v1 = *v0;
  swift_defaultActor_initialize();
  type metadata accessor for BetaEnrollmentNetworkingSession();
  swift_allocObject();
  v0[14] = (uint64_t)sub_10005D6FC();
  type metadata accessor for CarrySettingsNetworkingSession();
  swift_allocObject();
  v0[15] = sub_10006A9E0();
  sub_100058E34(0x696C616974696E49, 0xEC000000676E697ALL, v1, (uint64_t)&off_10009E898);
  return v0;
}

uint64_t sub_100006858()
{
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for NetworkManager()
{
  return self;
}

uint64_t sub_1000068BC()
{
  return v0;
}

uint64_t initializeBufferWithCopyOfBuffer for AnalyticsInteger(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for BetaEnrollmentMetricsSession()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BetaEnrollmentMetricsSession(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  uint64_t v7 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v7;
  uint64_t v8 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v8;
  uint64_t v9 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v9;
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  uint64_t v10 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v10;
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v11 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v11;
  LODWORD(v8) = *(_DWORD *)(a2 + 224);
  *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
  *(_DWORD *)(a1 + 224) = v8;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BetaEnrollmentMetricsSession(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v6;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v7;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = v8;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v9;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v10 = *(_DWORD *)(a2 + 224);
  *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
  *(_DWORD *)(a1 + 224) = v10;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BetaEnrollmentMetricsSession(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for BetaEnrollmentMetricsSession(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  uint64_t v7 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v8 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  uint64_t v9 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  uint64_t v10 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BetaEnrollmentMetricsSession(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 240)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BetaEnrollmentMetricsSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 240) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 240) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BetaEnrollmentMetricsSession()
{
  return &type metadata for BetaEnrollmentMetricsSession;
}

void *sub_100006ED0()
{
  sub_100004BB0(&qword_1000A6018);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100086200;
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)(v0 + 33);
  v20[0] = *(_OWORD *)(v0 + 24);
  *(void *)(inited + 56) = &type metadata for AnalyticsInteger;
  *(void *)(inited + 64) = &off_1000A6328;
  uint64_t v2 = swift_allocObject();
  *(void *)(inited + 32) = v2;
  *(_OWORD *)(v2 + 25) = *(_OWORD *)(v0 + 33);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  v19[0] = *(_OWORD *)(v0 + 64);
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)(v0 + 73);
  *(void *)(inited + 96) = &type metadata for AnalyticsInteger;
  *(void *)(inited + 104) = &off_1000A6328;
  uint64_t v3 = swift_allocObject();
  *(void *)(inited + 72) = v3;
  *(_OWORD *)(v3 + 25) = *(_OWORD *)(v0 + 73);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 64);
  v18[0] = *(_OWORD *)(v0 + 96);
  long long v4 = v18[0];
  *(void *)((char *)v18 + 13) = *(void *)(v0 + 109);
  uint64_t v5 = *(void *)((char *)v18 + 13);
  *(void *)(inited + 136) = &type metadata for AnalyticsFloat;
  *(void *)(inited + 144) = &off_1000A62E8;
  *(_OWORD *)(inited + 112) = v4;
  *(void *)(inited + 125) = v5;
  v17[0] = *(_OWORD *)(v0 + 120);
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)(v0 + 129);
  *(void *)(inited + 176) = &type metadata for AnalyticsInteger;
  *(void *)(inited + 184) = &off_1000A6328;
  uint64_t v6 = swift_allocObject();
  *(void *)(inited + 152) = v6;
  *(_OWORD *)(v6 + 25) = *(_OWORD *)(v0 + 129);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 120);
  v16[0] = *(_OWORD *)(v0 + 152);
  long long v7 = v16[0];
  *(void *)((char *)v16 + 13) = *(void *)(v0 + 165);
  uint64_t v8 = *(void *)((char *)v16 + 13);
  *(void *)(inited + 216) = &type metadata for AnalyticsFloat;
  *(void *)(inited + 224) = &off_1000A62E8;
  *(_OWORD *)(inited + 192) = v7;
  *(void *)(inited + 205) = v8;
  v15[0] = *(_OWORD *)(v0 + 176);
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)(v0 + 185);
  *(void *)(inited + 256) = &type metadata for AnalyticsInteger;
  *(void *)(inited + 264) = &off_1000A6328;
  uint64_t v9 = swift_allocObject();
  *(void *)(inited + 232) = v9;
  *(_OWORD *)(v9 + 25) = *(_OWORD *)(v0 + 185);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v0 + 176);
  v14[0] = *(_OWORD *)(v0 + 208);
  long long v10 = v14[0];
  *(void *)((char *)v14 + 13) = *(void *)(v0 + 221);
  uint64_t v11 = *(void *)((char *)v14 + 13);
  *(void *)(inited + 296) = &type metadata for AnalyticsFloat;
  *(void *)(inited + 304) = &off_1000A62E8;
  *(_OWORD *)(inited + 272) = v10;
  *(void *)(inited + 285) = v11;
  sub_10000820C((uint64_t)v20);
  sub_10000820C((uint64_t)v19);
  sub_10000820C((uint64_t)v18);
  sub_10000820C((uint64_t)v17);
  sub_10000820C((uint64_t)v16);
  sub_10000820C((uint64_t)v15);
  sub_10000820C((uint64_t)v14);
  long long v12 = sub_100056580(inited);
  swift_setDeallocating();
  sub_100004BB0(qword_1000A6020);
  swift_arrayDestroy();
  return v12;
}

void sub_10000710C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)v0;
  uint64_t v3 = *(void *)(v0 + 40);
  int v4 = *(unsigned __int8 *)(v0 + 48);
  if (v4 == 1)
  {
    if (v2 <= 0) {
      return;
    }
  }
  else if (v3 >= v2)
  {
    return;
  }
  uint64_t v5 = *(void *)(v0 + 8);
  char v6 = *(unsigned char *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = *(void *)(v0 + 32);
  long long v9 = *(_OWORD *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 80);
  char v12 = *(unsigned char *)(v0 + 88);
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  int v15 = *(_DWORD *)(v0 + 112);
  char v16 = *(unsigned char *)(v0 + 116);
  long long v17 = *(_OWORD *)(v0 + 120);
  uint64_t v18 = *(void *)(v0 + 136);
  char v19 = *(unsigned char *)(v0 + 144);
  uint64_t v20 = *(void *)(v0 + 152);
  uint64_t v21 = *(void *)(v0 + 160);
  int v22 = *(_DWORD *)(v0 + 168);
  char v23 = *(unsigned char *)(v1 + 172);
  long long v24 = *(_OWORD *)(v1 + 176);
  uint64_t v25 = *(void *)(v1 + 192);
  char v26 = *(unsigned char *)(v1 + 200);
  uint64_t v27 = *(void *)(v1 + 208);
  uint64_t v28 = *(void *)(v1 + 216);
  int v29 = *(_DWORD *)(v1 + 224);
  char v30 = *(unsigned char *)(v1 + 228);
  uint64_t v31 = *(void *)(v1 + 232);
  v32[0] = v2;
  v32[1] = v5;
  char v33 = v6;
  uint64_t v34 = v7;
  uint64_t v35 = v8;
  uint64_t v36 = v3;
  char v37 = v4;
  long long v38 = v9;
  uint64_t v39 = v10;
  uint64_t v40 = v11;
  char v41 = v12;
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  int v44 = v15;
  char v45 = v16;
  long long v46 = v17;
  uint64_t v47 = v18;
  char v48 = v19;
  uint64_t v49 = v20;
  uint64_t v50 = v21;
  int v51 = v22;
  char v52 = v23;
  long long v53 = v24;
  uint64_t v54 = v25;
  char v55 = v26;
  uint64_t v56 = v27;
  uint64_t v57 = v28;
  int v58 = v29;
  char v59 = v30;
  uint64_t v60 = v31;
  sub_100007F6C((uint64_t)v32);
  sub_100085340(17);
  swift_bridgeObjectRelease();
  v61._countAndFlagsBits = sub_100085530();
  sub_100084D60(v61);
  swift_bridgeObjectRelease();
  sub_10001EA24(0x6320656369766544, 0xEF203D20746E756FLL);
  swift_bridgeObjectRelease();
  sub_100008128((uint64_t)v32);
  *(void *)(v1 + 40) = v2;
  *(unsigned char *)(v1 + 48) = 0;
}

uint64_t sub_1000072D4()
{
  long long v1 = *(_OWORD *)(v0 + 192);
  long long v2 = *(_OWORD *)(v0 + 208);
  long long v3 = *(_OWORD *)(v0 + 160);
  v13[11] = *(_OWORD *)(v0 + 176);
  v13[12] = v1;
  long long v4 = *(_OWORD *)(v0 + 224);
  v13[13] = v2;
  v13[14] = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  long long v6 = *(_OWORD *)(v0 + 144);
  long long v7 = *(_OWORD *)(v0 + 96);
  v13[7] = *(_OWORD *)(v0 + 112);
  v13[8] = v5;
  v13[9] = v6;
  v13[10] = v3;
  long long v8 = *(_OWORD *)(v0 + 80);
  v13[4] = *(_OWORD *)(v0 + 64);
  v13[5] = v8;
  v13[6] = v7;
  long long v9 = *(_OWORD *)(v0 + 16);
  v13[0] = *(_OWORD *)v0;
  v13[1] = v9;
  long long v10 = *(_OWORD *)(v0 + 48);
  v13[2] = *(_OWORD *)(v0 + 32);
  v13[3] = v10;
  uint64_t v11 = *((void *)&v13[0] + 1);
  sub_100007F6C((uint64_t)v13);
  sub_100085340(25);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = sub_100085530();
  sub_100084D60(v14);
  swift_bridgeObjectRelease();
  sub_10001EA24(0xD000000000000017, 0x800000010008A1A0);
  swift_bridgeObjectRelease();
  uint64_t result = sub_100008128((uint64_t)v13);
  *(void *)(v0 + 192) = v11;
  *(unsigned char *)(v0 + 200) = 0;
  return result;
}

uint64_t sub_1000073E8(unint64_t a1)
{
  long long v3 = v1[13];
  v40[12] = v1[12];
  v40[13] = v3;
  v40[14] = v1[14];
  long long v4 = v1[9];
  v40[8] = v1[8];
  v40[9] = v4;
  long long v5 = v1[11];
  v40[10] = v1[10];
  v40[11] = v5;
  long long v6 = v1[5];
  v40[4] = v1[4];
  v40[5] = v6;
  long long v7 = v1[7];
  v40[6] = v1[6];
  v40[7] = v7;
  long long v8 = v1[1];
  v40[0] = *v1;
  v40[1] = v8;
  long long v9 = v1[3];
  v40[2] = v1[2];
  v40[3] = v9;
  sub_100007F6C((uint64_t)v40);
  sub_100004F00();
  v41._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v41);
  swift_bridgeObjectRelease();
  sub_10001EA24(0x6F726E6520646944, 0xEB00000000206C6CLL);
  swift_bridgeObjectRelease();
  sub_100008128((uint64_t)v40);
  if (a1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_1000854A0())
  {
    unint64_t v11 = 0;
    char v12 = (uint64_t *)(v34 + 56);
    uint64_t v38 = v10;
    unint64_t v39 = a1 & 0xC000000000000001;
    unint64_t v35 = a1 + 32;
    uint64_t v36 = a1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v37 = a1;
    while (1)
    {
      if (v39)
      {
        id v13 = (id)sub_100085380();
      }
      else
      {
        if (v11 >= *(void *)(v36 + 16)) {
          goto LABEL_43;
        }
        id v13 = *(id *)(v35 + 8 * v11);
      }
      Swift::String v14 = v13;
      if (__OFADD__(v11++, 1))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      uint64_t v16 = *v12;
      if ((unint64_t)*v12 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v17 = sub_1000854A0();
        if (!v17) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v17) {
          goto LABEL_17;
        }
      }
      if ((v16 & 0xC000000000000001) != 0) {
        id v18 = (id)sub_100085380();
      }
      else {
        id v18 = *(id *)(v16 + 32);
      }
      char v19 = v18;
      char v20 = sub_1000851D0();

      if (v20) {
        goto LABEL_4;
      }
      if (v17 == 1) {
        goto LABEL_17;
      }
      if ((v16 & 0xC000000000000001) == 0) {
        break;
      }
      sub_100085380();
      char v22 = sub_1000851D0();
      swift_unknownObjectRelease();
      if ((v22 & 1) == 0)
      {
        if (v17 != 2)
        {
          uint64_t v23 = 2;
          do
          {
            sub_100085380();
            a1 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_42;
            }
            char v24 = sub_1000851D0();
            swift_unknownObjectRelease();
            if (v24) {
              goto LABEL_37;
            }
            ++v23;
            BOOL v25 = a1 == v17;
            a1 = v37;
          }
          while (!v25);
        }
LABEL_17:
        swift_bridgeObjectRelease_n();
        id v21 = v14;
        sub_100084E60();
        if (*(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_100084ED0();
        }
        sub_100084F20();
        sub_100084EA0();
        goto LABEL_5;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();
LABEL_5:

      if (v11 == v38) {
        goto LABEL_46;
      }
    }
    id v26 = *(id *)(v16 + 40);
    char v27 = sub_1000851D0();

    if (v27) {
      goto LABEL_4;
    }
    if (v17 == 2) {
      goto LABEL_17;
    }
    uint64_t v28 = 6;
    while (1)
    {
      a1 = v28 - 3;
      if (__OFADD__(v28 - 4, 1)) {
        break;
      }
      id v29 = *(id *)(v16 + 8 * v28);
      char v30 = sub_1000851D0();

      if (v30)
      {
LABEL_37:
        swift_bridgeObjectRelease_n();
        a1 = v37;
        goto LABEL_5;
      }
      ++v28;
      BOOL v25 = a1 == v17;
      a1 = v37;
      if (v25) {
        goto LABEL_17;
      }
    }
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
  }
LABEL_46:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v32 = *(void *)(v34 + 56);
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1000854A0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v34 + 80) = v33;
  *(unsigned char *)(v34 + 88) = 0;
  return result;
}

uint64_t sub_100007810(unint64_t a1)
{
  long long v3 = v1[13];
  v41[12] = v1[12];
  v41[13] = v3;
  v41[14] = v1[14];
  long long v4 = v1[9];
  v41[8] = v1[8];
  v41[9] = v4;
  long long v5 = v1[11];
  v41[10] = v1[10];
  v41[11] = v5;
  long long v6 = v1[5];
  v41[4] = v1[4];
  v41[5] = v6;
  long long v7 = v1[7];
  v41[6] = v1[6];
  v41[7] = v7;
  long long v8 = v1[1];
  v41[0] = *v1;
  v41[1] = v8;
  long long v9 = v1[3];
  v41[2] = v1[2];
  v41[3] = v9;
  strcpy((char *)v40, "Did unenroll ");
  HIWORD(v40[1]) = -4864;
  sub_100007F6C((uint64_t)v41);
  sub_100004F00();
  v42._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v42);
  swift_bridgeObjectRelease();
  sub_10001EA24(v40[0], v40[1]);
  swift_bridgeObjectRelease();
  sub_100008128((uint64_t)v41);
  if (a1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_1000854A0())
  {
    unint64_t v11 = 0;
    char v12 = (uint64_t *)(v34 + 232);
    uint64_t v38 = v10;
    unint64_t v39 = a1 & 0xC000000000000001;
    unint64_t v35 = a1 + 32;
    uint64_t v36 = a1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v37 = a1;
    while (1)
    {
      if (v39)
      {
        id v13 = (id)sub_100085380();
      }
      else
      {
        if (v11 >= *(void *)(v36 + 16)) {
          goto LABEL_43;
        }
        id v13 = *(id *)(v35 + 8 * v11);
      }
      Swift::String v14 = v13;
      if (__OFADD__(v11++, 1))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      uint64_t v16 = *v12;
      if ((unint64_t)*v12 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v17 = sub_1000854A0();
        if (!v17) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v17) {
          goto LABEL_17;
        }
      }
      if ((v16 & 0xC000000000000001) != 0) {
        id v18 = (id)sub_100085380();
      }
      else {
        id v18 = *(id *)(v16 + 32);
      }
      char v19 = v18;
      char v20 = sub_1000851D0();

      if (v20) {
        goto LABEL_4;
      }
      if (v17 == 1) {
        goto LABEL_17;
      }
      if ((v16 & 0xC000000000000001) == 0) {
        break;
      }
      sub_100085380();
      char v22 = sub_1000851D0();
      swift_unknownObjectRelease();
      if ((v22 & 1) == 0)
      {
        if (v17 != 2)
        {
          uint64_t v23 = 2;
          do
          {
            sub_100085380();
            a1 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_42;
            }
            char v24 = sub_1000851D0();
            swift_unknownObjectRelease();
            if (v24) {
              goto LABEL_37;
            }
            ++v23;
            BOOL v25 = a1 == v17;
            a1 = v37;
          }
          while (!v25);
        }
LABEL_17:
        swift_bridgeObjectRelease_n();
        id v21 = v14;
        sub_100084E60();
        if (*(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_100084ED0();
        }
        sub_100084F20();
        sub_100084EA0();
        goto LABEL_5;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();
LABEL_5:

      if (v11 == v38) {
        goto LABEL_46;
      }
    }
    id v26 = *(id *)(v16 + 40);
    char v27 = sub_1000851D0();

    if (v27) {
      goto LABEL_4;
    }
    if (v17 == 2) {
      goto LABEL_17;
    }
    uint64_t v28 = 6;
    while (1)
    {
      a1 = v28 - 3;
      if (__OFADD__(v28 - 4, 1)) {
        break;
      }
      id v29 = *(id *)(v16 + 8 * v28);
      char v30 = sub_1000851D0();

      if (v30)
      {
LABEL_37:
        swift_bridgeObjectRelease_n();
        a1 = v37;
        goto LABEL_5;
      }
      ++v28;
      BOOL v25 = a1 == v17;
      a1 = v37;
      if (v25) {
        goto LABEL_17;
      }
    }
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
  }
LABEL_46:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v32 = *(void *)(v34 + 232);
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1000854A0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v34 + 136) = v33;
  *(unsigned char *)(v34 + 144) = 0;
  return result;
}

uint64_t sub_100007C3C()
{
  if (*((unsigned char *)v0 + 16) == 1)
  {
    uint64_t v37 = *((void *)v0 + 4);
    uint64_t v38 = *((void *)v0 + 3);
    uint64_t v1 = *((void *)v0 + 5);
    char v2 = *((unsigned char *)v0 + 48);
    long long v3 = *(long long *)((char *)v0 + 56);
    uint64_t v4 = *((void *)v0 + 9);
    uint64_t v5 = *((void *)v0 + 10);
    char v6 = *((unsigned char *)v0 + 88);
    uint64_t v7 = *((void *)v0 + 12);
    uint64_t v8 = *((void *)v0 + 13);
    int v9 = *((_DWORD *)v0 + 28);
    char v10 = *((unsigned char *)v0 + 116);
    uint64_t v11 = *((void *)v0 + 15);
    uint64_t v12 = *((void *)v0 + 16);
    uint64_t v13 = *((void *)v0 + 17);
    char v14 = *((unsigned char *)v0 + 144);
    uint64_t v16 = *((void *)v0 + 19);
    uint64_t v15 = *((void *)v0 + 20);
    int v17 = *((_DWORD *)v0 + 42);
    char v18 = *((unsigned char *)v0 + 172);
    uint64_t v19 = *((void *)v0 + 22);
    uint64_t v20 = *((void *)v0 + 23);
    uint64_t v21 = *((void *)v0 + 24);
    char v22 = *((unsigned char *)v0 + 200);
    uint64_t v23 = *((void *)v0 + 26);
    uint64_t v24 = *((void *)v0 + 27);
    int v25 = *((_DWORD *)v0 + 56);
    char v26 = *((unsigned char *)v0 + 228);
    uint64_t v27 = *((void *)v0 + 29);
    long long v40 = *v0;
    char v41 = 1;
    uint64_t v42 = v38;
    uint64_t v43 = v37;
    uint64_t v44 = v1;
    uint64_t v39 = v1;
    char v28 = v2;
    char v45 = v2;
    long long v46 = v3;
    uint64_t v47 = v4;
    uint64_t v48 = v5;
    char v49 = v6;
    uint64_t v50 = v7;
    uint64_t v51 = v8;
    int v52 = v9;
    char v53 = v10;
    uint64_t v54 = v11;
    uint64_t v55 = v12;
    uint64_t v56 = v13;
    char v57 = v14;
    uint64_t v58 = v16;
    uint64_t v59 = v15;
    int v60 = v17;
    char v61 = v18;
    uint64_t v62 = v19;
    uint64_t v63 = v20;
    uint64_t v64 = v21;
    char v65 = v22;
    uint64_t v66 = v23;
    uint64_t v67 = v24;
    int v68 = v25;
    char v69 = v26;
    uint64_t v70 = v27;
    sub_100007F6C((uint64_t)&v40);
    sub_10001EA24(0x676E6970706F7453, 0xE800000000000000);
    sub_100008128((uint64_t)&v40);
    *((unsigned char *)v0 + 16) = 0;
    if ((v28 & 1) != 0 || v39 < 1) {
      goto LABEL_8;
    }
    if (v6)
    {
      if (v14) {
        goto LABEL_6;
      }
    }
    else
    {
      *((float *)v0 + 28) = (float)v5 / (float)v39;
      *((unsigned char *)v0 + 116) = 0;
      if (v14)
      {
LABEL_6:
        if (v22)
        {
LABEL_8:
          long long v29 = v0[13];
          v71[12] = v0[12];
          v71[13] = v29;
          v71[14] = v0[14];
          long long v30 = v0[9];
          v71[8] = v0[8];
          v71[9] = v30;
          long long v31 = v0[11];
          v71[10] = v0[10];
          v71[11] = v31;
          long long v32 = v0[5];
          v71[4] = v0[4];
          v71[5] = v32;
          long long v33 = v0[7];
          v71[6] = v0[6];
          v71[7] = v33;
          long long v34 = v0[1];
          v71[0] = *v0;
          v71[1] = v34;
          long long v35 = v0[3];
          v71[2] = v0[2];
          v71[3] = v35;
          sub_100007F6C((uint64_t)v71);
          sub_10005785C();
          sub_100008128((uint64_t)v71);
          return sub_100008018();
        }
LABEL_7:
        *((float *)v0 + 56) = (float)v21 / (float)v39;
        *((unsigned char *)v0 + 228) = 0;
        goto LABEL_8;
      }
    }
    *((float *)v0 + 42) = (float)v13 / (float)v39;
    *((unsigned char *)v0 + 172) = 0;
    if (v22) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  return result;
}

unint64_t sub_100007E84()
{
  return sub_100057D40();
}

unint64_t sub_100007EF0(uint64_t a1)
{
  unint64_t result = sub_100007F18();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100007F18()
{
  unint64_t result = qword_1000A6010;
  if (!qword_1000A6010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6010);
  }
  return result;
}

uint64_t sub_100007F6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100008018()
{
  long long v1 = *(_OWORD *)(v0 + 208);
  v9[12] = *(_OWORD *)(v0 + 192);
  v9[13] = v1;
  v9[14] = *(_OWORD *)(v0 + 224);
  long long v2 = *(_OWORD *)(v0 + 144);
  v9[8] = *(_OWORD *)(v0 + 128);
  v9[9] = v2;
  long long v3 = *(_OWORD *)(v0 + 176);
  v9[10] = *(_OWORD *)(v0 + 160);
  v9[11] = v3;
  long long v4 = *(_OWORD *)(v0 + 80);
  v9[4] = *(_OWORD *)(v0 + 64);
  v9[5] = v4;
  long long v5 = *(_OWORD *)(v0 + 112);
  v9[6] = *(_OWORD *)(v0 + 96);
  v9[7] = v5;
  long long v6 = *(_OWORD *)(v0 + 16);
  v9[0] = *(_OWORD *)v0;
  v9[1] = v6;
  long long v7 = *(_OWORD *)(v0 + 48);
  v9[2] = *(_OWORD *)(v0 + 32);
  v9[3] = v7;
  sub_100007F6C((uint64_t)v9);
  sub_10001EA24(0x6E69747465736552, 0xE900000000000067);
  sub_100008128((uint64_t)v9);
  *(void *)uint64_t v0 = 0;
  sub_10000710C();
  *(void *)(v0 + 8) = 0;
  sub_1000072D4();
  *(unsigned char *)(v0 + 16) = 0;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 232) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 88) = 1;
  *(_DWORD *)(v0 + 112) = 0;
  *(unsigned char *)(v0 + 116) = 1;
  *(void *)(v0 + 136) = 0;
  *(unsigned char *)(v0 + 144) = 1;
  *(_DWORD *)(v0 + 168) = 0;
  *(unsigned char *)(v0 + 172) = 1;
  *(void *)(v0 + 192) = 0;
  *(unsigned char *)(v0 + 200) = 1;
  *(_DWORD *)(v0 + 224) = 0;
  *(unsigned char *)(v0 + 228) = 1;
  return result;
}

uint64_t sub_100008128(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000081D4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_10000820C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100008238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100008240()
{
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_10000827C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1000082C4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 sub_100008334(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100008340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_100008390(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000083D8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for BetaSettingsView()
{
  return sub_10000C880();
}

uint64_t sub_100008430()
{
  sub_100004BB0(&qword_1000A6100);
  sub_100084A50();
  return v1;
}

uint64_t sub_100008478()
{
  return sub_100084A60();
}

uint64_t sub_1000084C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(a6 + 48);
  swift_unknownObjectRetain();
  v8(a5, a6);
  swift_unknownObjectRelease();
  swift_getAssociatedTypeWitness();
  sub_100084F60();
  swift_getWitnessTable();
  return sub_1000853A0();
}

BOOL sub_1000085B4()
{
  uint64_t v0 = sub_100084150();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  long long v6 = (char *)&v13 - v5;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v9 = swift_checkMetadataState();
  v8(v9, AssociatedConformanceWitness);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for BetaEnrollment.Availability.unavailable(_:), v0);
  sub_10000C838(&qword_1000A6160, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.Availability);
  char v10 = sub_100084CF0();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  return (v10 & 1) == 0;
}

uint64_t sub_1000087C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v100 = a4;
  unsigned int v99 = a3;
  uint64_t v108 = a1;
  uint64_t v109 = a2;
  v107 = a7;
  uint64_t v9 = sub_100084680();
  uint64_t v105 = *(void *)(v9 - 8);
  uint64_t v106 = v9;
  __chkstk_darwin(v9);
  v104 = (char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100084FF0();
  uint64_t v102 = *(void *)(v11 - 8);
  uint64_t v103 = v11;
  __chkstk_darwin(v11);
  v101 = (char *)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = a6;
  swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_100084F60();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = type metadata accessor for BetaSettingsRowView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v118 = (void *)v13;
  v119 = (void *)AssociatedTypeWitness;
  v120 = (void *)v15;
  unint64_t v121 = WitnessTable;
  uint64_t v122 = AssociatedConformanceWitness;
  sub_100084B70();
  sub_10000BD00(&qword_1000A60A8);
  sub_100084550();
  sub_100084BC0();
  sub_10000BD00(&qword_1000A60B0);
  swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_100084C10();
  uint64_t v19 = swift_getWitnessTable();
  v118 = &type metadata for Never;
  v119 = (void *)v18;
  v120 = &protocol witness table for Never;
  unint64_t v121 = v19;
  sub_100084850();
  uint64_t v20 = sub_100084790();
  uint64_t v94 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  v83 = (void *)((char *)v74 - v21);
  unint64_t v22 = sub_10000BD48();
  uint64_t v23 = swift_getWitnessTable();
  unint64_t v116 = v22;
  uint64_t v117 = v23;
  uint64_t v24 = swift_getWitnessTable();
  unint64_t v25 = sub_10000BD9C();
  v118 = (void *)v20;
  v119 = &type metadata for String;
  v74[0] = v20;
  v120 = (void *)v24;
  unint64_t v121 = v25;
  v74[2] = v24;
  v74[1] = v25;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v93 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v78 = (char *)v74 - v26;
  uint64_t v27 = sub_100084550();
  uint64_t v95 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  v81 = (char *)v74 - v28;
  uint64_t v77 = v27;
  uint64_t v29 = sub_100084550();
  uint64_t v96 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  v85 = (char *)v74 - v30;
  sub_1000844D0();
  uint64_t v82 = v29;
  uint64_t v31 = sub_100084550();
  uint64_t v97 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  v92 = (char *)v74 - v32;
  v118 = (void *)v20;
  v119 = &type metadata for String;
  v120 = (void *)v24;
  unint64_t v121 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v114 = OpaqueTypeConformance2;
  v115 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v112 = v76;
  v113 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v79 = v33;
  uint64_t v34 = sub_10000C838(&qword_1000A60C8, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
  uint64_t v110 = v33;
  uint64_t v111 = v34;
  uint64_t v88 = v31;
  uint64_t v87 = swift_getWitnessTable();
  v118 = (void *)v31;
  v119 = (void *)v87;
  v89 = &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>;
  uint64_t v90 = swift_getOpaqueTypeMetadata2();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v35 = __chkstk_darwin(v90);
  v80 = (char *)v74 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v84 = (void *)((char *)v74 - v37);
  uint64_t v38 = v83;
  uint64_t v39 = v108;
  LOBYTE(v29) = v99;
  uint64_t v40 = v100;
  uint64_t v41 = a5;
  uint64_t v42 = a5;
  uint64_t v43 = v98;
  sub_100009408(v108, v109, v99, v100, v42, v98, v83);
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 56);
  swift_unknownObjectRetain();
  uint64_t v45 = v44(v41, v43);
  uint64_t v47 = v46;
  swift_unknownObjectRelease();
  v118 = (void *)v45;
  v119 = v47;
  uint64_t v48 = v78;
  uint64_t v49 = v74[0];
  sub_100084930();
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v94 + 8))(v38, v49);
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v41;
  *(void *)(v50 + 24) = v43;
  uint64_t v51 = v109;
  *(void *)(v50 + 32) = v39;
  *(void *)(v50 + 40) = v51;
  LOBYTE(v49) = v29;
  *(unsigned char *)(v50 + 48) = v29;
  *(void *)(v50 + 56) = v40;
  uint64_t v52 = v40;
  swift_retain();
  swift_unknownObjectRetain();
  char v53 = v81;
  uint64_t v54 = OpaqueTypeMetadata2;
  sub_1000849B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v48, v54);
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v41;
  *(void *)(v55 + 24) = v43;
  *(void *)(v55 + 32) = v39;
  uint64_t v56 = v109;
  *(void *)(v55 + 40) = v109;
  *(unsigned char *)(v55 + 48) = v49;
  *(void *)(v55 + 56) = v52;
  swift_unknownObjectRetain();
  swift_retain();
  char v57 = v85;
  uint64_t v58 = v77;
  sub_1000848F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v53, v58);
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = v41;
  *(void *)(v59 + 24) = v43;
  *(void *)(v59 + 32) = v108;
  *(void *)(v59 + 40) = v56;
  *(unsigned char *)(v59 + 48) = v49;
  *(void *)(v59 + 56) = v52;
  swift_unknownObjectRetain();
  swift_retain();
  int v60 = v101;
  uint64_t v61 = v82;
  sub_100049C34();
  uint64_t v62 = v92;
  sub_100084970();
  swift_release();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v60, v103);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v57, v61);
  uint64_t v64 = v104;
  uint64_t v63 = v105;
  uint64_t v65 = v106;
  (*(void (**)(char *, void, uint64_t))(v105 + 104))(v104, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v106);
  uint64_t v66 = v80;
  uint64_t v67 = (void *)v88;
  int v68 = (void *)v87;
  sub_100084960();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  (*(void (**)(char *, void *))(v97 + 8))(v62, v67);
  v118 = v67;
  v119 = v68;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  uint64_t v70 = v84;
  uint64_t v71 = v90;
  sub_100049C38(v84, v66, v90, v69);
  v72 = *(void (**)(char *, uint64_t))(v91 + 8);
  v72(v66, v71);
  sub_100049C38(v107, v70, v71, v69);
  return ((uint64_t (*)(void *, uint64_t))v72)(v70, v71);
}

uint64_t sub_100009408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v53 = a4;
  unsigned int v52 = a3;
  uint64_t v58 = a2;
  uint64_t v56 = a7;
  uint64_t v51 = a6;
  char v57 = (char *)a5;
  swift_getAssociatedTypeWitness();
  sub_100084F60();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for BetaSettingsRowView();
  swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_100084B70();
  sub_10000BD00(&qword_1000A60A8);
  sub_100084550();
  sub_100084BC0();
  sub_10000BD00(&qword_1000A60B0);
  swift_getTupleTypeMetadata2();
  uint64_t v59 = &type metadata for Never;
  uint64_t v60 = sub_100084C10();
  unint64_t v61 = (unint64_t)&protocol witness table for Never;
  uint64_t WitnessTable = swift_getWitnessTable();
  v47[1] = WitnessTable;
  uint64_t v8 = sub_100084850();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v48 = (void *)((char *)v47 - v12);
  uint64_t v13 = sub_100084790();
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v47 - v14;
  uint64_t v50 = a1;
  uint64_t v16 = a1;
  char v17 = v52;
  uint64_t v18 = v53;
  uint64_t v19 = v51;
  uint64_t v59 = (void *)sub_1000084C4(v16, v58, v52, v53, (uint64_t)v57, v51);
  swift_getWitnessTable();
  char v20 = sub_100085160();
  uint64_t v21 = swift_bridgeObjectRelease();
  if (v20)
  {
    char v57 = v15;
    LOBYTE(v59) = v17 & 1;
    uint64_t v60 = v18;
    sub_100004BB0(&qword_1000A6100);
    sub_100084A50();
    v47[0] = v8;
    if (v72 == 1)
    {
      if (qword_1000A5D80 != -1) {
        swift_once();
      }
      uint64_t v58 = qword_1000AB748;
      unsigned int v22 = byte_1000AB758;
      uint64_t v23 = qword_1000AB760;
      uint64_t v24 = qword_1000A5D88;
      uint64_t v25 = unk_1000AB750;
      swift_bridgeObjectRetain();
      uint64_t v26 = v23;
      swift_bridgeObjectRetain();
      if (v24 != -1) {
        swift_once();
      }
      uint64_t v27 = qword_1000AB768;
      uint64_t v28 = byte_1000AB778;
      char v29 = 1;
      uint64_t v30 = unk_1000AB770;
      uint64_t v31 = qword_1000AB780;
      uint64_t v32 = v58;
    }
    else
    {
      if (qword_1000A5D70 != -1) {
        swift_once();
      }
      uint64_t v27 = 0;
      uint64_t v30 = 0;
      uint64_t v28 = 0;
      uint64_t v31 = 0;
      char v29 = 0;
      uint64_t v32 = qword_1000AB708;
      unsigned int v22 = byte_1000AB718;
      uint64_t v25 = unk_1000AB710;
      uint64_t v26 = qword_1000AB720;
    }
    uint64_t v53 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v58 = v32;
    uint64_t v59 = (void *)v32;
    uint64_t v60 = v25;
    unint64_t v61 = v22;
    uint64_t WitnessTable = v26;
    uint64_t AssociatedConformanceWitness = 0;
    uint64_t v64 = v27;
    uint64_t v65 = v30;
    uint64_t v66 = v28;
    uint64_t v67 = v31;
    uint64_t v36 = v31;
    uint64_t v68 = 0;
    char v37 = v29;
    char v69 = v29;
    sub_10000BD48();
    swift_getWitnessTable();
    uint64_t v15 = v57;
    sub_100049C74((uint64_t)&v59, (uint64_t)&type metadata for StatusInfoView);
    sub_10000C234(v58, v25, v22, v53, 0, v27, v30, v28, v36, 0, v37);
  }
  else
  {
    __chkstk_darwin(v21);
    v47[-6] = v57;
    v47[-5] = v19;
    uint64_t v43 = v50;
    uint64_t v44 = v58;
    char v45 = v17 & 1;
    uint64_t v46 = v18;
    sub_100084840();
    uint64_t v33 = swift_getWitnessTable();
    uint64_t v34 = v48;
    sub_100049C38(v48, v11, v8, v33);
    uint64_t v35 = *(void (**)(void *, uint64_t))(v49 + 8);
    v35(v11, v8);
    sub_100049C38(v11, v34, v8, v33);
    sub_10000BD48();
    sub_100049F30((uint64_t)v11, (uint64_t)&type metadata for StatusInfoView, v8);
    v35(v11, v8);
    v35(v34, v8);
  }
  unint64_t v38 = sub_10000BD48();
  uint64_t v39 = swift_getWitnessTable();
  unint64_t v70 = v38;
  uint64_t v71 = v39;
  uint64_t v40 = v55;
  uint64_t v41 = swift_getWitnessTable();
  sub_100049C38(v56, v15, v40, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v15, v40);
}

void sub_100009B60(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for BetaSettingsView();
  sub_100059088(0xD000000000000019, 0x800000010008A1C0, v15, (uint64_t)&off_10009EC08);
  uint64_t v16 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  sub_100084FC0();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v17 = sub_100084FB0();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = &protocol witness table for MainActor;
  *(void *)(v18 + 32) = a5;
  *(void *)(v18 + 40) = a6;
  *(void *)(v18 + 48) = a1;
  *(void *)(v18 + 56) = a2;
  *(unsigned char *)(v18 + 64) = a3;
  *(void *)(v18 + 72) = a4;
  sub_100015B60((uint64_t)v14, (uint64_t)&unk_1000A60F8, v18);
  swift_release();
  uint64_t v19 = self;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a5;
  *(void *)(v20 + 24) = a6;
  *(void *)(v20 + 32) = a1;
  *(void *)(v20 + 40) = a2;
  *(unsigned char *)(v20 + 48) = a3;
  *(void *)(v20 + 56) = a4;
  aBlock[4] = sub_10000C1AC;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000222D0;
  aBlock[3] = &unk_10009ED08;
  uint64_t v21 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  id v22 = [v19 scheduledTimerWithTimeInterval:0 repeats:v21 block:5.0];
  _Block_release(v21);
}

uint64_t sub_100009DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a8;
  v8[4] = v13;
  v8[2] = a5;
  sub_100084FC0();
  v8[5] = sub_100084FB0();
  uint64_t v10 = sub_100084FA0();
  v8[6] = v10;
  v8[7] = v9;
  return _swift_task_switch(sub_100009E78, v10, v9);
}

uint64_t sub_100009E78()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[4] + 88) + **(int **)(v0[4] + 88));
  swift_unknownObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100009F6C;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  return v5(1, v2, v3);
}

uint64_t sub_100009F6C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10000CC4C, v3, v2);
}

uint64_t sub_10000A0B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_100084FC0();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v16 = sub_100084FB0();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = &protocol witness table for MainActor;
  *(void *)(v17 + 32) = a5;
  *(void *)(v17 + 40) = a6;
  *(void *)(v17 + 48) = a1;
  *(void *)(v17 + 56) = a2;
  *(unsigned char *)(v17 + 64) = a3;
  *(void *)(v17 + 72) = a4;
  sub_100015B60((uint64_t)v14, (uint64_t)&unk_1000A60E8, v17);
  return swift_release();
}

uint64_t sub_10000A200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a8;
  v8[4] = v13;
  v8[2] = a5;
  sub_100084FC0();
  v8[5] = sub_100084FB0();
  uint64_t v10 = sub_100084FA0();
  v8[6] = v10;
  v8[7] = v9;
  return _swift_task_switch(sub_10000A2A4, v10, v9);
}

uint64_t sub_10000A2A4()
{
  uint64_t v5 = (uint64_t (*)(void, uint64_t, uint64_t))(*(void *)(v0[4] + 88) + **(int **)(v0[4] + 88));
  swift_unknownObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100009F6C;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  return v5(0, v2, v3);
}

uint64_t sub_10000A398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a2;
  sub_100084FC0();
  v6[5] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(sub_10000A434, v8, v7);
}

uint64_t sub_10000A434()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[4] + 64) + **(int **)(v0[4] + 64));
  swift_unknownObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000A528;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  return v5(v3, v2);
}

uint64_t sub_10000A528()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_10000CC4C;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_10000A668;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10000A668()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000A6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v50 = a4;
  unsigned int v49 = a3;
  uint64_t v57 = a2;
  uint64_t v59 = a1;
  uint64_t v56 = a7;
  uint64_t v53 = sub_100004BB0(&qword_1000A60B0);
  uint64_t v9 = __chkstk_darwin(v53);
  uint64_t v55 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v54 = (char *)&v46 - v11;
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_100084F60();
  uint64_t v46 = a6;
  uint64_t v47 = a5;
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = type metadata accessor for BetaSettingsRowView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v69 = (char *)v12;
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v71 = v14;
  uint64_t v72 = WitnessTable;
  uint64_t v73 = AssociatedConformanceWitness;
  sub_100084B70();
  sub_10000BD00(&qword_1000A60A8);
  sub_100084550();
  uint64_t v17 = sub_100084BC0();
  uint64_t v58 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v46 - v21;
  uint64_t v60 = a5;
  uint64_t v61 = a6;
  uint64_t v23 = v57;
  uint64_t v62 = v59;
  uint64_t v63 = v57;
  uint64_t v24 = v49;
  char v64 = v49;
  uint64_t v25 = v50;
  uint64_t v65 = v50;
  v68[7] = swift_getWitnessTable();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = sub_10000C360(&qword_1000A6108, &qword_1000A60A8);
  v68[5] = v26;
  v68[6] = v27;
  uint64_t v28 = swift_getWitnessTable();
  sub_100084BA0();
  v68[2] = &protocol witness table for EmptyView;
  v68[3] = v28;
  v68[4] = &protocol witness table for EmptyView;
  uint64_t v29 = swift_getWitnessTable();
  unsigned int v52 = v22;
  uint64_t v48 = v29;
  sub_100049C38(v22, v20, v17, v29);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v58 + 8);
  v51(v20, v17);
  uint64_t v30 = v23;
  uint64_t v31 = v25;
  uint64_t v32 = v25;
  uint64_t v33 = v47;
  uint64_t v34 = v46;
  sub_1000084C4(v59, v30, v24, v32, v47, v46);
  uint64_t v35 = sub_100084F30();
  uint64_t v36 = swift_bridgeObjectRelease();
  if (v35 >= 3)
  {
    __chkstk_darwin(v36);
    *(&v46 - 6) = v33;
    *(&v46 - 5) = v34;
    uint64_t v39 = v57;
    *(&v46 - 4) = v59;
    *(&v46 - 3) = v39;
    *((unsigned char *)&v46 - 16) = v40;
    *(&v46 - 1) = v31;
    sub_100004BB0(&qword_1000A6110);
    sub_10000C360(&qword_1000A6118, &qword_1000A6110);
    uint64_t v38 = (uint64_t)v54;
    sub_100084BA0();
    uint64_t v41 = sub_100004BB0(&qword_1000A6120);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v38, 0, 1, v41);
  }
  else
  {
    uint64_t v37 = sub_100004BB0(&qword_1000A6120);
    uint64_t v38 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v54, 1, 1, v37);
  }
  uint64_t v42 = v52;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v20, v52, v17);
  char v69 = v20;
  uint64_t v43 = v55;
  sub_10000C724(v38, v55, &qword_1000A60B0);
  uint64_t v70 = v43;
  v68[0] = v17;
  v68[1] = v53;
  uint64_t v66 = v48;
  unint64_t v67 = sub_10000C3A4();
  sub_100049D6C((uint64_t)&v69, 2uLL, (uint64_t)v68);
  sub_10000C788(v38, &qword_1000A60B0);
  uint64_t v44 = (uint64_t (*)(char *, uint64_t))v51;
  v51(v42, v17);
  sub_10000C788(v43, &qword_1000A60B0);
  return v44(v20, v17);
}

uint64_t sub_10000AD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v35 = a4;
  unsigned int v34 = a3;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v37 = a7;
  swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_100084F60();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = type metadata accessor for BetaSettingsRowView();
  uint64_t v31 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v43 = v9;
  uint64_t v44 = AssociatedTypeWitness;
  uint64_t v45 = v28;
  uint64_t v46 = WitnessTable;
  uint64_t v47 = AssociatedConformanceWitness;
  uint64_t v11 = sub_100084B70();
  uint64_t v36 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - v12;
  sub_10000BD00(&qword_1000A60A8);
  uint64_t v14 = sub_100084550();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (uint64_t *)((char *)&v28 - v19);
  uint64_t v43 = sub_1000084C4(v32, v33, v34, v35, a5, a6);
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  swift_getKeyPath();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a5;
  *(void *)(v21 + 24) = a6;
  uint64_t v27 = swift_getWitnessTable();
  sub_100084B50();
  sub_1000844B0();
  sub_100084BF0();
  sub_1000844C0();
  swift_release();
  swift_release();
  uint64_t v42 = v27;
  uint64_t v22 = swift_getWitnessTable();
  sub_1000848D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v11);
  uint64_t v23 = sub_10000C360(&qword_1000A6108, &qword_1000A60A8);
  uint64_t v40 = v22;
  uint64_t v41 = v23;
  uint64_t v24 = swift_getWitnessTable();
  sub_100049C38(v20, v18, v14, v24);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  v25(v18, v14);
  sub_100049C38(v37, v20, v14, v24);
  return ((uint64_t (*)(void *, uint64_t))v25)(v20, v14);
}

uint64_t sub_10000B1B4()
{
  return sub_100085350();
}

uint64_t sub_10000B254@<X0>(void *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_unknownObjectRetain();
  uint64_t v8 = sub_1000624FC();
  uint64_t v9 = v2;
  char v10 = v3 & 1;
  uint64_t v11 = v4;
  uint64_t v5 = type metadata accessor for BetaSettingsRowView();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100049C38(v12, &v8, v5, WitnessTable);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v8 = v12[0];
  uint64_t v9 = v12[1];
  char v10 = v13;
  uint64_t v11 = v14;
  sub_100049C38(a1, &v8, v5, WitnessTable);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_10000B3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v13 = sub_100004BB0(&qword_1000A6138);
  __chkstk_darwin(v13 - 8);
  uint64_t v54 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004BB0(&qword_1000A6140);
  uint64_t v52 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  unsigned int v49 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100004BB0(&qword_1000A6148);
  uint64_t v16 = __chkstk_darwin(v58);
  uint64_t v56 = (uint64_t)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v55 = (char *)v47 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v62 = (uint64_t)v47 - v21;
  __chkstk_darwin(v20);
  uint64_t v61 = (uint64_t)v47 - v22;
  sub_1000084C4(a1, a2, a3, a4, a5, a6);
  uint64_t v66 = a5;
  uint64_t v67 = a6;
  swift_getAssociatedTypeWitness();
  char v23 = sub_100010BE8();
  swift_bridgeObjectRelease();
  uint64_t v59 = a1;
  sub_1000084C4(a1, a2, a3, a4, a5, a6);
  uint64_t v60 = a5;
  uint64_t v64 = a5;
  uint64_t v65 = a6;
  int v53 = sub_100010BE8();
  swift_bridgeObjectRelease();
  if (qword_1000A5D78 != -1) {
    swift_once();
  }
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v60;
  *(void *)(v24 + 24) = a6;
  *(void *)(v24 + 32) = v59;
  *(void *)(v24 + 40) = a2;
  int v51 = a3 & 1;
  *(unsigned char *)(v24 + 48) = a3 & 1;
  *(void *)(v24 + 56) = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v25 = v49;
  sub_100084AA0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = v23 & 1;
  uint64_t v28 = v52;
  uint64_t v48 = a6;
  uint64_t v30 = v62;
  uint64_t v29 = v63;
  uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 16);
  v50(v62, v25, v63);
  uint64_t v31 = (uint64_t *)(v30 + *(int *)(v58 + 36));
  *uint64_t v31 = KeyPath;
  v31[1] = (uint64_t)sub_10000C5E4;
  v31[2] = v27;
  uint64_t v52 = *(void *)(v28 + 8);
  ((void (*)(char *, uint64_t))v52)(v25, v29);
  sub_10000C5FC(v30, v61);
  if (qword_1000A5D90 != -1) {
    swift_once();
  }
  v47[1] = qword_1000AB788;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = v54;
  sub_100084450();
  uint64_t v33 = sub_100084470();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v48;
  *(void *)(v34 + 16) = v60;
  *(void *)(v34 + 24) = v35;
  *(void *)(v34 + 32) = v59;
  *(void *)(v34 + 40) = a2;
  *(unsigned char *)(v34 + 48) = v51;
  *(void *)(v34 + 56) = a4;
  swift_unknownObjectRetain();
  swift_retain();
  sub_100084A90();
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = swift_allocObject();
  *(unsigned char *)(v37 + 16) = v53 & 1;
  uint64_t v38 = (uint64_t)v55;
  uint64_t v39 = v63;
  v50((uint64_t)v55, v25, v63);
  uint64_t v40 = (uint64_t *)(v38 + *(int *)(v58 + 36));
  *uint64_t v40 = v36;
  v40[1] = (uint64_t)sub_10000CC50;
  uint64_t v40[2] = v37;
  ((void (*)(char *, uint64_t))v52)(v25, v39);
  uint64_t v41 = v62;
  sub_10000C5FC(v38, v62);
  uint64_t v42 = v61;
  sub_10000C724(v61, v38, &qword_1000A6148);
  uint64_t v43 = v56;
  sub_10000C724(v41, v56, &qword_1000A6148);
  uint64_t v44 = v57;
  sub_10000C724(v38, v57, &qword_1000A6148);
  uint64_t v45 = sub_100004BB0(&qword_1000A6150);
  sub_10000C724(v43, v44 + *(int *)(v45 + 48), &qword_1000A6148);
  sub_10000C788(v41, &qword_1000A6148);
  sub_10000C788(v42, &qword_1000A6148);
  sub_10000C788(v43, &qword_1000A6148);
  return sub_10000C788(v38, &qword_1000A6148);
}

BOOL sub_10000BA64(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v5 = sub_100084360();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v18 - v10;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88);
  uint64_t v14 = swift_checkMetadataState();
  v13(v14, AssociatedConformanceWitness);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *a4, v5);
  sub_10000C838((unint64_t *)&qword_1000A6158, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
  sub_100084E50();
  sub_100084E50();
  BOOL v15 = v18[1] == v18[0];
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, v5);
  v16(v11, v5);
  return v15;
}

uint64_t sub_10000BC88()
{
  return sub_100084910();
}

uint64_t sub_10000BCA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1000087C0(*(void *)v2, *(void *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_10000BCBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000BD00(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10000BD48()
{
  unint64_t result = qword_1000A60B8;
  if (!qword_1000A60B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A60B8);
  }
  return result;
}

unint64_t sub_10000BD9C()
{
  unint64_t result = qword_1000A60C0;
  if (!qword_1000A60C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A60C0);
  }
  return result;
}

uint64_t sub_10000BDF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100084640();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10000BE20()
{
  return sub_100084650();
}

unsigned char *sub_10000BE48(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_10000BE60()
{
  return sub_10000BE94((uint64_t (*)(void, void, void, void, void, void))sub_100009B60);
}

uint64_t sub_10000BE7C()
{
  return sub_10000BE94((uint64_t (*)(void, void, void, void, void, void))sub_10000A0B0);
}

uint64_t sub_10000BE94(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10000BEB4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  void *v8 = v1;
  v8[1] = sub_1000052B8;
  return sub_10000A398(v4, v5, v6, v7, v2, v3);
}

uint64_t sub_10000BF7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100005D30;
  return sub_10000A200(a1, v5, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_10000C070()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10000C0B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100005D30;
  return sub_100009DD4(a1, v5, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_10000C1AC()
{
  return sub_100084A60();
}

uint64_t sub_10000C204(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10000C214()
{
  return swift_release();
}

uint64_t sub_10000C21C()
{
  return sub_10000C344((uint64_t (*)(void, void, void, void, void, void))sub_10000A6C8);
}

void sub_10000C234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, char a11)
{
  if (a11 == 1)
  {
    sub_10000C2BC(a1, a2, a3, a4, a5);
    a1 = a6;
    a2 = a7;
    a3 = a8;
    a4 = a9;
    a5 = a10;
  }
  else if (a11)
  {
    return;
  }
  sub_10000C2BC(a1, a2, a3, a4, a5);
}

void sub_10000C2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10000C314()
{
  return sub_10000C344((uint64_t (*)(void, void, void, void, void, void))sub_10000AD5C);
}

uint64_t sub_10000C32C()
{
  return sub_10000C344((uint64_t (*)(void, void, void, void, void, void))sub_10000B3A4);
}

uint64_t sub_10000C344(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10000C360(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000BD00(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10000C3A4()
{
  unint64_t result = qword_1000A6128;
  if (!qword_1000A6128)
  {
    sub_10000BD00(&qword_1000A60B0);
    sub_10000C418();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6128);
  }
  return result;
}

unint64_t sub_10000C418()
{
  unint64_t result = qword_1000A6130;
  if (!qword_1000A6130)
  {
    sub_10000BD00(&qword_1000A6120);
    sub_10000C360(&qword_1000A6118, &qword_1000A6110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6130);
  }
  return result;
}

BOOL sub_10000C4BC(uint64_t a1)
{
  return sub_10000BA64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (unsigned int *)&enum case for BetaEnrollment.State.enrolled(_:));
}

BOOL sub_10000C4E4(uint64_t a1)
{
  return sub_10000BA64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (unsigned int *)&enum case for BetaEnrollment.State.notEnrolled(_:));
}

uint64_t sub_10000C510()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 72);
  swift_unknownObjectRetain();
  v3(v1, v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_10000C57C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100084640();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10000C5AC()
{
  return sub_100084650();
}

uint64_t sub_10000C5D4()
{
  return swift_deallocObject();
}

unsigned char *sub_10000C5E4(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_10000C5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A6148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000C668()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10000C6A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 80);
  swift_unknownObjectRetain();
  v3(v1, v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_10000C714()
{
  return swift_deallocObject();
}

uint64_t sub_10000C724(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004BB0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000C788(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100004BB0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000C7E8()
{
  return 16;
}

__n128 sub_10000C7F4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10000C800()
{
  return swift_deallocObject();
}

uint64_t sub_10000C810@<X0>(void *a1@<X8>)
{
  return sub_10000B254(a1);
}

BOOL sub_10000C818()
{
  return sub_1000085B4();
}

uint64_t sub_10000C838(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000C880()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10000C8B0()
{
  return swift_getOpaqueTypeConformance2();
}

void NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)NSMutableSet) init];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    do
    {
      ++v4;
      sub_100004BB0(qword_1000A6168);
      [v2 addObject:sub_1000855A0()];
      swift_unknownObjectRelease();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  id v5 = v2;
  sub_100085030();

  sub_100085490();
  __break(1u);
}

uint64_t sub_10000CE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_10000CE3C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10000CE5C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for Weak()
{
  return sub_10000C880();
}

unsigned char *initializeBufferWithCopyOfBuffer for NetworkError(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NetworkError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000D004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_10000D02C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000D038(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NetworkError()
{
  return &type metadata for NetworkError;
}

unint64_t sub_10000D054()
{
  unint64_t result = qword_1000A61F0;
  if (!qword_1000A61F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A61F0);
  }
  return result;
}

BOOL sub_10000D0A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10000D0BC()
{
  Swift::UInt v1 = *v0;
  sub_100085630();
  sub_100085640(v1);
  return sub_100085650();
}

void sub_10000D104()
{
  sub_100085640(*v0);
}

Swift::Int sub_10000D130()
{
  Swift::UInt v1 = *v0;
  sub_100085630();
  sub_100085640(v1);
  return sub_100085650();
}

unint64_t sub_10000D174@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10000D440(*a1);
  *a2 = result;
  return result;
}

void sub_10000D1A0(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_10000D1AC(void *a1@<X8>)
{
  *a1 = &off_10009E578;
}

unint64_t sub_10000D1BC()
{
  return 0xD000000000000020;
}

uint64_t sub_10000D1D8()
{
  return *v0;
}

unint64_t sub_10000D1E0()
{
  return sub_100069BBC((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t sub_10000D1F0()
{
  unint64_t result = qword_1000A61F8;
  if (!qword_1000A61F8)
  {
    sub_10000BD00(&qword_1000A6200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A61F8);
  }
  return result;
}

unint64_t sub_10000D250()
{
  unint64_t result = qword_1000A6208;
  if (!qword_1000A6208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6208);
  }
  return result;
}

uint64_t sub_10000D2A4(uint64_t a1)
{
  unint64_t v2 = sub_10000D344();
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000D2E0(uint64_t a1)
{
  unint64_t v2 = sub_10000D344();
  unint64_t v3 = sub_10000D398();
  unint64_t v4 = sub_10000D3EC();
  return Error<>._code.getter(a1, v2, v3, v4);
}

unint64_t sub_10000D344()
{
  unint64_t result = qword_1000A6210;
  if (!qword_1000A6210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6210);
  }
  return result;
}

unint64_t sub_10000D398()
{
  unint64_t result = qword_1000A6218;
  if (!qword_1000A6218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6218);
  }
  return result;
}

unint64_t sub_10000D3EC()
{
  unint64_t result = qword_1000A6220;
  if (!qword_1000A6220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6220);
  }
  return result;
}

unint64_t sub_10000D440(unint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  return result;
}

uint64_t initializeWithCopy for DeviceGestalt(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceGestalt(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  return a1;
}

__n128 initializeWithTake for DeviceGestalt(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 44) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DeviceGestalt(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceGestalt(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 60)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceGestalt(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 60) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 60) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceGestalt()
{
  return &type metadata for DeviceGestalt;
}

double sub_10000D6A8()
{
  sub_10000D6EC((uint64_t)v1);
  xmmword_1000AB970 = v1[0];
  unk_1000AB980 = v1[1];
  xmmword_1000AB990 = v2[0];
  double result = *(double *)((char *)v2 + 12);
  *(long long *)((char *)&xmmword_1000AB990 + 12) = *(_OWORD *)((char *)v2 + 12);
  return result;
}

uint64_t sub_10000D6EC@<X0>(uint64_t a1@<X8>)
{
  NSString v2 = sub_100084D00();
  int v21 = MGGetSInt32Answer();

  NSString v3 = sub_100084D00();
  uint64_t v4 = (void *)MGGetStringAnswer();

  if (v4)
  {
    uint64_t v5 = sub_100084D10();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0xE600000000000000;
    uint64_t v5 = 0x4E574F4B4E55;
  }
  sub_10000EDB8(v5, v7, (uint64_t)v24);
  uint64_t v8 = v24[1];
  uint64_t v23 = v24[0];
  uint64_t v9 = v24[2];
  uint64_t v10 = v24[3];
  unint64_t v11 = v24[4];
  unsigned __int8 v12 = v25;
  uint64_t v13 = v26;
  unsigned __int8 v14 = v27;
  NSString v15 = sub_100084D00();
  char v16 = MGGetBoolAnswer();

  if (v16)
  {
    char v20 = 1;
  }
  else
  {
    NSString v17 = sub_100084D00();
    char v20 = MGGetBoolAnswer();
  }
  if ((v21 - 1) > 9) {
    char v22 = 0;
  }
  else {
    char v22 = byte_100086812[v21 - 1];
  }
  char v18 = sub_10000F2D4(v9, v10, v11, v12, v13, v14);
  sub_100085340(18);
  v28._object = (void *)0x800000010008A370;
  v28._countAndFlagsBits = 0xD000000000000010;
  sub_100084D60(v28);
  sub_100085440();
  sub_1000576E4(0, 0xE000000000000000);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v13;
  *(unsigned char *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 57) = v22;
  *(unsigned char *)(a1 + 58) = v18;
  *(unsigned char *)(a1 + 59) = v20;
  return result;
}

uint64_t sub_10000D988(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_100085390();
      }
      uint64_t v7 = (uint64_t)sub_10000E3B0(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        NSString v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              unint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_10000E2C8(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

unint64_t sub_10000DBD8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    char v8 = a2;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    do
    {
      if (*(unsigned char *)(a1 + v4 + 32)) {
        uint64_t v5 = 0x6C6C69662ELL;
      }
      else {
        uint64_t v5 = 0x616373646E616C2ELL;
      }
      if (*(unsigned char *)(a1 + v4 + 32)) {
        uint64_t v6 = (void *)0xE500000000000000;
      }
      else {
        uint64_t v6 = (void *)0xEA00000000006570;
      }
      ++v4;
      swift_bridgeObjectRetain();
      v10._countAndFlagsBits = v5;
      v10._object = v6;
      sub_100084D60(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    a2 = v8;
  }
  unint64_t v9 = sub_10000DD08(a2);
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  sub_100084D60(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_10000DD08(char a1)
{
  unint64_t result = 0x6F6C2E656C707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7674656C707061;
      break;
    case 2:
      unint64_t result = 0x63756F74646F7069;
      break;
    case 3:
      unint64_t result = 0x656E6F687069;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 1684107369;
      break;
    case 6:
      unint64_t result = 0x6D6F682E64617069;
      break;
    case 7:
      unint64_t result = 0x63706F746B736564;
      break;
    case 8:
      unint64_t result = 0x696E696D63616DLL;
      break;
    case 9:
      unint64_t result = 0x696475747363616DLL;
      break;
    case 10:
      unint64_t result = 0x672E6F727063616DLL;
      break;
    case 11:
      unint64_t result = 0x672E6F727063616DLL;
      break;
    case 12:
      unint64_t result = 0x672E6F727063616DLL;
      break;
    case 13:
      unint64_t result = 0x6F63706F7470616CLL;
      break;
    case 14:
      unint64_t result = 0x746177656C707061;
      break;
    case 15:
      unint64_t result = 0x646F70656D6F68;
      break;
    case 16:
      unint64_t result = 0x2E646F70656D6F68;
      break;
    case 17:
    case 18:
      unint64_t result = 0x6D646F70656D6F68;
      break;
    case 19:
      unint64_t result = 0xD000000000000017;
      break;
    case 20:
      unint64_t result = 0x6165707369666968;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10000DFEC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_10000DD08(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10000DD08(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_100085580();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10000E078()
{
  char v1 = *v0;
  sub_100085630();
  sub_10000DD08(v1);
  sub_100084D50();
  swift_bridgeObjectRelease();
  return sub_100085650();
}

uint64_t sub_10000E0DC()
{
  sub_10000DD08(*v0);
  sub_100084D50();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10000E130()
{
  char v1 = *v0;
  sub_100085630();
  sub_10000DD08(v1);
  sub_100084D50();
  swift_bridgeObjectRelease();
  return sub_100085650();
}

uint64_t sub_10000E190@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100010B88();
  *a1 = result;
  return result;
}

unint64_t sub_10000E1C0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10000DD08(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_10000E1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithPattern:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_100083D00();

    swift_willThrow();
  }
  return v6;
}

unsigned __int8 *sub_10000E2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_100084DC0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    id v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_10000E62C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    id v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    id v7 = (unsigned __int8 *)sub_100085390();
  }
LABEL_7:
  Swift::String v11 = sub_10000E3B0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_10000E3B0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10000E62C()
{
  unint64_t v0 = sub_100084DD0();
  uint64_t v4 = sub_10000E6AC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10000E6AC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10000E804(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10000E904(v9, 0),
          unint64_t v12 = sub_10000E96C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_100084D40();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_100084D40();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_100085390();
LABEL_4:
  return sub_100084D40();
}

uint64_t sub_10000E804(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_10000EB80(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_10000EB80(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

void *sub_10000E904(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100004BB0(&qword_1000A6240);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_10000E96C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_10000EB80(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_100084DA0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_100085390();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_10000EB80(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_100084D70();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10000EB80(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_100084DB0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_100084D80();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

void *sub_10000EBFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v6) {
      return _swiftEmptyArrayStorage;
    }
    unint64_t result = sub_10006CB40(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v20 = v6;
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)sub_100085380();
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      [v9 range];
      unint64_t result = (void *)sub_100085180();
      if (v11) {
        goto LABEL_18;
      }
      uint64_t v12 = a2;
      uint64_t v13 = a3;
      sub_100084DD0();
      uint64_t v14 = sub_100084D30();
      uint64_t v16 = v15;

      swift_bridgeObjectRelease();
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      if (v18 >= v17 >> 1) {
        sub_10006CB40((char *)(v17 > 1), v18 + 1, 1);
      }
      ++v8;
      _swiftEmptyArrayStorage[2] = v18 + 1;
      char v19 = (char *)&_swiftEmptyArrayStorage[2 * v18];
      *((void *)v19 + 4) = v14;
      *((void *)v19 + 5) = v16;
      uint64_t v6 = v20;
      a3 = v13;
      a2 = v12;
      if (v20 == v8) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000854A0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10000EDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_allocWithZone((Class)NSRegularExpression);
  id v10 = sub_10000E1EC(0xD000000000000014, 0x800000010008A390, 0);
  NSString v11 = sub_100084D00();
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  swift_bridgeObjectRetain();
  sub_100004BB0(&qword_1000A6228);
  sub_1000104B8();
  sub_10000BD9C();
  uint64_t v12 = sub_1000851E0();
  id v14 = objc_msgSend(v10, "matchesInString:options:range:", v11, 0, v12, v13);

  sub_100010514();
  unint64_t v15 = sub_100084E80();

  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10000EBFC(v15, a1, a2);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v17 = v16[2];
  if (!v17)
  {
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0x6E776F6B6E55;
    unint64_t v19 = 0xE600000000000000;
    char v20 = 1;
    char v9 = 1;
LABEL_65:
    *(void *)a3 = a1;
    *(void *)(a3 + 8) = a2;
    *(void *)(a3 + 16) = v7;
    *(void *)(a3 + 24) = v19;
    *(void *)(a3 + 32) = v8;
    *(unsigned char *)(a3 + 40) = v9 & 1;
    *(void *)(a3 + 48) = result;
    *(unsigned char *)(a3 + 56) = v20;
    return result;
  }
  uint64_t v7 = v16[4];
  unint64_t v48 = v16[5];
  if (v17 == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    char v9 = 1;
    goto LABEL_63;
  }
  unint64_t v46 = v16[2];
  uint64_t v47 = v16[4];
  uint64_t v21 = v16[6];
  unint64_t v22 = v16[7];
  uint64_t v23 = HIBYTE(v22) & 0xF;
  uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
  if ((v22 & 0x2000000000000000) != 0) {
    uint64_t v25 = HIBYTE(v22) & 0xF;
  }
  else {
    uint64_t v25 = v21 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t result = swift_bridgeObjectRetain();
  if (!v25)
  {
    uint64_t v8 = 0;
    char v9 = 1;
    uint64_t v7 = v47;
    if (v46 > 2) {
      goto LABEL_54;
    }
LABEL_63:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    char v20 = 1;
LABEL_64:
    unint64_t v19 = v48;
    goto LABEL_65;
  }
  if ((v22 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = (uint64_t)sub_10000E2C8(v21, v22, 10);
    LOBYTE(v21) = v44;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if ((v22 & 0x2000000000000000) == 0)
  {
    if ((v21 & 0x1000000000000000) == 0) {
      goto LABEL_68;
    }
    uint64_t v26 = (unsigned __int8 *)((v22 & 0xFFFFFFFFFFFFFFFLL) + 32);
    while (1)
    {
      uint64_t v27 = (uint64_t)sub_10000E3B0(v26, v24, 10);
      LOBYTE(v21) = v28 & 1;
LABEL_15:
      uint64_t v7 = v47;
LABEL_50:
      char v9 = v21 & 1;
      uint64_t v8 = (v21 & 1) != 0 ? 0 : v27;
      if (v46 <= 2) {
        goto LABEL_63;
      }
LABEL_54:
      if (v16[2] >= 3uLL)
      {
        uint64_t v38 = v16[8];
        unint64_t v39 = v16[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t result = sub_10000D988(v38, v39);
        char v20 = v40 & 1;
        goto LABEL_64;
      }
      __break(1u);
LABEL_68:
      uint64_t v26 = (unsigned __int8 *)sub_100085390();
      uint64_t v24 = v45;
    }
  }
  uint64_t v49 = v21;
  uint64_t v50 = v22 & 0xFFFFFFFFFFFFFFLL;
  if (v21 == 43)
  {
    if (!v23) {
      goto LABEL_70;
    }
    uint64_t v7 = v47;
    if (v23 == 1 || (BYTE1(v21) - 48) > 9u) {
      goto LABEL_37;
    }
    uint64_t v27 = (BYTE1(v21) - 48);
    if (v23 != 2)
    {
      if ((BYTE2(v21) - 48) > 9u) {
        goto LABEL_37;
      }
      uint64_t v27 = 10 * (BYTE1(v21) - 48) + (BYTE2(v21) - 48);
      uint64_t v29 = v23 - 3;
      if (v23 != 3)
      {
        uint64_t v30 = (unsigned __int8 *)&v49 + 3;
        while (1)
        {
          unsigned int v31 = *v30 - 48;
          if (v31 > 9) {
            goto LABEL_37;
          }
          uint64_t v32 = 10 * v27;
          if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
            goto LABEL_37;
          }
          uint64_t v27 = v32 + v31;
          if (__OFADD__(v32, v31)) {
            goto LABEL_37;
          }
          LOBYTE(v21) = 0;
          ++v30;
          if (!--v29) {
            goto LABEL_50;
          }
        }
      }
    }
LABEL_49:
    LOBYTE(v21) = 0;
    goto LABEL_50;
  }
  if (v21 != 45)
  {
    uint64_t v7 = v47;
    if (!v23 || (v21 - 48) > 9u) {
      goto LABEL_37;
    }
    uint64_t v27 = (v21 - 48);
    if (v23 != 1)
    {
      if ((BYTE1(v21) - 48) > 9u) {
        goto LABEL_37;
      }
      uint64_t v27 = 10 * (v21 - 48) + (BYTE1(v21) - 48);
      uint64_t v33 = v23 - 2;
      if (v23 != 2)
      {
        uint64_t v34 = (unsigned __int8 *)&v49 + 2;
        while (1)
        {
          unsigned int v35 = *v34 - 48;
          if (v35 > 9) {
            goto LABEL_37;
          }
          uint64_t v36 = 10 * v27;
          if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
            goto LABEL_37;
          }
          uint64_t v27 = v36 + v35;
          if (__OFADD__(v36, v35)) {
            goto LABEL_37;
          }
          LOBYTE(v21) = 0;
          ++v34;
          if (!--v33) {
            goto LABEL_50;
          }
        }
      }
    }
    goto LABEL_49;
  }
  uint64_t v7 = v47;
  if (v23)
  {
    if (v23 != 1 && (BYTE1(v21) - 48) <= 9u)
    {
      if (v23 == 2)
      {
        LOBYTE(v21) = 0;
        uint64_t v27 = -(uint64_t)(BYTE1(v21) - 48);
        goto LABEL_50;
      }
      if ((BYTE2(v21) - 48) <= 9u)
      {
        uint64_t v27 = -10 * (BYTE1(v21) - 48) - (BYTE2(v21) - 48);
        uint64_t v37 = v23 - 3;
        if (v23 == 3) {
          goto LABEL_49;
        }
        uint64_t v41 = (unsigned __int8 *)&v49 + 3;
        while (1)
        {
          unsigned int v42 = *v41 - 48;
          if (v42 > 9) {
            break;
          }
          uint64_t v43 = 10 * v27;
          if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
            break;
          }
          uint64_t v27 = v43 - v42;
          if (__OFSUB__(v43, v42)) {
            break;
          }
          LOBYTE(v21) = 0;
          ++v41;
          if (!--v37) {
            goto LABEL_50;
          }
        }
      }
    }
LABEL_37:
    uint64_t v27 = 0;
    LOBYTE(v21) = 1;
    goto LABEL_50;
  }
  __break(1u);
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_10000F2D4(uint64_t a1, uint64_t a2, unint64_t a3, unsigned __int8 a4, uint64_t a5, unsigned __int8 a6)
{
  BOOL v12 = a1 == 0x656E6F685069 && a2 == 0xE600000000000000;
  char v13 = v12;
  if (v12)
  {
    if ((a4 & 1) == 0 && a3 == 1) {
      return 4;
    }
  }
  else
  {
    char v14 = sub_100085580();
    if ((v14 & 1) != 0 && (a4 & 1) == 0 && a3 == 1) {
      return 4;
    }
  }
  if (v13)
  {
    if ((a4 & 1) != 0
      || (int64x2_t v15 = vdupq_n_s64(a3),
          !(vmaxv_u16((uint16x4_t)vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(v15, (int64x2_t)xmmword_100086680), (int32x4_t)vceqq_s64(v15, (int64x2_t)xmmword_100086690)))) & 1 | ((a3 & 0xFFFFFFFFFFFFFFFELL) == 4) | ((a3 & 0xFFFFFFFFFFFFFFFELL) == 2))))
    {
      BOOL v16 = (unint64_t)(a5 - 3) >= 0xFFFFFFFFFFFFFFFELL || (unint64_t)(a5 - 6) >= 0xFFFFFFFFFFFFFFFELL;
      BOOL v17 = !v16;
      if (((a4 | a6) & 1 | (a3 != 10) || v17)
        && (a4 & 1 | (a3 != 12) || (a6 & 1) != 0 || a5 != 8)
        && (a4 & 1 | (a3 != 14) || (a6 & 1) != 0 || a5 != 6))
      {
        if ((a4 | a6) & 1 | (a3 != 10) | (a5 != 3))
        {
          BOOL v18 = a3 == 11 && (a4 & 1) == 0;
          BOOL v19 = a3 == 12 && (a4 & 1) == 0;
          BOOL v20 = a3 == 13 && (a4 & 1) == 0;
          BOOL v21 = a3 == 14 && (a4 & 1) == 0;
          BOOL v22 = a3 == 15 && (a4 & 1) == 0;
          uint64_t result = 3;
          if (((a5 == 6) & ~(a4 | a6 | (a3 != 10))) != 0 || v18 || v19 || v20 || v21 || v22) {
            return result;
          }
          BOOL v24 = 0;
          goto LABEL_55;
        }
        return 3;
      }
    }
    return 4;
  }
  if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 2
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 3
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 4
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 5
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 6
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 7
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 8
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 9
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 10 && (a6 & 1) == 0 && a5 == 1
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 10 && (a6 & 1) == 0 && a5 == 2
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 10 && (a6 & 1) == 0 && a5 == 4
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 10 && (a6 & 1) == 0 && a5 == 5
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 12 && (a6 & 1) == 0 && a5 == 8
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 14 && (a6 & 1) == 0 && a5 == 6)
  {
    return 4;
  }
  if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 10 && (a6 & 1) == 0 && a5 == 3
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 10 && (a6 & 1) == 0 && a5 == 6
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 11
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 12
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 13
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 14
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 15)
  {
    return 3;
  }
  BOOL v24 = a1 == 0x6363416F69647541;
  if (a1 == 0x6363416F69647541 && a2 == 0xEE0079726F737365)
  {
    BOOL v24 = 1;
    if ((a4 & 1) == 0 && a3 == 1) {
      return 15;
    }
    goto LABEL_58;
  }
LABEL_55:
  if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 1) {
    return 15;
  }
LABEL_58:
  if (v24 && a2 == 0xEE0079726F737365)
  {
    if ((a4 & 1) != 0 || a3 != 6)
    {
      if ((a4 & 1) != 0 || a3 != 5)
      {
        BOOL v25 = 0;
        BOOL v26 = a1 == 1684099177;
        goto LABEL_134;
      }
      return 17;
    }
    return 15;
  }
  if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 6) {
    return 15;
  }
  if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 5) {
    return 17;
  }
  BOOL v25 = a2 == 0xE400000000000000;
  BOOL v26 = a1 == 1684099177;
  if (a1 == 1684099177 && a2 == 0xE400000000000000)
  {
    char v27 = 1;
    BOOL v25 = 1;
    BOOL v26 = 1;
    if ((a4 & 1) == 0 && a3 == 1) {
      return 6;
    }
    goto LABEL_137;
  }
LABEL_134:
  char v28 = sub_100085580();
  char v27 = 0;
  if ((v28 & 1) != 0 && (a4 & 1) == 0 && a3 == 1) {
    return 6;
  }
LABEL_137:
  if (!v26 || a2 != 0xE400000000000000)
  {
    char v52 = v27;
    if (((sub_100085580() & 1) == 0 || (a4 & 1) != 0 || a3 != 2)
      && ((sub_100085580() & 1) == 0 || (a4 & 1) != 0 || a3 != 3)
      && ((sub_100085580() & 1) == 0 || (a4 & 1) != 0 || a3 != 4)
      && ((sub_100085580() & 1) == 0 || (a4 & 1) != 0 || a3 != 5)
      && ((sub_100085580() & 1) == 0 || (a4 & 1) != 0 || a3 != 6)
      && ((sub_100085580() & 1) == 0 || (a4 & 1) != 0 || a3 != 7)
      && ((sub_100085580() & 1) == 0 || (a4 & 1) != 0 || a3 != 11))
    {
      int v36 = a6 & 1;
      if (((sub_100085580() & 1) == 0 || (a4 & 1) != 0 || a3 != 12 || v36 || a5 != 1)
        && ((sub_100085580() & 1) == 0 || (a4 & 1) != 0 || a3 != 12 || v36 || a5 != 2))
      {
        if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 8
          || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 13
          || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 14
          || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 12)
        {
          return 5;
        }
        goto LABEL_239;
      }
    }
    return 6;
  }
  BOOL v33 = (a3 & 0xFFFFFFFFFFFFFFFELL) == 2 || (a3 & 0xFFFFFFFFFFFFFFFELL) == 4 || a3 == 6 || a3 == 7 || a3 == 11;
  if ((a4 & 1) == 0 && v33) {
    return 6;
  }
  char v52 = v27;
  if ((a4 & 1) == 0 && a3 == 12 && (a6 & 1) == 0 && (unint64_t)(a5 - 3) >= 0xFFFFFFFFFFFFFFFELL) {
    return 6;
  }
  BOOL v35 = (a3 & 0xFFFFFFFFFFFFFFFBLL) == 8 || a3 - 13 < 2;
  if ((a4 & 1) == 0 && v35) {
    return 5;
  }
LABEL_239:
  if (a1 == 1685016681 && v25)
  {
    if ((a4 & 1) == 0 && a3 == 1) {
      return 2;
    }
  }
  else if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 1)
  {
    return 2;
  }
  if (a1 == 1685016681 && a2 == 0xE400000000000000)
  {
    BOOL v38 = 0;
    BOOL v42 = (a3 & 0xFFFFFFFFFFFFFFFELL) == 2 || (a3 & 0xFFFFFFFFFFFFFFFELL) == 4 || a3 == 6 || a3 == 9;
    if ((a4 & 1) != 0 || !v42) {
      goto LABEL_265;
    }
    return 2;
  }
  if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 2
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 3
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 4
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 5
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 6
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 9)
  {
    return 2;
  }
  BOOL v38 = a1 == 0x6F725063614DLL;
  if (a1 == 0x6F725063614DLL && a2 == 0xE600000000000000)
  {
    BOOL v38 = 1;
    if ((a4 & 1) == 0 && a3 == 1) {
      return 10;
    }
    goto LABEL_268;
  }
LABEL_265:
  if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 1) {
    return 10;
  }
LABEL_268:
  if (v38 && a2 == 0xE600000000000000)
  {
    BOOL v45 = (a3 & 0xFFFFFFFFFFFFFFFELL) == 2 || (a3 & 0xFFFFFFFFFFFFFFFELL) == 4 || a3 == 6;
    if ((a4 & 1) != 0 || !v45)
    {
      if ((a4 & 1) == 0 && a3 == 6) {
        return 11;
      }
      if ((a4 & 1) == 0 && a3 == 7) {
        return 12;
      }
      if ((a4 & 1) == 0 && a3 == 13) {
        return 9;
      }
      goto LABEL_344;
    }
    return 10;
  }
  if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 2
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 3
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 4
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 5
    || (sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 6)
  {
    return 10;
  }
  if ((sub_100085580() & 1) != 0 && (a4 & 1) == 0 && a3 == 6) {
    return 11;
  }
  int v46 = a4 & 1;
  if ((sub_100085580() & 1) != 0 && !v46 && a3 == 7) {
    return 12;
  }
  if ((sub_100085580() & 1) != 0 && !v46 && a3 == 13) {
    return 9;
  }
LABEL_344:
  BOOL v47 = a1 == 1667321193 && v25;
  if (v47
    || (sub_100085580() & 1) != 0
    || a1 == 0x6F725063614D69 && a2 == 0xE700000000000000
    || (sub_100085580() & 1) != 0)
  {
    return 7;
  }
  if (a1 == 0x696E694D63614DLL && a2 == 0xE700000000000000 || (sub_100085580() & 1) != 0) {
    return 8;
  }
  if (a1 == 0x416B6F6F4263614DLL && a2 == 0xEA00000000007269 || (sub_100085580() & 1) != 0) {
    return 13;
  }
  uint64_t result = 13;
  if (a1 != 0x506B6F6F4263614DLL || a2 != 0xEA00000000006F72)
  {
    char v48 = sub_100085580();
    char v49 = v13 | v48;
    uint64_t result = (v48 & 1) != 0 ? 13 : 3;
    if ((v49 & 1) == 0)
    {
      char v50 = sub_100085580();
      char v51 = v52 | v50;
      uint64_t result = (v50 & 1) != 0 ? 3 : 5;
      if ((v51 & 1) == 0)
      {
        if (sub_100085580()) {
          return 5;
        }
        if (a1 == 0x5654656C707041 && a2 == 0xE700000000000000 || (sub_100085580() & 1) != 0)
        {
          return 1;
        }
        else
        {
          uint64_t result = 14;
          if (a1 != 0x6863746157 || a2 != 0xE500000000000000)
          {
            if (sub_100085580()) {
              return 14;
            }
            else {
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_1000104B8()
{
  unint64_t result = qword_1000A6230;
  if (!qword_1000A6230)
  {
    sub_10000BD00(&qword_1000A6228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6230);
  }
  return result;
}

unint64_t sub_100010514()
{
  unint64_t result = qword_1000A6238;
  if (!qword_1000A6238)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A6238);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DeviceIcon(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeviceIcon(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *unint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000106B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceIcon()
{
  return &type metadata for DeviceIcon;
}

uint64_t getEnumTagSinglePayload for DeviceClass(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeviceClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100010848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceClass()
{
  return &type metadata for DeviceClass;
}

uint64_t _s16HPSUIViewService21DeviceModelIdentifierVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeviceModelIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceModelIdentifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  return a1;
}

__n128 initializeWithTake for DeviceModelIdentifier(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DeviceModelIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceModelIdentifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceModelIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceModelIdentifier()
{
  return &type metadata for DeviceModelIdentifier;
}

unint64_t sub_100010ADC()
{
  unint64_t result = qword_1000A6248;
  if (!qword_1000A6248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6248);
  }
  return result;
}

unint64_t sub_100010B34()
{
  unint64_t result = qword_1000A6250;
  if (!qword_1000A6250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6250);
  }
  return result;
}

uint64_t sub_100010B88()
{
  unint64_t v0 = sub_100085590();
  swift_bridgeObjectRelease();
  if (v0 >= 0x15) {
    return 21;
  }
  else {
    return v0;
  }
}

uint64_t sub_100010BE8()
{
  sub_100084F60();
  swift_getWitnessTable();
  sub_100084E00();
  return v1;
}

uint64_t sub_100010C94@<X0>(uint64_t (*a1)(char *)@<X2>, uint64_t a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  BOOL v7 = (unsigned __int8 *)__chkstk_darwin();
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *v7;
  (*(void (**)(char *))(v6 + 16))(v9);
  if (v10 == 1) {
    char v11 = a1(v9);
  }
  else {
    char v11 = 0;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, a2);
  *a3 = v11 & 1;
  return result;
}

uint64_t sub_100010DB0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100010C94(*(uint64_t (**)(char *))(v1 + 24), *(void *)(v1 + 16), a1);
}

uint64_t destroy for AnalyticsBool()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16HPSUIViewService13AnalyticsBoolVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnalyticsBool(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for AnalyticsBool(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AnalyticsBool(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsBool(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnalyticsBool(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsBool()
{
  return &type metadata for AnalyticsBool;
}

void destroy for AnalyticsErrorField(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 16);
}

void *_s16HPSUIViewService19AnalyticsErrorFieldVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for AnalyticsErrorField(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  id v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  return a1;
}

__n128 initializeWithTake for AnalyticsErrorField(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AnalyticsErrorField(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsErrorField(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnalyticsErrorField(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsErrorField()
{
  return &type metadata for AnalyticsErrorField;
}

uint64_t sub_100011130(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnalyticsFloat(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 initializeWithTake for AnalyticsFloat(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnalyticsFloat(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsFloat(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 21)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnalyticsFloat(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 21) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsFloat()
{
  return &type metadata for AnalyticsFloat;
}

uint64_t initializeWithCopy for AnalyticsInteger(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnalyticsInteger(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 initializeWithTake for AnalyticsInteger(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnalyticsInteger(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsInteger(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnalyticsInteger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsInteger()
{
  return &type metadata for AnalyticsInteger;
}

void *sub_100011460()
{
  return &protocol witness table for Bool;
}

uint64_t sub_10001146C(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2)
  {
    sub_100011AFC();
    swift_allocError();
    *uint64_t v4 = xmmword_100086820;
    return swift_willThrow();
  }
  else
  {
    uint64_t v9 = a4 & 1;
    id v10 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    id v11 = [v10 initWithBool:v9];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *a1;
    *a1 = 0x8000000000000000;
    sub_100070474((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native);
    *a1 = v13;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100011578(uint64_t *a1)
{
  return sub_10001146C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

unint64_t sub_10001159C()
{
  unint64_t result = qword_1000A6298;
  if (!qword_1000A6298)
  {
    sub_1000115F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6298);
  }
  return result;
}

unint64_t sub_1000115F4()
{
  unint64_t result = qword_1000A62A0;
  if (!qword_1000A62A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A62A0);
  }
  return result;
}

uint64_t sub_100011634(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    v24._countAndFlagsBits = 0x6E69616D6F44;
    v24._object = (void *)0xE600000000000000;
    sub_100084D60(v24);
    uint64_t v8 = a2;
    id v9 = a4;
    id v10 = [v9 domain];
    sub_100084D10();

    id v11 = objc_allocWithZone((Class)NSString);
    NSString v12 = sub_100084D00();
    swift_bridgeObjectRelease();
    id v13 = [v11 initWithString:v12];

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *a1;
    *a1 = 0x8000000000000000;
    sub_100070474((uint64_t)v13, v8, a3, isUniquelyReferenced_nonNull_native);
    *a1 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v25._countAndFlagsBits = 1701080899;
    v25._object = (void *)0xE400000000000000;
    sub_100084D60(v25);
    uint64_t v15 = a2;
    id v16 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(v9, "code"));
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *a1;
    *a1 = 0x8000000000000000;
    sub_100070474((uint64_t)v16, v15, a3, v17);
    *a1 = v22;

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100011AFC();
    swift_allocError();
    *BOOL v19 = xmmword_100086820;
    return swift_willThrow();
  }
}

uint64_t sub_100011860(uint64_t *a1)
{
  return sub_100011634(a1, *(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16));
}

void *sub_100011880()
{
  return &protocol witness table for Float;
}

uint64_t sub_10001188C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_100011AFC();
    swift_allocError();
    *id v13 = xmmword_100086820;
    return swift_willThrow();
  }
  else
  {
    id v9 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    id v10 = [v9 initWithInteger:a4];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *a1;
    *a1 = 0x8000000000000000;
    sub_100070474((uint64_t)v10, a2, a3, isUniquelyReferenced_nonNull_native);
    *a1 = v14;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100011990(uint64_t *a1)
{
  return sub_10001188C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1000119B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x100000000) != 0)
  {
    sub_100011AFC();
    swift_allocError();
    *id v13 = xmmword_100086820;
    return swift_willThrow();
  }
  else
  {
    int v7 = a4;
    id v8 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    LODWORD(v9) = v7;
    id v10 = [v8 initWithFloat:v9];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *a1;
    *a1 = 0x8000000000000000;
    sub_100070474((uint64_t)v10, a2, a3, isUniquelyReferenced_nonNull_native);
    *a1 = v14;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100011AB8(uint64_t *a1)
{
  return sub_1000119B4(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32));
}

void *sub_100011AF0()
{
  return &protocol witness table for Int;
}

unint64_t sub_100011AFC()
{
  unint64_t result = qword_1000A6368;
  if (!qword_1000A6368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6368);
  }
  return result;
}

uint64_t sub_100011B54()
{
  uint64_t v42 = 574451054;
  unint64_t v43 = 0xE400000000000000;
  uint64_t v1 = v0[4];
  unint64_t v2 = (void *)v0[5];
  swift_bridgeObjectRetain();
  v45._countAndFlagsBits = v1;
  v45._object = v2;
  sub_100084D60(v45);
  swift_bridgeObjectRelease();
  v46._countAndFlagsBits = 34;
  v46._object = (void *)0xE100000000000000;
  sub_100084D60(v46);
  uint64_t v3 = sub_10006C4AC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v5 = *((void *)v3 + 2);
  unint64_t v4 = *((void *)v3 + 3);
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_10006C4AC((char *)(v4 > 1), v5 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v5 + 1;
  id v6 = &v3[16 * v5];
  *((void *)v6 + 4) = 574451054;
  *((void *)v6 + 5) = 0xE400000000000000;
  sub_100011F4C((uint64_t)v0, (uint64_t)v35);
  sub_100011F4C((uint64_t)v35, (uint64_t)&v36);
  int v7 = v37;
  if (v37)
  {
    uint64_t v8 = v36;
    uint64_t v42 = 0x223D70756F7267;
    unint64_t v43 = 0xE700000000000000;
    sub_100084D60(v38);
    v47._countAndFlagsBits = 2629666;
    v47._object = (void *)0xE300000000000000;
    sub_100084D60(v47);
    v48._countAndFlagsBits = v8;
    v48._object = v7;
    sub_100084D60(v48);
    v49._countAndFlagsBits = 41;
    v49._object = (void *)0xE100000000000000;
    sub_100084D60(v49);
    uint64_t v9 = v42;
    unint64_t v10 = v43;
    unint64_t v12 = *((void *)v3 + 2);
    unint64_t v11 = *((void *)v3 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v3 = sub_10006C4AC((char *)(v11 > 1), v12 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v12 + 1;
    id v13 = &v3[16 * v12];
    *((void *)v13 + 4) = v9;
    *((void *)v13 + 5) = v10;
  }
  sub_100011F4C((uint64_t)(v0 + 8), (uint64_t)v34);
  sub_100011F4C((uint64_t)v34, (uint64_t)&v39);
  uint64_t v14 = v40;
  if (v40)
  {
    uint64_t v15 = v39;
    uint64_t v42 = 0x223D72696170;
    unint64_t v43 = 0xE600000000000000;
    sub_100084D60(v41);
    v50._countAndFlagsBits = 2629666;
    v50._object = (void *)0xE300000000000000;
    sub_100084D60(v50);
    v51._countAndFlagsBits = v15;
    v51._object = v14;
    sub_100084D60(v51);
    v52._countAndFlagsBits = 41;
    v52._object = (void *)0xE100000000000000;
    sub_100084D60(v52);
    uint64_t v16 = v42;
    unint64_t v17 = v43;
    unint64_t v19 = *((void *)v3 + 2);
    unint64_t v18 = *((void *)v3 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v3 = sub_10006C4AC((char *)(v18 > 1), v19 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v19 + 1;
    BOOL v20 = &v3[16 * v19];
    *((void *)v20 + 4) = v16;
    *((void *)v20 + 5) = v17;
  }
  sub_100011F4C((uint64_t)(v0 + 12), (uint64_t)v33);
  sub_100011F4C((uint64_t)v33, (uint64_t)&v42);
  uint64_t v21 = (void *)v43;
  if (v43)
  {
    uint64_t v22 = v42;
    sub_100084D60(v44);
    v53._countAndFlagsBits = 2629666;
    v53._object = (void *)0xE300000000000000;
    sub_100084D60(v53);
    v54._countAndFlagsBits = v22;
    v54._object = v21;
    sub_100084D60(v54);
    v55._countAndFlagsBits = 41;
    v55._object = (void *)0xE100000000000000;
    sub_100084D60(v55);
    unint64_t v24 = *((void *)v3 + 2);
    unint64_t v23 = *((void *)v3 + 3);
    if (v24 >= v23 >> 1) {
      uint64_t v3 = sub_10006C4AC((char *)(v23 > 1), v24 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v24 + 1;
    Swift::String v25 = &v3[16 * v24];
    *((void *)v25 + 4) = 0x223D6D6F6F72;
    *((void *)v25 + 5) = 0xE600000000000000;
  }
  uint64_t v27 = v0[6];
  BOOL v26 = (void *)v0[7];
  swift_bridgeObjectRetain();
  v56._countAndFlagsBits = v27;
  v56._object = v26;
  sub_100084D60(v56);
  swift_bridgeObjectRelease();
  unint64_t v29 = *((void *)v3 + 2);
  unint64_t v28 = *((void *)v3 + 3);
  if (v29 >= v28 >> 1) {
    uint64_t v3 = sub_10006C4AC((char *)(v28 > 1), v29 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v29 + 1;
  uint64_t v30 = &v3[16 * v29];
  *((void *)v30 + 4) = 1030513773;
  *((void *)v30 + 5) = 0xE400000000000000;
  sub_100004BB0(&qword_1000A6378);
  sub_100011FB4();
  uint64_t v31 = sub_100084CE0();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_100011F00()
{
  return sub_100011B54();
}

uint64_t sub_100011F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A6370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100011FB4()
{
  unint64_t result = qword_1000A6380;
  if (!qword_1000A6380)
  {
    sub_10000BD00(&qword_1000A6378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6380);
  }
  return result;
}

uint64_t destroy for DisplayInfo(void *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[9])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[13];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DisplayInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v9)
  {
    long long v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    uint64_t v11 = *(void *)(a2 + 104);
    if (v11) {
      goto LABEL_6;
    }
LABEL_8:
    long long v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    return a1;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = *(void *)(a2 + 104);
  if (!v11) {
    goto LABEL_8;
  }
LABEL_6:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  uint64_t v12 = *(void *)(a2 + 112);
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = v12;
  *(void *)(a1 + 120) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DisplayInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  if (a1[1])
  {
    if (v4)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000123F0((uint64_t)a1);
      long long v5 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v5;
    }
  }
  else if (v4)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
  }
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + 8;
  uint64_t v8 = a2 + 8;
  uint64_t v9 = a2[9];
  if (a1[9])
  {
    if (v9)
    {
      a1[8] = a2[8];
      a1[9] = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[10] = a2[10];
      a1[11] = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000123F0((uint64_t)(a1 + 8));
      long long v10 = *((_OWORD *)a2 + 5);
      *uint64_t v7 = *v8;
      *((_OWORD *)a1 + 5) = v10;
    }
  }
  else if (v9)
  {
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *((_OWORD *)a2 + 5);
    *uint64_t v7 = *v8;
    *((_OWORD *)a1 + 5) = v11;
  }
  uint64_t v12 = a1 + 12;
  uint64_t v13 = a2 + 12;
  uint64_t v14 = a2[13];
  if (a1[13])
  {
    if (v14)
    {
      a1[12] = a2[12];
      a1[13] = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[14] = a2[14];
      a1[15] = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000123F0((uint64_t)(a1 + 12));
      long long v15 = *((_OWORD *)a2 + 7);
      *uint64_t v12 = *v13;
      *((_OWORD *)a1 + 7) = v15;
    }
  }
  else if (v14)
  {
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *((_OWORD *)a2 + 7);
    *uint64_t v12 = *v13;
    *((_OWORD *)a1 + 7) = v16;
  }
  return a1;
}

uint64_t sub_1000123F0(uint64_t a1)
{
  uint64_t v2 = sub_100004BB0(qword_1000A6388);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 initializeWithTake for DisplayInfo(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for DisplayInfo(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1000123F0(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_6:
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72))
  {
    uint64_t v9 = *(void *)(a2 + 72);
    if (v9)
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1000123F0(a1 + 64);
  }
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
LABEL_11:
  if (!*(void *)(a1 + 104))
  {
LABEL_15:
    long long v14 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v14;
    return a1;
  }
  uint64_t v12 = *(void *)(a2 + 104);
  if (!v12)
  {
    sub_1000123F0(a1 + 96);
    goto LABEL_15;
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayInfo()
{
  return &type metadata for DisplayInfo;
}

void sub_100012650()
{
  type metadata accessor for CarrySettingsDetailViewModel();
  swift_getWitnessTable();
  sub_1000850F0();
  sub_100084420();
  if (v0 <= 0x3F)
  {
    sub_100085200();
    sub_100084420();
    if (v1 <= 0x3F)
    {
      sub_100014BC4();
      if (v2 <= 0x3F)
      {
        sub_100014C1C();
        if (v3 <= 0x3F) {
          swift_initClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_100012810(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  Swift::String v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  char v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  BOOL v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  long long v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_100085130();
  if (!v18) {
    return sub_100084EF0();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = sub_100085420();
  uint64_t v32 = sub_100085430();
  sub_1000853D0(v19);
  uint64_t v36 = v8;
  uint64_t result = sub_100085120();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    BOOL v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_100085170();
      uint64_t v22 = v12;
      unint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_100085410();
      sub_100085140();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_100012C10(uint64_t a1)
{
  return a1;
}

uint64_t sub_100012C3C()
{
  return sub_1000134AC();
}

uint64_t sub_100012C50()
{
  return sub_100084410();
}

uint64_t sub_100012D08()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100012DBC()
{
  return sub_100084410();
}

uint64_t sub_100012E74()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100012F28()
{
  return sub_100084410();
}

uint64_t sub_100012FE0()
{
  unsigned __int8 v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_100004BB0(&qword_1000A64D0);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = 0;
  uint64_t v22 = 0xE000000000000000;
  sub_100085340(43);
  v24._object = (void *)0x800000010008A480;
  v24._countAndFlagsBits = 0xD000000000000029;
  sub_100084D60(v24);
  uint64_t v23 = sub_100013498();
  uint64_t v7 = *(void *)(v2 + 80);
  uint64_t v8 = *(void *)(v2 + 88);
  type metadata accessor for CarrySettingsDetailViewModel();
  swift_getWitnessTable();
  uint64_t v9 = sub_1000850F0();
  swift_getWitnessTable();
  sub_100085560();
  swift_bridgeObjectRelease();
  sub_100059088(v21, v22, v3, (uint64_t)&off_10009F488);
  swift_bridgeObjectRelease();
  sub_100013498();
  LOBYTE(v3) = sub_1000850B0();
  swift_bridgeObjectRelease();
  if (v3) {
    return sub_100012DBC();
  }
  uint64_t v21 = sub_100013498();
  __chkstk_darwin(v21);
  *(&v20 - 2) = v7;
  *(&v20 - 1) = v8;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s11DeviceModelVMa();
  uint64_t v12 = sub_100084F60();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_100012810((void (*)(char *, char *))sub_100015678, KeyPath, v9, v12, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v14);
  swift_release();
  uint64_t v16 = swift_bridgeObjectRelease();
  uint64_t v21 = v15;
  __chkstk_darwin(v16);
  *(&v20 - 2) = v7;
  *(&v20 - 1) = v8;
  sub_100084F60();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v17 = sub_100084E10();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void **)((char *)v1 + *(void *)(*v1 + 160));
  swift_unknownObjectRetain();
  sub_10008194C(v17, v18);
  swift_unknownObjectRelease();
  if (*(uint64_t *)((char *)v1 + *(void *)(*v1 + 144) + 8))
  {
    swift_bridgeObjectRetain();
    sub_1000769D4();
  }
  sub_100012E74();
  sub_100077A88();
  uint64_t v19 = (uint64_t)v1 + *(void *)(*v1 + 136);
  swift_beginAccess();
  sub_1000156F0(v19, (uint64_t)v6);
  sub_100076064((uint64_t)v6);
  swift_retain();
  sub_100012DBC();
  return swift_release();
}

uint64_t sub_100013498()
{
  return sub_1000134AC();
}

uint64_t sub_1000134AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100013560()
{
  return sub_100012FE0();
}

uint64_t sub_10001361C(uint64_t a1)
{
  return sub_100013A24();
}

uint64_t sub_100013768(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = sub_100046B34(a1);
  _s11DeviceModelVMa();
  sub_100084F60();
  type metadata accessor for CarrySettingsDetailViewModel();
  swift_getWitnessTable();
  uint64_t v5 = sub_100084DE0();
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v7 = 0;
  uint64_t v21 = v5;
  uint64_t v8 = v4 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v4 + 64);
  uint64_t v12 = *(void *)(*(void *)v2 + 160);
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v18 >= v13) {
      goto LABEL_19;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v7;
    if (!v19)
    {
      int64_t v7 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_19;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v7);
      if (!v19) {
        break;
      }
    }
LABEL_18:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v7 << 6);
LABEL_5:
    uint64_t v16 = *(void *)(*(void *)(v4 + 56) + 8 * v15);
    uint64_t v17 = *(void **)(v2 + v12);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_10008194C(v16, v17);
    swift_unknownObjectRelease();
    sub_100084F60();
    uint64_t result = sub_100084F40();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13)
  {
LABEL_19:
    swift_release();
    return v21;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v7 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v7 >= v13) {
      goto LABEL_19;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v7);
    ++v20;
    if (v19) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_100013A24()
{
  sub_100059088(0xD000000000000019, 0x800000010008A460, *v0, (uint64_t)&off_10009F488);
  sub_100013498();
  type metadata accessor for CarrySettingsDetailViewModel();
  swift_getWitnessTable();
  sub_1000850F0();
  swift_getWitnessTable();
  sub_100084F80();
  sub_100012C3C();
  sub_1000850A0();
  swift_bridgeObjectRelease();
  return sub_100013560();
}

uint64_t sub_100013BA0()
{
  _OWORD v1[2] = v0;
  v1[3] = sub_100084FC0();
  v1[4] = sub_100084FB0();
  uint64_t v3 = sub_100084FA0();
  v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_100013C3C, v3, v2);
}

uint64_t sub_100013C3C()
{
  uint64_t v1 = sub_100012D08();
  v0[7] = v1;
  if (v1)
  {
    v0[8] = sub_100084FB0();
    uint64_t v3 = sub_100084FA0();
    return _swift_task_switch(sub_100013D14, v3, v2);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100013D14()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100013D80, v1, v2);
}

uint64_t sub_100013D80()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100013DE4(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 120) = a1;
  *(void *)(v2 + 24) = *v1;
  *(void *)(v2 + 32) = *v1;
  sub_100084FC0();
  *(void *)(v2 + 40) = sub_100084FB0();
  uint64_t v4 = sub_100084FA0();
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = v3;
  return _swift_task_switch(sub_100013ED0, v4, v3);
}

uint64_t sub_100013ED0()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  int v3 = *(unsigned __int8 *)(v0 + 120);
  *(void *)(v0 + 64) = *(void *)(*(void *)(v0 + 16) + *(void *)(**(void **)(v0 + 16) + 160));
  uint64_t v4 = *(void *)(v1 + 88);
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = *(void *)(v1 + 80);
  *(void *)(v0 + 80) = v5;
  if (v3 == 1)
  {
    unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 40)
                                                                              + **(int **)(v4 + 40));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v6;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v6 = v0;
    v6[1] = sub_10001411C;
    uint64_t v8 = *(void *)(v0 + 16);
    uint64_t v9 = v2;
    uint64_t v10 = v5;
    uint64_t v11 = v4;
    uint64_t v12 = v15;
  }
  else
  {
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 72)
                                                                              + **(int **)(v4 + 72));
    int64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v13;
    uint64_t WitnessTable = swift_getWitnessTable();
    *int64_t v13 = v0;
    v13[1] = sub_100014484;
    uint64_t v8 = *(void *)(v0 + 16);
    uint64_t v9 = v2;
    uint64_t v10 = v5;
    uint64_t v11 = v4;
    uint64_t v12 = v16;
  }
  return v12(v8, v9, WitnessTable, v10, v11);
}

uint64_t sub_10001411C()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v8 = *(void *)(*v0 + 72);
  uint64_t v2 = *v0;
  swift_task_dealloc();
  int64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v8 + 48) + **(int **)(v8 + 48));
  int v3 = (void *)swift_task_alloc();
  v1[12] = v3;
  *int v3 = v2;
  v3[1] = sub_1000142E0;
  uint64_t v4 = v1[10];
  uint64_t v5 = v1[9];
  return v7(v4, v5);
}

uint64_t sub_1000142E0(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = v4[6];
    uint64_t v6 = v4[7];
    int64_t v7 = sub_10000CC4C;
  }
  else
  {
    v4[13] = a1;
    uint64_t v5 = v4[6];
    uint64_t v6 = v4[7];
    int64_t v7 = sub_10001440C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10001440C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  sub_10001361C(v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100014484()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10000A668, v3, v2);
}

uint64_t sub_1000145A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for CarrySettingsDetailViewModel();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = _s11DeviceModelVMa();
  sub_100085540();
  uint64_t v7 = *(void *)(v6 - 8);
  swift_allocObject();
  uint64_t v8 = sub_100084EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_100084F60();
  uint64_t v10 = *(void **)(a2 + *(void *)(*(void *)a2 + 160));
  swift_unknownObjectRetain();
  uint64_t v11 = sub_10008194C(v8, v10);
  uint64_t result = swift_unknownObjectRelease();
  *a3 = v11;
  return result;
}

uint64_t sub_100014768@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + qword_1000ABA68);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000147C4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + qword_1000ABA68);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100014834()
{
  return sub_100084E30() & 1;
}

uint64_t sub_1000148EC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  type metadata accessor for CarrySettingsDetailViewModel();
  swift_getWitnessTable();
  sub_1000850F0();
  uint64_t v2 = sub_100084420();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 104);
  sub_100085200();
  uint64_t v5 = sub_100084420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v7 = sub_100004BB0(&qword_1000A64E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3(v0 + *(void *)(*(void *)v0 + 128), v2);
  sub_10001594C(v0 + *(void *)(*(void *)v0 + 136));
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100014B54()
{
  sub_1000148EC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t type metadata accessor for CarrySettingsViewModel()
{
  return sub_10000C880();
}

void sub_100014BC4()
{
  if (!qword_1000A6410)
  {
    unint64_t v0 = sub_100084420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A6410);
    }
  }
}

void sub_100014C1C()
{
  if (!qword_1000A6418)
  {
    sub_1000840F0();
    unint64_t v0 = sub_100085200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A6418);
    }
  }
}

void *sub_100014C74()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_100014C88()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 120));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100014CF8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000052B8;
  return sub_100013BA0();
}

uint64_t sub_100014D84(char a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005D30;
  return sub_100013DE4(a1);
}

uint64_t sub_100014E18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000843A0();
  *a1 = result;
  return result;
}

uint64_t sub_100014E68(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  sub_100004BB0(&qword_1000A64D0);
  v2[8] = swift_task_alloc();
  sub_100084FC0();
  v2[9] = sub_100084FB0();
  uint64_t v4 = sub_100084FA0();
  return _swift_task_switch(sub_100014F58, v4, v3);
}

uint64_t sub_100014F58()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  swift_release();
  sub_100085340(22);
  v14._object = (void *)0x800000010008A4E0;
  v14._countAndFlagsBits = 0xD000000000000014;
  sub_100084D60(v14);
  uint64_t v5 = sub_1000840F0();
  sub_100085550();
  sub_100059088(0, 0xE000000000000000, v3, (uint64_t)&off_10009F488);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(v1, v4, v5);
  uint64_t v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
  v8(v1, 0, 1, v5);
  uint64_t v9 = v2 + *(void *)(*(void *)v2 + 136);
  swift_beginAccess();
  sub_1000158E4(v1, v9);
  swift_endAccess();
  if (sub_100012D08())
  {
    uint64_t v10 = v0[8];
    v7(v10, v0[5], v5);
    v8(v10, 0, 1, v5);
    sub_100076064(v10);
    swift_release();
  }
  sub_100012F28();
  if (sub_100012D08())
  {
    sub_100077A88();
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100015190()
{
  uint64_t v1 = *v0;
  sub_100085340(37);
  v3._object = (void *)0x800000010008A4B0;
  v3._countAndFlagsBits = 0xD000000000000023;
  sub_100084D60(v3);
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  sub_100085440();
  sub_100059088(0, 0xE000000000000000, v1, (uint64_t)&off_10009F488);
  swift_bridgeObjectRelease();
  sub_100012F28();
  uint64_t result = sub_100012D08();
  if (result)
  {
    sub_100077A88();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000152A0(uint64_t a1)
{
  Swift::String v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *Swift::String v3 = v1;
  v3[1] = sub_1000052B8;
  return sub_100014E68(a1);
}

uint64_t sub_100015338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100085360();
  *a1 = result;
  return result;
}

uint64_t sub_100015364()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_100015380(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_1000153BC()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_1000153C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000153E4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100015420@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100012C3C();
  *a1 = result;
  return result;
}

uint64_t sub_10001544C()
{
  return sub_100012C50();
}

uint64_t sub_100015478@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100012D08();
  *a1 = result;
  return result;
}

uint64_t sub_1000154A4()
{
  return sub_100012DBC();
}

uint64_t sub_1000154D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100013498();
  *a1 = result;
  return result;
}

uint64_t sub_1000154FC()
{
  return sub_100013560();
}

uint64_t sub_100015528@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100012E74();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100015558()
{
  return sub_100012F28();
}

uint64_t sub_100015580()
{
  return sub_100014834() & 1;
}

uint64_t sub_1000155A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100013498();
  *a1 = result;
  return result;
}

uint64_t sub_1000155D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001587C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_100013560);
}

uint64_t sub_1000155E8()
{
  return 16;
}

__n128 sub_1000155F4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100015600@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  Swift::String v3 = (void *)(*a1 + qword_1000ABA68);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100015660()
{
  return 16;
}

__n128 sub_10001566C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100015678()
{
  return swift_release();
}

uint64_t sub_1000156D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000156F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A64D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100015758@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100012D08();
  *a1 = result;
  return result;
}

uint64_t sub_100015784()
{
  return sub_100012DBC();
}

uint64_t sub_1000157B0()
{
  return 16;
}

__n128 sub_1000157BC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000157C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100012E74();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000157F8()
{
  return sub_100012F28();
}

uint64_t sub_100015820()
{
  return 16;
}

__n128 sub_10001582C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100015838@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100012C3C();
  *a1 = result;
  return result;
}

uint64_t sub_100015864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001587C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_100012C50);
}

uint64_t sub_10001587C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = swift_bridgeObjectRetain();
  return a5(v6);
}

uint64_t sub_1000158B0()
{
  return 16;
}

__n128 sub_1000158BC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000158C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1000145A4(a1, v2, a2);
}

uint64_t sub_1000158E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A64D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001594C(uint64_t a1)
{
  uint64_t v2 = sub_100004BB0(&qword_1000A64D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000159AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100084FF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_100084FE0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000C788(a1, &qword_1000A7070);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100084FA0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_100004BB0(&qword_1000A6668);
  return swift_task_create();
}

uint64_t sub_100015B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100084FF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_100084FE0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000C788(a1, &qword_1000A7070);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100084FA0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

size_t sub_100015D0C()
{
  uint64_t v1 = v0;
  unint64_t v2 = *v0;
  uint64_t v3 = sub_100004BB0(&qword_1000A64D0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v58 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v57 = (uint64_t)&v53 - v6;
  unint64_t v67 = 0;
  unint64_t v68 = 0xE000000000000000;
  sub_100085340(43);
  swift_bridgeObjectRelease();
  unint64_t v67 = 0xD000000000000029;
  unint64_t v68 = 0x800000010008A480;
  uint64_t v7 = type metadata accessor for NetworkManager();
  uint64_t v65 = v7;
  uint64_t v8 = sub_100021D60(&qword_1000A6780, (void (*)(uint64_t))type metadata accessor for NetworkManager);
  uint64_t v66 = v8;
  swift_getKeyPath();
  uint64_t v63 = v7;
  uint64_t v64 = v8;
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  uint64_t v9 = sub_100004BB0(&qword_1000A6788);
  sub_10000C360((unint64_t *)&qword_1000A6790, &qword_1000A6788);
  uint64_t v56 = v9;
  v70._countAndFlagsBits = sub_100085050();
  sub_100084D60(v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v67 = v2;
  sub_100004BB0(&qword_1000A6798);
  sub_100084D20();
  id v10 = objc_allocWithZone((Class)CULogHandle);
  NSString v11 = sub_100084D00();
  NSString v12 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithSubsystem:v11 category:v12];

  uint64_t v14 = v7;
  NSString v15 = sub_100084D00();
  [v13 ulog:40 message:v15];
  swift_bridgeObjectRelease();

  uint64_t v61 = v7;
  uint64_t v62 = v8;
  swift_getKeyPath();
  uint64_t v59 = v7;
  uint64_t v60 = v8;
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  if ((v67 & 0xC000000000000001) != 0) {
    uint64_t v16 = sub_100085290();
  }
  else {
    uint64_t v16 = *(void *)(v67 + 16);
  }
  uint64_t v17 = swift_bridgeObjectRelease();
  __chkstk_darwin(v17);
  *(&v53 - 2) = v7;
  *(&v53 - 1) = v8;
  if (!v16)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v53 - 2) = v7;
    *(&v53 - 1) = v8;
    swift_getKeyPath();
    unint64_t v67 = 0;
    swift_retain();
    return sub_100084410();
  }
  uint64_t v18 = swift_getKeyPath();
  __chkstk_darwin(v18);
  *(&v53 - 2) = v7;
  *(&v53 - 1) = v8;
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  uint64_t v19 = swift_release();
  uint64_t v20 = v67;
  __chkstk_darwin(v19);
  *(&v53 - 2) = v7;
  *(&v53 - 1) = v8;
  swift_getKeyPath();
  swift_retain();
  uint64_t v21 = sub_10001E684(v20);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
    uint64_t v25 = _swiftEmptyArrayStorage;
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v36 = *(unint64_t *)((char *)v1 + *(void *)(*v1 + 160));
    swift_allocObject();
    swift_retain();
    uint64_t v37 = sub_10001F158((uint64_t)v25, v36);
    uint64_t v38 = swift_release();
    uint64_t v39 = (unint64_t *)((char *)v1 + *(void *)(*v1 + 144));
    unint64_t v40 = v39[1];
    if (v40)
    {
      unint64_t v41 = *v39;
      __chkstk_darwin(v38);
      *(&v53 - 2) = v14;
      *(&v53 - 1) = v8;
      uint64_t v42 = swift_getKeyPath();
      __chkstk_darwin(v42);
      *(&v53 - 2) = v14;
      *(&v53 - 1) = v8;
      swift_getKeyPath();
      unint64_t v67 = v41;
      unint64_t v68 = v40;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v38 = sub_100084410();
    }
    __chkstk_darwin(v38);
    *(&v53 - 2) = v14;
    *(&v53 - 1) = v8;
    uint64_t v43 = swift_getKeyPath();
    __chkstk_darwin(v43);
    *(&v53 - 2) = v14;
    *(&v53 - 1) = v8;
    swift_getKeyPath();
    sub_100084400();
    swift_release();
    uint64_t v44 = swift_release();
    char v45 = v67;
    __chkstk_darwin(v44);
    *(&v53 - 2) = v14;
    *(&v53 - 1) = v8;
    uint64_t v46 = swift_getKeyPath();
    __chkstk_darwin(v46);
    *(&v53 - 2) = v14;
    *(&v53 - 1) = v8;
    swift_getKeyPath();
    LOBYTE(v67) = v45;
    swift_retain();
    sub_100084410();
    uint64_t v47 = (uint64_t)v1 + *(void *)(*v1 + 136);
    swift_beginAccess();
    uint64_t v48 = v57;
    uint64_t v49 = sub_10000C724(v47, v57, &qword_1000A64D0);
    __chkstk_darwin(v49);
    *(&v53 - 2) = v14;
    *(&v53 - 1) = v8;
    uint64_t v50 = swift_getKeyPath();
    __chkstk_darwin(v50);
    *(&v53 - 2) = v14;
    *(&v53 - 1) = v8;
    swift_getKeyPath();
    sub_10000C724(v48, v58, &qword_1000A64D0);
    swift_retain();
    sub_100084410();
    uint64_t v51 = sub_10000C788(v48, &qword_1000A64D0);
    __chkstk_darwin(v51);
    *(&v53 - 2) = v14;
    *(&v53 - 1) = v8;
    uint64_t v52 = swift_getKeyPath();
    __chkstk_darwin(v52);
    *(&v53 - 2) = v14;
    *(&v53 - 1) = v8;
    swift_getKeyPath();
    uint64_t v69 = v37;
    swift_retain();
    return sub_100084410();
  }
  uint64_t v54 = v7;
  Swift::String v55 = v1;
  size_t result = swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v25 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v26 = *(void *)(v21 + 8 * v24 + 32);
    uint64_t v27 = *(void *)(v26 + 16);
    int64_t v28 = v25[2];
    int64_t v29 = v28 + v27;
    if (__OFADD__(v28, v27)) {
      break;
    }
    swift_bridgeObjectRetain();
    size_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result && v29 <= v25[3] >> 1)
    {
      if (*(void *)(v26 + 16)) {
        goto LABEL_18;
      }
    }
    else
    {
      if (v28 <= v29) {
        int64_t v30 = v28 + v27;
      }
      else {
        int64_t v30 = v28;
      }
      size_t result = sub_10006C5B0(result, v30, 1, v25);
      uint64_t v25 = (void *)result;
      if (*(void *)(v26 + 16))
      {
LABEL_18:
        uint64_t v31 = (v25[3] >> 1) - v25[2];
        size_t result = sub_100004BB0(&qword_1000A67A0);
        if (v31 < v27) {
          goto LABEL_31;
        }
        size_t result = swift_arrayInitWithCopy();
        if (v27)
        {
          uint64_t v32 = v25[2];
          BOOL v33 = __OFADD__(v32, v27);
          uint64_t v34 = v32 + v27;
          if (v33) {
            goto LABEL_32;
          }
          v25[2] = v34;
        }
        goto LABEL_8;
      }
    }
    if (v27) {
      goto LABEL_30;
    }
LABEL_8:
    size_t result = swift_bridgeObjectRelease();
    if (v22 == ++v24)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = v54;
      uint64_t v1 = v55;
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

void *sub_100016740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v47 = *v3;
  uint64_t v5 = v47;
  uint64_t v48 = a1;
  uint64_t v6 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v6 - 8);
  uint64_t v46 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BB0(&qword_1000A64E8);
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  __chkstk_darwin(v8);
  id v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BB0(&qword_1000A6730);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004BB0(&qword_1000A6738);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (char *)v4 + *(void *)(v5 + 96);
  uint64_t v49 = &_swiftEmptySetSingleton;
  uint64_t v40 = sub_100004BB0(&qword_1000A6740);
  sub_1000843E0();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v43 = v15;
  v20(v19, v18, v15);
  uint64_t v21 = (char *)v4 + *(void *)(*v4 + 104);
  uint64_t v49 = 0;
  sub_100004BB0(&qword_1000A6748);
  sub_1000843E0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v21, v14, v11);
  uint64_t v22 = (char *)v4 + *(void *)(*v4 + 112);
  LOBYTE(v49) = 1;
  sub_1000843E0();
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v22, v10, v42);
  uint64_t v23 = *(void *)(*v4 + 120);
  if (qword_1000A5DB8 != -1) {
    swift_once();
  }
  uint64_t v24 = (char *)v4 + v23;
  uint64_t v25 = unk_1000AB830;
  char v26 = byte_1000AB838;
  uint64_t v27 = qword_1000AB840;
  *(void *)uint64_t v24 = qword_1000AB828;
  *((void *)v24 + 1) = v25;
  v24[16] = v26;
  *((void *)v24 + 3) = v27;
  int64_t v28 = (char *)v4 + *(void *)(*v4 + 128);
  uint64_t v49 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000843E0();
  v20(v28, v18, v43);
  int64_t v29 = (char *)v4 + *(void *)(*v4 + 136);
  uint64_t v30 = sub_1000840F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  *(void *)((char *)v4 + *(void *)(*v4 + 152)) = 0;
  uint64_t v31 = v48;
  *(void *)((char *)v4 + *(void *)(*v4 + 160)) = v48;
  uint64_t v32 = (void *)((char *)v4 + *(void *)(*v4 + 144));
  uint64_t v33 = v45;
  *uint64_t v32 = v44;
  v32[1] = v33;
  uint64_t v34 = sub_100084FF0();
  uint64_t v35 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v46, 1, 1, v34);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  sub_100084FC0();
  swift_retain_n();
  swift_retain();
  uint64_t v37 = sub_100084FB0();
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = v37;
  v38[3] = &protocol witness table for MainActor;
  v38[4] = v36;
  v38[5] = v31;
  v38[6] = v47;
  swift_release();
  sub_100017648(v35, (uint64_t)&unk_1000A6758, (uint64_t)v38);
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_100016CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  sub_100084FC0();
  v6[15] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v6[16] = v8;
  v6[17] = v7;
  return _swift_task_switch(sub_100016D80, v8, v7);
}

uint64_t sub_100016D80()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 144) = Strong;
  uint64_t v2 = *(void *)(v0 + 104);
  if (Strong) {
    uint64_t v3 = sub_100016E1C;
  }
  else {
    uint64_t v3 = sub_100017100;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_100016E1C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 104) + 120);
  *(void *)(v0 + 152) = v1;
  swift_retain();
  return _swift_task_switch(sub_100016E94, v1, 0);
}

uint64_t sub_100016E94()
{
  v0[5] = *(void *)(v0[19] + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_devicesChangedSubject);
  sub_100004BB0(&qword_1000A6760);
  sub_10000C360(&qword_1000A6768, &qword_1000A6760);
  v0[20] = sub_100084430();
  swift_release();
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  return _swift_task_switch(sub_100016F60, v1, v2);
}

uint64_t sub_100016F60()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  v0[8] = v0[20];
  uint64_t v3 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  sub_100004BB0(&qword_1000A6770);
  sub_10000C360(&qword_1000A6778, &qword_1000A6770);
  uint64_t v5 = sub_100084440();
  swift_release();
  swift_release();
  *(void *)(v1 + *(void *)(*(void *)v1 + 152)) = v5;
  swift_release();
  swift_release();
  uint64_t v6 = v0[13];
  return _swift_task_switch(sub_100017100, v6, 0);
}

uint64_t sub_100017100()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 104) + 120);
  *(void *)(v0 + 168) = v1;
  swift_retain();
  return _swift_task_switch(sub_100017178, v1, 0);
}

uint64_t sub_100017178()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  v0[22] = sub_100071EF8(v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  return _swift_task_switch(sub_100017208, v2, v3);
}

uint64_t sub_100017208()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    unint64_t v1 = sub_1000177D0(v0[22]);
    uint64_t v2 = sub_100080A58(v1);
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)swift_task_alloc();
    uint64_t v4 = type metadata accessor for NetworkManager();
    *uint64_t v3 = v4;
    uint64_t v5 = sub_100021D60(&qword_1000A6780, (void (*)(uint64_t))type metadata accessor for NetworkManager);
    v3[1] = v5;
    swift_getKeyPath();
    swift_task_dealloc();
    uint64_t v6 = (void *)swift_task_alloc();
    *uint64_t v6 = v4;
    v6[1] = v5;
    swift_getKeyPath();
    swift_task_dealloc();
    v0[11] = v2;
    swift_retain();
    sub_100084410();
    sub_10000C360(&qword_1000A6718, &qword_1000A6710);
    sub_1000843A0();
    sub_1000843D0();
    swift_release();
    sub_100017A08();
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000173FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100085340(18);
  swift_bridgeObjectRelease();
  sub_100004BB0(&qword_1000A67A0);
  v9._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v9);
  swift_bridgeObjectRelease();
  sub_100058E34(0xD000000000000010, 0x800000010008A8A0, a3, (uint64_t)&off_10009F488);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v6 = sub_1000177D0(a1);
    sub_100080A58(v6);
    uint64_t v7 = swift_bridgeObjectRelease();
    __chkstk_darwin(v7);
    type metadata accessor for NetworkManager();
    sub_100021D60(&qword_1000A6780, (void (*)(uint64_t))type metadata accessor for NetworkManager);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    swift_getKeyPath();
    swift_retain();
    sub_100084410();
    sub_10000C360(&qword_1000A6718, &qword_1000A6710);
    sub_1000843A0();
    sub_1000843D0();
    swift_release();
    sub_100017A08();
    return swift_release();
  }
  return result;
}

uint64_t sub_100017648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100084FF0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_100084FE0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_10000C788(a1, &qword_1000A7070);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100084FA0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1000177D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_100017BD8(a1);
  uint64_t v5 = v4;
  swift_retain();
  uint64_t v6 = sub_10002055C(v5, v2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  int64_t v8 = 0;
  unint64_t v22 = (unint64_t)v6;
  Swift::String v9 = v3 + 8;
  uint64_t v10 = 1 << *((unsigned char *)v3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v3[8];
  uint64_t v13 = *(void *)(*(void *)v2 + 160);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v15 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v8 << 6))
  {
    uint64_t v20 = *(void *)(v3[7] + 8 * i);
    uint64_t v21 = *(void *)(v2 + v13);
    sub_100004BB0(&qword_1000A6788);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10001F158(v20, v21);
    swift_release();
    sub_100084E60();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_100084ED0();
    }
    sub_100084F20();
    uint64_t result = sub_100084EA0();
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v14) {
      goto LABEL_23;
    }
    unint64_t v18 = v9[v17];
    ++v8;
    if (!v18)
    {
      int64_t v8 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v18 = v9[v8];
      if (!v18)
      {
        int64_t v8 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_23;
        }
        unint64_t v18 = v9[v8];
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v12 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14)
  {
LABEL_23:
    swift_release();
    return v22;
  }
  unint64_t v18 = v9[v19];
  if (v18)
  {
    int64_t v8 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v8 >= v14) {
      goto LABEL_23;
    }
    unint64_t v18 = v9[v8];
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

size_t sub_100017A08()
{
  sub_10001ED84();
  type metadata accessor for NetworkManager();
  sub_100021D60(&qword_1000A6780, (void (*)(uint64_t))type metadata accessor for NetworkManager);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  uint64_t v0 = sub_10003202C(v2);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  sub_100020CDC(v2, (unint64_t)v0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_100084410();
  return sub_100015D0C();
}

void *sub_100017BD8(uint64_t a1)
{
  uint64_t v2 = sub_100004BB0(&qword_1000A6800);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v83 - v6;
  uint64_t v96 = sub_100083E20();
  uint64_t v8 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v95 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BB0(&qword_1000A6808);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v88 = (uint64_t)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v83 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v94 = (uint64_t)&v83 - v17;
  __chkstk_darwin(v16);
  int64_t v19 = (char *)&v83 - v18;
  uint64_t v20 = sub_100004BB0(&qword_1000A67A0) - 8;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v97 = (uint64_t)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v85 = (uint64_t)&v83 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t result = &_swiftEmptyDictionarySingleton;
  uint64_t v102 = &_swiftEmptyDictionarySingleton;
  uint64_t v29 = *(void *)(a1 + 16);
  uint64_t v30 = _swiftEmptyArrayStorage;
  if (!v29) {
    return result;
  }
  uint64_t v98 = v15;
  uint64_t v99 = v29;
  uint64_t v31 = a1;
  unint64_t v87 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v32 = a1 + v87;
  uint64_t v89 = *(void *)(v25 + 72);
  uint64_t v91 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v83 = v31;
  swift_bridgeObjectRetain();
  v92 = v5;
  uint64_t v93 = v27;
  uint64_t v90 = v7;
  while (1)
  {
    uint64_t v100 = v30;
    sub_10000C724(v32, (uint64_t)v27, &qword_1000A67A0);
    uint64_t v34 = v95;
    sub_100084120();
    sub_100083DF0();
    (*v91)(v34, v96);
    uint64_t v35 = (uint64_t)v19;
    uint64_t v36 = v94;
    sub_10000C724((uint64_t)v19, v94, &qword_1000A6808);
    uint64_t v37 = sub_100084070();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (v39(v36, 1, v37) == 1)
    {
      sub_10000C788(v36, &qword_1000A6808);
      uint64_t v40 = (uint64_t)v92;
LABEL_9:
      uint64_t v44 = (uint64_t)v98;
      sub_10000C724(v35, (uint64_t)v98, &qword_1000A6808);
      goto LABEL_10;
    }
    uint64_t v41 = (uint64_t)v7;
    sub_100084050();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    uint64_t v42 = sub_100083E50();
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
    {
      sub_10000C788(v41, &qword_1000A6800);
      uint64_t v40 = (uint64_t)v92;
      goto LABEL_9;
    }
    uint64_t v86 = sub_100083E30();
    uint64_t v53 = v52;
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    uint64_t v44 = (uint64_t)v98;
    sub_10000C724(v35, (uint64_t)v98, &qword_1000A6808);
    uint64_t v40 = (uint64_t)v92;
    uint64_t v84 = v53;
    if (v53)
    {
      sub_10000C788(v44, &qword_1000A6808);
      int64_t v19 = (char *)v35;
      uint64_t v30 = v100;
      uint64_t v54 = v84;
      goto LABEL_22;
    }
LABEL_10:
    uint64_t v45 = v88;
    sub_10000C724(v44, v88, &qword_1000A6808);
    if (v39(v45, 1, v37) != 1) {
      break;
    }
    sub_10000C788(v44, &qword_1000A6808);
    sub_10000C788(v45, &qword_1000A6808);
    uint64_t v7 = v90;
    int64_t v19 = (char *)v35;
    uint64_t v30 = v100;
LABEL_14:
    uint64_t v27 = v93;
    sub_10000C724((uint64_t)v93, v97, &qword_1000A67A0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v30 = (void *)sub_10006C5B0(0, v30[2] + 1, 1, v30);
    }
    unint64_t v50 = v30[2];
    unint64_t v49 = v30[3];
    if (v50 >= v49 >> 1) {
      uint64_t v30 = (void *)sub_10006C5B0(v49 > 1, v50 + 1, 1, v30);
    }
    v30[2] = v50 + 1;
    uint64_t v51 = (uint64_t)v30 + v87 + v50 * v89;
    uint64_t v33 = v89;
    sub_100022014(v97, v51);
LABEL_4:
    sub_10000C788((uint64_t)v19, &qword_1000A6808);
    sub_10000C788((uint64_t)v27, &qword_1000A67A0);
    v32 += v33;
    if (!--v99)
    {
      swift_bridgeObjectRelease();
      return v102;
    }
  }
  sub_100084030();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v45, v37);
  uint64_t v46 = sub_100083E50();
  uint64_t v47 = *(void *)(v46 - 8);
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v40, 1, v46);
  uint64_t v30 = v100;
  if (v48 == 1)
  {
    sub_10000C788((uint64_t)v98, &qword_1000A6808);
    sub_10000C788(v40, &qword_1000A6800);
    uint64_t v7 = v90;
    int64_t v19 = (char *)v35;
    goto LABEL_14;
  }
  uint64_t v86 = sub_100083E30();
  uint64_t v54 = v55;
  sub_10000C788((uint64_t)v98, &qword_1000A6808);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v40, v46);
  int64_t v19 = (char *)v35;
LABEL_22:
  uint64_t v56 = v102;
  uint64_t v27 = v93;
  uint64_t v57 = v86;
  if (v102[2])
  {
    swift_bridgeObjectRetain();
    sub_10006BE38(v57, v54);
    char v59 = v58;
    swift_bridgeObjectRelease();
    if (v59) {
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v101[0] = v56;
  uint64_t v102 = (void *)0x8000000000000000;
  unint64_t v62 = sub_10006BE38(v57, v54);
  uint64_t v63 = v56[2];
  BOOL v64 = (v61 & 1) == 0;
  uint64_t v65 = v63 + v64;
  if (!__OFADD__(v63, v64))
  {
    char v66 = v61;
    if (v56[3] >= v65)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v30 = v100;
        uint64_t v69 = (void *)v101[0];
        if ((v61 & 1) == 0) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_100071668();
        uint64_t v30 = v100;
        uint64_t v69 = (void *)v101[0];
        if ((v66 & 1) == 0) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      sub_10006EA00(v65, isUniquelyReferenced_nonNull_native);
      unint64_t v67 = sub_10006BE38(v57, v54);
      if ((v66 & 1) != (v68 & 1)) {
        goto LABEL_46;
      }
      unint64_t v62 = v67;
      uint64_t v30 = v100;
      uint64_t v69 = (void *)v101[0];
      if ((v66 & 1) == 0)
      {
LABEL_33:
        v69[(v62 >> 6) + 8] |= 1 << v62;
        uint64_t v71 = (uint64_t *)(v69[6] + 16 * v62);
        *uint64_t v71 = v57;
        v71[1] = v54;
        *(void *)(v69[7] + 8 * v62) = _swiftEmptyArrayStorage;
        uint64_t v72 = v69[2];
        BOOL v73 = __OFADD__(v72, 1);
        uint64_t v74 = v72 + 1;
        if (v73) {
          goto LABEL_45;
        }
        v69[2] = v74;
        swift_bridgeObjectRetain();
LABEL_35:
        uint64_t v102 = v69;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_36:
        uint64_t v76 = sub_100042D20(v101, v57, v54);
        if (*v75)
        {
          uint64_t v77 = (void **)v75;
          sub_10000C724((uint64_t)v27, v85, &qword_1000A67A0);
          v78 = *v77;
          char v79 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v77 = v78;
          if ((v79 & 1) == 0)
          {
            v78 = (void *)sub_10006C5B0(0, v78[2] + 1, 1, v78);
            *uint64_t v77 = v78;
          }
          unint64_t v81 = v78[2];
          unint64_t v80 = v78[3];
          if (v81 >= v80 >> 1)
          {
            v78 = (void *)sub_10006C5B0(v80 > 1, v81 + 1, 1, v78);
            *uint64_t v77 = v78;
          }
          v78[2] = v81 + 1;
          uint64_t v82 = (char *)v78 + v87;
          uint64_t v33 = v89;
          sub_100022014(v85, (uint64_t)&v82[v81 * v89]);
          ((void (*)(void *, void))v76)(v101, 0);
          swift_bridgeObjectRelease();
          uint64_t v7 = v90;
        }
        else
        {
          ((void (*)(void *, void))v76)(v101, 0);
          swift_bridgeObjectRelease();
          uint64_t v33 = v89;
          uint64_t v7 = v90;
        }
        goto LABEL_4;
      }
    }
    uint64_t v70 = v69[7];
    swift_bridgeObjectRelease();
    *(void *)(v70 + 8 * v62) = _swiftEmptyArrayStorage;
    goto LABEL_35;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = (void *)sub_1000855C0();
  __break(1u);
  return result;
}

Swift::Void __swiftcall MainHostViewController.loadView()()
{
  uint64_t v2 = v1;
  sub_10001E91C(0x6569562064616F4CLL, 0xE900000000000077, v0, (void (*)(uint64_t))type metadata accessor for MainHostViewController, &qword_1000A6708);
  *(void *)&long long v10 = 0;
  *((void *)&v10 + 1) = 0xE000000000000000;
  sub_100085340(17);
  long long v17 = v10;
  v18._countAndFlagsBits = 0x6547656369766544;
  v18._object = (void *)0xEF203A746C617473;
  sub_100084D60(v18);
  if (qword_1000A5E10 != -1) {
    swift_once();
  }
  long long v11 = xmmword_1000AB970;
  long long v12 = unk_1000AB980;
  uint64_t v13 = xmmword_1000AB990;
  LOBYTE(v14) = BYTE8(xmmword_1000AB990);
  uint64_t v15 = qword_1000AB9A0;
  LOBYTE(v16) = byte_1000AB9A8;
  *(_WORD *)((char *)&v16 + 1) = *(_WORD *)&byte_1000AB9A9;
  BYTE3(v16) = byte_1000AB9AB;
  sub_100085440();
  sub_10001E91C(v17, *((uint64_t *)&v17 + 1), v3, (void (*)(uint64_t))type metadata accessor for MainHostViewController, &qword_1000A6708);
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init", v11, v12, v13, v14, v15, v16);
  [v2 setView:v4];

  if (*(void *)&v2[OBJC_IVAR___MainHostViewController_contentVC]) {
    objc_msgSend(v2, "wrapWithSubViewController:");
  }
  uint64_t v5 = *(void **)&v2[OBJC_IVAR___MainHostViewController_statusInfoViewCtrl];
  [v2 addChildViewController:v5];
  id v6 = [v2 view];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v5 view];
    if (v8)
    {
      uint64_t v9 = v8;
      objc_msgSend(v7, "addSubviewToBounds:with:", v8, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

      [v5 didMoveToParentViewController:v2];
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall MainHostViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E91C(0xD000000000000014, 0x800000010008A500, v7, (void (*)(uint64_t))type metadata accessor for MainHostViewController, &qword_1000A6708);
  uint64_t v8 = OBJC_IVAR___MainHostViewController_contentVC;
  uint64_t v9 = *(void **)&v1[OBJC_IVAR___MainHostViewController_contentVC];
  if (!v9) {
    goto LABEL_4;
  }
  id v10 = v9;
  id v11 = [v10 view];
  if (v11)
  {
    long long v12 = v11;
    [v11 removeFromSuperview];

    [v10 removeFromParentViewController];
    uint64_t v9 = *(void **)&v2[v8];
LABEL_4:
    *(void *)&v2[v8] = 0;

    uint64_t v13 = sub_100084FF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
    sub_100084FC0();
    uint64_t v14 = sub_100084FB0();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = &protocol witness table for MainActor;
    sub_100015B60((uint64_t)v6, (uint64_t)&unk_1000A6510, v15);
    swift_release();
    uint64_t v16 = (objc_class *)type metadata accessor for MainHostViewController();
    v17.receiver = v2;
    v17.super_class = v16;
    objc_msgSendSuper2(&v17, "viewDidDisappear:", a1);
    return;
  }
  __break(1u);
}

uint64_t sub_100018A50()
{
  sub_100084FC0();
  v0[2] = sub_100084FB0();
  uint64_t v2 = sub_100084FA0();
  v0[3] = v2;
  v0[4] = v1;
  return _swift_task_switch(sub_100018AE4, v2, v1);
}

uint64_t sub_100018AE4()
{
  if (qword_1000A5E08 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1000AB968;
  *(void *)(v0 + 40) = qword_1000AB968;
  return _swift_task_switch(sub_100018B7C, v1, 0);
}

uint64_t sub_100018B7C()
{
  v0[6] = *(void *)(v0[5] + 112);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100018C20;
  return sub_1000590D8();
}

uint64_t sub_100018C20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100018D4C, v1, 0);
}

uint64_t sub_100018D4C()
{
  v0[8] = *(void *)(v0[5] + 120);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100018DF0;
  return sub_10006A228();
}

uint64_t sub_100018DF0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 24);
  return _swift_task_switch(sub_100018F34, v3, v2);
}

uint64_t sub_100018F34()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id MainHostViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = sub_100084D00();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

id MainHostViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR___MainHostViewController_contentVC] = 0;
  *(void *)&v3[OBJC_IVAR___MainHostViewController_xpcCnx] = 0;
  memset(&v14[1], 0, 80);
  char v15 = 2;
  objc_allocWithZone((Class)sub_100004BB0(&qword_1000A5E50));
  NSString v6 = v3;
  id v7 = (void *)sub_100084750();
  id result = [v7 view];
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = OBJC_IVAR___MainHostViewController_statusInfoViewCtrl;
    id v11 = [self clearColor];
    [v9 setBackgroundColor:v11];

    *(void *)&v6[v10] = v7;
    if (a2)
    {
      NSString v12 = sub_100084D00();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v12 = 0;
    }
    v14[0].receiver = v6;
    v14[0].super_class = (Class)type metadata accessor for MainHostViewController();
    id v13 = [(objc_super *)v14 initWithNibName:v12 bundle:a3];

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id MainHostViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id MainHostViewController.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___MainHostViewController_contentVC] = 0;
  *(void *)&v1[OBJC_IVAR___MainHostViewController_xpcCnx] = 0;
  memset(&v10[1], 0, 80);
  char v11 = 2;
  objc_allocWithZone((Class)sub_100004BB0(&qword_1000A5E50));
  id v3 = v1;
  uint64_t v4 = (void *)sub_100084750();
  id result = [v4 view];
  if (result)
  {
    NSString v6 = result;
    uint64_t v7 = OBJC_IVAR___MainHostViewController_statusInfoViewCtrl;
    id v8 = [self clearColor];
    [v6 setBackgroundColor:v8];

    *(void *)&v3[v7] = v4;
    v10[0].receiver = v3;
    v10[0].super_class = (Class)type metadata accessor for MainHostViewController();
    id v9 = [(objc_super *)v10 initWithCoder:a1];

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id MainHostViewController.__deallocating_deinit(uint64_t a1)
{
  return sub_10001AD98(a1, type metadata accessor for MainHostViewController);
}

Swift::Bool __swiftcall MainHostViewController.shouldAccept(_:)(NSXPCConnection a1)
{
  uint64_t v2 = v1;
  strcpy((char *)v19, "shouldAccept ");
  HIWORD(v19[1]) = -4864;
  id v4 = [(objc_class *)a1.super.isa description];
  uint64_t v5 = sub_100084D10();
  uint64_t v7 = v6;

  v20._countAndFlagsBits = v5;
  v20._object = v7;
  sub_100084D60(v20);
  swift_bridgeObjectRelease();
  sub_10001E91C(v19[0], v19[1], v8, (void (*)(uint64_t))type metadata accessor for MainHostViewController, &qword_1000A6708);
  swift_bridgeObjectRelease();
  id v9 = [self interfaceWithProtocol:&OBJC_PROTOCOL____TtP16HPSUIViewService22HostXPCServerInterface_];
  [(objc_class *)a1.super.isa setExportedInterface:v9];

  id v10 = [(objc_class *)a1.super.isa exportedInterface];
  if (v10)
  {
    char v11 = v10;
    sub_10001DF0C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100086D80;
    *(void *)(inited + 32) = sub_10002207C(0, &qword_1000A6520);
    *(void *)(inited + 40) = sub_10002207C(0, &qword_1000A6528);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(inited);
    swift_setDeallocating();
  }
  id v13 = [(objc_class *)a1.super.isa exportedInterface];
  if (v13)
  {
    uint64_t v14 = v13;
    sub_10001DF0C();
    uint64_t v15 = swift_initStackObject();
    *(_OWORD *)(v15 + 16) = xmmword_100086D80;
    *(void *)(v15 + 32) = sub_10002207C(0, &qword_1000A6520);
    *(void *)(v15 + 40) = sub_10002207C(0, &qword_1000A6528);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v15);
    swift_setDeallocating();
  }
  [(objc_class *)a1.super.isa setExportedObject:v2];
  uint64_t v16 = *(void **)(v2 + OBJC_IVAR___MainHostViewController_xpcCnx);
  *(NSXPCConnection *)(v2 + OBJC_IVAR___MainHostViewController_xpcCnx) = a1;
  objc_super v17 = a1.super.isa;

  [(objc_class *)v17 resume];
  return 1;
}

uint64_t MainHostViewController.receive(betaEnrollmentHomeID:identifiers:)(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  sub_100004BB0(&qword_1000A7070);
  v3[9] = swift_task_alloc();
  v3[10] = sub_100084FC0();
  v3[11] = sub_100084FB0();
  uint64_t v5 = sub_100084FA0();
  v3[12] = v5;
  v3[13] = v4;
  return _swift_task_switch(sub_1000197D4, v5, v4);
}

uint64_t sub_1000197D4()
{
  if (qword_1000A5D70 != -1) {
    swift_once();
  }
  uint64_t v1 = unk_1000AB710;
  uint64_t v29 = qword_1000AB708;
  uint64_t v30 = byte_1000AB718;
  uint64_t v2 = qword_1000AB720;
  id v3 = *(void **)(v0[8] + OBJC_IVAR___MainHostViewController_statusInfoViewCtrl);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (uint64_t (*)())[v3 view];
  if (v4)
  {
    uint64_t v7 = v4;
    uint64_t v8 = v0 + 2;
    [v4 setHidden:0];

    uint64_t v9 = sub_100084760();
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t v14 = *(void *)(v10 + 16);
    uint64_t v13 = *(void *)(v10 + 24);
    int64_t v28 = v0;
    uint64_t v26 = *(void **)(v10 + 32);
    uint64_t v27 = (void (*)(void *, void))v9;
    uint64_t v24 = *(void *)(v10 + 48);
    uint64_t v25 = *(void *)(v10 + 40);
    uint64_t v15 = *(void *)(v10 + 64);
    uint64_t v23 = *(void *)(v10 + 56);
    uint64_t v16 = *(void **)(v10 + 72);
    char v17 = *(unsigned char *)(v10 + 80);
    *(void *)uint64_t v10 = v29;
    *(void *)(v10 + 8) = v1;
    *(void *)(v10 + 16) = v30;
    *(void *)(v10 + 24) = v2;
    *(_OWORD *)(v10 + 32) = 0u;
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(unsigned char *)(v10 + 80) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10000C234(v11, v12, v14, v13, v26, v25, v24, v23, v15, v16, v17);
    v27(v8, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100085340(49);
    swift_bridgeObjectRelease();
    v28[14] = sub_100083D80();
    v28[15] = sub_100021D60(&qword_1000A6538, (void (*)(uint64_t))&type metadata accessor for UUID);
    v32._countAndFlagsBits = sub_100085530();
    sub_100084D60(v32);
    swift_bridgeObjectRelease();
    v33._countAndFlagsBits = 0x6669746E65646920;
    v33._object = (void *)0xED00002073726569;
    sub_100084D60(v33);
    v28[16] = sub_100021D60(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_100085050();
    Swift::String v20 = v19;
    swift_bridgeObjectRelease();
    v34._countAndFlagsBits = v18;
    v34._object = v20;
    sub_100084D60(v34);
    swift_bridgeObjectRelease();
    sub_10001E91C(0xD000000000000020, 0x800000010008A520, v21, (void (*)(uint64_t))type metadata accessor for MainHostViewController, &qword_1000A6708);
    swift_bridgeObjectRelease();
    if (qword_1000A5E08 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_1000AB968;
    v28[17] = qword_1000AB968;
    uint64_t v4 = sub_100019B5C;
    uint64_t v6 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_100019B5C()
{
  uint64_t v1 = v0[17];
  sub_100085340(32);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = sub_100085530();
  sub_100084D60(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x6669746E65646920;
  v11._object = (void *)0xED00002073726569;
  sub_100084D60(v11);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_100085050();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = v2;
  v12._object = v4;
  sub_100084D60(v12);
  swift_bridgeObjectRelease();
  sub_10001E91C(0x20676E6974746553, 0xEF204449656D6F68, 0, (void (*)(uint64_t))type metadata accessor for NetworkManager, &qword_1000A6858);
  swift_bridgeObjectRelease();
  v0[18] = *(void *)(v1 + 112);
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[19] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100019D24;
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  return sub_10005CC14(v7, v6);
}

uint64_t sub_100019D24()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[17];
    uint64_t v4 = sub_100019F58;
    uint64_t v5 = 0;
  }
  else
  {
    swift_release();
    uint64_t v3 = v2[12];
    uint64_t v5 = v2[13];
    uint64_t v4 = sub_100019E48;
  }
  return _swift_task_switch(v4, v3, v5);
}

uint64_t sub_100019E48()
{
  uint64_t v2 = (void *)v0[8];
  uint64_t v1 = v0[9];
  swift_release();
  uint64_t v3 = sub_100084FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  id v4 = v2;
  uint64_t v5 = sub_100084FB0();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v4;
  sub_100015B60(v1, (uint64_t)&unk_1000A6550, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100019F58()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  return _swift_task_switch(sub_100019FBC, v1, v2);
}

uint64_t sub_100019FBC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001A02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a4;
  sub_100084FC0();
  *(void *)(v4 + 56) = sub_100084FB0();
  uint64_t v6 = sub_100084FA0();
  return _swift_task_switch(sub_10001A0C4, v6, v5);
}

uint64_t sub_10001A0C4()
{
  swift_release();
  objc_allocWithZone((Class)type metadata accessor for MainHostViewController.BetaEnrollmentContentViewController(0));
  if (qword_1000A5E08 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  sub_100004BB0(&qword_1000A6828);
  swift_allocObject();
  uint64_t v2 = swift_retain();
  sub_10001DCD0(v2);
  *(unsigned char *)(v0 + 64) = 0;
  sub_100084A40();
  char v3 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  sub_10000C360(&qword_1000A6830, &qword_1000A6828);
  *(void *)(v0 + 16) = sub_1000844F0();
  *(void *)(v0 + 24) = v5;
  *(unsigned char *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v4;
  uint64_t v6 = (void *)sub_100084750();
  uint64_t v7 = OBJC_IVAR___MainHostViewController_contentVC;
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR___MainHostViewController_contentVC);
  *(void *)(v1 + OBJC_IVAR___MainHostViewController_contentVC) = v6;
  id v9 = v6;

  id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR___MainHostViewController_statusInfoViewCtrl), "view"));
  if (v10)
  {
    Swift::String v11 = v10;
    [v10 setHidden:1];
  }
  if (*(void *)(v1 + v7)) {
    objc_msgSend(*(id *)(v0 + 48), "wrapWithSubViewController:");
  }

  Swift::String v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10001A42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_100083D80();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  sub_100084FC0();
  v4[9] = sub_100084FB0();
  uint64_t v7 = sub_100084FA0();
  return _swift_task_switch(sub_10001A524, v7, v6);
}

uint64_t sub_10001A524()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (const void *)v0[4];
  swift_release();
  v0[10] = _Block_copy(v2);
  sub_100083D60();
  sub_100021D60(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v3 = sub_100085040();
  v0[11] = v3;
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[12] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000221AC;
  uint64_t v6 = v0[8];
  return MainHostViewController.receive(betaEnrollmentHomeID:identifiers:)(v6, v3);
}

uint64_t MainHostViewController.receive(betaEnrollmentHomeID:)(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  sub_100084FC0();
  v2[17] = sub_100084FB0();
  uint64_t v4 = sub_100084FA0();
  v2[18] = v4;
  v2[19] = v3;
  return _swift_task_switch(sub_10001A6E8, v4, v3);
}

uint64_t sub_10001A6E8()
{
  uint64_t v1 = (void *)v0[16];
  Class isa = sub_100083D50().super.isa;
  v0[20] = isa;
  sub_100083D80();
  sub_100021D60(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
  Class v3 = sub_100085020().super.isa;
  v0[21] = v3;
  v0[2] = v0;
  v0[3] = sub_10001A858;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10001A988;
  v0[13] = &unk_10009F4E8;
  v0[14] = v4;
  [v1 receiveWithBetaEnrollmentHomeID:isa identifiers:v3 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10001A858()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 176) = v2;
  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  if (v2) {
    uint64_t v5 = sub_1000221B8;
  }
  else {
    uint64_t v5 = sub_1000221A8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10001A988(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_100004BB0((uint64_t *)&unk_1000A7100);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return _swift_continuation_throwingResume(v7);
  }
}

uint64_t sub_10001AB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_100083D80();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  sub_100084FC0();
  v3[8] = sub_100084FB0();
  uint64_t v6 = sub_100084FA0();
  return _swift_task_switch(sub_10001AC94, v6, v5);
}

uint64_t sub_10001AC94()
{
  uint64_t v1 = (const void *)v0[3];
  uint64_t v2 = (void *)v0[4];
  swift_release();
  v0[9] = _Block_copy(v1);
  sub_100083D60();
  id v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000221B0;
  uint64_t v5 = v0[7];
  return MainHostViewController.receive(betaEnrollmentHomeID:)(v5);
}

id sub_10001AD64(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10001DC04(a1, a2, a3, type metadata accessor for MainHostViewController.BetaEnrollmentContentViewController);
}

id sub_10001AD7C()
{
  return sub_10001AD98(0, (uint64_t (*)(void))type metadata accessor for MainHostViewController.BetaEnrollmentContentViewController);
}

id sub_10001AD98(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

void sub_10001ADD0()
{
}

void sub_10001AE00()
{
}

NSNumber sub_10001AE30()
{
  sub_10002207C(0, &qword_1000A6810);
  result.super.super.Class isa = sub_1000851B0(180513).super.super.isa;
  qword_1000A64F0 = (uint64_t)result.super.super.isa;
  return result;
}

uint64_t MainHostViewController.receive(carrySettingsHomeID:identifiers:)(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  sub_100004BB0(&qword_1000A7070);
  v3[17] = swift_task_alloc();
  v3[18] = sub_100084FC0();
  v3[19] = sub_100084FB0();
  uint64_t v5 = sub_100084FA0();
  v3[20] = v5;
  v3[21] = v4;
  return _swift_task_switch(sub_10001AF4C, v5, v4);
}

uint64_t sub_10001AF4C()
{
  if (qword_1000A5D70 != -1) {
    swift_once();
  }
  uint64_t v1 = unk_1000AB710;
  uint64_t v79 = qword_1000AB708;
  uint64_t v82 = byte_1000AB718;
  uint64_t v2 = qword_1000AB720;
  id v3 = *(void **)(*(void *)(v0 + 128) + OBJC_IVAR___MainHostViewController_statusInfoViewCtrl);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (uint64_t (*)())[v3 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v7 = v4;
  uint64_t v8 = v0 + 16;
  uint64_t v77 = *(void *)(v0 + 128);
  [v4 setHidden:0];

  id v71 = v3;
  uint64_t v9 = sub_100084760();
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v85 = v0;
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v14 = *(void *)(v10 + 24);
  v75 = *(void **)(v10 + 32);
  uint64_t v76 = (void (*)(uint64_t, void))v9;
  uint64_t v73 = *(void *)(v10 + 48);
  uint64_t v74 = *(void *)(v10 + 40);
  uint64_t v15 = *(void *)(v10 + 64);
  uint64_t v72 = *(void *)(v10 + 56);
  uint64_t v16 = *(void **)(v10 + 72);
  char v17 = *(unsigned char *)(v10 + 80);
  *(void *)uint64_t v10 = v79;
  *(void *)(v10 + 8) = v1;
  *(void *)(v10 + 16) = v82;
  *(void *)(v10 + 24) = v2;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 64) = 0u;
  *(unsigned char *)(v10 + 80) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v70 = v16;
  uint64_t v18 = v85;
  sub_10000C234(v11, v12, v13, v14, v75, v74, v73, v72, v15, v70, v17);
  v76(v8, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v19 = *(void **)(v77 + OBJC_IVAR___MainHostViewController_xpcCnx);
  *(void *)(v85 + 176) = v19;
  if (v19)
  {
    id v20 = v19;
    if (sub_100072C2C())
    {
      sub_100085340(48);
      swift_bridgeObjectRelease();
      sub_100083D80();
      sub_100021D60(&qword_1000A6538, (void (*)(uint64_t))&type metadata accessor for UUID);
      v87._countAndFlagsBits = sub_100085530();
      sub_100084D60(v87);
      swift_bridgeObjectRelease();
      v88._countAndFlagsBits = 0x6669746E65646920;
      v88._object = (void *)0xED00002073726569;
      sub_100084D60(v88);
      sub_100021D60(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_100085050();
      uint64_t v23 = v22;
      swift_bridgeObjectRelease();
      v89._countAndFlagsBits = v21;
      v89._object = v23;
      sub_100084D60(v89);
      swift_bridgeObjectRelease();
      sub_10001E91C(0xD00000000000001FLL, 0x800000010008A570, v24, (void (*)(uint64_t))type metadata accessor for MainHostViewController, &qword_1000A6708);
      swift_bridgeObjectRelease();
      if (qword_1000A5E08 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_1000AB968;
      *(void *)(v85 + 184) = qword_1000AB968;
      uint64_t v4 = sub_10001B6F4;
      uint64_t v6 = 0;
      return _swift_task_switch(v4, v5, v6);
    }
    swift_release();
    if (qword_1000A5D48 != -1) {
      swift_once();
    }
    uint64_t v47 = unk_1000AB670;
    uint64_t v81 = qword_1000AB668;
    uint64_t v84 = byte_1000AB678;
    uint64_t v48 = qword_1000AB680;
    uint64_t v49 = qword_1000A5D60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v49 != -1) {
      swift_once();
    }
    uint64_t v50 = unk_1000AB6D0;
    uint64_t v78 = qword_1000AB6C8;
    uint64_t v51 = byte_1000AB6D8;
    uint64_t v52 = qword_1000AB6E0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t (*)())[v71 view];
    if (v4)
    {
      uint64_t v53 = v4;
      uint64_t v18 = v85;
      [v4 setHidden:0];

      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v54 = (void (*)(uint64_t, void))sub_100084760();
      uint64_t v56 = *(void *)v55;
      uint64_t v57 = *(void *)(v55 + 8);
      uint64_t v58 = *(void *)(v55 + 16);
      uint64_t v59 = *(void *)(v55 + 24);
      uint64_t v60 = *(void **)(v55 + 32);
      uint64_t v61 = *(void *)(v55 + 40);
      uint64_t v62 = *(void *)(v55 + 48);
      uint64_t v63 = *(void *)(v55 + 56);
      uint64_t v64 = *(void *)(v55 + 64);
      uint64_t v65 = *(void **)(v55 + 72);
      char v66 = *(unsigned char *)(v55 + 80);
      *(void *)uint64_t v55 = v81;
      *(void *)(v55 + 8) = v47;
      *(void *)(v55 + 16) = v84;
      *(void *)(v55 + 24) = v48;
      *(void *)(v55 + 32) = 0;
      *(void *)(v55 + 40) = v78;
      *(void *)(v55 + 48) = v50;
      *(void *)(v55 + 56) = v51;
      *(void *)(v55 + 64) = v52;
      *(void *)(v55 + 72) = 0;
      *(unsigned char *)(v55 + 80) = 1;
      sub_10000C234(v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66);
      v54(v85 + 80, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10001EC1C();
      swift_allocError();
      *unint64_t v67 = 0;
      swift_willThrow();

      goto LABEL_23;
    }
LABEL_28:
    __break(1u);
    return _swift_task_switch(v4, v5, v6);
  }
  swift_release();
  if (qword_1000A5D48 != -1) {
    swift_once();
  }
  uint64_t v25 = unk_1000AB670;
  uint64_t v80 = qword_1000AB668;
  uint64_t v83 = byte_1000AB678;
  uint64_t v26 = qword_1000AB680;
  uint64_t v27 = qword_1000A5D68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_1000AB6E8;
  uint64_t v28 = unk_1000AB6F0;
  uint64_t v30 = byte_1000AB6F8;
  uint64_t v31 = qword_1000AB700;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (uint64_t (*)())[v71 view];
  if (!v4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  Swift::String v32 = v4;
  [v4 setHidden:0];

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::String v33 = (void (*)(uint64_t, void))sub_100084760();
  uint64_t v35 = *(void *)v34;
  uint64_t v36 = *(void *)(v34 + 8);
  uint64_t v37 = *(void *)(v34 + 16);
  uint64_t v38 = *(void *)(v34 + 24);
  uint64_t v39 = *(void **)(v34 + 32);
  uint64_t v40 = *(void *)(v34 + 40);
  uint64_t v41 = *(void *)(v34 + 48);
  uint64_t v42 = *(void *)(v34 + 56);
  uint64_t v43 = *(void *)(v34 + 64);
  uint64_t v44 = *(void **)(v34 + 72);
  char v45 = *(unsigned char *)(v34 + 80);
  *(void *)uint64_t v34 = v80;
  *(void *)(v34 + 8) = v25;
  *(void *)(v34 + 16) = v83;
  *(void *)(v34 + 24) = v26;
  *(void *)(v34 + 32) = 0;
  *(void *)(v34 + 40) = v29;
  *(void *)(v34 + 48) = v28;
  *(void *)(v34 + 56) = v30;
  *(void *)(v34 + 64) = v31;
  *(void *)(v34 + 72) = 0;
  *(unsigned char *)(v34 + 80) = 1;
  sub_10000C234(v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45);
  v33(v85 + 48, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001EC1C();
  swift_allocError();
  *uint64_t v46 = 1;
  swift_willThrow();
LABEL_23:
  swift_task_dealloc();
  char v68 = *(uint64_t (**)(void))(v18 + 8);
  return v68();
}

uint64_t sub_10001B6F4()
{
  v0[24] = *(void *)(v0[23] + 120);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[25] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001B7A0;
  uint64_t v3 = v0[14];
  uint64_t v2 = v0[15];
  return sub_10006780C(v3, v2);
}

uint64_t sub_10001B7A0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[23];
    uint64_t v4 = sub_10001B9DC;
    uint64_t v5 = 0;
  }
  else
  {
    swift_release();
    uint64_t v3 = v2[20];
    uint64_t v5 = v2[21];
    uint64_t v4 = sub_10001B8C4;
  }
  return _swift_task_switch(v4, v3, v5);
}

uint64_t sub_10001B8C4()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v3 = (void *)v0[16];
  uint64_t v2 = v0[17];
  swift_release();
  uint64_t v4 = sub_100084FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  id v5 = v3;
  uint64_t v6 = sub_100084FB0();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v5;
  sub_100015B60(v2, (uint64_t)&unk_1000A6578, (uint64_t)v7);
  swift_release();

  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10001B9DC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  return _swift_task_switch(sub_10001BA40, v1, v2);
}

uint64_t sub_10001BA40()
{
  uint64_t v1 = *(void **)(v0 + 176);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001BAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a4;
  sub_100084FC0();
  v4[17] = sub_100084FB0();
  uint64_t v6 = sub_100084FA0();
  v4[18] = v6;
  v4[19] = v5;
  return _swift_task_switch(sub_10001BB4C, v6, v5);
}

uint64_t sub_10001BB4C()
{
  uint64_t v1 = (NSString *)sub_100084D00();
  Class v2 = NSClassFromString(v1);

  if (v2)
  {
    id v3 = [objc_allocWithZone((Class)ACMobileAuthenticationContext) initWithHostViewController:v0[16]];
    v0[20] = v3;
    [v3 setEnvironment:0];
    uint64_t v4 = qword_1000A5E18;
    id v5 = v3;
    if (v4 != -1) {
      swift_once();
    }
    [v5 setAppID:qword_1000A64F0];
    uint64_t v61 = v5;

    id v6 = [objc_allocWithZone((Class)ACAuthenticationRequest) init];
    v0[21] = v6;
    id v59 = v6;
    [v6 setAuthType:1];
    if (qword_1000A5D40 != -1) {
      swift_once();
    }
    uint64_t v7 = unk_1000AB650;
    uint64_t v57 = qword_1000AB648;
    uint64_t v58 = byte_1000AB658;
    uint64_t v8 = qword_1000AB660;
    uint64_t v9 = *(void **)(v0[16] + OBJC_IVAR___MainHostViewController_statusInfoViewCtrl);
    v0[22] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v10 = [v9 view];
    if (v10)
    {
      uint64_t v11 = v10;
      [v10 setHidden:0];

      uint64_t v12 = sub_100084760();
      uint64_t v14 = *(void *)v13;
      uint64_t v15 = *(void *)(v13 + 8);
      uint64_t v55 = *(void *)(v13 + 16);
      uint64_t v56 = (void (*)(void *, void))v12;
      uint64_t v53 = *(void **)(v13 + 32);
      uint64_t v54 = *(void *)(v13 + 24);
      uint64_t v16 = *(void *)(v13 + 48);
      uint64_t v17 = *(void *)(v13 + 64);
      uint64_t v51 = *(void *)(v13 + 56);
      uint64_t v52 = *(void *)(v13 + 40);
      uint64_t v18 = *(void **)(v13 + 72);
      char v19 = *(unsigned char *)(v13 + 80);
      *(void *)uint64_t v13 = v57;
      *(void *)(v13 + 8) = v7;
      *(void *)(v13 + 16) = v58;
      *(void *)(v13 + 24) = v8;
      *(_OWORD *)(v13 + 32) = 0u;
      *(_OWORD *)(v13 + 48) = 0u;
      *(_OWORD *)(v13 + 64) = 0u;
      *(unsigned char *)(v13 + 80) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10000C234(v14, v15, v55, v54, v53, v52, v16, v51, v17, v18, v19);
      v56(v0 + 10, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v0[2] = v0;
      v0[7] = v0 + 15;
      v0[3] = sub_10001C168;
      uint64_t v20 = swift_continuation_init();
      v0[10] = _NSConcreteStackBlock;
      v0[11] = 0x40000000;
      v0[12] = sub_10001C6C8;
      v0[13] = &unk_10009F7E8;
      v0[14] = v20;
      [v61 authenticateWithRequest:v59 completion:v0 + 10];
      id v10 = v0 + 2;
      return _swift_continuation_await(v10);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    return _swift_continuation_await(v10);
  }
  swift_release();
  v0[10] = type metadata accessor for MainHostViewController();
  sub_100004BB0(&qword_1000A6708);
  sub_100084D20();
  id v21 = objc_allocWithZone((Class)CULogHandle);
  NSString v22 = sub_100084D00();
  NSString v23 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v24 = [v21 initWithSubsystem:v22 category:v23];

  NSString v25 = sub_100084D00();
  [v24 ulog:90 message:v25];

  if (qword_1000A5D48 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_1000AB668;
  uint64_t v26 = unk_1000AB670;
  uint64_t v60 = byte_1000AB678;
  uint64_t v28 = qword_1000AB680;
  uint64_t v29 = qword_1000A5D50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_1000AB688;
  uint64_t v31 = unk_1000AB690;
  uint64_t v32 = byte_1000AB698;
  uint64_t v33 = qword_1000AB6A0;
  uint64_t v34 = *(void **)(v0[16] + OBJC_IVAR___MainHostViewController_statusInfoViewCtrl);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = [v34 view];
  if (!v10) {
    goto LABEL_19;
  }
  uint64_t v35 = v10;
  [v10 setHidden:0];

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = (void (*)(void *, void))sub_100084760();
  uint64_t v38 = *(void *)v37;
  uint64_t v39 = *(void *)(v37 + 8);
  uint64_t v40 = *(void *)(v37 + 16);
  uint64_t v41 = *(void *)(v37 + 24);
  uint64_t v42 = *(void **)(v37 + 32);
  uint64_t v43 = *(void *)(v37 + 40);
  uint64_t v44 = *(void *)(v37 + 48);
  uint64_t v45 = *(void *)(v37 + 56);
  uint64_t v46 = *(void *)(v37 + 64);
  uint64_t v47 = *(void **)(v37 + 72);
  char v48 = *(unsigned char *)(v37 + 80);
  *(void *)uint64_t v37 = v27;
  *(void *)(v37 + 8) = v26;
  *(void *)(v37 + 16) = v60;
  *(void *)(v37 + 24) = v28;
  *(void *)(v37 + 32) = 0;
  *(void *)(v37 + 40) = v30;
  *(void *)(v37 + 48) = v31;
  *(void *)(v37 + 56) = v32;
  *(void *)(v37 + 64) = v33;
  *(void *)(v37 + 72) = 0;
  *(unsigned char *)(v37 + 80) = 1;
  sub_10000C234(v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48);
  v36(v0 + 10, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = (uint64_t (*)(void))v0[1];
  return v49();
}

uint64_t sub_10001C168()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  uint64_t v2 = *(void *)(*(void *)v0 + 144);
  return _swift_task_switch(sub_10001C270, v2, v1);
}

id sub_10001C270()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = [v1 serviceTicket];
  if (v2)
  {

    id v3 = [v1 serviceTicket];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = sub_100084D10();
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v7 = 0;
    }
    id v36 = [v1 userName];
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = sub_100084D10();
      uint64_t v40 = v39;
    }
    else
    {
      uint64_t v38 = 0;
      uint64_t v40 = 0;
    }
    uint64_t v41 = *(void **)(v0 + 176);
    uint64_t v42 = *(void *)(v0 + 128);
    id v43 = objc_allocWithZone((Class)type metadata accessor for MainHostViewController.CarrySettingsContentViewController(0));
    uint64_t v44 = (void *)sub_10001D62C(v5, v7, v38, v40);
    uint64_t v45 = OBJC_IVAR___MainHostViewController_contentVC;
    uint64_t v46 = *(void **)(v42 + OBJC_IVAR___MainHostViewController_contentVC);
    *(void *)(v42 + OBJC_IVAR___MainHostViewController_contentVC) = v44;
    id v47 = v44;

    id v48 = [v41 view];
    if (v48)
    {
      uint64_t v49 = v48;
      [v48 setHidden:1];
    }
    NSString v22 = *(void **)(v0 + 160);
    id v21 = *(void **)(v0 + 168);
    if (*(void *)(v42 + v45)) {
      objc_msgSend(*(id *)(v0 + 128), "wrapWithSubViewController:");
    }
  }
  else
  {
    *(void *)(v0 + 80) = type metadata accessor for MainHostViewController();
    sub_100004BB0(&qword_1000A6708);
    sub_100084D20();
    id v8 = objc_allocWithZone((Class)CULogHandle);
    NSString v9 = sub_100084D00();
    NSString v10 = sub_100084D00();
    swift_bridgeObjectRelease();
    id v11 = [v8 initWithSubsystem:v9 category:v10];

    NSString v12 = sub_100084D00();
    [v11 ulog:90 message:v12];

    if (qword_1000A5D48 != -1) {
      swift_once();
    }
    uint64_t v13 = unk_1000AB670;
    uint64_t v53 = qword_1000AB668;
    uint64_t v54 = byte_1000AB678;
    uint64_t v14 = qword_1000AB680;
    uint64_t v15 = qword_1000A5D58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void **)(v0 + 176);
    uint64_t v17 = unk_1000AB6B0;
    uint64_t v51 = qword_1000AB6A8;
    uint64_t v52 = byte_1000AB6B8;
    uint64_t v18 = qword_1000AB6C0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = [v16 view];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v20 = result;
    id v21 = *(void **)(v0 + 168);
    NSString v22 = *(void **)(v0 + 160);
    [result setHidden:0];

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v23 = (void (*)(uint64_t, void))sub_100084760();
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 16);
    uint64_t v28 = *(void *)(v24 + 24);
    uint64_t v29 = *(void **)(v24 + 32);
    uint64_t v30 = *(void *)(v24 + 40);
    uint64_t v31 = *(void *)(v24 + 48);
    uint64_t v32 = *(void *)(v24 + 56);
    uint64_t v33 = *(void *)(v24 + 64);
    uint64_t v34 = *(void **)(v24 + 72);
    char v35 = *(unsigned char *)(v24 + 80);
    *(void *)uint64_t v24 = v53;
    *(void *)(v24 + 8) = v13;
    *(void *)(v24 + 16) = v54;
    *(void *)(v24 + 24) = v14;
    *(void *)(v24 + 32) = 0;
    *(void *)(v24 + 40) = v51;
    *(void *)(v24 + 48) = v17;
    *(void *)(v24 + 56) = v52;
    *(void *)(v24 + 64) = v18;
    *(void *)(v24 + 72) = 0;
    *(unsigned char *)(v24 + 80) = 1;
    sub_10000C234(v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35);
    v23(v0 + 80, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v50();
}

uint64_t sub_10001C6C8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v2 + 64) + 40) = a2;
  id v3 = a2;
  return _swift_continuation_resume(v2);
}

uint64_t sub_10001C8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_100083D80();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  sub_100084FC0();
  v4[9] = sub_100084FB0();
  uint64_t v7 = sub_100084FA0();
  return _swift_task_switch(sub_10001C998, v7, v6);
}

uint64_t sub_10001C998()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (const void *)v0[4];
  swift_release();
  v0[10] = _Block_copy(v2);
  sub_100083D60();
  sub_100021D60(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v3 = sub_100085040();
  v0[11] = v3;
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[12] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10001CAC4;
  uint64_t v6 = v0[8];
  return MainHostViewController.receive(carrySettingsHomeID:identifiers:)(v6, v3);
}

uint64_t sub_10001CAC4()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void *)(*v1 + 64);
  uint64_t v6 = *(void *)(*v1 + 56);
  uint64_t v7 = *(void *)(*v1 + 48);
  uint64_t v8 = *(void **)(*v1 + 40);
  uint64_t v9 = *v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);

  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v3 + 80);
  if (v2)
  {
    id v11 = (void *)sub_100083CF0();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v11);
  }
  else
  {
    (*(void (**)(void, void))(v10 + 16))(*(void *)(v3 + 80), 0);
  }
  _Block_release(*(const void **)(v4 + 80));
  swift_task_dealloc();
  NSString v12 = *(uint64_t (**)(void))(v9 + 8);
  return v12();
}

uint64_t MainHostViewController.receive(carrySettingsHomeID:)(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  sub_100084FC0();
  v2[17] = sub_100084FB0();
  uint64_t v4 = sub_100084FA0();
  v2[18] = v4;
  v2[19] = v3;
  return _swift_task_switch(sub_10001CD6C, v4, v3);
}

uint64_t sub_10001CD6C()
{
  uint64_t v1 = (void *)v0[16];
  Class isa = sub_100083D50().super.isa;
  v0[20] = isa;
  sub_100083D80();
  sub_100021D60(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
  Class v3 = sub_100085020().super.isa;
  v0[21] = v3;
  v0[2] = v0;
  v0[3] = sub_10001CEDC;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10001A988;
  v0[13] = &unk_10009F528;
  v0[14] = v4;
  [v1 receiveWithCarrySettingsHomeID:isa identifiers:v3 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10001CEDC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 176) = v2;
  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  if (v2) {
    uint64_t v5 = sub_10001D07C;
  }
  else {
    uint64_t v5 = sub_10001D00C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10001D00C()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = (void *)v0[21];
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10001D07C()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = (void *)v0[20];
  swift_release();
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10001D278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_100083D80();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  sub_100084FC0();
  v3[8] = sub_100084FB0();
  uint64_t v6 = sub_100084FA0();
  return _swift_task_switch(sub_10001D370, v6, v5);
}

uint64_t sub_10001D370()
{
  uint64_t v1 = (const void *)v0[3];
  uint64_t v2 = (void *)v0[4];
  swift_release();
  v0[9] = _Block_copy(v1);
  sub_100083D60();
  id v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10001D440;
  uint64_t v5 = v0[7];
  return MainHostViewController.receive(carrySettingsHomeID:)(v5);
}

uint64_t sub_10001D440()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void *)(*v1 + 56);
  uint64_t v6 = *(void *)(*v1 + 48);
  uint64_t v7 = *(void *)(*v1 + 40);
  uint64_t v8 = *(void **)(*v1 + 32);
  uint64_t v9 = *v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);

  uint64_t v10 = *(void *)(v3 + 72);
  if (v2)
  {
    id v11 = (void *)sub_100083CF0();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v11);
  }
  else
  {
    (*(void (**)(void, void))(v10 + 16))(*(void *)(v3 + 72), 0);
  }
  _Block_release(*(const void **)(v4 + 72));
  swift_task_dealloc();
  NSString v12 = *(uint64_t (**)(void))(v9 + 8);
  return v12();
}

uint64_t sub_10001D62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v11 = sub_100084FF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    sub_100084FC0();
    uint64_t v12 = sub_100084FB0();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = a1;
    v13[5] = a2;
    sub_100015B60((uint64_t)v10, (uint64_t)&unk_1000A6728, (uint64_t)v13);
    swift_release();
  }
  if (qword_1000A5E08 != -1) {
    swift_once();
  }
  sub_100004BB0(&qword_1000A6710);
  swift_allocObject();
  uint64_t v14 = swift_retain();
  sub_100016740(v14, a3, a4);
  sub_10000C360(&qword_1000A6718, &qword_1000A6710);
  uint64_t v15 = sub_1000844F0();
  uint64_t v17 = v16;
  char v26 = 0;
  sub_100084A40();
  char v18 = v22;
  uint64_t v19 = v23;
  uint64_t v22 = v15;
  uint64_t v23 = v17;
  char v24 = v18;
  uint64_t v25 = v19;
  return sub_100084750();
}

uint64_t sub_10001D850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_100084FC0();
  v5[4] = sub_100084FB0();
  uint64_t v7 = sub_100084FA0();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_10001D8E8, v7, v6);
}

uint64_t sub_10001D8E8()
{
  sub_1000576F8();
  if (qword_1000A5E08 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1000AB968;
  *(void *)(v0 + 56) = qword_1000AB968;
  return _swift_task_switch(sub_10001D99C, v1, 0);
}

uint64_t sub_10001D99C()
{
  v0[8] = *(void *)(v0[7] + 120);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001DA48;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return sub_100066BE4(v3, v2);
}

uint64_t sub_10001DA48()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10001DB8C, v3, v2);
}

uint64_t sub_10001DB8C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_10001DBEC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10001DC04(a1, a2, a3, type metadata accessor for MainHostViewController.CarrySettingsContentViewController);
}

id sub_10001DC04(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id sub_10001DC54()
{
  return sub_10001AD98(0, (uint64_t (*)(void))type metadata accessor for MainHostViewController.CarrySettingsContentViewController);
}

void sub_10001DC70()
{
}

void sub_10001DCA0()
{
}

uint64_t sub_10001DCD0(uint64_t a1)
{
  uint64_t v3 = sub_100004BB0(&qword_1000A6838);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  objc_super v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BB0(&qword_1000A6840);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_100004BB0(&qword_1000A6848);
  sub_1000843E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  uint64_t v15 = 0;
  sub_100004BB0(&qword_1000A6850);
  sub_1000843E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v12, v6, v3);
  *(void *)(v1 + *(void *)(*(void *)v1 + 112)) = 0;
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 120)) = 0;
  *(void *)(v1 + *(void *)(*(void *)v1 + 128)) = a1;
  return v1;
}

uint64_t sub_10001DF0C()
{
  uint64_t v0 = sub_100004BB0(qword_1000A6168);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = (uint64_t *)&unk_1000A6868;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_1000A6860;
  }
  return sub_100004BB0(v2);
}

uint64_t sub_10001DF6C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100004BB0(&qword_1000A67F0);
  uint64_t result = sub_100085330();
  uint64_t v9 = (unsigned char *)result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::UInt v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    sub_100085630();
    sub_100085640(v18);
    uint64_t result = sub_100085650();
    uint64_t v19 = -1 << v9[32];
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*((void *)v9 + 6) + 8 * v22) = v18;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t result = swift_retain();
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10001E1E0(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10001E2C0;
  return v5(v2 + 32);
}

uint64_t sub_10001E2C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

int64_t sub_10001E3D4(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10001E4B8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_10001E540(uint64_t a1, uint64_t a2)
{
}

void *sub_10001E564(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1000853E0();
    uint64_t v4 = *(void *)(sub_100004BB0(&qword_1000A67A0) - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      swift_getAtKeyPath();
      sub_1000853B0();
      sub_1000853F0();
      sub_100085400();
      sub_1000853C0();
      v5 += v6;
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10001E684(uint64_t a1)
{
  unint64_t v20 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v2 = sub_100085290();
  }
  else {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  if (v2)
  {
    BOOL v25 = _swiftEmptyArrayStorage;
    sub_10006CBBC(0, v2 & ~(v2 >> 63), 0);
    if (v20)
    {
      uint64_t result = sub_100085240();
      char v5 = 1;
    }
    else
    {
      uint64_t result = sub_10001E4B8(a1);
      char v5 = v6 & 1;
    }
    uint64_t v22 = result;
    uint64_t v23 = v4;
    char v24 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      do
      {
        while (1)
        {
          int64_t v13 = v22;
          uint64_t v12 = v23;
          char v14 = v24;
          v21[4] = sub_100080700(v22, v23, v24, a1);
          swift_getAtKeyPath();
          swift_release();
          uint64_t v15 = v21[0];
          unint64_t v16 = v25;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_10006CBBC(0, v16[2] + 1, 1);
            unint64_t v16 = v25;
          }
          unint64_t v18 = v16[2];
          unint64_t v17 = v16[3];
          if (v18 >= v17 >> 1)
          {
            uint64_t result = (uint64_t)sub_10006CBBC((void *)(v17 > 1), v18 + 1, 1);
            unint64_t v16 = v25;
          }
          _OWORD v16[2] = v18 + 1;
          v16[v18 + 4] = v15;
          if (v20) {
            break;
          }
          int64_t v7 = sub_10001E3D4(v13, v12, v14, a1);
          uint64_t v9 = v8;
          char v11 = v10;
          sub_100022008(v13, v12, v14);
          uint64_t v22 = v7;
          uint64_t v23 = v9;
          char v24 = v11 & 1;
          if (!--v2) {
            goto LABEL_20;
          }
        }
        if ((v14 & 1) == 0) {
          goto LABEL_23;
        }
        if (sub_100085260()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100004BB0(&qword_1000A67E8);
        uint64_t v19 = (void (*)(void *, void))sub_100085080();
        sub_1000852D0();
        v19(v21, 0);
        --v2;
      }
      while (v2);
LABEL_20:
      sub_100022008(v22, v23, v24);
      return (uint64_t)v25;
    }
  }
  return result;
}

void sub_10001E8F8(uint64_t a1, uint64_t a2)
{
}

void sub_10001E91C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t *a5)
{
  a4(a3);
  sub_100004BB0(a5);
  sub_100084D20();
  id v6 = objc_allocWithZone((Class)CULogHandle);
  NSString v7 = sub_100084D00();
  NSString v8 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v9 = [v6 initWithSubsystem:v7 category:v8];

  NSString v10 = sub_100084D00();
  [v9 ulog:40 message:v10];
}

void sub_10001EA24(uint64_t a1, uint64_t a2)
{
}

void sub_10001EA38(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10001EA5C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_10001EA94()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100005D30;
  return sub_100018A50();
}

uint64_t type metadata accessor for MainHostViewController()
{
  return self;
}

uint64_t sub_10001EB68(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  NSString v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *NSString v7 = v2;
  v7[1] = sub_100005D30;
  return sub_10001A02C(a1, v4, v5, v6);
}

unint64_t sub_10001EC1C()
{
  unint64_t result = qword_1000A6568;
  if (!qword_1000A6568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000A6568);
  }
  return result;
}

void sub_10001EC70()
{
  sub_10002207C(0, (unint64_t *)&qword_1000A6818);
  sub_100004BB0(&qword_1000A6820);
  sub_100084D20();
  id v0 = objc_allocWithZone((Class)CULogHandle);
  NSString v1 = sub_100084D00();
  NSString v2 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v3 = [v0 initWithSubsystem:v1 category:v2];

  NSString v4 = sub_100084D00();
  [v3 ulog:40 message:v4];
}

void sub_10001ED84()
{
  sub_100004BB0(&qword_1000A6710);
  sub_100004BB0(&qword_1000A6798);
  sub_100084D20();
  id v0 = objc_allocWithZone((Class)CULogHandle);
  NSString v1 = sub_100084D00();
  NSString v2 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v3 = [v0 initWithSubsystem:v1 category:v2];

  NSString v4 = sub_100084D00();
  [v3 ulog:40 message:v4];
}

void sub_10001EE8C(uint64_t a1, uint64_t a2)
{
}

void sub_10001EEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_100004BB0(a4);
  sub_100084D20();
  id v4 = objc_allocWithZone((Class)CULogHandle);
  NSString v5 = sub_100084D00();
  NSString v6 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v7 = [v4 initWithSubsystem:v5 category:v6];

  NSString v8 = sub_100084D00();
  [v7 ulog:40 message:v8];
}

void sub_10001EF98(uint64_t a1, uint64_t a2)
{
}

void sub_10001EFBC(uint64_t a1, uint64_t a2)
{
}

char *sub_10001EFE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v3 = *(void *)(sub_100004BB0(&qword_1000A67A0) - 8);
  uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  NSString v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    swift_getAtKeyPath();
    if (v12)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        NSString v6 = sub_10006C4AC(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v9 = *((void *)v6 + 2);
      unint64_t v8 = *((void *)v6 + 3);
      if (v9 >= v8 >> 1) {
        NSString v6 = sub_10006C4AC((char *)(v8 > 1), v9 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v9 + 1;
      id v7 = &v6[16 * v9];
      *((void *)v7 + 4) = v11;
      *((void *)v7 + 5) = v12;
    }
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10001F158(uint64_t a1, uint64_t a2)
{
  uint64_t v139 = a2;
  uint64_t v109 = a1;
  uint64_t v128 = sub_100083EA0();
  uint64_t v129 = *(void *)(v128 - 8);
  uint64_t v3 = __chkstk_darwin(v128);
  v127 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v126 = (char *)&v107 - v5;
  uint64_t v121 = sub_100083E20();
  uint64_t v113 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  v120 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100004BB0(&qword_1000A67A0);
  uint64_t v107 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v112 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for ProfileListViewModel();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v111 = (uint64_t *)((char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100004BB0(&qword_1000A67A8);
  uint64_t v137 = *(void *)(v9 - 8);
  unint64_t v138 = v9;
  __chkstk_darwin(v9);
  v136 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100004BB0(&qword_1000A67B0);
  uint64_t v11 = __chkstk_darwin(v135);
  uint64_t v134 = (uint64_t)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v133 = (char *)&v107 - v13;
  uint64_t v132 = sub_100004BB0(&qword_1000A64E8);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  unint64_t v130 = (unint64_t)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100004BB0(&qword_1000A67B8);
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_100004BB0(&qword_1000A67C0);
  uint64_t v16 = __chkstk_darwin(v140);
  uint64_t v122 = (uint64_t)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v117 = (void (**)(char *, uint64_t))((char *)&v107 - v18);
  uint64_t v119 = sub_100004BB0(&qword_1000A67C8);
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  unint64_t v20 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004BB0(&qword_1000A67D0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  char v24 = (char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004BB0(&qword_1000A64D0);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v107 - v29;
  uint64_t v31 = v2 + qword_1000A8730;
  uint64_t v32 = sub_1000840F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v30, 1, 1, v32);
  sub_10000C724((uint64_t)v30, (uint64_t)v28, &qword_1000A64D0);
  sub_1000843E0();
  sub_10000C788((uint64_t)v30, &qword_1000A64D0);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v31, v24, v21);
  uint64_t v33 = v2;
  uint64_t v34 = v2 + qword_1000A8748;
  uint64_t v150 = 0;
  uint64_t v151 = 0;
  sub_100004BB0(&qword_1000A67D8);
  sub_1000843E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v118 + 32))(v34, v20, v119);
  uint64_t v35 = v2 + qword_1000A8750;
  uint64_t v36 = sub_100084000();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v118 = *(void *)(v37 + 56);
  uint64_t v119 = v37 + 56;
  uint64_t v38 = (uint64_t)v117;
  ((void (*)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))v118)(v117, 1, 1, v36);
  uint64_t v39 = v122;
  sub_10000C724(v38, v122, &qword_1000A67C0);
  uint64_t v40 = v123;
  sub_1000843E0();
  sub_10000C788(v38, &qword_1000A67C0);
  uint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v124 + 32);
  uint64_t v42 = v125;
  v41(v35, v40, v125);
  uint64_t v43 = v33 + qword_1000A8758;
  LOBYTE(v150) = 1;
  uint64_t v44 = (char *)v130;
  sub_1000843E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v131 + 32))(v43, v44, v132);
  uint64_t v45 = (void *)(v33 + qword_1000ABA58);
  *uint64_t v45 = 0;
  v45[1] = 0;
  uint64_t v46 = v33 + qword_1000A8760;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v118)(v38, 1, 1, v36);
  sub_10000C724(v38, v39, &qword_1000A67C0);
  sub_1000843E0();
  sub_10000C788(v38, &qword_1000A67C0);
  v41(v46, v40, v42);
  id v47 = (void *)(v33 + qword_1000ABA60);
  *id v47 = 0;
  v47[1] = 0;
  uint64_t v48 = v33 + qword_1000A8770;
  uint64_t v49 = sub_1000840C0();
  uint64_t v50 = (uint64_t)v133;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v133, 1, 1, v49);
  sub_10000C724(v50, v134, &qword_1000A67B0);
  uint64_t v51 = v136;
  sub_1000843E0();
  sub_10000C788(v50, &qword_1000A67B0);
  (*(void (**)(uint64_t, char *, unint64_t))(v137 + 32))(v48, v51, v138);
  uint64_t v52 = v109;
  *(void *)(v33 + qword_1000ABA68) = v109;
  *(void *)(v33 + qword_1000ABA70) = v139;
  uint64_t v53 = type metadata accessor for NetworkManager();
  uint64_t v143 = v53;
  uint64_t v54 = sub_100021D60(&qword_1000A6780, (void (*)(uint64_t))type metadata accessor for NetworkManager);
  uint64_t v144 = v54;
  swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v55 = sub_10001E564(v52);
  swift_release_n();
  uint64_t v108 = v33;
  *(void *)(v33 + qword_1000ABA78) = v55;
  uint64_t v141 = v53;
  uint64_t v142 = v54;
  swift_getKeyPath();
  swift_retain();
  sub_10001EFE0(v52);
  swift_release_n();
  uint64_t v56 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_1000809C0(v56);
  swift_bridgeObjectRelease();
  if (*(void *)(v57 + 16) == 1)
  {
    uint64_t v58 = sub_100075C80(v57);
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = (uint64_t)v112;
    uint64_t v62 = v111;
    if (v60) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = (uint64_t)v112;
    uint64_t v62 = v111;
  }
  swift_bridgeObjectRelease();
  uint64_t v58 = 0;
  unint64_t v60 = 0xE000000000000000;
LABEL_6:
  swift_beginAccess();
  v145 = (void *)v58;
  unint64_t v146 = v60;
  sub_1000843E0();
  uint64_t v63 = swift_endAccess();
  __chkstk_darwin(v63);
  *(&v107 - 2) = v53;
  *(&v107 - 1) = v54;
  swift_getKeyPath();
  swift_retain();
  sub_10001EFE0(v109);
  swift_release_n();
  uint64_t v64 = swift_bridgeObjectRetain();
  uint64_t v65 = sub_1000809C0(v64);
  swift_bridgeObjectRelease();
  if (*(void *)(v65 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v66 = 0;
    unint64_t v68 = 0xE000000000000000;
    goto LABEL_11;
  }
  uint64_t v66 = sub_100075C80(v65);
  unint64_t v68 = v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v68) {
    goto LABEL_10;
  }
LABEL_11:
  swift_beginAccess();
  v145 = (void *)v66;
  unint64_t v146 = v68;
  sub_1000843E0();
  swift_endAccess();
  uint64_t v69 = v109;
  int64_t v70 = *(void *)(v109 + 16);
  if (!v70)
  {
    swift_bridgeObjectRelease();
    uint64_t v102 = _swiftEmptyArrayStorage;
    goto LABEL_42;
  }
  v149 = _swiftEmptyArrayStorage;
  sub_10006CB80(0, v70, 0);
  uint64_t v71 = 0;
  uint64_t v119 = v69 + ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80));
  uint64_t v118 = *(void *)(v107 + 72);
  uint64_t v117 = (void (**)(char *, uint64_t))(v113 + 8);
  uint64_t v125 = v129 + 16;
  uint64_t v124 = v129 + 32;
  v123 = (char *)(v129 + 8);
  int64_t v110 = v70;
  while (1)
  {
    uint64_t v122 = v71;
    sub_10000C724(v119 + v118 * v71, v61, &qword_1000A67A0);
    uint64_t v72 = v120;
    sub_100084120();
    uint64_t v73 = sub_100083E10();
    (*v117)(v72, v121);
    uint64_t v74 = *(void *)(v73 + 16);
    if (v74) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v100 = _swiftEmptyArrayStorage;
LABEL_35:
    v62[3] = v116;
    v62[4] = (uint64_t)&off_1000A0500;
    v101 = sub_100021F40(v62);
    sub_10000C724(v61, (uint64_t)v101, &qword_1000A67A0);
    v62[5] = (uint64_t)v100;
    sub_100083D70();
    sub_10000C788(v61, &qword_1000A67A0);
    uint64_t v102 = v149;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10006CB80(0, v102[2] + 1, 1);
      uint64_t v102 = v149;
    }
    uint64_t v103 = v122;
    unint64_t v105 = v102[2];
    unint64_t v104 = v102[3];
    if (v105 >= v104 >> 1)
    {
      sub_10006CB80(v104 > 1, v105 + 1, 1);
      uint64_t v102 = v149;
    }
    uint64_t v71 = v103 + 1;
    v102[2] = v105 + 1;
    sub_100021FA4((uint64_t)v62, (uint64_t)v102+ ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))+ *(void *)(v114 + 72) * v105);
    if (v71 == v70)
    {
      swift_bridgeObjectRelease();
LABEL_42:
      uint64_t v106 = v108;
      swift_beginAccess();
      v145 = v102;
      sub_100004BB0(&qword_1000A67E0);
      sub_1000843E0();
      swift_endAccess();
      return v106;
    }
  }
  v148 = _swiftEmptyArrayStorage;
  sub_1000853E0();
  uint64_t result = sub_1000805D8(v73);
  uint64_t v77 = result;
  uint64_t v78 = 0;
  uint64_t v79 = v73 + 64;
  char v80 = *(unsigned char *)(v73 + 32);
  unint64_t v130 = v76;
  uint64_t v113 = v73 + 88;
  v133 = (char *)v73;
  uint64_t v132 = v74;
  uint64_t v131 = v73 + 64;
  while ((v77 & 0x8000000000000000) == 0 && v77 < 1 << v80)
  {
    unint64_t v82 = (unint64_t)v77 >> 6;
    if ((*(void *)(v79 + 8 * ((unint64_t)v77 >> 6)) & (1 << v77)) == 0) {
      goto LABEL_44;
    }
    if (*(_DWORD *)(v73 + 36) != v76) {
      goto LABEL_45;
    }
    uint64_t v135 = (uint64_t)v76;
    uint64_t v134 = v78;
    uint64_t v83 = v129;
    uint64_t v84 = *(void *)(v73 + 56) + *(void *)(v129 + 72) * v77;
    uint64_t v85 = v126;
    uint64_t v86 = v128;
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v126, v84, v128);
    Swift::String v87 = v127;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v127, v85, v86);
    uint64_t v88 = sub_100083E70();
    unint64_t v138 = v89;
    uint64_t v139 = v88;
    uint64_t v90 = sub_100083E60();
    v136 = v91;
    uint64_t v137 = v90;
    LODWORD(v140) = sub_100083E90();
    type metadata accessor for ProfileViewModel();
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel_delegate + 8) = 0;
    swift_unknownObjectWeakInit();
    swift_beginAccess();
    v145 = 0;
    unint64_t v146 = 0xE000000000000000;
    sub_1000843E0();
    swift_endAccess();
    swift_beginAccess();
    v145 = 0;
    unint64_t v146 = 0xE000000000000000;
    sub_1000843E0();
    swift_endAccess();
    swift_beginAccess();
    v145 = 0;
    unint64_t v146 = 0xE000000000000000;
    sub_1000843E0();
    swift_endAccess();
    uint64_t v93 = (uint64_t *)(v92 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel_profileID);
    uint64_t v94 = v136;
    *uint64_t v93 = v137;
    v93[1] = (uint64_t)v94;
    swift_beginAccess();
    v145 = (void *)v139;
    unint64_t v146 = v138;
    sub_1000843E0();
    swift_endAccess();
    swift_beginAccess();
    v145 = 0;
    unint64_t v146 = 0xE000000000000000;
    char v147 = v140 & 1;
    sub_1000843E0();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v87, v86);
    sub_1000853B0();
    sub_1000853F0();
    uint64_t v73 = (uint64_t)v133;
    sub_100085400();
    uint64_t result = sub_1000853C0();
    char v80 = *(unsigned char *)(v73 + 32);
    unint64_t v81 = 1 << v80;
    if (v77 >= 1 << v80) {
      goto LABEL_46;
    }
    uint64_t v79 = v131;
    uint64_t v95 = *(void *)(v131 + 8 * v82);
    if ((v95 & (1 << v77)) == 0) {
      goto LABEL_47;
    }
    if (*(_DWORD *)(v73 + 36) != v135) {
      goto LABEL_48;
    }
    unint64_t v96 = v95 & (-2 << (v77 & 0x3F));
    if (v96)
    {
      unint64_t v81 = __clz(__rbit64(v96)) | v77 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v97 = v82 + 1;
      unint64_t v98 = (v81 + 63) >> 6;
      if (v82 + 1 < v98)
      {
        unint64_t v99 = *(void *)(v131 + 8 * v97);
        if (!v99)
        {
          unint64_t v97 = v82 + 2;
          if (v82 + 2 >= v98) {
            goto LABEL_16;
          }
          unint64_t v99 = *(void *)(v131 + 8 * v97);
          if (!v99)
          {
            while (v98 - 3 != v82)
            {
              unint64_t v99 = *(void *)(v113 + 8 * v82++);
              if (v99)
              {
                unint64_t v97 = v82 + 2;
                goto LABEL_27;
              }
            }
            goto LABEL_16;
          }
        }
LABEL_27:
        unint64_t v81 = __clz(__rbit64(v99)) + (v97 << 6);
      }
    }
LABEL_16:
    uint64_t v78 = v134 + 1;
    uint64_t v76 = (char *)v130;
    uint64_t v77 = v81;
    if (v134 + 1 == v132)
    {
      uint64_t v100 = v148;
      swift_bridgeObjectRelease();
      uint64_t v61 = (uint64_t)v112;
      uint64_t v62 = v111;
      int64_t v70 = v110;
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_10002055C(uint64_t a1, uint64_t a2)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = *(void *)(sub_100004BB0(&qword_1000A67A0) - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = a1 + ((v7 + 32) & ~v7);
    uint64_t v9 = *(void *)(a2 + *(void *)(*(void *)a2 + 160));
    uint64_t v10 = *(void *)(v6 + 72);
    uint64_t v11 = (v7 + 32) & ~v7;
    swift_bridgeObjectRetain();
    do
    {
      sub_100004BB0(&qword_1000A67F8);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_100086D90;
      sub_10000C724(v8, v12 + v11, &qword_1000A67A0);
      sub_100004BB0(&qword_1000A6788);
      swift_allocObject();
      swift_retain();
      sub_10001F158(v12, v9);
      swift_release();
      sub_100084E60();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_100084ED0();
      }
      sub_100084F20();
      sub_100084EA0();
      v8 += v10;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100020740(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v28 = (unint64_t *)result;
  uint64_t v30 = 0;
  int64_t v6 = 0;
  uint64_t v32 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  uint64_t v35 = a4 & 0xFFFFFFFFFFFFFF8;
  int64_t v33 = (unint64_t)(v7 + 63) >> 6;
  unint64_t v34 = a4 & 0xC000000000000001;
LABEL_5:
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v6 << 6);
LABEL_18:
    uint64_t v15 = *(void *)(*(void *)(v5 + 48) + 8 * v11);
    if (a4 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1000854A0();
      if (v16) {
        goto LABEL_20;
      }
LABEL_4:
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)(v35 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v16) {
        goto LABEL_4;
      }
LABEL_20:
      unint64_t v36 = v9;
      if (v34)
      {
        uint64_t v17 = sub_100085380();
      }
      else
      {
        uint64_t v17 = *(void *)(a4 + 32);
        swift_retain();
      }
      uint64_t v18 = *(void *)(v15 + qword_1000ABA78);
      unsigned __int8 v19 = sub_10007D010(*(void *)(v17 + qword_1000ABA78), v18);
      uint64_t result = swift_release();
      if (v19)
      {
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v9 = v36;
LABEL_37:
        *(unint64_t *)((char *)v28 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v30++, 1);
        if (v12) {
          goto LABEL_52;
        }
      }
      else
      {
        if (v16 != 1)
        {
          unint64_t v31 = v11;
          if (v34)
          {
            uint64_t v20 = 1;
            while (1)
            {
              uint64_t result = sub_100085380();
              uint64_t v21 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                break;
              }
              unsigned __int8 v22 = sub_10007D010(*(void *)(result + qword_1000ABA78), v18);
              swift_unknownObjectRelease();
              if (v22) {
                goto LABEL_36;
              }
              ++v20;
              if (v21 == v16) {
                goto LABEL_35;
              }
            }
            __break(1u);
          }
          else
          {
            uint64_t v23 = 5;
            while (1)
            {
              uint64_t v24 = v23 - 3;
              if (__OFADD__(v23 - 4, 1)) {
                break;
              }
              unint64_t v25 = *(void *)(*(void *)(a4 + 8 * v23) + qword_1000ABA78);
              swift_retain();
              unsigned __int8 v26 = sub_10007D010(v25, v18);
              uint64_t result = swift_release();
              if (v26)
              {
LABEL_36:
                swift_release();
                uint64_t result = swift_bridgeObjectRelease();
                uint64_t v5 = a3;
                unint64_t v9 = v36;
                unint64_t v11 = v31;
                goto LABEL_37;
              }
              ++v23;
              if (v24 == v16)
              {
LABEL_35:
                swift_release();
                uint64_t result = swift_bridgeObjectRelease();
                uint64_t v5 = a3;
                unint64_t v9 = v36;
                goto LABEL_5;
              }
            }
          }
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v9 = v36;
      }
    }
  }
  BOOL v12 = __OFADD__(v6++, 1);
  if (v12) {
    goto LABEL_51;
  }
  if (v6 >= v33)
  {
LABEL_48:
    swift_retain();
    return sub_10001DF6C(v28, a2, v30, v5);
  }
  unint64_t v13 = *(void *)(v32 + 8 * v6);
  if (v13)
  {
LABEL_17:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v6 + 1;
  if (v6 + 1 >= v33) {
    goto LABEL_48;
  }
  unint64_t v13 = *(void *)(v32 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v6 + 2;
  if (v6 + 2 >= v33) {
    goto LABEL_48;
  }
  unint64_t v13 = *(void *)(v32 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v6 + 3;
  if (v6 + 3 >= v33) {
    goto LABEL_48;
  }
  unint64_t v13 = *(void *)(v32 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v6 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v33) {
      goto LABEL_48;
    }
    unint64_t v13 = *(void *)(v32 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_100020B10(uint64_t a1, unint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100020740((uint64_t)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100020740((uint64_t)v11, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_100020CDC(uint64_t a1, unint64_t a2)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_100020B10(a1, a2);
  }
  swift_bridgeObjectRetain();
  sub_100085250();
  if (!sub_1000852C0())
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  unint64_t v24 = a2 & 0xC000000000000001;
  while (1)
  {
    sub_100004BB0(&qword_1000A6788);
    swift_dynamicCast();
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1000854A0();
      if (!v9) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_14;
      }
    }
    if (v24)
    {
      uint64_t v10 = sub_100085380();
    }
    else
    {
      uint64_t v10 = *(void *)(a2 + 32);
      swift_retain();
    }
    uint64_t v11 = *(void *)(v25 + qword_1000ABA78);
    unsigned __int8 v12 = sub_10007D010(*(void *)(v10 + qword_1000ABA78), v11);
    uint64_t result = swift_release();
    if (v12)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      if (*((void *)&_swiftEmptySetSingleton + 3) <= *((void *)&_swiftEmptySetSingleton + 2)) {
        sub_10007E260();
      }
      sub_100085630();
      sub_100085640(v25);
      uint64_t result = sub_100085650();
      uint64_t v4 = (char *)&_swiftEmptySetSingleton + 56;
      uint64_t v5 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
      unint64_t v6 = result & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1 << v6) & ~*((void *)&_swiftEmptySetSingleton + (v6 >> 6) + 7)) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*((void *)&_swiftEmptySetSingleton + (v6 >> 6) + 7))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v16 = 0;
        unint64_t v17 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v17 && (v16 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v18 = v7 == v17;
          if (v7 == v17) {
            unint64_t v7 = 0;
          }
          v16 |= v18;
          uint64_t v19 = *(void *)&v4[8 * v7];
        }
        while (v19 == -1);
        unint64_t v8 = __clz(__rbit64(~v19)) + (v7 << 6);
      }
      *(void *)&v4[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
      *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v8) = v25;
      ++*((void *)&_swiftEmptySetSingleton + 2);
      goto LABEL_7;
    }
    if (v9 != 1) {
      break;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
LABEL_7:
    if (!sub_1000852C0()) {
      goto LABEL_40;
    }
  }
  if (v24)
  {
    uint64_t v13 = 1;
    while (1)
    {
      uint64_t result = sub_100085380();
      uint64_t v14 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      unsigned __int8 v15 = sub_10007D010(*(void *)(result + qword_1000ABA78), v11);
      swift_unknownObjectRelease();
      if (v15) {
        goto LABEL_34;
      }
      ++v13;
      if (v14 == v9) {
        goto LABEL_14;
      }
    }
LABEL_41:
    __break(1u);
  }
  else
  {
    uint64_t v20 = 5;
    while (1)
    {
      uint64_t v21 = v20 - 3;
      if (__OFADD__(v20 - 4, 1)) {
        break;
      }
      unint64_t v22 = *(void *)(*(void *)(a2 + 8 * v20) + qword_1000ABA78);
      swift_retain();
      unsigned __int8 v23 = sub_10007D010(v22, v11);
      uint64_t result = swift_release();
      if (v23) {
        goto LABEL_34;
      }
      ++v20;
      if (v21 == v9) {
        goto LABEL_14;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100021094()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000210D4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_100005D30;
  return sub_10001BAB4(a1, v4, v5, v6);
}

uint64_t type metadata accessor for MainHostViewController.BetaEnrollmentContentViewController(uint64_t a1)
{
  return sub_1000211DC(a1, (uint64_t *)&unk_1000A65B0);
}

uint64_t sub_1000211A8()
{
  return sub_100021220();
}

uint64_t sub_1000211B4()
{
  return type metadata accessor for MainHostViewController.BetaEnrollmentContentViewController(0);
}

uint64_t type metadata accessor for MainHostViewController.CarrySettingsContentViewController(uint64_t a1)
{
  return sub_1000211DC(a1, (uint64_t *)&unk_1000A6600);
}

uint64_t sub_1000211DC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100021214()
{
  return sub_100021220();
}

uint64_t sub_100021220()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10002125C()
{
  return type metadata accessor for MainHostViewController.CarrySettingsContentViewController(0);
}

uint64_t getEnumTagSinglePayload for MainHostViewController.HostError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MainHostViewController.HostError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000213C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MainHostViewController.HostError()
{
  return &type metadata for MainHostViewController.HostError;
}

uint64_t sub_1000213F8(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005D30;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000A6658 + dword_1000A6658);
  return v6(a1, v4);
}

uint64_t sub_1000214B4()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100005D30;
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1000A6698 + dword_1000A6698);
  return v6(v2, v3, v4);
}

uint64_t sub_100021568()
{
  return sub_100021AA4((void (*)(void))&_swift_release);
}

uint64_t sub_100021580()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100005D30;
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1000A7088 + dword_1000A7088);
  return v6(v2, v3, v4);
}

uint64_t sub_100021640()
{
  return sub_100021AA4((void (*)(void))&_swift_release);
}

uint64_t sub_100021658(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unsigned int v6 = (int *)v1[4];
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *BOOL v7 = v2;
  v7[1] = sub_100005D30;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1000A7098 + dword_1000A7098);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_100021728()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unsigned int v6 = v1;
  v6[1] = sub_100005D30;
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000A66A8 + dword_1000A66A8);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1000217E8()
{
  return sub_100021AA4((void (*)(void))&_swift_release);
}

uint64_t sub_100021800()
{
  return sub_100021AA4((void (*)(void))&_swift_release);
}

uint64_t sub_10002181C()
{
  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_100021864()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100005D30;
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1000A66C8 + dword_1000A66C8);
  return v6(v2, v3, v4);
}

uint64_t sub_100021918()
{
  return sub_100021AA4((void (*)(void))&_swift_release);
}

uint64_t sub_100021930()
{
  return sub_100021AA4((void (*)(void))&_swift_release);
}

uint64_t sub_10002194C()
{
  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_10002199C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unsigned int v6 = v1;
  v6[1] = sub_100005D30;
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000A66E8 + dword_1000A66E8);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_100021A5C()
{
  return sub_100021AA4((void (*)(void))&_swift_release);
}

uint64_t sub_100021A74()
{
  return sub_100021AA4((void (*)(void))&_swift_release);
}

uint64_t sub_100021A8C()
{
  return sub_100021AA4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100021AA4(void (*a1)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_100021AF4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1000052B8;
  return sub_10001D850(a1, v4, v5, v7, v6);
}

uint64_t sub_100021BB4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_100021BEC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100021C34(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000052B8;
  return sub_100016CE4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100021CFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100021D34(uint64_t *a1)
{
  return sub_1000173FC(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100021D48()
{
  return 16;
}

__n128 sub_100021D54(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021D60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100021DB0()
{
  return 16;
}

__n128 sub_100021DBC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021DD0()
{
  return 16;
}

__n128 sub_100021DDC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021DF0()
{
  return 16;
}

__n128 sub_100021DFC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021E10()
{
  return 16;
}

__n128 sub_100021E1C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021E30()
{
  return 16;
}

__n128 sub_100021E3C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021E50()
{
  return 16;
}

__n128 sub_100021E5C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021E70()
{
  return 16;
}

__n128 sub_100021E7C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021E90()
{
  return 16;
}

__n128 sub_100021E9C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021EB0()
{
  return 16;
}

__n128 sub_100021EBC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021ECC()
{
  return 16;
}

__n128 sub_100021ED8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021EEC()
{
  return 16;
}

__n128 sub_100021EF8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021F0C()
{
  return 16;
}

__n128 sub_100021F18(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100021F28()
{
  return 16;
}

__n128 sub_100021F34(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t *sub_100021F40(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100021FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ProfileListViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100022008(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100022014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A67A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002207C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1000220B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1000220F0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005D30;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000A8288 + dword_1000A8288);
  return v6(a1, v4);
}

uint64_t sub_1000221BC()
{
  type metadata accessor for BetaSettingsRowViewModel();
  sub_100084F60();
  uint64_t result = sub_100084420();
  if (v1 <= 0x3F)
  {
    sub_100085200();
    uint64_t result = sub_100084420();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

void sub_1000222D0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100022338()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000223EC()
{
  return sub_100084410();
}

uint64_t sub_1000224A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100022558()
{
  return sub_100084410();
}

uint64_t sub_100022610()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  type metadata accessor for BetaSettingsRowViewModel();
  sub_100084F60();
  uint64_t v2 = sub_100084420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 104);
  sub_100085200();
  uint64_t v4 = sub_100084420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100022768()
{
  sub_100022610();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t type metadata accessor for BetaSettingsViewModel()
{
  return sub_10000C880();
}

uint64_t sub_1000227D8()
{
  if (sub_1000224A4()
    && (type metadata accessor for BetaSettingsRowViewModel(),
        sub_100084F60(),
        swift_getWitnessTable(),
        sub_100085150(),
        swift_bridgeObjectRelease(),
        v5))
  {
    uint64_t v0 = sub_100027FDC();
    swift_release();
  }
  else
  {
    uint64_t v1 = (objc_class *)[self mainBundle];
    v4._countAndFlagsBits = 0x800000010008A9A0;
    v6._object = (void *)0x800000010008A980;
    v6._countAndFlagsBits = 0xD000000000000014;
    v7.value._countAndFlagsBits = 0;
    v7.value._object = 0;
    v2.super.Class isa = v1;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    uint64_t v0 = sub_100083CE0(v6, v7, v2, v8, v4);
  }
  return v0;
}

uint64_t sub_10002293C()
{
  v1[3] = v0;
  v1[4] = *v0;
  v1[5] = *v0;
  sub_100084FC0();
  v1[6] = sub_100084FB0();
  uint64_t v3 = sub_100084FA0();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_100022A24, v3, v2);
}

uint64_t sub_100022A24()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  sub_100059088(0x68736572666552, 0xE700000000000000, v0[4], (uint64_t)&off_10009F980);
  v0[9] = *(void *)(v2 + *(void *)(*(void *)v2 + 128));
  uint64_t v3 = *(void *)(v1 + 88);
  v0[10] = v3;
  Swift::String v4 = *(int **)(v3 + 48);
  uint64_t v5 = *(void *)(v1 + 80);
  v0[11] = v5;
  Swift::String v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  Swift::String v6 = (void *)swift_task_alloc();
  v0[12] = v6;
  *Swift::String v6 = v0;
  v6[1] = sub_100022B64;
  return v8(v5, v3);
}

uint64_t sub_100022B64()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_100024EC4;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_100022C88;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100022C88()
{
  uint64_t v1 = sub_1000224A4();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_release();
    if (!sub_1000224A4())
    {
      type metadata accessor for BetaSettingsRowViewModel();
      sub_100084EF0();
    }
    sub_1000223EC();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[10] + 40) + **(int **)(v0[10] + 40));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100022DE8;
    uint64_t v5 = v0[10];
    uint64_t v6 = v0[11];
    return v7(v6, v5);
  }
}

uint64_t sub_100022DE8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[7];
    uint64_t v6 = v4[8];
    uint64_t v7 = sub_1000230A4;
  }
  else
  {
    v4[15] = a1;
    uint64_t v5 = v4[7];
    uint64_t v6 = v4[8];
    uint64_t v7 = sub_100022F10;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100022F10()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[4];
  swift_release();
  type metadata accessor for BetaSettingsRowViewModel();
  sub_100025D40(v1, v2);
  v0[2] = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s14descr10009DEF9O11DeviceModelVMa();
  sub_100084F60();
  swift_getWitnessTable();
  sub_100085560();
  swift_bridgeObjectRelease();
  sub_100059088(0, 0xE000000000000000, v3, (uint64_t)&off_10009F980);
  swift_bridgeObjectRelease();
  sub_1000223EC();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1000230A4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100023108()
{
  return sub_100023158(0x61206C6C6F726E45);
}

uint64_t sub_100023130()
{
  return sub_100023158(0x612065766F6D6552);
}

uint64_t sub_100023158(uint64_t a1)
{
  sub_100059088(a1, 0xEA00000000006C6CLL, *v1, (uint64_t)&off_10009F980);
  sub_100022338();
  type metadata accessor for BetaSettingsRowViewModel();
  sub_100084F60();
  swift_getWitnessTable();
  sub_100084E20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100023258(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 112) = a1;
  *(void *)(v2 + 24) = *v1;
  *(void *)(v2 + 32) = *v1;
  sub_100084FC0();
  *(void *)(v2 + 40) = sub_100084FB0();
  uint64_t v4 = sub_100084FA0();
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = v3;
  return _swift_task_switch(sub_100023344, v4, v3);
}

uint64_t sub_100023344()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 16);
  int v4 = *(unsigned __int8 *)(v0 + 112);
  strcpy((char *)v17, "Set isActive=");
  HIWORD(v17[1]) = -4864;
  if (v4) {
    v5._countAndFlagsBits = 1702195828;
  }
  else {
    v5._countAndFlagsBits = 0x65736C6166;
  }
  if (v4) {
    uint64_t v6 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v6 = (void *)0xE500000000000000;
  }
  v5._object = v6;
  sub_100084D60(v5);
  swift_bridgeObjectRelease();
  sub_100059088(v17[0], v17[1], v1, (uint64_t)&off_10009F980);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v3 + *(void *)(*(void *)v3 + 120)) = v4;
  *(void *)(v0 + 64) = *(void *)(v3 + *(void *)(*(void *)v3 + 128));
  uint64_t v7 = *(void *)(v2 + 88);
  *(void *)(v0 + 72) = v7;
  uint64_t v8 = *(void *)(v2 + 80);
  *(void *)(v0 + 80) = v8;
  if (v4 == 1)
  {
    unsigned __int8 v15 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v7 + 48) + **(int **)(v7 + 48));
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100023610;
    return v15(v8, v7);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 24);
    char v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 56)
                                                                              + **(int **)(v7 + 56));
    unsigned __int8 v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v12;
    uint64_t WitnessTable = swift_getWitnessTable();
    *unsigned __int8 v12 = v0;
    v12[1] = sub_1000238FC;
    uint64_t v14 = *(void *)(v0 + 16);
    return v16(v14, v11, WitnessTable, v8, v7);
  }
}

uint64_t sub_100023610()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  uint64_t v4 = v2[3];
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2[9] + 32)
                                                                            + **(int **)(v2[9] + 32));
  Swift::String v5 = (void *)swift_task_alloc();
  v2[12] = v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  *Swift::String v5 = v3;
  v5[1] = sub_1000237DC;
  uint64_t v8 = v2[9];
  uint64_t v7 = v2[10];
  uint64_t v9 = v2[2];
  return v11(v9, v4, WitnessTable, v7, v8);
}

uint64_t sub_1000237DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10000A668, v3, v2);
}

uint64_t sub_1000238FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10000CC4C, v3, v2);
}

uint64_t sub_100023A24()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000052B8;
  return sub_10002293C();
}

uint64_t sub_100023AB0()
{
  return sub_100023158(0x61206C6C6F726E45);
}

uint64_t sub_100023AEC()
{
  return sub_100023158(0x612065766F6D6552);
}

uint64_t sub_100023B28(char a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005D30;
  return sub_100023258(a1);
}

uint64_t sub_100023BBC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  sub_100004BB0(&qword_1000A7070);
  v3[6] = swift_task_alloc();
  return _swift_task_switch(sub_100023C7C, 0, 0);
}

uint64_t sub_100023C7C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[2];
  uint64_t v5 = sub_100084FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v1, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  sub_100084FC0();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100084FB0();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = *(void *)(v2 + 80);
  v8[5] = v3;
  v8[6] = *(void *)(v2 + 88);
  v8[7] = v6;
  v8[8] = v4;
  swift_release();
  sub_1000159AC(v1, (uint64_t)&unk_1000A69B8, (uint64_t)v8);
  swift_release();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100023DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a5;
  v7[8] = a7;
  v7[5] = a1;
  v7[6] = a4;
  sub_100084FC0();
  v7[9] = sub_100084FB0();
  uint64_t v9 = sub_100084FA0();
  v7[10] = v9;
  v7[11] = v8;
  return _swift_task_switch(sub_100023E88, v9, v8);
}

uint64_t sub_100023E88()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100023F98;
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    return sub_100024150(v4, v3);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 96) == 0;
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100023F98()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1000240DC, v3, v2);
}

uint64_t sub_1000240DC()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 96) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100024150(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = *v2;
  v3[7] = *v2;
  sub_100084FC0();
  v3[8] = sub_100084FB0();
  uint64_t v5 = sub_100084FA0();
  return _swift_task_switch(sub_10002423C, v5, v4);
}

uint64_t sub_10002423C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  swift_release();
  sub_100085340(18);
  v7._object = (void *)0x800000010008A9D0;
  v7._countAndFlagsBits = 0xD000000000000010;
  sub_100084D60(v7);
  v0[2] = v3;
  swift_getAssociatedConformanceWitness();
  _s14descr10009DEF9O11DeviceModelVMa();
  sub_100084F60();
  swift_getWitnessTable();
  sub_100085560();
  sub_100059088(0, 0xE000000000000000, v2, (uint64_t)&off_10009F980);
  swift_bridgeObjectRelease();
  type metadata accessor for BetaSettingsRowViewModel();
  sub_100025D40(v3, *(void *)(v1 + *(void *)(*(void *)v1 + 128)));
  sub_1000223EC();
  sub_1000243E0(2.5);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1000243E0(double a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 112);
  uint64_t v5 = *(void **)((char *)v1 + v4);
  if (v5) {
    [v5 invalidate];
  }
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = *(void *)(v3 + 80);
  v8[3] = *(void *)(v3 + 88);
  v8[4] = v7;
  v12[4] = sub_100024E60;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_1000222D0;
  v12[3] = &unk_10009FA30;
  uint64_t v9 = _Block_copy(v12);
  swift_release();
  id v10 = [v6 scheduledTimerWithTimeInterval:0 repeats:v9 block:a1];
  _Block_release(v9);
  uint64_t v11 = *(void **)((char *)v1 + v4);
  *(uint64_t *)((char *)v1 + v4) = (uint64_t)v10;
}

uint64_t sub_100024574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  v19[0] = sub_100022338();
  __chkstk_darwin(v19[0]);
  type metadata accessor for BetaSettingsRowViewModel();
  uint64_t v6 = sub_100084F60();
  swift_getWitnessTable();
  uint64_t v7 = sub_1000853A0();
  if (!sub_100084F50()) {
    goto LABEL_15;
  }
  uint64_t v8 = 4;
  uint64_t v17 = v6;
  while (1)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v8 - 4;
    BOOL v11 = sub_100084F10();
    sub_100084EC0();
    if (!v11) {
      break;
    }
    uint64_t v12 = *(void *)(v7 + 8 * v8);
    swift_retain();
    uint64_t v13 = v8 - 3;
    if (__OFADD__(v10, 1)) {
      goto LABEL_14;
    }
LABEL_8:
    v19[0] = sub_100022338();
    uint64_t v6 = v9;
    sub_1000853A0();
    sub_1000223EC();
    if (*(void *)(v12 + 16) && (v20 = *(void *)(v12 + 16), swift_getWitnessTable(), uint64_t v14 = sub_100085150(), v19[0]))
    {
      uint64_t v20 = v19[0];
      __chkstk_darwin(v14);
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      uint64_t v16 = a4;
      swift_getKeyPath();
      swift_retain();
      unsigned __int8 v15 = (void (*)(uint64_t *, void))sub_1000843F0();
      sub_100084F40();
      v15(v19, 0);
      a4 = v16;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v6 = v17;
    }
    else
    {
      swift_release();
    }
    ++v8;
    if (v13 == sub_100084F50()) {
      goto LABEL_15;
    }
  }
  uint64_t v12 = sub_100085370();
  uint64_t v13 = v8 - 3;
  if (!__OFADD__(v10, 1)) {
    goto LABEL_8;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  swift_release();
  return swift_bridgeObjectRelease();
}

BOOL sub_1000248F8(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(*(void *)a1 + 40);
  BOOL v2 = v1 != 2 && (v1 & 1) == 0;
  if (!v2 || !*(void *)(*(void *)a1 + 16)) {
    return 0;
  }
  type metadata accessor for BetaSettingsRowViewModel();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_100084F30();
  swift_bridgeObjectRelease();
  return v3 == 1;
}

BOOL sub_10002497C()
{
  type metadata accessor for BetaSettingsRowViewModel();
  swift_getWitnessTable();
  uint64_t v0 = sub_100085360();
  return v0 != sub_100085360();
}

uint64_t sub_100024A38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005D30;
  return sub_100023BBC(a1, a2);
}

uint64_t sub_100024ADC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_100024AF8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100024B34()
{
  return swift_getWitnessTable();
}

uint64_t sub_100024B50(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_100024B58(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100024B94()
{
  return sub_1000268AC();
}

uint64_t sub_100024BC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100022338();
  *a1 = result;
  return result;
}

uint64_t sub_100024BEC()
{
  return sub_1000223EC();
}

uint64_t sub_100024C18()
{
  return 16;
}

__n128 sub_100024C24(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100024C30()
{
  return sub_100026738();
}

uint64_t sub_100024C5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000224A4();
  *a1 = result;
  return result;
}

uint64_t sub_100024C88()
{
  return sub_100022558();
}

uint64_t sub_100024CB4()
{
  return 16;
}

__n128 sub_100024CC0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100024CCC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_100024D04()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_100024D4C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000052B8;
  return sub_100023DEC(a1, v6, v7, v8, v9, v4, v5);
}

uint64_t sub_100024E28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100024E60(uint64_t a1)
{
  return sub_100024574(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_100024E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100024E7C()
{
  return swift_release();
}

BOOL sub_100024E84(uint64_t a1)
{
  return sub_1000248F8(a1);
}

BOOL sub_100024EA4()
{
  return sub_10002497C();
}

Swift::Void __swiftcall UIViewController.wrap(subViewController:)(UIViewController subViewController)
{
  id v3 = [(objc_class *)subViewController.super.super.isa view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  [v3 removeFromSuperview];

  [(objc_class *)subViewController.super.super.isa removeFromParentViewController];
  [(objc_class *)subViewController.super.super.isa willMoveToParentViewController:v1];
  [v1 addChildViewController:subViewController.super.super.isa];
  id v5 = [(objc_class *)subViewController.super.super.isa view];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v1 view];
    if (v7)
    {
      uint64_t v8 = v7;
      objc_msgSend(v7, "addSubviewToBounds:with:", v6, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

      id v9 = [self systemGroupedBackgroundColor];
      [v6 setBackgroundColor:v9];

      goto LABEL_5;
    }
LABEL_9:
    __break(1u);
    return;
  }
LABEL_5:
  [(objc_class *)subViewController.super.super.isa didMoveToParentViewController:v1];
}

uint64_t destroy for ProfileSheetView()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ProfileSheetView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProfileSheetView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ProfileSheetView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProfileSheetView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProfileSheetView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProfileSheetView()
{
  return &type metadata for ProfileSheetView;
}

uint64_t sub_100025294()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000252B0@<X0>(ValueMetadata *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v24 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v30 = a5;
  uint64_t v6 = sub_100004BB0(&qword_1000A6140);
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  __chkstk_darwin(v6);
  uint64_t v29 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100084680();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_100004BB0(&qword_1000A69D0);
  uint64_t v27 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  __chkstk_darwin(v12);
  int64_t v33 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v34 = a1;
  uint64_t v14 = qword_1000A5DE8;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v11, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v8);
  unint64_t v15 = sub_1000258A4();
  sub_100084950();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  if (qword_1000A5D20 != -1) {
    swift_once();
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  uint64_t v17 = v26;
  *(void *)(v16 + 24) = v25;
  *(void *)(v16 + 32) = v17;
  *(unsigned char *)(v16 + 40) = v24 & 1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v29;
  sub_100084AA0();
  unint64_t v34 = &type metadata for ProfileListView;
  unint64_t v35 = v15;
  swift_getOpaqueTypeConformance2();
  sub_10000C360(&qword_1000A69E0, &qword_1000A6140);
  uint64_t v19 = v28;
  uint64_t v21 = v32;
  uint64_t v20 = v33;
  sub_100084940();
  (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v18, v21);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v27 + 8))(v20, v19);
}

uint64_t sub_1000256BC()
{
  return swift_release();
}

uint64_t sub_100025768()
{
  return sub_1000844E0();
}

uint64_t sub_100025894@<X0>(uint64_t a1@<X8>)
{
  return sub_1000252B0(*(ValueMetadata **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

unint64_t sub_1000258A4()
{
  unint64_t result = qword_1000A69D8;
  if (!qword_1000A69D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A69D8);
  }
  return result;
}

uint64_t sub_1000258F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100025940()
{
  return sub_1000256BC();
}

uint64_t sub_100025950()
{
  return sub_10000C360(&qword_1000A69F0, qword_1000A69F8);
}

uint64_t sub_10002598C(uint64_t a1, uint64_t a2)
{
  if ((*(uint64_t (**)(void))(a2 + 72))())
  {
    swift_getAssociatedTypeWitness();
    sub_100084F60();
    swift_getWitnessTable();
    char v2 = sub_100085160();
    swift_bridgeObjectRelease();
    char v3 = v2 ^ 1;
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_100025A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100084360();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 88))(a1, a2);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for BetaEnrollment.State.notEnrolled(_:)) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  }
  if (v8 == enum case for BetaEnrollment.State.enrolled(_:)) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 120))(a1, a2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_100025BC8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s14descr10009DEF9O11DeviceModelVMa();
  sub_100085200();
  sub_100084420();
  if (v0 <= 0x3F)
  {
    sub_100028EE8();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t sub_100025D40(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 80);
  uint64_t v5 = *(void *)(v2 + 88);
  swift_getAssociatedTypeWitness();
  uint64_t v7 = v6;
  swift_getAssociatedConformanceWitness();
  v54[0] = _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v57 = sub_100085200();
  int64_t v68 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v63 = (char *)v54 - v8;
  v85[0] = 0;
  v85[1] = 0xE000000000000000;
  sub_100085340(36);
  v87._countAndFlagsBits = 0xD000000000000015;
  v87._object = (void *)0x800000010008AB30;
  sub_100084D60(v87);
  *(void *)&v84[0] = a1;
  uint64_t v9 = a1;
  uint64_t v10 = sub_100084F60();
  swift_getWitnessTable();
  sub_100085560();
  v88._countAndFlagsBits = 0x726F7774656E202CLL;
  v88._object = (void *)0xEB00000000203A6BLL;
  sub_100084D60(v88);
  *(void *)&v84[0] = a2;
  sub_100085550();
  uint64_t v11 = v85[0];
  uint64_t v12 = v85[1];
  uint64_t v58 = type metadata accessor for BetaSettingsRowViewModel();
  sub_100058E34(v11, v12, v58, (uint64_t)&off_10009FC60);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_100042398(v9);
  uint64_t v67 = v14;
  v85[0] = v14;
  v75[2] = v7;
  v75[3] = v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v69 = sub_100012810((void (*)(char *, char *))sub_10002F05C, (uint64_t)v75, v10, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v15);
  uint64_t v64 = v13;
  v85[0] = v13;
  sub_100084C80();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  v85[0] = sub_100084F80();
  v74[2] = v7;
  void v74[3] = v5;
  uint64_t v16 = sub_100084F60();
  uint64_t v17 = swift_getWitnessTable();
  sub_100012810((void (*)(char *, char *))sub_10002F07C, (uint64_t)v74, v16, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, v17, (uint64_t)&protocol witness table for Never, v18);
  uint64_t v70 = 0;
  swift_bridgeObjectRelease();
  v85[0] = 0;
  v85[1] = 0xE000000000000000;
  sub_100085340(32);
  swift_bridgeObjectRelease();
  strcpy((char *)v85, "Found solos: ");
  HIWORD(v85[1]) = -4864;
  v89._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v89);
  uint64_t v19 = v58;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v90._countAndFlagsBits = 0x756C6320646E6120;
  v90._object = (void *)0xEF203A7372657473;
  sub_100084D60(v90);
  v91._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v91);
  uint64_t v20 = v54[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100058E34(v85[0], v85[1], v19, (uint64_t)&off_10009FC60);
  swift_bridgeObjectRelease();
  v85[0] = v67;
  uint64_t v71 = v7;
  uint64_t v72 = v5;
  uint64_t v73 = a2;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v69 = v10;
  uint64_t v61 = v21;
  uint64_t v22 = v70;
  uint64_t v23 = sub_100084DE0();
  uint64_t v70 = v22;
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v25 = 0;
  uint64_t v86 = v23;
  uint64_t v26 = *(void *)(v64 + 64);
  uint64_t v55 = v64 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v64 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v59 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v60 = v20 - 8;
  uint64_t v56 = (void (**)(char *, uint64_t))(v68 + 8);
  while (1)
  {
    if (v29)
    {
      uint64_t v67 = (v29 - 1) & v29;
      unint64_t v32 = __clz(__rbit64(v29)) | (v25 << 6);
      int64_t v33 = v63;
      goto LABEL_17;
    }
    BOOL v34 = __OFADD__(v25++, 1);
    int64_t v33 = v63;
    if (v34)
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v25 >= v59) {
      goto LABEL_34;
    }
    unint64_t v35 = *(void *)(v55 + 8 * v25);
    if (!v35) {
      break;
    }
LABEL_16:
    uint64_t v67 = (v35 - 1) & v35;
    unint64_t v32 = __clz(__rbit64(v35)) + (v25 << 6);
LABEL_17:
    uint64_t v37 = *(void *)(*(void *)(v64 + 56) + 8 * v32);
    v85[0] = v37;
    swift_bridgeObjectRetain();
    sub_100085150();
    uint64_t v38 = *(void *)(v20 - 8);
    int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v33, 1, v20);
    int64_t v68 = v25;
    if (v39 == 1)
    {
      (*v56)(v33, v57);
      sub_10002F0BC(v84);
LABEL_19:
      uint64_t v40 = sub_10002F0D4((uint64_t)v84, (uint64_t)v85);
      uint64_t v65 = 0x646F50656D6F48;
      uint64_t v66 = 0xE700000000000000;
      goto LABEL_29;
    }
    uint64_t v41 = &v33[*(int *)(v20 + 40)];
    long long v42 = *((_OWORD *)v41 + 5);
    long long v80 = *((_OWORD *)v41 + 4);
    long long v81 = v42;
    long long v43 = *((_OWORD *)v41 + 7);
    long long v82 = *((_OWORD *)v41 + 6);
    long long v83 = v43;
    long long v44 = *((_OWORD *)v41 + 1);
    long long v76 = *(_OWORD *)v41;
    long long v77 = v44;
    long long v45 = *((_OWORD *)v41 + 3);
    long long v78 = *((_OWORD *)v41 + 2);
    long long v79 = v45;
    sub_10002F2DC((uint64_t *)&v76);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v33, v20);
    v84[4] = v80;
    v84[5] = v81;
    v84[6] = v82;
    v84[7] = v83;
    v84[0] = v76;
    v84[1] = v77;
    v84[2] = v78;
    v84[3] = v79;
    nullsub_1(v84);
    if (*((void *)&v80 + 1))
    {
      uint64_t v46 = *((void *)&v81 + 1);
      uint64_t v47 = v81;
    }
    else
    {
      if (!*((void *)&v76 + 1)) {
        goto LABEL_19;
      }
      uint64_t v46 = *((void *)&v77 + 1);
      uint64_t v47 = v77;
    }
    uint64_t v65 = v47;
    uint64_t v66 = v46;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10002F0D4((uint64_t)v84, (uint64_t)v85);
LABEL_29:
    uint64_t v48 = v70;
    *(void *)&v84[0] = v37;
    __chkstk_darwin(v40);
    v54[-4] = v7;
    v54[-3] = v5;
    v54[-2] = a2;
    uint64_t v49 = sub_100084DE0();
    uint64_t v70 = v48;
    swift_bridgeObjectRelease();
    sub_10002F0D4((uint64_t)v85, (uint64_t)v84);
    if (sub_10002F13C((uint64_t)v84) == 1)
    {
      char v30 = 0;
    }
    else
    {
      long long v50 = v84[0];
      sub_10002F154(*(uint64_t *)&v84[0], *((uint64_t *)&v84[0] + 1));
      sub_10002F198(v85);
      if (*((void *)&v50 + 1))
      {
        sub_10002F298(v50, *((uint64_t *)&v50 + 1));
        char v30 = 1;
      }
      else
      {
        char v30 = 0;
      }
      uint64_t v19 = v58;
    }
    unint64_t v29 = v67;
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectRetain();
    sub_10002868C(v30, v65, v66, v49, a2);
    *(void *)&long long v76 = v31;
    sub_100084F60();
    uint64_t result = sub_100084F40();
    int64_t v25 = v68;
  }
  int64_t v36 = v25 + 1;
  if (v25 + 1 >= v59) {
    goto LABEL_34;
  }
  unint64_t v35 = *(void *)(v55 + 8 * v36);
  if (v35) {
    goto LABEL_15;
  }
  int64_t v36 = v25 + 2;
  if (v25 + 2 >= v59)
  {
LABEL_34:
    uint64_t v51 = v54[1];
    uint64_t v52 = swift_release();
    v85[0] = v86;
    __chkstk_darwin(v52);
    v54[-2] = v51;
    sub_100084F60();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_100084E20();
    swift_bridgeObjectRelease();
    v85[0] = 0;
    v85[1] = 0xE000000000000000;
    sub_100085340(22);
    v92._object = (void *)0x800000010008AB50;
    v92._countAndFlagsBits = 0xD000000000000014;
    sub_100084D60(v92);
    uint64_t v53 = v86;
    *(void *)&v84[0] = v86;
    swift_getWitnessTable();
    sub_100085560();
    sub_100058E34(v85[0], v85[1], v19, (uint64_t)&off_10009FC60);
    swift_bridgeObjectRelease();
    return v53;
  }
  unint64_t v35 = *(void *)(v55 + 8 * v36);
  if (v35)
  {
LABEL_15:
    int64_t v25 = v36;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v25 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v25 >= v59) {
      goto LABEL_34;
    }
    unint64_t v35 = *(void *)(v55 + 8 * v25);
    ++v36;
    if (v35) {
      goto LABEL_16;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100026738()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BetaSettingsRowViewModel();
  sub_100059088(0xD000000000000010, 0x800000010008AAC0, v5, (uint64_t)&off_10009FC60);
  uint64_t v6 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_100084FC0();
  swift_retain();
  uint64_t v7 = sub_100084FB0();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v1;
  sub_1000159AC((uint64_t)v4, (uint64_t)&unk_1000A6B90, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1000268AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100084360();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = type metadata accessor for BetaSettingsRowViewModel();
  sub_100059088(0xD000000000000010, 0x800000010008AA80, v12, (uint64_t)&off_10009FC60);
  sub_1000279A0((uint64_t)v11);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for BetaEnrollment.State.enrolled(_:), v5);
  sub_10002FB7C((unint64_t *)&qword_1000A6158, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
  sub_100084E50();
  sub_100084E50();
  uint64_t v14 = v20[0];
  uint64_t v13 = v20[1];
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v11, v5);
  if (v13 == v14)
  {
    uint64_t v17 = sub_100084FF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
    sub_100084FC0();
    swift_retain();
    uint64_t v18 = sub_100084FB0();
    uint64_t v19 = (void *)swift_allocObject();
    uint64_t v19[2] = v18;
    v19[3] = &protocol witness table for MainActor;
    uint64_t v19[4] = v1;
    sub_1000159AC((uint64_t)v4, (uint64_t)&unk_1000A6B70, (uint64_t)v19);
    return swift_release();
  }
  return result;
}

unint64_t sub_100026BA0(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    unint64_t v5 = sub_100075D00(v4);
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    if (!v7)
    {
      uint64_t v3 = &off_10009E528;
      char v2 = 19;
      return sub_10000DBD8((uint64_t)v3, v2);
    }
  }
  else
  {
    if (*(void *)(a1 + 16) == 1)
    {
      if (*(unsigned char *)(a1 + 32)) {
        char v2 = 16;
      }
      else {
        char v2 = 18;
      }
      uint64_t v3 = &off_10009E4D8;
      return sub_10000DBD8((uint64_t)v3, v2);
    }
    uint64_t v8 = swift_bridgeObjectRetain();
    unint64_t v5 = sub_100075D00(v8);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    if (!v10)
    {
      uint64_t v3 = &off_10009E500;
      char v2 = 16;
      return sub_10000DBD8((uint64_t)v3, v2);
    }
  }
  return v5;
}

BOOL sub_100026C68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_100026C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v6 = sub_100085200();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v65 = (char *)&v48 - v8;
  uint64_t v67 = v5;
  uint64_t v66 = *(void *)(v5 - 8);
  __chkstk_darwin(v7);
  uint64_t v63 = (char *)&v48 - v9;
  uint64_t v10 = sub_100084150();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int64_t v68 = (char *)&v48 - v15;
  uint64_t v16 = sub_100004BB0(&qword_1000A6BF8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v62 = (uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = v1[2];
  if (v21)
  {
    uint64_t v56 = (char *)&v48 - v20;
    uint64_t v60 = v6;
    uint64_t v61 = a1;
    uint64_t v69 = v21;
    type metadata accessor for BetaSettingsRowViewModel();
    uint64_t v22 = v3;
    uint64_t v23 = sub_100084F60();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v25 = sub_100085160();
    if (v25)
    {
      uint64_t v19 = swift_bridgeObjectRelease();
      uint64_t v3 = v22;
      uint64_t v6 = v60;
      a1 = v61;
    }
    else
    {
      uint64_t v55 = v1;
      uint64_t v69 = v21;
      __chkstk_darwin(v25);
      uint64_t v53 = v4;
      uint64_t v54 = v22;
      *(&v48 - 2) = v4;
      *(&v48 - 1) = v22;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v28 = sub_100012810((void (*)(char *, char *))sub_10002FA90, KeyPath, v23, v10, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v27);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v58 = *(void *)(v28 + 16);
      if (v58)
      {
        unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
        unsigned int v50 = enum case for BetaEnrollment.Availability.unavailable(_:);
        uint64_t v51 = v29;
        uint64_t v52 = v11 + 104;
        ((void (*)(char *))v29)(v68);
        unint64_t v30 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
        uint64_t v57 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
        v57(v14, v28 + v30, v10);
        sub_10002FB7C(&qword_1000A6160, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.Availability);
        swift_bridgeObjectRetain();
        char v31 = sub_100084CF0();
        int64_t v59 = *(void (**)(char *, uint64_t))(v11 + 8);
        v59(v14, v10);
        a1 = v61;
        if (v31)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          v59(v68, v10);
          uint64_t v32 = (uint64_t)v56;
          uint64_t v40 = v56;
          uint64_t v39 = v50;
        }
        else
        {
          if (v58 != 1)
          {
            uint64_t v49 = v11;
            uint64_t v33 = *(void *)(v11 + 72);
            uint64_t v48 = v28;
            unint64_t v34 = v28 + v33 + v30;
            uint64_t v35 = 1;
            while (1)
            {
              uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v57)(v14, v34, v10);
              uint64_t v37 = v35 + 1;
              if (__OFADD__(v35, 1)) {
                break;
              }
              char v38 = sub_100084CF0();
              v59(v14, v10);
              if (v38)
              {
                swift_bridgeObjectRelease();
                a1 = v61;
                uint64_t v11 = v49;
                goto LABEL_17;
              }
              ++v35;
              v34 += v33;
              if (v37 == v58)
              {
                swift_bridgeObjectRelease();
                a1 = v61;
                uint64_t v11 = v49;
                goto LABEL_15;
              }
            }
            __break(1u);
            return result;
          }
          swift_bridgeObjectRelease();
LABEL_15:
          v59(v68, v10);
          uint64_t v39 = enum case for BetaEnrollment.Availability.publicBetaAvailable(_:);
          uint64_t v32 = (uint64_t)v56;
          uint64_t v40 = v56;
        }
        v51(v40, v39, v10);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
        swift_bridgeObjectRelease();
        uint64_t v3 = v54;
        uint64_t v6 = v60;
      }
      else
      {
        uint64_t v32 = (uint64_t)v56;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v56, 1, 1, v10);
        swift_bridgeObjectRelease();
        uint64_t v3 = v54;
        uint64_t v6 = v60;
        a1 = v61;
      }
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v32, 1, v10) != 1) {
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a1, v32, v10);
      }
      uint64_t v19 = sub_10000C788(v32, &qword_1000A6BF8);
      uint64_t v4 = v53;
    }
  }
  __chkstk_darwin(v19);
  *(&v48 - 2) = v4;
  *(&v48 - 1) = v3;
  uint64_t v41 = swift_getKeyPath();
  __chkstk_darwin(v41);
  *(&v48 - 2) = v4;
  *(&v48 - 1) = v42;
  swift_getKeyPath();
  long long v43 = v65;
  sub_100084400();
  swift_release();
  swift_release();
  uint64_t v44 = v66;
  uint64_t v45 = v67;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v43, 1, v67) == 1)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v43, v6);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v11 + 104))(a1, enum case for BetaEnrollment.Availability.unavailable(_:), v10);
  }
  uint64_t v46 = (uint64_t)v63;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v63, v43, v45);
  uint64_t v47 = v62;
  sub_10000C724(v46, v62, &qword_1000A6BF8);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v45);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v47, 1, v10) == 1)
  {
    sub_10000C788(v47, &qword_1000A6BF8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v11 + 104))(a1, enum case for BetaEnrollment.Availability.unavailable(_:), v10);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a1, v47, v10);
}

uint64_t sub_10002752C()
{
  uint64_t v1 = *(void *)(*v0 + 88);
  uint64_t v2 = *(void *)(*v0 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v4 = sub_100085200();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = type metadata accessor for BetaSettingsRowViewModel();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_10002598C(v12, WitnessTable);
  if (v14)
  {
    if (v0[2])
    {
      uint64_t v24 = v0[2];
      __chkstk_darwin(v14);
      *(&v22 - 2) = v2;
      *(&v22 - 1) = v1;
      sub_100084F60();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v15 = (void *)sub_100084DE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = _swiftEmptyArrayStorage;
    }
    uint64_t v20 = sub_1000809C0((uint64_t)v15);
    swift_bridgeObjectRelease();
    if (*(void *)(v20 + 16))
    {
      uint64_t v24 = v20;
      sub_100004BB0(&qword_1000A6BE8);
      sub_10002FAE4();
      sub_10000BD9C();
      uint64_t v19 = sub_100084E40();
      swift_bridgeObjectRelease();
      return v19;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v23 = v5;
  __chkstk_darwin(v14);
  *(&v22 - 2) = v2;
  *(&v22 - 1) = v1;
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v22 - 2) = v2;
  *(&v22 - 1) = v1;
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v4);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
  uint64_t v17 = (uint64_t *)&v11[*(int *)(v3 + 40)];
  uint64_t v18 = v17[13];
  uint64_t v19 = v17[14];
  sub_10002F154(v17[12], v18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v3);
  if (!v18) {
    return 0;
  }
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1000279A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v2 = *(unsigned int (**)(void, void, void))(*v1 + 88);
  uint64_t v3 = *(unsigned int (**)(void, void, void))(*v1 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v45 = sub_100085200();
  uint64_t v42 = *(void *)(v45 - 8);
  uint64_t v5 = __chkstk_darwin(v45);
  uint64_t v44 = (char *)&v37 - v6;
  uint64_t v43 = *(void *)(v4 - 8);
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)&v37 - v7;
  uint64_t v8 = sub_100004BB0(&qword_1000A6A88);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v49 = v3;
  unsigned int v50 = v2;
  swift_getKeyPath();
  uint64_t v47 = v3;
  uint64_t v48 = v2;
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  uint64_t v14 = sub_100084360();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v46, v13, v14);
  }
  uint64_t v37 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v16;
  char v38 = v11;
  uint64_t v39 = v15;
  uint64_t v40 = v14;
  uint64_t v18 = v44;
  uint64_t v17 = v45;
  sub_10000C788((uint64_t)v13, &qword_1000A6A88);
  uint64_t v19 = type metadata accessor for BetaSettingsRowViewModel();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = sub_10002598C(v19, WitnessTable);
  if (v21)
  {
    uint64_t v22 = v1[2];
    if (v22)
    {
      uint64_t v51 = v22;
      __chkstk_darwin(v21);
      *(&v37 - 2) = v3;
      *(&v37 - 1) = v2;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v24 = sub_100084F60();
      swift_bridgeObjectRetain();
      uint64_t v25 = swift_getWitnessTable();
      uint64_t v26 = v40;
      uint64_t v28 = (void *)sub_100012810((void (*)(char *, char *))sub_10002FA90, KeyPath, v24, v40, (uint64_t)&type metadata for Never, v25, (uint64_t)&protocol witness table for Never, v27);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v29 = v46;
    }
    else
    {
      uint64_t v28 = _swiftEmptyArrayStorage;
      uint64_t v29 = v46;
      uint64_t v26 = v40;
    }
    uint64_t v34 = (uint64_t)v38;
    uint64_t v35 = v39;
    int64_t v36 = v37;
    sub_100049670((uint64_t)v28, (uint64_t)v38);
    swift_bridgeObjectRelease();
    if (v36(v34, 1, v26) == 1)
    {
      (*(void (**)(uint64_t, void, uint64_t))(v35 + 104))(v29, enum case for BetaEnrollment.State.multiple(_:), v26);
      return sub_10000C788(v34, &qword_1000A6A88);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v29, v34, v26);
    }
  }
  else
  {
    __chkstk_darwin(v21);
    *(&v37 - 2) = v3;
    *(&v37 - 1) = v2;
    uint64_t v31 = swift_getKeyPath();
    __chkstk_darwin(v31);
    *(&v37 - 2) = v3;
    *(&v37 - 1) = v2;
    swift_getKeyPath();
    sub_100084400();
    swift_release();
    swift_release();
    uint64_t v32 = v43;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v18, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v17);
      return (*(uint64_t (**)(uint64_t, void, uint64_t))(v39 + 104))(v46, enum case for BetaEnrollment.State.notEnrolled(_:), v40);
    }
    else
    {
      uint64_t v33 = v41;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v41, v18, v4);
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v46, &v33[*(int *)(v4 + 36)], v40);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v4);
    }
  }
}

uint64_t sub_100027FDC()
{
  uint64_t v1 = *(uint64_t (**)(void, void))(*v0 + 88);
  uint64_t v2 = *(uint64_t (**)(void, void))(*v0 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v19 = sub_100085200();
  uint64_t v4 = *(void *)(v19 - 8);
  uint64_t v5 = __chkstk_darwin(v19);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v22 = v2;
  uint64_t v23 = v1;
  swift_getKeyPath();
  uint64_t v20 = v2;
  uint64_t v21 = v1;
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48);
  if (v10(v9, 1, v3) || (uint64_t v14 = &v9[*(int *)(v3 + 40)], !*((void *)v14 + 1)))
  {
    uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
    uint64_t v11 = v18(v9, v19);
    __chkstk_darwin(v11);
    *(&v18 - 2) = (uint64_t (*)(char *, uint64_t))v2;
    *(&v18 - 1) = (uint64_t (*)(char *, uint64_t))v1;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v18 - 2) = (uint64_t (*)(char *, uint64_t))v2;
    *(&v18 - 1) = (uint64_t (*)(char *, uint64_t))v1;
    swift_getKeyPath();
    sub_100084400();
    swift_release();
    swift_release();
    if (v10(v7, 1, v3) || (uint64_t v16 = &v7[*(int *)(v3 + 40)], !*((void *)v16 + 9)))
    {
      v18(v7, v19);
      uint64_t v13 = v0[3];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = *((void *)v16 + 10);
      swift_bridgeObjectRetain();
      v18(v7, v19);
    }
  }
  else
  {
    uint64_t v13 = *((void *)v14 + 2);
    uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    v15(v9, v19);
  }
  return v13;
}

uint64_t sub_100028334(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v2 = sub_100085200();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - v4, a1, v2);
  sub_10002E8C8((uint64_t)v5, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_100028488()
{
  return sub_100028568();
}

uint64_t sub_10002849C(uint64_t a1)
{
  uint64_t v2 = sub_100004BB0(&qword_1000A6A88);
  __chkstk_darwin(v2);
  sub_10000C724(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1000A6A88);
  sub_1000843E0();
  return sub_10000C788(a1, &qword_1000A6A88);
}

uint64_t sub_100028554()
{
  return sub_100028568();
}

uint64_t sub_100028568()
{
  return swift_release();
}

uint64_t sub_10002861C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = a1 & 1;
  uint64_t v10 = swift_allocObject();
  sub_10002868C(v9, a2, a3, a4, a5);
  return v10;
}

void *sub_10002868C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v41 = a5;
  uint64_t v42 = a3;
  uint64_t v38 = a4;
  uint64_t v40 = a2;
  int v39 = a1 & 1;
  uint64_t v7 = (void *)*v5;
  uint64_t v8 = sub_100004BB0(&qword_1000A6BB0);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  __chkstk_darwin(v8);
  uint64_t v35 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BB0(&qword_1000A6A88);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v7[11];
  uint64_t v14 = v7[10];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = _s14descr10009DEF9O11DeviceModelVMa();
  sub_100085200();
  uint64_t v16 = sub_100084420();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v35 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v35 - v21;
  v6[2] = 0;
  *((_WORD *)v6 + 20) = 514;
  *((unsigned char *)v6 + 72) = 0;
  uint64_t v23 = (char *)v6 + v7[19];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))((char *)&v35 - v21, 1, 1, v15);
  sub_100028334((uint64_t)v22);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v23, v20, v16);
  uint64_t v24 = (char *)v6 + *(void *)(*v6 + 160);
  uint64_t v25 = sub_100084360();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 1, 1, v25);
  uint64_t v26 = v35;
  sub_10002849C((uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v24, v26, v37);
  uint64_t v27 = v38;
  uint64_t v45 = v38;
  uint64_t v43 = v14;
  uint64_t v44 = v13;
  type metadata accessor for BetaSettingsRowViewModel();
  sub_100084F60();
  swift_getWitnessTable();
  uint64_t v28 = sub_100084DE0();
  LOBYTE(v26) = v39;
  *((unsigned char *)v6 + 40) = v39;
  v6[2] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v40;
  v6[8] = v41;
  uint64_t v30 = v42;
  v6[3] = v29;
  v6[4] = v30;
  swift_unknownObjectRetain();
  unint64_t v31 = sub_100026BA0(v28, (char)v26);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v6[6] = v31;
  v6[7] = v33;
  return v6;
}

uint64_t sub_100028ADC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v7 = sub_100085200();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v16 - v9;
  _OWORD v16[2] = a1;
  v16[3] = a2;
  swift_getKeyPath();
  v16[0] = a1;
  v16[1] = a2;
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v10, 1, v6))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t result = 254;
  }
  else
  {
    uint64_t v12 = &v10[*(int *)(v6 + 40)];
    uint64_t v13 = *((void *)v12 + 6);
    uint64_t v14 = *((void *)v12 + 7);
    uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    v15(v10, v7);
    uint64_t result = sub_100065350(v13, v14);
  }
  *a3 = result;
  return result;
}

uint64_t sub_100028CF4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 152);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s14descr10009DEF9O11DeviceModelVMa();
  sub_100085200();
  uint64_t v2 = sub_100084420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 160);
  uint64_t v4 = sub_100004BB0(&qword_1000A6BB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_100028E78()
{
  sub_100028CF4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t type metadata accessor for BetaSettingsRowViewModel()
{
  return sub_10000C880();
}

void sub_100028EE8()
{
  if (!qword_1000A6A80)
  {
    sub_10000BD00(&qword_1000A6A88);
    unint64_t v0 = sub_100084420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A6A80);
    }
  }
}

uint64_t getEnumTagSinglePayload for GroupType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GroupType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000290A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000290C8(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GroupType()
{
  return &type metadata for GroupType;
}

unint64_t sub_1000290E8()
{
  unint64_t result = qword_1000A6A90;
  if (!qword_1000A6A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6A90);
  }
  return result;
}

uint64_t sub_10002913C(uint64_t a1)
{
  _OWORD v1[2] = a1;
  v1[3] = sub_100084FC0();
  v1[4] = sub_100084FB0();
  int v2 = (void *)swift_task_alloc();
  v1[5] = v2;
  *int v2 = v1;
  v2[1] = sub_1000291EC;
  return sub_1000293E4();
}

uint64_t sub_1000291EC()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = sub_100084FA0();
    uint64_t v4 = v3;
    uint64_t v5 = sub_10002FBE4;
  }
  else
  {
    uint64_t v2 = sub_100084FA0();
    uint64_t v4 = v6;
    uint64_t v5 = sub_100029370;
  }
  return _swift_task_switch(v5, v2, v4);
}

uint64_t sub_100029370()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (BOOL *)v0[2];
  swift_release();
  *uint64_t v2 = v1 != 0;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000293E4()
{
  v1[5] = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100084360();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = *(void *)(v2 + 88);
  v1[11] = *(void *)(v2 + 80);
  v1[12] = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = _s14descr10009DEF9O11DeviceModelVMa();
  v1[13] = v4;
  uint64_t v5 = sub_100085200();
  v1[14] = v5;
  v1[15] = *(void *)(v5 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = *(void *)(v4 - 8);
  v1[18] = swift_task_alloc();
  sub_100004BB0(&qword_1000A6A88);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v6 = sub_100084150();
  v1[21] = v6;
  v1[22] = *(void *)(v6 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  sub_100084FC0();
  v1[25] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v1[26] = v8;
  v1[27] = v7;
  return _swift_task_switch(sub_1000296E0, v8, v7);
}

uint64_t sub_1000296E0()
{
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = type metadata accessor for BetaSettingsRowViewModel();
  *(void *)(v0 + 224) = v5;
  sub_100059088(0x6E696C6C6F726E45, 0xE900000000000067, v5, (uint64_t)&off_10009FC60);
  sub_100026C80(v1);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for BetaEnrollment.Availability.unavailable(_:), v3);
  sub_10002FB7C(&qword_1000A6BA0, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.Availability);
  sub_100084E50();
  sub_100084E50();
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v2, v3);
  v8(v1, v3);
  if (v6 == v7)
  {
    swift_release();
    sub_100059088(0xD000000000000025, 0x800000010008AB00, v5, (uint64_t)&off_10009FC60);
LABEL_20:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
    return v42();
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  if (sub_10002598C(v5, WitnessTable))
  {
    uint64_t v11 = *(void *)(v0 + 152);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v12 = *(void *)(v0 + 88);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v16 = *(void *)(v0 + 40);
    sub_100059088(0xD000000000000012, 0x800000010008AAE0, v5, (uint64_t)&off_10009FC60);
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v10, enum case for BetaEnrollment.State.enrolling(_:), v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    uint64_t v17 = (void *)swift_task_alloc();
    *uint64_t v17 = v12;
    v17[1] = v13;
    swift_getKeyPath();
    swift_task_dealloc();
    uint64_t v18 = (void *)swift_task_alloc();
    *uint64_t v18 = v12;
    v18[1] = v13;
    swift_getKeyPath();
    swift_task_dealloc();
    sub_10000C724(v10, v11, &qword_1000A6A88);
    swift_retain();
    sub_100084410();
    sub_10000C788(v10, &qword_1000A6A88);
    uint64_t v19 = *(void *)(v16 + 16);
    if (v19)
    {
      *(void *)(v0 + 32) = v19;
      *(int8x16_t *)(swift_task_alloc() + 16) = vextq_s8(*(int8x16_t *)(v0 + 80), *(int8x16_t *)(v0 + 80), 8uLL);
      sub_100084F60();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v20 = sub_1000853A0();
      swift_task_dealloc();
    }
    else
    {
      uint64_t v20 = sub_100084EF0();
    }
    *(void *)(v0 + 232) = v20;
    if (sub_100084F50())
    {
      BOOL v38 = sub_100084F10();
      sub_100084EC0();
      if (v38)
      {
        uint64_t v39 = *(void *)(*(void *)(v0 + 232) + 32);
        swift_retain();
      }
      else
      {
        uint64_t v39 = sub_100085370();
      }
      *(void *)(v0 + 240) = v39;
      *(void *)(v0 + 248) = 1;
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 256) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_10002A088;
      return sub_1000293E4();
    }
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v21 = *(void *)(v0 + 128);
  uint64_t v22 = *(void *)(v0 + 136);
  uint64_t v23 = *(void *)(v0 + 104);
  uint64_t v25 = *(void *)(v0 + 80);
  uint64_t v24 = *(void *)(v0 + 88);
  uint64_t v26 = (void *)swift_task_alloc();
  *uint64_t v26 = v24;
  v26[1] = v25;
  swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v27 = (void *)swift_task_alloc();
  *uint64_t v27 = v24;
  v27[1] = v25;
  swift_getKeyPath();
  swift_task_dealloc();
  sub_100084400();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v23) == 1)
  {
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v28 = *(void *)(v0 + 128);
    uint64_t v30 = *(void *)(v0 + 112);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
LABEL_19:
    sub_10002C014(*(uint64_t **)(v0 + 40));
    goto LABEL_20;
  }
  uint64_t v31 = *(void *)(v0 + 72);
  uint64_t v32 = *(void *)(v0 + 48);
  uint64_t v33 = *(void *)(v0 + 56);
  (*(void (**)(void, void, void))(*(void *)(v0 + 136) + 32))(*(void *)(v0 + 144), *(void *)(v0 + 128), *(void *)(v0 + 104));
  unsigned int v34 = enum case for BetaEnrollment.State.enrolled(_:);
  uint64_t v35 = *(void (**)(uint64_t, void, uint64_t))(v33 + 104);
  v35(v31, enum case for BetaEnrollment.State.enrolled(_:), v32);
  sub_10002FB7C(&qword_1000A6B80, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
  char v36 = sub_100084CF0();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  *(void *)(v0 + 272) = v37;
  *(void *)(v0 + 280) = (v33 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v37(v31, v32);
  if (v36)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 104));
LABEL_18:
    swift_release();
    goto LABEL_19;
  }
  uint64_t v44 = *(void *)(v0 + 152);
  uint64_t v43 = *(void *)(v0 + 160);
  uint64_t v45 = *(void *)(v0 + 96);
  uint64_t v62 = *(void *)(v0 + 104);
  uint64_t v63 = *(void *)(v0 + 144);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v65 = *(void *)(v0 + 80);
  uint64_t v47 = *(void *)(v0 + 56);
  uint64_t v61 = *(void *)(v0 + 64);
  unsigned int v60 = v34;
  uint64_t v49 = *(void *)(v0 + 40);
  uint64_t v48 = *(void *)(v0 + 48);
  v35(v43, enum case for BetaEnrollment.State.enrolling(_:), v48);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v43, 0, 1, v48);
  unsigned int v50 = (void *)swift_task_alloc();
  *unsigned int v50 = v46;
  v50[1] = v65;
  swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v51 = (void *)swift_task_alloc();
  *uint64_t v51 = v46;
  v51[1] = v65;
  swift_getKeyPath();
  swift_task_dealloc();
  sub_10000C724(v43, v44, &qword_1000A6A88);
  swift_retain();
  sub_100084410();
  sub_10000C788(v43, &qword_1000A6A88);
  *(void *)(v0 + 288) = *(void *)(v49 + 64);
  v35(v61, v60, v48);
  sub_10002ED64(v45, v45);
  uint64_t v52 = *(void *)(v45 - 8);
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v53 = sub_100084EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v54, v63 + *(int *)(v62 + 44), v45);
  uint64_t v55 = sub_100012C10(v53);
  *(void *)(v0 + 296) = v55;
  uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 + 64) + **(int **)(v65 + 64));
  uint64_t v56 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v56;
  *uint64_t v56 = v0;
  v56[1] = sub_10002A380;
  uint64_t v58 = *(void *)(v0 + 80);
  uint64_t v57 = *(void *)(v0 + 88);
  uint64_t v59 = *(void *)(v0 + 64);
  return v64(v59, v55, v57, v58);
}

uint64_t sub_10002A088()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 208);
    uint64_t v4 = *(void *)(v2 + 216);
    uint64_t v5 = sub_10002A644;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 208);
    uint64_t v4 = *(void *)(v2 + 216);
    uint64_t v5 = sub_10002A1A4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10002A1A4()
{
  uint64_t v1 = *(void *)(v0 + 248);
  swift_release();
  if (v1 == sub_100084F50())
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_10002C014(*(uint64_t **)(v0 + 40));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 248);
    BOOL v5 = sub_100084F10();
    sub_100084EC0();
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(v0 + 232) + 8 * v4 + 32);
      uint64_t result = swift_retain();
    }
    else
    {
      uint64_t result = sub_100085370();
      uint64_t v6 = result;
    }
    *(void *)(v0 + 240) = v6;
    *(void *)(v0 + 248) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 256) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_10002A088;
      return sub_1000293E4();
    }
  }
  return result;
}

uint64_t sub_10002A380()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 272))(*(void *)(v2 + 64), *(void *)(v2 + 48));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  if (v0) {
    BOOL v5 = sub_10002A730;
  }
  else {
    BOOL v5 = sub_10002A550;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10002A550()
{
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 104);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10002C014(*(uint64_t **)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10002A644()
{
  swift_release();
  swift_release();
  sub_10002C014(*(uint64_t **)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002A730()
{
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 104);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10002C014(*(uint64_t **)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10002A830()
{
  _OWORD v1[2] = v0;
  v1[3] = *v0;
  sub_100084FC0();
  v1[4] = sub_100084FB0();
  uint64_t v3 = sub_100084FA0();
  v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_10002A8F0, v3, v2);
}

uint64_t sub_10002A8F0()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v1 = v0[3];
  uint64_t v9 = v2[3];
  uint64_t v10 = v2[4];
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = 0x6873657266655220;
  v12._object = (void *)0xEB00000000676E69;
  sub_100084D60(v12);
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = type metadata accessor for BetaSettingsRowViewModel();
  sub_100059088(v9, v10, v5, (uint64_t)&off_10009FC60);
  swift_bridgeObjectRelease();
  v0[7] = v2[8];
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 48) + **(int **)(v4 + 48));
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10002AA64;
  return v8(v3, v4);
}

uint64_t sub_10002AA64()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10002FBC4;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10001DB8C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10002ABA4(uint64_t a1)
{
  _OWORD v1[2] = a1;
  v1[3] = sub_100084FC0();
  v1[4] = sub_100084FB0();
  uint64_t v2 = (void *)swift_task_alloc();
  v1[5] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10002AC54;
  return sub_10002ADD8();
}

uint64_t sub_10002AC54()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  uint64_t v3 = sub_100084FA0();
  return _swift_task_switch(sub_10002FBE4, v3, v2);
}

uint64_t sub_10002ADD8()
{
  v1[3] = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100084360();
  v1[4] = v3;
  v1[5] = *(void *)(v3 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = *(void *)(v2 + 88);
  v1[9] = *(void *)(v2 + 80);
  v1[10] = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = _s14descr10009DEF9O11DeviceModelVMa();
  v1[11] = v4;
  uint64_t v5 = sub_100085200();
  v1[12] = v5;
  v1[13] = *(void *)(v5 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = *(void *)(v4 - 8);
  v1[16] = swift_task_alloc();
  sub_100004BB0(&qword_1000A6A88);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  sub_100084FC0();
  v1[19] = sub_100084FB0();
  uint64_t v7 = sub_100084FA0();
  v1[20] = v7;
  v1[21] = v6;
  return _swift_task_switch(sub_10002B068, v7, v6);
}

uint64_t sub_10002B068()
{
  uint64_t v1 = type metadata accessor for BetaSettingsRowViewModel();
  *(void *)(v0 + 176) = v1;
  sub_100059088(0x676E69766F6D6552, 0xE800000000000000, v1, (uint64_t)&off_10009FC60);
  uint64_t WitnessTable = swift_getWitnessTable();
  if (sub_10002598C(v1, WitnessTable))
  {
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 24);
    sub_100059088(0xD000000000000011, 0x800000010008AAA0, v1, (uint64_t)&off_10009FC60);
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v3, enum case for BetaEnrollment.State.removing(_:), v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
    uint64_t v10 = (void *)swift_task_alloc();
    *uint64_t v10 = v5;
    v10[1] = v6;
    swift_getKeyPath();
    swift_task_dealloc();
    uint64_t v11 = (void *)swift_task_alloc();
    *uint64_t v11 = v5;
    v11[1] = v6;
    swift_getKeyPath();
    swift_task_dealloc();
    sub_10000C724(v3, v4, &qword_1000A6A88);
    swift_retain();
    sub_100084410();
    sub_10000C788(v3, &qword_1000A6A88);
    uint64_t v12 = *(void *)(v9 + 16);
    if (v12)
    {
      *(void *)(v0 + 16) = v12;
      *(int8x16_t *)(swift_task_alloc() + 16) = vextq_s8(*(int8x16_t *)(v0 + 64), *(int8x16_t *)(v0 + 64), 8uLL);
      sub_100084F60();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v13 = sub_1000853A0();
      swift_task_dealloc();
    }
    else
    {
      uint64_t v13 = sub_100084EF0();
    }
    *(void *)(v0 + 184) = v13;
    if (sub_100084F50())
    {
      BOOL v31 = sub_100084F10();
      sub_100084EC0();
      if (v31)
      {
        uint64_t v32 = *(void *)(*(void *)(v0 + 184) + 32);
        swift_retain();
      }
      else
      {
        uint64_t v32 = sub_100085370();
      }
      *(void *)(v0 + 192) = v32;
      *(void *)(v0 + 200) = 1;
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v33;
      *uint64_t v33 = v0;
      v33[1] = sub_10002B8E8;
      return sub_10002ADD8();
    }
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v14 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 120);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v18 = *(void *)(v0 + 64);
  uint64_t v17 = *(void *)(v0 + 72);
  uint64_t v19 = (void *)swift_task_alloc();
  *uint64_t v19 = v17;
  v19[1] = v18;
  swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v20 = (void *)swift_task_alloc();
  *uint64_t v20 = v17;
  v20[1] = v18;
  swift_getKeyPath();
  swift_task_dealloc();
  sub_100084400();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v14, 1, v16) == 1)
  {
    uint64_t v22 = *(void *)(v0 + 104);
    uint64_t v21 = *(void *)(v0 + 112);
    uint64_t v23 = *(void *)(v0 + 96);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
LABEL_17:
    sub_10002C014(*(uint64_t **)(v0 + 24));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
    return v35();
  }
  uint64_t v24 = *(void *)(v0 + 56);
  uint64_t v25 = *(void *)(v0 + 32);
  uint64_t v26 = *(void *)(v0 + 40);
  (*(void (**)(void, void, void))(*(void *)(v0 + 120) + 32))(*(void *)(v0 + 128), *(void *)(v0 + 112), *(void *)(v0 + 88));
  unsigned int v27 = enum case for BetaEnrollment.State.notEnrolled(_:);
  uint64_t v28 = *(void (**)(uint64_t, void, uint64_t))(v26 + 104);
  v28(v24, enum case for BetaEnrollment.State.notEnrolled(_:), v25);
  sub_10002FB7C(&qword_1000A6B80, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
  char v29 = sub_100084CF0();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  *(void *)(v0 + 224) = v30;
  *(void *)(v0 + 232) = (v26 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v30(v24, v25);
  if (v29)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 88));
LABEL_16:
    swift_release();
    goto LABEL_17;
  }
  uint64_t v37 = *(void *)(v0 + 136);
  uint64_t v36 = *(void *)(v0 + 144);
  uint64_t v38 = *(void *)(v0 + 80);
  uint64_t v55 = *(void *)(v0 + 88);
  uint64_t v56 = *(void *)(v0 + 128);
  uint64_t v39 = *(void *)(v0 + 72);
  uint64_t v58 = *(void *)(v0 + 64);
  uint64_t v40 = *(void *)(v0 + 40);
  uint64_t v54 = *(void *)(v0 + 48);
  unsigned int v53 = v27;
  uint64_t v42 = *(void *)(v0 + 24);
  uint64_t v41 = *(void *)(v0 + 32);
  v28(v36, enum case for BetaEnrollment.State.enrolling(_:), v41);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v41);
  uint64_t v43 = (void *)swift_task_alloc();
  *uint64_t v43 = v39;
  v43[1] = v58;
  swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v44 = (void *)swift_task_alloc();
  *uint64_t v44 = v39;
  v44[1] = v58;
  swift_getKeyPath();
  swift_task_dealloc();
  sub_10000C724(v36, v37, &qword_1000A6A88);
  swift_retain();
  sub_100084410();
  sub_10000C788(v36, &qword_1000A6A88);
  *(void *)(v0 + 240) = *(void *)(v42 + 64);
  v28(v54, v53, v41);
  sub_10002ED64(v38, v38);
  uint64_t v45 = *(void *)(v38 - 8);
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v46 = sub_100084EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v47, v56 + *(int *)(v55 + 44), v38);
  uint64_t v48 = sub_100012C10(v46);
  *(void *)(v0 + 248) = v48;
  uint64_t v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 + 64) + **(int **)(v58 + 64));
  uint64_t v49 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v49;
  *uint64_t v49 = v0;
  v49[1] = sub_10002BBC4;
  uint64_t v51 = *(void *)(v0 + 64);
  uint64_t v50 = *(void *)(v0 + 72);
  uint64_t v52 = *(void *)(v0 + 48);
  return v57(v52, v48, v50, v51);
}

uint64_t sub_10002B8E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_10002BE70;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_10002BA04;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10002BA04()
{
  uint64_t v1 = *(void *)(v0 + 200);
  swift_release();
  if (v1 == sub_100084F50())
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_10002C014(*(uint64_t **)(v0 + 24));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 200);
    BOOL v5 = sub_100084F10();
    sub_100084EC0();
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(v0 + 184) + 8 * v4 + 32);
      uint64_t result = swift_retain();
    }
    else
    {
      uint64_t result = sub_100085370();
      uint64_t v6 = result;
    }
    *(void *)(v0 + 192) = v6;
    *(void *)(v0 + 200) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_10002B8E8;
      return sub_10002ADD8();
    }
  }
  return result;
}

uint64_t sub_10002BBC4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 224))(*(void *)(v2 + 48), *(void *)(v2 + 32));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v3 = *(void *)(v2 + 168);
  uint64_t v4 = *(void *)(v2 + 160);
  if (v0) {
    BOOL v5 = sub_10002BF38;
  }
  else {
    BOOL v5 = sub_10002BD94;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10002BD94()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 88);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10002C014(*(uint64_t **)(v0 + 24));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10002BE70()
{
  uint64_t v1 = *(uint64_t **)(v0 + 24);
  swift_release();
  swift_release();
  sub_10002C014(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10002BF38()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[11];
  uint64_t v4 = (uint64_t *)v0[3];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10002C014(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10002C014(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = sub_100004BB0(&qword_1000A6A88);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  BOOL v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = sub_100084360();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v13 = *(void *)(v1 + 80);
  uint64_t v9 = v13;
  uint64_t v14 = *(void *)(v1 + 88);
  uint64_t v10 = v14;
  swift_getKeyPath();
  v12[0] = v9;
  v12[1] = v10;
  swift_getKeyPath();
  sub_10000C724((uint64_t)v7, (uint64_t)v5, &qword_1000A6A88);
  swift_retain();
  sub_100084410();
  return sub_10000C788((uint64_t)v7, &qword_1000A6A88);
}

BOOL sub_10002C198(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v5 = sub_100084360();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v15 - v10;
  sub_1000279A0((uint64_t)v15 - v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *a4, v5);
  sub_10002FB7C(&qword_1000A6B80, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
  char v12 = sub_100084CF0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v5);
  v13(v11, v5);
  return (v12 & 1) == 0;
}

uint64_t sub_10002C328(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 120) = a1;
  *(void *)(v2 + 24) = *v1;
  sub_100084FC0();
  *(void *)(v2 + 32) = sub_100084FB0();
  uint64_t v4 = sub_100084FA0();
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v3;
  return _swift_task_switch(sub_10002C3EC, v4, v3);
}

uint64_t sub_10002C3EC()
{
  uint64_t v19 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 120);
  strcpy((char *)v18, "Set isActive=");
  HIWORD(v18[1]) = -4864;
  if (v3) {
    v4._countAndFlagsBits = 1702195828;
  }
  else {
    v4._countAndFlagsBits = 0x65736C6166;
  }
  if (v3) {
    uint64_t v5 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v5 = (void *)0xE500000000000000;
  }
  v4._object = v5;
  sub_100084D60(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = v18[0];
  uint64_t v7 = v18[1];
  uint64_t v8 = *(void *)(v1 + 80);
  *(void *)(v0 + 56) = v8;
  uint64_t v9 = *(void *)(v1 + 88);
  *(void *)(v0 + 64) = v9;
  uint64_t v10 = type metadata accessor for BetaSettingsRowViewModel();
  *(void *)(v0 + 72) = v10;
  sub_100059088(v6, v7, v10, (uint64_t)&off_10009FC60);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v2 + 72) = v3;
  *(void *)(v0 + 80) = *(void *)(v2 + 64);
  if (v3 == 1)
  {
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v9 + 48) + **(int **)(v9 + 48));
    swift_unknownObjectRetain();
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10002C6B8;
    return v16(v8, v9);
  }
  else
  {
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 56)
                                                                              + **(int **)(v9 + 56));
    swift_unknownObjectRetain();
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v13;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v13 = v0;
    v13[1] = sub_10002CA6C;
    uint64_t v15 = *(void *)(v0 + 16);
    return v17(v15, v10, WitnessTable, v8, v9);
  }
}

uint64_t sub_10002C6B8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10002FBC8;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10002C7F8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10002C7F8()
{
  uint64_t v1 = v0[8];
  v0[12] = *(void *)(v0[2] + 64);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 32) + **(int **)(v1 + 32));
  swift_unknownObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v2 = v0;
  v2[1] = sub_10002C928;
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[2];
  return v9(v7, v4, WitnessTable, v6, v5);
}

uint64_t sub_10002C928()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10001DB8C, v3, v2);
}

uint64_t sub_10002CA6C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10002FBC4, v3, v2);
}

uint64_t sub_10002CBB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10002CBC8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005D30;
  return sub_10002A830();
}

uint64_t sub_10002CC58(char a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005D30;
  return sub_10002C328(a1);
}

uint64_t sub_10002CCEC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10002CD20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10002CD54@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for BetaSettingsRowViewModel();
  uint64_t result = sub_100085360();
  *a1 = result;
  return result;
}

uint64_t sub_10002CD9C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for BetaSettingsRowViewModel();
  uint64_t result = sub_1000843A0();
  *a1 = result;
  return result;
}

uint64_t sub_10002CDE0(uint64_t a1)
{
  _OWORD v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  sub_100004BB0(&qword_1000A7070);
  v2[5] = swift_task_alloc();
  return _swift_task_switch(sub_10002CE9C, 0, 0);
}

uint64_t sub_10002CE9C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[2];
  uint64_t v4 = sub_100084FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = *(void *)(v2 + 80);
  v6[5] = *(void *)(v2 + 88);
  v6[6] = v5;
  v6[7] = v3;
  swift_bridgeObjectRetain();
  sub_1000159AC(v1, (uint64_t)&unk_1000A6BD8, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10002CFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return _swift_task_switch(sub_10002CFF8, 0, 0);
}

uint64_t sub_10002CFF8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10002D0F8;
    uint64_t v3 = *(void *)(v0 + 56);
    return sub_10002D238(v3);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_10002D0F8()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10002D210, 0, 0);
}

uint64_t sub_10002D210()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 64) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002D238(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = *v1;
  v2[6] = *(void *)(*v1 + 88);
  v2[7] = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[8] = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = _s14descr10009DEF9O11DeviceModelVMa();
  v2[9] = v5;
  v2[10] = *(void *)(v5 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v6 = sub_100085200();
  v2[12] = v6;
  v2[13] = *(void *)(v6 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = *(void *)(AssociatedTypeWitness - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  sub_100084FC0();
  v2[21] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v2[22] = v8;
  v2[23] = v7;
  return _swift_task_switch(sub_10002D4A8, v8, v7);
}

uint64_t sub_10002D4A8()
{
  uint64_t v2 = v0[4].i64[1];
  uint64_t v1 = v0[5].i64[0];
  uint64_t v4 = v0[3].i64[0];
  uint64_t v3 = v0[3].i64[1];
  uint64_t v5 = v0[2].i64[0];
  uint64_t v48 = v0[8].i64[1];
  sub_100085340(18);
  v51._object = (void *)0x800000010008A9D0;
  v51._countAndFlagsBits = 0xD000000000000010;
  sub_100084D60(v51);
  v0[1].i64[0] = v5;
  sub_100084F60();
  swift_getWitnessTable();
  sub_100085560();
  uint64_t v6 = type metadata accessor for BetaSettingsRowViewModel();
  v0[12].i64[0] = v6;
  sub_100059088(0, 0xE000000000000000, v6, (uint64_t)&off_10009FC60);
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)swift_task_alloc();
  *uint64_t v7 = v3;
  v7[1] = v4;
  swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v8 = (void *)swift_task_alloc();
  void *v8 = v3;
  v8[1] = v4;
  swift_getKeyPath();
  swift_task_dealloc();
  sub_100084400();
  swift_release();
  swift_release();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v9(v48, 1, v2))
  {
    (*(void (**)(uint64_t, uint64_t))(v0[6].i64[1] + 8))(v0[8].i64[1], v0[6].i64[0]);
  }
  else
  {
    uint64_t v10 = v0[9].i64[1];
    uint64_t v12 = v0[8].i64[1];
    uint64_t v11 = v0[9].i64[0];
    uint64_t v40 = v0[10].i64[0];
    uint64_t v42 = v0[8].i64[0];
    uint64_t v14 = v0[6].i64[0];
    uint64_t v13 = v0[6].i64[1];
    uint64_t v15 = v0[4].i64[0];
    uint64_t v44 = v0[4].i64[1];
    uint64_t v38 = v0[2].i64[0];
    int8x16_t v39 = v0[3];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v12 + *(int *)(v44 + 44), v15);
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v47(v12, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v40, v10, v15);
    v0[1].i64[1] = v38;
    uint64_t v16 = (int8x16_t *)swift_task_alloc();
    v16[1] = vextq_s8(v39, v39, 8uLL);
    v16[2].i64[0] = v40;
    swift_getWitnessTable();
    sub_100084DF0();
    swift_task_dealloc();
    if (v9(v42, 1, v44) != 1)
    {
      uint64_t v49 = v0[10].i64[0];
      uint64_t v22 = v0[7].i64[1];
      uint64_t v23 = v0[8].i64[0];
      uint64_t v24 = v0[6].i64[1];
      uint64_t v25 = v0[5].i64[1];
      uint64_t v41 = v0[7].i64[0];
      uint64_t v43 = v0[6].i64[0];
      uint64_t v26 = v0[4].i64[1];
      uint64_t v27 = v0[5].i64[0];
      uint64_t v28 = v0[3].i64[1];
      uint64_t v45 = v0[4].i64[0];
      uint64_t v46 = v0[9].i64[0];
      uint64_t v29 = v0[3].i64[0];
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v25, v23, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v22, v25, v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v22, 0, 1, v26);
      uint64_t v30 = (void *)swift_task_alloc();
      *uint64_t v30 = v28;
      v30[1] = v29;
      swift_getKeyPath();
      swift_task_dealloc();
      BOOL v31 = (void *)swift_task_alloc();
      *BOOL v31 = v28;
      v31[1] = v29;
      swift_getKeyPath();
      swift_task_dealloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v41, v22, v43);
      swift_retain();
      sub_100084410();
      v47(v22, v43);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v49, v45);
      goto LABEL_19;
    }
    uint64_t v17 = v0[8].i64[0];
    uint64_t v18 = v0[6].i64[0];
    (*(void (**)(uint64_t, uint64_t))(v0[9].i64[0] + 8))(v0[10].i64[0], v0[4].i64[0]);
    v47(v17, v18);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  if (sub_10002598C(v6, WitnessTable))
  {
    uint64_t v20 = v0[2].i64[1];
    if (*(void *)(v20 + 16)) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = sub_100084EF0();
    }
    v0[12].i64[1] = v21;
    swift_bridgeObjectRetain();
    if (sub_100084F50())
    {
      BOOL v32 = sub_100084F10();
      sub_100084EC0();
      if (v32)
      {
        uint64_t v33 = *(void *)(v0[12].i64[1] + 32);
        swift_retain();
      }
      else
      {
        uint64_t v33 = sub_100085370();
      }
      v0[13].i64[0] = v33;
      v0[13].i64[1] = 1;
      unsigned int v34 = (void *)swift_task_alloc();
      v0[14].i64[0] = (uint64_t)v34;
      *unsigned int v34 = v0;
      v34[1] = sub_10002DB2C;
      uint64_t v35 = v0[2].i64[0];
      return sub_10002CDE0(v35);
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0->i64[1];
  return v37();
}

uint64_t sub_10002DB2C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return _swift_task_switch(sub_10002DC4C, v3, v2);
}

uint64_t sub_10002DC4C()
{
  uint64_t v1 = v0[27];
  swift_release();
  if (v1 == sub_100084F50())
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[27];
    BOOL v5 = sub_100084F10();
    sub_100084EC0();
    if (v5)
    {
      uint64_t v6 = *(void *)(v0[25] + 8 * v4 + 32);
      uint64_t result = swift_retain();
    }
    else
    {
      uint64_t result = sub_100085370();
      uint64_t v6 = result;
    }
    v0[26] = v6;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      v0[27] = v4 + 1;
      uint64_t v7 = (void *)swift_task_alloc();
      v0[28] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_10002DB2C;
      uint64_t v8 = v0[4];
      return sub_10002CDE0(v8);
    }
  }
  return result;
}

uint64_t sub_10002DE10()
{
  return sub_100084CF0() & 1;
}

uint64_t sub_10002DED0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005D30;
  return sub_10002CDE0(a1);
}

uint64_t sub_10002DF64(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10002DFA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10002DFBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10002DFD8(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_10002E038@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = a1 + *(int *)(_s14descr10009DEF9O11DeviceModelVMa() + 40);
  uint64_t v5 = *(void *)(v4 + 40);
  *a2 = *(void *)(v4 + 32);
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10002E0EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v28 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v4 = sub_100085200();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v27 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v26 = *a1;
  uint64_t v29 = v26;
  sub_100084F60();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100085150();
  uint64_t v10 = *(void *)(v3 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v9, 1, v3);
  uint64_t v23 = v5;
  uint64_t v24 = v4;
  if (v12 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  else
  {
    uint64_t v13 = (uint64_t *)&v9[*(int *)(v3 + 40)];
    uint64_t v14 = v13[1];
    uint64_t v15 = v13[2];
    unint64_t v16 = v13[3];
    sub_10002F154(*v13, v14);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v3);
    if (v14) {
      goto LABEL_4;
    }
  }
  uint64_t v18 = v27;
  uint64_t v29 = v26;
  sub_100085150();
  if (v11(v18, 1, v3) == 1)
  {
    uint64_t v15 = 0x656D614E206F4ELL;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v18, v24);
LABEL_9:
    unint64_t v16 = 0xE700000000000000;
    goto LABEL_10;
  }
  uint64_t v19 = (uint64_t *)&v18[*(int *)(v3 + 40)];
  uint64_t v20 = v19[9];
  uint64_t v15 = v19[10];
  unint64_t v16 = v19[11];
  sub_10002F154(v19[8], v20);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v18, v3);
  if (!v20)
  {
    uint64_t v15 = 0x656D614E206F4ELL;
    goto LABEL_9;
  }
LABEL_4:
  uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v21 = v28;
  *uint64_t v28 = v15;
  v21[1] = v16;
  return result;
}

uint64_t sub_10002E418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for BetaSettingsRowViewModel();
  swift_unknownObjectRetain();
  uint64_t v6 = sub_10002F88C(a1, a2);
  uint64_t result = swift_unknownObjectRelease();
  *a3 = v6;
  return result;
}

uint64_t sub_10002E48C(uint64_t a1)
{
  uint64_t v2 = sub_100084360();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_100084150();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v29 - v16;
  sub_100026C80((uint64_t)&v29 - v16);
  uint64_t v31 = a1;
  sub_1000279A0((uint64_t)v10);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, enum case for BetaEnrollment.Availability.unavailable(_:), v11);
  sub_10002FB7C(&qword_1000A6BA0, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.Availability);
  BOOL v32 = v17;
  sub_100084E50();
  sub_100084E50();
  uint64_t v18 = v35;
  uint64_t v19 = v37;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v15, v11);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  unsigned int v34 = v10;
  v21(v8, v10, v2);
  uint64_t v33 = (uint64_t (*)(char *, uint64_t))v20;
  if (v18 == v19)
  {
    uint64_t v22 = v30;
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v30, enum case for BetaEnrollment.State.enrolled(_:), v2);
    sub_10002FB7C((unint64_t *)&qword_1000A6158, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
    sub_100084E50();
    sub_100084E50();
    uint64_t v23 = v35;
    uint64_t v24 = v37;
    uint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
    v25(v22, v2);
    v25(v8, v2);
    uint64_t v26 = v32;
    if (v23 == v24)
    {
      uint64_t v35 = 0;
      uint64_t v36 = 0xE000000000000000;
      sub_100085340(73);
      v38._object = (void *)0x800000010008AB70;
      v38._countAndFlagsBits = 0xD000000000000047;
      sub_100084D60(v38);
      uint64_t v37 = v31;
      uint64_t v27 = type metadata accessor for BetaSettingsRowViewModel();
      sub_100085550();
      sub_100058E34(v35, v36, v27, (uint64_t)&off_10009FC60);
      swift_bridgeObjectRelease();
      sub_1000268AC();
    }
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
    v25(v8, v2);
    uint64_t v26 = v32;
  }
  v25(v34, v2);
  return v33(v26, v11);
}

uint64_t sub_10002E8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  sub_1000843E0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_10002E9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 16);
  uint64_t v6 = *(void *)(a4 + a3 - 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v7 = sub_100085200();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v16 - v12;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v14((char *)v16 - v12, a1, v7);
  _OWORD v16[2] = v5;
  v16[3] = v6;
  swift_getKeyPath();
  v16[0] = v5;
  v16[1] = v6;
  swift_getKeyPath();
  v14(v11, (uint64_t)v13, v7);
  swift_retain();
  sub_100084410();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_10002EB9C()
{
  return swift_release();
}

uint64_t sub_10002EC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 16);
  uint64_t v6 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = sub_100004BB0(&qword_1000A6A88);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v14 - v11;
  sub_10000C724(a1, (uint64_t)v14 - v11, &qword_1000A6A88);
  _OWORD v14[2] = v5;
  void v14[3] = v6;
  swift_getKeyPath();
  v14[0] = v5;
  v14[1] = v6;
  swift_getKeyPath();
  sub_10000C724((uint64_t)v12, (uint64_t)v10, &qword_1000A6A88);
  swift_retain();
  sub_100084410();
  return sub_10000C788((uint64_t)v12, &qword_1000A6A88);
}

uint64_t sub_10002ED64(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return sub_100004BB0(&qword_1000A6868);
  }
  else
  {
    return sub_100085540();
  }
}

uint64_t sub_10002EDD8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005D30;
  return sub_10002ABA4(a1);
}

uint64_t sub_10002EE8C()
{
  return sub_10002EB9C();
}

uint64_t sub_10002EEB8()
{
  return 16;
}

__n128 sub_10002EEC4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10002EED0()
{
  return sub_10002EB9C();
}

uint64_t sub_10002EEFC()
{
  return 16;
}

__n128 sub_10002EF08(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

BOOL sub_10002EF14(uint64_t a1)
{
  return sub_10002C198(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (unsigned int *)&enum case for BetaEnrollment.State.notEnrolled(_:));
}

uint64_t sub_10002EF40()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10002EF80(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005D30;
  return sub_10002913C(a1);
}

BOOL sub_10002F034(uint64_t a1)
{
  return sub_10002C198(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (unsigned int *)&enum case for BetaEnrollment.State.enrolled(_:));
}

uint64_t sub_10002F05C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_10002E038(a1, a2);
}

uint64_t sub_10002F07C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10002E0EC(a1, a2);
}

uint64_t sub_10002F09C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10002E418(a1, *(void *)(v2 + 32), a2);
}

double sub_10002F0BC(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_10002F0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A6BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002F13C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_10002F154(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_10002F198(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10002F1F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a6)
  {
    sub_10002F298(result, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002F298(a9, a10);
    return sub_10002F298(a13, a14);
  }
  return result;
}

uint64_t sub_10002F298(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_10002F2DC(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  uint64_t v3 = a1[9];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  sub_10002F154(*a1, a1[1]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10002F154(v2, v3);
  sub_10002F154(v4, v5);
  return a1;
}

uint64_t sub_10002F38C(uint64_t *a1)
{
  return sub_10002E48C(*a1);
}

uint64_t sub_10002F3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = sub_100004BB0(&qword_1000A6BB0);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  int8x16_t v39 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BB0(&qword_1000A6A88);
  __chkstk_darwin(v6 - 8);
  Swift::String v38 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v3[11];
  v33[1] = v3[10];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = _s14descr10009DEF9O11DeviceModelVMa();
  sub_100085200();
  uint64_t v9 = sub_100084420();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v10 = v36;
  uint64_t v37 = v9;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v33 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v33 - v14;
  *(void *)(v2 + 16) = 0;
  *(_WORD *)(v2 + 40) = 514;
  *(unsigned char *)(v2 + 72) = 0;
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
  uint64_t v34 = v2 + v3[19];
  uint64_t v16 = v34;
  uint64_t v35 = v18;
  v18(v15, 1, 1, v8);
  sub_100028334((uint64_t)v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v16, v13, v9);
  uint64_t v19 = v2 + *(void *)(*(void *)v2 + 160);
  uint64_t v20 = sub_100084360();
  uint64_t v21 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v38, 1, 1, v20);
  uint64_t v22 = v39;
  sub_10002849C(v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v19, v22, v41);
  uint64_t v23 = v42;
  uint64_t v24 = (void *)(v42 + *(int *)(v8 + 40));
  uint64_t v25 = v24[6];
  uint64_t v26 = v24[7];
  swift_bridgeObjectRetain();
  LODWORD(v40) = sub_100065350(v25, v26);
  LODWORD(v41) = v40;
  type metadata accessor for BetaSettingsRowViewModel();
  *(void *)(v2 + 16) = sub_100084EF0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, v23, v8);
  v35(v15, 0, 1, v8);
  uint64_t v27 = v34;
  swift_beginAccess();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  swift_unknownObjectRetain();
  v28(v27, v37);
  sub_100028334((uint64_t)v15);
  swift_endAccess();
  uint64_t v29 = v24[5];
  *(void *)(v2 + 24) = v24[4];
  *(void *)(v2 + 32) = v29;
  swift_bridgeObjectRetain();
  if (v41 <= 0xFD) {
    unint64_t v30 = sub_1000651AC(v40);
  }
  else {
    unint64_t v30 = sub_10000DBD8((uint64_t)&off_10009E7B8, 15);
  }
  *(void *)(v2 + 48) = v30;
  *(void *)(v2 + 56) = v31;
  return v2;
}

uint64_t sub_10002F88C(uint64_t a1, uint64_t a2)
{
  return sub_10002F3BC(a1, a2);
}

uint64_t sub_10002F8E0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_10002F918()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_10002F960(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 48);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1000052B8;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_10002CFF8, 0, 0);
}

uint64_t sub_10002FA14()
{
  return sub_10002DE10() & 1;
}

uint64_t sub_10002FA38@<X0>(unsigned char *a1@<X8>)
{
  return sub_100028ADC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10002FA54@<X0>(uint64_t a1@<X8>)
{
  return sub_1000279A0(a1);
}

uint64_t sub_10002FA78()
{
  return 16;
}

__n128 sub_10002FA84(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10002FA90()
{
  return sub_100015678();
}

uint64_t sub_10002FAA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002752C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10002FAE4()
{
  unint64_t result = qword_1000A6BF0;
  if (!qword_1000A6BF0)
  {
    sub_10000BD00(&qword_1000A6BE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6BF0);
  }
  return result;
}

uint64_t sub_10002FB40@<X0>(uint64_t a1@<X8>)
{
  return sub_100026C80(a1);
}

uint64_t sub_10002FB64()
{
  return 16;
}

__n128 sub_10002FB70(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10002FB7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002FBCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10002F09C(a1, a2);
}

uint64_t sub_10002FBE8()
{
  return sub_100031CCC(&qword_1000A6C00, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10002FC30(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v4) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    int64_t v10 = v6 + 1;
    if (!__OFADD__(v6, 1))
    {
      if (v10 < v22)
      {
        unint64_t v11 = *(void *)(v21 + 8 * v10);
        ++v6;
        if (v11) {
          goto LABEL_23;
        }
        int64_t v6 = v10 + 1;
        if (v10 + 1 >= v22) {
          goto LABEL_38;
        }
        unint64_t v11 = *(void *)(v21 + 8 * v6);
        if (v11) {
          goto LABEL_23;
        }
        int64_t v6 = v10 + 2;
        if (v10 + 2 >= v22) {
          goto LABEL_38;
        }
        unint64_t v11 = *(void *)(v21 + 8 * v6);
        if (v11) {
          goto LABEL_23;
        }
        int64_t v6 = v10 + 3;
        if (v10 + 3 >= v22) {
          goto LABEL_38;
        }
        unint64_t v11 = *(void *)(v21 + 8 * v6);
        if (v11)
        {
LABEL_23:
          unint64_t v4 = (v11 - 1) & v11;
          for (unint64_t i = __clz(__rbit64(v11)) + (v6 << 6); ; unint64_t i = v8 | (v6 << 6))
          {
            sub_10000C724(*(void *)(a1 + 56) + 8 * i, (uint64_t)v24, &qword_1000A6CB0);
            sub_1000329AC((uint64_t)v24, (uint64_t)v23, &qword_1000A6CB0);
            uint64_t Strong = swift_unknownObjectWeakLoadStrong();
            if (!Strong) {
              goto LABEL_6;
            }
            uint64_t v14 = Strong;
            swift_getObjectType();
            uint64_t v15 = swift_conformsToProtocol2();
            uint64_t v16 = v15 ? v15 : 0;
            uint64_t v17 = v15 ? v14 : 0;
            if (!v17) {
              break;
            }
            sub_10000C788((uint64_t)v23, &qword_1000A6CB0);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_10006C878(0, v7[2] + 1, 1, v7);
              uint64_t v7 = (void *)result;
            }
            unint64_t v19 = v7[2];
            unint64_t v18 = v7[3];
            if (v19 >= v18 >> 1)
            {
              uint64_t result = (uint64_t)sub_10006C878((void *)(v18 > 1), v19 + 1, 1, v7);
              uint64_t v7 = (void *)result;
            }
            v7[2] = v19 + 1;
            uint64_t v20 = &v7[2 * v19];
            v20[4] = v17;
            v20[5] = v16;
            if (!v4) {
              goto LABEL_8;
            }
LABEL_7:
            unint64_t v8 = __clz(__rbit64(v4));
            v4 &= v4 - 1;
          }
          swift_unknownObjectRelease();
LABEL_6:
          uint64_t result = sub_10000C788((uint64_t)v23, &qword_1000A6CB0);
          if (!v4) {
            continue;
          }
          goto LABEL_7;
        }
        int64_t v12 = v10 + 4;
        if (v12 < v22)
        {
          unint64_t v11 = *(void *)(v21 + 8 * v12);
          if (v11)
          {
            int64_t v6 = v12;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v6 = v12 + 1;
            if (__OFADD__(v12, 1)) {
              goto LABEL_40;
            }
            if (v6 >= v22) {
              break;
            }
            unint64_t v11 = *(void *)(v21 + 8 * v6);
            ++v12;
            if (v11) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_38:
      swift_release();
      return (uint64_t)v7;
    }
    break;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10002FEC8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  long long v5 = v9 - v4 + 22;
  v10[0] = a1;
  swift_retain();
  sub_100085350();
  swift_getAssociatedConformanceWitness();
  sub_100085500();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_unknownObjectWeakAssign();
  sub_1000329AC(v6, (uint64_t)v9, &qword_1000A6CB0);
  v9[8] = 0;
  swift_beginAccess();
  sub_100069CF4((uint64_t)v9, (uint64_t)v10);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_100030070()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100030090, v0, 0);
}

uint64_t sub_100030090()
{
  *(void *)(v0 + 24) = *(void *)(*(void *)(v0 + 16) + 112);
  swift_retain();
  return _swift_task_switch(sub_100030104, 0, 0);
}

uint64_t sub_100030104()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if ((*(unsigned char *)(v1 + 40) & 1) == 0) {
    *(unsigned char *)(v1 + 40) = 1;
  }
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10003017C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  long long v5 = &v7[-v4];
  v8[0] = a1;
  swift_retain();
  sub_100085350();
  swift_getAssociatedConformanceWitness();
  sub_100085500();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  swift_beginAccess();
  sub_10006D470((uint64_t)v8, (uint64_t)v9);
  sub_100032594((uint64_t)v8);
  sub_10000C788((uint64_t)v9, &qword_1000A6CC0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_100030314(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  sub_100004BB0(&qword_1000A6C90);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  uint64_t v4 = sub_100004BB0(&qword_1000A6C98);
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v5 = sub_100083D80();
  v3[18] = v5;
  v3[19] = *(void *)(v5 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  sub_100004BB0(&qword_1000A6CA0);
  v3[23] = swift_task_alloc();
  return _swift_task_switch(sub_1000304E0, v2, 0);
}

uint64_t sub_1000304E0()
{
  *(void *)(v0 + 192) = *(void *)(*(void *)(*(void *)(v0 + 80) + 112) + 16);
  return _swift_task_switch(sub_10003050C, 0, 0);
}

uint64_t sub_10003050C(unint64_t a1)
{
  double v2 = *(double *)(v1 + 192) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return static Task<>.sleep(nanoseconds:)(a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 200) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000305F0;
  a1 = v3;
  return static Task<>.sleep(nanoseconds:)(a1);
}

uint64_t sub_1000305F0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 80);
    return _swift_task_switch(sub_1000307A8, v6, 0);
  }
}

uint64_t sub_1000307A8()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = v0[19];
  if (v2)
  {
    uint64_t v4 = *(void (**)(void, void, void))(v3 + 16);
    uint64_t v5 = v0[15];
    uint64_t v80 = v0[14];
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v7 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
    uint64_t v92 = *(void *)(v3 + 72);
    Swift::String v89 = (void (**)(uint64_t, void, uint64_t))(v3 + 32);
    Swift::String v90 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    unint64_t v96 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
    unint64_t v8 = (void (**)(void, void))(v3 + 8);
    uint64_t v81 = v5;
    Swift::String v88 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain();
    Swift::String v91 = v7;
    uint64_t v94 = v4;
    uint64_t v93 = v8;
    while (1)
    {
      uint64_t v11 = v0[23];
      uint64_t v12 = v0[18];
      v4(v11, v6, v12);
      Swift::String v87 = *v91;
      (*v91)(v11, 0, 1, v12);
      if ((*v90)(v11, 1, v12) == 1) {
        goto LABEL_35;
      }
      uint64_t v13 = v0[22];
      uint64_t v14 = v0[21];
      uint64_t v15 = v0[18];
      uint64_t v16 = v0[10];
      (*v89)(v13, v0[23], v15);
      uint64_t v17 = *(void *)(v16 + 112);
      v4(v14, v13, v15);
      swift_beginAccess();
      uint64_t v18 = *(void *)(v17 + 24);
      uint64_t v97 = v6;
      if (*(void *)(v18 + 16))
      {
        uint64_t v19 = v0[21];
        swift_bridgeObjectRetain();
        unint64_t v20 = sub_10006BF44(v19);
        uint64_t v22 = v0[13];
        uint64_t v21 = v0[14];
        if (v23)
        {
          sub_10000C724(*(void *)(v18 + 56) + *(void *)(v81 + 72) * v20, v0[13], &qword_1000A6C98);
          uint64_t v24 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56);
          uint64_t v25 = v22;
          uint64_t v26 = 0;
          uint64_t v27 = v21;
        }
        else
        {
          uint64_t v24 = *v96;
          uint64_t v25 = v0[13];
          uint64_t v26 = 1;
          uint64_t v27 = v0[14];
        }
        uint64_t v95 = v24;
        v24(v25, v26, 1, v27);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v95 = *v96;
        (*v96)(v0[13], 1, 1, v0[14]);
      }
      uint64_t v29 = v0[13];
      uint64_t v28 = v0[14];
      unint64_t v30 = *v93;
      (*v93)(v0[21], v0[18]);
      uint64_t v31 = *v88;
      int v32 = (*v88)(v29, 1, v28);
      uint64_t v33 = v0[22];
      if (v32 != 1) {
        break;
      }
      uint64_t v9 = v0[13];
      v30(v0[22], v0[18]);
      sub_10000C788(v9, &qword_1000A6C90);
      uint64_t v4 = v94;
      uint64_t v10 = v97;
LABEL_4:
      uint64_t v6 = v10 + v92;
      if (!--v2)
      {
        v87(v0[23], 1, 1, v0[18]);
        goto LABEL_35;
      }
    }
    long long v82 = v30;
    uint64_t v83 = v2;
    uint64_t v34 = v0[17];
    uint64_t v84 = v0[20];
    uint64_t v85 = v0[18];
    uint64_t v86 = v0[14];
    uint64_t v35 = v0[12];
    uint64_t v36 = v0[10];
    uint64_t v37 = v0[8];
    sub_1000329AC(v0[13], v34, &qword_1000A6C98);
    uint64_t v38 = v34 + *(int *)(v80 + 36);
    uint64_t v39 = sub_100084360();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v38, v37, v39);
    uint64_t v40 = *(void *)(v36 + 112);
    v94(v84, v33, v85);
    sub_10000C724(v34, v35, &qword_1000A6C98);
    v95(v35, 0, 1, v86);
    uint64_t v41 = (uint64_t *)(v40 + 24);
    swift_beginAccess();
    int v42 = v31(v35, 1, v86);
    uint64_t v43 = v0[20];
    if (v42 == 1)
    {
      uint64_t v44 = v0[12];
      swift_retain();
      sub_10000C788(v44, &qword_1000A6C90);
      swift_bridgeObjectRetain();
      unint64_t v45 = sub_10006BF44(v43);
      char v47 = v46;
      swift_bridgeObjectRelease();
      if (v47)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v49 = *v41;
        uint64_t v98 = *v41;
        *uint64_t v41 = 0x8000000000000000;
        uint64_t v4 = v94;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1000712DC();
          uint64_t v49 = v98;
        }
        uint64_t v50 = v0[11];
        Swift::String v51 = v82;
        v82(*(void *)(v49 + 48) + v45 * v92, v0[18]);
        sub_1000329AC(*(void *)(v49 + 56) + *(void *)(v81 + 72) * v45, v50, &qword_1000A6C98);
        sub_10006F978(v45, v49);
        *uint64_t v41 = v49;
        swift_bridgeObjectRelease();
        uint64_t v52 = 0;
      }
      else
      {
        uint64_t v52 = 1;
        uint64_t v4 = v94;
        Swift::String v51 = v82;
      }
      uint64_t v64 = v0[20];
      uint64_t v65 = v0[18];
      uint64_t v66 = v0[11];
      v95(v66, v52, 1, v0[14]);
      v51(v64, v65);
      sub_10000C788(v66, &qword_1000A6C90);
      goto LABEL_32;
    }
    sub_1000329AC(v0[12], v0[16], &qword_1000A6C98);
    swift_retain();
    int v53 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v54 = *(void **)(v40 + 24);
    *(void *)(v40 + 24) = 0x8000000000000000;
    unint64_t v56 = sub_10006BF44(v43);
    uint64_t v57 = v54[2];
    BOOL v58 = (v55 & 1) == 0;
    uint64_t result = v57 + v58;
    if (__OFADD__(v57, v58))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    char v60 = v55;
    if (v54[3] < result)
    {
      uint64_t v61 = v0[20];
      sub_10006E4F8(result, v53);
      unint64_t v62 = sub_10006BF44(v61);
      uint64_t v4 = v94;
      if ((v60 & 1) != (v63 & 1))
      {
        return sub_1000855C0();
      }
      unint64_t v56 = v62;
      if ((v60 & 1) == 0) {
        goto LABEL_29;
      }
LABEL_27:
      sub_100032210(v0[16], v54[7] + *(void *)(v81 + 72) * v56);
LABEL_31:
      uint64_t v73 = v0[20];
      uint64_t v74 = v0[18];
      *uint64_t v41 = (uint64_t)v54;
      swift_bridgeObjectRelease();
      Swift::String v51 = v82;
      v82(v73, v74);
LABEL_32:
      uint64_t v10 = v97;
      uint64_t v75 = v0[22];
      uint64_t v77 = v0[17];
      uint64_t v76 = v0[18];
      swift_endAccess();
      swift_release();
      v51(v75, v76);
      sub_10000C788(v77, &qword_1000A6C98);
      uint64_t v2 = v83;
      goto LABEL_4;
    }
    uint64_t v4 = v94;
    if (v53)
    {
      if (v55) {
        goto LABEL_27;
      }
    }
    else
    {
      sub_1000712DC();
      if (v60) {
        goto LABEL_27;
      }
    }
LABEL_29:
    uint64_t v67 = v0[20];
    uint64_t v68 = v0[18];
    uint64_t v69 = v0[16];
    v54[(v56 >> 6) + 8] |= 1 << v56;
    v4(v54[6] + v56 * v92, v67, v68);
    uint64_t result = sub_1000329AC(v69, v54[7] + *(void *)(v81 + 72) * v56, &qword_1000A6C98);
    uint64_t v70 = v54[2];
    BOOL v71 = __OFADD__(v70, 1);
    uint64_t v72 = v70 + 1;
    if (v71) {
      goto LABEL_42;
    }
    void v54[2] = v72;
    goto LABEL_31;
  }
  long long v78 = *(void (**)(void, uint64_t, uint64_t, void))(v3 + 56);
  swift_bridgeObjectRetain();
  v78(v0[23], 1, 1, v0[18]);
LABEL_35:
  swift_bridgeObjectRelease();
  long long v79 = (void *)swift_task_alloc();
  v0[26] = v79;
  *long long v79 = v0;
  v79[1] = sub_100030FB0;
  return sub_1000311C4();
}

uint64_t sub_100030FB0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000311C4()
{
  v1[13] = v0;
  uint64_t v2 = sub_100004BB0(&qword_1000A6C98);
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_100031288, v0, 0);
}

uint64_t sub_100031288()
{
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100031D28(v1, &qword_1000A6CB8, &qword_1000A6C98);
  *(void *)(v0 + 136) = v2;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_10002FC30(v3);
  *(void *)(v0 + 144) = v4;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v4 + 16);
  *(void *)(v0 + 152) = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 120);
    int64_t v8 = v2[2];
    *(void *)(v0 + 160) = v8;
    *(void *)(v0 + 168) = 0;
    uint64_t v9 = *(void **)(v0 + 144);
    if (v9[2])
    {
      *(void *)(v0 + 176) = v9[4];
      uint64_t v21 = v9[5];
      if (v8)
      {
        uint64_t v10 = (void **)(v0 + 96);
        uint64_t v11 = *(void *)(v0 + 136);
        *(void *)(v0 + 96) = _swiftEmptyArrayStorage;
        swift_unknownObjectRetain();
        sub_10006CBDC(0, v8, 0);
        uint64_t v12 = 0;
        uint64_t v13 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
        uint64_t v22 = *(void *)(v7 + 72);
        uint64_t v14 = *(void **)(v0 + 96);
        do
        {
          sub_10000C724(v13, *(void *)(v0 + 128), &qword_1000A6C98);
          swift_dynamicCast();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10006CBDC(0, v14[2] + 1, 1);
            uint64_t v14 = *v10;
          }
          unint64_t v16 = v14[2];
          unint64_t v15 = v14[3];
          if (v16 >= v15 >> 1)
          {
            sub_10006CBDC((char *)(v15 > 1), v16 + 1, 1);
            uint64_t v14 = *v10;
          }
          uint64_t v17 = *(void *)(v0 + 160);
          ++v12;
          _OWORD v14[2] = v16 + 1;
          sub_100032278((_OWORD *)(v0 + 16), &v14[4 * v16 + 4]);
          v13 += v22;
        }
        while (v12 != v17);
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v14 = _swiftEmptyArrayStorage;
      }
      *(void *)(v0 + 184) = v14;
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v20;
      *unint64_t v20 = v0;
      v20[1] = sub_100031590;
      return sub_10005627C((uint64_t)v14, ObjectType, v21);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  return result;
}

uint64_t sub_100031590()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000316BC, v1, 0);
}

uint64_t sub_1000316BC()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t result = swift_unknownObjectRelease();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    unint64_t v5 = *(void *)(v0 + 168) + 1;
    *(void *)(v0 + 168) = v5;
    uint64_t v6 = *(void *)(v0 + 144);
    if (v5 >= *(void *)(v6 + 16))
    {
      __break(1u);
    }
    else
    {
      int64_t v7 = *(void *)(v0 + 160);
      uint64_t v8 = v6 + 16 * v5;
      *(void *)(v0 + 176) = *(void *)(v8 + 32);
      uint64_t v20 = *(void *)(v8 + 40);
      if (v7)
      {
        uint64_t v9 = (void **)(v0 + 96);
        uint64_t v10 = *(void *)(v0 + 136);
        uint64_t v11 = *(void *)(v0 + 120);
        *(void *)(v0 + 96) = _swiftEmptyArrayStorage;
        swift_unknownObjectRetain();
        sub_10006CBDC(0, v7, 0);
        uint64_t v12 = 0;
        uint64_t v13 = v10 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
        uint64_t v21 = *(void *)(v11 + 72);
        uint64_t v14 = *(void **)(v0 + 96);
        do
        {
          sub_10000C724(v13, *(void *)(v0 + 128), &qword_1000A6C98);
          swift_dynamicCast();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10006CBDC(0, v14[2] + 1, 1);
            uint64_t v14 = *v9;
          }
          unint64_t v16 = v14[2];
          unint64_t v15 = v14[3];
          if (v16 >= v15 >> 1)
          {
            sub_10006CBDC((char *)(v15 > 1), v16 + 1, 1);
            uint64_t v14 = *v9;
          }
          uint64_t v17 = *(void *)(v0 + 160);
          ++v12;
          _OWORD v14[2] = v16 + 1;
          sub_100032278((_OWORD *)(v0 + 16), &v14[4 * v16 + 4]);
          v13 += v21;
        }
        while (v12 != v17);
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v14 = _swiftEmptyArrayStorage;
      }
      *(void *)(v0 + 184) = v14;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_100031590;
      return sub_10005627C((uint64_t)v14, ObjectType, v20);
    }
  }
  return result;
}

uint64_t sub_100031954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100031978, v3, 0);
}

uint64_t sub_100031978()
{
  sub_10002FEC8(*(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000319DC()
{
  *(void *)(v1 + 40) = v0;
  return _swift_task_switch(sub_1000319FC, v0, 0);
}

uint64_t sub_1000319FC()
{
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100031D28(v1, &qword_1000A6CB8, &qword_1000A6C98);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100031AA4()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100005D30;
  _OWORD v2[2] = v0;
  return _swift_task_switch(sub_100030090, v0, 0);
}

uint64_t sub_100031B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100031B6C, v3, 0);
}

uint64_t sub_100031B6C()
{
  sub_10003017C(*(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100031BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000052B8;
  return sub_100030314(a1, a2);
}

uint64_t sub_100031C74(uint64_t a1)
{
  uint64_t result = sub_100031CCC(&qword_1000A6C80, (void (*)(uint64_t))type metadata accessor for NetworkManagerMock);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100031CCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100031D14(uint64_t a1)
{
  return sub_100031D28(a1, &qword_1000A6CD8, &qword_1000A6CD0);
}

void *sub_100031D28(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  sub_100004BB0(a2);
  uint64_t v6 = *(void *)(sub_100004BB0(a3) - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v9);
  if (v7)
  {
    if ((void *)((char *)result - v8) != (void *)0x8000000000000000 || v7 != -1)
    {
      v9[2] = v3;
      v9[3] = 2 * ((uint64_t)((uint64_t)result - v8) / v7);
      uint64_t v12 = *(void *)(sub_100004BB0(a3) - 8);
      uint64_t v13 = sub_100032288(&v14, (uint64_t)v9+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v3, a1, a3);
      swift_bridgeObjectRetain();
      sub_10003258C();
      if (v13 == v3) {
        return v9;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_100031EB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100004BB0(&qword_1000A6CE8);
  uint64_t v3 = *(void *)(sub_100004BB0(&qword_1000A6CE0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = *(void *)(sub_100004BB0(&qword_1000A6CE0) - 8);
      uint64_t v10 = (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1000325E8(&v12, v10, v1, a1);
      sub_10003258C();
      if (v11 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10003202C(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_100085290();
    if (v2) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100004BB0(&qword_1000A6868);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100032A10((uint64_t)&v8, v3 + 4, v2, a1);
  uint64_t result = (void *)sub_10003258C();
  if (v6 == v2) {
    return v3;
  }
  __break(1u);
  return result;
}

void *sub_100032128(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100004BB0(&qword_1000A6CF8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_100032CFC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10003258C();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

uint64_t sub_100032210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A6C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_OWORD *sub_100032278(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100032288(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = sub_100004BB0(a5);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v36 = a4;
  uint64_t v19 = a4 + 64;
  uint64_t v18 = *(void *)(a4 + 64);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v20 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v18;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v30 = ~v33;
    *a1 = v36;
    a1[1] = v19;
    a1[2] = v30;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  int v32 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v34 = v19;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v11 + 72);
    sub_10000C724(*(void *)(v36 + 56) + v29 * v25, (uint64_t)v14, a5);
    sub_1000329AC((uint64_t)v14, (uint64_t)v17, a5);
    uint64_t result = sub_1000329AC((uint64_t)v17, a2, a5);
    if (v23 == a3) {
      goto LABEL_33;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      a3 = v23;
LABEL_33:
      a1 = v32;
      uint64_t v19 = v34;
      goto LABEL_34;
    }
    uint64_t v19 = v34;
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
LABEL_39:
    a3 = v23;
    a1 = v32;
    goto LABEL_34;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v35) {
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v35)
  {
LABEL_36:
    unint64_t v21 = 0;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_39;
    }
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10003258C()
{
  return swift_release();
}

uint64_t sub_100032594(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000325E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100004BB0(&qword_1000A6CF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BB0(&qword_1000A6CE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a4;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v33 = a4 + 64;
  uint64_t v17 = -1 << *(unsigned char *)(a4 + 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v27 = v33;
    *a1 = v37;
    a1[1] = v27;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v34 = a3;
  uint64_t v30 = v17;
  int64_t v31 = a1;
  int64_t v20 = 0;
  a3 = 0;
  uint64_t v35 = v12 + 48;
  uint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  int64_t v32 = (unint64_t)(63 - v17) >> 6;
  int64_t v29 = v32 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v22 = v21 | (v20 << 6);
  while (1)
  {
    uint64_t v26 = *(void *)(v12 + 72);
    sub_10000C724(*(void *)(v37 + 56) + v26 * v22, (uint64_t)v10, &qword_1000A6CE0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
      goto LABEL_37;
    }
    ++a3;
    sub_1000329AC((uint64_t)v10, (uint64_t)v15, &qword_1000A6CE0);
    uint64_t result = sub_1000329AC((uint64_t)v15, a2, &qword_1000A6CE0);
    if (a3 == v34)
    {
      a3 = v34;
      goto LABEL_38;
    }
    a2 += v26;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v23 >= v32) {
      goto LABEL_36;
    }
    unint64_t v24 = *(void *)(v33 + 8 * v23);
    if (!v24)
    {
      int64_t v25 = v20 + 2;
      ++v20;
      if (v23 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v25);
      if (v24) {
        goto LABEL_14;
      }
      int64_t v20 = v23 + 1;
      if (v23 + 2 >= v32) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v33 + 8 * (v23 + 2));
      if (v24)
      {
        v23 += 2;
      }
      else
      {
        int64_t v20 = v23 + 2;
        if (v23 + 3 >= v32) {
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * (v23 + 3));
        if (!v24)
        {
          int64_t v25 = v23 + 4;
          int64_t v20 = v23 + 3;
          if (v23 + 4 < v32)
          {
            unint64_t v24 = *(void *)(v33 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v23 >= v32)
                {
                  int64_t v20 = v29;
                  goto LABEL_36;
                }
                unint64_t v24 = *(void *)(v33 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v23 = v25;
            goto LABEL_21;
          }
LABEL_36:
          (*v36)(v10, 1, 1, v11);
          unint64_t v19 = 0;
LABEL_37:
          sub_10000C788((uint64_t)v10, &qword_1000A6CF0);
LABEL_38:
          uint64_t v17 = v30;
          a1 = v31;
          goto LABEL_39;
        }
        v23 += 3;
      }
    }
LABEL_21:
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v20 = v23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1000329AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004BB0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100032A10(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_100085250();
    sub_100004BB0(&qword_1000A6788);
    sub_100032EFC();
    uint64_t result = sub_1000850C0();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    unint64_t v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    *unint64_t v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  unint64_t v24 = (void *)result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1000852C0()) {
        goto LABEL_45;
      }
      swift_unknownObjectRetain();
      sub_100004BB0(&qword_1000A6788);
      swift_dynamicCast();
      uint64_t v15 = v26;
      uint64_t result = swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t v15 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = swift_retain();
    if (!v15) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_100032CFC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_100032EFC()
{
  unint64_t result = qword_1000A6790;
  if (!qword_1000A6790)
  {
    sub_10000BD00(&qword_1000A6788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6790);
  }
  return result;
}

uint64_t sub_100032F58(uint64_t a1)
{
  if (!a1) {
    return 7104878;
  }
  uint64_t v6 = a1;
  swift_errorRetain();
  swift_errorRetain();
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  sub_100004BB0(&qword_1000A5E48);
  if (swift_dynamicCast())
  {
    sub_100004C54(v4, (uint64_t)v7);
    sub_100004C6C(v7, v7[3]);
    uint64_t v2 = sub_100085530();
    swift_errorRelease();
    sub_100004CB0((uint64_t)v7);
  }
  else
  {
    uint64_t v5 = 0;
    memset(v4, 0, sizeof(v4));
    sub_10000C788((uint64_t)v4, (uint64_t *)&unk_1000A7110);
    v7[0] = a1;
    uint64_t v2 = sub_100084D20();
  }
  swift_errorRelease();
  return v2;
}

uint64_t sub_100033070()
{
  return sub_1000844F0();
}

uint64_t sub_100033078()
{
  return sub_100084500();
}

uint64_t sub_100033094()
{
  sub_100004BB0(qword_1000A6D00);
  sub_100084A40();
  return v1;
}

uint64_t sub_1000330D4()
{
  sub_100084A40();
  return v1;
}

uint64_t sub_100033110(uint64_t a1)
{
  if (qword_1000A5D98 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100084880();
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 96);
  swift_unknownObjectRetain();
  v4(v3, v2);
  swift_unknownObjectRelease();
  uint64_t v6 = sub_100084880();
  __chkstk_darwin(v6);
  sub_100004BB0(&qword_1000A6E70);
  sub_10000C360(&qword_1000A6E78, &qword_1000A6E70);
  return sub_100084B90();
}

uint64_t sub_100033338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v68 = a4;
  uint64_t v7 = sub_100004BB0(&qword_1000A6138);
  __chkstk_darwin(v7 - 8);
  uint64_t v65 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BB0(&qword_1000A6E08);
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  long long v78 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v77 = (char *)&v63 - v12;
  uint64_t v13 = sub_100004BB0(&qword_1000A6140);
  uint64_t v66 = *(void *)(v13 - 8);
  uint64_t v67 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v63 - v17;
  uint64_t v19 = sub_100004BB0(&qword_1000A6E80);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v76 = (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v63 - v22;
  uint64_t v24 = sub_100004BB0(&qword_1000A6E88);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v75 = (uint64_t)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v63 - v27;
  *(void *)uint64_t v28 = sub_100084690();
  *((void *)v28 + 1) = 0;
  v28[16] = 1;
  uint64_t v29 = *(int *)(sub_100004BB0(&qword_1000A6E90) + 44);
  uint64_t v73 = v28;
  sub_100033BD0(a2, (uint64_t)&v28[v29]);
  *(void *)uint64_t v23 = sub_100084690();
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v30 = *(int *)(sub_100004BB0(&qword_1000A6E98) + 44);
  uint64_t v74 = v23;
  sub_100034128(a2, a3, (uint64_t)&v23[v30]);
  if (qword_1000A5DA8 != -1) {
    swift_once();
  }
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a2;
  *(void *)(v31 + 24) = a3;
  long long v32 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v31 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v31 + 176) = v32;
  *(void *)(v31 + 192) = *(void *)(a1 + 160);
  long long v33 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v31 + 112) = v33;
  long long v34 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v31 + 144) = v34;
  long long v35 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v31 + 48) = v35;
  long long v36 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v31 + 80) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100039318(a1);
  sub_100084AA0();
  uint64_t v72 = v18;
  if (qword_1000A5DF0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v37 = v65;
  sub_100084450();
  uint64_t v38 = sub_100084470();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = a2;
  *(void *)(v39 + 24) = a3;
  long long v40 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v39 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v39 + 176) = v40;
  *(void *)(v39 + 192) = *(void *)(a1 + 160);
  long long v41 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v39 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v39 + 112) = v41;
  long long v42 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v39 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v39 + 144) = v42;
  long long v43 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v39 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v39 + 48) = v43;
  long long v44 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v39 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v39 + 80) = v44;
  sub_100039318(a1);
  sub_100084A90();
  uint64_t v65 = (char *)sub_1000846F0();
  LODWORD(v64) = v45;
  long long v79 = *(_OWORD *)(a1 + 32);
  sub_100004BB0(&qword_1000A6100);
  uint64_t v46 = sub_100084A70();
  char v63 = (void (*)(char *, char *, uint64_t))&v63;
  uint64_t v47 = __chkstk_darwin(v46);
  __chkstk_darwin(v47);
  sub_10000C360(&qword_1000A69E0, &qword_1000A6140);
  uint64_t v48 = v67;
  uint64_t v49 = v78;
  sub_100084980();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v50 = v66;
  uint64_t v64 = *(void (**)(char *, uint64_t))(v66 + 8);
  uint64_t v65 = (char *)(v66 + 8);
  Swift::String v51 = v16;
  BOOL v71 = v16;
  v64(v16, v48);
  uint64_t v53 = v69;
  uint64_t v52 = v70;
  uint64_t v54 = v77;
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v77, v49, v70);
  uint64_t v55 = v75;
  sub_10000C724((uint64_t)v73, v75, &qword_1000A6E88);
  uint64_t v56 = v76;
  sub_10000C724((uint64_t)v74, v76, &qword_1000A6E80);
  uint64_t v66 = *(void *)(v50 + 16);
  ((void (*)(char *, char *, uint64_t))v66)(v51, v72, v48);
  char v63 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v63(v49, v54, v52);
  uint64_t v57 = v68;
  sub_10000C724(v55, v68, &qword_1000A6E88);
  BOOL v58 = (int *)sub_100004BB0(&qword_1000A6EA0);
  sub_10000C724(v56, v57 + v58[12], &qword_1000A6E80);
  ((void (*)(uint64_t, char *, uint64_t))v66)(v57 + v58[16], v71, v48);
  uint64_t v59 = v78;
  v63((char *)(v57 + v58[20]), v78, v52);
  char v60 = *(void (**)(char *, uint64_t))(v53 + 8);
  v60(v77, v52);
  uint64_t v61 = v64;
  v64(v72, v48);
  sub_10000C788((uint64_t)v74, &qword_1000A6E80);
  sub_10000C788((uint64_t)v73, &qword_1000A6E88);
  v60(v59, v52);
  v61(v71, v48);
  sub_10000C788(v76, &qword_1000A6E80);
  return sub_10000C788(v75, &qword_1000A6E88);
}

uint64_t sub_100033BD0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v36[1] = a1;
  uint64_t v3 = sub_100004BB0(&qword_1000A6EE8);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin(v3);
  long long v43 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100004BB0(&qword_1000A6EF0);
  __chkstk_darwin(v41);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100004BB0(&qword_1000A6EF8);
  __chkstk_darwin(v42);
  uint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100004BB0(&qword_1000A6F00);
  uint64_t v9 = __chkstk_darwin(v44);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v47 = (uint64_t)v36 - v12;
  if (qword_1000A5D10 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_100084880();
  uint64_t v38 = v14;
  uint64_t v39 = v13;
  uint64_t v40 = v15;
  int v37 = v16 & 1;
  sub_1000846F0();
  v36[0] = v17;
  type metadata accessor for CarrySettingsDetailView();
  uint64_t v18 = sub_100084500();
  __chkstk_darwin(v18);
  swift_getKeyPath();
  sub_100084510();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v19 = v43;
  sub_100084C00();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = v45;
  uint64_t v21 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v6, v19, v46);
  uint64_t v23 = &v6[*(int *)(v41 + 36)];
  *(void *)uint64_t v23 = KeyPath;
  char v23[8] = 2;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
  uint64_t v24 = sub_1000849F0();
  uint64_t v25 = swift_getKeyPath();
  sub_10000C724((uint64_t)v6, (uint64_t)v8, &qword_1000A6EF0);
  uint64_t v26 = (uint64_t *)&v8[*(int *)(v42 + 36)];
  *uint64_t v26 = v25;
  v26[1] = v24;
  sub_10000C788((uint64_t)v6, &qword_1000A6EF0);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = 1;
  sub_10000C724((uint64_t)v8, (uint64_t)v11, &qword_1000A6EF8);
  uint64_t v29 = (uint64_t *)&v11[*(int *)(v44 + 36)];
  *uint64_t v29 = v27;
  v29[1] = (uint64_t)sub_10003A518;
  v29[2] = v28;
  sub_10000C788((uint64_t)v8, &qword_1000A6EF8);
  uint64_t v30 = v47;
  sub_1000329AC((uint64_t)v11, v47, &qword_1000A6F00);
  sub_10000C724(v30, (uint64_t)v11, &qword_1000A6F00);
  uint64_t v32 = v38;
  uint64_t v31 = v39;
  *(void *)a2 = v39;
  *(void *)(a2 + 8) = v32;
  char v33 = v37;
  *(unsigned char *)(a2 + 16) = v37;
  *(void *)(a2 + 24) = v40;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  uint64_t v34 = sub_100004BB0(&qword_1000A6F08);
  sub_10000C724((uint64_t)v11, a2 + *(int *)(v34 + 64), &qword_1000A6F00);
  sub_10003A38C(v31, v32, v33);
  swift_bridgeObjectRetain();
  sub_10000C788(v30, &qword_1000A6F00);
  sub_10000C788((uint64_t)v11, &qword_1000A6F00);
  sub_100039514(v31, v32, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100034128@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void v33[2] = a2;
  v33[3] = a1;
  uint64_t v4 = sub_100004BB0(&qword_1000A6EC8);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004BB0(&qword_1000A6ED0);
  __chkstk_darwin(v38);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100004BB0(&qword_1000A6ED8);
  uint64_t v9 = __chkstk_darwin(v39);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v42 = (uint64_t)v33 - v12;
  if (qword_1000A5D28 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_100084880();
  uint64_t v35 = v14;
  uint64_t v36 = v13;
  uint64_t v37 = v15;
  int v34 = v16 & 1;
  uint64_t v17 = sub_1000846F0();
  v33[0] = v18;
  v33[1] = v17;
  type metadata accessor for CarrySettingsDetailView();
  uint64_t v19 = sub_100084500();
  __chkstk_darwin(v19);
  swift_getKeyPath();
  sub_100084510();
  swift_release();
  swift_unknownObjectRelease();
  sub_100084490();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = v40;
  uint64_t v21 = v41;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v8, v6, v41);
  uint64_t v23 = &v8[*(int *)(v38 + 36)];
  *(void *)uint64_t v23 = KeyPath;
  char v23[8] = 2;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
  uint64_t v24 = sub_1000849F0();
  uint64_t v25 = swift_getKeyPath();
  sub_10000C724((uint64_t)v8, (uint64_t)v11, &qword_1000A6ED0);
  uint64_t v26 = (uint64_t *)&v11[*(int *)(v39 + 36)];
  *uint64_t v26 = v25;
  v26[1] = v24;
  sub_10000C788((uint64_t)v8, &qword_1000A6ED0);
  uint64_t v27 = v42;
  sub_1000329AC((uint64_t)v11, v42, &qword_1000A6ED8);
  sub_10000C724(v27, (uint64_t)v11, &qword_1000A6ED8);
  uint64_t v29 = v35;
  uint64_t v28 = v36;
  *(void *)a3 = v36;
  *(void *)(a3 + 8) = v29;
  char v30 = v34;
  *(unsigned char *)(a3 + 16) = v34;
  *(void *)(a3 + 24) = v37;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  uint64_t v31 = sub_100004BB0(&qword_1000A6EE0);
  sub_10000C724((uint64_t)v11, a3 + *(int *)(v31 + 64), &qword_1000A6ED8);
  sub_10003A38C(v28, v29, v30);
  swift_bridgeObjectRetain();
  sub_10000C788(v27, &qword_1000A6ED8);
  sub_10000C788((uint64_t)v11, &qword_1000A6ED8);
  sub_100039514(v28, v29, v30);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003458C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[7] = a4;
  sub_100084FC0();
  v6[10] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v6[11] = v8;
  v6[12] = v7;
  return _swift_task_switch(sub_100034628, v8, v7);
}

uint64_t sub_100034628()
{
  uint64_t v1 = v0[9];
  v0[13] = *(void *)(v0[7] + 8);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 232) + **(int **)(v1 + 232));
  swift_unknownObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[14] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10003472C;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  return v6(v4, v3);
}

uint64_t sub_10003472C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_1000348A8;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_100034848;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100034848()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000348A8()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 56);
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + 32);
  *(unsigned char *)(v0 + 128) = 1;
  sub_100004BB0(&qword_1000A6100);
  sub_100084A60();
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v2 + 16);
  *(void *)(v0 + 48) = v1;
  sub_100004BB0(&qword_1000A6E40);
  sub_100084A60();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10003498C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_100084FC0();
  v6[5] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(sub_100034A28, v8, v7);
}

uint64_t sub_100034A28()
{
  uint64_t v1 = v0[4];
  v0[8] = *(void *)(v0[2] + 8);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 248) + **(int **)(v1 + 248));
  swift_unknownObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100034B2C;
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  return v6(v4, v3);
}

uint64_t sub_100034B2C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10000A668, v3, v2);
}

uint64_t sub_100034C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000846E0();
  __chkstk_darwin(v2 - 8);
  sub_1000846D0();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  sub_1000846C0(v8);
  sub_100004BB0(&qword_1000A6E40);
  sub_100084A50();
  v9._countAndFlagsBits = sub_100032F58(v7);
  sub_1000846B0(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  sub_1000846C0(v10);
  sub_100084700();
  uint64_t result = sub_100084880();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_100034D94()
{
  if (qword_1000A5D18 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_100084880();
  __chkstk_darwin(v1);
  sub_100004BB0(&qword_1000A6DB8);
  sub_100039474();
  return sub_100084B80();
}

uint64_t sub_100034EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v117 = a4;
  uint64_t v115 = sub_100004BB0(&qword_1000A6DD8);
  __chkstk_darwin(v115);
  Swift::String v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100004BB0(&qword_1000A6DD0);
  __chkstk_darwin(v116);
  uint64_t v103 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BB0(&qword_1000A6DE0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v113 = (uint64_t)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v114 = (uint64_t *)((char *)&v97 - v13);
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))a3[17];
  swift_unknownObjectRetain();
  char v15 = v14(a2, a3);
  swift_unknownObjectRelease();
  if (v15)
  {
    uint64_t v16 = type metadata accessor for CarrySettingsDetailView();
    uint64_t v99 = v8;
    uint64_t v17 = (uint64_t (*)(uint64_t, void *))a3[24];
    swift_unknownObjectRetain();
    uint64_t v112 = v17(a2, a3);
    swift_unknownObjectRelease();
    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v119 = *(void *)(*(void *)(v16 + 24) + 8);
    uint64_t v107 = v18;
    uint64_t v19 = sub_100084500();
    __chkstk_darwin(v19);
    swift_getKeyPath();
    uint64_t v118 = a3[1];
    sub_100084510();
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v104 = *((void *)&v137 + 1);
    uint64_t v105 = v137;
    uint64_t v110 = *((void *)&v138 + 1);
    uint64_t v111 = v138;
    uint64_t v20 = swift_allocObject();
    uint64_t v109 = v20;
    *(void *)(v20 + 16) = a2;
    *(void *)(v20 + 24) = a3;
    long long v21 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v20 + 160) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v20 + 176) = v21;
    *(void *)(v20 + 192) = *(void *)(a1 + 160);
    long long v22 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v20 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v20 + 112) = v22;
    long long v23 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v20 + 128) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v20 + 144) = v23;
    long long v24 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v20 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v20 + 48) = v24;
    long long v25 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v20 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v20 + 80) = v25;
    LOBYTE(v128) = 0;
    sub_100039318(a1);
    sub_100084A40();
    int v98 = LOBYTE(v136[0]);
    uint64_t v108 = *((void *)&v136[0] + 1);
    uint64_t v102 = (uint64_t (*)(uint64_t, void *))a3[18];
    uint64_t v26 = v102;
    swift_unknownObjectRetain();
    uint64_t v106 = v26(a2, a3);
    swift_unknownObjectRelease();
    uint64_t v27 = sub_100084500();
    __chkstk_darwin(v27);
    swift_getKeyPath();
    sub_100084510();
    swift_release();
    swift_unknownObjectRelease();
    long long v101 = v137;
    uint64_t v97 = *((void *)&v138 + 1);
    uint64_t v100 = v138;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a2;
    *(void *)(v28 + 24) = a3;
    long long v29 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v28 + 160) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v28 + 176) = v29;
    *(void *)(v28 + 192) = *(void *)(a1 + 160);
    long long v30 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v28 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v28 + 112) = v30;
    long long v31 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v28 + 128) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v28 + 144) = v31;
    long long v32 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v28 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v28 + 48) = v32;
    long long v33 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v28 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v28 + 80) = v33;
    LOBYTE(v128) = 0;
    sub_100039318(a1);
    sub_100084A40();
    char v34 = v136[0];
    uint64_t v35 = *((void *)&v136[0] + 1);
    swift_unknownObjectRetain();
    uint64_t v36 = v102(a2, a3);
    swift_unknownObjectRelease();
    uint64_t v37 = *(void *)(v36 + 16);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v39 = swift_allocObject();
    *(unsigned char *)(v39 + 16) = v37 == 0;
    LOBYTE(v128) = 0;
    *((void *)&v128 + 1) = v106;
    LOBYTE(v129) = v34;
    *((void *)&v129 + 1) = v35;
    long long v130 = v101;
    *(void *)&long long v131 = v100;
    *((void *)&v131 + 1) = v97;
    LOBYTE(v132) = 0;
    *((void *)&v132 + 1) = sub_1000396D8;
    *(void *)&long long v133 = v28;
    *((void *)&v133 + 1) = sub_100035C8C;
    *(void *)&long long v134 = 0;
    *((void *)&v134 + 1) = KeyPath;
    *(void *)&long long v135 = sub_1000396FC;
    *((void *)&v135 + 1) = v39;
    uint64_t v40 = (uint64_t (*)(uint64_t, void *))a3[13];
    swift_unknownObjectRetain();
    uint64_t v102 = (uint64_t (*)(uint64_t, void *))v40(a2, a3);
    swift_unknownObjectRelease();
    uint64_t v41 = sub_100084500();
    __chkstk_darwin(v41);
    uint64_t v42 = a2;
    swift_getKeyPath();
    sub_100084510();
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v43 = *((void *)&v137 + 1);
    *(void *)&long long v101 = v137;
    uint64_t v107 = v138;
    uint64_t v44 = (uint64_t)v103;
    uint64_t v118 = *((void *)&v138 + 1);
    uint64_t v45 = swift_allocObject();
    uint64_t v119 = v45;
    *(void *)(v45 + 16) = v42;
    *(void *)(v45 + 24) = a3;
    long long v46 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v45 + 160) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v45 + 176) = v46;
    *(void *)(v45 + 192) = *(void *)(a1 + 160);
    long long v47 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v45 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v45 + 112) = v47;
    long long v48 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v45 + 128) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v45 + 144) = v48;
    long long v49 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v45 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v45 + 48) = v49;
    long long v50 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v45 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v45 + 80) = v50;
    LOBYTE(v120) = 0;
    sub_100039318(a1);
    sub_100084A40();
    LODWORD(v97) = LOBYTE(v136[0]);
    uint64_t v51 = *((void *)&v136[0] + 1);
    uint64_t v106 = *((void *)&v136[0] + 1);
    uint64_t v52 = sub_100084690();
    uint64_t v53 = v114;
    *uint64_t v114 = v52;
    v53[1] = 0;
    *((unsigned char *)v53 + 16) = 1;
    uint64_t v54 = (uint64_t)v53;
    uint64_t v55 = sub_100004BB0(&qword_1000A6DE8);
    sub_10003604C(a1, v42, (uint64_t)a3, (char *)(v54 + *(int *)(v55 + 44)));
    long long v124 = v132;
    long long v125 = v133;
    long long v126 = v134;
    long long v127 = v135;
    long long v120 = v128;
    long long v121 = v129;
    long long v122 = v130;
    long long v123 = v131;
    uint64_t v56 = v113;
    sub_10000C724(v54, v113, &qword_1000A6DE0);
    *(unsigned char *)uint64_t v44 = 0;
    *(void *)(v44 + 8) = v112;
    *(unsigned char *)(v44 + 16) = v98;
    uint64_t v58 = v104;
    uint64_t v57 = v105;
    *(void *)(v44 + 24) = v108;
    *(void *)(v44 + 32) = v57;
    uint64_t v59 = v111;
    *(void *)(v44 + 40) = v58;
    *(void *)(v44 + 48) = v59;
    *(void *)(v44 + 56) = v110;
    *(unsigned char *)(v44 + 64) = 0;
    uint64_t v60 = v109;
    *(void *)(v44 + 72) = sub_1000395F8;
    *(void *)(v44 + 80) = v60;
    long long v62 = v124;
    long long v61 = v125;
    v136[4] = v124;
    v136[5] = v125;
    long long v64 = v126;
    long long v63 = v127;
    v136[6] = v126;
    v136[7] = v127;
    long long v66 = v120;
    long long v65 = v121;
    v136[0] = v120;
    v136[1] = v121;
    long long v67 = v122;
    v136[2] = v122;
    v136[3] = v123;
    *(_OWORD *)(v44 + 152) = v123;
    *(_OWORD *)(v44 + 136) = v67;
    *(_OWORD *)(v44 + 120) = v65;
    *(_OWORD *)(v44 + 104) = v66;
    *(_OWORD *)(v44 + 216) = v63;
    *(_OWORD *)(v44 + 200) = v64;
    *(_OWORD *)(v44 + 184) = v61;
    *(void *)(v44 + 88) = sub_100035C8C;
    *(void *)(v44 + 96) = 0;
    *(_OWORD *)(v44 + 168) = v62;
    *(unsigned char *)(v44 + 232) = 0;
    *(void *)(v44 + 240) = v102;
    *(unsigned char *)(v44 + 248) = v97;
    *(void *)(v44 + 256) = v51;
    uint64_t v68 = v101;
    *(void *)(v44 + 264) = v101;
    *(void *)(v44 + 272) = v43;
    uint64_t v100 = v43;
    uint64_t v69 = v118;
    *(void *)(v44 + 280) = v107;
    *(void *)(v44 + 288) = v69;
    *(unsigned char *)(v44 + 296) = 0;
    uint64_t v70 = v119;
    *(void *)(v44 + 304) = sub_1000397D8;
    *(void *)(v44 + 312) = v70;
    *(void *)(v44 + 320) = sub_100035C8C;
    *(void *)(v44 + 328) = 0;
    uint64_t v71 = sub_100004BB0(&qword_1000A6DF0);
    sub_10000C724(v56, v44 + *(int *)(v71 + 80), &qword_1000A6DE0);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v72 = v57;
    uint64_t v73 = v57;
    uint64_t v75 = v110;
    uint64_t v74 = v111;
    sub_1000397E4(v73, v58, v111, v110, 0);
    swift_retain();
    sub_100039870((uint64_t)v136);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v76 = v43;
    uint64_t v77 = v107;
    sub_1000397E4(v68, v76, v107, v118, 0);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000397E4(v72, v58, v74, v75, 0);
    swift_retain();
    sub_100039870((uint64_t)&v128);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v78 = v100;
    uint64_t v79 = v118;
    sub_1000397E4(v68, v100, v77, v118, 0);
    swift_retain();
    sub_10000C788(v113, &qword_1000A6DE0);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100039924(v68, v78, v77, v79, 0);
    swift_release();
    long long v141 = v124;
    long long v142 = v125;
    long long v143 = v126;
    long long v144 = v127;
    long long v137 = v120;
    long long v138 = v121;
    long long v139 = v122;
    long long v140 = v123;
    sub_1000399AC((uint64_t)&v137);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v81 = v104;
    uint64_t v80 = v105;
    uint64_t v82 = v111;
    sub_100039924(v105, v104, v111, v75, 0);
    swift_release();
    sub_10000C724(v44, (uint64_t)v99, &qword_1000A6DD0);
    swift_storeEnumTagMultiPayload();
    sub_10000C360(&qword_1000A6DC8, &qword_1000A6DD0);
    sub_100084780();
    sub_10000C788(v44, &qword_1000A6DD0);
    sub_10000C788((uint64_t)v114, &qword_1000A6DE0);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100039924(v101, v100, v107, v118, 0);
    swift_release();
    sub_1000399AC((uint64_t)&v128);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100039924(v80, v81, v82, v110, 0);
    return swift_release();
  }
  else
  {
    uint64_t v84 = v8;
    if (qword_1000A5DC8 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v85 = sub_100084880();
    uint64_t v87 = v86;
    char v89 = v88 & 1;
    LODWORD(v137) = sub_1000847A0();
    uint64_t v90 = sub_100084870();
    uint64_t v92 = v91;
    char v94 = v93;
    uint64_t v96 = v95;
    sub_100039514(v85, v87, v89);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v84 = v90;
    *((void *)v84 + 1) = v92;
    v84[16] = v94 & 1;
    *((void *)v84 + 3) = v96;
    swift_storeEnumTagMultiPayload();
    sub_10000C360(&qword_1000A6DC8, &qword_1000A6DD0);
    return sub_100084780();
  }
}

uint64_t sub_100035AE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (qword_1000A5DF8 != -1) {
    swift_once();
  }
  uint64_t v6 = unk_1000AB930;
  uint64_t v19 = qword_1000AB928;
  char v7 = byte_1000AB938;
  uint64_t v8 = qword_1000AB940;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(a2 + 200);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1, a2);
  uint64_t v11 = v10;
  swift_unknownObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v12 = sub_100084710();
    uint64_t v11 = v13;
    uint64_t v15 = v14;
    uint64_t v17 = v16 & 1;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v17 = 0;
    uint64_t v15 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10002F154(v12, v11);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_10002F298(v12, v11);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v19;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v8;
  *(void *)(a3 + 32) = v12;
  *(void *)(a3 + 40) = v11;
  *(void *)(a3 + 48) = v17;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 56) = v15;
  return result;
}

uint64_t sub_100035C90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (qword_1000A5DE0 != -1) {
    swift_once();
  }
  uint64_t v6 = unk_1000AB8D0;
  uint64_t v19 = qword_1000AB8C8;
  char v7 = byte_1000AB8D8;
  uint64_t v8 = qword_1000AB8E0;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(a2 + 152);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1, a2);
  uint64_t v11 = v10;
  swift_unknownObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v12 = sub_100084710();
    uint64_t v11 = v13;
    uint64_t v15 = v14;
    uint64_t v17 = v16 & 1;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v17 = 0;
    uint64_t v15 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10002F154(v12, v11);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_10002F298(v12, v11);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v19;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v8;
  *(void *)(a3 + 32) = v12;
  *(void *)(a3 + 40) = v11;
  *(void *)(a3 + 48) = v17;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 56) = v15;
  return result;
}

uint64_t sub_100035E38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (qword_1000A5DB0 != -1) {
    swift_once();
  }
  uint64_t v6 = unk_1000AB810;
  uint64_t v19 = qword_1000AB808;
  char v7 = byte_1000AB818;
  uint64_t v8 = qword_1000AB820;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(a2 + 112);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1, a2);
  uint64_t v11 = v10;
  swift_unknownObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v12 = sub_100084710();
    uint64_t v11 = v13;
    uint64_t v15 = v14;
    uint64_t v17 = v16 & 1;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v17 = 0;
    uint64_t v15 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10002F154(v12, v11);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_10002F298(v12, v11);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v19;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v8;
  *(void *)(a3 + 32) = v12;
  *(void *)(a3 + 40) = v11;
  *(void *)(a3 + 48) = v17;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 56) = v15;
  return result;
}

uint64_t sub_100035FE0@<X0>(uint64_t a1@<X8>)
{
  sub_10000BD9C();
  swift_bridgeObjectRetain();
  uint64_t result = sub_100084890();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10003604C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v57 = a4;
  uint64_t v7 = sub_100004BB0(&qword_1000A6DF8);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  __chkstk_darwin(v7);
  long long v50 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BB0(&qword_1000A6E00);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v56 = (uint64_t)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (uint64_t)v42 - v12;
  uint64_t v13 = sub_100004BB0(&qword_1000A6140);
  uint64_t v46 = *(void *)(v13 - 8);
  uint64_t v47 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004BB0(&qword_1000A6E08);
  uint64_t v51 = *(void *)(v16 - 8);
  uint64_t v52 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  long long v49 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v48 = (char *)v42 - v19;
  if (qword_1000A5DA0 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  long long v21 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v20 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v20 + 176) = v21;
  *(void *)(v20 + 192) = *(void *)(a1 + 160);
  long long v22 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v20 + 112) = v22;
  long long v23 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v20 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v20 + 144) = v23;
  long long v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 48) = v24;
  long long v25 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v20 + 80) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100039318(a1);
  sub_100084AA0();
  uint64_t v44 = sub_1000846F0();
  long long v58 = *(_OWORD *)(a1 + 96);
  uint64_t v45 = sub_100004BB0(&qword_1000A6100);
  uint64_t v26 = sub_100084A70();
  uint64_t v43 = v42;
  v42[1] = v60;
  uint64_t v27 = __chkstk_darwin(v26);
  __chkstk_darwin(v27);
  sub_10000C360(&qword_1000A69E0, &qword_1000A6140);
  uint64_t v28 = v47;
  long long v29 = v49;
  sub_100084980();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v28);
  uint64_t v31 = v51;
  uint64_t v30 = v52;
  long long v32 = v48;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v29, v52);
  long long v33 = v50;
  sub_1000844A0();
  long long v59 = *(_OWORD *)(a1 + 128);
  sub_100084A50();
  uint64_t v34 = v56;
  sub_100036C2C((v58 & 1) == 0, v56);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v54);
  uint64_t v35 = v55;
  sub_1000329AC(v34, v55, &qword_1000A6E00);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v36(v29, v32, v30);
  sub_10000C724(v35, v34, &qword_1000A6E00);
  uint64_t v37 = v57;
  v36(v57, v29, v30);
  uint64_t v38 = sub_100004BB0(&qword_1000A6E10);
  uint64_t v39 = &v37[*(int *)(v38 + 48)];
  *(void *)uint64_t v39 = 0;
  v39[8] = 1;
  sub_10000C724(v34, (uint64_t)&v37[*(int *)(v38 + 64)], &qword_1000A6E00);
  sub_10000C788(v35, &qword_1000A6E00);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v31 + 8);
  v40(v32, v30);
  sub_10000C788(v34, &qword_1000A6E00);
  return ((uint64_t (*)(char *, uint64_t))v40)(v29, v30);
}

uint64_t sub_100036688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  sub_100084FC0();
  v6[16] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v6[17] = v8;
  v6[18] = v7;
  return _swift_task_switch(sub_100036724, v8, v7);
}

uint64_t sub_100036724()
{
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 104);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 128);
  *(unsigned char *)(v0 + 186) = 1;
  *(void *)(v0 + 152) = sub_100004BB0(&qword_1000A6100);
  sub_100084A60();
  *(void *)(v0 + 160) = *(void *)(v1 + 8);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v7 + 240) + **(int **)(v7 + 240));
  swift_unknownObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100036864;
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  return v6(v4, v3);
}

uint64_t sub_100036864()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100036A0C;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100036980;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100036980()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 128);
  *(unsigned char *)(v0 + 187) = 0;
  sub_100084A60();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100036A0C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(_OWORD **)(v0 + 104);
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(v0 + 48) = v2[8];
  *(unsigned char *)(v0 + 185) = 0;
  sub_100084A60();
  *(_OWORD *)(v0 + 64) = v2[6];
  *(unsigned char *)(v0 + 184) = 1;
  sub_100084A60();
  *(_OWORD *)(v0 + 80) = v2[7];
  *(void *)(v0 + 96) = v1;
  sub_100004BB0(&qword_1000A6E40);
  sub_100084A60();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100036B08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000846E0();
  __chkstk_darwin(v2 - 8);
  sub_1000846D0();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  sub_1000846C0(v8);
  sub_100004BB0(&qword_1000A6E40);
  sub_100084A50();
  v9._countAndFlagsBits = sub_100032F58(v7);
  sub_1000846B0(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  sub_1000846C0(v10);
  sub_100084700();
  uint64_t result = sub_100084880();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_100036C2C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  uint64_t v3 = sub_100004BB0(&qword_1000A6DF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BB0(&qword_1000A6E18);
  __chkstk_darwin(v7);
  Swift::String v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BB0(&qword_1000A6E20);
  __chkstk_darwin(v10);
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v13 = (char *)v16 - v12;
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  if (a1)
  {
    v14((char *)v16 - v12, (char *)v16[0], v3);
    sub_10000C724((uint64_t)v13, (uint64_t)v9, &qword_1000A6E20);
    swift_storeEnumTagMultiPayload();
    sub_100039AE8();
    sub_10000C360(&qword_1000A6E30, &qword_1000A6DF8);
    sub_100084780();
    return sub_10000C788((uint64_t)v13, &qword_1000A6E20);
  }
  else
  {
    v14(v6, (char *)v16[0], v3);
    v14(v9, v6, v3);
    swift_storeEnumTagMultiPayload();
    sub_100039AE8();
    sub_10000C360(&qword_1000A6E30, &qword_1000A6DF8);
    sub_100084780();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_100036EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  v24[1] = a2;
  uint64_t v5 = sub_100004BB0(&qword_1000A6140);
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A5DE8 != -1) {
    swift_once();
  }
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)(v8 + 16) = v9;
  *(void *)(v8 + 24) = v10;
  long long v11 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(v8 + 176) = v11;
  *(void *)(v8 + 192) = *(void *)(v3 + 160);
  long long v12 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(v8 + 112) = v12;
  long long v13 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(v8 + 144) = v13;
  long long v14 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)v3;
  *(_OWORD *)(v8 + 48) = v14;
  long long v15 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v8 + 80) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100039318(v3);
  sub_100084AA0();
  long long v27 = *(_OWORD *)(v3 + 144);
  sub_100004BB0(&qword_1000A6100);
  sub_100084A70();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v9;
  *(void *)(v16 + 24) = v10;
  long long v17 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(v16 + 160) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(v16 + 176) = v17;
  *(void *)(v16 + 192) = *(void *)(v3 + 160);
  long long v18 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(v16 + 112) = v18;
  long long v19 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(v16 + 128) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(v16 + 144) = v19;
  long long v20 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)v3;
  *(_OWORD *)(v16 + 48) = v20;
  long long v21 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v16 + 80) = v21;
  sub_100039318(v3);
  sub_10000C360(&qword_1000A69E0, &qword_1000A6140);
  sub_100039414();
  uint64_t v22 = v26;
  sub_1000849A0();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v7, v22);
}

uint64_t sub_1000371BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 176);
  swift_unknownObjectRetain();
  uint64_t v7 = v6(a1, a2);
  swift_unknownObjectRelease();
  sub_100004BB0(&qword_1000A6100);
  uint64_t result = sub_100084A70();
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v10;
  *(unsigned char *)(a3 + 24) = v11;
  return result;
}

uint64_t sub_100037270()
{
  if (qword_1000A5E00 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_100084880();
  __chkstk_darwin(v1);
  sub_100004BB0(&qword_1000A6DE0);
  sub_10000C360(&qword_1000A6E58, &qword_1000A6DE0);
  return sub_100084B80();
}

uint64_t sub_1000373F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = sub_100084690();
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  uint64_t v8 = sub_100004BB0(&qword_1000A6DE8);
  return sub_100037460(a1, a2, a3, (char *)(a4 + *(int *)(v8 + 44)));
}

uint64_t sub_100037460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v57 = a4;
  uint64_t v7 = sub_100004BB0(&qword_1000A6DF8);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  __chkstk_darwin(v7);
  long long v50 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BB0(&qword_1000A6E00);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v56 = (uint64_t)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (uint64_t)v42 - v12;
  uint64_t v13 = sub_100004BB0(&qword_1000A6140);
  uint64_t v46 = *(void *)(v13 - 8);
  uint64_t v47 = v13;
  __chkstk_darwin(v13);
  long long v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004BB0(&qword_1000A6E08);
  uint64_t v51 = *(void *)(v16 - 8);
  uint64_t v52 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  long long v49 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v48 = (char *)v42 - v19;
  if (qword_1000A5DC0 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  long long v21 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v20 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v20 + 176) = v21;
  *(void *)(v20 + 192) = *(void *)(a1 + 160);
  long long v22 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v20 + 112) = v22;
  long long v23 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v20 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v20 + 144) = v23;
  long long v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 48) = v24;
  long long v25 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v20 + 80) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100039318(a1);
  sub_100084AA0();
  uint64_t v44 = sub_1000846F0();
  long long v58 = *(_OWORD *)(a1 + 48);
  uint64_t v45 = sub_100004BB0(&qword_1000A6100);
  uint64_t v26 = sub_100084A70();
  uint64_t v43 = v42;
  v42[1] = v60;
  uint64_t v27 = __chkstk_darwin(v26);
  __chkstk_darwin(v27);
  sub_10000C360(&qword_1000A69E0, &qword_1000A6140);
  uint64_t v28 = v47;
  long long v29 = v49;
  sub_100084980();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v28);
  uint64_t v31 = v51;
  uint64_t v30 = v52;
  long long v32 = v48;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v29, v52);
  long long v33 = v50;
  sub_1000844A0();
  long long v59 = *(_OWORD *)(a1 + 80);
  sub_100084A50();
  uint64_t v34 = v56;
  sub_100036C2C((v58 & 1) == 0, v56);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v54);
  uint64_t v35 = v55;
  sub_1000329AC(v34, v55, &qword_1000A6E00);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v36(v29, v32, v30);
  sub_10000C724(v35, v34, &qword_1000A6E00);
  uint64_t v37 = v57;
  v36(v57, v29, v30);
  uint64_t v38 = sub_100004BB0(&qword_1000A6E10);
  uint64_t v39 = &v37[*(int *)(v38 + 48)];
  *(void *)uint64_t v39 = 0;
  v39[8] = 1;
  sub_10000C724(v34, (uint64_t)&v37[*(int *)(v38 + 64)], &qword_1000A6E00);
  sub_10000C788(v35, &qword_1000A6E00);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v31 + 8);
  v40(v32, v30);
  sub_10000C788(v34, &qword_1000A6E00);
  return ((uint64_t (*)(char *, uint64_t))v40)(v29, v30);
}

uint64_t sub_100037A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_100084FC0();
  sub_100039318(a1);
  uint64_t v13 = sub_100084FB0();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = &protocol witness table for MainActor;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = a3;
  long long v15 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v14 + 176) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v14 + 192) = v15;
  *(void *)(v14 + 208) = *(void *)(a1 + 160);
  long long v16 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v14 + 112) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v14 + 128) = v16;
  long long v17 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v14 + 144) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v14 + 160) = v17;
  long long v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 64) = v18;
  long long v19 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v14 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v14 + 96) = v19;
  sub_100015B60((uint64_t)v11, a5, v14);
  return swift_release();
}

uint64_t sub_100037BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  sub_100084FC0();
  v6[16] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v6[17] = v8;
  v6[18] = v7;
  return _swift_task_switch(sub_100037C8C, v8, v7);
}

uint64_t sub_100037C8C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 104);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + 80);
  *(unsigned char *)(v0 + 186) = 1;
  *(void *)(v0 + 152) = sub_100004BB0(&qword_1000A6100);
  sub_100084A60();
  *(void *)(v0 + 160) = *(void *)(v2 + 8);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 256) + **(int **)(v1 + 256));
  swift_unknownObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100037DD0;
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 120);
  return v7(v5, v4);
}

uint64_t sub_100037DD0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100037F78;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100037EEC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100037EEC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 80);
  *(unsigned char *)(v0 + 187) = 0;
  sub_100084A60();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100037F78()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(_OWORD **)(v0 + 104);
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(v0 + 48) = v2[5];
  *(unsigned char *)(v0 + 185) = 0;
  sub_100084A60();
  *(_OWORD *)(v0 + 64) = v2[3];
  *(unsigned char *)(v0 + 184) = 1;
  sub_100084A60();
  *(_OWORD *)(v0 + 80) = v2[4];
  *(void *)(v0 + 96) = v1;
  sub_100004BB0(&qword_1000A6E40);
  sub_100084A60();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100038074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v19[1] = a5;
  uint64_t v8 = sub_100004BB0(&qword_1000A6138);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000846F0();
  sub_100084460();
  uint64_t v11 = sub_100084470();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  long long v13 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v12 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v12 + 176) = v13;
  *(void *)(v12 + 192) = *(void *)(a1 + 160);
  long long v14 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v12 + 112) = v14;
  long long v15 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v12 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v12 + 144) = v15;
  long long v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v12 + 48) = v16;
  long long v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v12 + 80) = v17;
  sub_100039318(a1);
  return sub_100084A90();
}

uint64_t sub_1000381F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000846E0();
  __chkstk_darwin(v2 - 8);
  sub_1000846D0();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  sub_1000846C0(v8);
  sub_100004BB0(&qword_1000A6E40);
  sub_100084A50();
  v9._countAndFlagsBits = sub_100032F58(v7);
  sub_1000846B0(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  sub_1000846C0(v10);
  sub_100084700();
  uint64_t result = sub_100084880();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_100038314@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_100038320(*(void (**)(char *, char *))(a1 + 16), a2);
}

uint64_t sub_100038320@<X0>(void (*a1)(char *, char *)@<X1>, char *a2@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v2 = sub_100004BB0(&qword_1000A6D88);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v64 = v2;
  uint64_t v65 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  long long v62 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v59 = (uint64_t)&v45 - v6;
  uint64_t v7 = sub_100004BB0(&qword_1000A6D90);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  uint64_t v61 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  long long v63 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v53 = sub_100004BB0(&qword_1000A6D98);
  uint64_t v57 = *(void *)(v53 - 8);
  uint64_t v13 = __chkstk_darwin(v53);
  long long v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v58 = v15;
  __chkstk_darwin(v13);
  long long v17 = (char *)&v45 - v16;
  uint64_t v56 = sub_100004BB0(&qword_1000A6DA0);
  uint64_t v52 = *(void *)(v56 - 8);
  uint64_t v18 = v52;
  uint64_t v19 = __chkstk_darwin(v56);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v23 = (char *)&v45 - v22;
  uint64_t v24 = type metadata accessor for CarrySettingsDetailView();
  uint64_t v51 = v23;
  sub_100033110(v24);
  long long v49 = v17;
  sub_100037270();
  long long v48 = v12;
  sub_100034D94();
  uint64_t v25 = v59;
  sub_100036EE0(v24, v59);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  long long v50 = v21;
  uint64_t v27 = v23;
  uint64_t v28 = v56;
  v26(v21, v27, v56);
  uint64_t v54 = *(void (**)(char *, char *))(v57 + 16);
  long long v29 = v17;
  uint64_t v30 = v53;
  v54(v15, v29);
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  uint64_t v31 = v12;
  uint64_t v32 = v60;
  v47(v63, v31, v60);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
  v46(v62, v25, v64);
  long long v33 = v55;
  v26(v55, v21, v28);
  uint64_t v34 = (int *)sub_100004BB0(&qword_1000A6DA8);
  uint64_t v35 = v30;
  ((void (*)(char *, char *, uint64_t))v54)(&v33[v34[12]], v58, v30);
  uint64_t v36 = v32;
  v47(&v33[v34[16]], v63, v32);
  uint64_t v37 = v62;
  uint64_t v38 = v64;
  v46(&v33[v34[20]], (uint64_t)v62, v64);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v65 += 8;
  v39(v59, v38);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v61 + 8);
  v40(v48, v36);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v57 + 8);
  v41(v49, v35);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v43 = v56;
  v42(v51, v56);
  v39((uint64_t)v37, v64);
  v40(v63, v60);
  v41(v58, v35);
  return ((uint64_t (*)(char *, uint64_t))v42)(v50, v43);
}

uint64_t sub_10003883C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_100038314(a1, a2);
}

uint64_t String.id.getter(uint64_t a1)
{
  return a1;
}

void *sub_1000388CC()
{
  return &protocol witness table for String;
}

uint64_t sub_1000388D8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000388E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v37 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v43 = 0;
  sub_100004BB0(qword_1000A6D00);
  sub_100084A40();
  uint64_t v35 = v45;
  uint64_t v36 = v44;
  LOBYTE(v43) = 0;
  sub_100084A40();
  uint64_t v34 = v45;
  LOBYTE(v42[0]) = v44;
  LOBYTE(v43) = 0;
  sub_100084A40();
  uint64_t v33 = v45;
  LOBYTE(v41[0]) = v44;
  uint64_t v43 = 0;
  sub_100004BB0(qword_1000A6D00);
  sub_100084A40();
  uint64_t v31 = v45;
  uint64_t v32 = v44;
  LOBYTE(v43) = 0;
  sub_100084A40();
  uint64_t v30 = v45;
  LOBYTE(v40[0]) = v44;
  LOBYTE(v43) = 0;
  sub_100084A40();
  uint64_t v29 = v45;
  LOBYTE(v39[0]) = v44;
  uint64_t v43 = 0;
  sub_100004BB0(qword_1000A6D00);
  sub_100084A40();
  uint64_t v27 = v45;
  uint64_t v28 = v44;
  LOBYTE(v43) = 0;
  sub_100084A40();
  uint64_t v26 = v45;
  char v38 = v44;
  LOBYTE(v43) = 0;
  sub_100084A40();
  uint64_t v25 = v45;
  swift_unknownObjectRetain();
  uint64_t v9 = sub_1000844F0();
  uint64_t v11 = v10;
  sub_100084390();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v37;
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v13;
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_100084440();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  char v16 = v42[0];
  char v17 = v41[0];
  char v18 = v40[0];
  char v19 = v39[0];
  char v20 = v38;
  char v21 = v44;
  *(void *)a3 = v9;
  *(void *)(a3 + 8) = v11;
  uint64_t v22 = v35;
  *(void *)(a3 + 16) = v36;
  *(void *)(a3 + 24) = v22;
  *(unsigned char *)(a3 + 32) = v16;
  *(_DWORD *)(a3 + 33) = v44;
  *(_DWORD *)(a3 + 36) = *(_DWORD *)((char *)&v44 + 3);
  *(void *)(a3 + 40) = v34;
  *(unsigned char *)(a3 + 48) = v17;
  *(_DWORD *)(a3 + 49) = v43;
  *(_DWORD *)(a3 + 52) = *(_DWORD *)((char *)&v43 + 3);
  uint64_t v23 = v32;
  *(void *)(a3 + 56) = v33;
  *(void *)(a3 + 64) = v23;
  *(void *)(a3 + 72) = v31;
  *(unsigned char *)(a3 + 80) = v18;
  LODWORD(v23) = v42[0];
  *(_DWORD *)(a3 + 84) = *(_DWORD *)((char *)v42 + 3);
  *(_DWORD *)(a3 + 81) = v23;
  *(void *)(a3 + 88) = v30;
  *(unsigned char *)(a3 + 96) = v19;
  LODWORD(v23) = v41[0];
  *(_DWORD *)(a3 + 100) = *(_DWORD *)((char *)v41 + 3);
  *(_DWORD *)(a3 + 97) = v23;
  uint64_t v24 = v28;
  *(void *)(a3 + 104) = v29;
  *(void *)(a3 + 112) = v24;
  *(void *)(a3 + 120) = v27;
  *(unsigned char *)(a3 + 128) = v20;
  LODWORD(v24) = v40[0];
  *(_DWORD *)(a3 + 132) = *(_DWORD *)((char *)v40 + 3);
  *(_DWORD *)(a3 + 129) = v24;
  *(void *)(a3 + 136) = v26;
  *(unsigned char *)(a3 + 144) = v21;
  LODWORD(v24) = v39[0];
  *(_DWORD *)(a3 + 148) = *(_DWORD *)((char *)v39 + 3);
  *(_DWORD *)(a3 + 145) = v24;
  *(void *)(a3 + 152) = v25;
  *(void *)(a3 + 160) = v14;
  return result;
}

uint64_t sub_100038CC8()
{
  return swift_deallocObject();
}

uint64_t sub_100038CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 64);
}

uint64_t sub_100038CE0()
{
  swift_unknownObjectRelease();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100038D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_errorRetain();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = v9;
  *(void *)(a1 + 120) = v10;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v12 = *(void *)(a2 + 152);
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100038E98(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  swift_errorRetain();
  *(void *)(a1 + 16) = v4;
  swift_errorRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 64);
  swift_errorRetain();
  *(void *)(a1 + 64) = v5;
  swift_errorRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 112);
  swift_errorRetain();
  *(void *)(a1 + 112) = v6;
  swift_errorRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_retain();
  swift_release();
  return a1;
}

__n128 sub_10003905C(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t sub_100039098(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_errorRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_errorRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_errorRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_release();
  return a1;
}

uint64_t sub_1000391B8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100039200(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CarrySettingsDetailView()
{
  return sub_10000C880();
}

uint64_t sub_100039280()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000392C8()
{
  return sub_100084A60();
}

uint64_t sub_100039318(uint64_t a1)
{
  return a1;
}

uint64_t sub_100039408@<X0>(uint64_t a1@<X8>)
{
  return sub_1000371BC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100039414()
{
  unint64_t result = qword_1000A6DB0;
  if (!qword_1000A6DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6DB0);
  }
  return result;
}

uint64_t sub_100039468@<X0>(uint64_t a1@<X8>)
{
  return sub_100034EF8(*(void *)(v1 + 32), *(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

unint64_t sub_100039474()
{
  unint64_t result = qword_1000A6DC0;
  if (!qword_1000A6DC0)
  {
    sub_10000BD00(&qword_1000A6DB8);
    sub_10000C360(&qword_1000A6DC8, &qword_1000A6DD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6DC0);
  }
  return result;
}

uint64_t sub_100039514(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100039524@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 200))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10003956C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 208);
  swift_bridgeObjectRetain();
  return v8(v7, v6, v4, v5);
}

uint64_t sub_1000395DC()
{
  return 16;
}

__n128 sub_1000395E8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000395F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100035AE4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100039604@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 152))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10003964C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 160);
  swift_bridgeObjectRetain();
  return v8(v7, v6, v4, v5);
}

uint64_t sub_1000396BC()
{
  return 16;
}

__n128 sub_1000396C8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000396D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100035C90(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1000396EC()
{
  return swift_deallocObject();
}

unsigned char *sub_1000396FC(unsigned char *a1)
{
  return sub_10000BE48(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_100039704@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 112))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10003974C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 120);
  swift_bridgeObjectRetain();
  return v8(v7, v6, v4, v5);
}

uint64_t sub_1000397BC()
{
  return 16;
}

__n128 sub_1000397C8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000397D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100035E38(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1000397E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
}

uint64_t sub_100039870(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  char v6 = *(unsigned char *)(a1 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000397E4(v2, v3, v4, v5, v6);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100039924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  swift_release();
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000399AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  char v6 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100039924(v2, v3, v4, v5, v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100039A64()
{
  return sub_100037A9C(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_10009FEE0, (uint64_t)&unk_1000A6E50);
}

uint64_t sub_100039AA0()
{
  return sub_100038074(v0[4], v0[2], v0[3], (uint64_t)&unk_10009FEB8, (uint64_t)sub_100039BE0);
}

uint64_t sub_100039ADC@<X0>(uint64_t a1@<X8>)
{
  return sub_100036B08(a1);
}

unint64_t sub_100039AE8()
{
  unint64_t result = qword_1000A6E28;
  if (!qword_1000A6E28)
  {
    sub_10000BD00(&qword_1000A6E20);
    sub_10000C360(&qword_1000A6E30, &qword_1000A6DF8);
    sub_100039B88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6E28);
  }
  return result;
}

unint64_t sub_100039B88()
{
  unint64_t result = qword_1000A6E38;
  if (!qword_1000A6E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6E38);
  }
  return result;
}

uint64_t sub_100039BE0()
{
  return sub_100084A60();
}

uint64_t sub_100039C30(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100005D30;
  return sub_100036688(a1, v6, v7, (uint64_t)(v1 + 6), v4, v5);
}

uint64_t sub_100039CF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000373F8(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100039D08()
{
  return sub_100037A9C(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_10009FF58, (uint64_t)&unk_1000A6E68);
}

uint64_t sub_100039D44()
{
  return sub_100038074(v0[4], v0[2], v0[3], (uint64_t)&unk_10009FF30, (uint64_t)sub_100039D90);
}

uint64_t sub_100039D80@<X0>(uint64_t a1@<X8>)
{
  return sub_1000381F0(a1);
}

uint64_t sub_100039D90()
{
  return sub_100084A60();
}

uint64_t sub_100039DE0(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1000052B8;
  return sub_100037BF0(a1, v6, v7, (uint64_t)(v1 + 6), v4, v5);
}

uint64_t sub_100039EA8@<X0>(uint64_t a1@<X8>)
{
  return sub_100033338(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100039EB8()
{
  return sub_100037A9C(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1000A0020, (uint64_t)&unk_1000A6EC0);
}

uint64_t sub_100039EF8()
{
  return sub_100037A9C(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_10009FFF8, (uint64_t)&unk_1000A6EB0);
}

uint64_t sub_100039F34()
{
  return sub_100038074(v0[4], v0[2], v0[3], (uint64_t)&unk_10009FFD0, (uint64_t)sub_10003A020);
}

uint64_t sub_100039F70@<X0>(uint64_t a1@<X8>)
{
  return sub_100034C70(a1);
}

uint64_t sub_100039F80()
{
  swift_unknownObjectRelease();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10003A020()
{
  return sub_100084A60();
}

uint64_t sub_10003A070(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100005D30;
  return sub_10003498C(a1, v6, v7, (uint64_t)(v1 + 6), v4, v5);
}

uint64_t sub_10003A13C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10003A1E4(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100005D30;
  return sub_10003458C(a1, v6, v7, (uint64_t)(v1 + 6), v4, v5);
}

uint64_t sub_10003A2AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 48))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10003A2F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_bridgeObjectRetain();
  return v8(v7, v6, v4, v5);
}

uint64_t sub_10003A364()
{
  return 16;
}

__n128 sub_10003A370(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10003A38C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10003A39C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 72))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10003A3E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 80);
  swift_bridgeObjectRetain();
  return v8(v7, v6, v4, v5);
}

uint64_t sub_10003A454()
{
  return 16;
}

__n128 sub_10003A460(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10003A46C()
{
  return swift_deallocObject();
}

unint64_t sub_10003A480()
{
  unint64_t result = qword_1000A6F10;
  if (!qword_1000A6F10)
  {
    sub_10000BD00(&qword_1000A6F18);
    sub_10000C360(&qword_1000A6F20, &qword_1000A6F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6F10);
  }
  return result;
}

void *sub_10003A51C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v4[5] = a2[5];
    uint64_t v8 = *(int *)(a3 + 24);
    long long v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_100083D80();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_10003A648(uint64_t a1, uint64_t a2)
{
  sub_100004CB0(a1);
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100083D80();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_10003A6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100083D80();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t *sub_10003A798(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_10003A830(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100083D80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t *sub_10003A830(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_10003AA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100083D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_10003AAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100004CB0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100083D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_10003AB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003AB90);
}

uint64_t sub_10003AB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100083D80();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10003AC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003AC54);
}

uint64_t sub_10003AC54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100083D80();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ProfileListViewModel()
{
  uint64_t result = qword_1000A6F88;
  if (!qword_1000A6F88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003AD48()
{
  uint64_t result = sub_100083D80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10003ADEC()
{
  return sub_10003B204(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10003AE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_100083D80();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

ValueMetadata *type metadata accessor for ProfileListView()
{
  return &type metadata for ProfileListView;
}

uint64_t sub_10003AEB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003AED0()
{
  return sub_100084B60();
}

uint64_t sub_10003B004@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v6 = a1[3];
  sub_100004C6C(a1, v6);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  v7(v6, v5);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_100004C6C(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  sub_100004BB0(&qword_1000A6FE0);
  sub_10000BD9C();
  uint64_t result = sub_100084A30();
  *a2 = v4;
  return result;
}

uint64_t sub_10003B0F8()
{
  return sub_100084840();
}

uint64_t sub_10003B164()
{
  return sub_10003AED0();
}

unint64_t sub_10003B16C()
{
  unint64_t result = qword_1000A6FD0;
  if (!qword_1000A6FD0)
  {
    sub_10000BD00(&qword_1000A6FC8);
    sub_10000C360(&qword_1000A6FD8, &qword_1000A6FE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6FD0);
  }
  return result;
}

uint64_t sub_10003B204(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003B24C()
{
  return sub_10000C360(&qword_1000A6FF8, (uint64_t *)&unk_1000A7000);
}

uint64_t sub_10003B288(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  sub_10002ED64(v3, v3);
  uint64_t v4 = *(void *)(v3 - 8);
  swift_allocObject();
  uint64_t v5 = sub_100084EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_100012C10(v5);
  sub_100084F60();
  swift_getWitnessTable();
  return sub_100085070();
}

uint64_t sub_10003B3B0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = 0;
  uint64_t v23 = 0xE000000000000000;
  sub_100085340(30);
  swift_bridgeObjectRelease();
  uint64_t v22 = 0x206C656E6E616843;
  uint64_t v23 = 0xE800000000000000;
  id v9 = [a1 description];
  uint64_t v10 = sub_100084D10();
  uint64_t v12 = v11;

  v24._countAndFlagsBits = v10;
  v24._object = v12;
  sub_100084D60(v24);
  swift_bridgeObjectRelease();
  v25._object = (void *)0x800000010008AE30;
  v25._countAndFlagsBits = 0xD000000000000012;
  sub_100084D60(v25);
  id v13 = [a2 description];
  uint64_t v14 = sub_100084D10();
  char v16 = v15;

  v26._countAndFlagsBits = v14;
  v26._object = v16;
  sub_100084D60(v26);
  swift_bridgeObjectRelease();
  sub_10001E8F8(v22, v23);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  char v18 = (void *)swift_allocObject();
  void v18[2] = 0;
  v18[3] = 0;
  v18[4] = v3;
  v18[5] = a1;
  v18[6] = a2;
  swift_retain();
  id v19 = a1;
  id v20 = a2;
  sub_100015B60((uint64_t)v8, (uint64_t)&unk_1000A7148, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_10003B5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return _swift_task_switch(sub_10003B5E4, a4, 0);
}

uint64_t sub_10003B5E4()
{
  uint64_t v2 = (void *)v0[6];
  unint64_t v1 = (void *)v0[7];
  swift_beginAccess();
  id v3 = v1;
  sub_10003D9F0((uint64_t)v2, (uint64_t)v3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1000709EC, sub_10006D9C0);
  swift_endAccess();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10003B84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return _swift_task_switch(sub_10003B874, a4, 0);
}

uint64_t sub_10003B874()
{
  sub_10003B8DC(*(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10003B8DC(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  v44[0] = 0;
  v44[1] = 0xE000000000000000;
  sub_100085340(56);
  v47._countAndFlagsBits = 0x72656375646F7250;
  v47._object = (void *)0xE900000000000020;
  sub_100084D60(v47);
  id v10 = [a1 description];
  uint64_t v11 = sub_100084D10();
  id v13 = v12;

  v48._countAndFlagsBits = v11;
  v48._object = v13;
  sub_100084D60(v48);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0xD000000000000013;
  v49._object = (void *)0x800000010008AD80;
  sub_100084D60(v49);
  id v14 = [a2 description];
  uint64_t v15 = sub_100084D10();
  uint64_t v17 = v16;

  v50._countAndFlagsBits = v15;
  v50._object = v17;
  sub_100084D60(v50);
  swift_bridgeObjectRelease();
  v51._countAndFlagsBits = 0x7265626D656D202CLL;
  v51._object = (void *)0xE900000000000020;
  sub_100084D60(v51);
  id v18 = [a3 description];
  uint64_t v19 = sub_100084D10();
  char v21 = v20;

  v52._countAndFlagsBits = v19;
  v52._object = v21;
  sub_100084D60(v52);
  swift_bridgeObjectRelease();
  v53._countAndFlagsBits = 0x6E6F70736572202CLL;
  v53._object = (void *)0xEB00000000206573;
  sub_100084D60(v53);
  if (a4)
  {
    uint64_t v45 = sub_10002207C(0, &qword_1000A7130);
    uint64_t v46 = sub_10003DC30(&qword_1000A7138, &qword_1000A7130);
    v44[0] = a4;
    uint64_t v22 = (void *)*sub_100004C6C(v44, v45);
    id v23 = a4;
    id v24 = [v22 description];
    uint64_t v25 = sub_100084D10();
    uint64_t v27 = v26;

    sub_100004CB0((uint64_t)v44);
  }
  else
  {
    uint64_t v27 = (void *)0xE300000000000000;
    uint64_t v25 = 7104878;
  }
  v54._countAndFlagsBits = v25;
  v54._object = v27;
  sub_100084D60(v54);
  swift_bridgeObjectRelease();
  sub_10001E8F8(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v28 = *(void *)(v5 + 400);
  id v29 = a1;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_100059B9C(v29, v28);

  swift_bridgeObjectRelease();
  if (v30)
  {
    id v31 = [a3 member];
    swift_beginAccess();
    sub_10003D9F0((uint64_t)a2, (uint64_t)v31, (void (*)(uint64_t, uint64_t, uint64_t))sub_100070BF0, sub_10006DC54);
    swift_endAccess();

    id v32 = [a3 member];
    swift_beginAccess();
    id v33 = v30;
    sub_10003D9F0((uint64_t)v33, (uint64_t)v32, (void (*)(uint64_t, uint64_t, uint64_t))sub_100070A1C, sub_10006D9DC);
    swift_endAccess();

    sub_100059C90(a4, a3);
  }
  else
  {
    sub_100085340(36);
    swift_bridgeObjectRelease();
    id v34 = v29;
    id v35 = [v34 description];
    uint64_t v36 = sub_100084D10();
    char v38 = v37;

    v55._countAndFlagsBits = v36;
    v55._object = v38;
    sub_100084D60(v55);
    swift_bridgeObjectRelease();
    type metadata accessor for BetaEnrollmentNetworkingSession();
    sub_100004BB0(&qword_1000A6680);
    sub_100084D20();
    id v39 = objc_allocWithZone((Class)CULogHandle);
    NSString v40 = sub_100084D00();
    NSString v41 = sub_100084D00();
    swift_bridgeObjectRelease();
    id v42 = [v39 initWithSubsystem:v40 category:v41];

    NSString v43 = sub_100084D00();
    [v42 ulog:60 message:v43];
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10003C0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v13;
  *id v13 = v8;
  v13[1] = sub_100005D30;
  return sub_10003C1C0(a5, a6, a7, a8, v16);
}

uint64_t sub_10003C1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[41] = a5;
  v6[42] = v5;
  v6[39] = a3;
  v6[40] = a4;
  v6[37] = a1;
  v6[38] = a2;
  sub_100004BB0(&qword_1000A70D8);
  v6[43] = swift_task_alloc();
  return _swift_task_switch(sub_10003C25C, v5, 0);
}

uint64_t sub_10003C25C()
{
  uint64_t v1 = 7104878;
  uint64_t v2 = *(void **)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v4 = *(void **)(v0 + 296);
  sub_100085340(66);
  v60._countAndFlagsBits = 0x72656375646F7250;
  v60._object = (void *)0xE900000000000020;
  sub_100084D60(v60);
  id v5 = [v4 description];
  uint64_t v6 = sub_100084D10();
  uint64_t v8 = v7;

  v61._countAndFlagsBits = v6;
  v61._object = v8;
  sub_100084D60(v61);
  swift_bridgeObjectRelease();
  v62._object = (void *)0x800000010008AD30;
  v62._countAndFlagsBits = 0xD000000000000012;
  sub_100084D60(v62);
  id v9 = [v2 description];
  uint64_t v10 = sub_100084D10();
  uint64_t v12 = v11;

  v63._countAndFlagsBits = v10;
  v63._object = v12;
  sub_100084D60(v63);
  swift_bridgeObjectRelease();
  v64._countAndFlagsBits = 0x616974696E69202CLL;
  v64._object = (void *)0xEC00000020726F74;
  sub_100084D60(v64);
  if (v3)
  {
    id v13 = *(void **)(v0 + 312);
    uint64_t v14 = sub_10002207C(0, &qword_1000A70E0);
    *(void *)(v0 + 40) = v14;
    uint64_t v15 = sub_10003DC30(&qword_1000A70E8, &qword_1000A70E0);
    *(void *)(v0 + 16) = v13;
    *(void *)(v0 + 48) = v15;
    uint64_t v16 = (void *)*sub_100004C6C((void *)(v0 + 16), v14);
    id v17 = v13;
    id v18 = [v16 description];
    uint64_t v19 = sub_100084D10();
    char v21 = v20;

    sub_100004CB0(v0 + 16);
  }
  else
  {
    char v21 = (void *)0xE300000000000000;
    uint64_t v19 = 7104878;
  }
  uint64_t v22 = *(void *)(v0 + 320);
  v65._countAndFlagsBits = v19;
  v65._object = v21;
  sub_100084D60(v65);
  swift_bridgeObjectRelease();
  v66._countAndFlagsBits = 0x656369746F6E202CLL;
  v66._object = (void *)0xE900000000000020;
  sub_100084D60(v66);
  if (v22)
  {
    id v23 = *(void **)(v0 + 320);
    uint64_t v24 = sub_10002207C(0, &qword_1000A70F0);
    *(void *)(v0 + 80) = v24;
    *(void *)(v0 + 88) = sub_10003DC30(&qword_1000A70F8, &qword_1000A70F0);
    *(void *)(v0 + 56) = v23;
    uint64_t v25 = (void *)*sub_100004C6C((void *)(v0 + 56), v24);
    id v26 = v23;
    id v27 = [v25 description];
    uint64_t v28 = sub_100084D10();
    uint64_t v30 = v29;

    sub_100004CB0(v0 + 56);
  }
  else
  {
    uint64_t v30 = (void *)0xE300000000000000;
    uint64_t v28 = 7104878;
  }
  uint64_t v31 = *(void *)(v0 + 328);
  v67._countAndFlagsBits = v28;
  v67._object = v30;
  sub_100084D60(v67);
  swift_bridgeObjectRelease();
  v68._countAndFlagsBits = 0x20726F727265202CLL;
  v68._object = (void *)0xE800000000000000;
  sub_100084D60(v68);
  if (v31)
  {
    uint64_t v32 = *(void *)(v0 + 328);
    *(void *)(v0 + 272) = v32;
    swift_errorRetain();
    swift_errorRetain();
    sub_100004BB0((uint64_t *)&unk_1000A7100);
    sub_100004BB0(&qword_1000A5E48);
    if (swift_dynamicCast())
    {
      sub_100004C54((long long *)(v0 + 136), v0 + 96);
      sub_100004C6C((void *)(v0 + 96), *(void *)(v0 + 120));
      uint64_t v1 = sub_100085530();
      id v34 = v33;
      sub_100004CB0(v0 + 96);
      swift_errorRelease();
    }
    else
    {
      *(void *)(v0 + 168) = 0;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      sub_10000C788(v0 + 136, (uint64_t *)&unk_1000A7110);
      *(void *)(v0 + 288) = v32;
      uint64_t v1 = sub_100084D20();
      id v34 = v35;
    }
  }
  else
  {
    id v34 = (void *)0xE300000000000000;
  }
  uint64_t v36 = *(void *)(v0 + 336);
  uint64_t v37 = *(void **)(v0 + 296);
  v69._countAndFlagsBits = v1;
  v69._object = v34;
  sub_100084D60(v69);
  swift_bridgeObjectRelease();
  sub_10001E8F8(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v38 = *(void *)(v36 + 400);
  id v39 = v37;
  swift_bridgeObjectRetain();
  NSString v40 = sub_100059B9C(v39, v38);
  *(void *)(v0 + 352) = v40;
  swift_bridgeObjectRelease();

  if (v40)
  {
    uint64_t v41 = *(void *)(v0 + 344);
    id v42 = [*(id *)(v0 + 304) member];
    *(void *)(v0 + 360) = v42;
    swift_beginAccess();
    NSString v43 = (void *)sub_10006D868((unint64_t)v42);
    swift_endAccess();

    swift_beginAccess();
    sub_10006D55C((uint64_t)v42, v41);
    sub_10000C788(v41, &qword_1000A70D8);
    swift_endAccess();
    swift_beginAccess();
    uint64_t v44 = (void *)sub_10006D6F8((unint64_t)v42);
    swift_endAccess();

    uint64_t v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v45;
    *uint64_t v45 = v0;
    v45[1] = sub_10003C9D0;
    return sub_10005A274();
  }
  else
  {
    Swift::String v47 = *(void **)(v0 + 296);
    sub_100085340(36);
    swift_bridgeObjectRelease();
    id v48 = v47;
    id v49 = [v48 description];
    uint64_t v50 = sub_100084D10();
    Swift::String v52 = v51;

    v70._countAndFlagsBits = v50;
    v70._object = v52;
    sub_100084D60(v70);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 280) = type metadata accessor for BetaEnrollmentNetworkingSession();
    sub_100004BB0(&qword_1000A6680);
    sub_100084D20();
    id v53 = objc_allocWithZone((Class)CULogHandle);
    NSString v54 = sub_100084D00();
    NSString v55 = sub_100084D00();
    swift_bridgeObjectRelease();
    id v56 = [v53 initWithSubsystem:v54 category:v55];

    NSString v57 = sub_100084D00();
    [v56 ulog:60 message:v57];

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    long long v58 = *(uint64_t (**)(void))(v0 + 8);
    return v58();
  }
}

uint64_t sub_10003C9D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 336);
  swift_task_dealloc();
  return _swift_task_switch(sub_10003CAE0, v1, 0);
}

uint64_t sub_10003CAE0()
{
  uint64_t v1 = *(void **)(v0 + 352);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10003CCF0(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return _swift_task_switch(sub_10003CD10, v2, 0);
}

uint64_t sub_10003CD10()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v1 = (void *)v0[3];
  sub_100085340(47);
  swift_bridgeObjectRelease();
  id v3 = [v2 description];
  uint64_t v4 = sub_100084D10();
  uint64_t v6 = v5;

  v15._countAndFlagsBits = v4;
  v15._object = v6;
  sub_100084D60(v15);
  swift_bridgeObjectRelease();
  v16._object = (void *)0x800000010008AD00;
  v16._countAndFlagsBits = 0xD000000000000022;
  sub_100084D60(v16);
  id v7 = [v1 description];
  uint64_t v8 = sub_100084D10();
  uint64_t v10 = v9;

  v17._countAndFlagsBits = v8;
  v17._object = v10;
  sub_100084D60(v17);
  swift_bridgeObjectRelease();
  sub_10001E8F8(0x72656375646F7250, 0xE900000000000020);
  swift_bridgeObjectRelease();
  id v11 = [objc_allocWithZone((Class)sub_100084160()) init];
  uint64_t v12 = (uint64_t (*)(uint64_t, id))v0[1];
  return v12(1, v11);
}

uint64_t sub_10003D014(void *a1, void *a2, void *aBlock, uint64_t a4)
{
  v4[3] = a2;
  v4[4] = a4;
  long long v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  v4[6] = v10;
  *uint64_t v10 = v4;
  v10[2] = v8;
  v10[3] = v9;
  v10[1] = sub_10003D100;
  return _swift_task_switch(sub_10003CD10, a4, 0);
}

uint64_t sub_10003D100(char a1, void *a2)
{
  id v5 = *(void (***)(void, void, void))(*v2 + 40);
  uint64_t v6 = *(void **)(*v2 + 24);
  id v7 = *(void **)(*v2 + 16);
  uint64_t v10 = *v2;
  swift_task_dealloc();
  swift_release();

  ((void (**)(void, void, void *))v5)[2](v5, a1 & 1, a2);
  _Block_release(v5);

  id v8 = *(uint64_t (**)(void))(v10 + 8);
  return v8();
}

uint64_t sub_10003D290()
{
  _Block_release(*(const void **)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10003D2E0()
{
  uint64_t v2 = (void *)v0[2];
  id v3 = (void *)v0[3];
  id v5 = (void *)v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100005D30;
  id v7 = (uint64_t (*)(void *, void *, void *, uint64_t))((char *)&dword_1000A7078 + dword_1000A7078);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_10003D3A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100005D30;
  return v6();
}

uint64_t sub_10003D470(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *id v5 = v4;
  v5[1] = sub_100005D30;
  return v7();
}

uint64_t sub_10003D540()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10003D580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100084FF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_100084FE0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000C788(a1, &qword_1000A7070);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100084FA0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10003D72C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10003D808;
  return v6(a1);
}

uint64_t sub_10003D808()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10003D900()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10003D938(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1000052B8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000A70A8 + dword_1000A70A8);
  return v6(a1, v4);
}

uint64_t sub_10003D9F0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = v4;
  uint64_t v9 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v9 < 0) {
      uint64_t v11 = *v4;
    }
    else {
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_100085460();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v6 = a4(v11, result + 1);
  }
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v6;
  *uint64_t v6 = 0x8000000000000000;
  a3(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v6 = v14;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003DABC()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_errorRelease();
  return swift_deallocObject();
}

uint64_t sub_10003DB24()
{
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_100005D30;
  uint64_t v8 = (void *)swift_task_alloc();
  v7[2] = v8;
  void *v8 = v7;
  v8[1] = sub_100005D30;
  return sub_10003C1C0(v2, v3, v4, v6, v5);
}

uint64_t sub_10003DC30(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10002207C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003DC80()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10003DCE0()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_100005D30;
  *(void *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v5;
  return _swift_task_switch(sub_10003B874, v4, 0);
}

void sub_10003DD94(void *a1, uint64_t a2, void *a3)
{
  sub_100085340(62);
  v15._countAndFlagsBits = 0x6E61684320232323;
  v15._object = (void *)0xEC000000206C656ELL;
  sub_100084D60(v15);
  id v6 = [a1 description];
  uint64_t v7 = sub_100084D10();
  uint64_t v9 = v8;

  v16._countAndFlagsBits = v7;
  v16._object = v9;
  sub_100084D60(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0xD000000000000024;
  v17._object = (void *)0x800000010008AE00;
  sub_100084D60(v17);
  v18._countAndFlagsBits = a2;
  v18._object = a3;
  sub_100084D60(v18);
  v19._countAndFlagsBits = 0x20726F727265202CLL;
  v19._object = (void *)0xE800000000000000;
  sub_100084D60(v19);
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  sub_100085440();
  type metadata accessor for BetaEnrollmentNetworkingSession();
  sub_100004BB0(&qword_1000A6680);
  sub_100084D20();
  id v10 = objc_allocWithZone((Class)CULogHandle);
  NSString v11 = sub_100084D00();
  NSString v12 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithSubsystem:v11 category:v12];

  NSString v14 = sub_100084D00();
  [v13 ulog:60 message:v14];
  swift_bridgeObjectRelease();
}

uint64_t sub_10003DFB0(void *a1, void *a2)
{
  sub_100085340(62);
  v13._countAndFlagsBits = 0x72656375646F7250;
  v13._object = (void *)0xE900000000000020;
  sub_100084D60(v13);
  id v4 = [a1 description];
  uint64_t v5 = sub_100084D10();
  uint64_t v7 = v6;

  v14._countAndFlagsBits = v5;
  v14._object = v7;
  sub_100084D60(v14);
  swift_bridgeObjectRelease();
  v15._object = (void *)0x800000010008ADD0;
  v15._countAndFlagsBits = 0xD000000000000027;
  sub_100084D60(v15);
  id v8 = [a2 description];
  uint64_t v9 = sub_100084D10();
  NSString v11 = v10;

  v16._countAndFlagsBits = v9;
  v16._object = v11;
  sub_100084D60(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x20726F727265202CLL;
  v17._object = (void *)0xE800000000000000;
  sub_100084D60(v17);
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  sub_100085440();
  sub_10001E8F8(0, 0xE000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003E130()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10003E180()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000052B8;
  *(void *)(v3 + 56) = v2;
  *(_OWORD *)(v3 + 40) = v4;
  return _swift_task_switch(sub_10003B5E4, v4, 0);
}

uint64_t sub_10003E234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return _swift_task_switch(sub_10003E258, 0, 0);
}

uint64_t sub_10003E258()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[3];
  sub_100085340(18);
  v5._object = (void *)0x800000010008AEB0;
  v5._countAndFlagsBits = 0xD000000000000010;
  sub_100084D60(v5);
  v0[2] = v2;
  sub_100085550();
  sub_10001EA38(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10003E334, v1, 0);
}

uint64_t sub_10003E334()
{
  v0[7] = *(void *)(v0[6] + 112);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10003E3E4;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  return sub_10005AE2C(v4, v2, v3);
}

uint64_t sub_10003E3E4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10003E4F4()
{
  *(void *)(v1 + 40) = v0;
  return _swift_task_switch(sub_10003E514, v0, 0);
}

uint64_t sub_10003E514()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 112);
  *(void *)(v0 + 48) = v1;
  swift_retain();
  return _swift_task_switch(sub_10003E58C, v1, 0);
}

uint64_t sub_10003E58C()
{
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100031D14(v1);
  swift_bridgeObjectRelease();
  sub_100085340(18);
  swift_bridgeObjectRelease();
  sub_100004BB0(&qword_1000A6CD0);
  v6._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v6);
  swift_bridgeObjectRelease();
  sub_10001E8F8(0xD000000000000010, 0x800000010008AE90);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_10003E6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return _swift_task_switch(sub_10003E6D4, 0, 0);
}

uint64_t sub_10003E6D4()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[3];
  sub_100085340(20);
  v5._object = (void *)0x800000010008AE70;
  v5._countAndFlagsBits = 0xD000000000000012;
  sub_100084D60(v5);
  v0[2] = v2;
  sub_100085550();
  sub_10001EA38(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10003E7B0, v1, 0);
}

uint64_t sub_10003E7B0()
{
  v0[7] = *(void *)(v0[6] + 112);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10003F2E8;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  return sub_10005B130(v4, v2, v3);
}

uint64_t sub_10003E860(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return _swift_task_switch(sub_10003E884, v2, 0);
}

uint64_t sub_10003E884()
{
  uint64_t v1 = v0[6];
  sub_100085340(40);
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v7._object = (void *)0x800000010008AE50;
  v7._countAndFlagsBits = 0xD000000000000018;
  sub_100084D60(v7);
  sub_100084360();
  sub_100085440();
  v8._countAndFlagsBits = 0x67726174206E6F20;
  v8._object = (void *)0xEC00000020737465;
  sub_100084D60(v8);
  sub_100004F00();
  v9._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v9);
  swift_bridgeObjectRelease();
  sub_10001EA38(v0[2], v0[3]);
  swift_bridgeObjectRelease();
  v0[7] = *(void *)(v1 + 112);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10003EA08;
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  return sub_10005B300(v4, v3);
}

uint64_t sub_10003EA08()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[6];
    return _swift_task_switch(sub_10003EB44, v3, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_10003EB44()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003EBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_1000052B8;
  void v8[5] = a3;
  v8[6] = v3;
  v8[3] = a1;
  v8[4] = a2;
  return _swift_task_switch(sub_10003E258, 0, 0);
}

uint64_t sub_10003EC68()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10003ED10;
  v2[5] = v0;
  return _swift_task_switch(sub_10003E514, v0, 0);
}

uint64_t sub_10003ED10(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  Swift::String v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_10003EE10()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10003EE30, v0, 0);
}

uint64_t sub_10003EE30()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_10001EA38(0x6D726177657250, 0xE700000000000000);
  uint64_t v2 = *(void *)(v1 + 112);
  *(void *)(v0 + 24) = v2;
  swift_retain();
  return _swift_task_switch(sub_10003EEC0, v2, 0);
}

uint64_t sub_10003EEC0()
{
  sub_10001E8F8(0x6D726177657250, 0xE700000000000000);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10003EF6C;
  return sub_10005E10C(0);
}

uint64_t sub_10003EF6C(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 16);
    uint64_t v6 = sub_10003F108;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 24);

    uint64_t v6 = sub_10003F0A4;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10003F0A4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003F108()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003F16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_100005D30;
  void v8[5] = a3;
  v8[6] = v3;
  v8[3] = a1;
  v8[4] = a2;
  return _swift_task_switch(sub_10003E6D4, 0, 0);
}

uint64_t sub_10003F22C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1000052B8;
  v6[5] = a2;
  v6[6] = v2;
  v6[4] = a1;
  return _swift_task_switch(sub_10003E884, v2, 0);
}

uint64_t destroy for RowContents(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 == 2)
  {
    sub_100004CB0(a1);
  }
  else if (v1 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!*(unsigned char *)(a1 + 40))
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RowContents(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 40);
  if (v4 == 2)
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = 2;
  }
  else if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 40) = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
  }
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RowContents(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10003F538(a1);
    int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 == 2)
    {
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 2;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      if (v4 == 1)
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 40) = 1;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(unsigned char *)(a1 + 40) = 0;
        swift_retain();
      }
    }
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10003F538(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for RowContents(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for RowContents(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10003F538(a1);
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RowContents(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RowContents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RowContents()
{
  return &type metadata for RowContents;
}

uint64_t destroy for RowContents.LeadingAccessoryViewType(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 3) {
    unsigned int v1 = *(_DWORD *)a1 + 3;
  }
  if (v1 == 2) {
    return sub_100004CB0(a1);
  }
  if (v1 == 1) {
    return swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t initializeWithCopy for RowContents.LeadingAccessoryViewType(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 3) {
    unsigned int v3 = *(_DWORD *)a2 + 3;
  }
  if (v3 == 2)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 2;
  }
  else if (v3 == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 40) = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t assignWithCopy for RowContents.LeadingAccessoryViewType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      sub_100004CB0(a1);
    }
    else if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 2;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      if (v5 == 1)
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 40) = 1;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(unsigned char *)(a1 + 40) = 0;
        swift_retain();
      }
    }
  }
  return a1;
}

__n128 initializeWithTake for RowContents.LeadingAccessoryViewType(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RowContents.LeadingAccessoryViewType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      sub_100004CB0(a1);
    }
    else if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      LOBYTE(v5) = 2;
    }
    else if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      LOBYTE(v5) = 0;
      *(void *)a1 = *(void *)a2;
    }
    *(unsigned char *)(a1 + 40) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RowContents.LeadingAccessoryViewType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RowContents.LeadingAccessoryViewType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10003FA00(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_10003FA1C(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RowContents.LeadingAccessoryViewType()
{
  return &type metadata for RowContents.LeadingAccessoryViewType;
}

uint64_t sub_10003FA54()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10003FA70()
{
  qword_1000AB9D0 = 0x403E000000000000;
}

uint64_t sub_10003FA80()
{
  uint64_t v0 = sub_100084A10();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unsigned int v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Image.ResizingMode.stretch(_:), v0);
  uint64_t v4 = sub_100084A20();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1000A5E20 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_1000AB9D0;
  uint64_t v6 = sub_100084BD0();
  sub_1000400CC(0.0, 1, 0.0, 1, v5, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, v5, 0, v6, v7, v4, 0, 1);
  swift_release();
  uint64_t v8 = sub_1000849F0();
  uint64_t KeyPath = swift_getKeyPath();
  v11[6] = v15[6];
  v11[7] = v15[7];
  v11[2] = v15[2];
  v11[3] = v15[3];
  v11[4] = v15[4];
  v11[5] = v15[5];
  v11[0] = v15[0];
  v11[1] = v15[1];
  uint64_t v12 = v16;
  uint64_t v13 = KeyPath;
  uint64_t v14 = v8;
  sub_100004BB0(&qword_1000A7248);
  sub_100040474();
  return sub_100084B10();
}

uint64_t sub_10003FC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100040094(a1, (uint64_t)&v15);
  if ((_BYTE)v19)
  {
    if (v19 != 1)
    {
      sub_100004C54(&v15, (uint64_t)v22);
      uint64_t v5 = v23;
      sub_100004C6C(v22, v23);
      uint64_t v4 = sub_100058D6C(v5);
      sub_100004CB0((uint64_t)v22);
      goto LABEL_6;
    }
    sub_100084A00();
  }
  uint64_t v4 = sub_10003FA80();
  swift_release();
LABEL_6:
  uint64_t v6 = sub_100084740();
  sub_10003FE18(a1, (uint64_t)&v15);
  long long v7 = v15;
  char v8 = v16;
  uint64_t v9 = v17;
  uint64_t v10 = v18;
  uint64_t v11 = v19;
  char v12 = v20;
  uint64_t v13 = v21;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  *(_OWORD *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  *(unsigned char *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = v13;
  swift_retain();
  sub_10003A38C(v7, *((uint64_t *)&v7 + 1), v8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100039514(v7, *((uint64_t *)&v7 + 1), v8);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003FE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10000BD9C();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_100084890();
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t KeyPath = swift_getKeyPath();
  if (*(void *)(a1 + 56))
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_100084890();
    uint64_t v14 = v13;
    char v16 = v15 & 1;
    sub_1000847A0();
    sub_100084870();
    sub_100039514(v12, v14, v16);
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = sub_100084B10();
  char v18 = v8 & 1;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v17;
  sub_10003A38C(v4, v6, v18);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100039514(v4, v6, v18);
  swift_release();
  return swift_bridgeObjectRelease();
}

__n128 sub_10003FFFC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100084690();
  sub_10003FC98(v1, (uint64_t)&v13);
  uint64_t v4 = v13;
  char v5 = v15;
  char v6 = v17;
  uint64_t v7 = v19;
  char v8 = v20;
  uint64_t v9 = v21;
  __n128 result = v14;
  long long v11 = v16;
  long long v12 = v18;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v4;
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 80) = v12;
  *(void *)(a1 + 96) = v7;
  *(unsigned char *)(a1 + 104) = v8;
  *(void *)(a1 + 112) = v9;
  return result;
}

uint64_t sub_100040094(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000400CC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __int16 a18)
{
  __int16 v19 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100085190();
    uint64_t v28 = (void *)sub_1000847D0();
    sub_100084370();

    __int16 v19 = a18;
  }
  sub_100084590();
  *(_OWORD *)(a9 + 72) = v33;
  *(_OWORD *)(a9 + 88) = v34;
  *(_OWORD *)(a9 + 104) = v35;
  *(_OWORD *)(a9 + 120) = v36;
  *(_OWORD *)(a9 + 24) = v30;
  *(_OWORD *)(a9 + 40) = v31;
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = a17;
  *(unsigned char *)(a9 + 16) = v19 & 1;
  *(unsigned char *)(a9 + 17) = HIBYTE(v19) & 1;
  *(_OWORD *)(a9 + 56) = v32;
  return swift_retain();
}

__n128 sub_1000402B4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100085190();
    uint64_t v23 = (void *)sub_1000847D0();
    sub_100084370();
  }
  sub_100084590();
  sub_100040648(v13, a9);
  uint64_t v24 = (_OWORD *)(a9 + *(int *)(sub_100004BB0(qword_1000A72A0) + 36));
  v24[4] = v30;
  void v24[5] = v31;
  v24[6] = v32;
  *uint64_t v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  void v24[2] = v28;
  v24[3] = v29;
  return result;
}

unint64_t sub_100040474()
{
  unint64_t result = qword_1000A7250;
  if (!qword_1000A7250)
  {
    sub_10000BD00(&qword_1000A7248);
    sub_100040514();
    sub_10000C360(&qword_1000A7278, &qword_1000A7280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7250);
  }
  return result;
}

unint64_t sub_100040514()
{
  unint64_t result = qword_1000A7258;
  if (!qword_1000A7258)
  {
    sub_10000BD00(&qword_1000A7260);
    sub_100040590();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7258);
  }
  return result;
}

unint64_t sub_100040590()
{
  unint64_t result = qword_1000A7268;
  if (!qword_1000A7268)
  {
    sub_10000BD00(&qword_1000A7270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7268);
  }
  return result;
}

uint64_t sub_10004060C()
{
  return sub_10000C360(&qword_1000A7288, &qword_1000A7290);
}

uint64_t sub_100040648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A7298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000406B0()
{
  sub_1000850F0();
  swift_getWitnessTable();
  sub_100084E00();
  return v1;
}

uint64_t sub_100040758@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t result = (*(uint64_t (**)(void, void))(*(void *)(v2 + 24) + 8))(*(void *)(v2 + 16), *(void *)(v2 + 24));
  if (v6) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = result;
  }
  BOOL v8 = __OFADD__(v4, v7);
  uint64_t v9 = v4 + v7;
  if (v8) {
    __break(1u);
  }
  else {
    *a2 = v9;
  }
  return result;
}

uint64_t sub_1000407C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

void sub_1000407D0()
{
  sub_100042340();
  if (v0 <= 0x3F)
  {
    sub_100084360();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_1000408E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_100084150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v8 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v8 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v9 = sub_100084360();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = *(void *)(v10 + 64) + 7;
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  unsigned int v16 = v15 | *(_DWORD *)(v7 + 80) & 0xF8 | v11;
  if (((v15 + ((v13 + ((v8 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 128) & ~v15) + *(void *)(v14 + 64) > 0x18
    || ((*(_DWORD *)(v14 + 80) | *(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || v16 > 7)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    char v20 = (uint64_t *)(v19 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v31 = v9;
    uint64_t v32 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v33 = *(void *)(a3 + 16);
    uint64_t v21 = ~v11;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      size_t v22 = v8;
      char v20 = a1;
      memcpy(a1, a2, v22);
    }
    else
    {
      char v20 = a1;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    unint64_t v23 = ((unint64_t)a2 + v12) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)v20 + v12) & v21, v23, v31);
    uint64_t v24 = (void *)((v13 + (((unint64_t)v20 + v12) & v21)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = (void *)((v13 + v23) & 0xFFFFFFFFFFFFFFF8);
    if (v25[1])
    {
      *uint64_t v24 = *v25;
      v24[1] = v25[1];
      void v24[2] = v25[2];
      v24[3] = v25[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
    }
    v24[4] = v25[4];
    void v24[5] = v25[5];
    v24[6] = v25[6];
    v24[7] = v25[7];
    uint64_t v27 = v25[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      char v24[8] = v25[8];
      v24[9] = v25[9];
      v24[10] = v25[10];
      v24[11] = v25[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v28 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v28;
    }
    if (v25[13])
    {
      v24[12] = v25[12];
      v24[13] = v25[13];
      v24[14] = v25[14];
      v24[15] = v25[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v29 = *((_OWORD *)v25 + 7);
      *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
      *((_OWORD *)v24 + 7) = v29;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 16))(((unint64_t)v24 + v15 + 128) & ~v15, ((unint64_t)v25 + v15 + 128) & ~v15, v33);
  }
  return v20;
}

uint64_t sub_100040C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100084150();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_100084360();
  BOOL v9 = v6 == 0;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = v10 + 8;
  uint64_t v12 = v7 + a1;
  if (v9) {
    ++v12;
  }
  unint64_t v13 = (v12 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v13, v8);
  uint64_t v14 = (void *)((*(void *)(v11 + 56) + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v14[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14[9])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v14[13])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = *(void *)(*(void *)(a2 + 16) - 8);
  unsigned int v16 = *(uint64_t (**)(unint64_t))(v15 + 8);
  unint64_t v17 = ((unint64_t)v14 + *(unsigned __int8 *)(v15 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  return v16(v17);
}

void *sub_100040E4C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100084150();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = v9;
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    uint64_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 56;
    v12(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v11 + 28);
    size_t v9 = *(void *)(v11 + 8);
  }
  if (v8) {
    size_t v13 = v9;
  }
  else {
    size_t v13 = v9 + 1;
  }
  uint64_t v14 = sub_100084360();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15 + 16;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = v13 + v17;
  unint64_t v19 = ((unint64_t)a1 + v13 + v17) & ~v17;
  unint64_t v20 = ((unint64_t)a2 + v18) & ~v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 16))(v19, v20, v14);
  uint64_t v21 = *(void *)(v16 + 48) + 7;
  unint64_t v22 = (v21 + v19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v21 + v20) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v23 + 8))
  {
    *(void *)unint64_t v22 = *(void *)v23;
    *(void *)(v22 + 8) = *(void *)(v23 + 8);
    *(void *)(v22 + 16) = *(void *)(v23 + 16);
    *(void *)(v22 + 24) = *(void *)(v23 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v24 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v24;
  }
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(v22 + 40) = *(void *)(v23 + 40);
  *(void *)(v22 + 48) = *(void *)(v23 + 48);
  *(void *)(v22 + 56) = *(void *)(v23 + 56);
  uint64_t v25 = *(void *)(v23 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v25)
  {
    long long v26 = *(_OWORD *)(v23 + 80);
    *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
    *(_OWORD *)(v22 + 80) = v26;
    if (*(void *)(v23 + 104)) {
      goto LABEL_15;
    }
LABEL_17:
    long long v27 = *(_OWORD *)(v23 + 112);
    *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
    *(_OWORD *)(v22 + 112) = v27;
    goto LABEL_18;
  }
  *(void *)(v22 + 64) = *(void *)(v23 + 64);
  *(void *)(v22 + 72) = *(void *)(v23 + 72);
  *(void *)(v22 + 80) = *(void *)(v23 + 80);
  *(void *)(v22 + 88) = *(void *)(v23 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(v23 + 104)) {
    goto LABEL_17;
  }
LABEL_15:
  *(void *)(v22 + 96) = *(void *)(v23 + 96);
  *(void *)(v22 + 104) = *(void *)(v23 + 104);
  *(void *)(v22 + 112) = *(void *)(v23 + 112);
  *(void *)(v22 + 120) = *(void *)(v23 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_18:
  uint64_t v28 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v28 + 16))((v22 + *(unsigned __int8 *)(v28 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80), (v23 + *(unsigned __int8 *)(v28 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  return a1;
}

void *sub_10004111C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100084150();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v14 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v15 = sub_100084360();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = v16 + 24;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v14 + v18;
  unint64_t v20 = ((unint64_t)a1 + v14 + v18) & ~v18;
  unint64_t v21 = ((unint64_t)a2 + v19) & ~v18;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 24))(v20, v21, v15);
  uint64_t v22 = *(void *)(v17 + 40) + 7;
  unint64_t v23 = (void *)((v22 + v20) & 0xFFFFFFFFFFFFFFF8);
  long long v24 = (void *)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  if (v23[1])
  {
    if (v25)
    {
      *unint64_t v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23[2] = v24[2];
      void v23[3] = v24[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000C788((uint64_t)v23, qword_1000A6388);
      long long v26 = *((_OWORD *)v24 + 1);
      *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v26;
    }
  }
  else if (v25)
  {
    *unint64_t v23 = *v24;
    v23[1] = v24[1];
    v23[2] = v24[2];
    void v23[3] = v24[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *((_OWORD *)v24 + 1);
    *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v27;
  }
  unsigned char v23[4] = v24[4];
  v23[5] = v24[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[6] = v24[6];
  v23[7] = v24[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = v23 + 8;
  long long v29 = v24 + 8;
  uint64_t v30 = v24[9];
  if (v23[9])
  {
    if (v30)
    {
      char v23[8] = v24[8];
      v23[9] = v24[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23[10] = v24[10];
      v23[11] = v24[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000C788((uint64_t)(v23 + 8), qword_1000A6388);
      long long v31 = *((_OWORD *)v24 + 5);
      *uint64_t v28 = *v29;
      *((_OWORD *)v23 + 5) = v31;
    }
  }
  else if (v30)
  {
    char v23[8] = v24[8];
    v23[9] = v24[9];
    v23[10] = v24[10];
    v23[11] = v24[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *((_OWORD *)v24 + 5);
    *uint64_t v28 = *v29;
    *((_OWORD *)v23 + 5) = v32;
  }
  uint64_t v33 = v23 + 12;
  long long v34 = v24 + 12;
  uint64_t v35 = v24[13];
  if (v23[13])
  {
    if (v35)
    {
      v23[12] = v24[12];
      v23[13] = v24[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23[14] = v24[14];
      v23[15] = v24[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000C788((uint64_t)(v23 + 12), qword_1000A6388);
      long long v36 = *((_OWORD *)v24 + 7);
      *uint64_t v33 = *v34;
      *((_OWORD *)v23 + 7) = v36;
    }
  }
  else if (v35)
  {
    v23[12] = v24[12];
    v23[13] = v24[13];
    v23[14] = v24[14];
    v23[15] = v24[15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v37 = *((_OWORD *)v24 + 7);
    *uint64_t v33 = *v34;
    *((_OWORD *)v23 + 7) = v37;
  }
  uint64_t v38 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v38 + 24))(((unint64_t)v23 + *(unsigned __int8 *)(v38 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80), ((unint64_t)v24 + *(unsigned __int8 *)(v38 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  return a1;
}

void *sub_1000415B0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100084150();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = v9;
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    size_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 56;
    v12(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v11 + 28);
    size_t v9 = *(void *)(v11 + 8);
  }
  if (v8) {
    size_t v13 = v9;
  }
  else {
    size_t v13 = v9 + 1;
  }
  uint64_t v14 = sub_100084360();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15 + 32;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = v13 + v17;
  unint64_t v19 = ((unint64_t)a1 + v13 + v17) & ~v17;
  unint64_t v20 = ((unint64_t)a2 + v18) & ~v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 32))(v19, v20, v14);
  uint64_t v21 = *(void *)(v16 + 32) + 7;
  uint64_t v22 = (_OWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v23 = (long long *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  long long v24 = v23[3];
  long long v26 = *v23;
  long long v25 = v23[1];
  v22[2] = v23[2];
  void v22[3] = v24;
  *uint64_t v22 = v26;
  v22[1] = v25;
  long long v27 = v23[7];
  long long v29 = v23[4];
  long long v28 = v23[5];
  v22[6] = v23[6];
  v22[7] = v27;
  v22[4] = v29;
  v22[5] = v28;
  uint64_t v30 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v30 + 32))(((unint64_t)v22 + *(unsigned __int8 *)(v30 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), ((unint64_t)v23 + *(unsigned __int8 *)(v30 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  return a1;
}

void *sub_10004179C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100084150();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v14 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v15 = sub_100084360();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = v16 + 40;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v14 + v18;
  unint64_t v20 = ((unint64_t)a1 + v14 + v18) & ~v18;
  unint64_t v21 = ((unint64_t)a2 + v19) & ~v18;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 40))(v20, v21, v15);
  uint64_t v22 = *(void *)(v17 + 24) + 7;
  unint64_t v23 = (void *)((v22 + v20) & 0xFFFFFFFFFFFFFFF8);
  long long v24 = (void *)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  if (v23[1])
  {
    if (v24[1])
    {
      *unint64_t v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRelease();
      v23[2] = v24[2];
      void v23[3] = v24[3];
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000C788((uint64_t)v23, qword_1000A6388);
      long long v26 = *((_OWORD *)v24 + 1);
      *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v26;
    }
  }
  else
  {
    long long v25 = *((_OWORD *)v24 + 1);
    *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v25;
  }
  unsigned char v23[4] = v24[4];
  v23[5] = v24[5];
  swift_bridgeObjectRelease();
  v23[6] = v24[6];
  v23[7] = v24[7];
  swift_bridgeObjectRelease();
  long long v27 = v23 + 8;
  long long v28 = v24 + 8;
  if (v23[9])
  {
    if (v24[9])
    {
      char v23[8] = v24[8];
      v23[9] = v24[9];
      swift_bridgeObjectRelease();
      v23[10] = v24[10];
      v23[11] = v24[11];
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000C788((uint64_t)(v23 + 8), qword_1000A6388);
      long long v30 = *((_OWORD *)v24 + 5);
      *long long v27 = *v28;
      *((_OWORD *)v23 + 5) = v30;
    }
  }
  else
  {
    long long v29 = *((_OWORD *)v24 + 5);
    *long long v27 = *v28;
    *((_OWORD *)v23 + 5) = v29;
  }
  long long v31 = v23 + 12;
  long long v32 = v24 + 12;
  if (v23[13])
  {
    if (v24[13])
    {
      v23[12] = v24[12];
      v23[13] = v24[13];
      swift_bridgeObjectRelease();
      v23[14] = v24[14];
      v23[15] = v24[15];
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000C788((uint64_t)(v23 + 12), qword_1000A6388);
      long long v34 = *((_OWORD *)v24 + 7);
      *long long v31 = *v32;
      *((_OWORD *)v23 + 7) = v34;
    }
  }
  else
  {
    long long v33 = *((_OWORD *)v24 + 7);
    *long long v31 = *v32;
    *((_OWORD *)v23 + 7) = v33;
  }
  uint64_t v35 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v35 + 40))(((unint64_t)v23 + *(unsigned __int8 *)(v35 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80), ((unint64_t)v24 + *(unsigned __int8 *)(v35 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
  return a1;
}

uint64_t sub_100041B54(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_100084150();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(sub_100084360() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = *(void *)(v10 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v14 + 80);
  if (v13 <= v15) {
    unsigned int v19 = *(_DWORD *)(v14 + 84);
  }
  else {
    unsigned int v19 = v13;
  }
  if (v19 <= 0x7FFFFFFF) {
    unsigned int v20 = 0x7FFFFFFF;
  }
  else {
    unsigned int v20 = v19;
  }
  if (v8) {
    uint64_t v21 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v7 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v22 = v21 + v16;
  uint64_t v23 = v17 + 7;
  uint64_t v24 = v18 + 128;
  if (a2 > v20)
  {
    unint64_t v25 = ((v24 + ((v23 + (v22 & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v18) + *(void *)(v14 + 64);
    char v26 = 8 * v25;
    if (v25 > 3) {
      goto LABEL_19;
    }
    unsigned int v28 = ((a2 - v20 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v28))
    {
      int v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v28 > 0xFF)
    {
      int v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(unsigned __int16 *)((char *)a1 + v25)) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v28 >= 2)
    {
LABEL_19:
      int v27 = *((unsigned __int8 *)a1 + v25);
      if (!*((unsigned char *)a1 + v25)) {
        goto LABEL_36;
      }
LABEL_26:
      int v29 = (v27 - 1) << v26;
      if (v25 > 3) {
        int v29 = 0;
      }
      if (v25)
      {
        if (v25 <= 3) {
          int v30 = ((v24 + ((v23 + (v22 & ~v16)) & 0xFFFFFFF8)) & ~v18) + *(_DWORD *)(v14 + 64);
        }
        else {
          int v30 = 4;
        }
        switch(v30)
        {
          case 2:
            int v31 = *a1;
            break;
          case 3:
            int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v31 = *(_DWORD *)a1;
            break;
          default:
            int v31 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v31 = 0;
      }
      return v20 + (v31 | v29) + 1;
    }
  }
LABEL_36:
  if (v9 == v20)
  {
    if (v8 < 2) {
      return 0;
    }
    unsigned int v35 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
    if (v35 >= 2) {
      return v35 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v33 = ((unint64_t)a1 + v22) & ~v16;
    if (v12 == v20)
    {
      long long v34 = *(uint64_t (**)(unint64_t))(v11 + 48);
      return v34(v33);
    }
    else
    {
      unint64_t v36 = (v23 + v33) & 0xFFFFFFFFFFFFFFF8;
      if ((v19 & 0x80000000) != 0)
      {
        uint64_t v38 = *(uint64_t (**)(unint64_t, uint64_t))(v14 + 48);
        return v38((v24 + v36) & ~v18, v15);
      }
      else
      {
        unint64_t v37 = *(void *)(v36 + 40);
        if (v37 >= 0xFFFFFFFF) {
          LODWORD(v37) = -1;
        }
        return (v37 + 1);
      }
    }
  }
}

double sub_100041EDC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_100084150();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  uint64_t v12 = sub_100084360();
  int v14 = 0;
  uint64_t v15 = *(void *)(v12 - 8);
  unsigned int v16 = *(_DWORD *)(v15 + 84);
  uint64_t v17 = *(void *)(a4 + 16);
  uint64_t v18 = *(void *)(v17 - 8);
  if (v16 <= v11) {
    unsigned int v19 = v11;
  }
  else {
    unsigned int v19 = *(_DWORD *)(v15 + 84);
  }
  uint64_t v20 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v21 = *(unsigned int *)(v18 + 84);
  uint64_t v22 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v24 = *(void *)(v18 + 64);
  if (v19 <= v21) {
    unsigned int v25 = *(_DWORD *)(v18 + 84);
  }
  else {
    unsigned int v25 = v19;
  }
  if (v25 <= 0x7FFFFFFF) {
    unsigned int v26 = 0x7FFFFFFF;
  }
  else {
    unsigned int v26 = v25;
  }
  if (v10) {
    uint64_t v27 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v27 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v28 = v27 + v22;
  uint64_t v29 = *(void *)(*(void *)(v12 - 8) + 64) + 7;
  unint64_t v30 = (v29 + ((v27 + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = v23 + 128;
  size_t v32 = ((v23 + 128 + v30) & ~v23) + v24;
  if (a3 <= v26) {
    goto LABEL_24;
  }
  if (v32 <= 3)
  {
    unsigned int v33 = ((a3 - v26 + ~(-1 << (8 * v32))) >> (8 * v32)) + 1;
    if (HIWORD(v33))
    {
      int v14 = 4;
      if (v26 >= a2) {
        goto LABEL_32;
      }
LABEL_25:
      unsigned int v34 = ~v26 + a2;
      if (v32 < 4)
      {
        int v35 = (v34 >> (8 * v32)) + 1;
        if (v32)
        {
          int v36 = v34 & ~(-1 << (8 * v32));
          bzero(a1, v32);
          if (v32 == 3)
          {
            *(_WORD *)a1 = v36;
            a1[2] = BYTE2(v36);
          }
          else if (v32 == 2)
          {
            *(_WORD *)a1 = v36;
          }
          else
          {
            *a1 = v36;
          }
        }
      }
      else
      {
        bzero(a1, v32);
        *(_DWORD *)a1 = v34;
        int v35 = 1;
      }
      switch(v14)
      {
        case 1:
          a1[v32] = v35;
          break;
        case 2:
          *(_WORD *)&a1[v32] = v35;
          break;
        case 3:
LABEL_60:
          __break(1u);
          JUMPOUT(0x100042300);
        case 4:
          *(_DWORD *)&a1[v32] = v35;
          break;
        default:
          return result;
      }
      return result;
    }
    if (v33 >= 0x100) {
      int v14 = 2;
    }
    else {
      int v14 = v33 > 1;
    }
LABEL_24:
    if (v26 >= a2) {
      goto LABEL_32;
    }
    goto LABEL_25;
  }
  int v14 = 1;
  if (v26 < a2) {
    goto LABEL_25;
  }
LABEL_32:
  uint64_t v37 = ~v22;
  uint64_t v38 = ~v23;
  switch(v14)
  {
    case 1:
      a1[v32] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v32] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_37;
    case 3:
      goto LABEL_60;
    case 4:
      *(_DWORD *)&a1[v32] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (!a2) {
        return result;
      }
LABEL_37:
      if (v11 == v26)
      {
        uint64_t v39 = (a2 + 1);
        NSString v40 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v41 = a1;
        uint64_t v42 = v10;
        uint64_t v17 = v8;
LABEL_39:
        v40(v41, v39, v42, v17);
        return result;
      }
      unint64_t v43 = (unint64_t)&a1[v28] & v37;
      if (v16 != v26)
      {
        unint64_t v45 = (v29 + v43) & 0xFFFFFFFFFFFFFFF8;
        if ((v25 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0)
          {
            *(void *)(v45 + 120) = 0;
            double result = 0.0;
            *(_OWORD *)(v45 + 104) = 0u;
            *(_OWORD *)(v45 + 88) = 0u;
            *(_OWORD *)(v45 + 72) = 0u;
            *(_OWORD *)(v45 + 56) = 0u;
            *(_OWORD *)(v45 + 40) = 0u;
            *(_OWORD *)(v45 + 24) = 0u;
            *(_OWORD *)(v45 + 8) = 0u;
            *(void *)unint64_t v45 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v45 + 40) = (a2 - 1);
          }
          return result;
        }
        uint64_t v41 = (unsigned char *)((v31 + v45) & v38);
        NSString v40 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
        uint64_t v39 = a2;
        uint64_t v42 = v21;
        goto LABEL_39;
      }
      uint64_t v44 = *(void (**)(unint64_t, uint64_t))(v15 + 56);
      v44(v43, a2);
      break;
  }
  return result;
}

uint64_t _s14descr10009DEF9O11DeviceModelVMa()
{
  return sub_10000C880();
}

void sub_100042340()
{
  if (!qword_1000A7328)
  {
    sub_100084150();
    unint64_t v0 = sub_100085200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A7328);
    }
  }
}

uint64_t sub_100042398(uint64_t a1)
{
  uint64_t v2 = _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v43 = (char *)&v35 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v36 = v11;
  __chkstk_darwin(v8);
  id v49 = (char *)&v35 - v12;
  uint64_t v13 = sub_100084F60();
  uint64_t v14 = sub_100084C40();
  uint64_t v55 = v14;
  uint64_t v54 = sub_100084C50();
  swift_bridgeObjectRetain();
  if (sub_100084F50())
  {
    uint64_t v15 = 0;
    unsigned int v16 = (void (**)(char *, uint64_t *, uint64_t))(v3 + 16);
    uint64_t v39 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    Swift::String v47 = (void (**)(char *, uint64_t))(v3 + 8);
    NSString v40 = (void (**)(char *, uint64_t *, uint64_t))(v3 + 16);
    uint64_t v41 = v3;
    uint64_t v42 = a1;
    uint64_t v45 = v13;
    uint64_t v37 = v10;
    while (1)
    {
      BOOL v19 = sub_100084F10();
      sub_100084EC0();
      if (v19)
      {
        uint64_t v20 = *(void (**)(char *, uint64_t *, uint64_t))(v3 + 16);
        v20(v49, (uint64_t *)(a1+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v15), v2);
        uint64_t v21 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t result = sub_100085370();
        if (v36 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v50 = result;
        uint64_t v20 = *v16;
        (*v16)(v49, &v50, v2);
        swift_unknownObjectRelease();
        uint64_t v21 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_19:
          __break(1u);
LABEL_20:
          swift_bridgeObjectRelease();
          return v55;
        }
      }
      uint64_t v48 = v21;
      (*v39)(v10, v49, v2);
      uint64_t v22 = (uint64_t *)&v10[*(int *)(v2 + 40)];
      uint64_t v23 = v22[1];
      if (v23) {
        break;
      }
      unsigned int v26 = v20;
      uint64_t v27 = v10;
      uint64_t v28 = v43;
      v20(v43, (uint64_t *)v27, v2);
      uint64_t v29 = &v28[*(int *)(v2 + 40)];
      uint64_t v24 = *((void *)v29 + 8);
      uint64_t v23 = *((void *)v29 + 9);
      sub_10002F154(v24, v23);
      unint64_t v30 = *v47;
      (*v47)(v28, v2);
      if (v23)
      {
        uint64_t v46 = v30;
        uint64_t v44 = v26;
        swift_bridgeObjectRelease();
        uint64_t v10 = v37;
        goto LABEL_11;
      }
      uint64_t v10 = v37;
      unsigned int v16 = v40;
      v26(v38, (uint64_t *)v37, v2);
      sub_100084F40();
      v30(v10, v2);
      uint64_t v3 = v41;
      a1 = v42;
      uint64_t v17 = v48;
LABEL_4:
      ++v15;
      if (v17 == sub_100084F50()) {
        goto LABEL_20;
      }
    }
    uint64_t v24 = *v22;
    swift_bridgeObjectRetain();
    unsigned int v25 = v43;
    uint64_t v44 = v20;
    v20(v43, (uint64_t *)v10, v2);
    uint64_t v46 = *v47;
    v46(v25, v2);
LABEL_11:
    uint64_t v50 = v24;
    uint64_t v51 = v23;
    swift_bridgeObjectRetain();
    sub_100084CB0();
    swift_bridgeObjectRelease();
    uint64_t v31 = v52;
    swift_bridgeObjectRelease();
    if (!v31)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_100084C50();
      uint64_t v50 = v24;
      uint64_t v51 = v23;
      sub_100084C90();
      sub_100084CC0();
    }
    uint64_t v52 = v24;
    uint64_t v53 = v23;
    sub_100084C90();
    size_t v32 = (void (*)(uint64_t *, void))sub_100084CA0();
    if (*v33)
    {
      v44(v38, (uint64_t *)v10, v2);
      sub_100084F40();
    }
    v32(&v50, 0);
    uint64_t v3 = v41;
    a1 = v42;
    unsigned int v16 = v40;
    uint64_t v17 = v48;
    uint64_t v18 = v46;
    swift_bridgeObjectRelease();
    v18(v10, v2);
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1000428E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004BB0(&qword_1000A6BF8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100084150();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10006C4AC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v13 = *((void *)v11 + 2);
  unint64_t v12 = *((void *)v11 + 3);
  if (v13 >= v12 >> 1) {
    uint64_t v11 = sub_10006C4AC((char *)(v12 > 1), v13 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v13 + 1;
  uint64_t v14 = &v11[16 * v13];
  *((void *)v14 + 4) = 0xD000000000000019;
  *((void *)v14 + 5) = 0x800000010008AF00;
  v40[0] = a1;
  uint64_t v15 = (long long *)(v1 + *(int *)(a1 + 40));
  long long v16 = v15[5];
  long long v47 = v15[4];
  long long v48 = v16;
  long long v17 = v15[7];
  long long v49 = v15[6];
  long long v50 = v17;
  long long v18 = v15[1];
  long long v43 = *v15;
  long long v44 = v18;
  long long v19 = v15[3];
  long long v45 = v15[2];
  long long v46 = v19;
  uint64_t v20 = sub_100011B54();
  uint64_t v22 = v21;
  unint64_t v24 = *((void *)v11 + 2);
  unint64_t v23 = *((void *)v11 + 3);
  if (v24 >= v23 >> 1) {
    uint64_t v11 = sub_10006C4AC((char *)(v23 > 1), v24 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v24 + 1;
  unsigned int v25 = &v11[16 * v24];
  *((void *)v25 + 4) = v20;
  *((void *)v25 + 5) = v22;
  sub_100042CB8(v2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000C788((uint64_t)v6, &qword_1000A6BF8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    sub_100085440();
    uint64_t v26 = v41;
    unint64_t v27 = v42;
    unint64_t v29 = *((void *)v11 + 2);
    unint64_t v28 = *((void *)v11 + 3);
    if (v29 >= v28 >> 1) {
      uint64_t v11 = sub_10006C4AC((char *)(v28 > 1), v29 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v29 + 1;
    unint64_t v30 = &v11[16 * v29];
    *((void *)v30 + 4) = v26;
    *((void *)v30 + 5) = v27;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_100084360();
  sub_100085440();
  uint64_t v31 = v41;
  unint64_t v32 = v42;
  unint64_t v34 = *((void *)v11 + 2);
  unint64_t v33 = *((void *)v11 + 3);
  if (v34 >= v33 >> 1) {
    uint64_t v11 = sub_10006C4AC((char *)(v33 > 1), v34 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v34 + 1;
  uint64_t v35 = &v11[16 * v34];
  *((void *)v35 + 4) = v31;
  *((void *)v35 + 5) = v32;
  uint64_t v41 = 60;
  unint64_t v42 = 0xE100000000000000;
  v40[1] = v11;
  sub_100004BB0(&qword_1000A6378);
  sub_100011FB4();
  uint64_t v36 = sub_100084CE0();
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  v51._countAndFlagsBits = v36;
  v51._object = v38;
  sub_100084D60(v51);
  swift_bridgeObjectRelease();
  v52._countAndFlagsBits = 62;
  v52._object = (void *)0xE100000000000000;
  sub_100084D60(v52);
  return v41;
}

uint64_t sub_100042CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A6BF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void (*sub_100042D20(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_100044170(v6, a2, a3);
  return sub_100042DA0;
}

void sub_100042DA0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_100042DF4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_100083D80();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_100044290(v2, (uint64_t)v6);
  return sub_100042EE4;
}

void sub_100042EE4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t sub_100042F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a2;
  v4[11] = v3;
  v4[9] = a1;
  v4[12] = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[13] = AssociatedTypeWitness;
  v4[14] = *(void *)(AssociatedTypeWitness - 8);
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_100043040, v3, 0);
}

uint64_t sub_100043040()
{
  uint64_t v8 = v0;
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 104);
  *(void *)(v0 + 56) = *(void *)(v0 + 72);
  swift_retain();
  sub_100085350();
  swift_getAssociatedConformanceWitness();
  sub_100085500();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_unknownObjectWeakAssign();
  sub_1000329AC(v4, v0 + 40, &qword_1000A6CB0);
  *(unsigned char *)(v0 + 48) = 0;
  swift_beginAccess();
  sub_100069CF4(v0 + 40, (uint64_t)v7);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000431C0(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  uint64_t v3 = sub_100083EA0();
  v2[20] = v3;
  v2[21] = *(void *)(v3 - 8);
  v2[22] = swift_task_alloc();
  sub_100004BB0(&qword_1000A73E0);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  uint64_t v4 = sub_100083D80();
  v2[25] = v4;
  v2[26] = *(void *)(v4 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  sub_100004BB0(&qword_1000A6CA0);
  v2[30] = swift_task_alloc();
  return _swift_task_switch(sub_100043368, v1, 0);
}

uint64_t sub_100043368()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = v0[26];
  if (v2)
  {
    uint64_t v4 = v0 + 2;
    uint64_t v5 = v0 + 6;
    uint64_t v6 = v0[21];
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v7 = v3 + 16;
    uint64_t v8 = v9;
    uint64_t v10 = v1 + ((*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64));
    Swift::String v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    Swift::String v65 = (void (**)(uint64_t, void, uint64_t))(v7 + 16);
    uint64_t v66 = *(void *)(v7 + 56);
    uint64_t v11 = (void (**)(uint64_t, uint64_t))(v7 - 8);
    uint64_t v59 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v56 = v6;
    NSString v57 = (void (**)(uint64_t, void, void))(v6 + 32);
    long long v58 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    swift_bridgeObjectRetain();
    Swift::String v69 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 40);
    Swift::String v67 = v9;
    Swift::String v63 = (void (**)(uint64_t, uint64_t))(v7 - 8);
    while (1)
    {
      long long v19 = v5;
      uint64_t v20 = v0[30];
      uint64_t v21 = v0[25];
      v8(v20, v10, v21);
      Swift::String v64 = *v69;
      (*v69)(v20, 0, 1, v21);
      if ((*v68)(v20, 1, v21) == 1) {
        break;
      }
      uint64_t v72 = v10;
      uint64_t v73 = v2;
      uint64_t v22 = v0[29];
      uint64_t v24 = v0[27];
      uint64_t v23 = v0[28];
      uint64_t v25 = v0[25];
      (*v65)(v22, v0[30], v25);
      sub_100083D70();
      uint64_t v70 = sub_100083D40();
      uint64_t v74 = v26;
      uint64_t v75 = *v11;
      (*v11)(v23, v25);
      v8(v24, v22, v25);
      swift_retain();
      uint64_t v71 = sub_1000734D8(v4);
      unint64_t v27 = sub_100042DF4(v5);
      unint64_t v28 = v5;
      uint64_t v30 = v29;
      uint64_t v31 = sub_100004BB0(&qword_1000A6CE0);
      int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31);
      uint64_t v33 = v0[25];
      if (v32)
      {
        uint64_t v12 = v0[27];
        swift_bridgeObjectRelease();
        ((void (*)(void *, void))v27)(v19, 0);
        uint64_t v13 = v33;
        uint64_t v11 = v63;
        uint64_t v14 = v75;
        v75(v12, v13);
        uint64_t v5 = v28;
        uint64_t v8 = v67;
        uint64_t v16 = v72;
        uint64_t v15 = v73;
      }
      else
      {
        Swift::String v62 = (void (*)(void *, void))v27;
        uint64_t v34 = v0[28];
        uint64_t v35 = v0[24];
        uint64_t v36 = v0[20];
        swift_bridgeObjectRetain();
        sub_100083D70();
        sub_100083D40();
        uint64_t v37 = v33;
        uint64_t v11 = v63;
        v75(v34, v37);
        sub_100083E80();
        uint64_t v38 = *v59;
        (*v59)(v35, 0, 1, v36);
        Swift::String v61 = (void (*)(void))sub_100084110();
        Swift::String v60 = (void (*)(void))sub_100083E00();
        NSString v40 = v39;
        if ((*v58)(v35, 1, v36) == 1)
        {
          sub_10000C788(v0[24], &qword_1000A73E0);
          swift_bridgeObjectRetain();
          unint64_t v41 = sub_10006BE38(v70, v74);
          char v43 = v42;
          swift_bridgeObjectRelease();
          uint64_t v14 = v75;
          uint64_t v16 = v72;
          if (v43)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v76 = *v40;
            *NSString v40 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100071A94();
            }
            uint64_t v45 = v0[23];
            uint64_t v46 = v0[20];
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v56 + 32))(v45, *(void *)(v76 + 56) + *(void *)(v56 + 72) * v41, v46);
            sub_1000700B0(v41, v76);
            *NSString v40 = v76;
            swift_bridgeObjectRelease();
            uint64_t v47 = 0;
          }
          else
          {
            uint64_t v47 = 1;
          }
          uint64_t v50 = v0[23];
          v38(v50, v47, 1, v0[20]);
          swift_bridgeObjectRelease();
          sub_10000C788(v50, &qword_1000A73E0);
          uint64_t v5 = v0 + 6;
          uint64_t v8 = v67;
          uint64_t v15 = v73;
        }
        else
        {
          uint64_t v48 = v0[22];
          (*v57)(v48, v0[24], v0[20]);
          char v49 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v77 = *v40;
          *NSString v40 = 0x8000000000000000;
          sub_10007086C(v48, v70, v74, v49);
          *NSString v40 = v77;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = v0 + 6;
          uint64_t v8 = v67;
          uint64_t v16 = v72;
          uint64_t v15 = v73;
          uint64_t v14 = v75;
        }
        uint64_t v51 = v0[27];
        uint64_t v52 = v0[25];
        v60();
        v61();
        v62(v5, 0);
        v14(v51, v52);
        uint64_t v4 = v0 + 2;
      }
      ((void (*)(void *, void))v71)(v4, 0);
      uint64_t v17 = v0[29];
      uint64_t v18 = v0[25];
      swift_release();
      v14(v17, v18);
      uint64_t v10 = v16 + v66;
      uint64_t v2 = v15 - 1;
      if (!v2)
      {
        v64(v0[30], 1, 1, v0[25]);
        break;
      }
    }
  }
  else
  {
    uint64_t v53 = *(void (**)(void, uint64_t, uint64_t, void))(v3 + 56);
    swift_bridgeObjectRetain();
    v53(v0[30], 1, 1, v0[25]);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v54 = (uint64_t (*)(void))v0[1];
  return v54();
}

uint64_t sub_100043A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a2;
  v4[15] = v3;
  v4[13] = a1;
  v4[16] = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[17] = AssociatedTypeWitness;
  v4[18] = *(void *)(AssociatedTypeWitness - 8);
  v4[19] = swift_task_alloc();
  return _swift_task_switch(sub_100043AEC, v3, 0);
}

uint64_t sub_100043AEC()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  v0[12] = v0[13];
  swift_retain();
  sub_100085350();
  swift_getAssociatedConformanceWitness();
  sub_100085500();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  sub_10006D470((uint64_t)(v0 + 2), (uint64_t)(v0 + 10));
  sub_100032594((uint64_t)(v0 + 2));
  sub_10000C788((uint64_t)(v0 + 10), &qword_1000A6CC0);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100043C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1000052B8;
  return sub_100042F5C(a1, a2, a3);
}

uint64_t sub_100043D04()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100043D24, v0, 0);
}

uint64_t sub_100043D24()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_100084400();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = sub_100031EB8(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void *))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100043E00(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000052B8;
  return sub_1000431C0(a1);
}

uint64_t sub_100043E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100005D30;
  return sub_100043A08(a1, a2, a3);
}

uint64_t sub_100043F40()
{
  return _swift_task_switch(sub_100043F5C, v0, 0);
}

uint64_t sub_100043F5C()
{
  sub_10001EF98(0xD00000000000002BLL, 0x800000010008AF20);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100043FD4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_100043FF4, v1, 0);
}

uint64_t sub_100043FF4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  sub_1000735CC(v1);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100044074@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000440F4()
{
  return sub_100084410();
}

void (*sub_100044170(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_100044860(v6);
  v6[10] = sub_100044448(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_10004421C;
}

void sub_10004421C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_100044290(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = sub_100083D80();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  uint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_100044890(v4);
  v4[12] = sub_1000445E0(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_1000443B0;
}

void sub_1000443B0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_100044448(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_10006BE38(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *uint64_t v10 = v19;
        return sub_100044590;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_100071668();
      goto LABEL_7;
    }
    sub_10006EA00(v16, a4 & 1);
    unint64_t v20 = sub_10006BE38(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_1000855C0();
  __break(1u);
  return result;
}

void sub_100044590(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1000448CC(*a1, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_1000445E0(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  void *v8 = a2;
  v8[1] = v3;
  uint64_t v9 = sub_100004BB0(&qword_1000A6CF0);
  uint64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_10006BF44(a2);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = sub_100004BB0(&qword_1000A6CE0);
        uint64_t v21 = *(void *)(v20 - 8);
        sub_1000329AC(v19 + *(void *)(v21 + 72) * v13, (uint64_t)v10, &qword_1000A6CE0);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_100044800;
      }
LABEL_11:
      uint64_t v20 = sub_100004BB0(&qword_1000A6CE0);
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1000712F0();
      goto LABEL_7;
    }
    sub_10006E50C(v16, a3 & 1);
    unint64_t v23 = sub_10006BF44(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_100083D80();
  uint64_t result = (void (*)(uint64_t **))sub_1000855C0();
  __break(1u);
  return result;
}

void sub_100044800(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)(*a1)[2];
  sub_10004497C((uint64_t)v2, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_10000C788((uint64_t)v2, &qword_1000A6CF0);
  free(v2);
  free(v1);
}

uint64_t (*sub_100044860(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_100044C9C;
}

uint64_t (*sub_100044890(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1000448C0;
}

uint64_t sub_1000448C0(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1000448CC(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_100070D90(a4, a5, a6, v8, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_10006FCDC(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_10004497C(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  unint64_t v27 = a4;
  uint64_t v8 = sub_100083D80();
  uint64_t v26 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BB0(&qword_1000A6CF0);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004BB0(&qword_1000A6CE0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v24 - v19;
  sub_100044C2C(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    unint64_t result = sub_10000C788((uint64_t)v13, &qword_1000A6CF0);
    if (a2)
    {
      int64_t v22 = v27;
      swift_arrayDestroy();
      return sub_10006F984(v22, *a3);
    }
  }
  else
  {
    sub_1000329AC((uint64_t)v13, (uint64_t)v20, &qword_1000A6CE0);
    unint64_t v23 = (void *)*a3;
    if (a2)
    {
      return sub_1000329AC((uint64_t)v20, v23[7] + *(void *)(v15 + 72) * v27, &qword_1000A6CE0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v10, v25, v8);
      sub_1000329AC((uint64_t)v20, (uint64_t)v18, &qword_1000A6CE0);
      return sub_100070CA8(v27, (uint64_t)v10, (uint64_t)v18, v23);
    }
  }
  return result;
}

uint64_t sub_100044C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A6CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void destroy for LocalizedString(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for LocalizedString(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for LocalizedString(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  id v6 = v5;

  return a1;
}

__n128 initializeWithTake for LocalizedString(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LocalizedString(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedString(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedString(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedString()
{
  return &type metadata for LocalizedString;
}

unint64_t destroy for AnalyticsError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s16HPSUIViewService14AnalyticsErrorOwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for AnalyticsError(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  int v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithTake for AnalyticsError(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = a2[1];
    }
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnalyticsError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_100045118(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_10004513C(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsError()
{
  return &type metadata for AnalyticsError;
}

uint64_t destroy for SelectableRowContents(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SelectableRowContents(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v5;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SelectableRowContents(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000453B4(a1 + 32);
      long long v7 = *(_OWORD *)(a2 + 48);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 48) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 48) = v8;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000453B4(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for SelectableRowContents(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  if (!v5)
  {
    sub_1000453B4(a1 + 32);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectableRowContents(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelectableRowContents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectableRowContents()
{
  return &type metadata for SelectableRowContents;
}

uint64_t sub_10004556C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100045588@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  Swift::String v64 = a2;
  uint64_t v3 = sub_100004BB0(&qword_1000A7408);
  __chkstk_darwin(v3);
  Swift::String v60 = (uint64_t *)((char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = sub_100084860();
  uint64_t v5 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  long long v58 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100004BB0(&qword_1000A7410);
  uint64_t v7 = __chkstk_darwin(v57);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v61 = (uint64_t)&v50 - v10;
  uint64_t v11 = sub_100004BB0(&qword_1000A7418);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  Swift::String v62 = (uint64_t *)((char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v50 - v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_100084880();
  uint64_t v18 = v17;
  int v63 = v19;
  uint64_t v21 = v20;
  sub_1000329AC(a1 + 32, (uint64_t)v66, &qword_1000A7420);
  sub_1000329AC((uint64_t)v66, (uint64_t)v67, &qword_1000A7420);
  if (v67[1])
  {
    uint64_t v55 = v16;
    uint64_t v56 = v21;
    uint64_t v54 = v18;
    uint64_t v52 = v3;
    sub_100045DB4(v66);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_100084880();
    uint64_t v24 = v23;
    uint64_t v53 = v15;
    char v26 = v25 & 1;
    int v65 = sub_1000847A0();
    uint64_t v27 = sub_100084870();
    uint64_t v29 = v28;
    uint64_t v51 = v30;
    char v32 = v31 & 1;
    sub_100039514(v22, v24, v26);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v34 = v58;
    uint64_t v35 = v59;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v58, enum case for Text.TruncationMode.middle(_:), v59);
    uint64_t v36 = swift_getKeyPath();
    uint64_t v37 = v60;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v60 + *(int *)(v52 + 28), v34, v35);
    *uint64_t v37 = v36;
    sub_10000C724((uint64_t)v37, (uint64_t)&v9[*(int *)(v57 + 36)], &qword_1000A7408);
    *(void *)uint64_t v9 = v27;
    *((void *)v9 + 1) = v29;
    unsigned char v9[16] = v32;
    *((void *)v9 + 3) = v51;
    *((void *)v9 + 4) = KeyPath;
    *((void *)v9 + 5) = 0x3FE8000000000000;
    sub_10003A38C(v27, v29, v32);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10000C788((uint64_t)v37, &qword_1000A7408);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v34, v35);
    uint64_t v38 = v27;
    uint64_t v39 = v29;
    uint64_t v16 = v55;
    uint64_t v21 = v56;
    char v40 = v32;
    uint64_t v18 = v54;
    sub_100039514(v38, v39, v40);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v41 = v61;
    sub_1000329AC((uint64_t)v9, v61, &qword_1000A7410);
    sub_10000C724(v41, (uint64_t)v9, &qword_1000A7410);
    uint64_t v42 = (uint64_t)v62;
    *Swift::String v62 = 0;
    *(unsigned char *)(v42 + 8) = 1;
    uint64_t v43 = sub_100004BB0(&qword_1000A7438);
    sub_10000C724((uint64_t)v9, v42 + *(int *)(v43 + 48), &qword_1000A7410);
    sub_10000C788(v41, &qword_1000A7410);
    sub_10000C788((uint64_t)v9, &qword_1000A7410);
    uint64_t v44 = sub_100004BB0(&qword_1000A7428);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v42, 0, 1, v44);
    uint64_t v15 = v53;
    sub_1000329AC(v42, (uint64_t)v53, &qword_1000A7418);
  }
  else
  {
    uint64_t v45 = sub_100004BB0(&qword_1000A7428);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v15, 1, 1, v45);
    uint64_t v42 = (uint64_t)v62;
  }
  char v46 = v63 & 1;
  sub_10000C724((uint64_t)v15, v42, &qword_1000A7418);
  uint64_t v47 = v64;
  *Swift::String v64 = v16;
  v47[1] = v18;
  *((unsigned char *)v47 + 16) = v46;
  v47[3] = v21;
  *((_WORD *)v47 + 16) = 257;
  uint64_t v48 = sub_100004BB0(&qword_1000A7430);
  sub_10000C724(v42, (uint64_t)v47 + *(int *)(v48 + 48), &qword_1000A7418);
  sub_10003A38C(v16, v18, v46);
  swift_bridgeObjectRetain();
  sub_10000C788((uint64_t)v15, &qword_1000A7418);
  sub_10000C788(v42, &qword_1000A7418);
  sub_100039514(v16, v18, v46);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100045BDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BB0(&qword_1000A73F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = v1[3];
  void v12[2] = v1[2];
  v12[3] = v6;
  v12[4] = v1[4];
  long long v7 = v1[1];
  v12[0] = *v1;
  v12[1] = v7;
  *(void *)uint64_t v5 = sub_100084690();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v8 = sub_100004BB0(&qword_1000A73F8);
  sub_100045588((uint64_t)v12, (uint64_t *)&v5[*(int *)(v8 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000C724((uint64_t)v5, a1, &qword_1000A73F0);
  uint64_t v10 = a1 + *(int *)(sub_100004BB0(&qword_1000A7400) + 36);
  *(void *)uint64_t v10 = KeyPath;
  *(void *)(v10 + 8) = 1;
  *(unsigned char *)(v10 + 16) = 0;
  return sub_10000C788((uint64_t)v5, &qword_1000A73F0);
}

uint64_t sub_100045CEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100084660();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100045D20@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100084660();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100045D54()
{
  return sub_100084670();
}

uint64_t sub_100045D84()
{
  return sub_100084670();
}

uint64_t *sub_100045DB4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100045DE8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000845E0();
  *a1 = v3;
  return result;
}

uint64_t sub_100045E14()
{
  return sub_1000845F0();
}

uint64_t sub_100045E3C()
{
  return sub_1000845A0();
}

uint64_t sub_100045E60(uint64_t a1)
{
  uint64_t v2 = sub_100084860();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1000845B0();
}

unint64_t sub_100045F30()
{
  unint64_t result = qword_1000A7440;
  if (!qword_1000A7440)
  {
    sub_10000BD00(&qword_1000A7400);
    sub_10000C360(&qword_1000A7448, &qword_1000A73F0);
    sub_10000C360(&qword_1000A7450, qword_1000A7458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7440);
  }
  return result;
}

uint64_t sub_100045FF4()
{
  uint64_t result = sub_100084140();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1000460C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_100084140();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  unint64_t v13 = ((v8 + v11) & ~v11) + *(void *)(v10 + 64);
  uint64_t v14 = (*(unsigned char *)(v7 + 80) | *(unsigned char *)(v10 + 80));
  if (v14 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    uint64_t v18 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v18, ((unint64_t)a2 + v12) & v18, v9);
  }
  return a1;
}

uint64_t sub_100046224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100084140();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (*(void *)(v5 + 56) + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v7(v8);
}

uint64_t sub_1000462D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100084140();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_10004638C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100084140();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_100046444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100084140();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1000464FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100084140();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1000465B4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_100084140();
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  if (a2 <= v12) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v12)
      {
        if (v8 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *))(v7 + 48);
          return v23(a1);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v11, v10);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = (v13 & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v12 + (v20 | v18) + 1;
}

void sub_100046814(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_100084140();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v15 = *(void *)(*(void *)(v8 - 8) + 64) + v13;
  size_t v16 = (v15 & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v14 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v18 = ~v14 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x100046AF4);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v10 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v9 + 56);
          v23(a1, a2);
        }
        else
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v13, a2, v12);
        }
      }
      return;
  }
}

uint64_t _s11DeviceModelVMa()
{
  return sub_10000C880();
}

uint64_t sub_100046B34(uint64_t a1)
{
  uint64_t v2 = sub_100004BB0(&qword_1000A6800);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v61 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v57 - v5;
  uint64_t v69 = sub_100083E20();
  uint64_t v7 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  Swift::String v68 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BB0(&qword_1000A6808);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v60 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v74 = (uint64_t)&v57 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v71 = (char *)&v57 - v15;
  __chkstk_darwin(v14);
  uint64_t v78 = (uint64_t)&v57 - v16;
  uint64_t v17 = _s11DeviceModelVMa();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = __chkstk_darwin(v17);
  Swift::String v62 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v70 = (char *)&v57 - v22;
  __chkstk_darwin(v21);
  uint64_t v77 = (char *)&v57 - v23;
  uint64_t v72 = sub_100084F60();
  uint64_t v24 = sub_100084C40();
  uint64_t v85 = v24;
  uint64_t v84 = sub_100084C50();
  swift_bridgeObjectRetain();
  uint64_t v79 = a1;
  if (sub_100084F50())
  {
    uint64_t v57 = v19;
    uint64_t v59 = v6;
    uint64_t v25 = 0;
    uint64_t v76 = (void (**)(char *, uint64_t *, uint64_t))(v18 + 16);
    Swift::String v67 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v66 = (void (**)(char *, uint64_t))(v7 + 8);
    int v65 = (void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v27 = v70;
    uint64_t v26 = (uint64_t)v71;
    uint64_t v64 = v17;
    uint64_t v63 = v18;
    while (1)
    {
      BOOL v29 = sub_100084F10();
      sub_100084EC0();
      if (v29)
      {
        uint64_t v30 = *(void (**)(char *, uint64_t *, uint64_t))(v18 + 16);
        v30(v77, (uint64_t *)(v79+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v25), v17);
        uint64_t v31 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t result = sub_100085370();
        if (v57 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v80 = result;
        uint64_t v30 = *v76;
        (*v76)(v77, &v80, v17);
        swift_unknownObjectRelease();
        uint64_t v31 = v25 + 1;
        if (__OFADD__(v25, 1))
        {
LABEL_27:
          __break(1u);
LABEL_28:
          swift_bridgeObjectRelease();
          return v85;
        }
      }
      (*v67)(v27, v77, v17);
      char v32 = v68;
      sub_100084120();
      uint64_t v33 = v78;
      sub_100083DF0();
      (*v66)(v32, v69);
      sub_100047DDC(v33, v26);
      uint64_t v34 = sub_100084070();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
      if (v36(v26, 1, v34) == 1) {
        break;
      }
      uint64_t v73 = v30;
      uint64_t v75 = v31;
      uint64_t v37 = (uint64_t)v59;
      sub_100084050();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v26, v34);
      uint64_t v38 = sub_100083E50();
      uint64_t v39 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
      {
        sub_10000C788(v37, &qword_1000A6800);
        uint64_t v31 = v75;
        uint64_t v30 = v73;
        goto LABEL_12;
      }
      uint64_t v58 = sub_100083E30();
      uint64_t v49 = v48;
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
      uint64_t v40 = v74;
      sub_100047DDC(v78, v74);
      uint64_t v31 = v75;
      uint64_t v30 = v73;
      if (v49)
      {
        sub_10000C788(v40, &qword_1000A6808);
        uint64_t v17 = v64;
        uint64_t v18 = v63;
        uint64_t v50 = v58;
LABEL_19:
        uint64_t v80 = v50;
        uint64_t v81 = v49;
        swift_bridgeObjectRetain();
        sub_100084CB0();
        swift_bridgeObjectRelease();
        uint64_t v53 = v82;
        swift_bridgeObjectRelease();
        uint64_t v27 = v70;
        if (!v53)
        {
          swift_bridgeObjectRetain();
          uint64_t v82 = sub_100084C50();
          uint64_t v80 = v50;
          uint64_t v81 = v49;
          sub_100084C90();
          sub_100084CC0();
        }
        uint64_t v82 = v50;
        uint64_t v83 = v49;
        sub_100084C90();
        uint64_t v54 = (void (*)(uint64_t *, void))sub_100084CA0();
        if (*v55)
        {
          v73(v62, (uint64_t *)v27, v17);
          sub_100084F40();
        }
        v54(&v80, 0);
        uint64_t v31 = v75;
        swift_bridgeObjectRelease();
        uint64_t v28 = v78;
        goto LABEL_5;
      }
LABEL_13:
      uint64_t v41 = v40;
      uint64_t v42 = v40;
      uint64_t v43 = v60;
      sub_100047DDC(v41, v60);
      if (v36(v43, 1, v34) == 1)
      {
        sub_10000C788(v42, &qword_1000A6808);
        sub_10000C788(v43, &qword_1000A6808);
        uint64_t v17 = v64;
      }
      else
      {
        uint64_t v44 = v61;
        sub_100084030();
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v43, v34);
        uint64_t v45 = sub_100083E50();
        uint64_t v46 = *(void *)(v45 - 8);
        int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45);
        uint64_t v17 = v64;
        if (v47 != 1)
        {
          uint64_t v73 = v30;
          uint64_t v75 = v31;
          uint64_t v51 = v61;
          uint64_t v50 = sub_100083E30();
          uint64_t v49 = v52;
          sub_10000C788(v74, &qword_1000A6808);
          (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v51, v45);
          uint64_t v18 = v63;
          goto LABEL_19;
        }
        sub_10000C788(v74, &qword_1000A6808);
        sub_10000C788(v61, &qword_1000A6800);
      }
      uint64_t v18 = v63;
      uint64_t v27 = v70;
      v30(v62, (uint64_t *)v70, v17);
      sub_100084F40();
      uint64_t v28 = v78;
LABEL_5:
      sub_10000C788(v28, &qword_1000A6808);
      (*v65)(v27, v17);
      uint64_t v26 = (uint64_t)v71;
      ++v25;
      if (v31 == sub_100084F50()) {
        goto LABEL_28;
      }
    }
    sub_10000C788(v26, &qword_1000A6808);
LABEL_12:
    uint64_t v40 = v74;
    sub_100047DDC(v78, v74);
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1000474D0()
{
  Swift::UInt v0 = sub_100085570();
  sub_100085640(v0);
  return swift_unknownObjectRelease();
}

uint64_t sub_100047528()
{
  if ((sub_100084100() & 1) == 0) {
    return 0;
  }
  _s11DeviceModelVMa();
  return sub_100084CF0() & 1;
}

Swift::Int sub_100047598()
{
  return sub_100085650();
}

Swift::Int sub_1000475E8()
{
  return sub_100085650();
}

uint64_t sub_10004762C()
{
  return sub_100047528();
}

uint64_t sub_100047638@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000475E0();
  *a1 = result;
  return result;
}

uint64_t sub_100047660()
{
  uint64_t v0 = sub_100083E20();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004BB0(&qword_1000A6808);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084120();
  sub_100083DF0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = sub_100084070();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000C788((uint64_t)v6, &qword_1000A6808);
    return 0x646F50656D6F48;
  }
  else
  {
    uint64_t v9 = sub_100084010();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return v9;
}

unint64_t sub_100047834()
{
  unint64_t v0 = 0xD000000000000010;
  uint64_t v1 = sub_100083E20();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BB0(&qword_1000A6808);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084120();
  sub_100083DF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v8 = sub_100084070();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10000C788((uint64_t)v7, &qword_1000A6808);
  }
  else
  {
    uint64_t v10 = sub_100084020();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    unsigned __int8 v13 = sub_100065350(v10, v12);
    if (v13 <= 0xFDu) {
      return sub_1000651AC(v13);
    }
  }
  return v0;
}

uint64_t sub_100047A34()
{
  uint64_t v0 = sub_100004BB0(&qword_1000A6808);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100083E20();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100084070();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = 0x6563697665443CLL;
  unint64_t v18 = 0xE700000000000000;
  sub_100084120();
  sub_100083DF0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
  {
    sub_10000C788((uint64_t)v2, &qword_1000A6808);
    v19._object = (void *)0x800000010008AF70;
    v19._countAndFlagsBits = 0xD000000000000017;
    sub_100084D60(v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v2, v7);
    v16._countAndFlagsBits = 10016;
    v16._object = (void *)0xE200000000000000;
    v20._countAndFlagsBits = sub_100084010();
    sub_100084D60(v20);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 39;
    v21._object = (void *)0xE100000000000000;
    sub_100084D60(v21);
    sub_100084D60(v16);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    sub_100085340(26);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 0x3A6C65646F6D207CLL;
    v16._object = (void *)0xE900000000000020;
    v22._countAndFlagsBits = sub_100084020();
    sub_100084D60(v22);
    swift_bridgeObjectRelease();
    v23._countAndFlagsBits = 0x7546646F7270207CLL;
    v23._object = (void *)0xED0000203A646573;
    sub_100084D60(v23);
    char v11 = sub_100084060();
    BOOL v12 = (v11 & 1) == 0;
    if (v11) {
      v13._countAndFlagsBits = 1702195828;
    }
    else {
      v13._countAndFlagsBits = 0x65736C6166;
    }
    if (v12) {
      uint64_t v14 = (void *)0xE500000000000000;
    }
    else {
      uint64_t v14 = (void *)0xE400000000000000;
    }
    v13._object = v14;
    sub_100084D60(v13);
    swift_bridgeObjectRelease();
    sub_100084D60(v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v24._countAndFlagsBits = 62;
  v24._object = (void *)0xE100000000000000;
  sub_100084D60(v24);
  return v17;
}

void *sub_100047DB4()
{
  return &protocol witness table for Int;
}

uint64_t sub_100047DC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_100047DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A6808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100047E44(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  uint64_t v7 = v6;
  id v14 = a2;
  if (!a2) {
    id v14 = v7;
  }
  id v15 = a2;
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 addSubview:a1];
  id v16 = [a1 topAnchor];
  id v17 = [v14 topAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:a3];

  id v19 = [v14 rightAnchor];
  id v20 = [a1 rightAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20 constant:a6];

  id v22 = [v14 bottomAnchor];
  id v23 = [a1 bottomAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:a5];

  id v25 = [a1 leftAnchor];
  id v26 = [v14 leftAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26 constant:a4];

  uint64_t v28 = self;
  sub_100004BB0(&qword_1000A6868);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100088210;
  *(void *)(v29 + 32) = v18;
  *(void *)(v29 + 40) = v21;
  *(void *)(v29 + 48) = v24;
  *(void *)(v29 + 56) = v27;
  sub_100084EA0();
  sub_10004820C();
  id v30 = v18;
  id v31 = v21;
  id v32 = v24;
  id v33 = v27;
  id v34 = v30;
  id v35 = v31;
  id v36 = v32;
  id v37 = v33;
  Class isa = sub_100084E70().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:isa];

  return v34;
}

unint64_t sub_10004820C()
{
  unint64_t result = qword_1000A74E0;
  if (!qword_1000A74E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A74E0);
  }
  return result;
}

uint64_t sub_10004824C()
{
  return sub_10004829C();
}

uint64_t sub_100048260()
{
  return sub_10004829C();
}

uint64_t sub_100048274()
{
  return sub_10004829C();
}

uint64_t sub_100048288()
{
  return sub_10004829C();
}

uint64_t sub_10004829C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100048308()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100048380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  sub_1000843E0();
  swift_endAccess();
  swift_beginAccess();
  sub_1000843E0();
  swift_endAccess();
  swift_beginAccess();
  sub_1000843E0();
  swift_endAccess();
  uint64_t v7 = (void *)(v4 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel_profileID);
  *uint64_t v7 = a3;
  v7[1] = a4;
  swift_beginAccess();
  sub_1000843E0();
  swift_endAccess();
  swift_beginAccess();
  sub_1000843E0();
  swift_endAccess();
  return v4;
}

uint64_t sub_100048578()
{
  sub_100085340(16);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  sub_100084D60(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 2629671;
  v8._object = (void *)0xE300000000000000;
  sub_100084D60(v8);
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel_profileID);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel_profileID + 8);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v1;
  v9._object = v2;
  sub_100084D60(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  sub_100084D60(v10);
  sub_10001EFBC(0x272065766F6D6552, 0xE800000000000000);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v5 + 8))(v1, v2, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000486F0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel__contents;
  uint64_t v2 = sub_100004BB0(&qword_1000A7710);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel__organization, v2);
  v3(v0 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel__profileDescription, v2);
  swift_bridgeObjectRelease();
  v3(v0 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel__profileName, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel__signingDetails;
  uint64_t v5 = sub_100004BB0(&qword_1000A7718);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_100048E18(v0 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel_delegate);
  uint64_t v6 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v7 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v6, v7);
}

uint64_t sub_100048868()
{
  return type metadata accessor for ProfileViewModel();
}

uint64_t type metadata accessor for ProfileViewModel()
{
  uint64_t result = qword_1000A7538;
  if (!qword_1000A7538) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000488BC()
{
  sub_1000489BC(319, &qword_1000A7548);
  if (v0 <= 0x3F)
  {
    sub_1000489BC(319, (unint64_t *)&unk_1000A7550);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000489BC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_100084420();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ProfileViewModel.SigningDetals()
{
  return &type metadata for ProfileViewModel.SigningDetals;
}

uint64_t sub_100048A14@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ProfileViewModel();
  uint64_t result = sub_1000843A0();
  *a1 = result;
  return result;
}

uint64_t sub_100048A54@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*v1 + OBJC_IVAR____TtC16HPSUIViewService16ProfileViewModel_profileID);
  uint64_t v3 = v2[1];
  *a1 = *v2;
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100048A70@<X0>(void *a1@<X8>)
{
  return sub_100048AAC(a1);
}

uint64_t sub_100048A84()
{
  return sub_100048B64();
}

uint64_t sub_100048A98@<X0>(void *a1@<X8>)
{
  return sub_100048AAC(a1);
}

uint64_t sub_100048AAC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100048B28@<X0>(void *a1@<X8>)
{
  return sub_100048AAC(a1);
}

uint64_t sub_100048B50()
{
  return sub_100048B64();
}

uint64_t sub_100048B64()
{
  return sub_100084410();
}

uint64_t sub_100048BE4()
{
  return sub_100048B64();
}

uint64_t sub_100048C0C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return result;
}

uint64_t sub_100048C94()
{
  return sub_100084410();
}

uint64_t sub_100048D28@<X0>(void *a1@<X8>)
{
  return sub_100048AAC(a1);
}

uint64_t sub_100048D50()
{
  return sub_100048B64();
}

uint64_t sub_100048D78@<X0>(void *a1@<X8>)
{
  return sub_100048AAC(a1);
}

uint64_t sub_100048DA0()
{
  return sub_100048B64();
}

uint64_t sub_100048DC8@<X0>(void *a1@<X8>)
{
  return sub_100048AAC(a1);
}

uint64_t sub_100048DF0()
{
  return sub_100048B64();
}

uint64_t sub_100048E18(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for ProfileIcon()
{
  return &type metadata for ProfileIcon;
}

uint64_t sub_100048E50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100048E6C@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v44 = a1;
  uint64_t v43 = sub_100004BB0(&qword_1000A7720) - 8;
  __chkstk_darwin(v43);
  uint64_t v6 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100084580();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  Swift::String v10 = &v40[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100084A10();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = &v40[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_100004BB0(&qword_1000A7298);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  id v18 = &v40[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100084A00();
  (*(void (**)(unsigned char *, void, uint64_t))(v12 + 104))(v14, enum case for Image.ResizingMode.stretch(_:), v11);
  uint64_t v42 = sub_100084A20();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  int v41 = sub_1000847E0();
  sub_100084480();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = sub_1000849E0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = sub_1000849D0();
  char v30 = sub_1000847E0();
  id v31 = (char *)v10 + *(int *)(v8 + 28);
  uint64_t v32 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v33 = sub_100084720();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
  __asm { FMOV            V0.2D, #12.0 }
  *Swift::String v10 = _Q0;
  sub_10004926C((uint64_t)v10, (uint64_t)v6);
  *(_WORD *)&v6[*(int *)(v43 + 44)] = 256;
  sub_1000492D0((uint64_t)v6, (uint64_t)&v18[*(int *)(v16 + 44)]);
  *(void *)id v18 = v42;
  *((void *)v18 + 1) = 0;
  *((_WORD *)v18 + 8) = 1;
  v18[24] = v41;
  *((void *)v18 + 4) = v20;
  *((void *)v18 + 5) = v22;
  *((void *)v18 + 6) = v24;
  *((void *)v18 + 7) = v26;
  v18[64] = 0;
  *((void *)v18 + 9) = KeyPath;
  *((void *)v18 + 10) = v27;
  *((void *)v18 + 11) = v29;
  v18[96] = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10000C788((uint64_t)v6, &qword_1000A7720);
  sub_100049338((uint64_t)v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100084BD0();
  sub_1000402B4(0.0, 1, 0.0, 1, a2, 0, 0.0, 1, v44, 0.0, 1, a3, 0);
  return sub_10000C788((uint64_t)v18, &qword_1000A7298);
}

uint64_t sub_10004925C@<X0>(uint64_t a1@<X8>)
{
  return sub_100048E6C(a1, *v1, v1[1]);
}

uint64_t sub_10004926C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100084580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000492D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A7720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100049338(uint64_t a1)
{
  uint64_t v2 = sub_100084580();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100049394()
{
  return sub_1000495E4(&qword_1000A7728, qword_1000A72A0, (void (*)(void))sub_1000493D8);
}

unint64_t sub_1000493D8()
{
  unint64_t result = qword_1000A7730;
  if (!qword_1000A7730)
  {
    sub_10000BD00(&qword_1000A7298);
    sub_100049478();
    sub_10000C360(&qword_1000A7778, &qword_1000A7720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7730);
  }
  return result;
}

unint64_t sub_100049478()
{
  unint64_t result = qword_1000A7738;
  if (!qword_1000A7738)
  {
    sub_10000BD00(&qword_1000A7740);
    sub_100049518();
    sub_10000C360(&qword_1000A7768, &qword_1000A7770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7738);
  }
  return result;
}

unint64_t sub_100049518()
{
  unint64_t result = qword_1000A7748;
  if (!qword_1000A7748)
  {
    sub_10000BD00(&qword_1000A7750);
    sub_1000495E4(&qword_1000A7758, &qword_1000A7760, (void (*)(void))sub_100040590);
    sub_10000C360(&qword_1000A7278, &qword_1000A7280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7748);
  }
  return result;
}

uint64_t sub_1000495E4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000BD00(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BetaEnrollment()
{
  return &type metadata for BetaEnrollment;
}

uint64_t sub_100049670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100084360();
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v17 = v5;
    v9(v7, a1 + v10, v4);
    uint64_t v11 = v8 - 1;
    if (v8 == 1)
    {
LABEL_7:
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v7, v4);
    }
    else
    {
      uint64_t v12 = *(void *)(v17 + 72);
      sub_1000498DC();
      swift_bridgeObjectRetain();
      unint64_t v13 = a1 + v12 + v10;
      while ((sub_100084CF0() & 1) != 0)
      {
        v13 += v12;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
      (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(a2, enum case for BetaEnrollment.State.multiple(_:), v4);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v4);
  }
  else
  {
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v14(a2, 1, 1, v4);
  }
}

uint64_t sub_100049894()
{
  uint64_t result = sub_100084330();
  qword_1000ABA00 = result;
  *(void *)algn_1000ABA08 = v1;
  return result;
}

uint64_t sub_1000498B8()
{
  uint64_t result = sub_100084350();
  qword_1000ABA10 = result;
  *(void *)algn_1000ABA18 = v1;
  return result;
}

unint64_t sub_1000498DC()
{
  unint64_t result = qword_1000A6B80;
  if (!qword_1000A6B80)
  {
    sub_100084360();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000A6B80);
  }
  return result;
}

uint64_t sub_100049934()
{
  return 1;
}

Swift::Int sub_10004993C()
{
  return sub_100085650();
}

uint64_t sub_100049994()
{
  return sub_100084D50();
}

Swift::Int sub_1000499B0()
{
  return sub_100085650();
}

uint64_t sub_100049A04@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_10009E7E0;
  v7._object = v3;
  Swift::Int v5 = sub_100085510(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_100049A58(void *a1@<X8>)
{
  *a1 = 0xD00000000000002ELL;
  a1[1] = 0x8000000100089E00;
}

unint64_t sub_100049A78()
{
  return 0xD00000000000002ELL;
}

uint64_t getEnumTagSinglePayload for Entitlement(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for Entitlement(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100049B84);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100049BAC()
{
  return 0;
}

ValueMetadata *type metadata accessor for Entitlement()
{
  return &type metadata for Entitlement;
}

unint64_t sub_100049BC8()
{
  unint64_t result = qword_1000A7780[0];
  if (!qword_1000A7780[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A7780);
  }
  return result;
}

uint64_t type metadata accessor for CarrySettingsView()
{
  return sub_10000C880();
}

uint64_t sub_100049C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_100049C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100084770();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_100084780();
}

uint64_t sub_100049D6C(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_100084C20();
}

uint64_t sub_100049F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100084770();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_100084780();
}

uint64_t sub_10004A028()
{
  return sub_100084500();
}

uint64_t sub_10004A034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v105 = a4;
  int v86 = a3;
  uint64_t v80 = a2;
  uint64_t v79 = a1;
  uint64_t v103 = a7;
  uint64_t v9 = sub_100084680();
  uint64_t v101 = *(void *)(v9 - 8);
  uint64_t v102 = v9;
  __chkstk_darwin(v9);
  uint64_t v100 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100084FF0();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v14 = sub_10004CDFC();
  unint64_t v15 = sub_10004CE50();
  long long v16 = *(_OWORD *)(AssociatedConformanceWitness + 32);
  uint64_t v114 = AssociatedTypeWitness;
  uint64_t v115 = &type metadata for SelectableRowContents;
  uint64_t v116 = &type metadata for RowContents;
  long long v117 = v16;
  unint64_t v118 = v14;
  unint64_t v119 = v15;
  type metadata accessor for DisclosureGroupPicker();
  sub_100084BC0();
  swift_getTupleTypeMetadata2();
  sub_100084C10();
  swift_getWitnessTable();
  sub_100084830();
  swift_getWitnessTable();
  sub_100084B00();
  uint64_t v17 = sub_100084790();
  uint64_t v93 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v70 - v18;
  unint64_t v20 = sub_10000BD48();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v112 = v20;
  uint64_t v113 = WitnessTable;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v114 = v17;
  uint64_t v115 = (ValueMetadata *)v22;
  uint64_t v71 = v17;
  uint64_t v72 = v22;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v92 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v74 = (char *)&v70 - v23;
  uint64_t v24 = sub_100084550();
  uint64_t v94 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v77 = (char *)&v70 - v25;
  uint64_t v76 = v24;
  uint64_t v26 = sub_100084550();
  uint64_t v95 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v84 = (char *)&v70 - v27;
  sub_1000844D0();
  uint64_t v82 = v26;
  uint64_t v28 = sub_100084550();
  uint64_t v96 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v91 = (char *)&v70 - v29;
  uint64_t v114 = v17;
  uint64_t v115 = (ValueMetadata *)v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v110 = OpaqueTypeConformance2;
  uint64_t v111 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v108 = v75;
  uint64_t v109 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v81 = v30;
  unint64_t v31 = sub_10004CEA4();
  uint64_t v106 = v30;
  unint64_t v107 = v31;
  uint64_t v87 = v28;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v114 = v28;
  uint64_t v115 = (ValueMetadata *)v88;
  uint64_t v90 = swift_getOpaqueTypeMetadata2();
  uint64_t v89 = *(void *)(v90 - 8);
  uint64_t v32 = __chkstk_darwin(v90);
  uint64_t v78 = (char *)&v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v83 = (char *)&v70 - v34;
  id v35 = v19;
  uint64_t v36 = (uint64_t)v19;
  uint64_t v37 = v79;
  uint64_t v38 = v80;
  LOBYTE(v19) = v86;
  uint64_t v39 = a5;
  sub_10004ABC0(v79, v80, v86, v105, a5, a6, v36);
  uint64_t v104 = a6;
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(a6 + 48);
  swift_unknownObjectRetain();
  uint64_t v70 = v39;
  v40(v39, a6);
  swift_unknownObjectRelease();
  int v41 = v74;
  uint64_t v42 = v71;
  sub_100084920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v35, v42);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v39;
  uint64_t v44 = v104;
  *(void *)(v43 + 24) = v104;
  *(void *)(v43 + 32) = v37;
  uint64_t v45 = v37;
  *(void *)(v43 + 40) = v38;
  LOBYTE(v42) = (_BYTE)v19;
  *(unsigned char *)(v43 + 48) = (_BYTE)v19;
  uint64_t v46 = v105;
  *(void *)(v43 + 56) = v105;
  swift_retain();
  swift_unknownObjectRetain();
  int v47 = v77;
  uint64_t v48 = OpaqueTypeMetadata2;
  sub_1000849B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v41, v48);
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v70;
  *(void *)(v49 + 16) = v70;
  *(void *)(v49 + 24) = v44;
  *(void *)(v49 + 32) = v45;
  *(void *)(v49 + 40) = v38;
  *(unsigned char *)(v49 + 48) = v42;
  *(void *)(v49 + 56) = v46;
  uint64_t v51 = v38;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v52 = v84;
  uint64_t v53 = v76;
  sub_1000848F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v47, v53);
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v104;
  *(void *)(v54 + 16) = v50;
  *(void *)(v54 + 24) = v55;
  *(void *)(v54 + 32) = v45;
  *(void *)(v54 + 40) = v51;
  *(unsigned char *)(v54 + 48) = v42;
  *(void *)(v54 + 56) = v46;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v56 = v97;
  sub_100084FD0();
  uint64_t v57 = v91;
  uint64_t v58 = v82;
  sub_100084970();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v56, v99);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v52, v58);
  uint64_t v60 = v100;
  uint64_t v59 = v101;
  uint64_t v61 = v102;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v100, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v102);
  Swift::String v62 = v78;
  uint64_t v63 = v87;
  sub_100084960();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v57, v63);
  uint64_t v64 = v89;
  int v65 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
  uint64_t v66 = v83;
  uint64_t v67 = v90;
  v65(v83, v62, v90);
  Swift::String v68 = *(void (**)(char *, uint64_t))(v64 + 8);
  v68(v62, v67);
  v65(v103, v66, v67);
  return ((uint64_t (*)(char *, uint64_t))v68)(v66, v67);
}

uint64_t sub_10004ABC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v56 = (ValueMetadata *)a4;
  LODWORD(v55) = a3;
  uint64_t v52 = a1;
  uint64_t v59 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v11 = sub_10004CDFC();
  unint64_t v12 = sub_10004CE50();
  long long v53 = *(_OWORD *)(AssociatedConformanceWitness + 32);
  uint64_t v60 = AssociatedTypeWitness;
  uint64_t v61 = &type metadata for SelectableRowContents;
  unint64_t v62 = (unint64_t)&type metadata for RowContents;
  long long v63 = v53;
  unint64_t v64 = v11;
  unint64_t v65 = v12;
  type metadata accessor for DisclosureGroupPicker();
  sub_100084BC0();
  swift_getTupleTypeMetadata2();
  sub_100084C10();
  swift_getWitnessTable();
  sub_100084830();
  v49[2] = swift_getWitnessTable();
  uint64_t v13 = sub_100084B00();
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  long long v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v50 = (char *)v49 - v17;
  uint64_t v18 = sub_100084790();
  uint64_t v57 = *(void *)(v18 - 8);
  uint64_t v58 = v18;
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)v49 - v19;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(a6 + 32);
  swift_unknownObjectRetain();
  uint64_t v22 = a5;
  v21(a5, a6);
  swift_unknownObjectRelease();
  LOBYTE(a5) = sub_1000850B0();
  uint64_t v23 = swift_bridgeObjectRelease();
  if (a5)
  {
    uint64_t AssociatedTypeWitness = (uint64_t)v20;
    LOBYTE(v60) = v55 & 1;
    uint64_t v61 = v56;
    sub_100004BB0(&qword_1000A6100);
    sub_100084A50();
    v49[1] = v13;
    if (v72 == 1)
    {
      if (qword_1000A5DD0 != -1) {
        swift_once();
      }
      uint64_t v24 = qword_1000AB888;
      uint64_t v25 = unk_1000AB890;
      LODWORD(v56) = byte_1000AB898;
      uint64_t v26 = qword_1000AB8A0;
      uint64_t v27 = qword_1000A5DD8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = qword_1000AB8A8;
      uint64_t v29 = byte_1000AB8B8;
      char v30 = 1;
      uint64_t v31 = unk_1000AB8B0;
      uint64_t v32 = qword_1000AB8C0;
      unsigned int v33 = v56;
    }
    else
    {
      if (qword_1000A5D70 != -1) {
        swift_once();
      }
      uint64_t v28 = 0;
      uint64_t v31 = 0;
      uint64_t v29 = 0;
      uint64_t v32 = 0;
      char v30 = 0;
      uint64_t v24 = qword_1000AB708;
      unsigned int v33 = byte_1000AB718;
      uint64_t v25 = unk_1000AB710;
      uint64_t v26 = qword_1000AB720;
    }
    uint64_t v55 = v24;
    uint64_t v56 = (ValueMetadata *)v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v60 = v24;
    uint64_t v61 = (ValueMetadata *)v25;
    unint64_t v62 = v33;
    long long v63 = (unint64_t)v26;
    unint64_t v64 = v28;
    unint64_t v65 = v31;
    uint64_t v66 = v29;
    uint64_t v39 = v32;
    uint64_t v67 = v32;
    uint64_t v68 = 0;
    char v69 = v30;
    sub_10000BD48();
    swift_getWitnessTable();
    uint64_t v38 = (char *)AssociatedTypeWitness;
    sub_100049C74((uint64_t)&v60, (uint64_t)&type metadata for StatusInfoView);
    sub_10000C234(v55, (uint64_t)v56, v33, v26, 0, v28, v31, v29, v39, 0, v30);
  }
  else
  {
    __chkstk_darwin(v23);
    v49[-6] = v22;
    v49[-5] = a6;
    uint64_t v45 = v52;
    uint64_t v46 = a2;
    char v47 = v55 & 1;
    uint64_t v48 = (uint64_t)v56;
    sub_100084730();
    sub_100084AF0();
    swift_getWitnessTable();
    uint64_t v34 = v51;
    id v35 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
    uint64_t v36 = v50;
    v35(v50, v16, v13);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
    v37(v16, v13);
    v35(v16, v36, v13);
    sub_10000BD48();
    sub_100049F30((uint64_t)v16, (uint64_t)&type metadata for StatusInfoView, v13);
    v37(v16, v13);
    v37(v36, v13);
    uint64_t v38 = v20;
  }
  unint64_t v40 = sub_10000BD48();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v70 = v40;
  uint64_t v71 = WitnessTable;
  uint64_t v42 = v58;
  swift_getWitnessTable();
  uint64_t v43 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v59, v38, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v38, v42);
}

void sub_10004B2BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_100084FC0();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v16 = sub_100084FB0();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = &protocol witness table for MainActor;
  *(void *)(v17 + 32) = a5;
  *(void *)(v17 + 40) = a6;
  *(void *)(v17 + 48) = a1;
  *(void *)(v17 + 56) = a2;
  *(unsigned char *)(v17 + 64) = a3;
  *(void *)(v17 + 72) = a4;
  sub_100015B60((uint64_t)v14, (uint64_t)&unk_1000A7840, v17);
  swift_release();
  uint64_t v18 = self;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = a6;
  *(void *)(v19 + 32) = a1;
  *(void *)(v19 + 40) = a2;
  *(unsigned char *)(v19 + 48) = a3;
  *(void *)(v19 + 56) = a4;
  aBlock[4] = sub_10000C1AC;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000222D0;
  aBlock[3] = &unk_1000A0830;
  unint64_t v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  id v21 = [v18 scheduledTimerWithTimeInterval:0 repeats:v20 block:5.0];
  _Block_release(v20);
}

uint64_t sub_10004B4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a8;
  v8[4] = v13;
  v8[2] = a5;
  sub_100084FC0();
  void v8[5] = sub_100084FB0();
  uint64_t v10 = sub_100084FA0();
  v8[6] = v10;
  v8[7] = v9;
  return _swift_task_switch(sub_10004B59C, v10, v9);
}

uint64_t sub_10004B59C()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[4] + 88) + **(int **)(v0[4] + 88));
  swift_unknownObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100009F6C;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  return v5(1, v2, v3);
}

uint64_t sub_10004B690(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_100084FC0();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v16 = sub_100084FB0();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = &protocol witness table for MainActor;
  *(void *)(v17 + 32) = a5;
  *(void *)(v17 + 40) = a6;
  *(void *)(v17 + 48) = a1;
  *(void *)(v17 + 56) = a2;
  *(unsigned char *)(v17 + 64) = a3;
  *(void *)(v17 + 72) = a4;
  sub_100015B60((uint64_t)v14, (uint64_t)&unk_1000A7830, v17);
  return swift_release();
}

uint64_t sub_10004B7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a8;
  v8[4] = v13;
  v8[2] = a5;
  sub_100084FC0();
  void v8[5] = sub_100084FB0();
  uint64_t v10 = sub_100084FA0();
  v8[6] = v10;
  v8[7] = v9;
  return _swift_task_switch(sub_10004B884, v10, v9);
}

uint64_t sub_10004B884()
{
  uint64_t v5 = (uint64_t (*)(void, uint64_t, uint64_t))(*(void *)(v0[4] + 88) + **(int **)(v0[4] + 88));
  swift_unknownObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100009F6C;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  return v5(0, v2, v3);
}

uint64_t sub_10004B978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a2;
  sub_100084FC0();
  v6[5] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(sub_10004BA14, v8, v7);
}

uint64_t sub_10004BA14()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[4] + 80) + **(int **)(v0[4] + 80));
  swift_unknownObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000A528;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  return v5(v3, v2);
}

uint64_t sub_10004BB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v29 = a7;
  int v27 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v13 = sub_10004CDFC();
  unint64_t v14 = sub_10004CE50();
  long long v15 = *(_OWORD *)(AssociatedConformanceWitness + 32);
  uint64_t v36 = AssociatedTypeWitness;
  uint64_t v37 = &type metadata for SelectableRowContents;
  uint64_t v38 = &type metadata for RowContents;
  long long v39 = v15;
  unint64_t v40 = v13;
  unint64_t v41 = v14;
  type metadata accessor for DisclosureGroupPicker();
  sub_100084BC0();
  swift_getTupleTypeMetadata2();
  sub_100084C10();
  swift_getWitnessTable();
  uint64_t v16 = sub_100084830();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v20 = &v26[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v22 = &v26[-v21];
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  char v34 = v27;
  uint64_t v35 = v28;
  sub_100084820();
  swift_getWitnessTable();
  uint64_t v23 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 16);
  v23(v22, v20, v16);
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t))(v17 + 8);
  v24(v20, v16);
  v23(v29, v22, v16);
  return ((uint64_t (*)(unsigned char *, uint64_t))v24)(v22, v16);
}

uint64_t sub_10004BDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v31 = a4;
  uint64_t v32 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v14 = sub_10004CDFC();
  unint64_t v15 = sub_10004CE50();
  long long v16 = *(_OWORD *)(AssociatedConformanceWitness + 32);
  uint64_t v37 = (char *)AssociatedTypeWitness;
  uint64_t v38 = &type metadata for SelectableRowContents;
  long long v39 = &type metadata for RowContents;
  long long v40 = v16;
  unint64_t v41 = v14;
  unint64_t v42 = v15;
  type metadata accessor for DisclosureGroupPicker();
  uint64_t v17 = sub_100084BC0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v30 - v22;
  sub_10004C0AC(a1, a2, a3, v31, a5, a6);
  uint64_t WitnessTable = swift_getWitnessTable();
  v36[1] = &protocol witness table for EmptyView;
  void v36[2] = WitnessTable;
  v36[3] = &protocol witness table for AnyView;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v26(v23, v21, v17);
  int v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v21, v17);
  sub_10004C200(a5, a6, (uint64_t *)&v37);
  uint64_t v28 = (uint64_t)v37;
  v26(v21, v23, v17);
  v36[0] = v28;
  uint64_t v37 = v21;
  uint64_t v38 = (ValueMetadata *)v36;
  swift_retain();
  v35[0] = v17;
  v35[1] = &type metadata for AnyView;
  uint64_t v33 = v25;
  char v34 = &protocol witness table for AnyView;
  sub_100049D6C((uint64_t)&v37, 2uLL, (uint64_t)v35);
  swift_release();
  v27(v23, v17);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v27)(v21, v17);
}

uint64_t sub_10004C0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_10004C390(a5, a6, &v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_10004CDFC();
  sub_10004CE50();
  type metadata accessor for DisclosureGroupPicker();
  swift_getWitnessTable();
  return sub_100084BB0();
}

uint64_t sub_10004C200@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40);
  swift_unknownObjectRetain();
  uint64_t v7 = v6(a1, a2);
  swift_unknownObjectRelease();
  if (v7)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    swift_unknownObjectRetain();
    sub_1000388E4(AssociatedTypeWitness, AssociatedConformanceWitness, (uint64_t)v13);
    swift_unknownObjectRelease();
    uint64_t v10 = type metadata accessor for CarrySettingsDetailView();
    swift_getWitnessTable();
    uint64_t v11 = sub_100058D6C(v10);
    swift_unknownObjectRelease();
    uint64_t result = sub_10004D268((uint64_t)v13);
  }
  else
  {
    uint64_t result = sub_100084B10();
    uint64_t v11 = result;
  }
  *a3 = v11;
  return result;
}

uint64_t sub_10004C390@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 56);
  swift_unknownObjectRetain();
  uint64_t v7 = v6(a1, a2);
  swift_unknownObjectRelease();
  uint64_t v20 = v7;
  void v19[2] = a1;
  v19[3] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = sub_1000850F0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_100012810((void (*)(char *, char *))sub_10004D4DC, (uint64_t)v19, v8, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v10);
  swift_bridgeObjectRelease();
  if (*(void *)(v11 + 16))
  {
    uint64_t v20 = v11;
    sub_100004BB0(&qword_1000A6378);
    sub_100011FB4();
    uint64_t v12 = sub_100084CE0();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v20 = v12;
    uint64_t v21 = v14;
    sub_10000BD9C();
    uint64_t v20 = sub_100084890();
    uint64_t v21 = v15;
    char v22 = v16 & 1;
    uint64_t v23 = v17;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_100084B10();
  *a3 = result;
  return result;
}

uint64_t sub_10004C57C@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 24);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = swift_checkMetadataState();
  uint64_t result = v3(v4, v2);
  *a1 = result;
  a1[1] = v6;
  return result;
}

uint64_t sub_10004C640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 32);
  swift_unknownObjectRetain();
  uint64_t v12 = v11(a5, a6);
  swift_unknownObjectRelease();
  uint64_t v60 = v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v32 = AssociatedTypeWitness;
  uint64_t v15 = *(void *)(AssociatedConformanceWitness + 32);
  sub_1000850F0();
  swift_getWitnessTable();
  uint64_t v33 = sub_100084F80();
  sub_100084500();
  swift_getKeyPath();
  sub_100084510();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v16 = (uint64_t)v61;
  uint64_t v30 = (uint64_t)v62;
  uint64_t v31 = v60;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  *(void *)(v17 + 32) = a1;
  *(void *)(v17 + 40) = a2;
  *(unsigned char *)(v17 + 48) = a3;
  *(void *)(v17 + 56) = a4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = *(void *)(AssociatedConformanceWitness + 40);
  unint64_t v20 = sub_10004CDFC();
  unint64_t v21 = sub_10004CE50();
  swift_unknownObjectRetain();
  swift_retain();
  sub_10004D7D4(v33, v31, v16, v30, 4, (uint64_t)sub_10004D42C, v17, (uint64_t)sub_10004D450, (uint64_t)v49, v18, v32, (uint64_t)&type metadata for SelectableRowContents, (uint64_t)&type metadata for RowContents, v15, v19, v20, v21);
  uint64_t v22 = v53;
  uint64_t v23 = v54;
  uint64_t v24 = v55;
  LOBYTE(v17) = v56;
  v38[0] = v49[0];
  long long v39 = v50;
  char v40 = v51;
  uint64_t v41 = v52;
  uint64_t v42 = v53;
  uint64_t v43 = v54;
  uint64_t v44 = v55;
  char v45 = v56;
  uint64_t v46 = v57;
  long long v47 = v58;
  uint64_t v48 = v59;
  uint64_t v60 = v32;
  uint64_t v61 = &type metadata for SelectableRowContents;
  unint64_t v62 = &type metadata for RowContents;
  uint64_t v63 = v15;
  uint64_t v64 = v19;
  unint64_t v65 = v20;
  unint64_t v66 = v21;
  uint64_t v25 = type metadata accessor for DisclosureGroupPicker();
  swift_getWitnessTable();
  char v34 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
  v34(&v60, v38, v25);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10004D458(v22, v23, v24, v17);
  swift_release();
  swift_release();
  uint64_t v26 = v64;
  uint64_t v27 = v65;
  uint64_t v28 = v66;
  LOBYTE(v23) = v67;
  v49[0] = v60;
  uint64_t v50 = v61;
  char v51 = (char)v62;
  uint64_t v52 = v63;
  uint64_t v53 = v64;
  uint64_t v54 = v65;
  uint64_t v55 = v66;
  char v56 = v67;
  long long v58 = v69;
  uint64_t v57 = v68;
  uint64_t v59 = v70;
  v34(a7, v49, v25);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10004D458(v26, v27, v28, v23);
  swift_release();
  return swift_release();
}

uint64_t sub_10004CA6C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000846E0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000846F0();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v18 = v12;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(a2 + 56);
  swift_unknownObjectRetain();
  v13(a1, a2);
  swift_unknownObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1000406B0();
  swift_bridgeObjectRelease();
  sub_1000846D0();
  v19._countAndFlagsBits = 0x44455443454C4553;
  v19._object = (void *)0xE900000000000020;
  sub_1000846C0(v19);
  sub_1000846A0();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  sub_1000846C0(v20);
  uint64_t result = sub_100084700();
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v9;
  *(unsigned char *)(a3 + 16) = v11 & 1;
  *(void *)(a3 + 24) = v18;
  *(void *)(a3 + 32) = result;
  *(void *)(a3 + 40) = v16;
  *(void *)(a3 + 48) = v15 & 1;
  *(void *)(a3 + 56) = v17;
  *(void *)(a3 + 64) = 0xD000000000000011;
  *(void *)(a3 + 72) = 0x800000010008B050;
  return result;
}

uint64_t sub_10004CC68@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(AssociatedConformanceWitness + 24);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = swift_checkMetadataState();
  uint64_t v6 = v4(v5, v3);
  uint64_t v8 = v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 184))(v5, AssociatedConformanceWitness);
  uint64_t v11 = v10;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v5, v3);
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v8;
  return result;
}

uint64_t sub_10004CDA0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_10004A034(*(void *)v2, *(void *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_10004CDB8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10004CDFC()
{
  unint64_t result = qword_1000A7808;
  if (!qword_1000A7808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7808);
  }
  return result;
}

unint64_t sub_10004CE50()
{
  unint64_t result = qword_1000A7810;
  if (!qword_1000A7810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000A7810);
  }
  return result;
}

unint64_t sub_10004CEA4()
{
  unint64_t result = qword_1000A60C8;
  if (!qword_1000A60C8)
  {
    sub_1000844D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000A60C8);
  }
  return result;
}

uint64_t sub_10004CF00()
{
  return sub_10004CF34((uint64_t (*)(void, void, void, void, void, void))sub_10004B2BC);
}

uint64_t sub_10004CF1C()
{
  return sub_10004CF34((uint64_t (*)(void, void, void, void, void, void))sub_10004B690);
}

uint64_t sub_10004CF34(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10004CF54()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  void *v8 = v1;
  v8[1] = sub_1000052B8;
  return sub_10004B978(v4, v5, v6, v7, v2, v3);
}

uint64_t sub_10004D01C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100005D30;
  return sub_10004B7E0(a1, v5, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_10004D110(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100005D30;
  return sub_10004B4F8(a1, v5, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_10004D204(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004D214()
{
  return swift_release();
}

uint64_t sub_10004D21C()
{
  return sub_10004D24C((uint64_t (*)(void, void, void, void, void, void))sub_10004BB08);
}

uint64_t sub_10004D234()
{
  return sub_10004D24C((uint64_t (*)(void, void, void, void, void, void))sub_10004BDB0);
}

uint64_t sub_10004D24C(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10004D268(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004D358@<X0>(uint64_t *a1@<X8>)
{
  return sub_10004C640(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10004D36C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 56))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_10004D3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 64);
  uint64_t v7 = swift_bridgeObjectRetain();
  return v6(v7, v4, v5);
}

uint64_t sub_10004D410()
{
  return 16;
}

__n128 sub_10004D41C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10004D42C@<X0>(uint64_t a1@<X8>)
{
  return sub_10004CA6C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10004D440()
{
  return swift_deallocObject();
}

uint64_t sub_10004D450@<X0>(uint64_t a1@<X8>)
{
  return sub_10004CC68(a1);
}

uint64_t sub_10004D458(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_release();
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_release();
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_10004D4DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10004C57C(a1);
}

uint64_t sub_10004D4FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004D7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v29 = a7;
  uint64_t v30 = a8;
  uint64_t v28 = a6;
  int v27 = a5;
  uint64_t v25 = a9;
  uint64_t v26 = a1;
  uint64_t v23 = a4;
  uint64_t v24 = a10;
  uint64_t v31 = a11;
  uint64_t v32 = a12;
  uint64_t v33 = a13;
  uint64_t v34 = a14;
  uint64_t v35 = a15;
  uint64_t v36 = a16;
  uint64_t v37 = a17;
  uint64_t v19 = type metadata accessor for DisclosureGroupPicker.Selection();
  __chkstk_darwin(v19);
  unint64_t v21 = (uint64_t *)((char *)&v23 - v20);
  *unint64_t v21 = a2;
  v21[1] = a3;
  v21[2] = v23;
  swift_storeEnumTagMultiPayload();
  return sub_10004D958(v26, (uint64_t)v21, v27, v28, v29, v30, v24, v25);
}

uint64_t type metadata accessor for DisclosureGroupPicker.Selection()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10004D904()
{
  sub_100004BB0(&qword_1000A6100);
  sub_100084A70();
  return v1;
}

uint64_t sub_10004D958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_100084A40();
  *(unsigned char *)(a8 + 16) = v22;
  *(void *)(a8 + 24) = v23;
  *(unsigned char *)a8 = a3;
  *(void *)(a8 + 8) = a1;
  uint64_t v11 = (int *)type metadata accessor for DisclosureGroupPicker();
  uint64_t v12 = (void *)(a8 + v11[22]);
  *uint64_t v12 = a4;
  v12[1] = a5;
  uint64_t v13 = (void *)(a8 + v11[23]);
  *uint64_t v13 = a6;
  v13[1] = a7;
  uint64_t v14 = a8 + v11[21];
  uint64_t v15 = type metadata accessor for DisclosureGroupPicker.Selection();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a2, v15);
}

uint64_t type metadata accessor for DisclosureGroupPicker()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10004DAAC()
{
  sub_100085200();
  uint64_t result = sub_100084B40();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_10004DB4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  int v9 = v7 + 16;
  uint64_t v10 = (v8 + 16) & ~v8;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v11 = *(void *)(v5 + 64);
  }
  else {
    size_t v11 = *(void *)(v5 + 64) + 1;
  }
  if (v10 + v11 <= 0x18) {
    uint64_t v12 = 24;
  }
  else {
    uint64_t v12 = v10 + v11;
  }
  int v13 = v7 & 0x100000;
  if (v8 > 7 || v13 != 0 || (unint64_t)(v12 + 1) > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v16 + ((v8 & 0xF8 ^ 0x1F8) & v9));
    swift_retain();
  }
  else
  {
    unsigned int v17 = *((unsigned __int8 *)a2 + v12);
    if (v17 >= 2) {
      unsigned int v17 = *(_DWORD *)a2 + 2;
    }
    *a1 = *a2;
    if (v17 == 1)
    {
      uint64_t v18 = a2[2];
      a1[1] = a2[1];
      a1[2] = v18;
      *((unsigned char *)a1 + v12) = 1;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v19 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v20 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v19 = *v20;
      unint64_t v21 = (void *)(((unint64_t)v19 + v8 + 8) & ~v8);
      char v22 = (const void *)(((unint64_t)v20 + v8 + 8) & ~v8);
      uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
      swift_retain();
      swift_retain();
      if (v23(v22, 1, v4))
      {
        memcpy(v21, v22, v11);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v21, v22, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v4);
      }
      *((unsigned char *)v3 + v12) = 0;
    }
  }
  return v3;
}

uint64_t sub_10004DD40(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v6;
  }
  unint64_t v7 = v6 + ((v5 + 16) & ~v5);
  if (v7 <= 0x18) {
    unint64_t v7 = 24;
  }
  unsigned int v8 = a1[v7];
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_14;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_14:
        int v11 = (v10 | ((v8 - 2) << (8 * v7))) + 2;
        unsigned int v12 = v10 + 2;
        if (v7 >= 4) {
          unsigned int v8 = v12;
        }
        else {
          unsigned int v8 = v11;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = *(void *)(*(void *)(a2 + 16) - 8);
  swift_release();
  if (v8 == 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    unint64_t v14 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5;
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v3);
    if (!result)
    {
      uint64_t v15 = *(uint64_t (**)(unint64_t, uint64_t))(v16 + 8);
      return v15(v14, v3);
    }
  }
  return result;
}

void *sub_10004DF30(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v7 + 16) & ~v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  if (v8 + v9 <= 0x18) {
    uint64_t v10 = 24;
  }
  else {
    uint64_t v10 = v8 + v9;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_16;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_16:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  *a1 = *(void *)a2;
  if (v11 == 1)
  {
    uint64_t v16 = *((void *)a2 + 2);
    a1[1] = *((void *)a2 + 1);
    a1[2] = v16;
    *((unsigned char *)a1 + v10) = 1;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    unsigned int v17 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v17 = *v18;
    uint64_t v19 = (void *)(((unint64_t)v17 + v7 + 8) & ~v7);
    uint64_t v20 = (const void *)(((unint64_t)v18 + v7 + 8) & ~v7);
    unint64_t v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    swift_retain();
    swift_retain();
    if (v21(v20, 1, v4))
    {
      memcpy(v19, v20, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v19, v20, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v4);
    }
    *((unsigned char *)a1 + v10) = 0;
  }
  return a1;
}

unsigned __int8 *sub_10004E164(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v9 = *(void *)(v6 + 64);
    }
    else {
      size_t v9 = *(void *)(v6 + 64) + 1;
    }
    if (((v8 + 16) & ~v8) + v9 <= 0x18) {
      uint64_t v10 = 24;
    }
    else {
      uint64_t v10 = ((v8 + 16) & ~v8) + v9;
    }
    unsigned int v11 = a1[v10];
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_17;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_17:
          int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
          unsigned int v15 = v13 + 2;
          if (v10 >= 4) {
            unsigned int v11 = v15;
          }
          else {
            unsigned int v11 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    swift_release();
    if (v11 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      unint64_t v17 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v16;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v17, 1, v5)) {
        (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v17, v5);
      }
    }
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v10 < 4) {
            goto LABEL_32;
          }
          goto LABEL_36;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v10 < 4) {
            goto LABEL_32;
          }
          goto LABEL_36;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_32;
          }
          goto LABEL_36;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v10 < 4) {
LABEL_32:
          }
            unsigned int v18 = (v21 | (v19 << (8 * v10))) + 2;
          else {
LABEL_36:
          }
            unsigned int v18 = v21 + 2;
          break;
        default:
          break;
      }
    }
    *(void *)a1 = *(void *)a2;
    if (v18 == 1)
    {
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[v10] = 1;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      char v22 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v23 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *char v22 = *v23;
      uint64_t v24 = (void *)(((unint64_t)v22 + v8 + 8) & v16);
      uint64_t v25 = (const void *)(((unint64_t)v23 + v8 + 8) & v16);
      uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
      swift_retain();
      swift_retain();
      if (v26(v25, 1, v5))
      {
        memcpy(v24, v25, v9);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v24, v25, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v5);
      }
      a1[v10] = 0;
    }
  }
  return a1;
}

uint64_t sub_10004E4D0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v7 + 16) & ~v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  if (v8 + v9 <= 0x18) {
    uint64_t v10 = 24;
  }
  else {
    uint64_t v10 = v8 + v9;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_16;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_16:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    char v16 = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    unint64_t v17 = (void *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v18 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v17 = *v18;
    unsigned int v19 = (void *)(((unint64_t)v17 + v7 + 8) & ~v7);
    uint64_t v20 = (const void *)(((unint64_t)v18 + v7 + 8) & ~v7);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v4))
    {
      memcpy(v19, v20, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v19, v20, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v4);
    }
    char v16 = 0;
  }
  *(unsigned char *)(a1 + v10) = v16;
  return a1;
}

unsigned __int8 *sub_10004E6E0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v9 = *(void *)(v6 + 64);
    }
    else {
      size_t v9 = *(void *)(v6 + 64) + 1;
    }
    if (((v8 + 16) & ~v8) + v9 <= 0x18) {
      uint64_t v10 = 24;
    }
    else {
      uint64_t v10 = ((v8 + 16) & ~v8) + v9;
    }
    unsigned int v11 = a1[v10];
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_17;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_17:
          int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
          unsigned int v15 = v13 + 2;
          if (v10 >= 4) {
            unsigned int v11 = v15;
          }
          else {
            unsigned int v11 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    swift_release();
    if (v11 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      unint64_t v17 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v16;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v17, 1, v5)) {
        (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v17, v5);
      }
    }
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v10 >= 4) {
            goto LABEL_38;
          }
          goto LABEL_32;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v10 < 4) {
            goto LABEL_32;
          }
          goto LABEL_38;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_32;
          }
          goto LABEL_38;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_32:
            unsigned int v18 = (v21 | (v19 << (8 * v10))) + 2;
            break;
          }
LABEL_38:
          if (v21 != -1) {
            goto LABEL_39;
          }
          goto LABEL_34;
        default:
          break;
      }
    }
    if (v18 == 1)
    {
LABEL_34:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      char v22 = 1;
    }
    else
    {
LABEL_39:
      *(void *)a1 = *(void *)a2;
      uint64_t v23 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v24 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v23 = *v24;
      uint64_t v25 = (void *)(((unint64_t)v23 + v8 + 8) & v16);
      uint64_t v26 = (const void *)(((unint64_t)v24 + v8 + 8) & v16);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v26, 1, v5))
      {
        memcpy(v25, v26, v9);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v25, v26, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v5);
      }
      char v22 = 0;
    }
    a1[v10] = v22;
  }
  return a1;
}

uint64_t sub_10004EA2C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84)) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  else {
    uint64_t v4 = *(void *)(v3 + 64) + 1;
  }
  unint64_t v5 = v4 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v6 = 24;
  if (v5 > 0x18) {
    uint64_t v6 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_25;
  }
  uint64_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v11 = ((a2 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v11 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v11 < 2)
    {
LABEL_25:
      unsigned int v13 = *((unsigned __int8 *)a1 + v6);
      if (v13 >= 2) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_25;
  }
LABEL_17:
  int v12 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v12 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v7 | v12) + 255;
}

void sub_10004EBA8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v7 = v6 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  if (v7 <= 0x18) {
    unint64_t v7 = 24;
  }
  size_t v8 = v7 + 1;
  if (a3 < 0xFF)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << (8 * v8)) - 254) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v10 = a2 - 255;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v7 != -1)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x10004EDB8);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v7] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_10004EDE0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84)) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  else {
    uint64_t v3 = *(void *)(v2 + 64) + 1;
  }
  unint64_t v4 = v3 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = 24;
  if (v4 > 0x18) {
    uint64_t v5 = v4;
  }
  uint64_t v6 = a1[v5];
  int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_15;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_15:
        unsigned int v10 = (v9 | (v7 << (8 * v5))) + 2;
        LODWORD(v6) = v9 + 2;
        if (v5 >= 4) {
          uint64_t v6 = v6;
        }
        else {
          uint64_t v6 = v10;
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

void sub_10004EEE0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v4 + 84)) {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64) + 1;
  }
  size_t v6 = v5 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  if (v6 <= 0x18) {
    size_t v6 = 24;
  }
  if (a2 > 1)
  {
    if (v6 <= 3) {
      char v7 = ((a2 - 2) >> (8 * v6)) + 2;
    }
    else {
      char v7 = 2;
    }
    if (v6 <= 3) {
      int v8 = (a2 - 2) & ~(-1 << (8 * v6));
    }
    else {
      int v8 = a2 - 2;
    }
    a1[v6] = v7;
    if (v6 >= 4) {
      int v9 = 4;
    }
    else {
      int v9 = v6;
    }
    bzero(a1, v6);
    switch(v9)
    {
      case 2:
        *(_WORD *)a1 = v8;
        break;
      case 3:
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
        break;
      case 4:
        *(_DWORD *)a1 = v8;
        break;
      default:
        *a1 = v8;
        break;
    }
  }
  else
  {
    a1[v6] = a2;
  }
}

uint64_t sub_10004F024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 80);
}

uint64_t sub_10004F02C()
{
  uint64_t result = type metadata accessor for DisclosureGroupPicker.Selection();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10004F108(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 80);
  uint64_t v7 = v6;
  unint64_t v8 = v6 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = (v7 + 16) & ~v7;
  if (*(_DWORD *)(v4 + 84)) {
    size_t v10 = *(void *)(v4 + 64);
  }
  else {
    size_t v10 = *(void *)(v4 + 64) + 1;
  }
  if (v9 + v10 <= 0x18) {
    uint64_t v11 = 24;
  }
  else {
    uint64_t v11 = v9 + v10;
  }
  unint64_t v12 = ((((v11 + (v8 & (v6 + 32)) + 8) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  int v13 = v6 & 0x100000;
  if (v7 > 7 || v13 != 0 || v12 > 0x18)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    unint64_t v3 = v16 + (v8 & (v7 + 16));
  }
  else
  {
    uint64_t v39 = *(void *)(a3 + 16);
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
    unint64_t v17 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v17 = *(unsigned char *)v18;
    *(void *)(v17 + 8) = *(void *)(v18 + 8);
    uint64_t v19 = v8 & (v17 + 23);
    uint64_t v20 = v8 & (v18 + 23);
    unsigned int v21 = *(unsigned __int8 *)(v20 + v11);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v21 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v22 = v11;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *(unsigned __int8 *)v20;
          goto LABEL_25;
        case 2:
          int v23 = *(unsigned __int16 *)v20;
          goto LABEL_25;
        case 3:
          int v23 = *(unsigned __int16 *)v20 | (*(unsigned __int8 *)(v20 + 2) << 16);
          goto LABEL_25;
        case 4:
          int v23 = *(_DWORD *)v20;
LABEL_25:
          int v24 = (v23 | ((v21 - 2) << (8 * v11))) + 2;
          unsigned int v25 = v23 + 2;
          if (v11 >= 4) {
            unsigned int v21 = v25;
          }
          else {
            unsigned int v21 = v24;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v26 = v11 + 1;
    *(void *)uint64_t v19 = *(void *)v20;
    if (v21 == 1)
    {
      *(void *)(v19 + 8) = *(void *)(v20 + 8);
      *(void *)(v19 + 16) = *(void *)(v20 + 16);
      *(unsigned char *)(v19 + v11) = 1;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      int v27 = (void *)((v19 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v28 = (void *)((v20 + 15) & 0xFFFFFFFFFFFFFFF8);
      *int v27 = *v28;
      __dst = (void *)(((unint64_t)v27 + v7 + 8) & ~v7);
      uint64_t v29 = (const void *)(((unint64_t)v28 + v7 + 8) & ~v7);
      uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
      swift_retain();
      swift_retain();
      if (v30(v29, 1, v39))
      {
        memcpy(__dst, v29, v10);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(__dst, v29, v39);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(__dst, 0, 1, v39);
      }
      *(unsigned char *)(v19 + v11) = 0;
      uint64_t v26 = v11 + 1;
    }
    uint64_t v31 = (void *)(((v19 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = (void *)(((v20 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v35 = (void *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_10004F448(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (unsigned __int8 *)((v4 + (v7 | 7) + 16) & ~(v7 | 7));
  uint64_t v9 = *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v9;
  }
  if (v9 + ((v7 + 16) & (unint64_t)~v7) <= 0x18) {
    uint64_t v10 = 24;
  }
  else {
    uint64_t v10 = v9 + ((v7 + 16) & ~v7);
  }
  unsigned int v11 = v8[v10];
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *v8;
        goto LABEL_15;
      case 2:
        int v13 = *(unsigned __int16 *)v8;
        goto LABEL_15;
      case 3:
        int v13 = *(unsigned __int16 *)v8 | (v8[2] << 16);
        goto LABEL_15;
      case 4:
        int v13 = *(_DWORD *)v8;
LABEL_15:
        int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
        unsigned int v15 = v13 + 2;
        if (v10 >= 4) {
          unsigned int v11 = v15;
        }
        else {
          unsigned int v11 = v14;
        }
        break;
      default:
        break;
    }
  }
  swift_release();
  if (v11 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    unint64_t v16 = (v7 + ((unint64_t)(v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v16, 1, v5)) {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v16, v5);
    }
  }
  swift_release();
  return swift_release();
}

unint64_t sub_10004F658(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v4 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v4 = *(unsigned char *)v5;
  *(void *)(v4 + 8) = *(void *)(v5 + 8);
  uint64_t v31 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v31 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  unint64_t v8 = *(_DWORD *)(v6 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = (v7 + 16 + v4) & v8;
  uint64_t v10 = (v7 + 16 + v5) & v8;
  uint64_t v11 = (v7 + 16) & ~v7;
  if (*(_DWORD *)(v6 + 84)) {
    size_t v12 = *(void *)(*(void *)(v31 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v31 - 8) + 64) + 1;
  }
  if (v11 + v12 <= 0x18) {
    uint64_t v13 = 24;
  }
  else {
    uint64_t v13 = v11 + v12;
  }
  unsigned int v14 = *(unsigned __int8 *)(v10 + v13);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *(unsigned __int8 *)v10;
        goto LABEL_16;
      case 2:
        int v16 = *(unsigned __int16 *)v10;
        goto LABEL_16;
      case 3:
        int v16 = *(unsigned __int16 *)v10 | (*(unsigned __int8 *)(v10 + 2) << 16);
        goto LABEL_16;
      case 4:
        int v16 = *(_DWORD *)v10;
LABEL_16:
        int v17 = (v16 | ((v14 - 2) << (8 * v13))) + 2;
        unsigned int v18 = v16 + 2;
        if (v13 >= 4) {
          unsigned int v14 = v18;
        }
        else {
          unsigned int v14 = v17;
        }
        break;
      default:
        break;
    }
  }
  *(void *)uint64_t v9 = *(void *)v10;
  if (v14 == 1)
  {
    *(void *)(v9 + 8) = *(void *)(v10 + 8);
    *(void *)(v9 + 16) = *(void *)(v10 + 16);
    *(unsigned char *)(v9 + v13) = 1;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v19 = (void *)((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)((v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    unsigned int v21 = (void *)(((unint64_t)v19 + v7 + 8) & ~v7);
    uint64_t v22 = (const void *)(((unint64_t)v20 + v7 + 8) & ~v7);
    int v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    swift_retain();
    swift_retain();
    if (v23(v22, 1, v31))
    {
      memcpy(v21, v22, v12);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v21, v22, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v31);
    }
    *(unsigned char *)(v9 + v13) = 0;
  }
  int v24 = (void *)(((v9 | 7) + v13 + 1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v25 = (void *)(((v10 | 7) + v13 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = v25[1];
  *int v24 = *v25;
  v24[1] = v26;
  int v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = v28[1];
  *int v27 = *v28;
  v27[1] = v29;
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_10004F948(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a1;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v7 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = v12 + 16;
  unint64_t v14 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = (v12 + 16 + v7) & v14;
  uint64_t v16 = (v12 + 16 + v8) & v14;
  if (v15 == v16)
  {
    int v18 = *(_DWORD *)(v10 + 84);
    size_t v25 = *(void *)(v10 + 64);
    uint64_t v17 = v13 & ~v12;
  }
  else
  {
    uint64_t v17 = v13 & ~v12;
    int v18 = *(_DWORD *)(v10 + 84);
    size_t v19 = *(void *)(v10 + 64);
    size_t v51 = v19;
    unint64_t v52 = v4;
    if (!v18) {
      ++v19;
    }
    size_t __n = v19;
    unint64_t v20 = v19 + v17;
    if (v20 <= 0x18) {
      uint64_t v21 = 24;
    }
    else {
      uint64_t v21 = v20;
    }
    unsigned int v22 = *(unsigned __int8 *)(v15 + v21);
    if (v22 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v23 = v21;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *(unsigned __int8 *)v15;
          goto LABEL_17;
        case 2:
          int v24 = *(unsigned __int16 *)v15;
          goto LABEL_17;
        case 3:
          int v24 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)(v15 + 2) << 16);
          goto LABEL_17;
        case 4:
          int v24 = *(_DWORD *)v15;
LABEL_17:
          int v26 = (v24 | ((v22 - 2) << (8 * v21))) + 2;
          unsigned int v27 = v24 + 2;
          if (v21 >= 4) {
            unsigned int v22 = v27;
          }
          else {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v28 = ~v12;
    swift_release();
    if (v22 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      unint64_t v29 = (v12 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v28;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v29, 1, v9)) {
        (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v29, v9);
      }
    }
    unsigned int v30 = *(unsigned __int8 *)(v16 + v21);
    unsigned int v31 = v30 - 2;
    if (v30 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v32 = v21;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *(unsigned __int8 *)v16;
          goto LABEL_33;
        case 2:
          int v33 = *(unsigned __int16 *)v16;
          goto LABEL_33;
        case 3:
          int v33 = *(unsigned __int16 *)v16 | (*(unsigned __int8 *)(v16 + 2) << 16);
          goto LABEL_33;
        case 4:
          int v33 = *(_DWORD *)v16;
LABEL_33:
          int v34 = (v33 | (v31 << (8 * v21))) + 2;
          unsigned int v30 = v33 + 2;
          if (v21 < 4) {
            unsigned int v30 = v34;
          }
          break;
        default:
          break;
      }
    }
    *(void *)uint64_t v15 = *(void *)v16;
    if (v30 == 1)
    {
      *(void *)(v15 + 8) = *(void *)(v16 + 8);
      *(void *)(v15 + 16) = *(void *)(v16 + 16);
      *(unsigned char *)(v15 + v21) = 1;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      int v49 = v18;
      uint64_t v35 = (void *)((v15 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v36 = (void *)((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v35 = *v36;
      uint64_t v37 = (void *)(((unint64_t)v35 + v12 + 8) & v28);
      uint64_t v38 = (const void *)(((unint64_t)v36 + v12 + 8) & v28);
      uint64_t v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      swift_retain();
      swift_retain();
      if (v39(v38, 1, v9))
      {
        memcpy(v37, v38, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v37, v38, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0, 1, v9);
      }
      int v18 = v49;
      *(unsigned char *)(v15 + v21) = 0;
    }
    size_t v25 = v51;
    unint64_t v4 = v52;
  }
  unint64_t v40 = v25 + v17;
  if (!v18) {
    ++v40;
  }
  if (v40 <= 0x18) {
    unint64_t v40 = 24;
  }
  unint64_t v41 = v40 + 1;
  uint64_t v42 = (void *)(((v15 | 7) + v41) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v43 = (void *)(((v16 | 7) + v41) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  swift_retain();
  swift_release();
  char v45 = (void *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v46 = (void *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v47 = v46[1];
  *char v45 = *v46;
  v45[1] = v47;
  swift_retain();
  swift_release();
  return v4;
}

unint64_t sub_10004FDA0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v4 = (_OWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (_OWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80);
  unint64_t v9 = *(_DWORD *)(v7 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = ((unint64_t)v4 + v8 + 16) & v9;
  uint64_t v11 = ((unint64_t)v5 + v8 + 16) & v9;
  uint64_t v12 = (v8 + 16) & ~v8;
  if (*(_DWORD *)(v7 + 84)) {
    size_t v13 = *(void *)(v7 + 64);
  }
  else {
    size_t v13 = *(void *)(v7 + 64) + 1;
  }
  if (v12 + v13 <= 0x18) {
    uint64_t v14 = 24;
  }
  else {
    uint64_t v14 = v12 + v13;
  }
  unsigned int v15 = *(unsigned __int8 *)(v11 + v14);
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *(unsigned __int8 *)v11;
        goto LABEL_16;
      case 2:
        int v18 = *(unsigned __int16 *)v11;
        goto LABEL_16;
      case 3:
        int v18 = *(unsigned __int16 *)(((unint64_t)v5 + v8 + 16) & v9) | (*(unsigned __int8 *)((((unint64_t)v5 + v8 + 16) & v9)
                                                                                                 + 2) << 16);
        goto LABEL_16;
      case 4:
        int v18 = *(_DWORD *)v11;
LABEL_16:
        int v19 = (v18 | (v16 << (8 * v14))) + 2;
        unsigned int v15 = v18 + 2;
        if (v14 < 4) {
          unsigned int v15 = v19;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    long long v20 = *(_OWORD *)v11;
    *(void *)(v10 + 16) = *(void *)((((unint64_t)v5 + v8 + 16) & v9) + 0x10);
    *(_OWORD *)uint64_t v10 = v20;
    char v21 = 1;
  }
  else
  {
    uint64_t v22 = ~v8;
    *(void *)uint64_t v10 = *(void *)v11;
    uint64_t v23 = (void *)((v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    int v24 = (void *)((v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v24;
    uint64_t v25 = v8 + 8;
    int v26 = (void *)(((unint64_t)v23 + v25) & v22);
    unsigned int v27 = (const void *)(((unint64_t)v24 + v25) & v22);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v27, 1, v6))
    {
      memcpy(v26, v27, v13);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v26, v27, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
    }
    char v21 = 0;
  }
  *(unsigned char *)(v10 + v14) = v21;
  uint64_t v28 = (_OWORD *)(((v10 | 7) + v14 + 1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (_OWORD *)(((v11 | 7) + v14 + 1) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  *(_OWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unint64_t sub_100050034(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  unint64_t v7 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_release();
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = v12 + 16;
  unint64_t v14 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = (v12 + 16 + v7) & v14;
  uint64_t v16 = (v12 + 16 + v8) & v14;
  if (v15 == v16)
  {
    int v25 = *(_DWORD *)(v10 + 84);
    uint64_t v18 = *(void *)(v10 + 64);
    uint64_t v26 = v13 & ~v12;
  }
  else
  {
    uint64_t v17 = v13 & ~v12;
    uint64_t v18 = *(void *)(v10 + 64);
    int v49 = *(_DWORD *)(v10 + 84);
    if (v49) {
      size_t v19 = *(void *)(v10 + 64);
    }
    else {
      size_t v19 = v18 + 1;
    }
    size_t __n = v19;
    uint64_t v48 = v17;
    unint64_t v20 = v19 + v17;
    if (v20 <= 0x18) {
      uint64_t v21 = 24;
    }
    else {
      uint64_t v21 = v20;
    }
    unsigned int v22 = *(unsigned __int8 *)(v15 + v21);
    if (v22 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v23 = v21;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *(unsigned __int8 *)v15;
          goto LABEL_18;
        case 2:
          int v24 = *(unsigned __int16 *)v15;
          goto LABEL_18;
        case 3:
          int v24 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)(v15 + 2) << 16);
          goto LABEL_18;
        case 4:
          int v24 = *(_DWORD *)v15;
LABEL_18:
          int v27 = (v24 | ((v22 - 2) << (8 * v21))) + 2;
          unsigned int v28 = v24 + 2;
          if (v21 >= 4) {
            unsigned int v22 = v28;
          }
          else {
            unsigned int v22 = v27;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v29 = ~v12;
    swift_release();
    if (v22 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      unint64_t v30 = (v12 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & v29;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v30, 1, v9)) {
        (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v30, v9);
      }
    }
    unsigned int v31 = *(unsigned __int8 *)(v16 + v21);
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v33 = v21;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *(unsigned __int8 *)v16;
          goto LABEL_34;
        case 2:
          int v34 = *(unsigned __int16 *)v16;
          goto LABEL_34;
        case 3:
          int v34 = *(unsigned __int16 *)v16 | (*(unsigned __int8 *)(v16 + 2) << 16);
          goto LABEL_34;
        case 4:
          int v34 = *(_DWORD *)v16;
LABEL_34:
          int v35 = (v34 | (v32 << (8 * v21))) + 2;
          unsigned int v31 = v34 + 2;
          if (v21 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      long long v36 = *(_OWORD *)v16;
      *(void *)(v15 + 16) = *(void *)(v16 + 16);
      *(_OWORD *)uint64_t v15 = v36;
      *(unsigned char *)(v15 + v21) = 1;
    }
    else
    {
      *(void *)uint64_t v15 = *(void *)v16;
      uint64_t v37 = (void *)((v15 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v38 = (void *)((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v37 = *v38;
      uint64_t v39 = (void *)(((unint64_t)v37 + v12 + 8) & v29);
      unint64_t v40 = (const void *)(((unint64_t)v38 + v12 + 8) & v29);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v40, 1, v9))
      {
        memcpy(v39, v40, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v39, v40, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v39, 0, 1, v9);
      }
      *(unsigned char *)(v15 + v21) = 0;
    }
    int v25 = v49;
    uint64_t v26 = v48;
  }
  unint64_t v41 = v18 + v26;
  if (!v25) {
    ++v41;
  }
  if (v41 <= 0x18) {
    unint64_t v41 = 24;
  }
  unint64_t v42 = v41 + 1;
  uint64_t v43 = (_OWORD *)(((v15 | 7) + v42) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v44 = (v16 | 7) + v42;
  unint64_t v45 = (v44 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v43 = *(_OWORD *)(v44 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v45 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_10005043C(unint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  int v4 = *(_DWORD *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v5;
  }
  unint64_t v6 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  if (v6 <= 0x18) {
    unint64_t v6 = 24;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_7;
  }
  unint64_t v9 = ((((((v4 & 0xF8 ^ 0x1F8u) & (v4 + 32)) + v6 + 8) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  uint64_t v10 = v9 & 0xFFFFFFF8;
  unsigned int v11 = a2 - 2147483646;
  if ((v9 & 0xFFFFFFF8) != 0) {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v13 = 1;
  }
  else {
    int v13 = v12;
  }
  if (v13 == 4)
  {
    int v14 = *(_DWORD *)(a1 + v9);
    if (!v14) {
      goto LABEL_7;
    }
  }
  else if (v13 == 2)
  {
    int v14 = *(unsigned __int16 *)(a1 + v9);
    if (!v14) {
      goto LABEL_7;
    }
  }
  else
  {
    int v14 = *(unsigned __int8 *)(a1 + v9);
    if (!v14)
    {
LABEL_7:
      unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v7 >= 0xFFFFFFFF) {
        LODWORD(v7) = -1;
      }
      return (v7 + 1);
    }
  }
  int v15 = v14 - 1;
  if (v10)
  {
    int v15 = 0;
    LODWORD(v10) = *(_DWORD *)a1;
  }
  return (v10 | v15) ^ 0x80000000;
}

void sub_100050578(unint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v7 = v6 + ((*(_DWORD *)(v5 + 80) + 16) & ~(unint64_t)*(_DWORD *)(v5 + 80));
  if (v7 <= 0x18) {
    unint64_t v7 = 24;
  }
  size_t v8 = ((((((*(_DWORD *)(v5 + 80) & 0xF8 ^ 0x1F8u) & (*(_DWORD *)(v5 + 80) + 32)) + v7 + 8) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (a3 < 0)
  {
    unsigned int v10 = a3 - 2147483646;
    if (((((((*(_DWORD *)(v5 + 80) & 0xF8 ^ 0x1F8) & (*(_DWORD *)(v5 + 80) + 32)) + v7 + 8) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
      unsigned int v10 = 2;
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v9 = 1;
    }
    else {
      int v9 = v11;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    int v9 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_8:
      switch(v9)
      {
        case 1:
          *(unsigned char *)(a1 + v8) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_29;
        case 2:
          *(_WORD *)(a1 + v8) = 0;
          goto LABEL_28;
        case 3:
          goto LABEL_35;
        case 4:
          *(_DWORD *)(a1 + v8) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_29;
        default:
LABEL_28:
          if (a2) {
LABEL_29:
          }
            *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (v8) {
    int v12 = 1;
  }
  else {
    int v12 = a2 - 0x7FFFFFFF;
  }
  if (v8)
  {
    unsigned int v13 = a2 ^ 0x80000000;
    bzero((void *)a1, v8);
    *(_DWORD *)a1 = v13;
  }
  switch(v9)
  {
    case 1:
      *(unsigned char *)(a1 + v8) = v12;
      break;
    case 2:
      *(_WORD *)(a1 + v8) = v12;
      break;
    case 3:
LABEL_35:
      __break(1u);
      JUMPOUT(0x100050730);
    case 4:
      *(_DWORD *)(a1 + v8) = v12;
      break;
    default:
      return;
  }
}

uint64_t sub_100050758()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000507AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v55 = a1;
  uint64_t v59 = *(a1 - 1);
  uint64_t v60 = *(void *)(v59 + 64);
  uint64_t v3 = __chkstk_darwin(a1);
  long long v58 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = *(void *)(v3 + 24);
  sub_10000BD00(&qword_1000A7948);
  uint64_t v5 = a1[2];
  uint64_t v6 = sub_100084F60();
  uint64_t v7 = a1[6];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = a1[4];
  sub_10000BD00(&qword_1000A7950);
  swift_getTupleTypeMetadata3();
  sub_100084C10();
  swift_getWitnessTable();
  sub_100084AD0();
  sub_100084550();
  sub_10000BD00(&qword_1000A7958);
  sub_100084550();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v79 = &protocol witness table for _FlexFrameLayout;
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v10 = sub_10000C360(&qword_1000A7960, &qword_1000A7958);
  uint64_t v76 = v9;
  uint64_t v77 = v10;
  swift_getWitnessTable();
  uint64_t v11 = sub_100084AB0();
  uint64_t v12 = sub_100084570();
  uint64_t v13 = swift_getWitnessTable();
  unint64_t v14 = sub_100054354();
  uint64_t v71 = v11;
  uint64_t v72 = v12;
  uint64_t v73 = v13;
  unint64_t v74 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = v7;
  uint64_t v18 = v5;
  uint64_t v45 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v71 = v6;
  uint64_t v72 = AssociatedTypeWitness;
  uint64_t v73 = OpaqueTypeMetadata2;
  unint64_t v74 = v16;
  uint64_t v75 = AssociatedConformanceWitness;
  sub_100084B70();
  swift_getTupleTypeMetadata3();
  uint64_t v20 = sub_100084C10();
  uint64_t v52 = v20;
  uint64_t v21 = v55;
  uint64_t v22 = v55[7];
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v23 = v56;
  uint64_t v71 = v56;
  uint64_t v72 = v20;
  uint64_t v73 = v22;
  unint64_t v74 = v51;
  uint64_t v53 = sub_100084540();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v24 = __chkstk_darwin(v53);
  int v49 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v50 = (uint64_t *)((char *)&v45 - v26);
  uint64_t v27 = v62;
  uint64_t v48 = sub_10004D904();
  uint64_t v47 = v28;
  int v46 = v29;
  uint64_t v30 = v59;
  unsigned int v31 = v58;
  (*(void (**)(char *, uint64_t, void *))(v59 + 16))(v58, v27, v21);
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = v18;
  *((void *)v33 + 3) = v23;
  int v34 = v21;
  uint64_t v35 = v21[5];
  uint64_t v36 = v57;
  *((void *)v33 + 4) = v57;
  *((void *)v33 + 5) = v35;
  uint64_t v37 = v17;
  *((void *)v33 + 6) = v17;
  *((void *)v33 + 7) = v22;
  uint64_t v38 = v34[8];
  *((void *)v33 + 8) = v38;
  (*(void (**)(char *, char *))(v30 + 32))(&v33[v32], v31);
  uint64_t v63 = v45;
  uint64_t v64 = v23;
  uint64_t v65 = v36;
  uint64_t v66 = v35;
  uint64_t v67 = v37;
  uint64_t v68 = v22;
  uint64_t v69 = v38;
  uint64_t v70 = v62;
  uint64_t v39 = v49;
  sub_100084520();
  uint64_t v40 = v53;
  uint64_t v41 = swift_getWitnessTable();
  unint64_t v42 = v50;
  sub_100049C38(v50, v39, v40, v41);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v54 + 8);
  v43(v39, v40);
  sub_100049C38(v61, v42, v40, v41);
  return ((uint64_t (*)(void *, uint64_t))v43)(v42, v40);
}

uint64_t sub_100050DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v27 = a7;
  uint64_t v28 = a8;
  uint64_t v25 = a3;
  uint64_t v26 = a5;
  uint64_t v24 = a4;
  uint64_t v29 = a1;
  uint64_t v30 = a9;
  sub_10000BD00(&qword_1000A7948);
  uint64_t v11 = sub_100084F60();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_10000BD00(&qword_1000A7950);
  swift_getTupleTypeMetadata3();
  sub_100084C10();
  swift_getWitnessTable();
  sub_100084AD0();
  sub_100084550();
  sub_10000BD00(&qword_1000A7958);
  sub_100084550();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = &protocol witness table for _FlexFrameLayout;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = sub_10000C360(&qword_1000A7960, &qword_1000A7958);
  swift_getWitnessTable();
  sub_100084AB0();
  sub_100084570();
  swift_getWitnessTable();
  sub_100054354();
  uint64_t v31 = v11;
  uint64_t v32 = AssociatedTypeWitness;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v34 = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_100084B70();
  swift_getTupleTypeMetadata3();
  uint64_t v13 = sub_100084C10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  size_t v19 = (uint64_t *)((char *)&v24 - v18);
  uint64_t v31 = a2;
  uint64_t v32 = v25;
  OpaqueTypeMetadata2 = v24;
  uint64_t v34 = v26;
  uint64_t AssociatedConformanceWitness = a6;
  uint64_t v36 = v27;
  uint64_t v37 = v28;
  uint64_t v20 = type metadata accessor for DisclosureGroupPicker();
  sub_1000511F0(v20, (uint64_t)v17);
  uint64_t v21 = swift_getWitnessTable();
  sub_100049C38(v19, v17, v13, v21);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v22(v17, v13);
  sub_100049C38(v30, v19, v13, v21);
  return ((uint64_t (*)(void *, uint64_t))v22)(v19, v13);
}

uint64_t sub_1000511F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v61 = a1;
  uint64_t v3 = a1 - 8;
  uint64_t v57 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v54 = v4;
  uint64_t v55 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v6 = sub_100084F60();
  uint64_t v7 = *(void *)(v3 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v3 + 40);
  sub_10000BD00(&qword_1000A7950);
  uint64_t v52 = v9;
  swift_getTupleTypeMetadata3();
  sub_100084C10();
  swift_getWitnessTable();
  sub_100084AD0();
  sub_100084550();
  sub_10000BD00(&qword_1000A7958);
  sub_100084550();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v76 = &protocol witness table for _FlexFrameLayout;
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = sub_10000C360(&qword_1000A7960, &qword_1000A7958);
  uint64_t v73 = v10;
  uint64_t v74 = v11;
  swift_getWitnessTable();
  uint64_t v12 = sub_100084AB0();
  uint64_t v13 = sub_100084570();
  uint64_t v14 = swift_getWitnessTable();
  unint64_t v15 = sub_100054354();
  uint64_t v48 = v12;
  uint64_t v68 = (void *)v12;
  uint64_t v69 = (char *)v13;
  uint64_t v47 = v13;
  uint64_t v45 = (void *)v14;
  uint64_t v70 = (void *)v14;
  unint64_t v71 = v15;
  unint64_t v43 = v15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v58 = v7;
  uint64_t v53 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v59 = v6;
  uint64_t v68 = (void *)v6;
  uint64_t v69 = (char *)AssociatedTypeWitness;
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v46 = OpaqueTypeMetadata2;
  uint64_t v70 = (void *)OpaqueTypeMetadata2;
  unint64_t v71 = v17;
  uint64_t v44 = v17;
  uint64_t v72 = AssociatedConformanceWitness;
  uint64_t v19 = sub_100084B70();
  uint64_t v49 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v51 = (char *)&v40 - v23;
  uint64_t v24 = 0;
  int v25 = *v2;
  uint64_t v26 = *(void *)(v3 + 32);
  uint64_t v41 = *(void *)(v3 + 48);
  long long v42 = *(_OWORD *)(v3 + 64);
  if ((v25 - 3) <= 1)
  {
    sub_100051A58(v61, (uint64_t *)&v68);
    uint64_t v24 = (uint64_t)v68;
  }
  uint64_t v50 = v24;
  v65[0] = *((void *)v2 + 1);
  uint64_t v27 = v57;
  uint64_t v28 = v55;
  uint64_t v29 = v61;
  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v57 + 16))(v55, v2, v61);
  unint64_t v30 = (*(unsigned __int8 *)(v27 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v53;
  *(void *)(v31 + 24) = v26;
  uint64_t v32 = v41;
  *(void *)(v31 + 32) = v52;
  *(void *)(v31 + 40) = v32;
  *(void *)(v31 + 48) = v58;
  *(_OWORD *)(v31 + 56) = v42;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v31 + v30, v28, v29);
  swift_bridgeObjectRetain();
  uint64_t v68 = (void *)v48;
  uint64_t v69 = (char *)v47;
  uint64_t v70 = v45;
  unint64_t v71 = v43;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100084B60();
  v67[1] = OpaqueTypeConformance2;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = v51;
  sub_100049C38(v51, v22, v19, v34);
  uint64_t v36 = v49;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v49 + 8);
  v37(v22, v19);
  if (*v2 - 1 > 1)
  {
    uint64_t v38 = 0;
  }
  else
  {
    sub_100051A58(v61, (uint64_t *)&v68);
    uint64_t v38 = (uint64_t)v68;
  }
  v67[0] = v50;
  uint64_t v68 = v67;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v22, v35, v19);
  uint64_t v66 = v38;
  uint64_t v69 = v22;
  uint64_t v70 = &v66;
  swift_retain();
  swift_retain();
  v65[0] = sub_100004BB0(&qword_1000A7948);
  v65[1] = v19;
  v65[2] = v65[0];
  unint64_t v62 = sub_100054574();
  uint64_t v63 = v34;
  unint64_t v64 = v62;
  sub_100049D6C((uint64_t)&v68, 3uLL, (uint64_t)v65);
  swift_release();
  swift_release();
  v37(v35, v19);
  swift_release();
  v37(v22, v19);
  return swift_release();
}

uint64_t sub_1000518E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X6>, void *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (void *)((char *)v24 - v12);
  v24[1] = v14;
  void v24[2] = v15;
  v24[3] = v16;
  v24[4] = v17;
  void v24[5] = v18;
  v24[6] = v19;
  v24[7] = v20;
  uint64_t v21 = type metadata accessor for DisclosureGroupPicker();
  (*(void (**)(void))(a1 + *(int *)(v21 + 88)))();
  sub_100049C38(v13, v11, a2, a3);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, a2);
  sub_100049C38(a4, v13, a2, a3);
  return ((uint64_t (*)(void *, uint64_t))v22)(v13, a2);
}

BOOL sub_100051A44(unsigned __int8 a1)
{
  return a1 - 3 < 2;
}

uint64_t sub_100051A58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = sub_100004BB0(&qword_1000A6140);
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v54 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v55 = (char *)&v43 - v6;
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v64 = v13;
  uint64_t v65 = v7;
  uint64_t v58 = v7;
  uint64_t v66 = v8;
  uint64_t v67 = v9;
  uint64_t v68 = v11;
  uint64_t v69 = v10;
  uint64_t v70 = v12;
  uint64_t v14 = type metadata accessor for DisclosureGroupPicker.Selection();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v43 - v16);
  uint64_t v18 = *(int *)(a1 + 84);
  uint64_t v19 = v59;
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v15 + 16))(v17, &v59[v18], v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = v17[1];
    uint64_t v53 = *v17;
    uint64_t v21 = v17[2];
    uint64_t v48 = v12;
    uint64_t v49 = sub_100052B94((uint64_t)v19, v13, v58, v8, v9, v11, v10, v12);
    uint64_t v52 = v22;
    uint64_t v23 = v8;
    uint64_t v24 = (uint64_t)v19;
    if (qword_1000A5D30 != -1)
    {
      swift_once();
      uint64_t v23 = v8;
    }
    uint64_t v25 = unk_1000AB610;
    uint64_t v64 = qword_1000AB608;
    uint64_t v65 = unk_1000AB610;
    LOBYTE(v66) = byte_1000AB618;
    uint64_t v67 = qword_1000AB620;
    switch(*v19)
    {
      case 1:
      case 3:
        uint64_t v50 = v21;
        uint64_t v51 = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 2:
      case 4:
        uint64_t v47 = v10;
        uint64_t v45 = v11;
        uint64_t v44 = v23;
        uint64_t v61 = v53;
        uint64_t v62 = v20;
        uint64_t v63 = v21;
        sub_1000850F0();
        sub_100084B40();
        uint64_t v46 = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100084B20();
        uint64_t v27 = sub_100085090();
        swift_bridgeObjectRelease();
        uint64_t v28 = sub_100084F30();
        uint64_t v51 = v20;
        uint64_t v50 = v21;
        if (v27 == v28)
        {
          swift_release();
          uint64_t v29 = sub_100052F20(v24, v13, v58, v44, v9, v45, v47, v48);
          uint64_t v31 = v30;
          if (qword_1000A5D38 != -1) {
            swift_once();
          }
          uint64_t v33 = qword_1000AB628;
          uint64_t v32 = unk_1000AB630;
          char v34 = byte_1000AB638;
          uint64_t v35 = qword_1000AB640;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = v33;
          uint64_t v65 = v32;
          LOBYTE(v66) = v34;
          uint64_t v67 = v35;
          uint64_t v36 = v60;
        }
        else
        {
LABEL_11:
          uint64_t v36 = v60;
          uint64_t v31 = v52;
          uint64_t v29 = v49;
        }
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v29;
        *(void *)(v37 + 24) = v31;
        __chkstk_darwin(v37);
        *(&v43 - 2) = (uint64_t)&v64;
        swift_retain();
        uint64_t v38 = v55;
        sub_100084A80();
        uint64_t v40 = v56;
        uint64_t v39 = v57;
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v54, v38, v57);
        sub_10000C360(&qword_1000A69E0, &qword_1000A6140);
        uint64_t v41 = sub_100084B10();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
        *uint64_t v36 = v41;
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        break;
      default:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_100084B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t result = swift_release();
        *uint64_t v60 = v42;
        break;
    }
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t result = sub_100084B10();
    *uint64_t v60 = result;
  }
  return result;
}

uint64_t sub_1000520A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  uint64_t v29 = a4;
  unint64_t v30 = a6;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v35 = a9;
  uint64_t v27 = a3;
  uint64_t v28 = a10;
  sub_10000BD00(&qword_1000A7950);
  swift_getTupleTypeMetadata3();
  sub_100084C10();
  swift_getWitnessTable();
  sub_100084AD0();
  sub_100084550();
  sub_10000BD00(&qword_1000A7958);
  sub_100084550();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v46 = &protocol witness table for _FlexFrameLayout;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = sub_10000C360(&qword_1000A7960, &qword_1000A7958);
  swift_getWitnessTable();
  uint64_t v11 = sub_100084AB0();
  uint64_t v12 = sub_100084570();
  uint64_t v13 = swift_getWitnessTable();
  unint64_t v14 = sub_100054354();
  uint64_t v36 = v11;
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  unint64_t v39 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v16 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v17 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v19 = (uint64_t *)((char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v21 = (uint64_t *)((char *)&v26 - v20);
  uint64_t v36 = v27;
  uint64_t v37 = v29;
  uint64_t v38 = a5;
  unint64_t v39 = v30;
  uint64_t v40 = v31;
  uint64_t v41 = v32;
  uint64_t v42 = v28;
  uint64_t v22 = (void *)type metadata accessor for DisclosureGroupPicker();
  sub_1000523F0(v33, v22, v19);
  uint64_t v36 = v11;
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  unint64_t v39 = v14;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100049C38(v21, v19, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v24 = *(void (**)(void *, uint64_t))(v16 + 8);
  v24(v19, OpaqueTypeMetadata2);
  sub_100049C38(v35, v21, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  return ((uint64_t (*)(void *, uint64_t))v24)(v21, OpaqueTypeMetadata2);
}

uint64_t sub_1000523F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v50 = a1;
  uint64_t v72 = a3;
  uint64_t v7 = sub_100084570();
  uint64_t v56 = v7;
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = a2[2];
  uint64_t v67 = *(void *)(v68 - 8);
  uint64_t v69 = *(void *)(v67 + 64);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v12;
  uint64_t v73 = *(a2 - 1);
  unint64_t v65 = *(void *)(v73 + 64);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v14;
  uint64_t v66 = a2[4];
  sub_10000BD00(&qword_1000A7950);
  swift_getTupleTypeMetadata3();
  sub_100084C10();
  swift_getWitnessTable();
  sub_100084AD0();
  sub_100084550();
  sub_10000BD00(&qword_1000A7958);
  uint64_t v15 = sub_100084550();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v90 = &protocol witness table for _FlexFrameLayout;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = sub_10000C360(&qword_1000A7960, &qword_1000A7958);
  uint64_t v87 = v16;
  uint64_t v88 = v17;
  uint64_t v62 = v15;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v18 = sub_100084AB0();
  uint64_t v57 = v18;
  uint64_t v64 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v58 = (char *)&v48 - v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v55 = v20;
  unint64_t v54 = sub_100054354();
  uint64_t v83 = v18;
  uint64_t v84 = v7;
  uint64_t v85 = v20;
  unint64_t v86 = v54;
  uint64_t v59 = &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v63 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v21 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v52 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v53 = (char **)((char *)&v48 - v23);
  uint64_t v24 = v73;
  (*(void (**)(char *, uint64_t, void *))(v73 + 16))(v14, v4, a2);
  uint64_t v25 = v67;
  uint64_t v26 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v12, a1, v68);
  unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v65 = (v65 + v27 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = (char *)swift_allocObject();
  uint64_t v29 = a2;
  uint64_t v30 = a2[3];
  *((void *)v28 + 2) = v26;
  *((void *)v28 + 3) = v30;
  uint64_t v31 = a2[5];
  uint64_t v32 = v29[6];
  uint64_t v33 = v29[7];
  uint64_t v34 = v66;
  *((void *)v28 + 4) = v66;
  *((void *)v28 + 5) = v31;
  uint64_t v35 = v29[8];
  *((void *)v28 + 6) = v32;
  *((void *)v28 + 7) = v33;
  *((void *)v28 + 8) = v35;
  (*(void (**)(char *, char *))(v73 + 32))(&v28[v27], v48);
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v28[v65], v49, v26);
  uint64_t v74 = v26;
  uint64_t v75 = v30;
  uint64_t v76 = v34;
  uint64_t v77 = v31;
  uint64_t v78 = v32;
  uint64_t v79 = v33;
  uint64_t v80 = v35;
  uint64_t v81 = v51;
  uint64_t v82 = v50;
  uint64_t v36 = v58;
  sub_100084A80();
  uint64_t v37 = v70;
  sub_100084560();
  uint64_t v38 = v52;
  uint64_t v39 = v57;
  uint64_t v40 = v56;
  uint64_t v41 = v55;
  unint64_t v42 = v54;
  sub_1000848E0();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v37, v40);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v39);
  uint64_t v83 = v39;
  uint64_t v84 = v40;
  uint64_t v85 = v41;
  unint64_t v86 = v42;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v44 = v53;
  uint64_t v45 = OpaqueTypeMetadata2;
  sub_100049C38(v53, v38, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v63 + 8);
  v46(v38, v45);
  sub_100049C38(v72, v44, v45, OpaqueTypeConformance2);
  return ((uint64_t (*)(void *, uint64_t))v46)(v44, v45);
}

BOOL sub_100052B80(unsigned __int8 a1)
{
  return a1 - 1 < 2;
}

uint64_t (*sub_100052B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))()
{
  uint64_t v22 = a7;
  uint64_t v23 = a8;
  uint64_t v21 = a6;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  uint64_t v30 = a8;
  uint64_t v13 = type metadata accessor for DisclosureGroupPicker();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - v15, a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a2;
  *((void *)v18 + 3) = a3;
  *((void *)v18 + 4) = a4;
  *((void *)v18 + 5) = a5;
  uint64_t v19 = v22;
  *((void *)v18 + 6) = v21;
  *((void *)v18 + 7) = v19;
  *((void *)v18 + 8) = v23;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v18[v17], v16, v13);
  return sub_100054878;
}

uint64_t sub_100052D14(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  long long v12 = *(_OWORD *)(a1 + 16);
  long long v15 = v12;
  uint64_t v16 = v3;
  long long v13 = *(_OWORD *)(a1 + 40);
  long long v17 = v13;
  long long v18 = *(_OWORD *)(a1 + 56);
  uint64_t v4 = type metadata accessor for DisclosureGroupPicker.Selection();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v12 - v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - v6, v1 + *(int *)(a1 + 84), v4);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = v7[2];
  *(void *)&long long v15 = v8;
  *((void *)&v15 + 1) = v9;
  uint64_t v16 = v10;
  uint64_t v14 = *(void *)(v1 + 8);
  sub_100084F60();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v14 = sub_100085100();
  sub_1000850F0();
  sub_100084B40();
  sub_100084B30();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  return swift_release_n();
}

uint64_t (*sub_100052F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))()
{
  uint64_t v22 = a7;
  uint64_t v23 = a8;
  uint64_t v21 = a6;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  uint64_t v30 = a8;
  uint64_t v13 = type metadata accessor for DisclosureGroupPicker();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - v15, a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  long long v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a2;
  *((void *)v18 + 3) = a3;
  *((void *)v18 + 4) = a4;
  *((void *)v18 + 5) = a5;
  uint64_t v19 = v22;
  *((void *)v18 + 6) = v21;
  *((void *)v18 + 7) = v19;
  *((void *)v18 + 8) = v23;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v18[v17], v16, v13);
  return sub_10005464C;
}

uint64_t sub_1000530A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  long long v13 = *(_OWORD *)(a1 + 16);
  long long v16 = v13;
  uint64_t v17 = v3;
  long long v12 = *(_OWORD *)(a1 + 40);
  long long v18 = v12;
  long long v19 = *(_OWORD *)(a1 + 56);
  uint64_t v4 = type metadata accessor for DisclosureGroupPicker.Selection();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v12 - v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - v6, v1 + *(int *)(a1 + 84), v4);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = v7[2];
  *(void *)&long long v16 = v8;
  *((void *)&v16 + 1) = v9;
  uint64_t v17 = v10;
  sub_1000850F0();
  sub_100084B40();
  sub_100084B20();
  sub_1000850E0(0);
  *(void *)&long long v16 = v8;
  *((void *)&v16 + 1) = v9;
  uint64_t v17 = v10;
  uint64_t v14 = v15;
  sub_100084B30();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_10005325C@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_100084880();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000532F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_1000533E8(a1, a2))
  {
    uint64_t v4 = sub_100084A00();
    sub_1000849C0();
    uint64_t v6 = v4;
    char KeyPath = swift_getKeyPath();
    sub_100004BB0(&qword_1000A7988);
    sub_100054F40();
  }
  sub_100084B10();
  uint64_t result = sub_100084780();
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 8) = KeyPath;
  return result;
}

uint64_t sub_1000533E8(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a1;
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v37 = AssociatedTypeWitness;
  uint64_t v7 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v34 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v32 - v9;
  uint64_t v10 = sub_100085200();
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  long long v13 = (char *)&v32 - v12;
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v11);
  uint64_t v38 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100084B40();
  uint64_t v40 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = *(void *)(a2 + 40);
  uint64_t v42 = v5;
  long long v43 = *(_OWORD *)(a2 + 24);
  uint64_t v44 = v18;
  uint64_t v45 = v4;
  uint64_t v35 = v4;
  long long v46 = *(_OWORD *)(a2 + 56);
  uint64_t v19 = type metadata accessor for DisclosureGroupPicker.Selection();
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v32 - v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)&v32 - v20, v2 + *(int *)(a2 + 84), v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    uint64_t v42 = *v21;
    *(void *)&long long v43 = v23;
    *((void *)&v43 + 1) = v24;
    sub_1000850F0();
    sub_100084B40();
    sub_100084B20();
    char v25 = sub_1000850D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v40 + 32))(v17, v21, v15);
    sub_100084B20();
    uint64_t v26 = v39;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v13, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v15);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
      char v25 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v38, v13, v5);
      uint64_t v27 = v33;
      sub_100085350();
      uint64_t v28 = v34;
      sub_100085350();
      uint64_t v29 = v37;
      swift_getAssociatedConformanceWitness();
      char v25 = sub_100084CF0();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v36 + 8);
      v30(v28, v29);
      v30(v27, v29);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v38, v5);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v15);
    }
  }
  return v25 & 1;
}

uint64_t sub_100053928(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_100085200();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = sub_100084B40();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v29 = v5;
  long long v13 = *(_OWORD *)(a2 + 24);
  long long v26 = *(_OWORD *)(a2 + 40);
  long long v30 = v13;
  long long v31 = v26;
  long long v32 = *(_OWORD *)(a2 + 56);
  uint64_t v14 = type metadata accessor for DisclosureGroupPicker.Selection();
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v26 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v26 - v15, v2 + *(int *)(a2 + 84), v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = v16[1];
    uint64_t v20 = v16[2];
    uint64_t v29 = *v16;
    uint64_t v18 = v29;
    *(void *)&long long v30 = v19;
    *((void *)&v30 + 1) = v20;
    uint64_t v21 = sub_1000850F0();
    sub_100084B40();
    sub_100084B20();
    sub_10003B288(a1, v21);
    uint64_t v29 = v18;
    *(void *)&long long v30 = v19;
    *((void *)&v30 + 1) = v20;
    uint64_t v27 = v28;
    sub_100084B30();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v12, v16, v9);
    char v23 = sub_1000533E8(a1, a2);
    uint64_t v24 = *(void *)(v5 - 8);
    uint64_t v25 = v24;
    if (v23)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v8, 1, 1, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v8, a1, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v8, 0, 1, v5);
    }
    sub_100084B30();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_100053C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v36 = a8;
  uint64_t v33 = a6;
  uint64_t v31 = a4;
  uint64_t v29 = a3;
  uint64_t v34 = a2;
  uint64_t v32 = a1;
  uint64_t v40 = a9;
  uint64_t v30 = a10;
  sub_10000BD00(&qword_1000A7950);
  swift_getTupleTypeMetadata3();
  sub_100084C10();
  swift_getWitnessTable();
  uint64_t v11 = sub_100084AD0();
  uint64_t v37 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v13 = (char *)&v29 - v12;
  uint64_t v14 = sub_100084550();
  uint64_t v38 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v29 - v15;
  sub_10000BD00(&qword_1000A7958);
  uint64_t v17 = sub_100084550();
  uint64_t v39 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (uint64_t *)((char *)&v29 - v21);
  uint64_t v41 = v29;
  uint64_t v42 = v31;
  uint64_t v43 = a5;
  uint64_t v44 = v33;
  uint64_t v45 = v35;
  uint64_t v46 = v36;
  uint64_t v47 = v30;
  uint64_t v48 = v32;
  uint64_t v49 = v34;
  sub_100084690();
  sub_100084AC0();
  sub_100084BE0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100084990();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v11);
  uint64_t v52 = WitnessTable;
  uint64_t v53 = &protocol witness table for _FlexFrameLayout;
  uint64_t v23 = swift_getWitnessTable();
  sub_100054D70();
  sub_100084900();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v14);
  uint64_t v24 = sub_10000C360(&qword_1000A7960, &qword_1000A7958);
  uint64_t v50 = v23;
  uint64_t v51 = v24;
  uint64_t v25 = swift_getWitnessTable();
  sub_100049C38(v22, v20, v17, v25);
  long long v26 = *(void (**)(char *, uint64_t))(v39 + 8);
  v26(v20, v17);
  sub_100049C38(v40, v22, v17, v25);
  return ((uint64_t (*)(void *, uint64_t))v26)(v22, v17);
}

uint64_t sub_100054114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>, uint64_t a5)
{
  uint64_t v7 = a1;
  v24[1] = a4;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)v24 - v12;
  uint64_t v30 = v14;
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  uint64_t v33 = v17;
  uint64_t v34 = v18;
  uint64_t v35 = v19;
  uint64_t v36 = a5;
  v24[0] = a5;
  uint64_t v20 = type metadata accessor for DisclosureGroupPicker();
  (*(void (**)(uint64_t))(v7 + *(int *)(v20 + 92)))(a2);
  sub_100049C38(v13, v11, a3, a5);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v11, a3);
  sub_1000532F0(a2, v20, (uint64_t)&v30);
  uint64_t v22 = v30;
  LOBYTE(v7) = (_BYTE)v31;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, a3);
  uint64_t v28 = 0;
  char v29 = 1;
  uint64_t v30 = v11;
  uint64_t v31 = &v28;
  long long v26 = v22;
  char v27 = v7;
  uint64_t v32 = &v26;
  swift_retain();
  v25[0] = a3;
  v25[1] = &type metadata for Spacer;
  v25[2] = sub_100004BB0(&qword_1000A7950);
  void v24[2] = v24[0];
  v24[3] = &protocol witness table for Spacer;
  v24[4] = sub_100054DC4();
  sub_100049D6C((uint64_t)&v30, 3uLL, (uint64_t)v25);
  swift_release();
  v21(v13, a3);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v21)(v11, a3);
}

unint64_t sub_100054354()
{
  unint64_t result = qword_1000A7968;
  if (!qword_1000A7968)
  {
    sub_100084570();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7968);
  }
  return result;
}

uint64_t sub_1000543B0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = *(void *)(type metadata accessor for DisclosureGroupPicker() - 8);
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return sub_100050DF4(v11, v3, v4, v5, v6, v7, v8, v9, a1);
}

uint64_t sub_100054488@<X0>(void *a1@<X8>)
{
  return sub_1000518E4(v1[9], v1[3], v1[7], a1);
}

uint64_t sub_1000544A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  unint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  uint64_t v12 = *(void *)(type metadata accessor for DisclosureGroupPicker() - 8);
  return sub_1000520A4(a1, (uint64_t)v2 + ((*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v5, v6, v7, v8, v9, v10, a2, v11);
}

unint64_t sub_100054574()
{
  unint64_t result = qword_1000A7970;
  if (!qword_1000A7970)
  {
    sub_10000BD00(&qword_1000A7948);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7970);
  }
  return result;
}

uint64_t sub_1000545E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100054618()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100054640@<X0>(uint64_t a1@<X8>)
{
  return sub_10005325C(a1);
}

uint64_t sub_10005464C()
{
  return sub_100054890(sub_1000530A0);
}

uint64_t sub_100054668()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for DisclosureGroupPicker();
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + ((v8 + 72) & ~v8) + *(int *)(v2 + 84);
  type metadata accessor for DisclosureGroupPicker.Selection();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    sub_100085200();
    uint64_t v5 = v3 + *(int *)(sub_100084B40() + 32);
    uint64_t v6 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v1)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v1);
    }
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100054878()
{
  return sub_100054890(sub_100052D14);
}

uint64_t sub_100054890(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for DisclosureGroupPicker();
  uint64_t v2 = type metadata accessor for DisclosureGroupPicker();
  return a1(v2);
}

BOOL sub_10005495C(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_10005496C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for DisclosureGroupPicker();
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v10 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = (v12 + 72) & ~v12;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = v0 + v11 + *(int *)(v2 + 84);
  type metadata accessor for DisclosureGroupPicker.Selection();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v6 = v1;
  }
  else
  {
    swift_release();
    sub_100085200();
    uint64_t v7 = v4 + *(int *)(sub_100084B40() + 32);
    uint64_t v6 = v1;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v1)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
    }
  }
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + ((v11 + v10 + v9) & ~v9), v6);
  return swift_deallocObject();
}

uint64_t sub_100054BE0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for DisclosureGroupPicker() - 8);
  uint64_t v3 = v0
     + ((((*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 64)
       + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  uint64_t v4 = type metadata accessor for DisclosureGroupPicker();
  return sub_100053928(v3, v4);
}

uint64_t sub_100054D00()
{
  return sub_100054D30((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_100053C64);
}

uint64_t sub_100054D18()
{
  return sub_100054D30((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_100054114);
}

uint64_t sub_100054D30(uint64_t (*a1)(void, void, void, void, void, void, void, void, void))
{
  return a1(v1[9], v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

unint64_t sub_100054D70()
{
  unint64_t result = qword_1000A7978;
  if (!qword_1000A7978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7978);
  }
  return result;
}

unint64_t sub_100054DC4()
{
  unint64_t result = qword_1000A7980;
  if (!qword_1000A7980)
  {
    sub_10000BD00(&qword_1000A7950);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7980);
  }
  return result;
}

void sub_100054E30(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int sub_100054E58(unsigned __int8 a1)
{
  return sub_100085650();
}

BOOL sub_100054EA0(char *a1, char *a2)
{
  return sub_10005495C(*a1, *a2);
}

Swift::Int sub_100054ECC()
{
  return sub_100054E58(*v0);
}

void sub_100054ED4(uint64_t a1)
{
  sub_100054E30(a1, *v1);
}

Swift::Int sub_100054EF8()
{
  sub_100085630();
  sub_100054E30((uint64_t)v2, *v0);
  return sub_100085650();
}

unint64_t sub_100054F40()
{
  unint64_t result = qword_1000A7990[0];
  if (!qword_1000A7990[0])
  {
    sub_10000BD00(&qword_1000A7988);
    sub_10000C360(&qword_1000A7278, &qword_1000A7280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A7990);
  }
  return result;
}

uint64_t sub_100054FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t sub_100054FE8(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_100055078(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100055144);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for DisclosureGroupPicker.SelectAllConfig()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100055184()
{
  return swift_getWitnessTable();
}

uint64_t sub_10005548C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000554A8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100055548(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_10005564C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_1000556C0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_bridgeObjectRetain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_100055750(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_1000557E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_100055850(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1000558D8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_100055A78(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x100055CD4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ProfileSection()
{
  return sub_10000C880();
}

uint64_t sub_100055D14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100055D58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  unsigned int v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000BD00(&qword_1000A7A98);
  uint64_t v8 = sub_100084BC0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unsigned int v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unsigned int v14 = (uint64_t *)((char *)&v20 - v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + *(int *)(a1 + 36), v4);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v22 = v4;
  uint64_t v23 = v15;
  uint64_t v24 = v2;
  unint64_t v16 = sub_10005607C();
  sub_100084B80();
  uint64_t v25 = v15;
  unint64_t v26 = v16;
  char v27 = &protocol witness table for EmptyView;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100049C38(v14, v12, v8, WitnessTable);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  sub_100049C38(v21, v14, v8, WitnessTable);
  return ((uint64_t (*)(void *, uint64_t))v18)(v14, v8);
}

uint64_t sub_100055FBC()
{
  return sub_100084B60();
}

uint64_t sub_100056060@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_100056070()
{
  return sub_100055FBC();
}

unint64_t sub_10005607C()
{
  unint64_t result = qword_1000A7AA0;
  if (!qword_1000A7AA0)
  {
    sub_10000BD00(&qword_1000A7A98);
    sub_1000560F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7AA0);
  }
  return result;
}

unint64_t sub_1000560F0()
{
  unint64_t result = qword_1000A7AA8;
  if (!qword_1000A7AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7AA8);
  }
  return result;
}

unint64_t sub_100056144()
{
  unint64_t result = qword_1000A7AB8;
  if (!qword_1000A7AB8)
  {
    sub_10000BD00(&qword_1000A7AB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7AB8);
  }
  return result;
}

unint64_t sub_1000561A0()
{
  unint64_t result = qword_1000A7AC0;
  if (!qword_1000A7AC0)
  {
    type metadata accessor for ProfileViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000A7AC0);
  }
  return result;
}

uint64_t sub_1000561F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10005627C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  long long v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_1000562A0, 0, 0);
}

uint64_t sub_1000562A0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s14descr10009DEF9O11DeviceModelVMa();
  uint64_t v2 = sub_1000854F0();
  v0[6] = v2;
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0[4] + 32)
                                                                    + **(int **)(v0[4] + 32));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100056460;
    uint64_t v5 = v0[4];
    uint64_t v6 = v0[3];
    return v9(v3, AssociatedTypeWitness, v6, v5);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100056460()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

ValueMetadata *type metadata accessor for CarrySettings()
{
  return &type metadata for CarrySettings;
}

void *sub_100056580(uint64_t a1)
{
  unint64_t result = &_swiftEmptyDictionarySingleton;
  unsigned int v7 = &_swiftEmptyDictionarySingleton;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (void *)(a1 + 32);
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      sub_100004C6C(v4, v5);
      (*(void (**)(void **, uint64_t, uint64_t))(v6 + 56))(&v7, v5, v6);
      v4 += 5;
      --v3;
    }
    while (v3);
    return v7;
  }
  return result;
}

uint64_t sub_100056630()
{
  uint64_t result = type metadata accessor for Loader.CacheEntry();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1000566D8()
{
  sub_1000576D4(v0[14]);
  unint64_t v1 = (char *)v0 + *(void *)(*v0 + 104);
  uint64_t v2 = type metadata accessor for Loader.CacheEntry();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100056770()
{
  sub_1000566D8();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for Loader()
{
  return sub_10000C880();
}

uint64_t type metadata accessor for Loader.CacheEntry()
{
  return sub_10000C880();
}

uint64_t sub_1000567CC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_100056868(void *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(__dst);
      *((unsigned char *)v3 + v5) = 1;
      return v3;
    }
    if (v9)
    {
      memcpy(__dst, a2, v5 + 1);
      return v3;
    }
    void *__dst = *(void *)a2;
    *((unsigned char *)__dst + v5) = 0;
  }
  swift_retain();
  return v3;
}

unsigned __int8 *sub_1000569F4(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  if (!v3) {
    return (unsigned __int8 *)swift_release();
  }
  return result;
}

unsigned char *sub_100056AFC(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 0;
    swift_retain();
  }
  return __dst;
}

unsigned __int8 *sub_100056C4C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v8)
    {
      swift_release();
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      *(void *)__dst = *(void *)__src;
      __dst[v7] = 0;
      swift_retain();
    }
  }
  return __dst;
}

unsigned char *sub_100056E84(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_100056FD0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v8)
    {
      swift_release();
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      *(void *)__dst = *(void *)__src;
      __dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t sub_100057204(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_100057338(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x100057500);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100057528(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1000575E0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1000576B8()
{
  return sub_1000068BC();
}

uint64_t sub_1000576D4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_1000576E4(uint64_t a1, uint64_t a2)
{
}

void sub_1000576F8()
{
  type metadata accessor for MainHostViewController();
  sub_100004BB0(&qword_1000A6708);
  sub_100084D20();
  id v0 = objc_allocWithZone((Class)CULogHandle);
  NSString v1 = sub_100084D00();
  NSString v2 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v3 = [v0 initWithSubsystem:v1 category:v2];

  NSString v4 = sub_100084D00();
  [v3 ulog:40 message:v4];
}

BOOL sub_1000577FC(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_10005785C()
{
  NSString v1 = v0;
  if (sub_1000577FC(0, (uint64_t)&off_10009E3E8))
  {
    uint64_t v15 = 0x20676E69646E6553;
    unint64_t v16 = 0xE800000000000000;
    v21._countAndFlagsBits = sub_100057D40();
    sub_100084D60(v21);
    swift_bridgeObjectRelease();
    sub_10001EA24(0x20676E69646E6553, 0xE800000000000000);
    swift_bridgeObjectRelease();
    NSString v2 = sub_100084D00();
    int v3 = (_OWORD *)swift_allocObject();
    long long v4 = v1[13];
    v3[13] = v1[12];
    v3[14] = v4;
    v3[15] = v1[14];
    long long v5 = v1[9];
    v3[9] = v1[8];
    v3[10] = v5;
    long long v6 = v1[11];
    v3[11] = v1[10];
    v3[12] = v6;
    long long v7 = v1[5];
    v3[5] = v1[4];
    v3[6] = v7;
    long long v8 = v1[7];
    v3[7] = v1[6];
    v3[8] = v8;
    long long v9 = v1[1];
    v3[1] = *v1;
    v3[2] = v9;
    long long v10 = v1[3];
    v3[3] = v1[2];
    v3[4] = v10;
    unint64_t v19 = sub_1000588A8;
    uint64_t v20 = v3;
    uint64_t v15 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v16 = 1107296256;
    int v17 = sub_100058218;
    uint64_t v18 = &unk_1000A0D30;
    int v11 = _Block_copy(&v15);
    sub_100007F6C((uint64_t)v1);
    swift_release();
    char v12 = AnalyticsSendEventLazy();
    _Block_release(v11);

    if (v12) {
      return;
    }
    sub_100011AFC();
    swift_allocError();
    uint64_t v14 = 2;
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_100085340(50);
    swift_bridgeObjectRelease();
    sub_10001EEA0(0xD000000000000066, 0x800000010008B120, (uint64_t)&type metadata for BetaEnrollmentMetricsSession, &qword_1000A6670);
    sub_100011AFC();
    swift_allocError();
    uint64_t v14 = 3;
  }
  *unsigned int v13 = 0;
  v13[1] = v14;
  swift_willThrow();
}

void sub_100057AA8()
{
  uint64_t v1 = v0;
  if (sub_1000577FC(0, (uint64_t)&off_10009E410))
  {
    unint64_t v14 = 0x20676E69646E6553;
    unint64_t v15 = 0xE800000000000000;
    v20._countAndFlagsBits = sub_100057DF8();
    sub_100084D60(v20);
    swift_bridgeObjectRelease();
    sub_10001EE8C(0x20676E69646E6553, 0xE800000000000000);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    NSString v2 = sub_100084D00();
    swift_bridgeObjectRelease();
    uint64_t v3 = swift_allocObject();
    long long v4 = *(_OWORD *)(v1 + 112);
    *(_OWORD *)(v3 + 112) = *(_OWORD *)(v1 + 96);
    *(_OWORD *)(v3 + 128) = v4;
    *(unsigned char *)(v3 + 144) = *(unsigned char *)(v1 + 128);
    long long v5 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v3 + 48) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v3 + 64) = v5;
    long long v6 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v3 + 80) = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v3 + 96) = v6;
    long long v7 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v3 + 32) = v7;
    uint64_t v18 = sub_10005866C;
    uint64_t v19 = v3;
    unint64_t v14 = (unint64_t)_NSConcreteStackBlock;
    unint64_t v15 = 1107296256;
    unint64_t v16 = sub_100058218;
    int v17 = &unk_1000A0CB8;
    long long v8 = _Block_copy(&v14);
    sub_1000584F4(v1);
    swift_release();
    char v9 = AnalyticsSendEventLazy();
    _Block_release(v8);

    if (v9) {
      return;
    }
    sub_100011AFC();
    swift_allocError();
    uint64_t v11 = 2;
  }
  else
  {
    sub_100085340(50);
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000010;
    unint64_t v15 = 0x800000010008B0B0;
    uint64_t v13 = qword_1000A7BD0;
    char v12 = off_1000A7BD8;
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = v13;
    v21._object = v12;
    sub_100084D60(v21);
    swift_bridgeObjectRelease();
    v22._countAndFlagsBits = 0xD000000000000020;
    v22._object = (void *)0x800000010008B0D0;
    sub_100084D60(v22);
    sub_10001EEA0(0xD000000000000010, 0x800000010008B0B0, (uint64_t)&type metadata for BetaEnrollmentDuration, &qword_1000A6678);
    swift_bridgeObjectRelease();
    sub_100011AFC();
    swift_allocError();
    uint64_t v11 = 3;
  }
  *long long v10 = 0;
  v10[1] = v11;
  swift_willThrow();
}

unint64_t sub_100057D40()
{
  sub_100085340(20);
  swift_bridgeObjectRelease();
  sub_100006ED0();
  sub_1000586D0();
  v1._countAndFlagsBits = sub_100084C70();
  sub_100084D60(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000046;
}

uint64_t sub_100057DF8()
{
  uint64_t v1 = v0;
  *(void *)&v18[0] = 0;
  *((void *)&v18[0] + 1) = 0xE000000000000000;
  sub_100085340(20);
  swift_bridgeObjectRelease();
  uint64_t v2 = qword_1000A7BD0;
  uint64_t v3 = off_1000A7BD8;
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = v2;
  v19._object = v3;
  sub_100084D60(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0x616F6C796170202CLL;
  v20._object = (void *)0xEA00000000003D64;
  sub_100084D60(v20);
  sub_100004BB0(&qword_1000A6018);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100088B60;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)(v1 + 9);
  v18[0] = *(_OWORD *)v1;
  *(void *)(inited + 56) = &type metadata for AnalyticsInteger;
  *(void *)(inited + 64) = &off_1000A6328;
  uint64_t v5 = swift_allocObject();
  *(void *)(inited + 32) = v5;
  *(_OWORD *)(v5 + 25) = *(_OWORD *)(v1 + 9);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  v17[0] = *(_OWORD *)(v1 + 32);
  long long v6 = v17[0];
  *(void *)((char *)v17 + 13) = *(void *)(v1 + 45);
  uint64_t v7 = *(void *)((char *)v17 + 13);
  *(void *)(inited + 96) = &type metadata for AnalyticsFloat;
  *(void *)(inited + 104) = &off_1000A62E8;
  *(_OWORD *)(inited + 72) = v6;
  *(void *)(inited + 85) = v7;
  long long v13 = *(_OWORD *)(v1 + 56);
  uint64_t v14 = *(void *)(v1 + 72);
  long long v16 = *(_OWORD *)(v1 + 56);
  sub_100058748((uint64_t)&v14, (uint64_t)&v15);
  *(void *)(inited + 136) = &type metadata for AnalyticsErrorField;
  *(void *)(inited + 144) = sub_1000587B0();
  *(_OWORD *)(inited + 112) = v13;
  *(void *)(inited + 128) = v14;
  long long v11 = *(_OWORD *)(v1 + 80);
  long long v8 = v11;
  char v12 = *(unsigned char *)(v1 + 96);
  char v9 = v12;
  *(void *)(inited + 176) = &type metadata for AnalyticsBool;
  *(void *)(inited + 184) = &off_1000A6258;
  *(_OWORD *)(inited + 152) = v8;
  *(unsigned char *)(inited + 168) = v9;
  sub_10000820C((uint64_t)v18);
  sub_10000820C((uint64_t)v17);
  sub_10000820C((uint64_t)&v16);
  sub_100058804(&v15);
  sub_10000820C((uint64_t)&v11);
  sub_100056580(inited);
  swift_setDeallocating();
  sub_100004BB0(qword_1000A6020);
  swift_arrayDestroy();
  sub_1000586D0();
  v21._countAndFlagsBits = sub_100084C70();
  sub_100084D60(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x3D746E657645;
}

void *sub_100058068(uint64_t a1)
{
  sub_100004BB0(&qword_1000A6018);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100088B60;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)(a1 + 9);
  v17[0] = *(_OWORD *)a1;
  *(void *)(inited + 56) = &type metadata for AnalyticsInteger;
  *(void *)(inited + 64) = &off_1000A6328;
  uint64_t v3 = swift_allocObject();
  *(void *)(inited + 32) = v3;
  *(_OWORD *)(v3 + 25) = *(_OWORD *)(a1 + 9);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a1;
  v16[0] = *(_OWORD *)(a1 + 32);
  long long v4 = v16[0];
  *(void *)((char *)v16 + 13) = *(void *)(a1 + 45);
  uint64_t v5 = *(void *)((char *)v16 + 13);
  *(void *)(inited + 96) = &type metadata for AnalyticsFloat;
  *(void *)(inited + 104) = &off_1000A62E8;
  *(_OWORD *)(inited + 72) = v4;
  *(void *)(inited + 85) = v5;
  long long v12 = *(_OWORD *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 72);
  long long v15 = *(_OWORD *)(a1 + 56);
  sub_100058748((uint64_t)&v13, (uint64_t)&v14);
  *(void *)(inited + 136) = &type metadata for AnalyticsErrorField;
  *(void *)(inited + 144) = sub_1000587B0();
  *(_OWORD *)(inited + 112) = v12;
  *(void *)(inited + 128) = v13;
  long long v10 = *(_OWORD *)(a1 + 80);
  long long v6 = v10;
  char v11 = *(unsigned char *)(a1 + 96);
  char v7 = v11;
  *(void *)(inited + 176) = &type metadata for AnalyticsBool;
  *(void *)(inited + 184) = &off_1000A6258;
  *(_OWORD *)(inited + 152) = v6;
  *(unsigned char *)(inited + 168) = v7;
  sub_10000820C((uint64_t)v17);
  sub_10000820C((uint64_t)v16);
  sub_10000820C((uint64_t)&v15);
  sub_100058804(&v14);
  sub_10000820C((uint64_t)&v10);
  long long v8 = sub_100056580(inited);
  swift_setDeallocating();
  sub_100004BB0(qword_1000A6020);
  swift_arrayDestroy();
  return v8;
}

Class sub_100058218(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1000586D0();
    v4.super.Class isa = sub_100084C60().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }
  return v4.super.isa;
}

uint64_t sub_1000582A4()
{
  if (*(unsigned char *)(v0 + 112) & 1) != 0 || (*(unsigned char *)(v0 + 128)) {
    goto LABEL_5;
  }
  unint64_t v1 = *(void *)(v0 + 104);
  unint64_t v2 = *(void *)(v0 + 120);
  uint64_t result = v2 - v1;
  if (v2 >= v1)
  {
    UpTicksToSecondsF();
    float v5 = v4;
    uint64_t v7 = *(void *)(v0 + 8);
    uint64_t v8 = *(void *)(v0 + 16);
    char v9 = *(unsigned char *)(v0 + 24);
    uint64_t v10 = *(void *)(v0 + 32);
    int v11 = *(_DWORD *)(v0 + 48);
    char v12 = *(unsigned char *)(v0 + 52);
    uint64_t v18 = *(void *)(v0 + 56);
    uint64_t v19 = *(void *)(v0 + 40);
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 64);
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v15 = *(void *)(v0 + 80);
    char v13 = *(unsigned char *)(v0 + 96);
    v20[0] = *(void *)v0;
    uint64_t v6 = v20[0];
    v20[1] = v7;
    void v20[2] = v8;
    char v21 = v9;
    uint64_t v22 = v10;
    uint64_t v23 = v19;
    int v24 = v11;
    char v25 = v12;
    uint64_t v26 = v18;
    uint64_t v27 = v17;
    uint64_t v28 = v16;
    uint64_t v29 = v15;
    uint64_t v30 = v14;
    char v31 = v13;
    unint64_t v32 = v1;
    char v33 = 0;
    unint64_t v34 = v2;
    char v35 = 0;
    *(void *)&long long v45 = 0;
    *((void *)&v45 + 1) = 0xE000000000000000;
    sub_1000584F4((uint64_t)v20);
    v54._countAndFlagsBits = 0x6E6F697461727544;
    v54._object = (void *)0xEA0000000000203ALL;
    sub_100084D60(v54);
    sub_100085010();
    v55._countAndFlagsBits = 115;
    v55._object = (void *)0xE100000000000000;
    sub_100084D60(v55);
    sub_10001EE8C(v45, *((uint64_t *)&v45 + 1));
    swift_bridgeObjectRelease();
    sub_1000585B0((uint64_t)v20);
    *(float *)(v0 + 48) = v5;
    *(unsigned char *)(v0 + 52) = 0;
    *(void *)&long long v36 = v6;
    *((void *)&v36 + 1) = v7;
    *(void *)&long long v37 = v8;
    BYTE8(v37) = v9;
    *(void *)&long long v38 = v10;
    *((void *)&v38 + 1) = v19;
    *(float *)&long long v39 = v5;
    BYTE4(v39) = 0;
    *((void *)&v39 + 1) = v18;
    *(void *)&long long v40 = v17;
    *((void *)&v40 + 1) = v16;
    *(void *)&long long v41 = v15;
    *((void *)&v41 + 1) = v14;
    LOBYTE(v42) = v13;
    *((void *)&v42 + 1) = v1;
    LOBYTE(v43) = 0;
    *((void *)&v43 + 1) = v2;
    char v44 = 0;
    char v53 = 0;
    long long v47 = v38;
    long long v48 = v39;
    long long v51 = v42;
    long long v52 = v43;
    long long v49 = v40;
    long long v50 = v41;
    long long v45 = v36;
    long long v46 = v37;
    sub_1000584F4((uint64_t)&v36);
    sub_100057AA8();
    uint64_t result = sub_1000585B0((uint64_t)&v36);
LABEL_5:
    *(void *)(v0 + 16) = 0;
    *(unsigned char *)(v0 + 24) = 1;
    *(_DWORD *)(v0 + 48) = 0;
    *(unsigned char *)(v0 + 52) = 1;
    *(void *)(v0 + 104) = 0;
    *(unsigned char *)(v0 + 112) = 1;
    *(void *)(v0 + 120) = 0;
    *(unsigned char *)(v0 + 128) = 1;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000584F4(uint64_t a1)
{
  id v2 = *(id *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10005855C()
{
  return sub_100057DF8();
}

uint64_t sub_1000585B0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_100058614()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *sub_10005866C()
{
  long long v1 = *(_OWORD *)(v0 + 128);
  v6[6] = *(_OWORD *)(v0 + 112);
  v6[7] = v1;
  char v7 = *(unsigned char *)(v0 + 144);
  long long v2 = *(_OWORD *)(v0 + 64);
  v6[2] = *(_OWORD *)(v0 + 48);
  v6[3] = v2;
  long long v3 = *(_OWORD *)(v0 + 96);
  v6[4] = *(_OWORD *)(v0 + 80);
  v6[5] = v3;
  long long v4 = *(_OWORD *)(v0 + 32);
  v6[0] = *(_OWORD *)(v0 + 16);
  v6[1] = v4;
  return sub_100058068((uint64_t)v6);
}

uint64_t sub_1000586B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000586C8()
{
  return swift_release();
}

unint64_t sub_1000586D0()
{
  unint64_t result = qword_1000A7BE0;
  if (!qword_1000A7BE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A7BE0);
  }
  return result;
}

uint64_t sub_100058710()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_100058748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A7BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000587B0()
{
  unint64_t result = qword_1000A7BF0;
  if (!qword_1000A7BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7BF0);
  }
  return result;
}

id *sub_100058804(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_100058830()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *sub_1000588A8()
{
  return sub_100006ED0();
}

uint64_t destroy for BetaEnrollmentDuration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BetaEnrollmentDuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  char v7 = *(void **)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BetaEnrollmentDuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 72);
  char v7 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v7;
  id v8 = v7;

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v10;
  return a1;
}

__n128 initializeWithTake for BetaEnrollmentDuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for BetaEnrollmentDuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  long long v6 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for BetaEnrollmentDuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BetaEnrollmentDuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BetaEnrollmentDuration()
{
  return &type metadata for BetaEnrollmentDuration;
}

unint64_t sub_100058CE8(uint64_t a1)
{
  unint64_t result = sub_100058D10();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100058D10()
{
  unint64_t result = qword_1000A7C00;
  if (!qword_1000A7C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7C00);
  }
  return result;
}

uint64_t sub_100058D6C(uint64_t a1)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  return sub_100084B10();
}

void sub_100058E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

unint64_t sub_100058E4C()
{
  return 0xD000000000000020;
}

unint64_t sub_100058E6C()
{
  return 0xD000000000000020;
}

void sub_100058E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = sub_100058F20(a4, a5);
  NSString v7 = sub_100084D00();
  [v6 ulog:a1 message:v7];
}

id sub_100058F20(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  swift_getMetatypeMetadata();
  sub_100084D20();
  id v2 = objc_allocWithZone((Class)CULogHandle);
  NSString v3 = sub_100084D00();
  swift_bridgeObjectRelease();
  NSString v4 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithSubsystem:v3 category:v4];

  return v5;
}

void sub_100058FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = sub_100058F20(a4, a5);
  NSString v7 = sub_100084D00();
  [v6 ulog:a1 message:v7];
}

void sub_100059088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

id sub_1000590A4()
{
  return sub_10005D6FC();
}

uint64_t sub_1000590D8()
{
  *(void *)(v1 + 88) = v0;
  return _swift_task_switch(sub_1000590F8, v0, 0);
}

uint64_t sub_1000590F8()
{
  uint64_t v1 = *(void **)(v0 + 88);
  sub_10001E8F8(0x6164696C61766E49, 0xEA00000000006574);
  swift_beginAccess();
  v1[47] = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  id v2 = (void *)v1[44];
  v1[44] = 0;

  NSString v3 = (void *)v1[45];
  v1[45] = 0;

  swift_beginAccess();
  v1[48] = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v1[50] = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  NSString v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100059204@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004BB0(&qword_1000A6BF8);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BB0(&qword_1000A6A88);
  __chkstk_darwin(v9 - 8);
  int v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100084360();
  uint64_t v12 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004BB0(&qword_1000A6CD0);
  uint64_t v63 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100084150();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = sub_100084190();
  if (!v19)
  {

LABEL_8:
    uint64_t v26 = v63;
    sub_10000C788((uint64_t)v16, &qword_1000A6BF8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(a3, 1, 1, v14);
  }
  uint64_t v20 = v18;
  uint64_t v21 = v19;
  uint64_t v61 = v14;
  uint64_t v59 = a3;
  uint64_t v22 = sub_100084180();
  if (!v23)
  {

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v24 = v23;
  uint64_t v58 = v22;
  sub_1000841A0();
  uint64_t v25 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v62) == 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000C788((uint64_t)v11, &qword_1000A6A88);
LABEL_7:
    a3 = v59;
    uint64_t v14 = v61;
    goto LABEL_8;
  }
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v29 = v60;
  v28(v60, v11, v62);
  sub_100084170();
  sub_1000620EC((uint64_t)v8, (uint64_t)v16);
  uint64_t v30 = v61;
  *(void *)&v16[*(int *)(v61 + 44)] = a2;
  char v31 = &v16[*(int *)(v30 + 40)];
  *(_OWORD *)char v31 = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  *((void *)v31 + 4) = v58;
  *((void *)v31 + 5) = v24;
  *((void *)v31 + 6) = v20;
  *((void *)v31 + 7) = v21;
  *((_OWORD *)v31 + 4) = 0u;
  *((_OWORD *)v31 + 5) = 0u;
  *((_OWORD *)v31 + 6) = 0u;
  *((_OWORD *)v31 + 7) = 0u;
  unint64_t v32 = v29;
  uint64_t v33 = v62;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(&v16[*(int *)(v30 + 36)], v32, v62);
  id v34 = a2;
  uint64_t v35 = sub_1000841D0();
  uint64_t v37 = v25;
  if (!v36)
  {
LABEL_12:
    uint64_t v42 = sub_1000841B0();
    if (!v43) {
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  uint64_t v38 = v35;
  uint64_t v39 = v36;
  uint64_t v40 = sub_100084200();
  if (v41)
  {
    *(void *)char v31 = v38;
    *((void *)v31 + 1) = v39;
    *((void *)v31 + 2) = v40;
    *((void *)v31 + 3) = v41;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_1000841B0();
  if (!v43) {
    goto LABEL_18;
  }
LABEL_13:
  uint64_t v44 = v42;
  uint64_t v45 = v43;
  uint64_t v46 = sub_1000841E0();
  if (v47)
  {
    *((void *)v31 + 8) = v44;
    *((void *)v31 + 9) = v45;
    *((void *)v31 + 10) = v46;
    *((void *)v31 + 11) = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_18:
  uint64_t v48 = sub_1000841C0();
  if (v49)
  {
    uint64_t v50 = v48;
    uint64_t v51 = v49;
    uint64_t v52 = sub_1000841F0();
    uint64_t v54 = v53;

    (*(void (**)(char *, uint64_t))(v37 + 8))(v60, v33);
    if (v54)
    {
      sub_10002F298(*((void *)v31 + 12), *((void *)v31 + 13));
      *((void *)v31 + 12) = v50;
      *((void *)v31 + 13) = v51;
      *((void *)v31 + 14) = v52;
      *((void *)v31 + 15) = v54;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v60, v33);
  }
  uint64_t v55 = v59;
  uint64_t v56 = v61;
  uint64_t v57 = v63;
  sub_10000C724((uint64_t)v16, v59, &qword_1000A6CD0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v55, 0, 1, v56);
  return sub_10000C788((uint64_t)v16, &qword_1000A6CD0);
}

uint64_t sub_1000596D0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004BB0(&qword_1000A6BF8);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BB0(&qword_1000A6A88);
  __chkstk_darwin(v9 - 8);
  int v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100084360();
  uint64_t v12 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004BB0(&qword_1000A6CD0);
  uint64_t v63 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100084150();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = sub_1000842A0();
  if (!v19)
  {

LABEL_8:
    uint64_t v26 = v63;
    sub_10000C788((uint64_t)v16, &qword_1000A6BF8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(a3, 1, 1, v14);
  }
  uint64_t v20 = v18;
  uint64_t v21 = v19;
  uint64_t v61 = v14;
  uint64_t v59 = a3;
  uint64_t v22 = sub_100084290();
  if (!v23)
  {

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v24 = v23;
  uint64_t v58 = v22;
  sub_1000842B0();
  uint64_t v25 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v62) == 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000C788((uint64_t)v11, &qword_1000A6A88);
LABEL_7:
    a3 = v59;
    uint64_t v14 = v61;
    goto LABEL_8;
  }
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v29 = v60;
  v28(v60, v11, v62);
  sub_100084280();
  sub_1000620EC((uint64_t)v8, (uint64_t)v16);
  uint64_t v30 = v61;
  *(void *)&v16[*(int *)(v61 + 44)] = a2;
  char v31 = &v16[*(int *)(v30 + 40)];
  *(_OWORD *)char v31 = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  *((void *)v31 + 4) = v58;
  *((void *)v31 + 5) = v24;
  *((void *)v31 + 6) = v20;
  *((void *)v31 + 7) = v21;
  *((_OWORD *)v31 + 4) = 0u;
  *((_OWORD *)v31 + 5) = 0u;
  *((_OWORD *)v31 + 6) = 0u;
  *((_OWORD *)v31 + 7) = 0u;
  unint64_t v32 = v29;
  uint64_t v33 = v62;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(&v16[*(int *)(v30 + 36)], v32, v62);
  id v34 = a2;
  uint64_t v35 = sub_1000842E0();
  uint64_t v37 = v25;
  if (!v36)
  {
LABEL_12:
    uint64_t v42 = sub_1000842C0();
    if (!v43) {
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  uint64_t v38 = v35;
  uint64_t v39 = v36;
  uint64_t v40 = sub_100084310();
  if (v41)
  {
    *(void *)char v31 = v38;
    *((void *)v31 + 1) = v39;
    *((void *)v31 + 2) = v40;
    *((void *)v31 + 3) = v41;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_1000842C0();
  if (!v43) {
    goto LABEL_18;
  }
LABEL_13:
  uint64_t v44 = v42;
  uint64_t v45 = v43;
  uint64_t v46 = sub_1000842F0();
  if (v47)
  {
    *((void *)v31 + 8) = v44;
    *((void *)v31 + 9) = v45;
    *((void *)v31 + 10) = v46;
    *((void *)v31 + 11) = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_18:
  uint64_t v48 = sub_1000842D0();
  if (v49)
  {
    uint64_t v50 = v48;
    uint64_t v51 = v49;
    uint64_t v52 = sub_100084300();
    uint64_t v54 = v53;

    (*(void (**)(char *, uint64_t))(v37 + 8))(v60, v33);
    if (v54)
    {
      sub_10002F298(*((void *)v31 + 12), *((void *)v31 + 13));
      *((void *)v31 + 12) = v50;
      *((void *)v31 + 13) = v51;
      *((void *)v31 + 14) = v52;
      *((void *)v31 + 15) = v54;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v60, v33);
  }
  uint64_t v55 = v59;
  uint64_t v56 = v61;
  uint64_t v57 = v63;
  sub_10000C724((uint64_t)v16, v59, &qword_1000A6CD0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v55, 0, 1, v56);
  return sub_10000C788((uint64_t)v16, &qword_1000A6CD0);
}

void *sub_100059B9C(void *a1, uint64_t a2)
{
  return sub_100059BB4(a1, a2, (uint64_t (*)(void))sub_10006BFDC);
}

void *sub_100059BB4(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v7 = a3();
      if (v8)
      {
        uint64_t v6 = *(void **)(*(void *)(a2 + 56) + 8 * v7);
        id v9 = v6;
        return v6;
      }
    }
    return 0;
  }
  id v4 = a1;
  uint64_t v5 = sub_100085470();

  if (!v5) {
    return 0;
  }
  sub_10002207C(0, &qword_1000A7CF0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v6 = v11;
  swift_unknownObjectRelease();
  return v6;
}

void sub_100059C90(void *a1, void *a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A70D8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v43 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v8 = (char *)&v41 - v7;
  uint64_t v51 = sub_100004BB0(&qword_1000A6CD0);
  uint64_t v44 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v42 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = 0;
  uint64_t v46 = 0xE000000000000000;
  sub_100085340(28);
  swift_bridgeObjectRelease();
  uint64_t v49 = 0xD000000000000012;
  uint64_t v50 = 0x800000010008B640;
  if (a1)
  {
    uint64_t v10 = sub_10002207C(0, &qword_1000A7130);
    uint64_t v47 = v10;
    uint64_t v48 = sub_100061B2C(&qword_1000A7138, &qword_1000A7130);
    uint64_t v45 = (uint64_t)a1;
    int v11 = (void *)*sub_100004C6C(&v45, v10);
    id v12 = a1;
    id v13 = [v11 description];
    uint64_t v14 = sub_100084D10();
    uint64_t v16 = v15;

    sub_100004CB0((uint64_t)&v45);
  }
  else
  {
    uint64_t v16 = (void *)0xE300000000000000;
    uint64_t v14 = 7104878;
  }
  v52._countAndFlagsBits = v14;
  v52._object = v16;
  sub_100084D60(v52);
  swift_bridgeObjectRelease();
  v53._countAndFlagsBits = 0x206D6F726620;
  v53._object = (void *)0xE600000000000000;
  sub_100084D60(v53);
  if (!a2)
  {
    v55._countAndFlagsBits = 7104878;
    v55._object = (void *)0xE300000000000000;
    sub_100084D60(v55);
    swift_bridgeObjectRelease();
    sub_10001E8F8(v49, v50);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v17 = sub_10002207C(0, &qword_1000A70E0);
  uint64_t v47 = v17;
  uint64_t v48 = sub_100061B2C(&qword_1000A70E8, &qword_1000A70E0);
  uint64_t v45 = (uint64_t)a2;
  uint64_t v18 = (void *)*sub_100004C6C(&v45, v17);
  id v19 = a2;
  id v20 = [v18 description];
  uint64_t v21 = sub_100084D10();
  uint64_t v23 = v22;

  sub_100004CB0((uint64_t)&v45);
  v54._countAndFlagsBits = v21;
  v54._object = v23;
  sub_100084D60(v54);
  swift_bridgeObjectRelease();
  sub_10001E8F8(v49, v50);
  swift_bridgeObjectRelease();
  id v24 = [v19 member];
  if (!v24)
  {
LABEL_11:
    sub_100061AD8();
    swift_allocError();
    *uint64_t v33 = 6;
    swift_willThrow();
    return;
  }
  uint64_t v25 = v24;
  if (a1 && (sub_100084210(), (uint64_t v26 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v27 = (void *)v26;
    id v28 = a1;
    id v29 = v25;
    sub_100059204(v27, v29, (uint64_t)v8);
    uint64_t v30 = v44;
    uint64_t v31 = v51;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v8, 1, v51) == 1)
    {
      sub_10000C788((uint64_t)v8, &qword_1000A70D8);
      sub_100061AD8();
      swift_allocError();
      *unint64_t v32 = 2;
      swift_willThrow();
    }
    else
    {
      uint64_t v35 = v42;
      sub_1000329AC((uint64_t)v8, v42, &qword_1000A6CD0);
      uint64_t v45 = 0x20676E69726F7453;
      uint64_t v46 = 0xE800000000000000;
      uint64_t v36 = v35 + *(int *)(v31 + 40);
      uint64_t v37 = *(void *)(v36 + 32);
      uint64_t v38 = *(void **)(v36 + 40);
      swift_bridgeObjectRetain();
      v56._countAndFlagsBits = v37;
      v56._object = v38;
      sub_100084D60(v56);
      swift_bridgeObjectRelease();
      v57._countAndFlagsBits = 8238;
      v57._object = (void *)0xE200000000000000;
      sub_100084D60(v57);
      v58._countAndFlagsBits = sub_10005D318();
      sub_100084D60(v58);
      swift_bridgeObjectRelease();
      sub_10001E8F8(v45, v46);
      swift_bridgeObjectRelease();
      uint64_t v39 = v43;
      sub_10000C724(v35, v43, &qword_1000A6CD0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v39, 0, 1, v31);
      swift_beginAccess();
      id v40 = v29;
      sub_100069DBC(v39, v40);
      swift_endAccess();
      sub_100060E88();

      sub_10000C788(v35, &qword_1000A6CD0);
    }
  }
  else
  {
    sub_100061AD8();
    swift_allocError();
    *id v34 = 3;
    swift_willThrow();
  }
}

uint64_t sub_10005A274()
{
  v1[23] = v0;
  uint64_t v2 = sub_100084360();
  v1[24] = v2;
  v1[25] = *(void *)(v2 - 8);
  v1[26] = swift_task_alloc();
  uint64_t v3 = sub_100004BB0(&qword_1000A6CD0);
  v1[27] = v3;
  v1[28] = *(void *)(v3 - 8);
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  return _swift_task_switch(sub_10005A3B0, v0, 0);
}

uint64_t sub_10005A3B0()
{
  uint64_t v1 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_100031D14(v2);
  *(void *)(v0 + 256) = v3;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v39 = sub_10002FC30(v4);
  *(void *)(v0 + 264) = v39;
  swift_bridgeObjectRelease();
  uint64_t v5 = v3[2];
  *(void *)(v0 + 272) = v5;
  swift_beginAccess();
  uint64_t v38 = v5;
  *(void *)(v1 + 112) = v5;
  sub_10000710C();
  swift_endAccess();
  uint64_t v46 = v3;
  uint64_t v6 = v3[2];
  uint64_t result = swift_retain();
  uint64_t v45 = v6;
  if (v6)
  {
    unint64_t v8 = 0;
    uint64_t v43 = *(void *)(v0 + 224);
    uint64_t v9 = *(void *)(v0 + 200);
    unsigned int v42 = enum case for BetaEnrollment.State.enrolled(_:);
    id v40 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v41 = (void (**)(uint64_t, void, uint64_t))(v9 + 104);
    uint64_t v10 = v3;
    while (v8 < v10[2])
    {
      uint64_t v11 = *(void *)(v0 + 208);
      uint64_t v12 = *(void *)(v0 + 192);
      unint64_t v13 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      uint64_t v14 = *(void *)(v43 + 72);
      sub_10000C724((uint64_t)v10 + v13 + v14 * v8, *(void *)(v0 + 248), &qword_1000A6CD0);
      (*v41)(v11, v42, v12);
      sub_100060420((unint64_t *)&qword_1000A6158, 255, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
      sub_100084E50();
      sub_100084E50();
      uint64_t v16 = *(void *)(v0 + 144);
      uint64_t v15 = *(void *)(v0 + 152);
      (*v40)(v11, v12);
      uint64_t v17 = *(void *)(v0 + 248);
      if (v15 == v16)
      {
        sub_1000329AC(v17, *(void *)(v0 + 240), &qword_1000A6CD0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10006CC74(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v19 = _swiftEmptyArrayStorage[2];
        unint64_t v18 = _swiftEmptyArrayStorage[3];
        if (v19 >= v18 >> 1) {
          sub_10006CC74(v18 > 1, v19 + 1, 1);
        }
        uint64_t v20 = *(void *)(v0 + 240);
        _swiftEmptyArrayStorage[2] = v19 + 1;
        uint64_t result = sub_1000329AC(v20, (uint64_t)_swiftEmptyArrayStorage + v13 + v19 * v14, &qword_1000A6CD0);
      }
      else
      {
        uint64_t result = sub_10000C788(v17, &qword_1000A6CD0);
      }
      ++v8;
      uint64_t v10 = v46;
      if (v45 == v8) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
LABEL_12:
  uint64_t v21 = *(void *)(v0 + 184);
  swift_release();
  uint64_t v22 = _swiftEmptyArrayStorage[2];
  swift_release();
  swift_beginAccess();
  *(void *)(v21 + 120) = v22;
  sub_1000072D4();
  swift_endAccess();
  sub_100085340(37);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 176) = *(void *)(v39 + 16);
  v49._countAndFlagsBits = sub_100085530();
  sub_100084D60(v49);
  swift_bridgeObjectRelease();
  v50._object = (void *)0x800000010008B430;
  v50._countAndFlagsBits = 0xD000000000000010;
  sub_100084D60(v50);
  *(void *)(v0 + 160) = v38;
  v51._countAndFlagsBits = sub_100085530();
  sub_100084D60(v51);
  swift_bridgeObjectRelease();
  v52._countAndFlagsBits = 0x7365636976656420;
  v52._object = (void *)0xE800000000000000;
  sub_100084D60(v52);
  sub_10001E8F8(0x676E697461647055, 0xE900000000000020);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v39 + 16);
  *(void *)(v0 + 280) = v23;
  if (v23)
  {
    uint64_t v24 = *(void *)(v0 + 224);
    *(void *)(v0 + 288) = 0;
    uint64_t v25 = *(void **)(v0 + 264);
    if (!v25[2])
    {
LABEL_30:
      __break(1u);
      return result;
    }
    int64_t v26 = *(void *)(v0 + 272);
    *(void *)(v0 + 296) = v25[4];
    uint64_t v44 = v25[5];
    if (v26)
    {
      uint64_t v27 = (void **)(v0 + 168);
      uint64_t v28 = *(void *)(v0 + 256);
      *(void *)(v0 + 168) = _swiftEmptyArrayStorage;
      swift_unknownObjectRetain();
      sub_10006CBDC(0, v26, 0);
      uint64_t v29 = 0;
      uint64_t v30 = v28 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
      uint64_t v47 = *(void *)(v24 + 72);
      uint64_t v31 = *(void **)(v0 + 168);
      do
      {
        sub_10000C724(v30, *(void *)(v0 + 232), &qword_1000A6CD0);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10006CBDC(0, v31[2] + 1, 1);
          uint64_t v31 = *v27;
        }
        unint64_t v33 = v31[2];
        unint64_t v32 = v31[3];
        if (v33 >= v32 >> 1)
        {
          sub_10006CBDC((char *)(v32 > 1), v33 + 1, 1);
          uint64_t v31 = *v27;
        }
        uint64_t v34 = *(void *)(v0 + 272);
        ++v29;
        v31[2] = v33 + 1;
        sub_100032278((_OWORD *)(v0 + 16), &v31[4 * v33 + 4]);
        v30 += v47;
      }
      while (v29 != v34);
    }
    else
    {
      swift_unknownObjectRetain();
      uint64_t v31 = _swiftEmptyArrayStorage;
    }
    *(void *)(v0 + 304) = v31;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v37;
    *uint64_t v37 = v0;
    v37[1] = sub_10005AA48;
    return sub_10005627C((uint64_t)v31, ObjectType, v44);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
    return v35();
  }
}

uint64_t sub_10005AA48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10005AB74, v1, 0);
}

uint64_t sub_10005AB74()
{
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t result = swift_unknownObjectRelease();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    unint64_t v5 = *(void *)(v0 + 288) + 1;
    *(void *)(v0 + 288) = v5;
    uint64_t v6 = *(void *)(v0 + 264);
    if (v5 >= *(void *)(v6 + 16))
    {
      __break(1u);
    }
    else
    {
      int64_t v7 = *(void *)(v0 + 272);
      uint64_t v8 = v6 + 16 * v5;
      *(void *)(v0 + 296) = *(void *)(v8 + 32);
      uint64_t v20 = *(void *)(v8 + 40);
      if (v7)
      {
        uint64_t v9 = (void **)(v0 + 168);
        uint64_t v10 = *(void *)(v0 + 256);
        uint64_t v11 = *(void *)(v0 + 224);
        *(void *)(v0 + 168) = _swiftEmptyArrayStorage;
        swift_unknownObjectRetain();
        sub_10006CBDC(0, v7, 0);
        uint64_t v12 = 0;
        uint64_t v13 = v10 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
        uint64_t v21 = *(void *)(v11 + 72);
        uint64_t v14 = *(void **)(v0 + 168);
        do
        {
          sub_10000C724(v13, *(void *)(v0 + 232), &qword_1000A6CD0);
          swift_dynamicCast();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10006CBDC(0, v14[2] + 1, 1);
            uint64_t v14 = *v9;
          }
          unint64_t v16 = v14[2];
          unint64_t v15 = v14[3];
          if (v16 >= v15 >> 1)
          {
            sub_10006CBDC((char *)(v15 > 1), v16 + 1, 1);
            uint64_t v14 = *v9;
          }
          uint64_t v17 = *(void *)(v0 + 272);
          ++v12;
          _OWORD v14[2] = v16 + 1;
          sub_100032278((_OWORD *)(v0 + 16), &v14[4 * v16 + 4]);
          v13 += v21;
        }
        while (v12 != v17);
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v14 = _swiftEmptyArrayStorage;
      }
      *(void *)(v0 + 304) = v14;
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 312) = v19;
      *unint64_t v19 = v0;
      v19[1] = sub_10005AA48;
      return sub_10005627C((uint64_t)v14, ObjectType, v20);
    }
  }
  return result;
}

uint64_t sub_10005AE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  long long v4[2] = a1;
  v4[3] = a2;
  sub_100004BB0(&qword_1000A7070);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_10005AEC4, 0, 0);
}

uint64_t sub_10005AEC4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = sub_100084FF0();
  long long v8 = *(_OWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 56) = v2;
  swift_unknownObjectRetain();
  sub_1000159AC(v1, (uint64_t)&unk_1000A7D58, v5);
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10005AFFC()
{
  *(void *)(v1 + 40) = v0;
  return _swift_task_switch(sub_10005B01C, v0, 0);
}

uint64_t sub_10005B01C()
{
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100031D14(v1);
  swift_bridgeObjectRelease();
  sub_100085340(18);
  swift_bridgeObjectRelease();
  sub_100004BB0(&qword_1000A6CD0);
  v6._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v6);
  swift_bridgeObjectRelease();
  sub_10001E8F8(0xD000000000000010, 0x800000010008AE90);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_10005B130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  long long v4[2] = a1;
  v4[3] = a2;
  sub_100004BB0(&qword_1000A7070);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_10005B1C8, 0, 0);
}

uint64_t sub_10005B1C8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = sub_100084FF0();
  long long v8 = *(_OWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 56) = v2;
  swift_unknownObjectRetain();
  sub_1000159AC(v1, (uint64_t)&unk_1000A7D30, v5);
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10005B300(uint64_t a1, uint64_t a2)
{
  v3[133] = v2;
  v3[132] = a2;
  v3[131] = a1;
  uint64_t v4 = sub_100084360();
  v3[134] = v4;
  v3[135] = *(void *)(v4 - 8);
  v3[136] = swift_task_alloc();
  v3[137] = swift_task_alloc();
  v3[138] = swift_task_alloc();
  return _swift_task_switch(sub_10005B3E4, v2, 0);
}

uint64_t sub_10005B3E4()
{
  uint64_t v1 = *(void *)(v0 + 1104);
  id v51 = *(id *)(v0 + 1096);
  uint64_t v2 = *(void **)(v0 + 1080);
  uint64_t v3 = *(void *)(v0 + 1072);
  uint64_t v4 = *(void *)(v0 + 1048);
  sub_100085340(30);
  *(void *)(v0 + 872) = 0;
  *(void *)(v0 + 880) = 0xE000000000000000;
  v54._countAndFlagsBits = 0x20676E6974746553;
  v54._object = (void *)0xEE00206574617473;
  sub_100084D60(v54);
  uint64_t v49 = v4;
  sub_100085440();
  v55._countAndFlagsBits = 0x67726174206E6F20;
  v55._object = (void *)0xEC00000020737465;
  sub_100084D60(v55);
  *(void *)(v0 + 1112) = sub_10002207C(0, (unint64_t *)&qword_1000A5E68);
  v56._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v56);
  swift_bridgeObjectRelease();
  sub_10001E8F8(*(void *)(v0 + 872), *(void *)(v0 + 880));
  swift_bridgeObjectRelease();
  *(_DWORD *)(v0 + 212) = enum case for BetaEnrollment.State.enrolled(_:);
  uint64_t v5 = (void (*)(void))v2[13];
  *(void *)(v0 + 1120) = v5;
  *(void *)(v0 + 1128) = (unint64_t)(v2 + 13) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  uint64_t v47 = (void (*)(uint64_t, void, uint64_t))v5;
  v5(v1);
  *(void *)(v0 + 1136) = sub_100060420((unint64_t *)&qword_1000A6158, 255, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
  sub_100084E50();
  sub_100084E50();
  uint64_t v6 = *(void *)(v0 + 976);
  uint64_t v7 = *(void *)(v0 + 1008);
  long long v8 = (void (*)(uint64_t, uint64_t))v2[1];
  *(void *)(v0 + 1144) = v8;
  *(void *)(v0 + 1152) = (unint64_t)(v2 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v1, v3);
  uint64_t v9 = (void (*)(id, uint64_t, uint64_t))v2[2];
  *(void *)(v0 + 1160) = v9;
  *(void *)(v0 + 1168) = (unint64_t)(v2 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v51, v49, v3);
  if (v6 == v7)
  {
    v8(*(void *)(v0 + 1096), *(void *)(v0 + 1072));
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(v0 + 1104);
  uint64_t v11 = *(void *)(v0 + 1096);
  uint64_t v12 = *(void *)(v0 + 1072);
  v47(v10, enum case for BetaEnrollment.State.notEnrolled(_:), v12);
  sub_100084E50();
  sub_100084E50();
  uint64_t v13 = *(void *)(v0 + 928);
  uint64_t v14 = *(void *)(v0 + 952);
  v8(v10, v12);
  v8(v11, v12);
  if (v13 == v14)
  {
LABEL_4:
    unint64_t v15 = *(void *)(v0 + 1056);
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1000854A0();
      *(void *)(v0 + 1176) = v43;
      if (v43) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 1176) = v16;
      if (v16)
      {
LABEL_6:
        swift_beginAccess();
        *(_DWORD *)(v0 + 348) = enum case for BetaEnrollment.State.enrolling(_:);
        *(_DWORD *)(v0 + 484) = enum case for BetaEnrollment.State.notEnrolled(_:);
        *(void *)(v0 + 1184) = 0;
        uint64_t v17 = *(void *)(v0 + 1056);
        if ((v17 & 0xC000000000000001) != 0) {
          id v18 = (id)sub_100085380();
        }
        else {
          id v18 = *(id *)(v17 + 32);
        }
        *(void *)(v0 + 1192) = v18;
        *(void *)(v0 + 1200) = 1;
        uint64_t v20 = *(void *)(*(void *)(v0 + 1064) + 384);
        id v21 = v18;
        swift_bridgeObjectRetain();
        id v22 = v21;
        uint64_t v23 = sub_100059BB4(v22, v20, (uint64_t (*)(void))sub_10006BEB0);
        *(void *)(v0 + 1208) = v23;
        swift_bridgeObjectRelease();
        if (v23)
        {
          id v52 = v23;
          uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v0 + 1144);
          uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1120);
          uint64_t v25 = *(unsigned int *)(v0 + 212);
          uint64_t v26 = *(void *)(v0 + 1104);
          uint64_t v46 = *(void *)(v0 + 1088);
          uint64_t v27 = *(void *)(v0 + 1072);
          uint64_t v28 = *(void *)(v0 + 1048);

          v24(v26, v28, v27);
          id v29 = objc_allocWithZone((Class)sub_100084230());
          uint64_t v30 = sub_100084220();
          *(void *)(v0 + 1216) = v30;
          v45(v26, v25, v27);
          sub_100084E50();
          sub_100084E50();
          uint64_t v31 = *(void *)(v0 + 960);
          uint64_t v32 = *(void *)(v0 + 944);
          v48(v26, v27);
          v24(v46, v28, v27);
          uint64_t v50 = v30;
          if (v31 == v32)
          {
            BOOL v33 = 1;
          }
          else
          {
            uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v0 + 1144);
            uint64_t v37 = *(void *)(v0 + 1104);
            uint64_t v38 = *(void *)(v0 + 1072);
            (*(void (**)(uint64_t, void, uint64_t))(v0 + 1120))(v37, *(unsigned int *)(v0 + 348), v38);
            sub_100084E50();
            sub_100084E50();
            BOOL v33 = *(void *)(v0 + 920) == *(void *)(v0 + 936);
            v36(v37, v38);
          }
          unint64_t v39 = *(void *)(v0 + 1056);
          (*(void (**)(void, void))(v0 + 1144))(*(void *)(v0 + 1088), *(void *)(v0 + 1072));
          if (v39 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v40 = sub_1000854A0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v40 = *(void *)((*(void *)(v0 + 1056) & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          *(unsigned char *)(v0 + 1248) = 0;
          *(unsigned char *)(v0 + 620) = 1;
          *(unsigned char *)(v0 + 1240) = 1;
          *(void *)(v0 + 488) = 0x6F43656369766564;
          *(void *)(v0 + 496) = 0xEB00000000746E75;
          *(void *)(v0 + 504) = v40;
          *(unsigned char *)(v0 + 512) = *(unsigned char *)(v0 + 1248);
          *(void *)(v0 + 520) = 0x6E6F697461727564;
          *(void *)(v0 + 528) = 0xEB00000000636553;
          *(_DWORD *)(v0 + 536) = 0;
          *(unsigned char *)(v0 + 540) = *(unsigned char *)(v0 + 620);
          *(void *)(v0 + 544) = 0x726F727265;
          *(void *)(v0 + 552) = 0xE500000000000000;
          *(_OWORD *)(v0 + 560) = xmmword_100088C20;
          *(void *)(v0 + 576) = 0xEB00000000676E69;
          *(unsigned char *)(v0 + 584) = v33;
          *(void *)(v0 + 608) = 0;
          *(unsigned char *)(v0 + 616) = *(unsigned char *)(v0 + 1240);
          sub_10001EE8C(0x7472617453, 0xE500000000000000);
          *(void *)(v0 + 592) = mach_absolute_time();
          *(unsigned char *)(v0 + 600) = 0;
          unint64_t v41 = swift_bridgeObjectRetain();
          sub_100080BD0(v41);
          swift_bridgeObjectRelease();
          sub_100061B2C((unint64_t *)&qword_1000A7CC0, (unint64_t *)&qword_1000A5E68);
          Class isa = sub_100085020().super.isa;
          *(void *)(v0 + 1224) = isa;
          swift_bridgeObjectRelease();
          *(void *)(v0 + 16) = v0;
          *(void *)(v0 + 56) = v0 + 904;
          *(void *)(v0 + 24) = sub_10005BCE4;
          *(void *)(v0 + 792) = swift_continuation_init();
          *(void *)(v0 + 760) = _NSConcreteStackBlock;
          *(void *)(v0 + 768) = 0x40000000;
          *(void *)(v0 + 776) = sub_10005F408;
          *(void *)(v0 + 784) = &unk_1000A0E40;
          [v52 sendRequest:v50 members:isa withCompletionHandler:v0 + 760];
          return _swift_continuation_await(v0 + 16);
        }
        sub_100061AD8();
        swift_allocError();
        *uint64_t v34 = 5;
        swift_willThrow();

        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_24;
  }
  sub_100061AD8();
  swift_allocError();
  *unint64_t v19 = 0;
  swift_willThrow();
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
LABEL_24:
  return v35();
}

uint64_t sub_10005BCE4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 1232) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 1064);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10005C8E4;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 1064);
    uint64_t v4 = sub_10005BE0C;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_10005BE0C()
{
  uint64_t v1 = (_OWORD *)(v0 + 488);
  uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v0 + 1144);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1120);
  uint64_t v3 = *(unsigned int *)(v0 + 212);
  uint64_t v4 = *(void *)(v0 + 1104);
  uint64_t v5 = *(void *)(v0 + 1072);
  uint64_t v80 = *(void **)(v0 + 912);
  uint64_t v82 = *(void **)(v0 + 904);

  long long v6 = *(_OWORD *)(v0 + 600);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 584);
  *(_OWORD *)(v0 + 464) = v6;
  *(unsigned char *)(v0 + 480) = *(unsigned char *)(v0 + 616);
  long long v7 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 400) = v7;
  long long v8 = *(_OWORD *)(v0 + 568);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 552);
  *(_OWORD *)(v0 + 432) = v8;
  long long v9 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 368) = v9;
  sub_1000584F4(v0 + 352);
  sub_10001EE8C(1886352467, 0xE400000000000000);
  sub_1000585B0(v0 + 352);
  *(void *)(v0 + 608) = mach_absolute_time();
  *(unsigned char *)(v0 + 616) = 0;
  sub_1000582A4();
  v2(v4, v3, v5);
  sub_100084E50();
  sub_100084E50();
  uint64_t v10 = *(void *)(v0 + 1016);
  uint64_t v11 = *(void *)(v0 + 1024);
  v78(v4, v5);
  if (v10 == v11)
  {
    unint64_t v12 = *(void *)(v0 + 1056);
    swift_beginAccess();
    sub_1000073E8(v12);
  }
  else
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 1144);
    uint64_t v14 = *(void *)(v0 + 1104);
    uint64_t v15 = *(void *)(v0 + 1072);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 1120))(v14, *(unsigned int *)(v0 + 484), v15);
    sub_100084E50();
    sub_100084E50();
    uint64_t v16 = *(void *)(v0 + 1032);
    uint64_t v17 = *(void *)(v0 + 1040);
    v13(v14, v15);
    if (v16 != v17) {
      goto LABEL_6;
    }
    unint64_t v18 = *(void *)(v0 + 1056);
    swift_beginAccess();
    sub_100007810(v18);
  }
  swift_endAccess();
LABEL_6:
  uint64_t v19 = *(void *)(v0 + 1184);
  id v20 = v80;
  id v21 = v82;
  sub_10005F4D8(v80, v82);
  if (v19)
  {
    uint64_t v22 = v19;
    swift_bridgeObjectRelease();

    sub_100085340(28);
    *(void *)(v0 + 888) = 0;
    *(void *)(v0 + 896) = 0xE000000000000000;
    v84._object = (void *)0x800000010008B360;
    v84._countAndFlagsBits = 0xD00000000000001ALL;
    sub_100084D60(v84);
    *(void *)(v0 + 968) = v19;
    sub_100004BB0((uint64_t *)&unk_1000A7100);
    sub_100085440();
    *(void *)(v0 + 1000) = type metadata accessor for BetaEnrollmentNetworkingSession();
    sub_100004BB0(&qword_1000A6680);
    sub_100084D20();
    id v23 = objc_allocWithZone((Class)CULogHandle);
    NSString v24 = sub_100084D00();
    NSString v25 = sub_100084D00();
    swift_bridgeObjectRelease();
    id v26 = [v23 initWithSubsystem:v24 category:v25];

    NSString v27 = sub_100084D00();
    [v26 ulog:60 message:v27];

    swift_bridgeObjectRelease();
    long long v28 = *(_OWORD *)(v0 + 600);
    *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 584);
    *(_OWORD *)(v0 + 736) = v28;
    *(unsigned char *)(v0 + 752) = *(unsigned char *)(v0 + 616);
    long long v29 = *(_OWORD *)(v0 + 536);
    *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 520);
    *(_OWORD *)(v0 + 672) = v29;
    long long v30 = *(_OWORD *)(v0 + 568);
    *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 552);
    *(_OWORD *)(v0 + 704) = v30;
    long long v31 = *(_OWORD *)(v0 + 504);
    *(_OWORD *)(v0 + 624) = *v1;
    *(_OWORD *)(v0 + 640) = v31;
    swift_errorRetain();
    sub_1000584F4(v0 + 624);
    sub_10001EE8C(1886352467, 0xE400000000000000);
    sub_1000585B0(v0 + 624);
    *(void *)(v0 + 608) = mach_absolute_time();
    *(unsigned char *)(v0 + 616) = 0;
    *(void *)(v0 + 984) = v22;
    swift_errorRetain();
    sub_10002207C(0, (unint64_t *)&qword_1000A62A0);
    if (swift_dynamicCast())
    {
      uint64_t v32 = *(void *)(v0 + 992);

      *(void *)(v0 + 560) = v32;
    }
    BOOL v33 = *(void **)(v0 + 1216);
    uint64_t v34 = *(void **)(v0 + 1208);
    uint64_t v35 = *(void **)(v0 + 1192);
    sub_1000582A4();
    swift_errorRelease();
    swift_willThrow();

    long long v36 = *(_OWORD *)(v0 + 600);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 584);
    *(_OWORD *)(v0 + 192) = v36;
    *(unsigned char *)(v0 + 208) = *(unsigned char *)(v0 + 616);
    long long v37 = *(_OWORD *)(v0 + 536);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 520);
    *(_OWORD *)(v0 + 128) = v37;
    long long v38 = *(_OWORD *)(v0 + 568);
    *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 552);
    *(_OWORD *)(v0 + 160) = v38;
    long long v39 = *(_OWORD *)(v0 + 504);
    *(_OWORD *)(v0 + 80) = *v1;
    *(_OWORD *)(v0 + 96) = v39;
    sub_1000585B0(v0 + 80);
    goto LABEL_10;
  }
  unint64_t v41 = *(void **)(v0 + 1216);
  unsigned int v42 = *(void **)(v0 + 1208);
  uint64_t v43 = *(void *)(v0 + 1200);
  uint64_t v44 = *(void **)(v0 + 1192);
  uint64_t v45 = *(void *)(v0 + 1176);
  long long v46 = *(_OWORD *)(v0 + 600);
  *(_OWORD *)(v0 + 312) = *(_OWORD *)(v0 + 584);
  *(_OWORD *)(v0 + 328) = v46;
  *(unsigned char *)(v0 + 344) = *(unsigned char *)(v0 + 616);
  long long v47 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 264) = v47;
  long long v48 = *(_OWORD *)(v0 + 568);
  *(_OWORD *)(v0 + 280) = *(_OWORD *)(v0 + 552);
  *(_OWORD *)(v0 + 296) = v48;
  long long v49 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 216) = *v1;
  *(_OWORD *)(v0 + 232) = v49;
  sub_1000585B0(v0 + 216);

  if (v43 == v45)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_13;
  }
  uint64_t v51 = *(void *)(v0 + 1200);
  *(void *)(v0 + 1184) = 0;
  uint64_t v52 = *(void *)(v0 + 1056);
  if ((v52 & 0xC000000000000001) != 0) {
    id v53 = (id)sub_100085380();
  }
  else {
    id v53 = *(id *)(v52 + 8 * v51 + 32);
  }
  *(void *)(v0 + 1192) = v53;
  *(void *)(v0 + 1200) = v51 + 1;
  if (__OFADD__(v51, 1))
  {
    __break(1u);
    return _swift_continuation_await(v53);
  }
  uint64_t v54 = *(void *)(*(void *)(v0 + 1064) + 384);
  id v55 = v53;
  swift_bridgeObjectRetain();
  id v56 = v55;
  Swift::String v57 = sub_100059BB4(v56, v54, (uint64_t (*)(void))sub_10006BEB0);
  *(void *)(v0 + 1208) = v57;
  swift_bridgeObjectRelease();
  if (v57)
  {
    uint64_t v79 = v57;
    Swift::String v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v0 + 1144);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1120);
    uint64_t v60 = *(unsigned int *)(v0 + 212);
    uint64_t v61 = *(void *)(v0 + 1104);
    uint64_t v76 = *(void *)(v0 + 1088);
    uint64_t v62 = *(void *)(v0 + 1072);
    uint64_t v63 = *(void *)(v0 + 1048);

    v58(v61, v63, v62);
    id v64 = objc_allocWithZone((Class)sub_100084230());
    uint64_t v81 = sub_100084220();
    *(void *)(v0 + 1216) = v81;
    v59(v61, v60, v62);
    sub_100084E50();
    sub_100084E50();
    uint64_t v65 = *(void *)(v0 + 960);
    uint64_t v66 = *(void *)(v0 + 944);
    v77(v61, v62);
    v58(v76, v63, v62);
    if (v65 == v66)
    {
      BOOL v67 = 1;
    }
    else
    {
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v0 + 1144);
      uint64_t v70 = *(void *)(v0 + 1104);
      uint64_t v71 = *(void *)(v0 + 1072);
      (*(void (**)(uint64_t, void, uint64_t))(v0 + 1120))(v70, *(unsigned int *)(v0 + 348), v71);
      sub_100084E50();
      sub_100084E50();
      BOOL v67 = *(void *)(v0 + 920) == *(void *)(v0 + 936);
      v69(v70, v71);
    }
    unint64_t v72 = *(void *)(v0 + 1056);
    (*(void (**)(void, void))(v0 + 1144))(*(void *)(v0 + 1088), *(void *)(v0 + 1072));
    if (v72 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1000854A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v73 = *(void *)((*(void *)(v0 + 1056) & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(unsigned char *)(v0 + 1248) = 0;
    *(unsigned char *)(v0 + 620) = 1;
    *(unsigned char *)(v0 + 1240) = 1;
    *(void *)(v0 + 488) = 0x6F43656369766564;
    *(void *)(v0 + 496) = 0xEB00000000746E75;
    *(void *)(v0 + 504) = v73;
    *(unsigned char *)(v0 + 512) = *(unsigned char *)(v0 + 1248);
    *(void *)(v0 + 520) = 0x6E6F697461727564;
    *(void *)(v0 + 528) = 0xEB00000000636553;
    *(_DWORD *)(v0 + 536) = 0;
    *(unsigned char *)(v0 + 540) = *(unsigned char *)(v0 + 620);
    *(void *)(v0 + 544) = 0x726F727265;
    *(void *)(v0 + 552) = 0xE500000000000000;
    *(_OWORD *)(v0 + 560) = xmmword_100088C20;
    *(void *)(v0 + 576) = 0xEB00000000676E69;
    *(unsigned char *)(v0 + 584) = v67;
    *(void *)(v0 + 608) = 0;
    *(unsigned char *)(v0 + 616) = *(unsigned char *)(v0 + 1240);
    sub_10001EE8C(0x7472617453, 0xE500000000000000);
    *(void *)(v0 + 592) = mach_absolute_time();
    *(unsigned char *)(v0 + 600) = 0;
    unint64_t v74 = swift_bridgeObjectRetain();
    sub_100080BD0(v74);
    swift_bridgeObjectRelease();
    sub_100061B2C((unint64_t *)&qword_1000A7CC0, (unint64_t *)&qword_1000A5E68);
    Class isa = sub_100085020().super.isa;
    *(void *)(v0 + 1224) = isa;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 904;
    *(void *)(v0 + 24) = sub_10005BCE4;
    *(void *)(v0 + 792) = swift_continuation_init();
    *(void *)(v0 + 760) = _NSConcreteStackBlock;
    *(void *)(v0 + 768) = 0x40000000;
    *(void *)(v0 + 776) = sub_10005F408;
    *(void *)(v0 + 784) = &unk_1000A0E40;
    [v79 sendRequest:v81 members:isa withCompletionHandler:v0 + 760];
    id v53 = (id)(v0 + 16);
    return _swift_continuation_await(v53);
  }
  sub_100061AD8();
  swift_allocError();
  *uint64_t v68 = 5;
  swift_willThrow();

  swift_bridgeObjectRelease();
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
LABEL_13:
  return v40();
}

uint64_t sub_10005C8E4()
{
  uint64_t v1 = *(void **)(v0 + 1224);
  swift_willThrow();

  uint64_t v2 = *(void *)(v0 + 1232);
  sub_100085340(28);
  *(void *)(v0 + 888) = 0;
  *(void *)(v0 + 896) = 0xE000000000000000;
  v23._object = (void *)0x800000010008B360;
  v23._countAndFlagsBits = 0xD00000000000001ALL;
  sub_100084D60(v23);
  *(void *)(v0 + 968) = v2;
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  sub_100085440();
  *(void *)(v0 + 1000) = type metadata accessor for BetaEnrollmentNetworkingSession();
  sub_100004BB0(&qword_1000A6680);
  sub_100084D20();
  id v3 = objc_allocWithZone((Class)CULogHandle);
  NSString v4 = sub_100084D00();
  NSString v5 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v6 = [v3 initWithSubsystem:v4 category:v5];

  NSString v7 = sub_100084D00();
  [v6 ulog:60 message:v7];

  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)(v0 + 600);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 584);
  *(_OWORD *)(v0 + 736) = v8;
  *(unsigned char *)(v0 + 752) = *(unsigned char *)(v0 + 616);
  long long v9 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 672) = v9;
  long long v10 = *(_OWORD *)(v0 + 568);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 552);
  *(_OWORD *)(v0 + 704) = v10;
  long long v11 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 640) = v11;
  swift_errorRetain();
  sub_1000584F4(v0 + 624);
  sub_10001EE8C(1886352467, 0xE400000000000000);
  sub_1000585B0(v0 + 624);
  *(void *)(v0 + 608) = mach_absolute_time();
  *(unsigned char *)(v0 + 616) = 0;
  *(void *)(v0 + 984) = v2;
  swift_errorRetain();
  sub_10002207C(0, (unint64_t *)&qword_1000A62A0);
  if (swift_dynamicCast())
  {
    uint64_t v12 = *(void *)(v0 + 992);

    *(void *)(v0 + 560) = v12;
  }
  uint64_t v13 = *(void **)(v0 + 1216);
  uint64_t v14 = *(void **)(v0 + 1208);
  uint64_t v15 = *(void **)(v0 + 1192);
  sub_1000582A4();
  swift_errorRelease();
  swift_willThrow();

  long long v16 = *(_OWORD *)(v0 + 600);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 584);
  *(_OWORD *)(v0 + 192) = v16;
  *(unsigned char *)(v0 + 208) = *(unsigned char *)(v0 + 616);
  long long v17 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 128) = v17;
  long long v18 = *(_OWORD *)(v0 + 568);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 552);
  *(_OWORD *)(v0 + 160) = v18;
  long long v19 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 96) = v19;
  sub_1000585B0(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_10005CC14(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_10005CC38, v2, 0);
}

uint64_t sub_10005CC38()
{
  uint64_t v1 = (void *)v0[4];
  sub_100085340(28);
  swift_bridgeObjectRelease();
  sub_100083D80();
  sub_100060420(&qword_1000A6538, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  v14._countAndFlagsBits = sub_100085530();
  sub_100084D60(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x6669746E65646920;
  v15._object = (void *)0xED00002073726569;
  sub_100084D60(v15);
  sub_100060420(&qword_1000A6540, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_100085050();
  NSString v4 = v3;
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = v2;
  v16._object = v4;
  sub_100084D60(v16);
  swift_bridgeObjectRelease();
  sub_10001E8F8(0x656D6F6820746553, 0xEB00000000204449);
  swift_bridgeObjectRelease();
  v1[55] = sub_100083D40();
  v1[56] = v5;
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = sub_100083D40();
  sub_100084D60(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = 0x656D2D656D6F682DLL;
  v18._object = (void *)0xEA00000000006873;
  sub_100084D60(v18);
  swift_bridgeObjectRelease();
  uint64_t v6 = v1[54];
  if (v6 && (v1[53] == 0x6C7070612E6D6F63 && v6 == 0xEA00000000002E65 || (sub_100085580() & 1) != 0))
  {
    sub_100085340(25);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 0x6C7070612E6D6F63;
    v19._object = (void *)0xEA00000000002E65;
    sub_100084D60(v19);
    swift_bridgeObjectRelease();
    sub_10001E8F8(0xD000000000000017, 0x800000010008B680);
    swift_bridgeObjectRelease();
    NSString v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    uint64_t v9 = v0[3];
    uint64_t v10 = v0[4];
    sub_100085340(19);
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = 0x6C7070612E6D6F63;
    v20._object = (void *)0xEA00000000002E65;
    sub_100084D60(v20);
    sub_10001E8F8(0xD000000000000011, 0x800000010008B660);
    swift_bridgeObjectRelease();
    v1[53] = 0x6C7070612E6D6F63;
    v1[54] = 0xEA00000000002E65;
    swift_bridgeObjectRelease();
    *(void *)(v10 + 472) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v11 = (void *)swift_task_alloc();
    v0[5] = v11;
    *long long v11 = v0;
    v11[1] = sub_10005D034;
    uint64_t v12 = v0[4];
    v11[11] = v12;
    return _swift_task_switch(sub_1000590F8, v12, 0);
  }
}

uint64_t sub_10005D034()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  return _swift_task_switch(sub_10005D144, v1, 0);
}

uint64_t sub_10005D144()
{
  sub_10001E8F8(0x6D726177657250, 0xE700000000000000);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005D218;
  uint64_t v2 = *(void *)(v0 + 32);
  v1[31] = 0;
  v1[32] = v2;
  v1[33] = swift_getObjectType();
  return _swift_task_switch(sub_10005E17C, v2, 0);
}

uint64_t sub_10005D218(void *a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (!v1) {

  }
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
  return v5();
}

uint64_t sub_10005D318()
{
  uint64_t v1 = sub_100004BB0(&qword_1000A6BF8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100084150();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = sub_10006C4AC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v10 = *((void *)v8 + 2);
  unint64_t v9 = *((void *)v8 + 3);
  v39[0] = v7;
  if (v10 >= v9 >> 1) {
    long long v8 = sub_10006C4AC((char *)(v9 > 1), v10 + 1, 1, v8);
  }
  *((void *)v8 + 2) = v10 + 1;
  long long v11 = &v8[16 * v10];
  *((void *)v11 + 4) = 0xD000000000000019;
  *((void *)v11 + 5) = 0x800000010008AF00;
  uint64_t v12 = v0;
  uint64_t v13 = (long long *)(v0 + *(int *)(sub_100004BB0(&qword_1000A6CD0) + 40));
  long long v14 = v13[5];
  long long v46 = v13[4];
  long long v47 = v14;
  long long v15 = v13[7];
  long long v48 = v13[6];
  long long v49 = v15;
  long long v16 = v13[1];
  long long v42 = *v13;
  long long v43 = v16;
  long long v17 = v13[3];
  long long v44 = v13[2];
  long long v45 = v17;
  uint64_t v18 = sub_100011B54();
  uint64_t v20 = v19;
  unint64_t v22 = *((void *)v8 + 2);
  unint64_t v21 = *((void *)v8 + 3);
  if (v22 >= v21 >> 1) {
    long long v8 = sub_10006C4AC((char *)(v21 > 1), v22 + 1, 1, v8);
  }
  *((void *)v8 + 2) = v22 + 1;
  Swift::String v23 = &v8[16 * v22];
  *((void *)v23 + 4) = v18;
  *((void *)v23 + 5) = v20;
  sub_10000C724(v12, (uint64_t)v3, &qword_1000A6BF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10000C788((uint64_t)v3, &qword_1000A6BF8);
  }
  else
  {
    uint64_t v24 = v39[0];
    (*(void (**)(void, char *, uint64_t))(v5 + 32))(v39[0], v3, v4);
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_100085440();
    uint64_t v25 = v40;
    unint64_t v26 = v41;
    unint64_t v28 = *((void *)v8 + 2);
    unint64_t v27 = *((void *)v8 + 3);
    if (v28 >= v27 >> 1) {
      long long v8 = sub_10006C4AC((char *)(v27 > 1), v28 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v28 + 1;
    long long v29 = &v8[16 * v28];
    *((void *)v29 + 4) = v25;
    *((void *)v29 + 5) = v26;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
  }
  uint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  sub_100084360();
  sub_100085440();
  uint64_t v30 = v40;
  unint64_t v31 = v41;
  unint64_t v33 = *((void *)v8 + 2);
  unint64_t v32 = *((void *)v8 + 3);
  if (v33 >= v32 >> 1) {
    long long v8 = sub_10006C4AC((char *)(v32 > 1), v33 + 1, 1, v8);
  }
  *((void *)v8 + 2) = v33 + 1;
  uint64_t v34 = &v8[16 * v33];
  *((void *)v34 + 4) = v30;
  *((void *)v34 + 5) = v31;
  uint64_t v40 = 60;
  unint64_t v41 = 0xE100000000000000;
  v39[1] = v8;
  sub_100004BB0(&qword_1000A6378);
  sub_100011FB4();
  uint64_t v35 = sub_100084CE0();
  long long v37 = v36;
  swift_bridgeObjectRelease();
  v50._countAndFlagsBits = v35;
  v50._object = v37;
  sub_100084D60(v50);
  swift_bridgeObjectRelease();
  v51._countAndFlagsBits = 62;
  v51._object = (void *)0xE100000000000000;
  sub_100084D60(v51);
  return v40;
}

id sub_10005D6FC()
{
  swift_defaultActor_initialize();
  char v13 = 1;
  char v12 = 1;
  char v11 = 1;
  char v10 = 1;
  char v9 = 1;
  char v8 = 1;
  char v7 = 1;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  *(unsigned char *)(v0 + 128) = 0;
  *(void *)(v0 + 136) = 0xD000000000000011;
  *(void *)(v0 + 144) = 0x800000010008B560;
  *(void *)(v0 + 152) = 0;
  *(unsigned char *)(v0 + 160) = 1;
  *(void *)(v0 + 168) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 176) = 0xD000000000000016;
  *(void *)(v0 + 184) = 0x800000010008B580;
  *(void *)(v0 + 192) = 0;
  *(unsigned char *)(v0 + 200) = 1;
  *(void *)(v0 + 208) = 0xD000000000000018;
  *(void *)(v0 + 216) = 0x800000010008B5A0;
  *(_DWORD *)(v0 + 224) = 0;
  *(unsigned char *)(v0 + 228) = v11;
  *(void *)(v0 + 232) = 0xD000000000000018;
  *(void *)(v0 + 240) = 0x800000010008B5C0;
  *(void *)(v0 + 248) = 0;
  *(unsigned char *)(v0 + 256) = v10;
  *(void *)(v0 + 264) = 0xD00000000000001ALL;
  *(void *)(v0 + 272) = 0x800000010008B5E0;
  *(_DWORD *)(v0 + 280) = 0;
  *(unsigned char *)(v0 + 284) = v9;
  *(void *)(v0 + 288) = 0xD000000000000014;
  *(void *)(v0 + 296) = 0x800000010008B600;
  *(void *)(v0 + 304) = 0;
  *(unsigned char *)(v0 + 312) = v8;
  *(void *)(v0 + 320) = 0xD000000000000016;
  *(void *)(v0 + 328) = 0x800000010008B620;
  *(_DWORD *)(v0 + 336) = 0;
  *(unsigned char *)(v0 + 340) = v7;
  *(void *)(v0 + 344) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 352) = 0;
  *(void *)(v0 + 360) = 0;
  *(void *)(v0 + 368) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 376) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 384) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 392) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 400) = &_swiftEmptyDictionarySingleton;
  uint64_t v1 = qword_1000A5E28;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1000ABA08;
  *(void *)(v0 + 408) = qword_1000ABA00;
  *(void *)(v0 + 416) = v2;
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  uint64_t v3 = qword_1000A5E30;
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)algn_1000ABA18;
  *(void *)(v0 + 456) = qword_1000ABA10;
  *(void *)(v0 + 464) = v4;
  *(void *)(v0 + 472) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  swift_release();
  v6.receiver = (id)v0;
  v6.super_class = (Class)type metadata accessor for BetaEnrollmentNetworkingSession();
  return objc_msgSendSuper2(&v6, "init");
}

uint64_t sub_10005D94C()
{
  long long v1 = *(_OWORD *)(v0 + 320);
  v9[12] = *(_OWORD *)(v0 + 304);
  v9[13] = v1;
  v9[14] = *(_OWORD *)(v0 + 336);
  long long v2 = *(_OWORD *)(v0 + 256);
  v9[8] = *(_OWORD *)(v0 + 240);
  v9[9] = v2;
  long long v3 = *(_OWORD *)(v0 + 288);
  v9[10] = *(_OWORD *)(v0 + 272);
  v9[11] = v3;
  long long v4 = *(_OWORD *)(v0 + 192);
  v9[4] = *(_OWORD *)(v0 + 176);
  v9[5] = v4;
  long long v5 = *(_OWORD *)(v0 + 224);
  v9[6] = *(_OWORD *)(v0 + 208);
  v9[7] = v5;
  long long v6 = *(_OWORD *)(v0 + 128);
  v9[0] = *(_OWORD *)(v0 + 112);
  v9[1] = v6;
  long long v7 = *(_OWORD *)(v0 + 160);
  v9[2] = *(_OWORD *)(v0 + 144);
  v9[3] = v7;
  sub_100008128((uint64_t)v9);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_10005DA24()
{
  sub_10005D94C();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for BetaEnrollmentNetworkingSession()
{
  return self;
}

uint64_t sub_10005DA74()
{
  return sub_100061B2C((unint64_t *)&qword_1000A5E60, (unint64_t *)&qword_1000A5E68);
}

uint64_t sub_10005DAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  return _swift_task_switch(sub_10005DAE0, 0, 0);
}

uint64_t sub_10005DAE0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    long long v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *long long v2 = v0;
    v2[1] = sub_10005DBE4;
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 56);
    return sub_10005DD24(v5, v3, v4);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    long long v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_10005DBE4()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10005DCFC, 0, 0);
}

uint64_t sub_10005DCFC()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005DD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[44] = a2;
  v4[45] = v3;
  v4[43] = a1;
  v4[46] = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[47] = AssociatedTypeWitness;
  v4[48] = *(void *)(AssociatedTypeWitness - 8);
  v4[49] = swift_task_alloc();
  return _swift_task_switch(sub_10005DE08, v3, 0);
}

uint64_t sub_10005DE08()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v37 = 0;
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v36 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v38 = 0xE000000000000000;
  sub_100085340(18);
  v41._object = (void *)0x800000010008AEB0;
  v41._countAndFlagsBits = 0xD000000000000010;
  sub_100084D60(v41);
  *(void *)(v0 + 320) = v4;
  sub_100085550();
  sub_10001E8F8(v37, v38);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 328) = v4;
  sub_100085350();
  swift_getAssociatedConformanceWitness();
  sub_100085500();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_unknownObjectWeakAssign();
  sub_1000329AC(v5, v0 + 304, &qword_1000A6CB0);
  *(unsigned char *)(v0 + 312) = 0;
  swift_beginAccess();
  sub_100069CF4(v0 + 304, (uint64_t)&v37);
  swift_endAccess();
  swift_beginAccess();
  if ((*(unsigned char *)(v36 + 128) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v7 = *(void *)(v6 + 120);
    long long v8 = *(_OWORD *)(v6 + 136);
    uint64_t v9 = *(void *)(v6 + 152);
    char v10 = *(unsigned char *)(v6 + 160);
    long long v11 = *(_OWORD *)(v6 + 168);
    uint64_t v12 = *(void *)(v6 + 184);
    uint64_t v13 = *(void *)(v6 + 192);
    char v14 = *(unsigned char *)(v6 + 200);
    uint64_t v16 = *(void *)(v6 + 208);
    uint64_t v15 = *(void *)(v6 + 216);
    int v17 = *(_DWORD *)(v6 + 224);
    char v18 = *(unsigned char *)(v6 + 228);
    long long v19 = *(_OWORD *)(v6 + 232);
    uint64_t v20 = *(void *)(v6 + 248);
    char v21 = *(unsigned char *)(v6 + 256);
    uint64_t v22 = *(void *)(v6 + 264);
    uint64_t v23 = *(void *)(v6 + 272);
    int v24 = *(_DWORD *)(v6 + 280);
    char v25 = *(unsigned char *)(v6 + 284);
    long long v26 = *(_OWORD *)(v6 + 288);
    uint64_t v27 = *(void *)(v6 + 304);
    char v28 = *(unsigned char *)(v6 + 312);
    uint64_t v29 = *(void *)(v6 + 320);
    uint64_t v30 = *(void *)(v6 + 328);
    int v31 = *(_DWORD *)(v6 + 336);
    char v32 = *(unsigned char *)(v6 + 340);
    uint64_t v33 = *(void *)(v6 + 344);
    *(void *)(v0 + 16) = *(void *)(v36 + 112);
    *(void *)(v0 + 24) = v7;
    *(unsigned char *)(v0 + 32) = 0;
    *(_OWORD *)(v0 + 40) = v8;
    *(void *)(v0 + 56) = v9;
    *(unsigned char *)(v0 + 64) = v10;
    *(_OWORD *)(v0 + 72) = v11;
    *(void *)(v0 + 88) = v12;
    *(void *)(v0 + 96) = v13;
    *(unsigned char *)(v0 + 104) = v14;
    *(void *)(v0 + 112) = v16;
    *(void *)(v0 + 120) = v15;
    *(_DWORD *)(v0 + 128) = v17;
    *(unsigned char *)(v0 + 132) = v18;
    *(_OWORD *)(v0 + 136) = v19;
    *(void *)(v0 + 152) = v20;
    *(unsigned char *)(v0 + 160) = v21;
    *(void *)(v0 + 168) = v22;
    *(void *)(v0 + 176) = v23;
    *(_DWORD *)(v0 + 184) = v24;
    *(unsigned char *)(v0 + 188) = v25;
    *(_OWORD *)(v0 + 192) = v26;
    *(void *)(v0 + 208) = v27;
    *(unsigned char *)(v0 + 216) = v28;
    *(void *)(v0 + 224) = v29;
    *(void *)(v0 + 232) = v30;
    *(_DWORD *)(v0 + 240) = v31;
    *(unsigned char *)(v0 + 244) = v32;
    *(void *)(v0 + 248) = v33;
    sub_100007F6C(v0 + 16);
    sub_10001EA24(0x676E697472617453, 0xE800000000000000);
    sub_100008128(v0 + 16);
    *(unsigned char *)(v36 + 128) = 1;
  }
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34();
}

uint64_t sub_10005E10C(uint64_t a1)
{
  v2[31] = a1;
  v2[32] = v1;
  v2[33] = swift_getObjectType();
  return _swift_task_switch(sub_10005E17C, v1, 0);
}

uint64_t sub_10005E17C()
{
  uint64_t v1 = *(void **)(v0 + 248);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 256);
    swift_beginAccess();
    uint64_t v3 = *(void *)(v2 + 384);
    swift_bridgeObjectRetain();
    id v4 = v1;
    id v5 = sub_100059BB4(v4, v3, (uint64_t (*)(void))sub_10006BEB0);
    swift_bridgeObjectRelease();
    if (v5)
    {

LABEL_4:
      uint64_t v6 = *(uint64_t (**)(id))(v0 + 8);
      return v6(v5);
    }
    sub_100061AD8();
    swift_allocError();
    *long long v11 = 5;
    swift_willThrow();

    goto LABEL_20;
  }
  unsigned __int8 v8 = [self isNoDaemonMessageChannelEnabled];
  uint64_t v9 = *(void *)(v0 + 256);
  if (v8)
  {
    char v10 = *(void **)(v9 + 352);
    if (v10 && *(void *)(v9 + 360))
    {
      id v5 = v10;
      goto LABEL_4;
    }
    char v21 = self;
    *(void *)(v0 + 288) = v21;
    swift_bridgeObjectRetain();
    NSString v22 = sub_100084D00();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v9 + 440);
    *(void *)(v0 + 296) = sub_100004BB0(&qword_1000A67D8);
    id v23 = [v21 messageChannelWithTopic:v22 cluster:sub_1000851F0() manualGrouping:1];
    swift_unknownObjectRelease();

    int v24 = *(void **)(v9 + 352);
    *(void *)(v9 + 352) = v23;

    char v25 = *(void **)(v9 + 352);
    *(void *)(v0 + 304) = v25;
    if (v25)
    {
      uint64_t v17 = v0 + 80;
      uint64_t v26 = *(void *)(v0 + 264);
      sub_100083D80();
      sub_100060420(&qword_1000A6540, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      id v27 = v25;
      swift_bridgeObjectRetain();
      Class isa = sub_100085020().super.isa;
      swift_bridgeObjectRelease();
      [v27 addGroupedHomeKitIdentifiers:isa];

      sub_100060468(v27);
      sub_100058E34(0xD000000000000016, 0x800000010008B470, v26, (uint64_t)&off_1000A0E30);
      *(void *)(v0 + 80) = v0;
      *(void *)(v0 + 88) = sub_10005E894;
      uint64_t v29 = swift_continuation_init();
      *(void *)(v0 + 208) = _NSConcreteStackBlock;
      *(void *)(v0 + 216) = 0x40000000;
      *(void *)(v0 + 224) = sub_10001A988;
      *(void *)(v0 + 232) = &unk_1000A0EC0;
      *(void *)(v0 + 240) = v29;
      [v27 activateWithCompletion:v0 + 208];
      goto LABEL_16;
    }
LABEL_19:
    sub_100061AD8();
    swift_allocError();
    *uint64_t v30 = 5;
    swift_willThrow();
LABEL_20:
    int v31 = *(uint64_t (**)(void))(v0 + 8);
    return v31();
  }
  uint64_t v12 = self;
  swift_bridgeObjectRetain();
  NSString v13 = sub_100084D00();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v9 + 424);
  sub_100004BB0(&qword_1000A67D8);
  id v14 = [v12 messageChannelWithTopic:v13 cluster:sub_1000851F0() manualGrouping:0];
  swift_unknownObjectRelease();

  uint64_t v15 = *(void **)(v9 + 360);
  *(void *)(v9 + 360) = v14;

  uint64_t v16 = *(void **)(v9 + 360);
  *(void *)(v0 + 272) = v16;
  if (!v16) {
    goto LABEL_19;
  }
  uint64_t v17 = v0 + 16;
  uint64_t v18 = *(void *)(v0 + 264);
  id v19 = v16;
  sub_100060468(v19);
  sub_100058E34(0xD000000000000019, 0x800000010008B450, v18, (uint64_t)&off_1000A0E30);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_10005E6FC;
  uint64_t v20 = swift_continuation_init();
  *(void *)(v0 + 208) = _NSConcreteStackBlock;
  *(void *)(v0 + 216) = 0x40000000;
  *(void *)(v0 + 224) = sub_10001A988;
  *(void *)(v0 + 232) = &unk_1000A0EA8;
  *(void *)(v0 + 240) = v20;
  [v19 activateWithCompletion:v0 + 208];
LABEL_16:
  return _swift_continuation_await(v17);
}

uint64_t sub_10005E6FC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 280) = v2;
  uint64_t v3 = *(void *)(v1 + 256);
  if (v2) {
    id v4 = sub_10005EDA0;
  }
  else {
    id v4 = sub_10005E81C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10005E81C()
{
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = *(void **)(v2 + 360);
  *(void *)(v2 + 360) = v1;
  id v4 = v1;

  uint64_t v5 = v0[34];
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_10005E894()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 312) = v2;
  uint64_t v3 = *(void *)(v1 + 256);
  if (v2) {
    id v4 = sub_10005EE10;
  }
  else {
    id v4 = sub_10005E9B4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10005E9B4()
{
  uint64_t v1 = *(void **)(v0 + 304);
  uint64_t v2 = *(void **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 256);
  id v4 = *(void **)(v3 + 352);
  *(void *)(v3 + 352) = v1;
  id v5 = v1;

  swift_bridgeObjectRetain();
  NSString v6 = sub_100084D00();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v3 + 424);
  id v7 = [v2 messageChannelWithTopic:v6 cluster:sub_1000851F0() manualGrouping:0];
  swift_unknownObjectRelease();

  uint64_t v8 = *(void **)(v3 + 360);
  *(void *)(v3 + 360) = v7;

  uint64_t v9 = *(void **)(v3 + 360);
  *(void *)(v0 + 320) = v9;
  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + 264);
    id v11 = v9;
    sub_100060468(v11);
    sub_100058E34(0xD000000000000019, 0x800000010008B450, v10, (uint64_t)&off_1000A0E30);
    *(void *)(v0 + 144) = v0;
    *(void *)(v0 + 152) = sub_10005EC0C;
    uint64_t v12 = swift_continuation_init();
    *(void *)(v0 + 208) = _NSConcreteStackBlock;
    *(void *)(v0 + 216) = 0x40000000;
    *(void *)(v0 + 224) = sub_10001A988;
    *(void *)(v0 + 232) = &unk_1000A0ED8;
    *(void *)(v0 + 240) = v12;
    [v11 activateWithCompletion:v0 + 208];
    return _swift_continuation_await(v0 + 144);
  }
  else
  {
    NSString v13 = *(void **)(v0 + 304);
    sub_100061AD8();
    swift_allocError();
    *id v14 = 5;
    swift_willThrow();

    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_10005EC0C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 176);
  *(void *)(*v0 + 328) = v2;
  uint64_t v3 = *(void *)(v1 + 256);
  if (v2) {
    id v4 = sub_10005EE80;
  }
  else {
    id v4 = sub_10005ED2C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10005ED2C()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = *(void **)(v1 + 360);
  *(void *)(v1 + 360) = v0[40];

  uint64_t v3 = v0[38];
  id v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_10005EDA0()
{
  uint64_t v1 = *(void **)(v0 + 272);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10005EE10()
{
  uint64_t v1 = *(void **)(v0 + 304);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10005EE80()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v2 = (void *)v0[38];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10005EEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  return _swift_task_switch(sub_10005EF20, 0, 0);
}

uint64_t sub_10005EF20()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10005F024;
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 56);
    return sub_10005F13C(v5, v3, v4);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    id v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_10005F024()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1000624F8, 0, 0);
}

uint64_t sub_10005F13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a2;
  v4[19] = v3;
  v4[17] = a1;
  v4[20] = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[21] = AssociatedTypeWitness;
  v4[22] = *(void *)(AssociatedTypeWitness - 8);
  v4[23] = swift_task_alloc();
  return _swift_task_switch(sub_10005F220, v3, 0);
}

uint64_t sub_10005F220()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v7 = v0[19];
  uint64_t v4 = v0[17];
  sub_100085340(20);
  v9._object = (void *)0x800000010008AE70;
  v9._countAndFlagsBits = 0xD000000000000012;
  sub_100084D60(v9);
  v0[15] = v4;
  sub_100085550();
  sub_10001E8F8(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  v0[16] = v4;
  sub_100085350();
  swift_getAssociatedConformanceWitness();
  sub_100085500();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  sub_10006D470((uint64_t)(v0 + 2), (uint64_t)(v0 + 13));
  sub_100032594((uint64_t)(v0 + 2));
  sub_10000C788((uint64_t)(v0 + 13), &qword_1000A6CC0);
  swift_endAccess();
  if (!*(void *)(*(void *)(v7 + 368) + 16))
  {
    swift_beginAccess();
    sub_100007C3C();
    swift_endAccess();
  }
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10005F408(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (!a4)
  {
    if (a2)
    {
      if (a3)
      {
        uint64_t v10 = *(void **)(*(void *)(v4 + 64) + 40);
        *uint64_t v10 = a2;
        v10[1] = a3;
        id v11 = a2;
        id v12 = a3;
        a1 = v4;
        return _swift_continuation_throwingResume(a1);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return _swift_continuation_throwingResume(a1);
  }
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  uint64_t v6 = swift_allocError();
  *uint64_t v7 = a4;
  id v8 = a4;
  return _swift_continuation_throwingResumeWithError(v4, v6);
}

void sub_10005F4D8(void *a1, void *a2)
{
  uint64_t v4 = sub_100084360();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v76 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BB0(&qword_1000A70D8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v73 - v11;
  uint64_t v13 = sub_100004BB0(&qword_1000A6CD0);
  uint64_t v81 = *(void *)(v13 - 8);
  uint64_t v82 = v13;
  __chkstk_darwin(v13);
  uint64_t v77 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = 0;
  unint64_t v86 = 0xE000000000000000;
  sub_100085340(31);
  swift_bridgeObjectRelease();
  uint64_t v83 = 0xD000000000000015;
  uint64_t v84 = 0x800000010008B380;
  uint64_t v79 = v4;
  uint64_t v80 = v10;
  uint64_t v78 = v5;
  if (a1)
  {
    uint64_t v15 = sub_10002207C(0, &qword_1000A7CC8);
    uint64_t v87 = v15;
    uint64_t v88 = sub_100061B2C(&qword_1000A7CD0, &qword_1000A7CC8);
    uint64_t v85 = (uint64_t)a1;
    uint64_t v16 = (void *)*sub_100004C6C(&v85, v15);
    id v17 = a1;
    id v18 = [v16 description];
    uint64_t v19 = sub_100084D10();
    char v21 = v20;

    sub_100004CB0((uint64_t)&v85);
  }
  else
  {
    char v21 = (void *)0xE300000000000000;
    uint64_t v19 = 7104878;
  }
  v90._countAndFlagsBits = v19;
  v90._object = v21;
  sub_100084D60(v90);
  swift_bridgeObjectRelease();
  v91._countAndFlagsBits = 0x206D6F726620;
  v91._object = (void *)0xE600000000000000;
  sub_100084D60(v91);
  if (!a2)
  {
    v93._countAndFlagsBits = 7104878;
    v93._object = (void *)0xE300000000000000;
    sub_100084D60(v93);
    swift_bridgeObjectRelease();
    sub_10001E8F8(v83, v84);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v22 = sub_10002207C(0, &qword_1000A70E0);
  uint64_t v87 = v22;
  uint64_t v88 = sub_100061B2C(&qword_1000A70E8, &qword_1000A70E0);
  uint64_t v85 = (uint64_t)a2;
  id v23 = (void *)*sub_100004C6C(&v85, v22);
  id v24 = a2;
  id v25 = [v23 description];
  uint64_t v26 = sub_100084D10();
  char v28 = v27;

  sub_100004CB0((uint64_t)&v85);
  v92._countAndFlagsBits = v26;
  v92._object = v28;
  sub_100084D60(v92);
  swift_bridgeObjectRelease();
  sub_10001E8F8(v83, v84);
  swift_bridgeObjectRelease();
  id v29 = [v24 member];
  if (!v29)
  {
LABEL_13:
    sub_100061AD8();
    swift_allocError();
    *Swift::String v41 = 6;
    swift_willThrow();
    return;
  }
  uint64_t v30 = v29;
  if (!a1 || (sub_100084270(), !swift_dynamicCastClass()))
  {
    sub_100061AD8();
    swift_allocError();
    *long long v42 = 3;
    swift_willThrow();

    return;
  }
  id v75 = a1;
  int v31 = (void *)sub_100084240();

  if (v31 || (sub_100084260() & 1) == 0)
  {
    uint64_t v32 = sub_100084240();
    if (v32)
    {
      uint64_t v33 = (void *)v32;
      uint64_t v34 = sub_10002207C(0, (unint64_t *)&qword_1000A62A0);
      uint64_t v87 = v34;
      uint64_t v88 = sub_100061B2C((unint64_t *)&qword_1000A6298, (unint64_t *)&qword_1000A62A0);
      uint64_t v85 = (uint64_t)v33;
      uint64_t v35 = (void *)*sub_100004C6C(&v85, v34);
      id v36 = v33;
      id v37 = [v35 description];
      uint64_t v38 = sub_100084D10();
      uint64_t v40 = v39;

      sub_100004CB0((uint64_t)&v85);
    }
    else
    {
      uint64_t v40 = (void *)0xE300000000000000;
      uint64_t v38 = 7104878;
    }
    uint64_t v85 = 0;
    unint64_t v86 = 0xE000000000000000;
    sub_100085340(64);
    v94._countAndFlagsBits = 0xD000000000000032;
    v94._object = (void *)0x800000010008B3A0;
    sub_100084D60(v94);
    v95._countAndFlagsBits = v38;
    v95._object = v40;
    sub_100084D60(v95);
    swift_bridgeObjectRelease();
    v96._countAndFlagsBits = 0x736563637573202CLL;
    v96._object = (void *)0xEA00000000002073;
    sub_100084D60(v96);
    char v43 = sub_100084260();
    BOOL v44 = (v43 & 1) == 0;
    if (v43) {
      v45._countAndFlagsBits = 1702195828;
    }
    else {
      v45._countAndFlagsBits = 0x65736C6166;
    }
    if (v44) {
      long long v46 = (void *)0xE500000000000000;
    }
    else {
      long long v46 = (void *)0xE400000000000000;
    }
    v45._object = v46;
    sub_100084D60(v45);
    swift_bridgeObjectRelease();
    unint64_t v74 = (void (*)(uint64_t, void, uint64_t, uint64_t))v85;
    uint64_t v85 = type metadata accessor for BetaEnrollmentNetworkingSession();
    sub_100004BB0(&qword_1000A6680);
    sub_100084D20();
    id v47 = objc_allocWithZone((Class)CULogHandle);
    NSString v48 = sub_100084D00();
    NSString v49 = sub_100084D00();
    swift_bridgeObjectRelease();
    id v50 = [v47 initWithSubsystem:v48 category:v49];

    NSString v51 = sub_100084D00();
    [v50 ulog:60 message:v51];
    swift_bridgeObjectRelease();
  }
  uint64_t v52 = v89;
  swift_beginAccess();
  uint64_t v53 = *(void *)(v52 + 376);
  if (!*(void *)(v53 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v12, 1, 1, v82);
LABEL_29:
    sub_10000C788((uint64_t)v12, &qword_1000A70D8);
    sub_100061AD8();
    swift_allocError();
    *uint64_t v62 = 8;
    swift_willThrow();

    return;
  }
  id v54 = v30;
  swift_bridgeObjectRetain();
  unint64_t v55 = sub_10006BEB0((uint64_t)v54);
  uint64_t v57 = v81;
  if (v56)
  {
    sub_10000C724(*(void *)(v53 + 56) + *(void *)(v81 + 72) * v55, (uint64_t)v12, &qword_1000A6CD0);
    Swift::String v58 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56);
    uint64_t v59 = v12;
    uint64_t v60 = 0;
  }
  else
  {
    Swift::String v58 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56);
    uint64_t v59 = v12;
    uint64_t v60 = 1;
  }
  uint64_t v61 = v82;
  unint64_t v74 = v58;
  v58((uint64_t)v59, v60, 1, v82);

  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v12, 1, v61) == 1) {
    goto LABEL_29;
  }
  id v73 = v54;
  uint64_t v63 = v77;
  sub_1000329AC((uint64_t)v12, v77, &qword_1000A6CD0);
  uint64_t v83 = 0;
  uint64_t v84 = 0xE000000000000000;
  sub_100085340(29);
  v97._countAndFlagsBits = 0x676E697461647055;
  v97._object = (void *)0xEA00000000006020;
  sub_100084D60(v97);
  uint64_t v64 = v63 + *(int *)(v61 + 40);
  uint64_t v65 = *(void *)(v64 + 32);
  uint64_t v66 = *(void **)(v64 + 40);
  swift_bridgeObjectRetain();
  v98._countAndFlagsBits = v65;
  v98._object = v66;
  sub_100084D60(v98);
  swift_bridgeObjectRelease();
  v99._countAndFlagsBits = 0x2E65746174732060;
  v99._object = (void *)0xE900000000000020;
  sub_100084D60(v99);
  uint64_t v67 = v63 + *(int *)(v61 + 36);
  uint64_t v68 = v79;
  sub_100085440();
  v100._countAndFlagsBits = 540945696;
  v100._object = (void *)0xE400000000000000;
  sub_100084D60(v100);
  uint64_t v69 = v76;
  sub_100084250();
  sub_100085440();
  uint64_t v70 = v78;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v69, v68);
  sub_10001E8F8(v83, v84);
  swift_bridgeObjectRelease();
  sub_100084250();
  (*(void (**)(uint64_t, char *, uint64_t))(v70 + 40))(v67, v69, v68);
  uint64_t v71 = (uint64_t)v80;
  sub_10000C724(v63, (uint64_t)v80, &qword_1000A6CD0);
  v74(v71, 0, 1, v82);
  swift_beginAccess();
  id v72 = v73;
  sub_100069DBC(v71, v72);
  swift_endAccess();
  sub_100060E88();

  sub_10000C788(v63, &qword_1000A6CD0);
}

uint64_t sub_10005FF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100005D30;
  return sub_10005AE2C(a1, a2, a3);
}

uint64_t sub_10005FFDC()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10003ED10;
  v2[5] = v0;
  return _swift_task_switch(sub_10005B01C, v0, 0);
}

uint64_t sub_100060084()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1000600A4, v0, 0);
}

uint64_t sub_1000600A4()
{
  sub_10001E8F8(0x6D726177657250, 0xE700000000000000);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100060178;
  uint64_t v2 = *(void *)(v0 + 16);
  v1[31] = 0;
  v1[32] = v2;
  v1[33] = swift_getObjectType();
  return _swift_task_switch(sub_10005E17C, v2, 0);
}

uint64_t sub_100060178(void *a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (!v1) {

  }
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
  return v5();
}

uint64_t sub_100060278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100005D30;
  return sub_10005B130(a1, a2, a3);
}

uint64_t sub_100060324(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000052B8;
  return sub_10005B300(a1, a2);
}

uint64_t sub_1000603C8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100060420(&qword_1000A7CA8, a2, (void (*)(uint64_t))type metadata accessor for BetaEnrollmentNetworkingSession);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100060420(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100060468(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100084C30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100061DC0;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100060D44;
  aBlock[3] = &unk_1000A0EF0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  sub_100084320();
  [a1 registerHandler:v9 forRequestClass:swift_getObjCClassFromMetadata()];
  _Block_release(v9);
  swift_bridgeObjectRetain();
  NSString v10 = sub_100084D00();
  swift_bridgeObjectRelease();
  sub_10002207C(0, &qword_1000A7D00);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchQoS.QoSClass.default(_:), v4);
  uint64_t v11 = (void *)sub_1000851A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  [a1 addSessionProducerWithSubTopic:v10 delegate:v2 dispatchQueue:v11];
}

void sub_100060690(void *a1, void *a2, void (*a3)(void *, uint64_t))
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v8 = (void *)sub_1000607AC(a1, a2);
    a3(v8, 0);
    swift_release();
  }
  else
  {
    sub_10000D054();
    uint64_t v6 = swift_allocError();
    *uint64_t v7 = 3;
    swift_willThrow();
    swift_errorRetain();
    a3(0, v6);
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_1000607AC(void *a1, void *a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v4 - 8);
  long long v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BB0(&qword_1000A70D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004BB0(&qword_1000A6CD0);
  uint64_t v46 = *(void *)(v43 - 8);
  uint64_t v9 = *(void *)(v46 + 64);
  uint64_t v10 = __chkstk_darwin(v43);
  uint64_t v40 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v41 = (uint64_t)&v40 - v11;
  uint64_t v44 = 0;
  uint64_t v45 = 0xE000000000000000;
  sub_100085340(31);
  swift_bridgeObjectRelease();
  uint64_t v44 = 0xD000000000000015;
  uint64_t v45 = 0x800000010008B500;
  id v12 = [a1 description];
  uint64_t v13 = sub_100084D10();
  uint64_t v15 = v14;

  v47._countAndFlagsBits = v13;
  v47._object = v15;
  sub_100084D60(v47);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = 0x206D6F726620;
  v48._object = (void *)0xE600000000000000;
  sub_100084D60(v48);
  id v16 = [a2 member];
  id v17 = [v16 description];
  uint64_t v18 = sub_100084D10();
  uint64_t v20 = v19;

  v49._countAndFlagsBits = v18;
  v49._object = v20;
  sub_100084D60(v49);

  swift_bridgeObjectRelease();
  sub_10001E8F8(v44, v45);
  swift_bridgeObjectRelease();
  sub_100084320();
  uint64_t v21 = swift_dynamicCastClass();
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    id v23 = a1;
    sub_1000596D0(v22, [a2 member], (uint64_t)v8);
    uint64_t v24 = v46;
    uint64_t v25 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v8, 1, v43) == 1)
    {
      sub_10000C788((uint64_t)v8, &qword_1000A70D8);
      sub_100061AD8();
      swift_allocError();
      *uint64_t v26 = 1;
      swift_willThrow();
    }
    else
    {
      uint64_t v32 = v41;
      sub_1000329AC((uint64_t)v8, v41, &qword_1000A6CD0);
      uint64_t v33 = sub_100084FF0();
      uint64_t v34 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v42, 1, 1, v33);
      uint64_t v35 = swift_allocObject();
      swift_weakInit();
      uint64_t v36 = v40;
      sub_10000C724(v32, v40, &qword_1000A6CD0);
      unint64_t v37 = (*(unsigned __int8 *)(v24 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = 0;
      v38[3] = 0;
      v38[4] = v35;
      sub_1000329AC(v36, (uint64_t)v38 + v37, &qword_1000A6CD0);
      sub_100015B60(v34, (uint64_t)&unk_1000A7D10, (uint64_t)v38);
      swift_release();
      uint64_t v25 = (uint64_t)[objc_allocWithZone((Class)sub_100084340()) init];

      sub_10000C788(v32, &qword_1000A6CD0);
    }
  }
  else
  {
    uint64_t v44 = type metadata accessor for BetaEnrollmentNetworkingSession();
    sub_100004BB0(&qword_1000A6680);
    sub_100084D20();
    id v27 = objc_allocWithZone((Class)CULogHandle);
    NSString v28 = sub_100084D00();
    NSString v29 = sub_100084D00();
    swift_bridgeObjectRelease();
    uint64_t v25 = (uint64_t)[v27 initWithSubsystem:v28 category:v29];

    NSString v30 = sub_100084D00();
    [(id)v25 ulog:60 message:v30];

    sub_10000D054();
    swift_allocError();
    *int v31 = 6;
    swift_willThrow();
  }
  return v25;
}

void sub_100060D44(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6 = *(void (**)(id, id, void (*)(uint64_t, uint64_t), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_100061E18, v8);
  swift_release();
  swift_release();
}

void sub_100060E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_100083CF0();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_100060E88()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v0 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100083D80();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v9 = (char *)&v16 - v8;
  sub_100083D70();
  uint64_t v18 = 0;
  uint64_t v19 = 0xE000000000000000;
  sub_100085340(29);
  swift_bridgeObjectRelease();
  uint64_t v18 = 0xD00000000000001BLL;
  uint64_t v19 = 0x800000010008B3E0;
  sub_100060420(&qword_1000A6538, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  v20._countAndFlagsBits = sub_100085530();
  sub_100084D60(v20);
  swift_bridgeObjectRelease();
  sub_10001E8F8(v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v2, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v14 + v12, v7, v3);
  *(void *)(v14 + v13) = v11;
  *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  sub_100015B60((uint64_t)v2, (uint64_t)&unk_1000A7CE0, v14);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_100061194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return _swift_task_switch(sub_1000611B4, 0, 0);
}

uint64_t sub_1000611B4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[7] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[8] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1000612C0;
    v3[2] = v0[6];
    v3[3] = v2;
    return _swift_task_switch(sub_10006143C, v2, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1000612C0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000613BC, 0, 0);
}

uint64_t sub_1000613BC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006141C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10006143C, v1, 0);
}

uint64_t sub_10006143C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_100085340(23);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = sub_10005D318();
  sub_100084D60(v5);
  swift_bridgeObjectRelease();
  sub_10001E8F8(0xD000000000000015, 0x800000010008B520);
  swift_bridgeObjectRelease();
  sub_100061648(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100061554;
  return sub_10005A274();
}

uint64_t sub_100061554()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100061648(uint64_t a1)
{
  uint64_t v2 = sub_100004BB0(&qword_1000A70D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 0;
  uint64_t v10 = 0xE000000000000000;
  sub_100085340(21);
  swift_bridgeObjectRelease();
  uint64_t v9 = 0xD000000000000013;
  uint64_t v10 = 0x800000010008B540;
  v11._countAndFlagsBits = sub_10005D318();
  sub_100084D60(v11);
  swift_bridgeObjectRelease();
  sub_10001E8F8(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_100004BB0(&qword_1000A6CD0);
  uint64_t v6 = *(void **)(a1 + *(int *)(v5 + 44));
  sub_10000C724(a1, (uint64_t)v4, &qword_1000A6CD0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  swift_beginAccess();
  sub_100069DBC((uint64_t)v4, v6);
  return swift_endAccess();
}

uint64_t sub_1000617C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return _swift_task_switch(sub_1000617EC, 0, 0);
}

uint64_t sub_1000617EC()
{
  uint64_t v1 = v0[7];
  sub_100085340(38);
  swift_bridgeObjectRelease();
  sub_100083D80();
  sub_100060420(&qword_1000A6538, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  v7._countAndFlagsBits = sub_100085530();
  sub_100084D60(v7);
  swift_bridgeObjectRelease();
  sub_100058E34(0xD000000000000024, 0x800000010008B400, v1, (uint64_t)&off_1000A0E30);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[8] = Strong;
  if (Strong)
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1000619C8;
    return sub_10005A274();
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1000619C8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_100061AD8()
{
  unint64_t result = qword_1000A7CB8;
  if (!qword_1000A7CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7CB8);
  }
  return result;
}

uint64_t sub_100061B2C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10002207C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100061B70()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_100061BA8()
{
  uint64_t v1 = sub_100083D80();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100061C98()
{
  uint64_t v2 = *(void *)(sub_100083D80() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  void *v8 = v1;
  v8[1] = sub_100005D30;
  v8[6] = v6;
  v8[7] = v7;
  void v8[5] = v5;
  return _swift_task_switch(sub_1000617EC, 0, 0);
}

void sub_100061DC0(void *a1, void *a2, void (*a3)(void *, uint64_t))
{
}

uint64_t sub_100061DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100061DD8()
{
  return swift_release();
}

uint64_t sub_100061DE0()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_100061E18(uint64_t a1, uint64_t a2)
{
  sub_100060E18(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100061E20()
{
  uint64_t v1 = (int *)sub_100004BB0(&qword_1000A6CD0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_100084150();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  uint64_t v6 = v3 + v1[9];
  uint64_t v7 = sub_100084360();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = (void *)(v3 + v1[10]);
  if (v8[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8[9])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v8[13])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_100062000()
{
  uint64_t v2 = *(void *)(sub_100004BB0(&qword_1000A6CD0) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1000052B8;
  v5[5] = v3;
  v5[6] = v4;
  return _swift_task_switch(sub_1000611B4, 0, 0);
}

uint64_t sub_1000620EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A6BF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100062158(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 48);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100005D30;
  *(_OWORD *)(v4 + 48) = v5;
  *(_OWORD *)(v4 + 64) = v6;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_10005EF20, 0, 0);
}

uint64_t sub_100062210()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_100062258(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 48);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100005D30;
  *(_OWORD *)(v4 + 48) = v5;
  *(_OWORD *)(v4 + 64) = v6;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_10005DAE0, 0, 0);
}

uint64_t getEnumTagSinglePayload for BetaEnrollmentNetworkingSession.SessionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BetaEnrollmentNetworkingSession.SessionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100062468);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BetaEnrollmentNetworkingSession.SessionError()
{
  return &type metadata for BetaEnrollmentNetworkingSession.SessionError;
}

unint64_t sub_1000624A4()
{
  unint64_t result = qword_1000A7D78;
  if (!qword_1000A7D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7D78);
  }
  return result;
}

uint64_t sub_1000624FC()
{
  uint64_t v0 = sub_1000844F0();
  sub_100084A40();
  return v0;
}

uint64_t type metadata accessor for BetaSettingsRowView()
{
  return sub_10000C880();
}

uint64_t sub_100062584()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000625C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v67 = a4;
  int v66 = a3;
  uint64_t v65 = a1;
  uint64_t v77 = a7;
  uint64_t v57 = type metadata accessor for EnrollToggle();
  __chkstk_darwin(v57);
  uint64_t v70 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100004BB0(&qword_1000A7E80);
  uint64_t v11 = __chkstk_darwin(v69);
  uint64_t v68 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = sub_100084150();
  uint64_t v73 = *(void *)(v15 - 8);
  uint64_t v74 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  id v72 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v71 = (char *)&v53 - v18;
  uint64_t v19 = sub_100084360();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  id v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v53 - v24;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(a6 + 88);
  swift_unknownObjectRetain();
  uint64_t v75 = a5;
  uint64_t v56 = a6 + 88;
  unint64_t v55 = v26;
  v26(a5, a6);
  uint64_t v76 = a2;
  swift_unknownObjectRelease();
  id v27 = *(void (**)(char *, void, uint64_t))(v20 + 104);
  uint64_t v59 = v20 + 104;
  Swift::String v58 = v27;
  v27(v23, enum case for BetaEnrollment.State.multiple(_:), v19);
  sub_100064F48(&qword_1000A6B80, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
  LOBYTE(a2) = sub_100084CF0();
  uint64_t v60 = v20;
  uint64_t v28 = v20 + 8;
  NSString v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v64 = v23;
  v29(v23, v19);
  uint64_t v62 = v28;
  uint64_t v63 = v25;
  uint64_t v61 = v29;
  v29(v25, v19);
  if (a2) {
    goto LABEL_3;
  }
  uint64_t v30 = a6;
  id v54 = v14;
  int v31 = *(void (**)(uint64_t, uint64_t))(a6 + 64);
  swift_unknownObjectRetain();
  uint64_t v32 = v71;
  v31(v75, a6);
  uint64_t v33 = v69;
  uint64_t v34 = (uint64_t)v70;
  swift_unknownObjectRelease();
  uint64_t v35 = v72;
  uint64_t v36 = v73;
  uint64_t v37 = v74;
  (*(void (**)(char *, void, uint64_t))(v73 + 104))(v72, enum case for BetaEnrollment.Availability.unavailable(_:), v74);
  sub_100064F48(&qword_1000A6160, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.Availability);
  char v38 = sub_100084CF0();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v36 + 8);
  v39(v35, v37);
  v39(v32, v37);
  if (v38)
  {
LABEL_3:
    uint64_t result = sub_100084B10();
    uint64_t v41 = result;
  }
  else
  {
    uint64_t v42 = v76;
    swift_unknownObjectRetain();
    uint64_t v43 = v63;
    uint64_t v44 = v33;
    uint64_t v45 = v75;
    v55(v75, v30);
    swift_unknownObjectRelease();
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v45;
    *(void *)(v46 + 24) = v30;
    *(void *)(v46 + 32) = v65;
    *(void *)(v46 + 40) = v42;
    *(unsigned char *)(v46 + 48) = v66 & 1;
    *(void *)(v46 + 56) = v67;
    uint64_t v47 = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v34 + *(int *)(v57 + 20), v43, v19);
    Swift::String v48 = (uint64_t (**)())(v34 + *(int *)(v47 + 24));
    *Swift::String v48 = sub_100064D70;
    v48[1] = (uint64_t (*)())v46;
    Swift::String v49 = v64;
    v58(v64, enum case for BetaEnrollment.State.enrolled(_:), v19);
    sub_100064F48((unint64_t *)&qword_1000A6158, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    sub_100084E50();
    sub_100084E50();
    swift_release();
    LOBYTE(v42) = v79 == v78;
    id v50 = v61;
    v61(v43, v19);
    v50(v49, v19);
    *(unsigned char *)uint64_t v34 = v42;
    *(void *)(v34 + 8) = 0;
    uint64_t v51 = (uint64_t)v54;
    sub_100064DDC(v34, (uint64_t)v54);
    uint64_t v52 = v51 + *(int *)(v44 + 36);
    *(void *)uint64_t v52 = 0;
    *(_WORD *)(v52 + 8) = 1;
    sub_100064E40(v34);
    sub_10000C724(v51, v68, &qword_1000A7E80);
    sub_100064E9C();
    uint64_t v41 = sub_100084B10();
    uint64_t result = sub_10000C788(v51, &qword_1000A7E80);
  }
  *uint64_t v77 = v41;
  return result;
}

uint64_t sub_100062C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v25[0] = sub_100084690();
  v25[1] = 0;
  char v26 = 1;
  sub_100062E8C(a1, a2, a3, a4, a5, a6, (uint64_t)v27);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a5;
  *(void *)(v14 + 24) = a6;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  *(unsigned char *)(v14 + 48) = a3;
  *(void *)(v14 + 56) = a4;
  sub_10000C724((uint64_t)v25, (uint64_t)v19, &qword_1000A7E38);
  uint64_t v21 = sub_100064954;
  uint64_t v22 = v14;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  swift_retain();
  swift_unknownObjectRetain();
  sub_10000C788((uint64_t)v25, &qword_1000A7E38);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  *(void *)(v15 + 24) = a6;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  *(unsigned char *)(v15 + 48) = a3;
  *(void *)(v15 + 56) = a4;
  sub_10000C724((uint64_t)v19, (uint64_t)v25, &qword_1000A7E28);
  v27[17] = 0;
  v27[18] = 0;
  v27[19] = sub_100064978;
  v27[20] = v15;
  swift_unknownObjectRetain();
  swift_retain();
  sub_10000C788((uint64_t)v19, &qword_1000A7E28);
  v19[0] = a3;
  uint64_t v20 = a4;
  sub_100004BB0(&qword_1000A6100);
  sub_100084A50();
  char v16 = v28;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  *(void *)(v17 + 32) = a1;
  *(void *)(v17 + 40) = a2;
  *(unsigned char *)(v17 + 48) = a3;
  *(void *)(v17 + 56) = a4;
  sub_10000C724((uint64_t)v25, a7, &qword_1000A7E18);
  *(unsigned char *)(a7 + 192) = v16;
  *(void *)(a7 + 200) = sub_1000649CC;
  *(void *)(a7 + 208) = v17;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_10000C788((uint64_t)v25, &qword_1000A7E18);
}

uint64_t sub_100062E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v26[0] = a2;
  uint64_t v11 = *(void *)(a6 + 16);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a5, v11);
  uint64_t v14 = v13;
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 80);
  swift_unknownObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  swift_unknownObjectRelease();
  v26[0] = a2;
  v26[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(a5, v11);
  v26[1] = v19;
  char v27 = 1;
  uint64_t v28 = v16;
  uint64_t v29 = v18;
  uint64_t v30 = v12;
  uint64_t v31 = v14;
  sub_1000625C8(a1, a2, a3, a4, a5, a6, v25);
  uint64_t v20 = v25[0];
  sub_100064CBC((uint64_t)v26, (uint64_t)v25);
  sub_100064CBC((uint64_t)v25, a7);
  *(void *)(a7 + 80) = 0;
  *(unsigned char *)(a7 + 88) = 1;
  *(void *)(a7 + 96) = v20;
  swift_retain();
  sub_100064D18((uint64_t)v26);
  swift_release();
  return sub_100064D18((uint64_t)v25);
}

uint64_t sub_100062FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a8;
  v8[4] = v13;
  v8[2] = a5;
  sub_100084FC0();
  void v8[5] = sub_100084FB0();
  uint64_t v10 = sub_100084FA0();
  v8[6] = v10;
  v8[7] = v9;
  return _swift_task_switch(sub_100063098, v10, v9);
}

uint64_t sub_100063098()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[4] + 128) + **(int **)(v0[4] + 128));
  swift_unknownObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100009F6C;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  return v5(1, v2, v3);
}

uint64_t sub_10006318C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  sub_100084FC0();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v19 = sub_100084FB0();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = &protocol witness table for MainActor;
  *(void *)(v20 + 32) = a5;
  *(void *)(v20 + 40) = a6;
  *(void *)(v20 + 48) = a1;
  *(void *)(v20 + 56) = a2;
  *(unsigned char *)(v20 + 64) = a3;
  *(void *)(v20 + 72) = a4;
  sub_100015B60((uint64_t)v17, a8, v20);
  return swift_release();
}

uint64_t sub_1000632D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a8;
  v8[4] = v13;
  v8[2] = a5;
  sub_100084FC0();
  void v8[5] = sub_100084FB0();
  uint64_t v10 = sub_100084FA0();
  v8[6] = v10;
  v8[7] = v9;
  return _swift_task_switch(sub_10006337C, v10, v9);
}

uint64_t sub_10006337C()
{
  uint64_t v5 = (uint64_t (*)(void, uint64_t, uint64_t))(*(void *)(v0[4] + 128) + **(int **)(v0[4] + 128));
  swift_unknownObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100009F6C;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  return v5(0, v2, v3);
}

uint64_t sub_100063470(unsigned char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_100004BB0(&qword_1000A7070);
  uint64_t result = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    uint64_t v18 = sub_100084FF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    sub_100084FC0();
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v19 = sub_100084FB0();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v19;
    *(void *)(v20 + 24) = &protocol witness table for MainActor;
    *(void *)(v20 + 32) = a6;
    *(void *)(v20 + 40) = a7;
    *(void *)(v20 + 48) = a2;
    *(void *)(v20 + 56) = a3;
    *(unsigned char *)(v20 + 64) = a4 & 1;
    *(void *)(v20 + 72) = a5;
    sub_100015B60((uint64_t)v17, (uint64_t)&unk_1000A7E58, v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000635D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a8;
  v8[4] = v13;
  v8[2] = a5;
  sub_100084FC0();
  void v8[5] = sub_100084FB0();
  uint64_t v10 = sub_100084FA0();
  v8[6] = v10;
  v8[7] = v9;
  return _swift_task_switch(sub_100063674, v10, v9);
}

uint64_t sub_100063674()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[4] + 112) + **(int **)(v0[4] + 112));
  swift_unknownObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100063768;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  return v5(v3, v2);
}

uint64_t sub_100063768()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10000A668, v3, v2);
}

uint64_t sub_1000638AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v77 = a4;
  int v75 = a3;
  uint64_t v70 = a2;
  uint64_t v76 = a1;
  uint64_t v80 = a7;
  uint64_t v9 = sub_10000BD00(&qword_1000A7E00);
  swift_getAssociatedTypeWitness();
  sub_100084F60();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for BetaSettingsRowView();
  swift_getWitnessTable();
  v83[4] = swift_getAssociatedConformanceWitness();
  uint64_t v10 = sub_100084B70();
  unint64_t v11 = sub_100064750();
  v83[28] = swift_getWitnessTable();
  v83[0] = v9;
  uint64_t v64 = v10;
  v83[1] = v10;
  unint64_t v78 = v11;
  v83[2] = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  v83[3] = WitnessTable;
  uint64_t v12 = sub_100084540();
  uint64_t v65 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v63 = (char *)&WitnessTable - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v62 = (uint64_t *)((char *)&WitnessTable - v15);
  uint64_t v69 = sub_100084150();
  uint64_t v68 = *(void *)(v69 - 8);
  uint64_t v16 = __chkstk_darwin(v69);
  uint64_t v67 = (char *)&WitnessTable - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int v66 = (char *)&WitnessTable - v18;
  uint64_t v19 = sub_100084360();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&WitnessTable - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&WitnessTable - v24;
  uint64_t v71 = v12;
  uint64_t v79 = v9;
  uint64_t v74 = sub_100084790();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  id v72 = (char *)&WitnessTable - v26;
  uint64_t v27 = a6;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(a6 + 88);
  uint64_t v29 = v70;
  swift_unknownObjectRetain();
  v28(a5, a6);
  uint64_t v30 = v29;
  swift_unknownObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v23, enum case for BetaEnrollment.State.multiple(_:), v19);
  sub_100064F48((unint64_t *)&qword_1000A6158, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.State);
  sub_100084E50();
  sub_100084E50();
  uint64_t v31 = v83[0];
  uint64_t v32 = v83[27];
  uint64_t v33 = *(void (**)(char *, uint64_t))(v20 + 8);
  v33(v23, v19);
  v33(v25, v19);
  uint64_t v34 = a5;
  BOOL v35 = v31 == v32;
  uint64_t v36 = v30;
  uint64_t v37 = v27;
  if (!v35) {
    goto LABEL_4;
  }
  char v38 = *(void (**)(uint64_t, uint64_t))(v27 + 64);
  swift_unknownObjectRetain();
  uint64_t v39 = v66;
  v38(a5, v27);
  swift_unknownObjectRelease();
  uint64_t v40 = v68;
  uint64_t v41 = v67;
  uint64_t v42 = v69;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v67, enum case for BetaEnrollment.Availability.unavailable(_:), v69);
  sub_100064F48(&qword_1000A6160, (void (*)(uint64_t))&type metadata accessor for BetaEnrollment.Availability);
  char v43 = sub_100084CF0();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
  v44(v41, v42);
  v44(v39, v42);
  if ((v43 & 1) == 0)
  {
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v34;
    *(void *)(v48 + 24) = v37;
    *(void *)(v48 + 32) = v76;
    *(void *)(v48 + 40) = v36;
    *(unsigned char *)(v48 + 48) = v75 & 1;
    uint64_t v49 = v77;
    *(void *)(v48 + 56) = v77;
    uint64_t v50 = __chkstk_darwin(v49);
    *(&WitnessTable - 6) = v34;
    *(&WitnessTable - 5) = v37;
    *(&WitnessTable - 4) = v51;
    *(&WitnessTable - 3) = v36;
    *((unsigned char *)&WitnessTable - 16) = v52;
    *(&WitnessTable - 1) = v50;
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v53 = v63;
    unint64_t v47 = v78;
    sub_100084530();
    uint64_t v54 = v71;
    uint64_t v55 = swift_getWitnessTable();
    uint64_t v56 = v62;
    sub_100049C38(v62, v53, v54, v55);
    uint64_t v57 = *(void (**)(void *, uint64_t))(v65 + 8);
    v57(v53, v54);
    sub_100049C38(v53, v56, v54, v55);
    uint64_t v46 = v72;
    sub_100049C74((uint64_t)v53, v54);
    v57(v53, v54);
    v57(v56, v54);
  }
  else
  {
LABEL_4:
    sub_100062C78(v76, v36, v75 & 1, v77, v34, v37, (uint64_t)v83);
    uint64_t v45 = v71;
    swift_getWitnessTable();
    uint64_t v46 = v72;
    unint64_t v47 = v78;
    sub_100049F30((uint64_t)v83, v45, v79);
    sub_10000C788((uint64_t)v83, &qword_1000A7E00);
  }
  uint64_t v81 = swift_getWitnessTable();
  unint64_t v82 = v47;
  uint64_t v58 = v74;
  uint64_t v59 = swift_getWitnessTable();
  sub_100049C38(v80, v46, v58, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v46, v58);
}

uint64_t sub_100064238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v31 = a4;
  int v30 = a3;
  uint64_t v29 = a1;
  uint64_t v33 = a7;
  swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_100084F60();
  uint64_t v28 = *(void *)(swift_getAssociatedConformanceWitness() + 24);
  uint64_t v32 = v10;
  uint64_t v35 = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = type metadata accessor for BetaSettingsRowView();
  uint64_t v27 = AssociatedTypeWitness;
  uint64_t v37 = v26;
  uint64_t WitnessTable = swift_getWitnessTable();
  v25[1] = WitnessTable;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = sub_100084B70();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (void *)((char *)v25 - v16);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 72);
  swift_unknownObjectRetain();
  uint64_t v19 = v18(a5, a6);
  swift_unknownObjectRelease();
  if (!v19) {
    uint64_t v19 = sub_100084EF0();
  }
  uint64_t v35 = v19;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a5;
  *(void *)(v20 + 24) = a6;
  *(void *)(v20 + 32) = v29;
  *(void *)(v20 + 40) = a2;
  *(unsigned char *)(v20 + 48) = v30 & 1;
  *(void *)(v20 + 56) = v31;
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v21 = swift_getWitnessTable();
  sub_100084B60();
  uint64_t v34 = v21;
  uint64_t v22 = swift_getWitnessTable();
  sub_100049C38(v17, v15, v11, v22);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v15, v11);
  sub_100049C38(v33, v17, v11, v22);
  return ((uint64_t (*)(void *, uint64_t))v23)(v17, v11);
}

uint64_t sub_100064594@<X0>(void *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_unknownObjectRetain();
  uint64_t v8 = sub_1000624FC();
  uint64_t v9 = v2;
  char v10 = v3 & 1;
  uint64_t v11 = v4;
  uint64_t v5 = type metadata accessor for BetaSettingsRowView();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100049C38(v12, &v8, v5, WitnessTable);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v8 = v12[0];
  uint64_t v9 = v12[1];
  char v10 = v13;
  uint64_t v11 = v14;
  sub_100049C38(a1, &v8, v5, WitnessTable);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1000646E4@<X0>(uint64_t a1@<X8>)
{
  swift_unknownObjectRetain();
  uint64_t result = sub_1000624FC();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100064738@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1000638AC(*(void *)v2, *(void *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

unint64_t sub_100064750()
{
  unint64_t result = qword_1000A7E08;
  if (!qword_1000A7E08)
  {
    sub_10000BD00(&qword_1000A7E00);
    sub_1000647F0();
    sub_10000C360(&qword_1000A7E40, &qword_1000A7E48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7E08);
  }
  return result;
}

unint64_t sub_1000647F0()
{
  unint64_t result = qword_1000A7E10;
  if (!qword_1000A7E10)
  {
    sub_10000BD00(&qword_1000A7E18);
    sub_10006486C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7E10);
  }
  return result;
}

unint64_t sub_10006486C()
{
  unint64_t result = qword_1000A7E20;
  if (!qword_1000A7E20)
  {
    sub_10000BD00(&qword_1000A7E28);
    sub_10000C360(&qword_1000A7E30, &qword_1000A7E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7E20);
  }
  return result;
}

uint64_t sub_100064910@<X0>(void *a1@<X8>)
{
  return sub_100064238(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100064924@<X0>(uint64_t a1@<X8>)
{
  return sub_100062C78(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10006493C@<X0>(void *a1@<X8>)
{
  return sub_100064594(a1);
}

uint64_t sub_100064954()
{
  return sub_100064998((uint64_t)&unk_1000A11C8, (uint64_t)&unk_1000A7E78);
}

uint64_t sub_100064978()
{
  return sub_100064998((uint64_t)&unk_1000A11A0, (uint64_t)&unk_1000A7E68);
}

uint64_t sub_100064998(uint64_t a1, uint64_t a2)
{
  return sub_10006318C(*(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24), a1, a2);
}

uint64_t sub_1000649CC(unsigned char *a1)
{
  return sub_100063470(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000649E4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000052B8;
  return sub_1000635D0(a1, v5, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_100064AD8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100005D30;
  return sub_1000632D8(a1, v5, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_100064BCC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100005D30;
  return sub_100062FF4(a1, v5, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_100064CBC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100064D18(uint64_t a1)
{
  return a1;
}

uint64_t sub_100064D70()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 136);
  swift_unknownObjectRetain();
  v3(v1, v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_100064DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EnrollToggle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100064E40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EnrollToggle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100064E9C()
{
  unint64_t result = qword_1000A7E88;
  if (!qword_1000A7E88)
  {
    sub_10000BD00(&qword_1000A7E80);
    sub_100064F48(&qword_1000A7E90, (void (*)(uint64_t))type metadata accessor for EnrollToggle);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7E88);
  }
  return result;
}

uint64_t sub_100064F48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100064F90()
{
  return swift_getWitnessTable();
}

uint64_t sub_100065184()
{
  return sub_1000657E0(&qword_1000A7E98, &qword_1000A7EA0);
}

unint64_t sub_1000651AC(char a1)
{
  if (a1 >= 0) {
    char v1 = 17;
  }
  else {
    char v1 = 18;
  }
  if (a1 >= 0) {
    char v2 = 15;
  }
  else {
    char v2 = 16;
  }
  if (a1) {
    char v3 = v2;
  }
  else {
    char v3 = v1;
  }
  return sub_10000DBD8((uint64_t)&off_10009E438, v3);
}

void sub_1000651D8(void *a1@<X8>)
{
  *a1 = &off_10009E550;
}

char *sub_1000651E8@<X0>(char **a1@<X8>)
{
  uint64_t result = sub_100065210();
  *a1 = result;
  return result;
}

char *sub_100065210()
{
  uint64_t v0 = sub_10006C78C(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v2 = *((void *)v0 + 2);
  unint64_t v1 = *((void *)v0 + 3);
  int64_t v3 = v1 >> 1;
  unint64_t v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    uint64_t v0 = sub_10006C78C((char *)(v1 > 1), v2 + 1, 1, v0);
    unint64_t v1 = *((void *)v0 + 3);
    int64_t v3 = v1 >> 1;
  }
  *((void *)v0 + 2) = v4;
  v0[v2 + 32] = 0;
  unint64_t v5 = v2 + 2;
  if (v3 < (uint64_t)(v2 + 2))
  {
    uint64_t v0 = sub_10006C78C((char *)(v1 > 1), v2 + 2, 1, v0);
    unint64_t v1 = *((void *)v0 + 3);
    int64_t v3 = v1 >> 1;
  }
  *((void *)v0 + 2) = v5;
  v0[v4 + 32] = 0x80;
  unint64_t v6 = v2 + 3;
  if (v3 < (uint64_t)(v2 + 3))
  {
    uint64_t v0 = sub_10006C78C((char *)(v1 > 1), v2 + 3, 1, v0);
    unint64_t v1 = *((void *)v0 + 3);
    int64_t v3 = v1 >> 1;
  }
  *((void *)v0 + 2) = v6;
  v0[v5 + 32] = 1;
  if (v3 < (uint64_t)(v2 + 4)) {
    uint64_t v0 = sub_10006C78C((char *)(v1 > 1), v2 + 4, 1, v0);
  }
  *((void *)v0 + 2) = v2 + 4;
  v0[v6 + 32] = -127;
  return v0;
}

uint64_t sub_100065350(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000010008B6E0
    || (sub_100085580() & 1) != 0
    || a1 == 0xD000000000000011 && a2 == 0x800000010008B700
    || (sub_100085580() & 1) != 0
    || a1 == 0xD000000000000011 && a2 == 0x800000010008B720
    || (sub_100085580() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010008B740)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v5 = sub_100085580();
    swift_bridgeObjectRelease();
    if (v5) {
      return 0;
    }
    else {
      return 4294967294;
    }
  }
}

ValueMetadata *type metadata accessor for DeviceModel()
{
  return &type metadata for DeviceModel;
}

uint64_t getEnumTagSinglePayload for DeviceModel.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7F) {
    goto LABEL_17;
  }
  if (a2 + 129 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 129) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 129;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for DeviceModel.Configuration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 129 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 129) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7E)
  {
    unsigned int v6 = ((a2 - 127) >> 8) + 1;
    *uint64_t result = a2 - 127;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006564CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
        break;
    }
  }
  return result;
}

uint64_t sub_100065674(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_100065680(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_100065690(unsigned char *result, char a2)
{
  *uint64_t result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for DeviceModel.Configuration()
{
  return &type metadata for DeviceModel.Configuration;
}

unsigned char *storeEnumTagSinglePayload for DeviceModel.Size(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100065780);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceModel.Size()
{
  return &type metadata for DeviceModel.Size;
}

uint64_t sub_1000657B8()
{
  return sub_1000657E0(&qword_1000A7EA8, &qword_1000A7EB0);
}

uint64_t sub_1000657E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000BD00(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100065834()
{
  unint64_t result = qword_1000A7EB8;
  if (!qword_1000A7EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7EB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProfileRowView()
{
  return &type metadata for ProfileRowView;
}

uint64_t sub_100065898()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000658B4@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  int64x2_t v2 = v6;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  int64x2_t v3 = v6;
  uint64_t v7 = &type metadata for ProfileIcon;
  unint64_t v8 = sub_1000659FC();
  int64x2_t v6 = vdupq_n_s64(0x4045000000000000uLL);
  char v9 = 2;
  int64x2_t v10 = v3;
  int64x2_t v11 = v2;
  char v4 = sub_1000847F0();
  sub_100064CBC((uint64_t)&v6, a1);
  *(unsigned char *)(a1 + 80) = v4;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 1;
  return sub_100064D18((uint64_t)&v6);
}

uint64_t sub_1000659E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000658B4(a1);
}

unint64_t sub_1000659FC()
{
  unint64_t result = qword_1000A7EC0;
  if (!qword_1000A7EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7EC0);
  }
  return result;
}

unint64_t sub_100065A54()
{
  unint64_t result = qword_1000A7EC8;
  if (!qword_1000A7EC8)
  {
    sub_10000BD00(&qword_1000A7ED0);
    sub_10004CE50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7EC8);
  }
  return result;
}

uint64_t sub_100065AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  long long v4[2] = a1;
  v4[3] = a2;
  sub_100004BB0(&qword_1000A7070);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_100065B68, 0, 0);
}

uint64_t sub_100065B68()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = sub_100084FF0();
  long long v8 = *(_OWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 56) = v2;
  swift_unknownObjectRetain();
  sub_1000159AC(v1, (uint64_t)&unk_1000A81E0, v5);
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100065CA0(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t v3 = sub_100083F10();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v4 = sub_100083F00();
  v2[19] = v4;
  v2[20] = *(void *)(v4 - 8);
  v2[21] = swift_task_alloc();
  sub_100004BB0(&qword_1000A81B8);
  v2[22] = swift_task_alloc();
  uint64_t v5 = sub_100083D20();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  return _swift_task_switch(sub_100065E48, v1, 0);
}

uint64_t sub_100065E48()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  sub_100085340(25);
  swift_bridgeObjectRelease();
  v0[26] = sub_10002207C(0, (unint64_t *)&qword_1000A5E68);
  v20._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v20);
  swift_bridgeObjectRelease();
  sub_10001E540(0xD000000000000017, 0x800000010008B820);
  swift_bridgeObjectRelease();
  sub_100083D10();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000C788(v0[22], &qword_1000A81B8);
    sub_10000D054();
    swift_allocError();
    *uint64_t v4 = 0;
    swift_willThrow();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  uint64_t v5 = v0[15];
  (*(void (**)(void, void, void))(v0[24] + 32))(v0[25], v0[22], v0[23]);
  uint64_t v6 = *(void **)(v5 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_cachedACToken + 8);
  if (!v6)
  {
    uint64_t v14 = v0[24];
    uint64_t v13 = v0[25];
    uint64_t v15 = v0[23];
    sub_10000D054();
    swift_allocError();
    *uint64_t v16 = 5;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_cachedACToken);
  swift_bridgeObjectRetain();
  sub_10001E540(0xD00000000000001FLL, 0x800000010008B870);
  sub_100084090();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v0[27] = sub_100084080();
  sub_100004BB0(&qword_1000A81C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100086D90;
  *(void *)(inited + 32) = 0x65696B6F6F43;
  *(void *)(inited + 40) = 0xE600000000000000;
  v21._countAndFlagsBits = v7;
  v21._object = v6;
  sub_100084D60(v21);
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = 0x3D6B63616361;
  *(void *)(inited + 56) = 0xE600000000000000;
  unint64_t v9 = sub_100069A98(inited);
  v0[28] = v9;
  uint64_t v18 = (char *)&async function pointer to dispatch thunk of CarrySettings.LivabilityDataDownloader.getData(forURL:useACToken:additionalHeaders:)
      + async function pointer to dispatch thunk of CarrySettings.LivabilityDataDownloader.getData(forURL:useACToken:additionalHeaders:);
  int64x2_t v10 = (void *)swift_task_alloc();
  v0[29] = v10;
  *int64x2_t v10 = v0;
  v10[1] = sub_1000661E0;
  uint64_t v11 = v0[25];
  return ((uint64_t (*)(uint64_t, void, unint64_t))v18)(v11, 0, v9);
}

uint64_t sub_1000661E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[30] = a1;
  v4[31] = a2;
  v4[32] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = v4[15];
    uint64_t v6 = sub_10006677C;
  }
  else
  {
    uint64_t v7 = v4[15];
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_10006630C;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10006630C()
{
  uint64_t v1 = v0[15];
  sub_100085340(30);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v13);
  swift_bridgeObjectRelease();
  sub_10001E540(0xD00000000000001CLL, 0x800000010008B8C0);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_client);
  v0[33] = v2;
  if (v2)
  {
    (*(void (**)(void, void, void))(v0[17] + 104))(v0[18], enum case for CarrySettings.ProfileVariant.vpn(_:), v0[16]);
    swift_retain();
    sub_100083EF0();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[34] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100066524;
    uint64_t v5 = v0[30];
    uint64_t v4 = v0[31];
    uint64_t v6 = v0[21];
    uint64_t v7 = v0[14];
    return CarrySettings.NetworkingClient.installProfile(withData:withContext:on:)(v5, v4, v6, v7);
  }
  else
  {
    uint64_t v8 = v0[30];
    unint64_t v9 = v0[31];
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
    sub_100072558(v8, v9);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64x2_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100066524()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[21];
  uint64_t v4 = v2[20];
  uint64_t v5 = v2[19];
  uint64_t v6 = v2[15];
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  if (v0) {
    uint64_t v7 = sub_1000669B0;
  }
  else {
    uint64_t v7 = sub_1000666BC;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1000666BC()
{
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[23];
  sub_100072558(v0[30], v0[31]);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10006677C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[24];
  uint64_t v10 = v0[23];
  uint64_t v11 = v0[25];
  sub_100085340(34);
  v0[10] = 0;
  v0[11] = 0xE000000000000000;
  v13._object = (void *)0x800000010008B890;
  v13._countAndFlagsBits = 0xD000000000000020;
  sub_100084D60(v13);
  v0[12] = v1;
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  sub_100085440();
  v0[13] = type metadata accessor for CarrySettingsNetworkingSession();
  sub_100004BB0(&qword_1000A6650);
  sub_100084D20();
  id v3 = objc_allocWithZone((Class)CULogHandle);
  NSString v4 = sub_100084D00();
  NSString v5 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v6 = [v3 initWithSubsystem:v4 category:v5];

  NSString v7 = sub_100084D00();
  [v6 ulog:90 message:v7];

  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1000669B0()
{
  sub_100072558(v0[30], v0[31]);
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[24];
  uint64_t v10 = v0[23];
  uint64_t v11 = v0[25];
  sub_100085340(34);
  v0[10] = 0;
  v0[11] = 0xE000000000000000;
  v13._object = (void *)0x800000010008B890;
  v13._countAndFlagsBits = 0xD000000000000020;
  sub_100084D60(v13);
  v0[12] = v1;
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  sub_100085440();
  v0[13] = type metadata accessor for CarrySettingsNetworkingSession();
  sub_100004BB0(&qword_1000A6650);
  sub_100084D20();
  id v3 = objc_allocWithZone((Class)CULogHandle);
  NSString v4 = sub_100084D00();
  NSString v5 = sub_100084D00();
  swift_bridgeObjectRelease();
  id v6 = [v3 initWithSubsystem:v4 category:v5];

  NSString v7 = sub_100084D00();
  [v6 ulog:90 message:v7];

  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100066BE4(uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  sub_100004BB0(&qword_1000A7070);
  v3[21] = swift_task_alloc();
  sub_100004BB0(&qword_1000A64D0);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v4 = sub_1000840F0();
  v3[24] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[25] = v5;
  v3[26] = *(void *)(v5 + 64);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  return _swift_task_switch(sub_100066D30, v2, 0);
}

uint64_t sub_100066D30()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = (void *)(v0[20] + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_cachedACToken);
  *uint64_t v2 = v0[18];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100084090();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v0[29] = sub_100084080();
  sub_10001E540(0xD000000000000020, 0x800000010008B8E0);
  id v6 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CarrySettings.LivabilityDataDownloader.getAllSoftwareUpdateAudiences()
                                       + async function pointer to dispatch thunk of CarrySettings.LivabilityDataDownloader.getAllSoftwareUpdateAudiences());
  id v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  *id v3 = v0;
  v3[1] = sub_100066E60;
  uint64_t v4 = v0[28];
  return v6(v4);
}

uint64_t sub_100066E60()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v4 = sub_100067420;
  }
  else {
    uint64_t v4 = sub_100066F8C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100066F8C()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[23];
  uint64_t v6 = v0[20];
  sub_10001E540(0xD00000000000002ALL, 0x800000010008B940);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v33(v5, v1, v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v2);
  sub_1000329AC(v5, v4, &qword_1000A64D0);
  uint64_t v7 = v6 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_cachedAudiences;
  swift_beginAccess();
  sub_1000727B4(v4, v7, &qword_1000A64D0);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_100069F70(v8);
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v9 + 16);
  if (v32)
  {
    uint64_t v31 = v0[25];
    uint64_t v10 = sub_100084FF0();
    uint64_t v11 = *(void *)(v10 - 8);
    int v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v29 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    uint64_t v27 = (void (**)(uint64_t, uint64_t))(v11 + 8);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v28 = v9;
    while (1)
    {
      uint64_t v14 = v0[27];
      uint64_t v13 = v0[28];
      uint64_t v15 = v0[24];
      uint64_t v16 = v0[21];
      uint64_t v34 = v12;
      long long v35 = *(_OWORD *)(v9 + 16 * v12 + 32);
      v30(v16, 1, 1, v10);
      v33(v14, v13, v15);
      unint64_t v17 = (*(unsigned __int8 *)(v31 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = 0;
      uint64_t v19 = (void *)(v18 + 16);
      *(void *)(v18 + 24) = 0;
      *(_OWORD *)(v18 + 32) = v35;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v31 + 32))(v18 + v17, v14, v15);
      LODWORD(v14) = (*v29)(v16, 1, v10);
      swift_unknownObjectRetain_n();
      uint64_t v20 = v0[21];
      if (v14 == 1)
      {
        sub_10000C788(v0[21], &qword_1000A7070);
        if (!*v19) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_100084FE0();
        (*v27)(v20, v10);
        if (!*v19)
        {
LABEL_9:
          uint64_t v21 = 0;
          uint64_t v23 = 0;
          goto LABEL_10;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v21 = sub_100084FA0();
      uint64_t v23 = v22;
      swift_unknownObjectRelease();
LABEL_10:
      uint64_t v9 = v28;
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = &unk_1000A8290;
      *(void *)(v24 + 24) = v18;
      if (v23 | v21)
      {
        v0[2] = 0;
        v0[3] = 0;
        v0[4] = v21;
        v0[5] = v23;
      }
      ++v12;
      swift_task_create();
      swift_unknownObjectRelease();
      swift_release();
      if (v32 == v34 + 1)
      {
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_14;
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
LABEL_14:
  (*(void (**)(void, void))(v0[25] + 8))(v0[28], v0[24]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100067420()
{
  uint64_t v1 = v0[31];
  sub_100085340(42);
  v0[15] = 0;
  v0[16] = 0xE000000000000000;
  v13._object = (void *)0x800000010008B910;
  v13._countAndFlagsBits = 0xD000000000000028;
  sub_100084D60(v13);
  v0[17] = v1;
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  sub_100085440();
  sub_10001E540(v0[15], v0[16]);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_100069F70(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(v3 + 40);
    do
    {
      uint64_t v6 = v0[31];
      uint64_t v7 = *v5;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
      swift_unknownObjectRetain();
      v9(v6, ObjectType, v7);
      swift_unknownObjectRelease();
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10006763C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  long long v4[2] = a1;
  v4[3] = a2;
  sub_100004BB0(&qword_1000A7070);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_1000676D4, 0, 0);
}

uint64_t sub_1000676D4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = sub_100084FF0();
  long long v8 = *(_OWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 56) = v2;
  swift_unknownObjectRetain();
  sub_1000159AC(v1, (uint64_t)&unk_1000A8198, v5);
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10006780C(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v3[10] = *v2;
  uint64_t v4 = sub_100083EC0();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  return _swift_task_switch(sub_1000678F8, v2, 0);
}

uint64_t sub_1000678F8()
{
  sub_100085340(18);
  swift_bridgeObjectRelease();
  v0[14] = sub_100083D80();
  sub_10006BDF0(&qword_1000A6538, (void (*)(uint64_t))&type metadata accessor for UUID);
  v5._countAndFlagsBits = sub_100085530();
  sub_100084D60(v5);
  swift_bridgeObjectRelease();
  sub_10001E540(0xD000000000000010, 0x800000010008B970);
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100067A60;
  uint64_t v2 = v0[9];
  v1[5] = v2;
  return _swift_task_switch(sub_10006A248, v2, 0);
}

uint64_t sub_100067A60()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return _swift_task_switch(sub_100067B70, v1, 0);
}

uint64_t sub_100067B70()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[7];
  uint64_t v8 = *(int *)(sub_100004BB0(&qword_1000A82D0) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1, v7, v2);
  *(void *)(v1 + v8) = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for CarrySettings.MessageChannel.Role.noDaemonClient(_:), v3);
  id v9 = objc_allocWithZone((Class)sub_100083EE0());
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_100083ED0();
  v0[16] = v10;
  v0[17] = sub_100004BB0(&qword_1000A8240);
  v0[5] = v10;
  id v11 = v10;
  uint64_t v12 = sub_100083F60();
  v0[18] = v12;
  *(void *)(v6 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_client) = v12;
  swift_retain();
  swift_release();
  sub_10001E540(0xD00000000000001CLL, 0x800000010008B990);
  Swift::String v13 = (void *)swift_task_alloc();
  v0[19] = v13;
  *Swift::String v13 = v0;
  v13[1] = sub_100067D2C;
  return CarrySettings.NetworkingClient.prewarm()();
}

uint64_t sub_100067D2C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = sub_10006807C;
    uint64_t v5 = 0;
  }
  else
  {
    sub_10000C360(&qword_1000A8248, &qword_1000A8240);
    uint64_t v6 = sub_100084FA0();
    uint64_t v8 = v7;
    uint64_t v4 = sub_100067E8C;
    uint64_t v3 = v6;
    uint64_t v5 = v8;
  }
  return _swift_task_switch(v4, v3, v5);
}

uint64_t sub_100067E8C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 168) = sub_100083F50();
  return _swift_task_switch(sub_100067EFC, v1, 0);
}

uint64_t sub_100067EFC()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  v0[6] = v0[21];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  swift_retain();
  sub_100004BB0(&qword_1000A82D8);
  sub_10000C360(&qword_1000A82E0, &qword_1000A82D8);
  sub_100084440();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_100084380();
  swift_endAccess();
  swift_release();
  swift_release();

  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10006807C()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000680F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  long long v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_100083F10();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_100083F00();
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_100068214, v3, 0);
}

uint64_t sub_100068214()
{
  if (*(void *)(v0[5] + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_cachedACToken + 8))
  {
    sub_100084090();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v0[12] = sub_100084080();
    uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CarrySettings.LivabilityDataDownloader.getProfileData(forAudience:)
                                         + async function pointer to dispatch thunk of CarrySettings.LivabilityDataDownloader.getProfileData(forAudience:));
    uint64_t v1 = (void *)swift_task_alloc();
    v0[13] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100068390;
    uint64_t v2 = v0[2];
    return v6(v2);
  }
  else
  {
    sub_10000D054();
    swift_allocError();
    *uint64_t v4 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_100068390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[14] = a1;
  v5[15] = a2;
  v5[16] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[5];
  if (v2) {
    uint64_t v7 = sub_10006888C;
  }
  else {
    uint64_t v7 = sub_1000684C8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1000684C8()
{
  uint64_t v1 = v0[5];
  sub_10001E540(0xD00000000000001BLL, 0x800000010008B800);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_client);
  v0[17] = v2;
  if (v2)
  {
    (*(void (**)(void, void, void))(v0[7] + 16))(v0[8], v0[3], v0[6]);
    swift_retain();
    sub_100083FB0();
    sub_100083EF0();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[18] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100068654;
    uint64_t v5 = v0[14];
    uint64_t v4 = v0[15];
    uint64_t v6 = v0[11];
    uint64_t v7 = v0[4];
    return CarrySettings.NetworkingClient.installProfile(withData:withContext:on:)(v5, v4, v6, v7);
  }
  else
  {
    sub_100072558(v0[14], v0[15]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100068654()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(*v1 + 72);
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  uint64_t v6 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v7 = sub_100068904;
  }
  else {
    uint64_t v7 = sub_100068800;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100068800()
{
  sub_100072558(v0[14], v0[15]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10006888C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100068904()
{
  sub_100072558(v0[14], v0[15]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100068988(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = sub_100084140();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_100004BB0(&qword_1000A67A0);
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v5 = sub_100004BB0(&qword_1000A8168);
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  sub_100084FC0();
  v2[19] = sub_100084FB0();
  uint64_t v7 = sub_100084FA0();
  v2[20] = v7;
  v2[21] = v6;
  return _swift_task_switch(sub_100068B4C, v7, v6);
}

uint64_t sub_100068B4C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  int64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 176) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v33 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 80);
    sub_10006CB10(0, v2, 0);
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v31 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v32 = *(void *)(v4 + 72);
    uint64_t v34 = v3;
    uint64_t v30 = v0;
    do
    {
      uint64_t v7 = *(void *)(v0 + 112);
      uint64_t v8 = *(void *)(v0 + 88);
      uint64_t v9 = *(void *)(v0 + 72);
      sub_10000C724(v6, v7, &qword_1000A67A0);
      (*v31)(v8, v7, v9);
      uint64_t v10 = *(void **)(v7 + *(int *)(v33 + 36));
      *(void *)(v0 + 32) = v10;
      sub_10002207C(0, (unint64_t *)&qword_1000A5E68);
      sub_10006A978();
      id v11 = v10;
      sub_100083F80();
      sub_10000C788(v7, &qword_1000A67A0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10006CB10(0, *((void *)&_swiftEmptyArrayStorage + 2) + 1, 1);
      }
      unint64_t v13 = *((void *)&_swiftEmptyArrayStorage + 2);
      unint64_t v12 = *((void *)&_swiftEmptyArrayStorage + 3);
      uint64_t v0 = v30;
      if (v13 >= v12 >> 1) {
        sub_10006CB10(v12 > 1, v13 + 1, 1);
      }
      uint64_t v14 = *(void *)(v30 + 144);
      uint64_t v15 = *(void *)(v30 + 120);
      *((void *)&_swiftEmptyArrayStorage + 2) = v13 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))((char *)&_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v13, v14, v15);
      v6 += v32;
      --v2;
    }
    while (v2);
  }
  *(void *)(v0 + 184) = &_swiftEmptyArrayStorage;
  uint64_t v16 = *((void *)&_swiftEmptyArrayStorage + 2);
  *(void *)(v0 + 192) = v16;
  if (v16)
  {
    uint64_t v17 = *(void *)(v0 + 128);
    uint64_t v18 = *(void *)(v0 + 64);
    uint64_t v19 = type metadata accessor for CarrySettingsNetworkingSession();
    uint64_t v20 = OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_client;
    *(void *)(v0 + 200) = v19;
    *(void *)(v0 + 208) = v20;
    uint64_t v21 = *(void (**)(void, char *, void))(v17 + 16);
    v17 += 16;
    int v22 = *(_DWORD *)(v17 + 64);
    *(_DWORD *)(v0 + 312) = v22;
    *(void *)(v0 + 216) = *(void *)(v17 + 56);
    *(void *)(v0 + 224) = v21;
    *(void *)(v0 + 232) = 0;
    *(void *)(v0 + 240) = 0;
    v21(*(void *)(v0 + 136), (char *)&_swiftEmptyArrayStorage + ((v22 + 32) & ~(unint64_t)v22), *(void *)(v0 + 120));
    *(void *)(v0 + 16) = 0x676E697461647055;
    *(void *)(v0 + 24) = 0xE900000000000020;
    sub_10000C360(&qword_1000A8170, &qword_1000A8168);
    v36._countAndFlagsBits = sub_100085530();
    sub_100084D60(v36);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 40) = v19;
    sub_100004BB0(&qword_1000A6650);
    sub_100084D20();
    id v23 = objc_allocWithZone((Class)CULogHandle);
    NSString v24 = sub_100084D00();
    NSString v25 = sub_100084D00();
    swift_bridgeObjectRelease();
    id v26 = [v23 initWithSubsystem:v24 category:v25];

    NSString v27 = sub_100084D00();
    [v26 ulog:40 message:v27];

    swift_bridgeObjectRelease();
    uint64_t v28 = sub_100068F68;
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 64);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 272) = 0;
    *(void *)(v0 + 280) = v18;
    uint64_t v28 = sub_10006966C;
  }
  return _swift_task_switch(v28, v18, 0);
}

uint64_t sub_100068F68()
{
  v0[31] = *(void *)(v0[8] + v0[26]);
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  swift_retain();
  return _swift_task_switch(sub_100068FEC, v1, v2);
}

uint64_t sub_100068FEC()
{
  if (*(void *)(v0 + 248))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1000692C8;
    uint64_t v2 = *(void *)(v0 + 136);
    return CarrySettings.NetworkingClient.updateModel(for:)(v2);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v5 = *(void *)(v0 + 240) + 1;
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
    if (v5 == v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(v0 + 64);
      *(void *)(v0 + 272) = v3;
      *(void *)(v0 + 280) = v6;
      uint64_t v7 = sub_10006966C;
    }
    else
    {
      uint64_t v8 = *(void *)(v0 + 240) + 1;
      *(void *)(v0 + 232) = v3;
      *(void *)(v0 + 240) = v8;
      uint64_t v9 = *(void *)(v0 + 200);
      uint64_t v10 = *(void *)(v0 + 64);
      (*(void (**)(void, unint64_t, void))(v0 + 224))(*(void *)(v0 + 136), *(void *)(v0 + 184)+ ((*(unsigned __int8 *)(v0 + 312) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 312))+ *(void *)(v0 + 216) * v8, *(void *)(v0 + 120));
      *(void *)(v0 + 16) = 0x676E697461647055;
      *(void *)(v0 + 24) = 0xE900000000000020;
      sub_10000C360(&qword_1000A8170, &qword_1000A8168);
      v18._countAndFlagsBits = sub_100085530();
      sub_100084D60(v18);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 40) = v9;
      sub_100004BB0(&qword_1000A6650);
      sub_100084D20();
      id v11 = objc_allocWithZone((Class)CULogHandle);
      NSString v12 = sub_100084D00();
      NSString v13 = sub_100084D00();
      swift_bridgeObjectRelease();
      id v14 = [v11 initWithSubsystem:v12 category:v13];

      NSString v15 = sub_100084D00();
      [v14 ulog:40 message:v15];

      swift_bridgeObjectRelease();
      uint64_t v7 = sub_100068F68;
      uint64_t v6 = v10;
    }
    return _swift_task_switch(v7, v6, 0);
  }
}

uint64_t sub_1000692C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_1000699E0;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_100069410;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100069410()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 240) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
  if (v3 == v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v0 + 64);
    *(void *)(v0 + 272) = v1;
    *(void *)(v0 + 280) = v4;
    uint64_t v5 = sub_10006966C;
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 240) + 1;
    *(void *)(v0 + 232) = v1;
    *(void *)(v0 + 240) = v6;
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v8 = *(void *)(v0 + 64);
    (*(void (**)(void, unint64_t, void))(v0 + 224))(*(void *)(v0 + 136), *(void *)(v0 + 184)+ ((*(unsigned __int8 *)(v0 + 312) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 312))+ *(void *)(v0 + 216) * v6, *(void *)(v0 + 120));
    *(void *)(v0 + 16) = 0x676E697461647055;
    *(void *)(v0 + 24) = 0xE900000000000020;
    sub_10000C360(&qword_1000A8170, &qword_1000A8168);
    v16._countAndFlagsBits = sub_100085530();
    sub_100084D60(v16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 40) = v7;
    sub_100004BB0(&qword_1000A6650);
    sub_100084D20();
    id v9 = objc_allocWithZone((Class)CULogHandle);
    NSString v10 = sub_100084D00();
    NSString v11 = sub_100084D00();
    swift_bridgeObjectRelease();
    id v12 = [v9 initWithSubsystem:v10 category:v11];

    NSString v13 = sub_100084D00();
    [v12 ulog:40 message:v13];

    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100068F68;
    uint64_t v4 = v8;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10006966C()
{
  v0[36] = *(void *)(v0[8] + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_devices);
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1000696F4, v1, v2);
}

uint64_t sub_1000696F4()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = sub_100071EF8(v0[36]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v17 = v2;
    uint64_t v4 = v0[12];
    uint64_t v3 = v0[13];
    uint64_t v5 = v0[7];
    sub_1000853E0();
    uint64_t v6 = 0;
    uint64_t v7 = v5 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v8 = *(void *)(v3 + 72);
    do
    {
      uint64_t v9 = v0[22];
      uint64_t v10 = v0[14];
      ++v6;
      sub_10000C724(v7, v10, &qword_1000A67A0);
      id v11 = *(id *)(v10 + *(int *)(v4 + 36));
      sub_10000C788(v10, &qword_1000A67A0);
      sub_1000853B0();
      sub_1000853F0();
      sub_100085400();
      sub_1000853C0();
      v7 += v8;
    }
    while (v6 != v9);
    uint64_t v2 = v17;
  }
  size_t v12 = v0[7];
  sub_100072184((uint64_t)v2, (uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10006C9B4(v12);
  v0[37] = v14;
  uint64_t v15 = v0[35];
  return _swift_task_switch(sub_100069898, v15, 0);
}

uint64_t sub_100069898()
{
  v0[38] = *(void *)(v0[8] + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_devicesChangedSubject);
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  swift_retain();
  return _swift_task_switch(sub_100069920, v1, v2);
}

uint64_t sub_100069920()
{
  uint64_t v1 = v0[37];
  swift_release();
  v0[6] = v1;
  sub_1000843B0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1000699E0()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

unint64_t sub_100069A98(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BB0(&qword_1000A81C8);
  uint64_t v2 = (void *)sub_1000854E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10006BE38(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v11 = (uint64_t *)(v2[6] + 16 * result);
    *id v11 = v5;
    v11[1] = v6;
    size_t v12 = (void *)(v2[7] + 16 * result);
    *size_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    _OWORD v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100069BBC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BB0(&qword_1000A8300);
  uint64_t v2 = sub_1000854E0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000C724(v6, (uint64_t)&v15, &qword_1000A8308);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10006BE38(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v11 = (uint64_t *)(v3[6] + 16 * result);
    *id v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100032278(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100069CF4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_10000C788(a1, &qword_1000A6CC0);
    sub_10006D470(a2, (uint64_t)v7);
    sub_100032594(a2);
    return sub_10000C788((uint64_t)v7, &qword_1000A6CC0);
  }
  else
  {
    sub_1000329AC(a1, (uint64_t)v7, &qword_1000A6CB0);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1000705E4((uint64_t)v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;
    swift_bridgeObjectRelease();
    return sub_100032594(a2);
  }
}

uint64_t sub_100069DBC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100004BB0(&qword_1000A70D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BB0(&qword_1000A6CD0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_10000C788(a1, &qword_1000A70D8);
    sub_10006D55C((uint64_t)a2, (uint64_t)v8);

    return sub_10000C788((uint64_t)v8, &qword_1000A70D8);
  }
  else
  {
    sub_1000329AC(a1, (uint64_t)v11, &qword_1000A6CD0);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100070708((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v16;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100069F70(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v4) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    int64_t v10 = v6 + 1;
    if (!__OFADD__(v6, 1))
    {
      if (v10 < v22)
      {
        unint64_t v11 = *(void *)(v21 + 8 * v10);
        ++v6;
        if (v11) {
          goto LABEL_23;
        }
        int64_t v6 = v10 + 1;
        if (v10 + 1 >= v22) {
          goto LABEL_38;
        }
        unint64_t v11 = *(void *)(v21 + 8 * v6);
        if (v11) {
          goto LABEL_23;
        }
        int64_t v6 = v10 + 2;
        if (v10 + 2 >= v22) {
          goto LABEL_38;
        }
        unint64_t v11 = *(void *)(v21 + 8 * v6);
        if (v11) {
          goto LABEL_23;
        }
        int64_t v6 = v10 + 3;
        if (v10 + 3 >= v22) {
          goto LABEL_38;
        }
        unint64_t v11 = *(void *)(v21 + 8 * v6);
        if (v11)
        {
LABEL_23:
          unint64_t v4 = (v11 - 1) & v11;
          for (unint64_t i = __clz(__rbit64(v11)) + (v6 << 6); ; unint64_t i = v8 | (v6 << 6))
          {
            sub_10000C724(*(void *)(a1 + 56) + 8 * i, (uint64_t)v24, &qword_1000A6CB0);
            sub_1000329AC((uint64_t)v24, (uint64_t)v23, &qword_1000A6CB0);
            uint64_t Strong = swift_unknownObjectWeakLoadStrong();
            if (!Strong) {
              goto LABEL_6;
            }
            uint64_t v14 = Strong;
            swift_getObjectType();
            uint64_t v15 = swift_conformsToProtocol2();
            uint64_t v16 = v15 ? v15 : 0;
            uint64_t v17 = v15 ? v14 : 0;
            if (!v17) {
              break;
            }
            sub_10000C788((uint64_t)v23, &qword_1000A6CB0);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_10006C88C(0, v7[2] + 1, 1, v7, &qword_1000A8298, &qword_1000A82A0);
              uint64_t v7 = (void *)result;
            }
            unint64_t v19 = v7[2];
            unint64_t v18 = v7[3];
            if (v19 >= v18 >> 1)
            {
              uint64_t result = (uint64_t)sub_10006C88C((void *)(v18 > 1), v19 + 1, 1, v7, &qword_1000A8298, &qword_1000A82A0);
              uint64_t v7 = (void *)result;
            }
            v7[2] = v19 + 1;
            uint64_t v20 = &v7[2 * v19];
            v20[4] = v17;
            v20[5] = v16;
            if (!v4) {
              goto LABEL_8;
            }
LABEL_7:
            unint64_t v8 = __clz(__rbit64(v4));
            v4 &= v4 - 1;
          }
          swift_unknownObjectRelease();
LABEL_6:
          uint64_t result = sub_10000C788((uint64_t)v23, &qword_1000A6CB0);
          if (!v4) {
            continue;
          }
          goto LABEL_7;
        }
        int64_t v12 = v10 + 4;
        if (v12 < v22)
        {
          unint64_t v11 = *(void *)(v21 + 8 * v12);
          if (v11)
          {
            int64_t v6 = v12;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v6 = v12 + 1;
            if (__OFADD__(v12, 1)) {
              goto LABEL_40;
            }
            if (v6 >= v22) {
              break;
            }
            unint64_t v11 = *(void *)(v21 + 8 * v6);
            ++v12;
            if (v11) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_38:
      swift_release();
      return (uint64_t)v7;
    }
    break;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10006A228()
{
  *(void *)(v1 + 40) = v0;
  return _swift_task_switch(sub_10006A248, v0, 0);
}

uint64_t sub_10006A248()
{
  uint64_t v1 = v0[5];
  sub_10001E540(0x6164696C61766E69, 0xEC00000029286574);
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_tasks);
  swift_beginAccess();
  *uint64_t v2 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t v3 = OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_channel;
  v0[6] = OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_channel;
  unint64_t v4 = *(void **)(v1 + v3);
  v0[7] = v4;
  if (v4)
  {
    v4;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[8] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10006A450;
    return CarrySettings.MessageChannel.invalidate()();
  }
  else
  {
    uint64_t v6 = v0[5];
    *(void *)(v6 + v3) = 0;
    uint64_t v7 = OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_client;
    v0[9] = OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_client;
    uint64_t v8 = *(void *)(v6 + v7);
    v0[10] = v8;
    if (v8)
    {
      swift_retain();
      sub_100004BB0(&qword_1000A8240);
      sub_10000C360(&qword_1000A8248, &qword_1000A8240);
      uint64_t v10 = sub_100084FA0();
      return _swift_task_switch(sub_10006A698, v10, v9);
    }
    else
    {
      *(void *)(v0[5] + v7) = 0;
      unint64_t v11 = (uint64_t (*)(void))v0[1];
      return v11();
    }
  }
}

uint64_t sub_10006A450()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 56);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();

  return _swift_task_switch(sub_10006A578, v2, 0);
}

uint64_t sub_10006A578()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = *(void **)(v2 + v1);
  *(void *)(v2 + v1) = 0;

  uint64_t v4 = OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_client;
  v0[9] = OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_client;
  uint64_t v5 = *(void *)(v2 + v4);
  v0[10] = v5;
  if (v5)
  {
    swift_retain();
    sub_100004BB0(&qword_1000A8240);
    sub_10000C360(&qword_1000A8248, &qword_1000A8240);
    uint64_t v7 = sub_100084FA0();
    return _swift_task_switch(sub_10006A698, v7, v6);
  }
  else
  {
    *(void *)(v0[5] + v4) = 0;
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_10006A698()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_100083F20();
  swift_release();
  return _swift_task_switch(sub_10006A70C, v1, 0);
}

uint64_t sub_10006A70C()
{
  *(void *)(v0[5] + v0[9]) = 0;
  swift_release();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10006A778()
{
  sub_10000C788(v0 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_cachedAudiences, &qword_1000A64D0);
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_10006A824()
{
  sub_10006A778();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10006A850()
{
  return type metadata accessor for CarrySettingsNetworkingSession();
}

uint64_t type metadata accessor for CarrySettingsNetworkingSession()
{
  uint64_t result = qword_1000A7F10;
  if (!qword_1000A7F10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006A8A4()
{
  sub_100014C1C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_10006A978()
{
  unint64_t result = qword_1000A5E60;
  if (!qword_1000A5E60)
  {
    sub_10002207C(255, (unint64_t *)&qword_1000A5E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A5E60);
  }
  return result;
}

uint64_t sub_10006A9E0()
{
  uint64_t v1 = v0;
  swift_defaultActor_initialize();
  uint64_t v2 = v0 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_cachedAudiences;
  uint64_t v3 = sub_1000840F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_cachedACToken);
  *uint64_t v4 = 0;
  v4[1] = 0;
  *(void *)(v1 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_channel) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_client) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_delegates) = &_swiftEmptyDictionarySingleton;
  *(void *)(v1 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_devices) = _swiftEmptyArrayStorage;
  uint64_t v5 = OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_devicesChangedSubject;
  sub_100004BB0(&qword_1000A6760);
  swift_allocObject();
  *(void *)(v1 + v5) = sub_1000843C0();
  *(void *)(v1 + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_tasks) = &_swiftEmptySetSingleton;
  return v1;
}

uint64_t sub_10006AAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  return _swift_task_switch(sub_10006AB18, 0, 0);
}

uint64_t sub_10006AB18()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10005DBE4;
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 56);
    return sub_10006AC1C(v5, v3, v4);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_10006AC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a2;
  v4[12] = v3;
  v4[10] = a1;
  v4[13] = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[14] = AssociatedTypeWitness;
  v4[15] = *(void *)(AssociatedTypeWitness - 8);
  v4[16] = swift_task_alloc();
  return _swift_task_switch(sub_10006AD00, v3, 0);
}

uint64_t sub_10006AD00()
{
  uint64_t v10 = v0;
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v8 = 0;
  uint64_t v9 = 0xE000000000000000;
  sub_100085340(18);
  v12._object = (void *)0x800000010008AEB0;
  v12._countAndFlagsBits = 0xD000000000000010;
  sub_100084D60(v12);
  *(void *)(v0 + 56) = v4;
  sub_100085550();
  sub_10001E540(v8, v9);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = v4;
  sub_100085350();
  swift_getAssociatedConformanceWitness();
  sub_100085500();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_unknownObjectWeakAssign();
  sub_1000329AC(v5, v0 + 40, &qword_1000A6CB0);
  *(unsigned char *)(v0 + 48) = 0;
  swift_beginAccess();
  sub_100069CF4(v0 + 40, (uint64_t)&v8);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10006AEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();
  Swift::String v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 32) + **(int **)(a5 + 32));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_100005D30;
  return v12(a6, ObjectType, a5);
}

uint64_t sub_10006AFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  return _swift_task_switch(sub_10006B004, 0, 0);
}

uint64_t sub_10006B004()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10005F024;
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 56);
    return sub_10006B108(v5, v3, v4);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_10006B108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[15] = a2;
  v4[16] = v3;
  v4[14] = a1;
  v4[17] = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[18] = AssociatedTypeWitness;
  v4[19] = *(void *)(AssociatedTypeWitness - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_10006B1EC, v3, 0);
}

uint64_t sub_10006B1EC()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[14];
  sub_100085340(20);
  v8._object = (void *)0x800000010008AE70;
  v8._countAndFlagsBits = 0xD000000000000012;
  sub_100084D60(v8);
  v0[12] = v4;
  sub_100085550();
  sub_10001E540(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  v0[13] = v4;
  sub_100085350();
  swift_getAssociatedConformanceWitness();
  sub_100085500();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  sub_10006D470((uint64_t)(v0 + 2), (uint64_t)(v0 + 10));
  sub_100032594((uint64_t)(v0 + 2));
  sub_10000C788((uint64_t)(v0 + 10), &qword_1000A6CC0);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10006B3A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100004BB0(&qword_1000A7070);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = sub_100084FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  sub_100084FC0();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v11 = sub_100084FB0();
  Swift::String v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v8;
  _OWORD v12[5] = v10;
  void v12[6] = a3;
  swift_release();
  sub_100015B60((uint64_t)v7, (uint64_t)&unk_1000A82F0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_10006B50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  sub_100084FC0();
  v6[12] = sub_100084FB0();
  uint64_t v8 = sub_100084FA0();
  v6[13] = v8;
  v6[14] = v7;
  return _swift_task_switch(sub_10006B5A8, v8, v7);
}

uint64_t sub_10006B5A8()
{
  uint64_t v1 = v0[11];
  v0[15] = sub_100071EF8(v0[9]);
  sub_100085340(23);
  swift_bridgeObjectRelease();
  sub_100004BB0(&qword_1000A67A0);
  v9._countAndFlagsBits = sub_100084E90();
  sub_100084D60(v9);
  swift_bridgeObjectRelease();
  sub_100058E34(0xD000000000000015, 0x800000010008B9B0, v1, (uint64_t)&off_1000A1370);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[16] = Strong;
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = sub_10006B76C;
LABEL_5:
    return _swift_task_switch(v4, v3, 0);
  }
  swift_beginAccess();
  uint64_t v5 = swift_weakLoadStrong();
  v0[17] = v5;
  if (v5)
  {
    uint64_t v3 = v5;
    uint64_t v4 = sub_10006B8C4;
    goto LABEL_5;
  }
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10006B76C()
{
  *(void *)(v0[16] + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_devices) = v0[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  return _swift_task_switch(sub_10006B7F4, v1, v2);
}

uint64_t sub_10006B7F4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 136) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_10006B8C4, Strong, 0);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_10006B8C4()
{
  v0[18] = *(void *)(v0[17] + OBJC_IVAR____TtC16HPSUIViewService30CarrySettingsNetworkingSession_devicesChangedSubject);
  swift_retain();
  swift_release();
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  return _swift_task_switch(sub_10006B940, v1, v2);
}

uint64_t sub_10006B940()
{
  uint64_t v1 = v0[15];
  swift_release();
  v0[8] = v1;
  sub_1000843B0();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10006B9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100005D30;
  return sub_100065AD0(a1, a2, a3);
}

uint64_t sub_10006BA70()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10006BA90, v0, 0);
}

uint64_t sub_10006BA90()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100071EF8(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_10006BB18(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000052B8;
  return sub_100065CA0(a1);
}

uint64_t sub_10006BBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100005D30;
  return sub_10006763C(a1, a2, a3);
}

uint64_t sub_10006BC58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100005D30;
  return sub_1000680F4(a1, a2, a3);
}

uint64_t sub_10006BD04(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005D30;
  return sub_100068988(a1);
}

uint64_t sub_10006BD98(uint64_t a1)
{
  uint64_t result = sub_10006BDF0(&qword_1000A8158, (void (*)(uint64_t))type metadata accessor for CarrySettingsNetworkingSession);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10006BDF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006BE38(uint64_t a1, uint64_t a2)
{
  sub_100085630();
  sub_100084D50();
  Swift::Int v4 = sub_100085650();
  return sub_10006C02C(a1, a2, v4);
}

unint64_t sub_10006BEB0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000851C0(*(void *)(v2 + 40));
  return sub_10006C398(a1, v4, (unint64_t *)&qword_1000A5E68);
}

unint64_t sub_10006BF00(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000852E0(*(void *)(v2 + 40));
  return sub_10006C110(a1, v4);
}

unint64_t sub_10006BF44(uint64_t a1)
{
  sub_100083D80();
  sub_10006BDF0(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = sub_100084CD0();
  return sub_10006C1D8(a1, v2);
}

unint64_t sub_10006BFDC(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000851C0(*(void *)(v2 + 40));
  return sub_10006C398(a1, v4, &qword_1000A8268);
}

unint64_t sub_10006C02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_100085580() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_100085580() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10006C110(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000726A0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1000852F0();
      sub_100032594((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10006C1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_100083D80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_10006BDF0(&qword_1000A6C00, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v15 = sub_100084CF0();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_10006C398(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_10002207C(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1000851D0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1000851D0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

char *sub_10006C4AC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BB0(&qword_1000A6CF8);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_10006C5B0(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004BB0(&qword_1000A67F8);
  uint64_t v10 = *(void *)(sub_100004BB0(&qword_1000A67A0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_100004BB0(&qword_1000A67A0) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

char *sub_10006C78C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BB0(&qword_1000A8228);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_10006C878(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10006C88C(a1, a2, a3, a4, &qword_1000A8200, &qword_1000A8208);
}

void *sub_10006C88C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_100004BB0(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[2 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 16 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    sub_100004BB0(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

size_t sub_10006C9B4(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_10006C5B0(result, v11, 1, v3);
  uint64_t v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = sub_100004BB0(&qword_1000A67A0);
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

size_t sub_10006CAE0(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_10006D29C(a1, a2, a3, (void *)*v3, &qword_1000A67F8, &qword_1000A67A0);
  *uint64_t v3 = result;
  return result;
}

size_t sub_10006CB10(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_10006D29C(a1, a2, a3, (void *)*v3, &qword_1000A8178, &qword_1000A8168);
  *uint64_t v3 = result;
  return result;
}

char *sub_10006CB40(char *a1, int64_t a2, char a3)
{
  size_t result = sub_10006CCA4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_10006CB60(char *a1, int64_t a2, char a3)
{
  size_t result = sub_10006CDA8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_10006CB80(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_10006D0C0(a1, a2, a3, (void *)*v3, &qword_1000A82A8, (uint64_t (*)(void))type metadata accessor for ProfileListViewModel);
  *uint64_t v3 = result;
  return result;
}

void *sub_10006CBBC(void *a1, int64_t a2, char a3)
{
  size_t result = sub_10006CE94(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_10006CBDC(char *a1, int64_t a2, char a3)
{
  size_t result = sub_10006CFB8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_10006CBFC(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_10006D0C0(a1, a2, a3, (void *)*v3, &qword_1000A8230, (uint64_t (*)(void))&type metadata accessor for CarrySettings.LivabilityTrainAudiences);
  *uint64_t v3 = result;
  return result;
}

size_t sub_10006CC38(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_10006D0C0(a1, a2, a3, (void *)*v3, &qword_1000A8238, (uint64_t (*)(void))&type metadata accessor for CarrySettings.LivabilityAudience);
  *uint64_t v3 = result;
  return result;
}

size_t sub_10006CC74(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_10006D29C(a1, a2, a3, (void *)*v3, &qword_1000A6CD8, &qword_1000A6CD0);
  *uint64_t v3 = result;
  return result;
}

char *sub_10006CCA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BB0(&qword_1000A6CF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10006CDA8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BB0(&qword_1000A8228);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

void *sub_10006CE94(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BB0(&qword_1000A82B0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_100004BB0(&qword_1000A82B8);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10006CFB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BB0(&qword_1000A81F8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_10006D0C0(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004BB0(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  _OWORD v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v16;
}

size_t sub_10006D29C(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004BB0(a5);
  uint64_t v13 = *(void *)(sub_100004BB0(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  _OWORD v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(sub_100004BB0(a6) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v16;
}

uint64_t sub_10006D470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10006BF00(a1);
  char v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v3;
    uint64_t v12 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000710E4();
      uint64_t v11 = v12;
    }
    sub_100032594(*(void *)(v11 + 48) + 40 * v6);
    sub_1000329AC(*(void *)(v11 + 56) + 8 * v6, a2, &qword_1000A6CB0);
    sub_10006F764(v6, v11);
    *uint64_t v3 = v11;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a2 = 0;
  }
  *(unsigned char *)(a2 + 8) = (v8 & 1) == 0;
  return result;
}

uint64_t sub_10006D55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10006BEB0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100071820();
      uint64_t v9 = v19;
    }

    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = sub_100004BB0(&qword_1000A6CD0);
    uint64_t v18 = *(void *)(v11 - 8);
    sub_1000329AC(v10 + *(void *)(v18 + 72) * v6, a2, &qword_1000A6CD0);
    sub_10006FEB4(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = sub_100004BB0(&qword_1000A6CD0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_10006D6F8(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_10006BEB0(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      Swift::Int v9 = *v2;
      Swift::Int v17 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_100071D58(&qword_1000A8250);
        Swift::Int v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = sub_100085470();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_100085460();
  Swift::Int v9 = sub_10006D9F8(v5, v8, &qword_1000A8250, (unint64_t *)&qword_1000A5E68);
  swift_retain();
  a1 = sub_10006BEB0((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_1000702C0(a1, v9);
  *uint64_t v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_10006D868(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_10006BEB0(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      Swift::Int v9 = *v2;
      Swift::Int v17 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_100071D58(&qword_1000A8258);
        Swift::Int v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = sub_100085470();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_100085460();
  Swift::Int v9 = sub_10006DC54(v5, v8);
  swift_retain();
  a1 = sub_10006BEB0((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_1000702C0(a1, v9);
  *uint64_t v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

Swift::Int sub_10006D9C0(uint64_t a1, uint64_t a2)
{
  return sub_10006D9F8(a1, a2, &qword_1000A8270, &qword_1000A8268);
}

Swift::Int sub_10006D9DC(uint64_t a1, uint64_t a2)
{
  return sub_10006D9F8(a1, a2, &qword_1000A8250, (unint64_t *)&qword_1000A5E68);
}

Swift::Int sub_10006D9F8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_100004BB0(a3);
    uint64_t v6 = sub_1000854D0();
    uint64_t v22 = v6;
    sub_100085450();
    uint64_t v7 = sub_100085480();
    if (v7)
    {
      uint64_t v8 = v7;
      sub_10002207C(0, a4);
      do
      {
        swift_dynamicCast();
        sub_10002207C(0, &qword_1000A7CF0);
        swift_dynamicCast();
        uint64_t v6 = v22;
        unint64_t v16 = *(void *)(v22 + 16);
        if (*(void *)(v22 + 24) <= v16)
        {
          sub_10006F494(v16 + 1, 1, a3);
          uint64_t v6 = v22;
        }
        Swift::Int result = sub_1000851C0(*(void *)(v6 + 40));
        uint64_t v10 = v6 + 64;
        uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v6 + 64 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v6 + 64 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v17 = 0;
          unint64_t v18 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v19 = v13 == v18;
            if (v13 == v18) {
              unint64_t v13 = 0;
            }
            v17 |= v19;
            uint64_t v20 = *(void *)(v10 + 8 * v13);
          }
          while (v20 == -1);
          unint64_t v14 = __clz(__rbit64(~v20)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        uint64_t v15 = 8 * v14;
        *(void *)(*(void *)(v6 + 48) + v15) = v21;
        *(void *)(*(void *)(v6 + 56) + v15) = v8;
        ++*(void *)(v6 + 16);
        uint64_t v8 = sub_100085480();
      }
      while (v8);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v6;
}

Swift::Int sub_10006DC54(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100004BB0(&qword_1000A8258);
    uint64_t v2 = sub_1000854D0();
    uint64_t v18 = v2;
    sub_100085450();
    uint64_t v3 = sub_100085480();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10002207C(0, (unint64_t *)&qword_1000A5E68);
      do
      {
        swift_dynamicCast();
        sub_10002207C(0, &qword_1000A8260);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_10006F494(v12 + 1, 1, &qword_1000A8258);
          uint64_t v2 = v18;
        }
        Swift::Int result = sub_1000851C0(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_100085480();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v2;
}

uint64_t sub_10006DEB0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004BB0(&qword_1000A82F8);
  char v38 = a2;
  uint64_t v6 = sub_1000854C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_100085630();
    sub_100084D50();
    uint64_t result = sub_100085650();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10006E1C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004BB0(&qword_1000A81A8);
  uint64_t v6 = sub_1000854C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v36) {
      break;
    }
    int64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v37 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v36)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v36) {
              goto LABEL_34;
            }
            unint64_t v22 = *(void *)(v37 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_21:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v5 + 48) + 40 * v19;
    if (a2)
    {
      long long v25 = *(_OWORD *)v24;
      long long v26 = *(_OWORD *)(v24 + 16);
      uint64_t v41 = *(void *)(v24 + 32);
      long long v39 = v25;
      long long v40 = v26;
      sub_1000329AC(*(void *)(v5 + 56) + 8 * v19, (uint64_t)v38, &qword_1000A6CB0);
    }
    else
    {
      sub_1000726A0(v24, (uint64_t)&v39);
      sub_10000C724(*(void *)(v5 + 56) + 8 * v19, (uint64_t)v38, &qword_1000A6CB0);
    }
    uint64_t result = sub_1000852E0(*(void *)(v7 + 40));
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
    long long v16 = v39;
    long long v17 = v40;
    *(void *)(v15 + 32) = v41;
    *(_OWORD *)uint64_t v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    uint64_t result = sub_1000329AC((uint64_t)v38, *(void *)(v7 + 56) + 8 * v14, &qword_1000A6CB0);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v21 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v21, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v21 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10006E4F8(uint64_t a1, int a2)
{
  return sub_10006E520(a1, a2, &qword_1000A6C98, &qword_1000A81F0);
}

uint64_t sub_10006E50C(uint64_t a1, int a2)
{
  return sub_10006E520(a1, a2, &qword_1000A6CE0, &qword_1000A8220);
}

uint64_t sub_10006E520(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v57 = a3;
  uint64_t v8 = sub_100004BB0(a3);
  uint64_t v51 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100083D80();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v53 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v4;
  sub_100004BB0(a4);
  int v52 = a2;
  uint64_t v14 = v13;
  uint64_t v15 = sub_1000854C0();
  uint64_t v16 = v15;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v17 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v18 = *(void *)(v13 + 64);
  uint64_t v48 = (void *)(v13 + 64);
  if (v17 < 64) {
    uint64_t v19 = ~(-1 << v17);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v18;
  uint64_t v46 = v4;
  int64_t v47 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v49 = (void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v54 = (void (**)(char *, unint64_t, uint64_t))(v11 + 32);
  uint64_t v55 = v10;
  uint64_t v21 = v15 + 64;
  uint64_t result = swift_retain();
  int64_t v23 = 0;
  uint64_t v50 = v14;
  uint64_t v24 = v53;
  while (1)
  {
    if (v20)
    {
      unint64_t v26 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v27 = v26 | (v23 << 6);
      goto LABEL_22;
    }
    int64_t v28 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v47) {
      break;
    }
    unint64_t v29 = v48;
    unint64_t v30 = v48[v28];
    ++v23;
    if (!v30)
    {
      int64_t v23 = v28 + 1;
      if (v28 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v30 = v48[v23];
      if (!v30)
      {
        int64_t v31 = v28 + 2;
        if (v31 >= v47)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v46;
          if ((v52 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v30 = v48[v31];
        if (!v30)
        {
          while (1)
          {
            int64_t v23 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_43;
            }
            if (v23 >= v47) {
              goto LABEL_34;
            }
            unint64_t v30 = v48[v23];
            ++v31;
            if (v30) {
              goto LABEL_21;
            }
          }
        }
        int64_t v23 = v31;
      }
    }
LABEL_21:
    unint64_t v20 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v23 << 6);
    uint64_t v24 = v53;
LABEL_22:
    uint64_t v32 = v11;
    uint64_t v33 = *(void *)(v11 + 72);
    unint64_t v34 = *(void *)(v14 + 48) + v33 * v27;
    if (v52)
    {
      (*v54)(v24, v34, v55);
      uint64_t v35 = *(void *)(v14 + 56);
      uint64_t v36 = *(void *)(v51 + 72);
      sub_1000329AC(v35 + v36 * v27, v56, v57);
    }
    else
    {
      (*v49)(v24, v34, v55);
      uint64_t v37 = *(void *)(v14 + 56);
      uint64_t v36 = *(void *)(v51 + 72);
      sub_10000C724(v37 + v36 * v27, v56, v57);
    }
    sub_10006BDF0(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_100084CD0();
    uint64_t v38 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v39 = result & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v21 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v39) & ~*(void *)(v21 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v24 = v53;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      uint64_t v24 = v53;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v21 + 8 * v40);
      }
      while (v44 == -1);
      unint64_t v25 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(void *)(v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    (*v54)((char *)(*(void *)(v16 + 48) + v33 * v25), (unint64_t)v24, v55);
    uint64_t result = sub_1000329AC(v56, *(void *)(v16 + 56) + v36 * v25, v57);
    ++*(void *)(v16 + 16);
    uint64_t v14 = v50;
    uint64_t v11 = v32;
  }
  swift_release();
  uint64_t v6 = v46;
  unint64_t v29 = v48;
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v45 = 1 << *(unsigned char *)(v14 + 32);
  if (v45 >= 64) {
    bzero(v29, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v29 = -1 << v45;
  }
  *(void *)(v14 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v16;
  return result;
}

uint64_t sub_10006EA00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004BB0(&qword_1000A82C0);
  char v36 = a2;
  uint64_t v6 = sub_1000854C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_100085630();
    sub_100084D50();
    uint64_t result = sub_100085650();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10006ED18(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_100004BB0(&qword_1000A6CD0);
  uint64_t v41 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100004BB0(&qword_1000A8210);
  int v42 = a2;
  uint64_t v9 = sub_1000854C0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v38 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  unint64_t v40 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39) {
      break;
    }
    unint64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v23 = v40[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v39) {
              goto LABEL_34;
            }
            unint64_t v23 = v40[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    char v25 = *(void **)(*(void *)(v8 + 48) + 8 * v20);
    uint64_t v26 = *(void *)(v41 + 72);
    uint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
    if (v42)
    {
      sub_1000329AC(v27, (uint64_t)v7, &qword_1000A6CD0);
    }
    else
    {
      sub_10000C724(v27, (uint64_t)v7, &qword_1000A6CD0);
      id v28 = v25;
    }
    uint64_t result = sub_1000851C0(*(void *)(v10 + 40));
    uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v15 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v10 + 48) + 8 * v18) = v25;
    uint64_t result = sub_1000329AC((uint64_t)v7, *(void *)(v10 + 56) + v26 * v18, &qword_1000A6CD0);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v22 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_10006F0AC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_100083EA0();
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_100004BB0(&qword_1000A8218);
  int v47 = a2;
  uint64_t v8 = sub_1000854C0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  unint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    id v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_100085630();
    sub_100084D50();
    uint64_t result = sub_100085650();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *unint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_10006F494(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_100004BB0(a3);
  uint64_t v7 = sub_1000854C0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  unint64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    unint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = sub_1000851C0(*(void *)(v8 + 40));
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  unint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

unint64_t sub_10006F764(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_100085220();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1000726A0(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v25);
        Swift::Int v9 = sub_1000852E0(*(void *)(a2 + 40));
        uint64_t result = sub_100032594((uint64_t)v25);
        Swift::Int v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8 || v3 < v10) {
            goto LABEL_6;
          }
        }
        else if (v10 < v8 && v3 < v10)
        {
          goto LABEL_6;
        }
        uint64_t v13 = *(void *)(a2 + 48);
        unint64_t v14 = v13 + 40 * v3;
        int64_t v15 = (long long *)(v13 + 40 * v6);
        if (v3 != v6 || v14 >= (unint64_t)v15 + 40)
        {
          long long v16 = *v15;
          long long v17 = v15[1];
          *(void *)(v14 + 32) = *((void *)v15 + 4);
          *(_OWORD *)unint64_t v14 = v16;
          *(_OWORD *)(v14 + 16) = v17;
        }
        if (v3 < (uint64_t)v6 || *(void *)(a2 + 56) + 8 * v3 >= *(void *)(a2 + 56) + 8 * v6 + 8)
        {
          sub_100004BB0(&qword_1000A6CB0);
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          BOOL v18 = v3 == v6;
          int64_t v3 = v6;
          if (v18) {
            goto LABEL_6;
          }
          sub_100004BB0(&qword_1000A6CB0);
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10006F978(int64_t a1, uint64_t a2)
{
  return sub_10006F990(a1, a2, &qword_1000A6C98);
}

unint64_t sub_10006F984(int64_t a1, uint64_t a2)
{
  return sub_10006F990(a1, a2, &qword_1000A6CE0);
}

unint64_t sub_10006F990(int64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v37 = a3;
  uint64_t v5 = sub_100083D80();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t result = __chkstk_darwin(v5);
  Swift::Int v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = sub_100085220();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      int64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v14 = v6 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      uint64_t v39 = v15;
      uint64_t v36 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v5);
        sub_10006BDF0(&qword_1000A6540, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v20 = sub_100084CD0();
        unint64_t result = (*v38)(v9, v5);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(sub_100004BB0(v37) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v36;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v36;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10006FCDC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_100085220();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_100085630();
        swift_bridgeObjectRetain();
        sub_100084D50();
        Swift::Int v9 = sub_100085650();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          int64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *int64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10006FEB4(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_100085220();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = sub_1000851C0(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 < v9 || v3 < v13) {
            goto LABEL_6;
          }
        }
        else if (v13 < v9 && v3 < v13)
        {
          goto LABEL_6;
        }
        uint64_t v16 = *(void *)(a2 + 48);
        uint64_t v17 = (void *)(v16 + 8 * v3);
        uint64_t v18 = (void *)(v16 + 8 * v6);
        if (v3 != v6 || v17 >= v18 + 1) {
          *uint64_t v17 = *v18;
        }
        uint64_t v19 = *(void *)(a2 + 56);
        uint64_t v20 = *(void *)(*(void *)(sub_100004BB0(&qword_1000A6CD0) - 8) + 72);
        int64_t v21 = v20 * v3;
        unint64_t v22 = v19 + v20 * v3;
        int64_t v23 = v20 * v6;
        unint64_t v24 = v19 + v20 * v6 + v20;
        if (v21 < v23 || v22 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v21 == v23) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v26 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v26 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *int64_t v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1000700B0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_100085220();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_100085630();
        swift_bridgeObjectRetain();
        sub_100084D50();
        Swift::Int v9 = sub_100085650();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        Swift::Int v12 = (_OWORD *)(v11 + 16 * v3);
        Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *Swift::Int v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_100083EA0() - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1000702C0(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_100085220();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = sub_1000851C0(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            int64_t v17 = (void *)(v16 + 8 * v3);
            unint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *int64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (void *)(v19 + 8 * v3);
            uint64_t v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *uint64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_100070474(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10006BE38(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100070F30();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10006DEB0(v15, a4 & 1);
  unint64_t v20 = sub_10006BE38(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1000855C0();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_1000705E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_10006BF00(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14) {
      return sub_1000727B4(a1, v16[7] + 8 * v10, &qword_1000A6CB0);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1000710E4();
    goto LABEL_7;
  }
  sub_10006E1C0(v13, a3 & 1);
  unint64_t v18 = sub_10006BF00(a2);
  if ((v14 & 1) != (v19 & 1))
  {
LABEL_14:
    uint64_t result = sub_1000855C0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v18;
  char v16 = *v4;
  if (v14) {
    return sub_1000727B4(a1, v16[7] + 8 * v10, &qword_1000A6CB0);
  }
LABEL_11:
  sub_1000726A0(a2, (uint64_t)v20);
  return sub_100070C20(v10, (uint64_t)v20, a1, v16);
}

id sub_100070708(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_10006BEB0((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      uint64_t v17 = sub_100004BB0(&qword_1000A6CD0);
      return (id)sub_1000727B4(a1, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v9, &qword_1000A6CD0);
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100071820();
    goto LABEL_7;
  }
  sub_10006ED18(v12, a3 & 1);
  unint64_t v19 = sub_10006BEB0((uint64_t)a2);
  if ((v13 & 1) != (v20 & 1))
  {
LABEL_15:
    sub_10002207C(0, (unint64_t *)&qword_1000A5E68);
    id result = (id)sub_1000855C0();
    __break(1u);
    return result;
  }
  unint64_t v9 = v19;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100070DD8(v9, (uint64_t)a2, a1, v15);
  return a2;
}

uint64_t sub_10007086C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10006BE38(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100071A94();
      goto LABEL_7;
    }
    sub_10006F0AC(v15, a4 & 1);
    unint64_t v26 = sub_10006BE38(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1000855C0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = sub_100083EA0();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_100070E80(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_1000709EC(uint64_t a1, void *a2, char a3)
{
}

void sub_100070A1C(uint64_t a1, void *a2, char a3)
{
}

void sub_100070A4C(uint64_t a1, void *a2, char a3, uint64_t (*a4)(void *), uint64_t *a5, unint64_t *a6)
{
  uint64_t v10 = v6;
  uint64_t v13 = *v6;
  unint64_t v15 = a4(a2);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v19 = v14;
  uint64_t v20 = *(void *)(v13 + 24);
  if (v20 >= v18 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_100071D58(a5);
LABEL_7:
    uint64_t v21 = (void *)*v10;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];

      *(void *)(v22 + 8 * v15) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10006F494(v18, a3 & 1, a5);
  uint64_t v23 = a4(a2);
  if ((v19 & 1) != (v24 & 1))
  {
LABEL_17:
    sub_10002207C(0, a6);
    sub_1000855C0();
    __break(1u);
    return;
  }
  unint64_t v15 = v23;
  uint64_t v21 = (void *)*v10;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  v21[(v15 >> 6) + 8] |= 1 << v15;
  uint64_t v25 = 8 * v15;
  *(void *)(v21[6] + v25) = a2;
  *(void *)(v21[7] + v25) = a1;
  uint64_t v26 = v21[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v21[2] = v28;
  id v29 = a2;
}

void sub_100070BF0(uint64_t a1, void *a2, char a3)
{
}

uint64_t sub_100070C20(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1000329AC(a3, a4[7] + 8 * a1, &qword_1000A6CB0);
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_100070CA8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_100083D80();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_100004BB0(&qword_1000A6CE0);
  uint64_t result = sub_1000329AC(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, &qword_1000A6CE0);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

unint64_t sub_100070D90(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_100070DD8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_100004BB0(&qword_1000A6CD0);
  uint64_t result = sub_1000329AC(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, &qword_1000A6CD0);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_100070E80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_100083EA0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

id sub_100070F30()
{
  uint64_t v1 = v0;
  sub_100004BB0(&qword_1000A82F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000854B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    BOOL v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000710E4()
{
  uint64_t v1 = v0;
  sub_100004BB0(&qword_1000A81A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000854B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1000726A0(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 8 * v15;
    sub_10000C724(*(void *)(v2 + 56) + v17, (uint64_t)&v24, &qword_1000A6CB0);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = (void *)sub_1000329AC((uint64_t)&v24, *(void *)(v4 + 56) + v17, &qword_1000A6CB0);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000712DC()
{
  return sub_100071304(&qword_1000A6C98, &qword_1000A81F0);
}

void *sub_1000712F0()
{
  return sub_100071304(&qword_1000A6CE0, &qword_1000A8220);
}

void *sub_100071304(uint64_t *a1, uint64_t *a2)
{
  int64_t v43 = a1;
  uint64_t v4 = sub_100004BB0(a1);
  uint64_t v42 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v41 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100083D80();
  uint64_t v6 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004BB0(a2);
  BOOL v34 = v2;
  uint64_t v8 = *v2;
  uint64_t v9 = sub_1000854B0();
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v45 = v9;
  if (!v10)
  {
    id result = (void *)swift_release();
    uint64_t v33 = v45;
    uint64_t v32 = v34;
LABEL_25:
    *uint64_t v32 = v33;
    return result;
  }
  uint64_t v11 = v9;
  id result = (void *)(v9 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    uint64_t v11 = v45;
  }
  uint64_t v35 = v8 + 64;
  int64_t v14 = 0;
  *(void *)(v11 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v44 = v8;
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  uint64_t v38 = v6 + 16;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v37 = v6 + 32;
  long long v19 = v39;
  uint64_t v18 = v40;
  uint64_t v20 = (uint64_t)v41;
  for (i = v45; ; id result = (void *)sub_1000329AC(v20, *(void *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v14 << 6);
      uint64_t v24 = v44;
      goto LABEL_9;
    }
    int64_t v29 = v14 + 1;
    uint64_t v24 = v44;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36) {
      goto LABEL_23;
    }
    unint64_t v30 = *(void *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      int64_t v14 = v29 + 1;
      if (v29 + 1 >= v36) {
        goto LABEL_23;
      }
      unint64_t v30 = *(void *)(v35 + 8 * v14);
      if (!v30) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v30 - 1) & v30;
    unint64_t v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    unint64_t v25 = *(void *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(void *)(v24 + 48) + v25, v18);
    uint64_t v26 = *(void *)(v24 + 56);
    BOOL v27 = v43;
    unint64_t v28 = *(void *)(v42 + 72) * v23;
    sub_10000C724(v26 + v28, v20, v43);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(i + 48) + v25, v19, v18);
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v32 = v34;
    uint64_t v33 = v45;
    goto LABEL_25;
  }
  unint64_t v30 = *(void *)(v35 + 8 * v31);
  if (v30)
  {
    int64_t v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v14 >= v36) {
      goto LABEL_23;
    }
    unint64_t v30 = *(void *)(v35 + 8 * v14);
    ++v31;
    if (v30) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100071668()
{
  uint64_t v1 = v0;
  sub_100004BB0(&qword_1000A82C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000854B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100071820()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BB0(&qword_1000A6CD0);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004BB0(&qword_1000A8210);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1000854B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v24 = v1;
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v26 + 72) * v16;
    sub_10000C724(*(void *)(v5 + 56) + v19, (uint64_t)v4, &qword_1000A6CD0);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    sub_1000329AC((uint64_t)v4, *(void *)(v7 + 56) + v19, &qword_1000A6CD0);
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100071A94()
{
  uint64_t v35 = sub_100083EA0();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004BB0(&qword_1000A8218);
  unint64_t v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1000854B0();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v36;
    BOOL v27 = v30;
LABEL_25:
    *BOOL v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    uint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    *uint64_t v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    BOOL v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_100071D58(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100004BB0(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1000854B0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100071EF8(uint64_t a1)
{
  uint64_t v2 = sub_100004BB0(&qword_1000A8168);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BB0(&qword_1000A67A0);
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  int64_t v10 = &_swiftEmptyArrayStorage;
  if (v9)
  {
    unint64_t v25 = &_swiftEmptyArrayStorage;
    sub_10006CAE0(0, v9, 0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v19 = *(void *)(v11 + 56);
    id v20 = v12;
    int64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    int64_t v10 = v25;
    uint64_t v21 = v11;
    do
    {
      v20(v5, v13, v2);
      sub_100083F90();
      sub_100083FA0();
      *(void *)&v8[*(int *)(v23 + 36)] = v24;
      (*v14)(v5, v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10006CAE0(0, v10[2] + 1, 1);
        int64_t v10 = v25;
      }
      unint64_t v16 = v10[2];
      unint64_t v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        sub_10006CAE0(v15 > 1, v16 + 1, 1);
        int64_t v10 = v25;
      }
      v10[2] = v16 + 1;
      sub_1000329AC((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v16, &qword_1000A67A0);
      v13 += v19;
      --v9;
    }
    while (v9);
  }
  return v10;
}

void sub_100072184(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100004BB0(&qword_1000A67A0);
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (uint64_t)v32 - v10;
  int64_t v43 = &_swiftEmptyArrayStorage;
  uint64_t v41 = *(void *)(a1 + 16);
  if (!v41) {
    return;
  }
  uint64_t v11 = 0;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v34 = v5;
  uint64_t v35 = (v12 + 32) & ~v12;
  uint64_t v42 = *(void *)(v9 + 72);
  uint64_t v13 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v38 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v13 = a2;
  }
  v32[0] = v13;
  v32[1] = v2;
  unint64_t v36 = a2 & 0xC000000000000001;
  unint64_t v39 = (unint64_t)a2 >> 62;
  uint64_t v40 = a1 + v35;
  uint64_t v33 = v8;
  uint64_t v14 = v37;
  while (1)
  {
    sub_10000C724(v40 + v42 * v11, v14, &qword_1000A67A0);
    unint64_t v15 = *(void **)(v14 + *(int *)(v5 + 36));
    if (v39) {
      break;
    }
    uint64_t v16 = *(void *)(v38 + 16);
    id v17 = v15;
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_10;
    }
LABEL_29:

    swift_bridgeObjectRelease();
LABEL_30:
    sub_1000329AC(v14, (uint64_t)v8, &qword_1000A67A0);
    uint64_t v29 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10006CAE0(0, v29[2] + 1, 1);
      uint64_t v14 = v37;
      uint64_t v29 = v43;
    }
    unint64_t v31 = v29[2];
    unint64_t v30 = v29[3];
    if (v31 >= v30 >> 1)
    {
      sub_10006CAE0(v30 > 1, v31 + 1, 1);
      uint64_t v14 = v37;
      uint64_t v29 = v43;
    }
    v29[2] = v31 + 1;
    sub_1000329AC((uint64_t)v8, (uint64_t)v29 + v35 + v31 * v42, &qword_1000A67A0);
LABEL_7:
    if (++v11 == v41) {
      return;
    }
  }
  id v28 = v15;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1000854A0();
  if (!v16) {
    goto LABEL_29;
  }
LABEL_10:
  if (v36) {
    id v18 = (id)sub_100085380();
  }
  else {
    id v18 = *(id *)(a2 + 32);
  }
  uint64_t v19 = v18;
  sub_10002207C(0, (unint64_t *)&qword_1000A5E68);
  char v20 = sub_1000851D0();

  if (v20)
  {

    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v14 = v37;
    sub_10000C788(v37, &qword_1000A67A0);
    goto LABEL_7;
  }
  if (v16 == 1)
  {

    swift_bridgeObjectRelease();
LABEL_26:
    uint64_t v14 = v37;
    goto LABEL_30;
  }
  if (v36)
  {
    uint64_t v21 = 1;
    while (1)
    {
      sub_100085380();
      uint64_t v22 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        break;
      }
      char v23 = sub_1000851D0();
      swift_unknownObjectRelease();
      if (v23) {
        goto LABEL_27;
      }
      ++v21;
      if (v22 == v16) {
        goto LABEL_25;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v24 = 5;
    while (1)
    {
      uint64_t v25 = v24 - 3;
      if (__OFADD__(v24 - 4, 1)) {
        break;
      }
      id v26 = *(id *)(a2 + 8 * v24);
      char v27 = sub_1000851D0();

      if (v27)
      {
LABEL_27:

        swift_bridgeObjectRelease();
        unint64_t v8 = v33;
        uint64_t v5 = v34;
        goto LABEL_6;
      }
      ++v24;
      if (v25 == v16)
      {
LABEL_25:

        swift_bridgeObjectRelease();
        unint64_t v8 = v33;
        uint64_t v5 = v34;
        goto LABEL_26;
      }
    }
  }
  __break(1u);
}

uint64_t sub_100072558(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1000725B0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1000725EC(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 48);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100005D30;
  *(_OWORD *)(v4 + 48) = v5;
  *(_OWORD *)(v4 + 64) = v6;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_10006B004, 0, 0);
}

uint64_t sub_1000726A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100072700(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 48);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1000052B8;
  *(_OWORD *)(v4 + 48) = v5;
  *(_OWORD *)(v4 + 64) = v6;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_10006AB18, 0, 0);
}

uint64_t sub_1000727B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004BB0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100072818()
{
  uint64_t v1 = sub_1000840F0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1000728EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000840F0() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100005D30;
  return sub_10006AEC8(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1000729EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100072A24(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000052B8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000A8288 + dword_1000A8288);
  return v6(a1, v4);
}

uint64_t sub_100072ADC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100072B14(uint64_t *a1)
{
  return sub_10006B3A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100072B1C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100072B64(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100005D30;
  return sub_10006B50C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100072C2C()
{
  uint64_t v1 = v0;
  unint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_100085340(28);
  swift_bridgeObjectRelease();
  sub_10001EC70();
  NSString v2 = sub_100084D00();
  id v3 = [v1 cuValueForEntitlementNoCache:v2];

  if (v3)
  {
    sub_100085210();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_100072F0C((uint64_t)v14, (uint64_t)&v15);
  if (!v17)
  {
    sub_100072F74((uint64_t)&v15);
    goto LABEL_14;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    unint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_100085340(36);
    swift_bridgeObjectRelease();
    unint64_t v15 = sub_100072FD4();
    sub_100004BB0(&qword_1000A6820);
    sub_100084D20();
    id v7 = objc_allocWithZone((Class)CULogHandle);
    NSString v8 = sub_100084D00();
    NSString v9 = sub_100084D00();
    swift_bridgeObjectRelease();
    id v10 = [v7 initWithSubsystem:v8 category:v9];

    NSString v11 = sub_100084D00();
    [v10 ulog:90 message:v11];

    return 0;
  }
  uint64_t v4 = v13;
  unint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_100085340(31);
  swift_bridgeObjectRelease();
  unint64_t v15 = 0x2720646E756F46;
  unint64_t v16 = 0xE700000000000000;
  if (v13) {
    v5._countAndFlagsBits = 1702195828;
  }
  else {
    v5._countAndFlagsBits = 0x65736C6166;
  }
  if (v13) {
    uint64_t v6 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v6 = (void *)0xE500000000000000;
  }
  v5._object = v6;
  sub_100084D60(v5);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0xD000000000000013;
  v18._object = (void *)0x800000010008BA80;
  sub_100084D60(v18);
  v19._object = (void *)0x8000000100089E00;
  v19._countAndFlagsBits = 0xD00000000000002ELL;
  sub_100084D60(v19);
  v20._countAndFlagsBits = 39;
  v20._object = (void *)0xE100000000000000;
  sub_100084D60(v20);
  sub_10001EC70();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100072F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A8310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100072F74(uint64_t a1)
{
  uint64_t v2 = sub_100004BB0(&qword_1000A8310);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100072FD4()
{
  unint64_t result = qword_1000A6818;
  if (!qword_1000A6818)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A6818);
  }
  return result;
}

uint64_t type metadata accessor for NetworkManagerMock()
{
  return self;
}

uint64_t sub_100073038(uint64_t a1)
{
  uint64_t v3 = sub_100083D80();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004BB0(&qword_1000A6C98);
  uint64_t v7 = __chkstk_darwin(v38);
  uint64_t v41 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  NSString v11 = (char *)&v33 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v34 = v1;
    uint64_t v35 = v4;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v39 = (void (**)(char *, char *, uint64_t))(v4 + 16);
    unint64_t v36 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v33 = a1;
    swift_bridgeObjectRetain();
    unint64_t v15 = &_swiftEmptyDictionarySingleton;
    uint64_t v37 = v11;
    while (1)
    {
      uint64_t v40 = v12;
      sub_10000C724(v13, (uint64_t)v11, &qword_1000A6C98);
      uint64_t v17 = *v39;
      uint64_t v18 = v3;
      (*v39)(v6, &v11[*(int *)(v38 + 44)], v3);
      sub_10000C724((uint64_t)v11, v41, &qword_1000A6C98);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = v15;
      uint64_t v20 = (uint64_t)v6;
      unint64_t v22 = sub_10006BF44((uint64_t)v6);
      uint64_t v23 = v15[2];
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24)) {
        break;
      }
      char v26 = v21;
      if (v15[3] >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1000712DC();
        }
      }
      else
      {
        sub_10006E4F8(v25, isUniquelyReferenced_nonNull_native);
        unint64_t v27 = sub_10006BF44(v20);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_19;
        }
        unint64_t v22 = v27;
      }
      uint64_t v3 = v18;
      unint64_t v15 = v42;
      if (v26)
      {
        sub_1000727B4(v41, v42[7] + v22 * v14, &qword_1000A6C98);
        uint64_t v6 = (char *)v20;
        uint64_t v16 = v40;
      }
      else
      {
        v42[(v22 >> 6) + 8] |= 1 << v22;
        uint64_t v6 = (char *)v20;
        v17((char *)(v15[6] + *(void *)(v35 + 72) * v22), (char *)v20, v18);
        sub_1000329AC(v41, v15[7] + v22 * v14, &qword_1000A6C98);
        uint64_t v29 = v15[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        uint64_t v16 = v40;
        if (v30) {
          goto LABEL_18;
        }
        void v15[2] = v31;
        unint64_t v15 = v42;
      }
      swift_bridgeObjectRelease();
      (*v36)(v6, v3);
      NSString v11 = v37;
      sub_10000C788((uint64_t)v37, &qword_1000A6C98);
      v13 += v14;
      uint64_t v12 = v16 - 1;
      if (!v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v34;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_1000855C0();
    __break(1u);
  }
  else
  {
    unint64_t v15 = &_swiftEmptyDictionarySingleton;
LABEL_16:
    swift_beginAccess();
    *(void *)(v1 + 24) = v15;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100073400()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocClassInstance(v0, 41, 7);
}

uint64_t type metadata accessor for BetaEnrollmentNetworkingSessionMock()
{
  return self;
}

uint64_t sub_100073464()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

void (*sub_1000734D8(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1000843F0();
  return sub_100073564;
}

void sub_100073564(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_1000735CC(uint64_t a1)
{
  uint64_t v66 = sub_100083D80();
  uint64_t v3 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v71 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BB0(&qword_1000A6CE0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v64 = (uint64_t)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - v9;
  uint64_t v11 = sub_100004BB0(&qword_1000A6CF0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v65 = (uint64_t)v56 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v56 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v57 = v3;
    uint64_t v58 = v15;
    v56[2] = v1;
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v72 = *(void *)(v6 + 72);
    uint64_t v63 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v69 = (void (**)(uint64_t, char *, uint64_t))(v3 + 16);
    uint64_t v70 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    uint64_t v60 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    v56[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v73 = &_swiftEmptyDictionarySingleton;
    uint64_t v20 = v66;
    uint64_t v21 = (uint64_t)v71;
    uint64_t v61 = v17;
    uint64_t v62 = v10;
    uint64_t v59 = v5;
    while (1)
    {
      uint64_t v74 = v19;
      uint64_t v75 = v18;
      sub_10000C724(v19, (uint64_t)v17, &qword_1000A6CE0);
      unint64_t v27 = *v70;
      (*v70)((uint64_t)v17, 0, 1, v5);
      char v28 = *v63;
      if ((*v63)(v17, 1, v5) == 1) {
        goto LABEL_28;
      }
      sub_1000329AC((uint64_t)v17, (uint64_t)v10, &qword_1000A6CE0);
      uint64_t v29 = &v10[*(int *)(v5 + 36)];
      uint64_t v67 = *v69;
      v67(v21, v29, v20);
      uint64_t v30 = v65;
      sub_10000C724((uint64_t)v10, v65, &qword_1000A6CE0);
      v27(v30, 0, 1, v5);
      uint64_t v31 = v5;
      BOOL v32 = v28((char *)v30, 1, v5) == 1;
      uint64_t v68 = v27;
      if (v32)
      {
        sub_10000C788(v30, &qword_1000A6CF0);
        uint64_t v33 = v73;
        swift_bridgeObjectRetain();
        unint64_t v34 = sub_10006BF44(v21);
        char v36 = v35;
        swift_bridgeObjectRelease();
        if (v36)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v76 = v33;
          uint64_t v20 = v66;
          uint64_t v17 = v61;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1000712F0();
            uint64_t v20 = v66;
            uint64_t v33 = v76;
          }
          uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
          v23(v33[6] + *(void *)(v57 + 72) * v34, v20);
          uint64_t v38 = (uint64_t)v76;
          uint64_t v22 = v58;
          sub_1000329AC(v76[7] + v34 * v72, v58, &qword_1000A6CE0);
          uint64_t v73 = (void *)v38;
          sub_10006F984(v34, v38);
          swift_bridgeObjectRelease();
          v68(v22, 0, 1, v59);
          uint64_t v24 = v74;
          uint64_t v25 = v75;
        }
        else
        {
          uint64_t v22 = v58;
          v27(v58, 1, 1, v31);
          uint64_t v17 = v61;
          uint64_t v23 = *v60;
          uint64_t v20 = v66;
          uint64_t v24 = v74;
          uint64_t v25 = v75;
        }
        uint64_t v26 = (uint64_t)v71;
        v23((uint64_t)v71, v20);
        uint64_t v21 = v26;
        sub_10000C788(v22, &qword_1000A6CF0);
        uint64_t v10 = v62;
        uint64_t v5 = v59;
        goto LABEL_5;
      }
      sub_1000329AC(v30, v64, &qword_1000A6CE0);
      unint64_t v39 = v73;
      int v40 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v76 = v39;
      unint64_t v41 = sub_10006BF44(v21);
      unint64_t v43 = v41;
      uint64_t v44 = v39[2];
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        uint64_t result = sub_1000855C0();
        __break(1u);
        return result;
      }
      char v47 = v42;
      if (v39[3] >= v46)
      {
        uint64_t v20 = v66;
        uint64_t v24 = v74;
        uint64_t v25 = v75;
        if (v40) {
          goto LABEL_19;
        }
        sub_1000712F0();
      }
      else
      {
        sub_10006E50C(v46, v40);
        unint64_t v48 = sub_10006BF44((uint64_t)v71);
        uint64_t v24 = v74;
        uint64_t v25 = v75;
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_31;
        }
        unint64_t v43 = v48;
      }
      uint64_t v20 = v66;
LABEL_19:
      uint64_t v10 = v62;
      uint64_t v50 = v76;
      if (v47)
      {
        uint64_t v73 = v76;
        sub_1000727B4(v64, v76[7] + v43 * v72, &qword_1000A6CE0);
        uint64_t v21 = (uint64_t)v71;
      }
      else
      {
        v76[(v43 >> 6) + 8] |= 1 << v43;
        uint64_t v21 = (uint64_t)v71;
        v67(v50[6] + *(void *)(v57 + 72) * v43, v71, v20);
        sub_1000329AC(v64, v50[7] + v43 * v72, &qword_1000A6CE0);
        uint64_t v51 = v50[2];
        BOOL v52 = __OFADD__(v51, 1);
        uint64_t v53 = v51 + 1;
        if (v52) {
          goto LABEL_30;
        }
        v50[2] = v53;
        uint64_t v73 = v76;
      }
      swift_bridgeObjectRelease();
      (*v60)(v21, v20);
      uint64_t v17 = v61;
LABEL_5:
      sub_10000C788((uint64_t)v10, &qword_1000A6CE0);
      uint64_t v19 = v24 + v72;
      uint64_t v18 = v25 - 1;
      if (!v18)
      {
        v68((uint64_t)v17, 1, 1, v5);
        goto LABEL_28;
      }
    }
  }
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  swift_bridgeObjectRetain();
  uint64_t v73 = &_swiftEmptyDictionarySingleton;
  v54(v17, 1, 1, v5);
LABEL_28:
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v76 = v73;
  swift_retain();
  return sub_100084410();
}

uint64_t sub_100073CEC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HPSUIViewService34CarrySettingsNetworkingSessionMock__devices;
  uint64_t v2 = sub_100004BB0(&qword_1000A8620);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_100073DA0()
{
  return type metadata accessor for CarrySettingsNetworkingSessionMock();
}

uint64_t type metadata accessor for CarrySettingsNetworkingSessionMock()
{
  uint64_t result = qword_1000A8528;
  if (!qword_1000A8528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100073DF4()
{
  sub_100073E90();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100073E90()
{
  if (!qword_1000A8538)
  {
    sub_10000BD00((uint64_t *)&unk_1000A8540);
    unint64_t v0 = sub_100084420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A8538);
    }
  }
}

uint64_t sub_100073EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_100084360();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for EnrollToggle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4 + *(int *)(v12 + 20), a1, v8);
  uint64_t v13 = (void *)(a4 + *(int *)(v12 + 24));
  *uint64_t v13 = a2;
  v13[1] = a3;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for BetaEnrollment.State.enrolled(_:), v8);
  sub_1000740E8();
  swift_retain();
  sub_100084E50();
  sub_100084E50();
  swift_release();
  LOBYTE(a2) = v16[1] == v16[0];
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v14(a1, v8);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v8);
  *(unsigned char *)a4 = a2;
  *(void *)(a4 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for EnrollToggle()
{
  uint64_t result = qword_1000A8680;
  if (!qword_1000A8680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000740E8()
{
  unint64_t result = qword_1000A6158;
  if (!qword_1000A6158)
  {
    sub_100084360();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A6158);
  }
  return result;
}

uint64_t *sub_100074140(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100084360();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
  }
  swift_retain();
  return v4;
}

uint64_t sub_100074254(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100084360();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

uint64_t sub_1000742E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100084360();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

uint64_t sub_1000743AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100084360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100074474(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100084360();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10007450C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100084360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1000745C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000745D4);
}

uint64_t sub_1000745D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100084360();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_100074698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000746AC);
}

uint64_t sub_1000746AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100084360();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10007476C()
{
  uint64_t result = sub_100084360();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100074810()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007482C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v3 = type metadata accessor for EnrollToggle();
  uint64_t v4 = v3 - 8;
  uint64_t v69 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v70 = v5;
  uint64_t v71 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BB0(&qword_1000A86C8);
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  __chkstk_darwin(v6);
  uint64_t v72 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100004BB0(&qword_1000A86D0);
  __chkstk_darwin(v61);
  uint64_t v63 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004BB0(&qword_1000A86D8);
  __chkstk_darwin(v62);
  uint64_t v67 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100004BB0(&qword_1000A86E0);
  uint64_t v10 = __chkstk_darwin(v77);
  uint64_t v66 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v68 = (uint64_t)&v53 - v12;
  uint64_t v73 = sub_100004BB0(&qword_1000A86E8);
  __chkstk_darwin(v73);
  uint64_t v74 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100004BB0(&qword_1000A6DF8);
  uint64_t v14 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100084360();
  uint64_t v18 = *(void **)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v53 - v22;
  uint64_t v24 = *(int *)(v4 + 28);
  uint64_t v76 = a1;
  uint64_t v25 = a1 + v24;
  uint64_t v60 = (void (*)(char *, uint64_t, uint64_t))v18[2];
  v60((char *)&v53 - v22, a1 + v24, v17);
  uint64_t v59 = (uint64_t (*)(char *, uint64_t))v18[11];
  int v26 = v59(v23, v17);
  int v27 = enum case for BetaEnrollment.State.enrolling(_:);
  if (v26 == enum case for BetaEnrollment.State.enrolling(_:) || v26 == enum case for BetaEnrollment.State.removing(_:))
  {
    sub_1000844A0();
    uint64_t v52 = v75;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v74, v16, v75);
    swift_storeEnumTagMultiPayload();
    sub_10000C360(&qword_1000A6E30, &qword_1000A6DF8);
    sub_100075300();
    sub_100084780();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v52);
  }
  else
  {
    char v28 = (void (*)(char *, uint64_t))v18[1];
    int v57 = enum case for BetaEnrollment.State.removing(_:);
    uint64_t v54 = v28;
    v28(v23, v17);
    sub_1000846F0();
    uint64_t v56 = v29;
    uint64_t v55 = v30;
    uint64_t v31 = *(void *)(v76 + 8);
    char v79 = *(unsigned char *)v76;
    uint64_t v80 = v31;
    uint64_t v58 = sub_100004BB0(&qword_1000A6100);
    sub_100084A70();
    sub_100084AE0();
    v60(v21, v25, v17);
    int v32 = v59(v21, v17);
    BOOL v33 = v32 == v27 || v32 == v57;
    char v34 = v33;
    if (!v33) {
      v54(v21, v17);
    }
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v36 = swift_allocObject();
    *(unsigned char *)(v36 + 16) = v34;
    uint64_t v38 = (uint64_t)v63;
    uint64_t v37 = v64;
    unint64_t v39 = v72;
    uint64_t v40 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v72, v65);
    unint64_t v41 = (uint64_t *)(v38 + *(int *)(v61 + 36));
    *unint64_t v41 = KeyPath;
    v41[1] = (uint64_t)sub_1000396FC;
    _DWORD v41[2] = v36;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v40);
    uint64_t v42 = v67;
    sub_10000C724(v38, v67, &qword_1000A86D0);
    *(_WORD *)(v42 + *(int *)(v62 + 36)) = 257;
    sub_10000C788(v38, &qword_1000A86D0);
    uint64_t v43 = v76;
    uint64_t v44 = *(void *)(v76 + 8);
    LOBYTE(v81) = *(unsigned char *)v76;
    uint64_t v82 = v44;
    sub_100084A50();
    LOBYTE(v40) = v79;
    uint64_t v45 = v71;
    sub_100064DDC(v43, v71);
    unint64_t v46 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    uint64_t v47 = swift_allocObject();
    sub_1000751C8(v45, v47 + v46);
    uint64_t v48 = v66;
    sub_10000C724(v42, v66, &qword_1000A86D8);
    uint64_t v49 = v48 + *(int *)(v77 + 36);
    *(unsigned char *)uint64_t v49 = v40;
    *(void *)(v49 + 8) = sub_10007522C;
    *(void *)(v49 + 16) = v47;
    sub_10000C788(v42, &qword_1000A86D8);
    uint64_t v50 = v68;
    sub_100075298(v48, v68);
    sub_10000C724(v50, v74, &qword_1000A86E0);
    swift_storeEnumTagMultiPayload();
    sub_10000C360(&qword_1000A6E30, &qword_1000A6DF8);
    sub_100075300();
    sub_100084780();
    return sub_10000C788(v50, &qword_1000A86E0);
  }
}

uint64_t sub_100075060@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100084730();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_100004BB0(&qword_1000A86C0);
  return sub_10007482C(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1000750B4()
{
  return swift_deallocObject();
}

uint64_t sub_1000750C4()
{
  uint64_t v1 = (int *)(type metadata accessor for EnrollToggle() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = sub_100084360();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1000751C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EnrollToggle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007522C()
{
  uint64_t v1 = type metadata accessor for EnrollToggle();
  return (*(uint64_t (**)(void))(v0
                              + *(int *)(v1 + 24)
                              + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))))();
}

uint64_t sub_100075298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A86E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100075300()
{
  unint64_t result = qword_1000A86F0;
  if (!qword_1000A86F0)
  {
    sub_10000BD00(&qword_1000A86E0);
    sub_1000753A0();
    sub_10000C360(&qword_1000A7E40, &qword_1000A7E48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A86F0);
  }
  return result;
}

unint64_t sub_1000753A0()
{
  unint64_t result = qword_1000A86F8;
  if (!qword_1000A86F8)
  {
    sub_10000BD00(&qword_1000A86D8);
    sub_10007541C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A86F8);
  }
  return result;
}

unint64_t sub_10007541C()
{
  unint64_t result = qword_1000A8700;
  if (!qword_1000A8700)
  {
    sub_10000BD00(&qword_1000A86D0);
    sub_10000C360(&qword_1000A8708, &qword_1000A86C8);
    sub_10000C360(&qword_1000A8710, &qword_1000A8718);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8700);
  }
  return result;
}

uint64_t sub_1000754E0()
{
  return sub_10000C360(&qword_1000A8720, &qword_1000A8728);
}

void sub_10007551C()
{
  sub_10007C9E8(319, &qword_1000A8820, &qword_1000A64D0);
  if (v0 <= 0x3F)
  {
    sub_1000489BC(319, &qword_1000A7548);
    if (v1 <= 0x3F)
    {
      sub_10007C9E8(319, &qword_1000A8828, &qword_1000A67D8);
      if (v2 <= 0x3F)
      {
        sub_10007C9E8(319, &qword_1000A8830, &qword_1000A67C0);
        if (v3 <= 0x3F)
        {
          sub_1000489BC(319, (unint64_t *)&qword_1000A6410);
          if (v4 <= 0x3F)
          {
            sub_10007C9E8(319, &qword_1000A8838, &qword_1000A67E0);
            if (v5 <= 0x3F)
            {
              sub_10007C9E8(319, &qword_1000A8840, &qword_1000A67B0);
              if (v6 <= 0x3F) {
                swift_initClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
}

void *sub_1000757AC(uint64_t a1)
{
  uint64_t v41 = sub_100083EA0();
  uint64_t v3 = *(void *)(v41 - 8);
  uint64_t v4 = __chkstk_darwin(v41);
  uint64_t v40 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v39 = (char *)v29 - v6;
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v7)
  {
    v29[1] = v1;
    uint64_t v44 = _swiftEmptyArrayStorage;
    sub_1000853E0();
    unint64_t result = (void *)sub_1000805D8(a1);
    uint64_t v10 = (uint64_t)result;
    uint64_t v11 = 0;
    uint64_t v12 = a1 + 64;
    uint64_t v35 = v3 + 32;
    uint64_t v36 = v3 + 16;
    uint64_t v33 = a1 + 64;
    uint64_t v34 = v3 + 8;
    uint64_t v30 = a1 + 80;
    uint64_t v31 = v7;
    uint64_t v37 = v3;
    uint64_t v38 = a1;
    uint64_t v32 = v9;
    uint64_t v13 = v41;
    while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v15 = (unint64_t)v10 >> 6;
      if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v9) {
        goto LABEL_23;
      }
      uint64_t v42 = v11;
      uint64_t v16 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v39, *(void *)(a1 + 56) + *(void *)(v3 + 72) * v10, v13);
      uint64_t v17 = v40;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v40, v16, v13);
      uint64_t v18 = sub_100083E70();
      uint64_t v43 = v19;
      uint64_t v20 = sub_100083E60();
      uint64_t v22 = v21;
      sub_100083E90();
      type metadata accessor for ProfileViewModel();
      swift_allocObject();
      uint64_t v23 = v18;
      uint64_t v3 = v37;
      sub_100048380(v23, v43, v20, v22);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v17, v13);
      sub_1000853B0();
      sub_1000853F0();
      a1 = v38;
      sub_100085400();
      unint64_t result = (void *)sub_1000853C0();
      int64_t v14 = 1 << *(unsigned char *)(a1 + 32);
      if (v10 >= v14) {
        goto LABEL_24;
      }
      uint64_t v12 = v33;
      uint64_t v24 = *(void *)(v33 + 8 * v15);
      if ((v24 & (1 << v10)) == 0) {
        goto LABEL_25;
      }
      LODWORD(v9) = v32;
      if (*(_DWORD *)(a1 + 36) != v32) {
        goto LABEL_26;
      }
      unint64_t v25 = v24 & (-2 << (v10 & 0x3F));
      if (v25)
      {
        int64_t v14 = __clz(__rbit64(v25)) | v10 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v26 = v15 + 1;
        unint64_t v27 = (unint64_t)(v14 + 63) >> 6;
        if (v15 + 1 < v27)
        {
          unint64_t v28 = *(void *)(v33 + 8 * v26);
          if (v28)
          {
LABEL_18:
            int64_t v14 = __clz(__rbit64(v28)) + (v26 << 6);
          }
          else
          {
            while (v27 - 2 != v15)
            {
              unint64_t v28 = *(void *)(v30 + 8 * v15++);
              if (v28)
              {
                unint64_t v26 = v15 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v11 = v42 + 1;
      uint64_t v10 = v14;
      if (v42 + 1 == v31) {
        return v44;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

void *sub_100075B38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    sub_10006CB40(0, v4, 0);
    uint64_t v7 = *(void *)(a3(0) - 8);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = *(void *)(v7 + 72);
    do
    {
      uint64_t v10 = a4();
      uint64_t v12 = v11;
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_10006CB40((char *)(v13 > 1), v14 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      unint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
      v8 += v9;
      --v4;
    }
    while (v4);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100075C80(uint64_t a1)
{
  uint64_t result = sub_100080660(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_100080D14(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

unint64_t sub_100075D00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == 1)
  {
    return sub_1000651AC(*(unsigned char *)(a1 + 32));
  }
  else if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    char v4 = (char *)_swiftEmptyArrayStorage;
    do
    {
      int v5 = *(char *)(a1 + v3 + 32);
      if (v5 < 0)
      {
        char v9 = v5 & 1;
        sub_100004BB0(&qword_1000A8228);
        unint64_t result = swift_allocObject();
        unint64_t v7 = result;
        *(_OWORD *)(result + 16) = xmmword_100086D80;
        *(unsigned char *)(result + 32) = v9;
        *(unsigned char *)(result + 33) = v9;
        int64_t v8 = 2;
      }
      else
      {
        sub_100004BB0(&qword_1000A8228);
        unint64_t result = swift_allocObject();
        unint64_t v7 = result;
        *(_OWORD *)(result + 16) = xmmword_100086D90;
        *(unsigned char *)(result + 32) = v5;
        int64_t v8 = 1;
      }
      int64_t v10 = *((void *)v4 + 2);
      int64_t v11 = v10 + v8;
      if (__OFADD__(v10, v8))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        return result;
      }
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (!result || v11 > *((void *)v4 + 3) >> 1)
      {
        if (v10 <= v11) {
          int64_t v12 = v10 + v8;
        }
        else {
          int64_t v12 = v10;
        }
        unint64_t result = (unint64_t)sub_10006C78C((char *)result, v12, 1, v4);
        char v4 = (char *)result;
      }
      uint64_t v13 = *((void *)v4 + 2);
      if ((*((void *)v4 + 3) >> 1) - v13 < v8) {
        goto LABEL_47;
      }
      unint64_t result = (unint64_t)memcpy(&v4[v13 + 32], (const void *)(v7 + 32), v8);
      uint64_t v14 = *((void *)v4 + 2);
      BOOL v15 = __OFADD__(v14, v8);
      uint64_t v16 = v14 + v8;
      if (v15) {
        goto LABEL_48;
      }
      *((void *)v4 + 2) = v16;
      swift_bridgeObjectRelease();
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v17 = *((void *)v4 + 2);
    if (v17)
    {
      uint64_t v18 = v4 + 32;
      uint64_t v19 = *((void *)v4 + 2);
      do
      {
        char v23 = *v18++;
        char v22 = v23;
        if ((v23 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_10006CB60(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v21 = _swiftEmptyArrayStorage[2];
          unint64_t v20 = _swiftEmptyArrayStorage[3];
          if (v21 >= v20 >> 1) {
            sub_10006CB60((char *)(v20 > 1), v21 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v21 + 1;
          *((unsigned char *)&_swiftEmptyArrayStorage[4] + v21) = v22;
        }
        --v19;
      }
      while (v19);
      uint64_t v25 = _swiftEmptyArrayStorage[2];
      swift_release();
      unint64_t v26 = v4 + 32;
      do
      {
        char v30 = *v26++;
        char v29 = v30;
        if (v30)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_10006CB60(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v28 = _swiftEmptyArrayStorage[2];
          unint64_t v27 = _swiftEmptyArrayStorage[3];
          if (v28 >= v27 >> 1) {
            sub_10006CB60((char *)(v27 > 1), v28 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v28 + 1;
          *((unsigned char *)&_swiftEmptyArrayStorage[4] + v28) = v29;
        }
        --v17;
      }
      while (v17);
    }
    else
    {
      uint64_t v25 = _swiftEmptyArrayStorage[2];
      swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = _swiftEmptyArrayStorage[2];
    swift_release();
    if (v25)
    {
      if (v31)
      {
        uint64_t v32 = &off_10009E460;
        char v33 = 19;
      }
      else
      {
        uint64_t v32 = &off_10009E488;
        char v33 = 18;
      }
      return sub_10000DBD8((uint64_t)v32, v33);
    }
    if (v31)
    {
      uint64_t v32 = &off_10009E4B0;
      char v33 = 16;
      return sub_10000DBD8((uint64_t)v32, v33);
    }
    return 0;
  }
  return v2;
}

uint64_t sub_100076044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007779C(a1, a2, a3, &qword_1000A64D0);
}

uint64_t sub_100076050()
{
  return sub_100028568();
}

uint64_t sub_100076064(uint64_t a1)
{
  return sub_100077880(a1, &qword_1000A64D0);
}

uint64_t sub_100076080()
{
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s11DeviceModelVMa();
  sub_100084F60();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  unint64_t v0 = (char *)sub_100084DE0();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0;
  swift_bridgeObjectRetain();
  sub_10007FA60(&v3);
  swift_bridgeObjectRelease();
  sub_100004BB0(&qword_1000A6378);
  sub_10000C360((unint64_t *)&qword_1000A6380, &qword_1000A6378);
  uint64_t v1 = sub_100084CE0();
  swift_release();
  return v1;
}

uint64_t sub_100076274@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100083E20();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BB0(&qword_1000A6808);
  __chkstk_darwin(v6 - 8);
  int64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084120();
  sub_100083DF0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = sub_100084070();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t result = sub_10000C788((uint64_t)v8, &qword_1000A6808);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v12 = sub_100084010();
    uint64_t v13 = v14;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  *a1 = v12;
  a1[1] = v13;
  return result;
}

uint64_t sub_100076450()
{
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s11DeviceModelVMa();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_100084F30();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100076554()
{
  return sub_100076920();
}

uint64_t sub_100076568()
{
  return sub_1000769E8();
}

uint64_t sub_10007657C()
{
  return sub_1000846F0();
}

uint64_t sub_1000767AC()
{
  return sub_100084120();
}

uint64_t sub_1000767D0(uint64_t a1)
{
  uint64_t v2 = sub_100083E20();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_100084130();
}

uint64_t sub_100076898()
{
  return sub_100083DD0();
}

uint64_t sub_1000768BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100078628(a1, a2, a3, a4, &qword_1000A8870, (uint64_t (*)(char *))&CarrySettings.CarryDevice.appleConnectSettings.setter);
}

uint64_t sub_1000768DC()
{
  return sub_1000843E0();
}

uint64_t sub_10007690C()
{
  return sub_100076920();
}

uint64_t sub_100076920()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000769D4()
{
  return sub_1000769E8();
}

uint64_t sub_1000769E8()
{
  return sub_100084410();
}

void *sub_100076AA8()
{
  uint64_t v52 = sub_100083FE0();
  uint64_t v43 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v1 = (char *)&v35 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100084000();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v45 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_100004BB0(&qword_1000A64D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000840F0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100076050();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10000C788((uint64_t)v10, &qword_1000A64D0);
    return _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t result = (void *)sub_1000840E0();
  uint64_t v17 = (char *)_swiftEmptyArrayStorage;
  uint64_t v54 = (char *)_swiftEmptyArrayStorage;
  uint64_t v42 = result;
  uint64_t v18 = result[2];
  uint64_t v38 = v14;
  uint64_t v49 = v18;
  if (!v18)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    BOOL v15 = sub_100075B38((uint64_t)v17, (uint64_t)v53, (uint64_t (*)(void))&type metadata accessor for CarrySettings.LivabilityAudience, (uint64_t (*)(void))&CarrySettings.LivabilityAudience.purposeName.getter);
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v38, v11);
    return v15;
  }
  uint64_t v36 = v12;
  uint64_t v37 = v11;
  unint64_t v19 = 0;
  uint64_t v48 = v3 + 16;
  unint64_t v20 = v42;
  uint64_t v51 = v43 + 16;
  unint64_t v21 = (void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v44 = (uint64_t (**)(char *, char *, uint64_t))(v3 + 32);
  unint64_t v46 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t v40 = v3;
  uint64_t v41 = v2;
  unint64_t v39 = v7;
  while (v19 < v20[2])
  {
    unint64_t v22 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v50 = *(void *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v7, (unint64_t)v20 + v22 + v50 * v19, v2);
    uint64_t v23 = sub_100083FF0();
    if (v23)
    {
      unint64_t v47 = v22;
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        unint64_t v25 = v23 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
        uint64_t v26 = *(void *)(v43 + 72);
        unint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 16);
        swift_bridgeObjectRetain();
        while (1)
        {
          v27(v1, v25, v52);
          if (sub_100083FD0() == 0x646F702D656D6F68 && v28 == 0xE800000000000000) {
            break;
          }
          char v29 = sub_100085580();
          swift_bridgeObjectRelease();
          (*v21)(v1, v52);
          if (v29) {
            goto LABEL_18;
          }
          v25 += v26;
          if (!--v24)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v40;
            uint64_t v2 = v41;
            uint64_t v7 = v39;
            unint64_t v20 = v42;
            goto LABEL_5;
          }
        }
        swift_bridgeObjectRelease();
        (*v21)(v1, v52);
LABEL_18:
        swift_bridgeObjectRelease_n();
        char v30 = *v44;
        uint64_t v7 = v39;
        uint64_t v2 = v41;
        (*v44)(v45, v39, v41);
        uint64_t v31 = v54;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10006CC38(0, *((void *)v31 + 2) + 1, 1);
          uint64_t v31 = v54;
        }
        unint64_t v32 = v47;
        unint64_t v34 = *((void *)v31 + 2);
        unint64_t v33 = *((void *)v31 + 3);
        if (v34 >= v33 >> 1)
        {
          sub_10006CC38(v33 > 1, v34 + 1, 1);
          uint64_t v31 = v54;
        }
        *((void *)v31 + 2) = v34 + 1;
        uint64_t result = (void *)v30(&v31[v32 + v34 * v50], v45, v2);
        uint64_t v54 = v31;
        uint64_t v3 = v40;
        unint64_t v20 = v42;
        goto LABEL_7;
      }
LABEL_5:
      swift_bridgeObjectRelease();
    }
    uint64_t result = (void *)(*v46)(v7, v2);
LABEL_7:
    if (++v19 == v49)
    {
      uint64_t v17 = v54;
      uint64_t v12 = v36;
      uint64_t v11 = v37;
      goto LABEL_24;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10007705C()
{
  return sub_1000843E0();
}

uint64_t sub_1000770A4()
{
  uint64_t v1 = v0;
  uint64_t v40 = *v0;
  uint64_t v2 = sub_100084000();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BB0(&qword_1000A67C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v41 = (uint64_t)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v34 - v9;
  uint64_t v11 = sub_100004BB0(&qword_1000A64D0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000840F0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100076050();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    uint64_t v18 = &qword_1000A64D0;
    uint64_t v19 = (uint64_t)v13;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    unint64_t v39 = v17;
    uint64_t v20 = sub_1000840E0();
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v35 = v15;
      uint64_t v36 = v14;
      uint64_t v37 = v3;
      uint64_t v38 = v10;
      uint64_t v22 = v3 + 16;
      uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      unint64_t v24 = v20 + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
      uint64_t v25 = *(void *)(v22 + 56);
      v34[1] = v20;
      swift_bridgeObjectRetain();
      while (1)
      {
        v23(v5, v24, v2);
        if (sub_10007755C()) {
          break;
        }
        (*(void (**)(char *, uint64_t))(v22 - 8))(v5, v2);
        v24 += v25;
        if (!--v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = 1;
          uint64_t v3 = v37;
          uint64_t v10 = v38;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = v37;
      uint64_t v10 = v38;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v38, v5, v2);
      uint64_t v26 = 0;
LABEL_10:
      uint64_t v15 = v35;
      uint64_t v14 = v36;
    }
    else
    {
      uint64_t v26 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v10, v26, 1, v2);
    swift_bridgeObjectRelease();
    type metadata accessor for CarrySettingsDetailViewModel();
    swift_getWitnessTable();
    sub_1000843A0();
    sub_1000843D0();
    swift_release();
    uint64_t v27 = v41;
    sub_10000C724((uint64_t)v10, v41, &qword_1000A67C0);
    sub_100077864(v27);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2);
    char v29 = v39;
    if (v28 != 1)
    {
      char v30 = (void *)((char *)v1 + qword_1000ABA58);
      *char v30 = 0;
      v30[1] = 0;
      uint64_t v31 = swift_bridgeObjectRelease();
      sub_100077D08(v31);
      unint64_t v32 = (void *)((char *)v1 + qword_1000ABA60);
      *unint64_t v32 = 0;
      v32[1] = 0;
      swift_bridgeObjectRelease();
      sub_100078F0C();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v29, v14);
    uint64_t v18 = &qword_1000A67C0;
    uint64_t v19 = (uint64_t)v10;
  }
  return sub_10000C788(v19, v18);
}

uint64_t sub_10007755C()
{
  uint64_t v0 = sub_100083FC0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_10007761C();
  if (v4)
  {
    if (v0 == v3 && v4 == v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      char v6 = sub_100085580();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6 & 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_10007761C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000776D0()
{
  return sub_1000770A4();
}

uint64_t sub_100077790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007779C(a1, a2, a3, &qword_1000A67C0);
}

uint64_t sub_10007779C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_100004BB0(a4);
  __chkstk_darwin(v6);
  sub_10000C724(a1, (uint64_t)&v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  sub_1000843E0();
  return sub_10000C788(a1, a4);
}

uint64_t sub_100077850()
{
  return sub_100028568();
}

uint64_t sub_100077864(uint64_t a1)
{
  return sub_100077880(a1, &qword_1000A67C0);
}

uint64_t sub_100077880(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *v4;
  uint64_t v7 = sub_100004BB0(a2);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v6 + 80);
  uint64_t v10 = v14;
  uint64_t v11 = *(void *)(v6 + 88);
  uint64_t v15 = v11;
  swift_getKeyPath();
  v13[0] = v10;
  v13[1] = v11;
  swift_getKeyPath();
  sub_10000C724(a1, (uint64_t)v9, a2);
  swift_retain();
  sub_100084410();
  return sub_10000C788(a1, a2);
}

uint64_t sub_1000779A4()
{
  return sub_1000843E0();
}

uint64_t sub_1000779D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100077A88()
{
  return sub_100084410();
}

void *sub_100077B40()
{
  uint64_t v0 = sub_100004BB0(&qword_1000A67B0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v10[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1000840C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000796D0();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10000C788((uint64_t)v2, &qword_1000A67B0);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v6, v2, v3);
    uint64_t v8 = sub_1000840B0();
    uint64_t v7 = sub_100075B38(v8, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for CarrySettings.LivabilityAudience, (uint64_t (*)(void))&CarrySettings.LivabilityAudience.purposeName.getter);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

uint64_t sub_100077D08()
{
  uint64_t v37 = *v0;
  uint64_t v1 = sub_100084000();
  uint64_t v38 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004BB0(&qword_1000A67C0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v31 - v8;
  uint64_t v10 = sub_100004BB0(&qword_1000A67B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000840C0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000796D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v17 = &qword_1000A67B0;
    uint64_t v18 = (uint64_t)v12;
  }
  else
  {
    uint64_t v35 = v14;
    uint64_t v36 = v13;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    uint64_t v19 = sub_1000840B0();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      unint64_t v32 = v16;
      unint64_t v33 = v7;
      unint64_t v34 = v9;
      uint64_t v21 = (uint64_t)v0;
      uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      unint64_t v23 = v19 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
      unint64_t v24 = (void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v25 = *(void *)(v38 + 72);
      v31[1] = v19;
      swift_bridgeObjectRetain();
      while (1)
      {
        v22(v3, v23, v1);
        if (sub_1000795C4((uint64_t)v3, v21, (uint64_t (*)(void))&CarrySettings.LivabilityAudience.purposeName.getter, &qword_1000ABA58))break; {
        (*v24)(v3, v1);
        }
        v23 += v25;
        if (!--v20)
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = 1;
          uint64_t v27 = v38;
          uint64_t v9 = v34;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = v38;
      uint64_t v9 = v34;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v34, v3, v1);
      uint64_t v26 = 0;
LABEL_10:
      uint64_t v16 = v32;
      uint64_t v7 = v33;
    }
    else
    {
      uint64_t v26 = 1;
      uint64_t v27 = v38;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v9, v26, 1, v1);
    swift_bridgeObjectRelease();
    type metadata accessor for CarrySettingsDetailViewModel();
    swift_getWitnessTable();
    sub_1000843A0();
    sub_1000843D0();
    swift_release();
    sub_10000C724((uint64_t)v9, (uint64_t)v7, &qword_1000A67C0);
    sub_1000781F4((uint64_t)v7);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v9, 1, v1);
    uint64_t v29 = v36;
    if (v28 != 1) {
      sub_1000776D0();
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v29);
    uint64_t v17 = &qword_1000A67C0;
    uint64_t v18 = (uint64_t)v9;
  }
  return sub_10000C788(v18, v17);
}

uint64_t sub_1000781C0(uint64_t a1, uint64_t a2)
{
  return sub_100079674(a1, a2, &qword_1000ABA58, sub_100077D08);
}

uint64_t sub_1000781E0()
{
  return sub_100028568();
}

uint64_t sub_1000781F4(uint64_t a1)
{
  return sub_100077880(a1, &qword_1000A67C0);
}

uint64_t sub_100078210()
{
  return sub_1000843E0();
}

uint64_t sub_100078258()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100084400();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10007830C()
{
  return sub_100084410();
}

uint64_t sub_1000783C4()
{
  swift_beginAccess();
  swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s11DeviceModelVMa();
  sub_100084F60();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_100084DE0();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1000809C0(v0);
  swift_bridgeObjectRelease();
  sub_100032128(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100004BB0(&qword_1000A6378);
  sub_10000C360((unint64_t *)&qword_1000A6380, &qword_1000A6378);
  uint64_t v2 = sub_100084CE0();
  swift_release();
  return v2;
}

uint64_t sub_1000785E4()
{
  return sub_100083DF0();
}

uint64_t sub_100078608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100078628(a1, a2, a3, a4, &qword_1000A6808, (uint64_t (*)(char *))&CarrySettings.CarryDevice.deviceInfo.setter);
}

uint64_t sub_100078628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9 = sub_100004BB0(a5);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C724(a1, (uint64_t)v11, a5);
  return a6(v11);
}

unint64_t sub_1000786CC()
{
  swift_beginAccess();
  swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s11DeviceModelVMa();
  sub_100084F60();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v0 = sub_100084DE0();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (uint64_t *)(v0 + 40);
    uint64_t v3 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v4 = *(v2 - 1);
      uint64_t v5 = *v2;
      if (v4 == 0xD000000000000011 && v5 == 0x800000010008B6E0) {
        break;
      }
      char v9 = sub_100085580();
      BOOL v11 = v4 == 0xD000000000000011 && v5 == 0x800000010008B700;
      char v6 = 1;
      if ((v9 & 1) != 0 || v11) {
        goto LABEL_6;
      }
      char v12 = sub_100085580();
      BOOL v13 = v4 == 0xD000000000000011 && v5 == 0x800000010008B720;
      BOOL v14 = v13;
      if (v12 & 1) != 0 || v14 || (sub_100085580()) {
        goto LABEL_6;
      }
      if (v4 == 0xD000000000000011 && v5 == 0x800000010008B740)
      {
        char v6 = 0;
        goto LABEL_6;
      }
      char v6 = 0;
      if (sub_100085580()) {
        goto LABEL_6;
      }
LABEL_11:
      v2 += 2;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
    char v6 = 1;
LABEL_6:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_10006C78C(0, *((void *)v3 + 2) + 1, 1, v3);
    }
    unint64_t v8 = *((void *)v3 + 2);
    unint64_t v7 = *((void *)v3 + 3);
    if (v8 >= v7 >> 1) {
      uint64_t v3 = sub_10006C78C((char *)(v7 > 1), v8 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v8 + 1;
    v3[v8 + 32] = v6;
    goto LABEL_11;
  }
  uint64_t v3 = (char *)_swiftEmptyArrayStorage;
LABEL_36:
  swift_bridgeObjectRelease();
  unint64_t v15 = sub_100075D00((uint64_t)v3);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17) {
    return v15;
  }
  else {
    return 0xD000000000000010;
  }
}

char *sub_100078A98()
{
  uint64_t v32 = sub_1000840C0();
  uint64_t v35 = *(void *)(v32 - 8);
  uint64_t v0 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v28 - v2;
  uint64_t v4 = sub_100004BB0(&qword_1000A64D0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000840F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100076050();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000C788((uint64_t)v6, &qword_1000A64D0);
    return (char *)_swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v12 = sub_1000840D0();
  BOOL v13 = (char *)_swiftEmptyArrayStorage;
  uint64_t v38 = (char *)_swiftEmptyArrayStorage;
  uint64_t v34 = *(void *)(v12 + 16);
  if (!v34)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v26 = (char *)sub_100075B38((uint64_t)v13, (uint64_t)v37, (uint64_t (*)(void))&type metadata accessor for CarrySettings.LivabilityTrainAudiences, (uint64_t (*)(void))&CarrySettings.LivabilityTrainAudiences.trainName.getter);
    swift_release();
    uint64_t v38 = v26;
    swift_bridgeObjectRetain();
    sub_10007FA60(&v38);
    swift_bridgeObjectRelease();
    BOOL v11 = v38;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v11;
  }
  int v28 = v10;
  uint64_t v29 = v8;
  uint64_t v30 = v7;
  unint64_t v14 = 0;
  uint64_t v33 = v35 + 16;
  uint64_t v31 = (void (**)(char *, uint64_t))(v35 + 8);
  unint64_t v15 = (void (**)(char *, char *, uint64_t))(v35 + 32);
  uint64_t v16 = v32;
  while (v14 < *(void *)(v12 + 16))
  {
    unint64_t v17 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v18 = *(void *)(v35 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v3, v12 + v17 + v18 * v14, v16);
    if (sub_1000840A0() == 1397716596 && v19 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      uint64_t v21 = *v15;
      (*v15)(v36, v3, v16);
      uint64_t v22 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10006CBFC(0, *((void *)v22 + 2) + 1, 1);
        uint64_t v22 = v38;
      }
      unint64_t v24 = *((void *)v22 + 2);
      unint64_t v23 = *((void *)v22 + 3);
      if (v24 >= v23 >> 1)
      {
        sub_10006CBFC(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v38;
      }
      *((void *)v22 + 2) = v24 + 1;
      uint64_t v25 = &v22[v17 + v24 * v18];
      uint64_t v16 = v32;
      v21(v25, v36, v32);
      uint64_t v38 = v22;
      goto LABEL_6;
    }
    char v20 = sub_100085580();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_12;
    }
    (*v31)(v3, v16);
LABEL_6:
    if (v34 == ++v14)
    {
      BOOL v13 = v38;
      uint64_t v8 = v29;
      uint64_t v7 = v30;
      uint64_t v10 = v28;
      goto LABEL_18;
    }
  }
  __break(1u);
  uint64_t result = (char *)swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100078F0C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000840C0();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v65 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v52 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v52 - v9;
  uint64_t v11 = sub_100004BB0(&qword_1000A67B0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v57 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v56 = (char *)&v52 - v14;
  uint64_t v15 = sub_100004BB0(&qword_1000A64D0);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)sub_1000840F0();
  uint64_t v19 = *(v18 - 1);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100076050();
  if ((*(unsigned int (**)(char *, uint64_t, void *))(v19 + 48))(v17, 1, v18) == 1)
  {
    uint64_t v22 = &qword_1000A64D0;
    uint64_t v23 = (uint64_t)v17;
    return sub_10000C788(v23, v22);
  }
  uint64_t v54 = v18;
  uint64_t v55 = v2;
  uint64_t v53 = v19;
  (*(void (**)(char *, char *, void *))(v19 + 32))(v21, v17, v18);
  uint64_t v52 = v21;
  uint64_t v24 = sub_1000840D0();
  uint64_t v25 = (char *)_swiftEmptyArrayStorage;
  uint64_t v66 = _swiftEmptyArrayStorage;
  uint64_t v26 = *(void *)(v24 + 16);
  uint64_t v64 = v8;
  uint64_t v62 = v26;
  uint64_t v59 = v1;
  if (!v26)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v37 = *((void *)v25 + 2);
    if (v37)
    {
      uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v63 + 16);
      unint64_t v39 = &v25[(*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80)];
      uint64_t v40 = (void (**)(char *, uint64_t))(v63 + 8);
      uint64_t v41 = v25;
      uint64_t v42 = (uint64_t)v8;
      uint64_t v43 = *(void *)(v63 + 72);
      uint64_t v65 = v41;
      swift_retain();
      while (1)
      {
        v38(v42, v39, v3);
        if (sub_1000795C4(v42, v59, (uint64_t (*)(void))&CarrySettings.LivabilityTrainAudiences.trainName.getter, &qword_1000ABA60))break; {
        uint64_t v42 = (uint64_t)v64;
        }
        (*v40)(v64, v3);
        v39 += v43;
        if (!--v37)
        {
          swift_release();
          goto LABEL_23;
        }
      }
      swift_release();
      uint64_t v45 = (uint64_t)v56;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v56, v64, v3);
      uint64_t v44 = 0;
    }
    else
    {
LABEL_23:
      uint64_t v44 = 1;
      uint64_t v45 = (uint64_t)v56;
    }
    uint64_t v46 = v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v45, v44, 1, v3);
    swift_release();
    type metadata accessor for CarrySettingsDetailViewModel();
    swift_getWitnessTable();
    sub_1000843A0();
    sub_1000843D0();
    swift_release();
    uint64_t v47 = v57;
    sub_10000C724(v45, v57, &qword_1000A67B0);
    sub_1000796E4(v47);
    int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v45, 1, v3);
    uint64_t v50 = v52;
    uint64_t v49 = v53;
    if (v48 != 1) {
      sub_1000776D0(0, 0);
    }
    (*(void (**)(char *, void *))(v49 + 8))(v50, v54);
    uint64_t v22 = &qword_1000A67B0;
    uint64_t v23 = v45;
    return sub_10000C788(v23, v22);
  }
  unint64_t v27 = 0;
  uint64_t v60 = v3;
  uint64_t v61 = v63 + 16;
  uint64_t v58 = (void (**)(char *, uint64_t))(v63 + 8);
  int v28 = (void (**)(char *, char *, uint64_t))(v63 + 32);
  while (v27 < *(void *)(v24 + 16))
  {
    unint64_t v29 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    uint64_t v30 = *(void *)(v63 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v63 + 16))(v10, v24 + v29 + v30 * v27, v3);
    if (sub_1000840A0() == 1397716596 && v31 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      uint64_t v18 = *v28;
      (*v28)(v65, v10, v3);
      uint64_t v33 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10006CBFC(0, v33[2] + 1, 1);
        uint64_t v33 = v66;
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1)
      {
        sub_10006CBFC(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v66;
      }
      void v33[2] = v35 + 1;
      unint64_t v36 = (unint64_t)v33 + v29 + v35 * v30;
      uint64_t v3 = v60;
      ((void (*)(unint64_t, char *, uint64_t))v18)(v36, v65, v60);
      uint64_t v66 = v33;
      goto LABEL_6;
    }
    char v32 = sub_100085580();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_12;
    }
    (*v58)(v10, v3);
LABEL_6:
    ++v27;
    uint64_t v8 = v64;
    if (v62 == v27)
    {
      uint64_t v25 = (char *)v66;
      goto LABEL_18;
    }
  }
  __break(1u);
  ((void (*)(char *, uint64_t))*v18)(v64, v3);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1000795C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void *a4)
{
  uint64_t v6 = a3();
  uint64_t v8 = (void *)(a2 + *a4);
  uint64_t v9 = v8[1];
  if (v9)
  {
    if (v6 == *v8 && v9 == v7) {
      char v11 = 1;
    }
    else {
      char v11 = sub_100085580();
    }
  }
  else
  {
    char v11 = 0;
  }
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_100079654(uint64_t a1, uint64_t a2)
{
  return sub_100079674(a1, a2, &qword_1000ABA60, sub_100078F0C);
}

uint64_t sub_100079674(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v5 = (void *)(v4 + *a3);
  *uint64_t v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  return a4();
}

uint64_t sub_1000796C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007779C(a1, a2, a3, &qword_1000A67B0);
}

uint64_t sub_1000796D0()
{
  return sub_100028568();
}

uint64_t sub_1000796E4(uint64_t a1)
{
  return sub_100077880(a1, &qword_1000A67B0);
}

uint64_t sub_100079700()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10007974C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100083DB0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100079778@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100083D90();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000797A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v13 = a1;
  uint64_t v3 = sub_100083E20();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084120();
  uint64_t v7 = sub_100083E10();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v8 = sub_1000757AC(v7);
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = _s11DeviceModelVMa();
  a2[3] = v9;
  a2[4] = (uint64_t)&off_1000A0500;
  uint64_t v10 = sub_100021F40(a2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v10, v13, v9);
  a2[5] = (uint64_t)v8;
  type metadata accessor for ProfileListViewModel();
  return sub_100083D70();
}

uint64_t sub_10007997C()
{
  v1[15] = v0;
  v1[16] = *v0;
  sub_100004BB0(&qword_1000A8870);
  v1[17] = swift_task_alloc();
  sub_100004BB0(&qword_1000A8890);
  v1[18] = swift_task_alloc();
  uint64_t v2 = sub_100083DC0();
  v1[19] = v2;
  v1[20] = *(void *)(v2 - 8);
  v1[21] = swift_task_alloc();
  sub_100084FC0();
  v1[22] = sub_100084FB0();
  uint64_t v4 = sub_100084FA0();
  v1[23] = v4;
  v1[24] = v3;
  return _swift_task_switch(sub_100079AF8, v4, v3);
}

uint64_t sub_100079AF8()
{
  uint64_t v1 = type metadata accessor for CarrySettingsDetailViewModel();
  v0[25] = v1;
  sub_100059088(0xD000000000000032, 0x800000010008BDB0, v1, (uint64_t)&off_1000A15E8);
  id v2 = [self sharedInstance];
  v0[26] = v2;
  sub_10007690C();
  NSString v3 = sub_100084D00();
  swift_bridgeObjectRelease();
  sub_100076554();
  NSString v4 = sub_100084D00();
  swift_bridgeObjectRelease();
  [v2 setAccountID:v3 password:v4 syncToKeychain:0];

  v0[2] = v0;
  v0[7] = v0 + 29;
  v0[3] = sub_100079CBC;
  uint64_t v5 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10007A230;
  v0[13] = &unk_1000A1708;
  v0[14] = v5;
  [v2 validateWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100079CBC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 216) = v2;
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v4 = *(void *)(v1 + 184);
  if (v2) {
    uint64_t v5 = sub_10007A194;
  }
  else {
    uint64_t v5 = sub_100079DEC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100079DEC()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v5 = v0[17];
  sub_100059088(0xD000000000000038, 0x800000010008BE10, v0[25], (uint64_t)&off_1000A15E8);
  sub_10007690C();
  sub_100076554();
  uint64_t v6 = sub_100083D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_100083DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v5, 0, 1, v3);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[28] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100079F90;
  uint64_t v8 = v0[17];
  return sub_10007B9D0(v8);
}

uint64_t sub_100079F90()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 136);
  swift_task_dealloc();
  sub_10000C788(v2, &qword_1000A8870);
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v4 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_10007A0DC, v4, v3);
}

uint64_t sub_10007A0DC()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10007A194()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10007A230(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100004BB0((uint64_t *)&unk_1000A7100);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return _swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_10007A2E4()
{
  v1[10] = v0;
  v1[11] = *v0;
  uint64_t v2 = sub_100084000();
  v1[12] = v2;
  v1[13] = *(void *)(v2 - 8);
  v1[14] = swift_task_alloc();
  uint64_t v3 = sub_100083F10();
  v1[15] = v3;
  v1[16] = *(void *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  sub_100004BB0(&qword_1000A67C0);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  sub_100084FC0();
  v1[24] = sub_100084FB0();
  uint64_t v5 = sub_100084FA0();
  v1[25] = v5;
  v1[26] = v4;
  return _swift_task_switch(sub_10007A4D0, v5, v4);
}

uint64_t sub_10007A4D0()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v6 + 56))(v0[23], 1, 1, v5);
  uint64_t v7 = *(void (**)(uint64_t, void, uint64_t))(v4 + 104);
  v7(v2, enum case for CarrySettings.ProfileVariant.unspecified(_:), v3);
  sub_1000781E0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  int v9 = v8(v1, 1, v5);
  sub_10000C788(v1, &qword_1000A67C0);
  if (v9 == 1)
  {
    uint64_t v10 = v0[20];
    uint64_t v11 = v0[12];
    sub_100077850();
    int v12 = v8(v10, 1, v11);
    sub_10000C788(v10, &qword_1000A67C0);
    if (v12 == 1) {
      goto LABEL_6;
    }
    sub_100077850();
    uint64_t v13 = (unsigned int *)&enum case for CarrySettings.ProfileVariant.colorAudience(_:);
  }
  else
  {
    sub_1000781E0();
    uint64_t v13 = (unsigned int *)&enum case for CarrySettings.ProfileVariant.livabilityTrain(_:);
  }
  uint64_t v14 = v0[23];
  uint64_t v15 = v0[21];
  uint64_t v16 = v0[18];
  uint64_t v17 = v0[15];
  (*(void (**)(uint64_t, uint64_t))(v0[16] + 8))(v16, v17);
  sub_10000C788(v14, &qword_1000A67C0);
  sub_100081C14(v15, v14);
  v7(v16, *v13, v17);
LABEL_6:
  uint64_t v18 = v0[19];
  uint64_t v19 = v0[12];
  sub_10000C724(v0[23], v18, &qword_1000A67C0);
  int v20 = v8(v18, 1, v19);
  uint64_t v22 = v0[18];
  uint64_t v21 = v0[19];
  if (v20 == 1)
  {
    uint64_t v23 = v0[23];
    uint64_t v24 = v0[15];
    uint64_t v25 = v0[16];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
    sub_10000C788(v23, &qword_1000A67C0);
    sub_10000C788(v21, &qword_1000A67C0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
  else
  {
    uint64_t v28 = v0[16];
    uint64_t v49 = v0[17];
    uint64_t v29 = v0[15];
    uint64_t v30 = v0[10];
    uint64_t v31 = v0[11];
    (*(void (**)(void, uint64_t, void))(v0[13] + 32))(v0[14], v21, v0[12]);
    sub_100085340(20);
    v0[5] = 0;
    v0[6] = 0xE000000000000000;
    v52._object = (void *)0x800000010008BD70;
    v52._countAndFlagsBits = 0xD000000000000012;
    sub_100084D60(v52);
    sub_100085440();
    uint64_t v32 = v0[5];
    uint64_t v33 = v0[6];
    uint64_t v34 = *(void *)(v31 + 80);
    uint64_t v35 = *(void *)(v31 + 88);
    uint64_t v36 = type metadata accessor for CarrySettingsDetailViewModel();
    v0[27] = v36;
    sub_100059088(v32, v33, v36, (uint64_t)&off_1000A15E8);
    swift_bridgeObjectRelease();
    v0[28] = *(void *)(v30 + qword_1000ABA70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v49, v22, v29);
    uint64_t v37 = (void *)(v30 + qword_1000ABA68);
    swift_beginAccess();
    v0[9] = *v37;
    uint64_t v38 = (void *)swift_task_alloc();
    *uint64_t v38 = v34;
    v38[1] = v35;
    uint64_t KeyPath = swift_getKeyPath();
    swift_task_dealloc();
    uint64_t v40 = (void *)swift_task_alloc();
    void v40[2] = v34;
    v40[3] = v35;
    unsigned char v40[4] = KeyPath;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    _s11DeviceModelVMa();
    uint64_t v42 = sub_100084F60();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v45 = sub_100012810((void (*)(char *, char *))sub_100081A64, (uint64_t)v40, v42, AssociatedTypeWitness, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v44);
    v0[29] = v45;
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 + 88)
                                                                              + **(int **)(v35 + 88));
    uint64_t v46 = (void *)swift_task_alloc();
    v0[30] = v46;
    *uint64_t v46 = v0;
    v46[1] = sub_10007AAC0;
    uint64_t v47 = v0[17];
    uint64_t v48 = v0[14];
    return v50(v48, v47, v45, v34, v35);
  }
}

uint64_t sub_10007AAC0()
{
  uint64_t v2 = (void *)*v1;
  v2[31] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[17];
  uint64_t v4 = v2[16];
  uint64_t v5 = v2[15];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v7 = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  if (v0)
  {
    v2[34] = v6;
    v2[35] = v7;
    v6(v3, v5);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v8 = v2[25];
    uint64_t v9 = v2[26];
    uint64_t v10 = sub_10007ADA4;
  }
  else
  {
    v2[32] = v6;
    v2[33] = v7;
    v6(v3, v5);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v8 = v2[25];
    uint64_t v9 = v2[26];
    uint64_t v10 = sub_10007AC94;
  }
  return _swift_task_switch(v10, v8, v9);
}

uint64_t sub_10007AC94()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[32];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[13];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v1(v3, v4);
  sub_10000C788(v2, &qword_1000A67C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10007ADA4()
{
  uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[34];
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[13];
  swift_release();
  sub_100085340(29);
  v0[7] = 0;
  v0[8] = 0xE000000000000000;
  v12._object = (void *)0x800000010008BD90;
  v12._countAndFlagsBits = 0xD00000000000001BLL;
  sub_100084D60(v12);
  sub_100085440();
  sub_100058FFC(90, v0[7], v0[8], v1, (uint64_t)&off_1000A15E8);
  swift_bridgeObjectRelease();
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  v10(v3, v5);
  sub_10000C788(v2, &qword_1000A67C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10007AF68()
{
  _OWORD v1[2] = v0;
  v1[3] = *v0;
  sub_100004BB0(&qword_1000A8870);
  v1[4] = swift_task_alloc();
  sub_100084FC0();
  v1[5] = sub_100084FB0();
  uint64_t v3 = sub_100084FA0();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_10007B058, v3, v2);
}

uint64_t sub_10007B058()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = type metadata accessor for CarrySettingsDetailViewModel();
  sub_100059088(0xD000000000000021, 0x800000010008BD40, v2, (uint64_t)&off_1000A15E8);
  uint64_t v3 = sub_100083DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10007B168;
  uint64_t v5 = *(void *)(v0 + 32);
  return sub_10007B9D0(v5);
}

uint64_t sub_10007B168()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 32);
  swift_task_dealloc();
  sub_10000C788(v2, &qword_1000A8870);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10007B2B4, v4, v3);
}

uint64_t sub_10007B2B4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007B31C()
{
  v1[8] = v0;
  v1[9] = *v0;
  sub_100084FC0();
  v1[10] = sub_100084FB0();
  uint64_t v3 = sub_100084FA0();
  v1[11] = v3;
  v1[12] = v2;
  return _swift_task_switch(sub_10007B3DC, v3, v2);
}

uint64_t sub_10007B3DC()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = (void *)(v2 + qword_1000ABA68);
  swift_beginAccess();
  v0[5] = *v3;
  uint64_t v4 = (void *)swift_task_alloc();
  uint64_t v5 = *(void *)(v1 + 80);
  *uint64_t v4 = v5;
  uint64_t v6 = *(void *)(v1 + 88);
  v4[1] = v6;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v8[2] = v5;
  v8[3] = v6;
  v8[4] = KeyPath;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s11DeviceModelVMa();
  uint64_t v10 = sub_100084F60();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_100012810((void (*)(char *, char *))sub_100082240, (uint64_t)v8, v10, AssociatedTypeWitness, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v12);
  v0[13] = v13;
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  sub_100085340(17);
  v19._countAndFlagsBits = 0x20676E6964616F4CLL;
  v19._object = (void *)0xEF206E6F204E5056;
  sub_100084D60(v19);
  v0[6] = v13;
  v0[14] = sub_100084F60();
  v0[15] = swift_getWitnessTable();
  sub_100085560();
  uint64_t v14 = type metadata accessor for CarrySettingsDetailViewModel();
  v0[16] = v14;
  sub_100059088(0, 0xE000000000000000, v14, (uint64_t)&off_1000A15E8);
  swift_bridgeObjectRelease();
  v0[17] = *(void *)(v2 + qword_1000ABA70);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 56) + **(int **)(v6 + 56));
  swift_unknownObjectRetain();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[18] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_10007B72C;
  return v17(v13, v5, v6);
}

uint64_t sub_10007B72C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_10007B8B8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_10007B854;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10007B854()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007B8B8()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  swift_release();
  swift_unknownObjectRelease();
  sub_100085340(28);
  v6._object = (void *)0x800000010008BD20;
  v6._countAndFlagsBits = 0xD00000000000001ALL;
  sub_100084D60(v6);
  v0[7] = v2;
  sub_100085560();
  swift_bridgeObjectRelease();
  sub_100058FFC(90, 0, 0xE000000000000000, v1, (uint64_t)&off_1000A15E8);
  swift_bridgeObjectRelease();
  swift_willThrow();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10007B9D0(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  v2[18] = *v1;
  sub_100084FC0();
  v2[19] = sub_100084FB0();
  uint64_t v4 = sub_100084FA0();
  v2[20] = v4;
  v2[21] = v3;
  return _swift_task_switch(sub_10007BA90, v4, v3);
}

uint64_t sub_10007BA90()
{
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  *(void *)(v0 + 176) = type metadata accessor for CarrySettingsDetailViewModel();
  swift_getWitnessTable();
  sub_1000843A0();
  sub_1000843D0();
  swift_release();
  uint64_t v6 = qword_1000ABA68;
  *(void *)(v0 + 184) = qword_1000ABA68;
  uint64_t v7 = (void *)(v2 + v6);
  swift_beginAccess();
  *(void *)(v0 + 104) = *v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s11DeviceModelVMa();
  *(void *)(v0 + 192) = sub_100084F60();
  swift_getWitnessTable();
  sub_100085110();
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 40);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v3;
  sub_100004BB0(&qword_1000A8880);
  unint64_t v9 = sub_100081BC0();
  *(void *)(v0 + 72) = &protocol witness table for Int;
  *(void *)(v0 + 80) = v9;
  swift_getWitnessTable();
  sub_100084E20();
  swift_task_dealloc();
  *(void *)(v0 + 200) = *(void *)(v2 + qword_1000ABA70);
  uint64_t v10 = *v7;
  *(void *)(v0 + 208) = *v7;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 96) + **(int **)(v5 + 96));
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_10007BD84;
  return v13(v10, v4, v5);
}

uint64_t sub_10007BD84()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_10007BF08;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_10007BEA8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10007BEA8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007BF08()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[17];
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100085340(42);
  v0[11] = 0;
  v0[12] = 0xE000000000000000;
  v8._object = (void *)0x800000010008BCC0;
  v8._countAndFlagsBits = 0xD00000000000001CLL;
  sub_100084D60(v8);
  v0[14] = v1;
  sub_100004BB0((uint64_t *)&unk_1000A7100);
  sub_100085440();
  v9._countAndFlagsBits = 0x736C65646F6D202CLL;
  v9._object = (void *)0xEA0000000000203ALL;
  sub_100084D60(v9);
  v0[15] = *(void *)(v4 + v2);
  swift_getWitnessTable();
  sub_100085560();
  sub_100058FFC(60, v0[11], v0[12], v3, (uint64_t)&off_1000A15E8);
  swift_errorRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void sub_10007C09C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v43 = a3;
  uint64_t v5 = *a2;
  uint64_t v6 = sub_100004BB0(&qword_1000A8870);
  __chkstk_darwin(v6 - 8);
  uint64_t v45 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BB0(&qword_1000A6808);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100083E20();
  uint64_t v11 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v5 + 88);
  uint64_t v15 = *(void *)(v5 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t v41 = v15;
  uint64_t v42 = v14;
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = _s11DeviceModelVMa();
  uint64_t v46 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = sub_100084070();
  uint64_t v49 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v44 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = *a1;
  uint64_t v22 = (uint64_t *)((char *)a2 + qword_1000ABA68);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100084F90();
  uint64_t v23 = v46;
  swift_bridgeObjectRelease();
  sub_100084120();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v16);
  sub_100083DF0();
  uint64_t v24 = v49;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v47);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v10, 1, v19) == 1)
  {
    sub_10000C788((uint64_t)v10, &qword_1000A6808);
    return;
  }
  unint64_t v39 = v21;
  uint64_t v40 = v16;
  uint64_t v26 = v44;
  uint64_t v25 = v45;
  unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v47 = v19;
  v27(v44, v10, v19);
  id v28 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v29 = sub_100084D00();
  id v30 = [v28 initWithSuiteName:v29];

  if (v30)
  {
    id v31 = v30;
    NSString v32 = sub_100084D00();
    unsigned int v33 = [v31 BOOLForKey:v32];

    if (v33)
    {
      uint64_t v34 = type metadata accessor for CarrySettingsDetailViewModel();
      sub_100059088(0xD000000000000037, 0x800000010008BCE0, v34, (uint64_t)&off_1000A15E8);
      sub_100084060();
      uint64_t v35 = (uint64_t)v25;
LABEL_7:
      sub_10000C724(v43, v35, &qword_1000A8870);
      swift_beginAccess();
      uint64_t v36 = sub_100084F60();
      sub_100084EE0();
      sub_100080584(v39, *v22);
      uint64_t v37 = (void (*)(char *, void))sub_100084110();
      sub_100083DE0();
      v37(v48, 0);
      nullsub_1(v36);
      swift_endAccess();

      (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v47);
      return;
    }
  }
  uint64_t v35 = (uint64_t)v25;
  if (sub_100084060()) {
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v47);
}

uint64_t sub_10007C670()
{
  uint64_t v1 = v0 + qword_1000A8730;
  uint64_t v2 = sub_100004BB0(&qword_1000A67D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_1000A8738;
  uint64_t v4 = sub_100004BB0(&qword_1000A7710);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + qword_1000A8740, v4);
  uint64_t v6 = v0 + qword_1000A8748;
  uint64_t v7 = sub_100004BB0(&qword_1000A67C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + qword_1000A8750;
  uint64_t v9 = sub_100004BB0(&qword_1000A67B8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  uint64_t v11 = v0 + qword_1000A8758;
  uint64_t v12 = sub_100004BB0(&qword_1000A64E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  v10(v0 + qword_1000A8760, v9);
  uint64_t v13 = v0 + qword_1000A8768;
  uint64_t v14 = sub_100004BB0(&qword_1000A88A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v0 + qword_1000A8770;
  uint64_t v16 = sub_100004BB0(&qword_1000A67A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10007C930()
{
  sub_10007C670();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t type metadata accessor for CarrySettingsDetailViewModel()
{
  return sub_10000C880();
}

Swift::Int sub_10007C9A0()
{
  sub_100085630();
  sub_100085640(v0);
  return sub_100085650();
}

void sub_10007C9E8(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10000BD00(a3);
    unint64_t v4 = sub_100084420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10007CA60()
{
  uint64_t v0 = sub_100081B90();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10007CAA8()
{
  uint64_t v0 = sub_100081B7C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10007CAE4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005D30;
  return sub_10007997C();
}

uint64_t sub_10007CB70()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000052B8;
  return sub_10007A2E4();
}

uint64_t sub_10007CBFC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000052B8;
  return sub_10007AF68();
}

uint64_t sub_10007CC88()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005D30;
  return sub_10007B31C();
}

uint64_t sub_10007CD14@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CarrySettingsDetailViewModel();
  uint64_t result = sub_1000843A0();
  *a1 = result;
  return result;
}

uint64_t sub_10007CD58()
{
  return sub_100076080();
}

unint64_t sub_10007CD7C()
{
  return sub_1000786CC();
}

uint64_t sub_10007CDA0()
{
  return sub_100076450();
}

Swift::Int sub_10007CDC8()
{
  return sub_10007C9A0();
}

void sub_10007CDEC()
{
}

void sub_10007CE10()
{
  sub_100085640(v0);
}

Swift::Int sub_10007CE3C()
{
  return sub_100085650();
}

uint64_t sub_10007CE7C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CarrySettingsDetailViewModel();
  uint64_t result = sub_100085360();
  *a1 = result;
  return result;
}

uint64_t sub_10007CEC4(uint64_t *a1, uint64_t *a2)
{
  return sub_10007CF6C(*a1, *a2);
}

uint64_t sub_10007CED0(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[4] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[5] = result;
  return result;
}

uint64_t sub_10007CF50()
{
  return swift_getWitnessTable();
}

uint64_t sub_10007CF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + qword_1000ABA78);
  uint64_t v3 = *(void *)(a2 + qword_1000ABA78);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return static Array<A>.== infix(_:_:)(v2, v3, AssociatedTypeWitness, AssociatedConformanceWitness);
}

id sub_10007D010(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1000854A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1000854A0();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)sub_100085380())
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)sub_100085380();
LABEL_22:
    uint64_t v13 = v12;
    sub_100004F00();
    char v14 = sub_1000851D0();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)sub_100085380();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)sub_100085380();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        unint64_t v21 = v20;
        unint64_t v5 = sub_1000851D0();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        unint64_t v27 = *v25++;
        uint64_t v26 = v27;
        id v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_1000851D0();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007D2EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007690C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10007D318()
{
  return sub_1000769D4();
}

uint64_t sub_10007D358()
{
  return sub_100076050();
}

uint64_t sub_10007D37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007D3F4(a1, a2, a3, a4, &qword_1000A64D0, (uint64_t (*)(char *))sub_100076064);
}

uint64_t sub_10007D39C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000779D4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10007D3CC()
{
  return sub_100077A88();
}

uint64_t sub_10007D3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9 = sub_100004BB0(a5);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C724(a1, (uint64_t)v11, a5);
  return a6(v11);
}

uint64_t sub_10007D498(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_100085630();
  swift_bridgeObjectRetain();
  sub_100084D50();
  Swift::Int v8 = sub_100085650();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    id v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_100085580() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      id v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_100085580() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10007E8D4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10007D648(Swift::UInt *a1, Swift::UInt a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_1000852A0();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRetain();
      sub_100004BB0(&qword_1000A6788);
      swift_dynamicCast();
      *a1 = v24;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_100085290();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v19 = sub_10007DB9C(v7, result + 1);
    Swift::Int v25 = v19;
    if (*(void *)(v19 + 24) <= *(void *)(v19 + 16))
    {
      swift_retain();
      sub_10007E260();
      uint64_t v20 = v25;
    }
    else
    {
      uint64_t v20 = v19;
      swift_retain();
    }
    sub_10007E7AC(a2, v20);
    *uint64_t v3 = v20;
  }
  else
  {
    sub_100085630();
    sub_100085640(a2);
    Swift::Int v10 = sub_100085650();
    uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      unint64_t v23 = a1;
      uint64_t v13 = qword_1000ABA78;
      unint64_t v14 = *(void *)(*(void *)(*(void *)(v6 + 48) + 8 * v12) + qword_1000ABA78);
      uint64_t v15 = *(void *)(a2 + qword_1000ABA78);
      swift_bridgeObjectRetain();
      swift_retain();
      LOBYTE(v14) = sub_10007D010(v14, v15);
      swift_release();
      if (v14)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *unint64_t v23 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      uint64_t v16 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        unint64_t v17 = *(void *)(*(void *)(*(void *)(v6 + 48) + 8 * v12) + qword_1000ABA78);
        uint64_t v18 = *(void *)(a2 + v13);
        swift_retain();
        LOBYTE(v17) = sub_10007D010(v17, v18);
        swift_release();
        if (v17) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      a1 = v23;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v22 = swift_retain();
    sub_10007EA70(v22, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v26;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_10007D91C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1000852A0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100004F00();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_100085290();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_10007DD98(v7, result + 1);
    id v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_10007E50C();
      unint64_t v23 = v28;
    }
    else
    {
      unint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_10007E850((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_1000851C0(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100004F00();
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_1000851D0();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_1000851D0();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_10007EC2C((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

Swift::Int sub_10007DB9C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100004BB0(&qword_1000A67F0);
    uint64_t v2 = sub_100085320();
    uint64_t v14 = v2;
    sub_100085250();
    for (; sub_1000852C0(); ++*(void *)(v2 + 16))
    {
      sub_100004BB0(&qword_1000A6788);
      swift_dynamicCast();
      if (*(void *)(v2 + 24) <= *(void *)(v2 + 16))
      {
        sub_10007E260();
        uint64_t v2 = v14;
      }
      sub_100085630();
      sub_100085640(v13);
      Swift::Int result = sub_100085650();
      uint64_t v4 = v2 + 56;
      uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v6 = result & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v9 = 0;
        unint64_t v10 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v10 && (v9 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          BOOL v11 = v7 == v10;
          if (v7 == v10) {
            unint64_t v7 = 0;
          }
          v9 |= v11;
          uint64_t v12 = *(void *)(v4 + 8 * v7);
        }
        while (v12 == -1);
        unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      }
      *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_10007DD98(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100004BB0(&qword_1000A8878);
    uint64_t v2 = sub_100085320();
    uint64_t v14 = v2;
    sub_100085250();
    if (sub_1000852C0())
    {
      sub_100004F00();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10007E50C();
          uint64_t v2 = v14;
        }
        Swift::Int result = sub_1000851C0(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1000852C0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_10007DF80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BB0(&qword_1000A8868);
  uint64_t v3 = sub_100085310();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_100085630();
      sub_100084D50();
      uint64_t result = sub_100085650();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10007E260()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BB0(&qword_1000A67F0);
  uint64_t result = sub_100085310();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_100085630();
      sub_100085640(v18);
      uint64_t result = sub_100085650();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10007E50C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BB0(&qword_1000A8878);
  uint64_t v3 = sub_100085310();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1000851C0(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_10007E7AC(Swift::UInt a1, uint64_t a2)
{
  sub_100085630();
  sub_100085640(a1);
  sub_100085650();
  unint64_t result = sub_100085230();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_10007E850(uint64_t a1, void *a2)
{
  sub_1000851C0(a2[5]);
  unint64_t result = sub_100085230();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

Swift::Int sub_10007E8D4(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10007DF80();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (Swift::Int)sub_10007EDA4();
      goto LABEL_22;
    }
    sub_10007F2B0();
  }
  uint64_t v11 = *v4;
  sub_100085630();
  sub_100084D50();
  unint64_t result = sub_100085650();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_100085580(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_1000855B0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_100085580();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_10007EA70(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10007E260();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (Swift::Int)sub_10007EF58();
      goto LABEL_14;
    }
    sub_10007F560();
  }
  uint64_t v8 = *v3;
  sub_100085630();
  sub_100085640(v5);
  unint64_t result = sub_100085650();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = qword_1000ABA78;
    unint64_t v11 = *(void *)(*(void *)(*(void *)(v8 + 48) + 8 * a2) + qword_1000ABA78);
    uint64_t v12 = *(void *)(v5 + qword_1000ABA78);
    swift_retain();
    LOBYTE(v11) = sub_10007D010(v11, v12);
    unint64_t result = swift_release();
    if (v11)
    {
LABEL_13:
      sub_100004BB0(&qword_1000A6788);
      unint64_t result = sub_1000855B0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        unint64_t v14 = *(void *)(*(void *)(*(void *)(v8 + 48) + 8 * a2) + qword_1000ABA78);
        uint64_t v15 = *(void *)(v5 + v10);
        swift_retain();
        LOBYTE(v14) = sub_10007D010(v14, v15);
        unint64_t result = swift_release();
        if (v14) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v20;
  *(void *)(*v20 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

void sub_10007EC2C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10007E50C();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10007F104();
      goto LABEL_14;
    }
    sub_10007F7E4();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = sub_1000851C0(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100004F00();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1000851D0();

    if (v12)
    {
LABEL_13:
      sub_1000855B0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1000851D0();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

void *sub_10007EDA4()
{
  uint64_t v1 = v0;
  sub_100004BB0(&qword_1000A8868);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100085300();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10007EF58()
{
  uint64_t v1 = v0;
  sub_100004BB0(&qword_1000A67F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100085300();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10007F104()
{
  uint64_t v1 = v0;
  sub_100004BB0(&qword_1000A8878);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100085300();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10007F2B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BB0(&qword_1000A8868);
  uint64_t v3 = sub_100085310();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_100085630();
    swift_bridgeObjectRetain();
    sub_100084D50();
    uint64_t result = sub_100085650();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10007F560()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BB0(&qword_1000A67F0);
  uint64_t result = sub_100085310();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_100085630();
    sub_100085640(v18);
    uint64_t result = sub_100085650();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_retain();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10007F7E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BB0(&qword_1000A8878);
  uint64_t v3 = sub_100085310();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1000851C0(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10007FA60(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000809AC((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_10007FACC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_10007FACC(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_100085520(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100080174(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v101 = result;
  Swift::String v98 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v104 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_117:
      uint64_t result = (uint64_t)v10;
      Swift::String v100 = v7;
      if (v11 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v91) {
            goto LABEL_159;
          }
          uint64_t v93 = result;
          uint64_t v94 = *(void *)(result + 32 + 16 * v92);
          uint64_t v95 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_100080244((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_100080570(v93);
            uint64_t v93 = result;
          }
          if (v92 >= *(void *)(v93 + 16)) {
            goto LABEL_148;
          }
          Swift::String v96 = (void *)(v93 + 32 + 16 * v92);
          *Swift::String v96 = v94;
          v96[1] = v95;
          unint64_t v97 = *(void *)(v93 + 16);
          if (v11 > v97) {
            goto LABEL_149;
          }
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          uint64_t result = v93;
          *(void *)(v93 + 16) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v100[2] = 0;
      return swift_bridgeObjectRelease();
    }
    Swift::String v100 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_100084F00();
    *(void *)(result + 16) = v6;
    Swift::String v100 = (void *)result;
    uint64_t v104 = (char *)(result + 32);
  }
  Swift::Int v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v99 = v9 + 8;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v102 = v3;
  while (1)
  {
    Swift::Int v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    unint64_t v13 = (uint64_t *)(v9 + 16 * v8);
    uint64_t result = *v13;
    uint64_t v14 = v13[1];
    unint64_t v15 = (void *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      Swift::Int v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_100085580();
      int v17 = result;
      Swift::Int v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    Swift::Int v19 = (void *)(v99 + 16 * v18);
    do
    {
      uint64_t result = *(v19 - 1);
      uint64_t v21 = (void *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if (v17) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_100085580();
        if ((v17 ^ result)) {
          goto LABEL_36;
        }
      }
      v19 += 2;
      Swift::Int v20 = v18 + 1;
      Swift::Int v8 = v18;
      Swift::Int v18 = v20;
    }
    while (v20 < v3);
    Swift::Int v18 = v20;
LABEL_36:
    Swift::Int v8 = v18;
    if (v17)
    {
LABEL_37:
      if (v18 < v12) {
        goto LABEL_155;
      }
      if (v12 < v18)
      {
        uint64_t v23 = 16 * v18;
        uint64_t v24 = 16 * v12;
        Swift::Int v25 = v18;
        Swift::Int v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v27 = v9 + v23;
            uint64_t v28 = *(void *)(v9 + v24);
            uint64_t v29 = *(void *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(void *)(v27 - 16) = v28;
            *(void *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      Swift::Int v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v101) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100080474(0, *((void *)v10 + 2) + 1, 1, v10);
      uint64_t v10 = (char *)result;
    }
    unint64_t v38 = *((void *)v10 + 2);
    unint64_t v37 = *((void *)v10 + 3);
    unint64_t v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      uint64_t result = (uint64_t)sub_100080474((char *)(v37 > 1), v38 + 1, 1, v10);
      uint64_t v10 = (char *)result;
    }
    *((void *)v10 + 2) = v11;
    unint64_t v39 = v10 + 32;
    uint64_t v40 = &v10[16 * v38 + 32];
    *(void *)uint64_t v40 = v12;
    *((void *)v40 + 1) = v8;
    if (v38)
    {
      Swift::Int v103 = v8;
      while (1)
      {
        unint64_t v41 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v46 = &v39[2 * v11];
          uint64_t v47 = *(v46 - 8);
          uint64_t v48 = *(v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_134;
          }
          uint64_t v51 = *(v46 - 6);
          uint64_t v50 = *(v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_135;
          }
          unint64_t v53 = v11 - 2;
          uint64_t v54 = &v39[2 * v11 - 4];
          uint64_t v56 = *v54;
          uint64_t v55 = v54[1];
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_136;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_138;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = &v39[2 * v41];
            uint64_t v78 = *v76;
            uint64_t v77 = v76[1];
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_144;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v70 = *((void *)v10 + 4);
            uint64_t v71 = *((void *)v10 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_98;
          }
          uint64_t v43 = *((void *)v10 + 4);
          uint64_t v42 = *((void *)v10 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_137;
        }
        unint64_t v53 = v11 - 2;
        uint64_t v59 = &v39[2 * v11 - 4];
        uint64_t v61 = *v59;
        uint64_t v60 = v59[1];
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_139;
        }
        uint64_t v65 = &v39[2 * v41];
        uint64_t v67 = *v65;
        uint64_t v66 = v65[1];
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_141;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_143;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_104:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v64) {
          goto LABEL_140;
        }
        uint64_t v72 = &v39[2 * v41];
        uint64_t v74 = *v72;
        uint64_t v73 = v72[1];
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_142;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v81 = v9;
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v82 = v10;
        uint64_t v83 = &v39[2 * v80];
        uint64_t v84 = *v83;
        uint64_t v85 = v39;
        unint64_t v86 = v41;
        uint64_t v87 = &v39[2 * v41];
        uint64_t v88 = v87[1];
        uint64_t v89 = v81;
        uint64_t result = sub_100080244((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1) {
          goto LABEL_114;
        }
        if (v88 < v84) {
          goto LABEL_131;
        }
        if (v86 > *((void *)v82 + 2)) {
          goto LABEL_132;
        }
        uint64_t *v83 = v84;
        v85[2 * v80 + 1] = v88;
        unint64_t v90 = *((void *)v82 + 2);
        if (v86 >= v90) {
          goto LABEL_133;
        }
        uint64_t v10 = v82;
        unint64_t v11 = v90 - 1;
        uint64_t result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        unint64_t v39 = v85;
        *((void *)v82 + 2) = v90 - 1;
        uint64_t v9 = v89;
        Swift::Int v8 = v103;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v3 = v102;
    if (v8 >= v102)
    {
      uint64_t v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101)) {
    goto LABEL_153;
  }
  if (v12 + v101 >= v3) {
    Swift::Int v30 = v3;
  }
  else {
    Swift::Int v30 = v12 + v101;
  }
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      id v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        NSString v32 = (uint64_t *)(v9 + 16 * v8);
        uint64_t result = *v32;
        uint64_t v33 = v32[1];
        Swift::Int v34 = v12;
        uint64_t v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1)) {
            break;
          }
          uint64_t result = sub_100085580();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          uint64_t result = *v35;
          uint64_t v33 = v35[1];
          *(_OWORD *)uint64_t v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      Swift::Int v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_100080174(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    Swift::Int v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_100085580(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)Swift::Int v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100080244(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_48;
    }
    int v17 = (char *)(a3 - 16);
    while (1)
    {
      Swift::Int v18 = v17 + 16;
      Swift::Int v19 = v6 - 16;
      BOOL v20 = *((void *)v14 - 2) == *((void *)v6 - 2) && *((void *)v14 - 1) == *((void *)v6 - 1);
      if (v20 || (sub_100085580() & 1) == 0)
      {
        Swift::Int v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)int v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        BOOL v21 = v17 >= v14;
        v14 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        BOOL v21 = v17 >= v6;
        v6 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (v15 || (sub_100085580() & 1) == 0) {
        break;
      }
      int64_t v16 = v6;
      BOOL v15 = v7 == v6;
      v6 += 16;
      if (!v15) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_23;
      }
    }
    int64_t v16 = v4;
    BOOL v15 = v7 == v4;
    v4 += 16;
    if (v15) {
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  }
  return 1;
}

char *sub_100080474(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BB0(&qword_1000A8898);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100080570(uint64_t a1)
{
  return sub_100080474(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100080584(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1000805D8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100080660(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100080700(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v5 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_1000852B0();
      swift_unknownObjectRetain();
      sub_100004BB0(&qword_1000A6788);
      swift_dynamicCast();
      Swift::UInt v6 = v17;
      swift_unknownObjectRelease();
      return v6;
    }
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
    {
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (*(_DWORD *)(a4 + 36) == a2)
    {
LABEL_14:
      Swift::UInt v6 = *(void *)(*(void *)(a4 + 48) + 8 * v5);
      swift_retain();
      return v6;
    }
    __break(1u);
  }
  if (sub_100085270() != *(_DWORD *)(a4 + 36))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_100085280();
  swift_unknownObjectRetain();
  sub_100004BB0(&qword_1000A6788);
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_100085630();
  sub_100085640(v17);
  Swift::Int v7 = sub_100085650();
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v5 = v7 & ~v8;
  uint64_t v9 = a4 + 56;
  if (((*(void *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_24:
    swift_release();
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v10 = qword_1000ABA78;
  unint64_t v11 = *(void *)(*(void *)(*(void *)(a4 + 48) + 8 * v5) + qword_1000ABA78);
  uint64_t v12 = *(void *)(v17 + qword_1000ABA78);
  swift_retain();
  LOBYTE(v11) = sub_10007D010(v11, v12);
  swift_release();
  if (v11) {
    goto LABEL_13;
  }
  uint64_t v14 = ~v8;
  unint64_t v5 = (v5 + 1) & v14;
  if ((*(void *)(v9 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    while (1)
    {
      unint64_t v15 = *(void *)(*(void *)(*(void *)(a4 + 48) + 8 * v5) + qword_1000ABA78);
      uint64_t v16 = *(void *)(v17 + v10);
      swift_retain();
      LOBYTE(v15) = sub_10007D010(v15, v16);
      swift_release();
      if (v15) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v14;
      if (((*(void *)(v9 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      {
        swift_release();
        __break(1u);
        goto LABEL_20;
      }
    }
LABEL_13:
    swift_release();
    goto LABEL_14;
  }
LABEL_25:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

char *sub_1000809AC(uint64_t a1)
{
  return sub_10006CCA4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000809C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_100085060();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10007D498(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_100080A58(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000854A0();
    swift_bridgeObjectRelease();
  }
  sub_100004BB0(&qword_1000A6788);
  sub_10000C360((unint64_t *)&qword_1000A6790, &qword_1000A6788);
  uint64_t result = sub_100085060();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000854A0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        Swift::UInt v6 = sub_100085380();
        sub_10007D648(&v9, v6);
        swift_release();
      }
    }
    else
    {
      Swift::Int v7 = (Swift::UInt *)(a1 + 32);
      do
      {
        Swift::UInt v8 = *v7++;
        swift_retain();
        sub_10007D648(&v9, v8);
        swift_release();
        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100080BD0(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000854A0();
    swift_bridgeObjectRelease();
  }
  sub_100004F00();
  sub_100081B24();
  uint64_t result = sub_100085060();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000854A0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        Swift::UInt v6 = (void *)sub_100085380();
        sub_10007D91C(&v9, v6);
      }
    }
    else
    {
      Swift::Int v7 = (void **)(a1 + 32);
      do
      {
        Swift::UInt v8 = *v7++;
        sub_10007D91C(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100080D14(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

void *sub_100080D68(uint64_t a1, void *a2)
{
  Swift::String v98 = a2;
  uint64_t v97 = a1;
  uint64_t v3 = *v2;
  uint64_t v96 = sub_100004BB0(&qword_1000A67A8);
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v94 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BB0(&qword_1000A67B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v93 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100004BB0(&qword_1000A64E8);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  unint64_t v90 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100004BB0(&qword_1000A67B8);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v87 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BB0(&qword_1000A67C0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v86 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_100004BB0(&qword_1000A67C8);
  uint64_t v12 = *((void *)v86 - 1);
  __chkstk_darwin(v86);
  uint64_t v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004BB0(&qword_1000A67D0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  Swift::Int v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004BB0(&qword_1000A64D0);
  __chkstk_darwin(v19 - 8);
  BOOL v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = (char *)v2 + qword_1000A8730;
  uint64_t v23 = sub_1000840F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v21, 1, 1, v23);
  uint64_t v100 = *(void *)(v3 + 80);
  uint64_t v99 = *(void *)(v3 + 88);
  uint64_t v24 = v2;
  sub_10007779C((uint64_t)v21, v25, v26, &qword_1000A64D0);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v18, v15);
  uint64_t v27 = (char *)v2 + qword_1000A8748;
  uint64_t v112 = 0;
  uint64_t v113 = 0;
  sub_100004BB0(&qword_1000A67D8);
  sub_1000843E0();
  (*(void (**)(char *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v12 + 32))(v27, v14, v86);
  uint64_t v28 = (char *)v2 + qword_1000A8750;
  uint64_t v29 = sub_100084000();
  unint64_t v86 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  uint64_t v30 = (uint64_t)v11;
  v86(v11, 1, 1, v29);
  id v31 = v87;
  sub_10007779C(v30, v32, v33, &qword_1000A67C0);
  Swift::Int v34 = *(void (**)(char *, char *, uint64_t))(v88 + 32);
  uint64_t v35 = v89;
  v34(v28, v31, v89);
  uint64_t v36 = (char *)v2 + qword_1000A8758;
  LOBYTE(v112) = 1;
  unint64_t v37 = v90;
  sub_1000843E0();
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v36, v37, v92);
  unint64_t v38 = (void *)((char *)v24 + qword_1000ABA58);
  *unint64_t v38 = 0;
  v38[1] = 0;
  unint64_t v39 = (char *)v24 + qword_1000A8760;
  v86((char *)v30, 1, 1, v29);
  sub_10007779C(v30, v40, v41, &qword_1000A67C0);
  v34(v39, v31, v35);
  uint64_t v42 = (void *)((char *)v24 + qword_1000ABA60);
  *uint64_t v42 = 0;
  v42[1] = 0;
  uint64_t v43 = (char *)v24 + qword_1000A8770;
  uint64_t v44 = sub_1000840C0();
  uint64_t v45 = (uint64_t)v93;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v93, 1, 1, v44);
  uint64_t v46 = v94;
  sub_10007779C(v45, v47, v48, &qword_1000A67B0);
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v43, v46, v96);
  uint64_t v49 = v97;
  *(void *)((char *)v24 + qword_1000ABA68) = v97;
  *(void *)((char *)v24 + qword_1000ABA70) = v98;
  uint64_t v112 = v49;
  uint64_t v50 = v100;
  uint64_t v51 = v99;
  uint64_t v110 = v100;
  uint64_t v111 = v99;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v107 = v50;
  uint64_t v108 = v51;
  uint64_t v109 = KeyPath;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = v51;
  swift_getAssociatedConformanceWitness();
  _s11DeviceModelVMa();
  uint64_t v55 = sub_100084F60();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v58 = sub_100012810((void (*)(char *, char *))sub_100082240, (uint64_t)v106, v55, AssociatedTypeWitness, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v57);
  swift_release();
  Swift::String v98 = v24;
  *(void *)((char *)v24 + qword_1000ABA78) = v58;
  uint64_t v112 = v49;
  uint64_t v104 = v50;
  uint64_t v105 = v54;
  uint64_t v59 = swift_getKeyPath();
  uint64_t v101 = v50;
  uint64_t v102 = v54;
  uint64_t v103 = v59;
  swift_getWitnessTable();
  sub_100084DE0();
  swift_release();
  uint64_t v60 = swift_bridgeObjectRetain();
  uint64_t v61 = sub_1000809C0(v60);
  swift_bridgeObjectRelease();
  BOOL v62 = *(void *)(v61 + 16) == 1;
  uint64_t v96 = WitnessTable;
  if (v62)
  {
    uint64_t v63 = sub_100075C80(v61);
    unint64_t v65 = v64;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v66 = v49;
    if (v65) {
      goto LABEL_5;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v66 = v49;
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = 0;
  unint64_t v65 = 0xE000000000000000;
LABEL_5:
  swift_beginAccess();
  uint64_t v114 = v63;
  unint64_t v115 = v65;
  sub_1000843E0();
  uint64_t v67 = swift_endAccess();
  uint64_t v112 = v66;
  __chkstk_darwin(v67);
  uint64_t v68 = v100;
  uint64_t v69 = v99;
  *(&v85 - 2) = v100;
  *(&v85 - 1) = v69;
  uint64_t v70 = swift_getKeyPath();
  uint64_t v71 = __chkstk_darwin(v70);
  *(&v85 - 4) = v68;
  *(&v85 - 3) = v69;
  *(&v85 - 2) = v71;
  sub_100084DE0();
  swift_release();
  uint64_t v72 = swift_bridgeObjectRetain();
  uint64_t v73 = sub_1000809C0(v72);
  swift_bridgeObjectRelease();
  if (*(void *)(v73 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v77 = v96;
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v74 = 0;
    unint64_t v76 = 0xE000000000000000;
    goto LABEL_10;
  }
  uint64_t v74 = sub_100075C80(v73);
  unint64_t v76 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v77 = v96;
  if (!v76) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v78 = v98;
  swift_beginAccess();
  uint64_t v114 = v74;
  unint64_t v115 = v76;
  sub_1000843E0();
  uint64_t v79 = swift_endAccess();
  uint64_t v112 = v66;
  __chkstk_darwin(v79);
  uint64_t v80 = v99;
  *(&v85 - 2) = v100;
  *(&v85 - 1) = v80;
  uint64_t v81 = type metadata accessor for ProfileListViewModel();
  uint64_t v83 = sub_100012810((void (*)(char *, char *))sub_100081B04, (uint64_t)(&v85 - 4), v55, v81, (uint64_t)&type metadata for Never, v77, (uint64_t)&protocol witness table for Never, v82);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v114 = v83;
  sub_100004BB0(&qword_1000A67E0);
  sub_1000843E0();
  swift_endAccess();
  return v78;
}

void *sub_10008194C(uint64_t a1, void *a2)
{
  return sub_100080D68(a1, a2);
}

uint64_t sub_1000819A0()
{
  return sub_100084120();
}

uint64_t sub_1000819C8()
{
  return 16;
}

__n128 sub_1000819D4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000819E0()
{
  return sub_100083DD0();
}

uint64_t sub_100081A08()
{
  return 16;
}

__n128 sub_100081A14(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081A20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100083DB0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100081A4C()
{
  return 16;
}

__n128 sub_100081A58(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081A64()
{
  return swift_getAtKeyPath();
}

uint64_t sub_100081A90()
{
  return 16;
}

__n128 sub_100081A9C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081AA8()
{
  return 16;
}

__n128 sub_100081AB4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081AC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100083D90();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100081AEC()
{
  return 16;
}

__n128 sub_100081AF8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081B04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000797A4(a1, a2);
}

unint64_t sub_100081B24()
{
  unint64_t result = qword_1000A7CC0;
  if (!qword_1000A7CC0)
  {
    sub_100004F00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7CC0);
  }
  return result;
}

uint64_t sub_100081B7C()
{
  return *(void *)(v0 + qword_1000ABA60);
}

uint64_t sub_100081B90()
{
  return *(void *)(v0 + qword_1000ABA58);
}

void sub_100081BA4(unint64_t *a1)
{
  sub_10007C09C(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_100081BC0()
{
  unint64_t result = qword_1000A8888;
  if (!qword_1000A8888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8888);
  }
  return result;
}

uint64_t sub_100081C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BB0(&qword_1000A67C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100081C7C()
{
  return sub_1000796D0();
}

uint64_t sub_100081CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007D3F4(a1, a2, a3, a4, &qword_1000A67B0, (uint64_t (*)(char *))sub_1000796E4);
}

uint64_t sub_100081CD4()
{
  return 16;
}

__n128 sub_100081CE0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081CEC()
{
  return 16;
}

__n128 sub_100081CF8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081D04()
{
  return sub_100083DF0();
}

uint64_t sub_100081D2C()
{
  return 16;
}

__n128 sub_100081D38(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081D44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100084020();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100081D70()
{
  return 16;
}

__n128 sub_100081D7C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081D88()
{
  return 16;
}

__n128 sub_100081D94(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081DA0()
{
  return 16;
}

__n128 sub_100081DAC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081DB8()
{
  return sub_100084040();
}

uint64_t sub_100081DDC()
{
  return 16;
}

__n128 sub_100081DE8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081DF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100083E40();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100081E20()
{
  return 16;
}

__n128 sub_100081E2C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081E38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100078258();
  *a1 = result;
  return result;
}

uint64_t sub_100081E64()
{
  return sub_10007830C();
}

uint64_t sub_100081E90()
{
  return 16;
}

__n128 sub_100081E9C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081EA8()
{
  return sub_1000781E0();
}

uint64_t sub_100081ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007D3F4(a1, a2, a3, a4, &qword_1000A67C0, (uint64_t (*)(char *))sub_1000781F4);
}

uint64_t sub_100081F00()
{
  return 16;
}

__n128 sub_100081F0C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081F18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000779D4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100081F48()
{
  return sub_100077A88();
}

uint64_t sub_100081F70()
{
  return 16;
}

__n128 sub_100081F7C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081F88()
{
  return sub_100077850();
}

uint64_t sub_100081FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007D3F4(a1, a2, a3, a4, &qword_1000A67C0, (uint64_t (*)(char *))sub_100077864);
}

uint64_t sub_100081FE0()
{
  return 16;
}

__n128 sub_100081FEC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100081FF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007761C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100082024()
{
  return sub_1000776D0();
}

uint64_t sub_100082064()
{
  return 16;
}

__n128 sub_100082070(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10008207C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10008210C(sub_10007690C, a1);
}

uint64_t sub_100082094(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100082154(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1000769D4);
}

uint64_t sub_1000820AC()
{
  return 16;
}

__n128 sub_1000820B8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000820C4()
{
  return 16;
}

__n128 sub_1000820D0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000820DC()
{
  return 16;
}

__n128 sub_1000820E8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000820F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10008210C(sub_100076554, a1);
}

uint64_t sub_10008210C@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10008213C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100082154(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_100076568);
}

uint64_t sub_100082154(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t sub_10008219C()
{
  return 16;
}

__n128 sub_1000821A8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000821B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100076274(a1);
}

uint64_t sub_1000821D0()
{
  return sub_100076050();
}

uint64_t sub_1000821F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007D3F4(a1, a2, a3, a4, &qword_1000A64D0, (uint64_t (*)(char *))sub_100076064);
}

uint64_t sub_100082228()
{
  return 16;
}

__n128 sub_100082234(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100082240()
{
  return sub_100081A64();
}

uint64_t sub_100082258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    id v5 = a5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000822A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void (*a12)(void))
{
  uint64_t v12 = (uint64_t (*)(void))a12;
  if (a11 == 1)
  {
    a12();
    uint64_t v12 = (uint64_t (*)(void))a12;
  }
  else if (a11)
  {
    return result;
  }
  return v12();
}

__n128 initializeWithTake for StatusInfoView.Status(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

ValueMetadata *type metadata accessor for StatusInfoView()
{
  return &type metadata for StatusInfoView;
}

uint64_t sub_100082398()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000823B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v133 = a2;
  uint64_t v131 = sub_100004BB0(&qword_1000A88C0);
  __chkstk_darwin(v131);
  uint64_t v132 = (uint64_t)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100004BB0(&qword_1000A88C8);
  __chkstk_darwin(v112);
  long long v5 = (uint64_t *)((char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v113 = sub_100004BB0(&qword_1000A88D0);
  __chkstk_darwin(v113);
  uint64_t v7 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100004BB0(&qword_1000A88D8);
  __chkstk_darwin(v130);
  uint64_t v114 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000847C0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004BB0(&qword_1000A6DF8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004BB0(&qword_1000A88E0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v97 - v22;
  uint64_t v24 = *(void *)a1;
  uint64_t v25 = *(void *)(a1 + 8);
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v28 = *(void **)(a1 + 32);
  if (*(unsigned char *)(a1 + 80))
  {
    if (*(unsigned char *)(a1 + 80) == 1)
    {
      uint64_t v108 = *(void *)a1;
      uint64_t v109 = v28;
      uint64_t v110 = v26;
      uint64_t v29 = *(void *)(a1 + 48);
      uint64_t v101 = *(void *)(a1 + 40);
      uint64_t v31 = *(void *)(a1 + 56);
      uint64_t v30 = *(void *)(a1 + 64);
      uint64_t v32 = *(void **)(a1 + 72);
      uint64_t v111 = v25;
      uint64_t v104 = v27;
      uint64_t v102 = v30;
      if (v25)
      {
        uint64_t v33 = v27;
        sub_100083838(a1, (void (*)(void))sub_100082258);
        Swift::Int v34 = v109;
        sub_100082258(v108, v25, v33, v110, v109);
        id v35 = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_100084880();
        uint64_t v120 = v37;
        uint64_t v121 = v36;
        uint64_t v134 = v38;
        long long v123 = (char *)(v39 & 1);
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v128 = sub_100084810();
        uint64_t v127 = swift_getKeyPath();
        long long v122 = (char *)sub_1000849F0();
        uint64_t v126 = swift_getKeyPath();

        uint64_t v30 = v102;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v125 = 1;
      }
      else
      {
        sub_100083838(a1, (void (*)(void))sub_100082258);
        uint64_t v120 = 0;
        uint64_t v121 = 0;
        long long v122 = 0;
        long long v123 = 0;
        uint64_t v134 = 0;
        uint64_t v128 = 0;
        uint64_t KeyPath = 0;
        uint64_t v125 = 0;
        uint64_t v126 = 0;
        uint64_t v127 = 0;
      }
      uint64_t v105 = v5;
      uint64_t v100 = v32;
      uint64_t v99 = v31;
      uint64_t v98 = v29;
      if (v29)
      {
        sub_100082258(v101, v29, v31, v30, v32);
        id v52 = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v115 = sub_100084880();
        uint64_t v124 = v53;
        long long v117 = v54;
        uint64_t v106 = v55 & 1;
        uint64_t v116 = swift_getKeyPath();
        uint64_t v119 = sub_100084800();
        uint64_t v118 = swift_getKeyPath();
        uint64_t v56 = sub_1000849F0();
        uint64_t v57 = swift_getKeyPath();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v107 = 1;
      }
      else
      {
        uint64_t v115 = 0;
        uint64_t v124 = 0;
        uint64_t v106 = 0;
        uint64_t v116 = 0;
        long long v117 = 0;
        uint64_t v107 = 0;
        uint64_t v118 = 0;
        uint64_t v119 = 0;
        uint64_t v57 = 0;
        uint64_t v56 = 0;
      }
      uint64_t v103 = v57;
      uint64_t v73 = v120;
      uint64_t v72 = v121;
      char v74 = (char)v123;
      sub_100083518(v121, v120, (char)v123, v134);
      uint64_t v75 = v56;
      uint64_t v76 = v115;
      uint64_t v77 = v75;
      sub_100083518(v115, v124, v106, (uint64_t)v117);
      sub_100083518(v72, v73, v74, v134);
      uint64_t v97 = v77;
      uint64_t v78 = v124;
      LOBYTE(v73) = v106;
      uint64_t v79 = v117;
      sub_100083518(v76, v124, v106, (uint64_t)v117);
      sub_1000835A4(v76, v78, v73, (uint64_t)v79);
      uint64_t v80 = (uint64_t)v122;
      uint64_t v81 = v126;
      uint64_t v82 = v120;
      uint64_t v83 = v121;
      uint64_t v84 = v123;
      uint64_t v85 = v128;
      uint64_t v86 = KeyPath;
      uint64_t v87 = v125;
      uint64_t v88 = v127;
      sub_1000835A4(v121, v120, (char)v123, v134);
      uint64_t v89 = v105;
      *uint64_t v105 = v83;
      v89[1] = v82;
      uint64_t v90 = v134;
      v89[2] = (uint64_t)v84;
      v89[3] = v90;
      v89[4] = v86;
      v89[5] = v87;
      v89[6] = v88;
      v89[7] = v85;
      v89[8] = v81;
      v89[9] = v80;
      uint64_t v91 = v124;
      v89[10] = v115;
      v89[11] = v91;
      LOBYTE(v86) = v106;
      uint64_t v92 = v117;
      v89[12] = v106;
      v89[13] = (uint64_t)v92;
      uint64_t v93 = v107;
      v89[14] = v116;
      v89[15] = v93;
      uint64_t v94 = v119;
      v89[16] = v118;
      v89[17] = v94;
      uint64_t v95 = v97;
      v89[18] = v103;
      v89[19] = v95;
      swift_storeEnumTagMultiPayload();
      sub_100004BB0(&qword_1000A8900);
      sub_10000C360(&qword_1000A88F0, &qword_1000A88D0);
      sub_10000C360(&qword_1000A88F8, &qword_1000A8900);
      uint64_t v96 = (uint64_t)v114;
      sub_100084780();
      sub_10000C724(v96, v132, &qword_1000A88D8);
      swift_storeEnumTagMultiPayload();
      sub_100083458();
      sub_100084780();
      sub_10000C2BC(v101, v98, v99, v102, v100);
      sub_10000C2BC(v108, v111, v104, v110, v109);
      sub_1000835A4(v115, v124, v86, (uint64_t)v117);
      sub_1000835A4(v121, v120, (char)v123, v134);
      return sub_10000C788(v96, &qword_1000A88D8);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_100083458();
      return sub_100084780();
    }
  }
  else
  {
    uint64_t v105 = v5;
    long long v122 = v7;
    uint64_t v128 = v19;
    uint64_t v108 = v24;
    uint64_t v111 = v25;
    long long v123 = v23;
    uint64_t v40 = v21;
    uint64_t v41 = v25;
    uint64_t v104 = v27;
    uint64_t v110 = v26;
    uint64_t v109 = v28;
    uint64_t v42 = v20;
    sub_100082258(v24, v41, v27, v26, v28);
    sub_1000844A0();
    sub_1000847B0();
    sub_10000C360(&qword_1000A6E30, &qword_1000A6DF8);
    sub_1000837E0();
    sub_1000848C0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t KeyPath = v42;
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
    uint64_t v121 = v40;
    v43(v123, v40, v128);
    uint64_t v118 = a1;
    if (v111)
    {
      sub_100083838(a1, (void (*)(void))sub_100082258);
      uint64_t v44 = v109;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v124 = sub_100084880();
      uint64_t v46 = v45;
      uint64_t v126 = v47 & 1;
      uint64_t v127 = v48;
      uint64_t v120 = swift_getKeyPath();
      uint64_t v134 = sub_100084800();
      uint64_t v119 = swift_getKeyPath();
      uint64_t v125 = sub_1000849F0();
      uint64_t v49 = swift_getKeyPath();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v50 = 1;
    }
    else
    {
      uint64_t v124 = 0;
      uint64_t v125 = 0;
      uint64_t v46 = 0;
      uint64_t v126 = 0;
      uint64_t v127 = 0;
      uint64_t v119 = 0;
      uint64_t v120 = 0;
      uint64_t v50 = 0;
      uint64_t v134 = 0;
      uint64_t v49 = 0;
    }
    uint64_t v59 = v121;
    uint64_t v58 = (uint64_t)v122;
    uint64_t v60 = v128;
    uint64_t v61 = *(void (**)(uint64_t, char *, uint64_t))(KeyPath + 16);
    v61(v121, v123, v128);
    v61(v58, (char *)v59, v60);
    BOOL v62 = (void *)(v58 + *(int *)(sub_100004BB0(&qword_1000A8910) + 48));
    uint64_t v64 = v124;
    uint64_t v63 = v125;
    *BOOL v62 = v124;
    v62[1] = v46;
    uint64_t v65 = v126;
    uint64_t v66 = v127;
    v62[2] = v126;
    v62[3] = v66;
    uint64_t v67 = v119;
    v62[4] = v120;
    v62[5] = v50;
    v62[6] = v67;
    uint64_t v68 = v134;
    v62[7] = v134;
    v62[8] = v49;
    uint64_t v134 = v68;
    v62[9] = v63;
    uint64_t v125 = v63;
    uint64_t v126 = v65;
    sub_100083518(v64, v46, v65, v66);
    uint64_t v115 = v49;
    uint64_t v124 = v64;
    uint64_t v111 = v46;
    uint64_t v116 = v50;
    sub_100083518(v64, v46, v65, v66);
    uint64_t v127 = v66;
    sub_1000835A4(v64, v46, v65, v66);
    uint64_t v69 = *(void (**)(void, void))(KeyPath + 8);
    KeyPath += 8;
    long long v117 = (uint64_t (*)(void, void))v69;
    v69(v121, v128);
    uint64_t v70 = (uint64_t)v122;
    sub_10000C724((uint64_t)v122, (uint64_t)v105, &qword_1000A88D0);
    swift_storeEnumTagMultiPayload();
    sub_100004BB0(&qword_1000A8900);
    sub_10000C360(&qword_1000A88F0, &qword_1000A88D0);
    sub_10000C360(&qword_1000A88F8, &qword_1000A8900);
    uint64_t v71 = (uint64_t)v114;
    sub_100084780();
    sub_10000C788(v70, &qword_1000A88D0);
    sub_10000C724(v71, v132, &qword_1000A88D8);
    swift_storeEnumTagMultiPayload();
    sub_100083458();
    sub_100084780();
    sub_100083838(v118, (void (*)(void))sub_10000C2BC);
    sub_1000835A4(v124, v111, v126, v127);
    sub_10000C788(v71, &qword_1000A88D8);
    return v117(v123, v128);
  }
}

uint64_t sub_10008331C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BB0(&qword_1000A88A8);
  __chkstk_darwin(v3 - 8);
  long long v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *(_OWORD *)(v1 + 48);
  void v20[2] = *(_OWORD *)(v1 + 32);
  void v20[3] = v6;
  v20[4] = *(_OWORD *)(v1 + 64);
  char v21 = *(unsigned char *)(v1 + 80);
  long long v7 = *(_OWORD *)(v1 + 16);
  v20[0] = *(_OWORD *)v1;
  v20[1] = v7;
  *(void *)long long v5 = sub_100084730();
  *((void *)v5 + 1) = 0x4020000000000000;
  v5[16] = 0;
  uint64_t v8 = sub_100004BB0(&qword_1000A88B0);
  sub_1000823B4((uint64_t)v20, (uint64_t)&v5[*(int *)(v8 + 44)]);
  char v9 = sub_1000847E0();
  sub_100084480();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_10000C724((uint64_t)v5, a1, &qword_1000A88A8);
  uint64_t v18 = a1 + *(int *)(sub_100004BB0(&qword_1000A88B8) + 36);
  *(unsigned char *)uint64_t v18 = v9;
  *(void *)(v18 + 8) = v11;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v15;
  *(void *)(v18 + 32) = v17;
  *(unsigned char *)(v18 + 40) = 0;
  return sub_10000C788((uint64_t)v5, &qword_1000A88A8);
}

unint64_t sub_100083458()
{
  unint64_t result = qword_1000A88E8;
  if (!qword_1000A88E8)
  {
    sub_10000BD00(&qword_1000A88D8);
    sub_10000C360(&qword_1000A88F0, &qword_1000A88D0);
    sub_10000C360(&qword_1000A88F8, &qword_1000A8900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A88E8);
  }
  return result;
}

uint64_t sub_100083518(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10003A38C(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000835A4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100039514(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100083630@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100084600();
  *a1 = result;
  return result;
}

uint64_t sub_10008365C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100084600();
  *a1 = result;
  return result;
}

uint64_t sub_100083688()
{
  return sub_100084610();
}

uint64_t sub_1000836B0()
{
  return sub_100084610();
}

uint64_t sub_1000836D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000845C0();
  *a1 = result;
  return result;
}

uint64_t sub_100083704()
{
  return sub_1000845D0();
}

uint64_t sub_100083730@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100084620();
  *a1 = result;
  return result;
}

uint64_t sub_10008375C()
{
  return sub_100084630();
}

uint64_t sub_100083788@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000845C0();
  *a1 = result;
  return result;
}

uint64_t sub_1000837B4()
{
  return sub_1000845D0();
}

unint64_t sub_1000837E0()
{
  unint64_t result = qword_1000A8908;
  if (!qword_1000A8908)
  {
    sub_1000847C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8908);
  }
  return result;
}

uint64_t sub_100083838(uint64_t a1, void (*a2)(void))
{
  return a1;
}

uint64_t _s16HPSUIViewService14StatusInfoViewV6StatusOwxx_0(uint64_t a1)
{
  return sub_1000822A8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80), (void (*)(void))sub_10000C2BC);
}

uint64_t _s16HPSUIViewService14StatusInfoViewV6StatusOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  char v14 = *(unsigned char *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 72);
  sub_1000822A8(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, (void (*)(void))sub_100082258);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(unsigned char *)(a1 + 80) = v14;
  return a1;
}

uint64_t _s16HPSUIViewService14StatusInfoViewV6StatusOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  char v25 = *(unsigned char *)(a2 + 80);
  uint64_t v24 = *(void *)(a2 + 72);
  sub_1000822A8(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, (void (*)(void))sub_100082258);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 80);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(unsigned char *)(a1 + 80) = v25;
  sub_1000822A8(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, (void (*)(void))sub_10000C2BC);
  return a1;
}

uint64_t _s16HPSUIViewService14StatusInfoViewV6StatusOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 80);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  char v14 = *(unsigned char *)(a1 + 80);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = v3;
  sub_1000822A8(v4, v6, v5, v7, v8, v9, v10, v11, v12, v13, v14, (void (*)(void))sub_10000C2BC);
  return a1;
}

uint64_t _s16HPSUIViewService14StatusInfoViewV6StatusOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s16HPSUIViewService14StatusInfoViewV6StatusOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100083BE4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 80) <= 1u) {
    return *(unsigned __int8 *)(a1 + 80);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100083BFC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)(result + 72) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StatusInfoView.Status()
{
  return &type metadata for StatusInfoView.Status;
}

unint64_t sub_100083C40()
{
  unint64_t result = qword_1000A8918;
  if (!qword_1000A8918)
  {
    sub_10000BD00(&qword_1000A88B8);
    sub_10000C360((unint64_t *)&unk_1000A8920, &qword_1000A88A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8918);
  }
  return result;
}

uint64_t sub_100083CE0(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_100083CF0()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_100083D00()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_100083D10()
{
  return URL.init(string:)();
}

uint64_t sub_100083D20()
{
  return type metadata accessor for URL();
}

uint64_t sub_100083D30()
{
  return type metadata accessor for Date();
}

uint64_t sub_100083D40()
{
  return UUID.uuidString.getter();
}

NSUUID sub_100083D50()
{
  return UUID._bridgeToObjectiveC()();
}

uint64_t sub_100083D60()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100083D70()
{
  return UUID.init()();
}

uint64_t sub_100083D80()
{
  return type metadata accessor for UUID();
}

uint64_t sub_100083D90()
{
  return CarrySettings.AppleConnectSettings.password.getter();
}

uint64_t sub_100083DA0()
{
  return CarrySettings.AppleConnectSettings.init(username:password:lastVerifiedDate:)();
}

uint64_t sub_100083DB0()
{
  return CarrySettings.AppleConnectSettings.username.getter();
}

uint64_t sub_100083DC0()
{
  return type metadata accessor for CarrySettings.AppleConnectSettings();
}

uint64_t sub_100083DD0()
{
  return CarrySettings.CarryDevice.appleConnectSettings.getter();
}

uint64_t sub_100083DE0()
{
  return CarrySettings.CarryDevice.appleConnectSettings.setter();
}

uint64_t sub_100083DF0()
{
  return CarrySettings.CarryDevice.deviceInfo.getter();
}

uint64_t sub_100083E00()
{
  return CarrySettings.CarryDevice.profiles.modify();
}

uint64_t sub_100083E10()
{
  return CarrySettings.CarryDevice.profiles.getter();
}

uint64_t sub_100083E20()
{
  return type metadata accessor for CarrySettings.CarryDevice();
}

uint64_t sub_100083E30()
{
  return CarrySettings.DeviceGroup.id.getter();
}

uint64_t sub_100083E40()
{
  return CarrySettings.DeviceGroup.name.getter();
}

uint64_t sub_100083E50()
{
  return type metadata accessor for CarrySettings.DeviceGroup();
}

uint64_t sub_100083E60()
{
  return CarrySettings.ProfileInfo.identifier.getter();
}

uint64_t sub_100083E70()
{
  return CarrySettings.ProfileInfo.displayName.getter();
}

uint64_t sub_100083E80()
{
  return CarrySettings.ProfileInfo.init(id:name:trusted:signed:uuid:)();
}

uint64_t sub_100083E90()
{
  return CarrySettings.ProfileInfo.trusted.getter();
}

uint64_t sub_100083EA0()
{
  return type metadata accessor for CarrySettings.ProfileInfo();
}

uint64_t sub_100083EC0()
{
  return type metadata accessor for CarrySettings.MessageChannel.Role();
}

uint64_t sub_100083ED0()
{
  return CarrySettings.MessageChannel.init(role:)();
}

uint64_t sub_100083EE0()
{
  return type metadata accessor for CarrySettings.MessageChannel();
}

uint64_t sub_100083EF0()
{
  return CarrySettings.ProfileContext.init(variant:audienceID:)();
}

uint64_t sub_100083F00()
{
  return type metadata accessor for CarrySettings.ProfileContext();
}

uint64_t sub_100083F10()
{
  return type metadata accessor for CarrySettings.ProfileVariant();
}

void sub_100083F20()
{
}

uint64_t sub_100083F50()
{
  return CarrySettings.NetworkingClient.updatePublisher.getter();
}

uint64_t sub_100083F60()
{
  return CarrySettings.NetworkingClient.__allocating_init(network:)();
}

uint64_t sub_100083F80()
{
  return CarrySettings.MessageableDevice.init(model:target:)();
}

uint64_t sub_100083F90()
{
  return CarrySettings.MessageableDevice.model.getter();
}

uint64_t sub_100083FA0()
{
  return CarrySettings.MessageableDevice.target.getter();
}

uint64_t sub_100083FB0()
{
  return CarrySettings.LivabilityAudience.pallasAudienceID.getter();
}

uint64_t sub_100083FC0()
{
  return CarrySettings.LivabilityAudience.purposeName.getter();
}

uint64_t sub_100083FD0()
{
  return CarrySettings.LivabilityAudience.DeviceFamily.permalink.getter();
}

uint64_t sub_100083FE0()
{
  return type metadata accessor for CarrySettings.LivabilityAudience.DeviceFamily();
}

uint64_t sub_100083FF0()
{
  return CarrySettings.LivabilityAudience.deviceFamilies.getter();
}

uint64_t sub_100084000()
{
  return type metadata accessor for CarrySettings.LivabilityAudience();
}

uint64_t sub_100084010()
{
  return CarrySettings.DeviceDisplayMetaData.name.getter();
}

uint64_t sub_100084020()
{
  return CarrySettings.DeviceDisplayMetaData.model.getter();
}

uint64_t sub_100084030()
{
  return CarrySettings.DeviceDisplayMetaData.pairInfo.getter();
}

uint64_t sub_100084040()
{
  return CarrySettings.DeviceDisplayMetaData.roomInfo.getter();
}

uint64_t sub_100084050()
{
  return CarrySettings.DeviceDisplayMetaData.groupInfo.getter();
}

uint64_t sub_100084060()
{
  return CarrySettings.DeviceDisplayMetaData.prodFused.getter();
}

uint64_t sub_100084070()
{
  return type metadata accessor for CarrySettings.DeviceDisplayMetaData();
}

uint64_t sub_100084080()
{
  return CarrySettings.LivabilityDataDownloader.init(with:)();
}

uint64_t sub_100084090()
{
  return type metadata accessor for CarrySettings.LivabilityDataDownloader();
}

uint64_t sub_1000840A0()
{
  return CarrySettings.LivabilityTrainAudiences.platform.getter();
}

uint64_t sub_1000840B0()
{
  return CarrySettings.LivabilityTrainAudiences.audiences.getter();
}

uint64_t sub_1000840C0()
{
  return type metadata accessor for CarrySettings.LivabilityTrainAudiences();
}

uint64_t sub_1000840D0()
{
  return CarrySettings.LivabilitySoftwareUpdateAudiences.trainAudiences.getter();
}

uint64_t sub_1000840E0()
{
  return CarrySettings.LivabilitySoftwareUpdateAudiences.liveOnAudiences.getter();
}

uint64_t sub_1000840F0()
{
  return type metadata accessor for CarrySettings.LivabilitySoftwareUpdateAudiences();
}

uint64_t sub_100084100()
{
  return static CarrySettings.DataModel.== infix(_:_:)();
}

uint64_t sub_100084110()
{
  return CarrySettings.DataModel.device.modify();
}

uint64_t sub_100084120()
{
  return CarrySettings.DataModel.device.getter();
}

uint64_t sub_100084130()
{
  return CarrySettings.DataModel.device.setter();
}

uint64_t sub_100084140()
{
  return type metadata accessor for CarrySettings.DataModel();
}

uint64_t sub_100084150()
{
  return type metadata accessor for BetaEnrollment.Availability();
}

uint64_t sub_100084160()
{
  return type metadata accessor for BetaEnrollment.IdentifyRequest();
}

uint64_t sub_100084170()
{
  return BetaEnrollment.IdentifyResponse.availability.getter();
}

uint64_t sub_100084180()
{
  return BetaEnrollment.IdentifyResponse.name.getter();
}

uint64_t sub_100084190()
{
  return BetaEnrollment.IdentifyResponse.model.getter();
}

uint64_t sub_1000841A0()
{
  return BetaEnrollment.IdentifyResponse.state.getter();
}

uint64_t sub_1000841B0()
{
  return BetaEnrollment.IdentifyResponse.pairID.getter();
}

uint64_t sub_1000841C0()
{
  return BetaEnrollment.IdentifyResponse.roomID.getter();
}

uint64_t sub_1000841D0()
{
  return BetaEnrollment.IdentifyResponse.groupID.getter();
}

uint64_t sub_1000841E0()
{
  return BetaEnrollment.IdentifyResponse.pairName.getter();
}

uint64_t sub_1000841F0()
{
  return BetaEnrollment.IdentifyResponse.roomName.getter();
}

uint64_t sub_100084200()
{
  return BetaEnrollment.IdentifyResponse.groupName.getter();
}

uint64_t sub_100084210()
{
  return type metadata accessor for BetaEnrollment.IdentifyResponse();
}

uint64_t sub_100084220()
{
  return BetaEnrollment.StateChangeRequest.init(desiredState:)();
}

uint64_t sub_100084230()
{
  return type metadata accessor for BetaEnrollment.StateChangeRequest();
}

uint64_t sub_100084240()
{
  return BetaEnrollment.StateChangeResponse.error.getter();
}

uint64_t sub_100084250()
{
  return BetaEnrollment.StateChangeResponse.state.getter();
}

uint64_t sub_100084260()
{
  return BetaEnrollment.StateChangeResponse.success.getter();
}

uint64_t sub_100084270()
{
  return type metadata accessor for BetaEnrollment.StateChangeResponse();
}

uint64_t sub_100084280()
{
  return BetaEnrollment.StateUpdatedRequest.availability.getter();
}

uint64_t sub_100084290()
{
  return BetaEnrollment.StateUpdatedRequest.name.getter();
}

uint64_t sub_1000842A0()
{
  return BetaEnrollment.StateUpdatedRequest.model.getter();
}

uint64_t sub_1000842B0()
{
  return BetaEnrollment.StateUpdatedRequest.state.getter();
}

uint64_t sub_1000842C0()
{
  return BetaEnrollment.StateUpdatedRequest.pairID.getter();
}

uint64_t sub_1000842D0()
{
  return BetaEnrollment.StateUpdatedRequest.roomID.getter();
}

uint64_t sub_1000842E0()
{
  return BetaEnrollment.StateUpdatedRequest.groupID.getter();
}

uint64_t sub_1000842F0()
{
  return BetaEnrollment.StateUpdatedRequest.pairName.getter();
}

uint64_t sub_100084300()
{
  return BetaEnrollment.StateUpdatedRequest.roomName.getter();
}

uint64_t sub_100084310()
{
  return BetaEnrollment.StateUpdatedRequest.groupName.getter();
}

uint64_t sub_100084320()
{
  return type metadata accessor for BetaEnrollment.StateUpdatedRequest();
}

uint64_t sub_100084330()
{
  return static BetaEnrollment.messageChannelTopic.getter();
}

uint64_t sub_100084340()
{
  return type metadata accessor for BetaEnrollment.StateUpdatedResponse();
}

uint64_t sub_100084350()
{
  return static BetaEnrollment.messageSessionSubTopic.getter();
}

uint64_t sub_100084360()
{
  return type metadata accessor for BetaEnrollment.State();
}

uint64_t sub_100084370()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_100084380()
{
  return AnyCancellable.store(in:)();
}

uint64_t sub_100084390()
{
  return dispatch thunk of ObservableObject.objectWillChange.getter();
}

uint64_t sub_1000843A0()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_1000843B0()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_1000843C0()
{
  return PassthroughSubject.init()();
}

void sub_1000843D0()
{
}

uint64_t sub_1000843E0()
{
  return Published.init(initialValue:)();
}

uint64_t sub_1000843F0()
{
  return static Published.subscript.modify();
}

uint64_t sub_100084400()
{
  return static Published.subscript.getter();
}

uint64_t sub_100084410()
{
  return static Published.subscript.setter();
}

uint64_t sub_100084420()
{
  return type metadata accessor for Published();
}

uint64_t sub_100084430()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_100084440()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_100084450()
{
  return static ButtonRole.destructive.getter();
}

uint64_t sub_100084460()
{
  return static ButtonRole.cancel.getter();
}

uint64_t sub_100084470()
{
  return type metadata accessor for ButtonRole();
}

uint64_t sub_100084480()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_100084490()
{
  return SecureField<>.init(_:text:onCommit:)();
}

uint64_t sub_1000844A0()
{
  return ProgressView<>.init<>()();
}

uint64_t sub_1000844B0()
{
  return static AnyTransition.opacity.getter();
}

uint64_t sub_1000844C0()
{
  return AnyTransition.animation(_:)();
}

uint64_t sub_1000844D0()
{
  return type metadata accessor for _TaskModifier();
}

uint64_t sub_1000844E0()
{
  return NavigationView.init(content:)();
}

uint64_t sub_1000844F0()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t sub_100084500()
{
  return ObservedObject.projectedValue.getter();
}

uint64_t sub_100084510()
{
  return ObservedObject.Wrapper.subscript.getter();
}

uint64_t sub_100084520()
{
  return DisclosureGroup.init(isExpanded:content:label:)();
}

uint64_t sub_100084530()
{
  return DisclosureGroup.init(content:label:)();
}

uint64_t sub_100084540()
{
  return type metadata accessor for DisclosureGroup();
}

uint64_t sub_100084550()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t sub_100084560()
{
  return PlainButtonStyle.init()();
}

uint64_t sub_100084570()
{
  return type metadata accessor for PlainButtonStyle();
}

uint64_t sub_100084580()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_100084590()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_1000845A0()
{
  return EnvironmentValues.truncationMode.getter();
}

uint64_t sub_1000845B0()
{
  return EnvironmentValues.truncationMode.setter();
}

uint64_t sub_1000845C0()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_1000845D0()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1000845E0()
{
  return EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_1000845F0()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_100084600()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_100084610()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100084620()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_100084630()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100084640()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t sub_100084650()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_100084660()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_100084670()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100084680()
{
  return type metadata accessor for NavigationBarItem.TitleDisplayMode();
}

uint64_t sub_100084690()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_1000846A0()
{
  return LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

void sub_1000846B0(Swift::String a1)
{
}

void sub_1000846C0(Swift::String a1)
{
}

uint64_t sub_1000846D0()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_1000846E0()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t sub_1000846F0()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_100084700()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t sub_100084710()
{
  return LocalizedStringKey.init(_:)();
}

uint64_t sub_100084720()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_100084730()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_100084740()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_100084750()
{
  return UIHostingController.init(rootView:)();
}

uint64_t sub_100084760()
{
  return dispatch thunk of UIHostingController.rootView.modify();
}

uint64_t sub_100084770()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t sub_100084780()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100084790()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t sub_1000847A0()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t sub_1000847B0()
{
  return CircularProgressViewStyle.init()();
}

uint64_t sub_1000847C0()
{
  return type metadata accessor for CircularProgressViewStyle();
}

uint64_t sub_1000847D0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_1000847E0()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_1000847F0()
{
  return static Edge.Set.vertical.getter();
}

uint64_t sub_100084800()
{
  return static Font.footnote.getter();
}

uint64_t sub_100084810()
{
  return static Font.headline.getter();
}

uint64_t sub_100084820()
{
  return Form.init(content:)();
}

uint64_t sub_100084830()
{
  return type metadata accessor for Form();
}

uint64_t sub_100084840()
{
  return List<>.init(content:)();
}

uint64_t sub_100084850()
{
  return type metadata accessor for List();
}

uint64_t sub_100084860()
{
  return type metadata accessor for Text.TruncationMode();
}

uint64_t sub_100084870()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_100084880()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100084890()
{
  return Text.init<A>(_:)();
}

uint64_t sub_1000848A0()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_1000848B0()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_1000848C0()
{
  return View.progressViewStyle<A>(_:)();
}

uint64_t sub_1000848D0()
{
  return View.transition(_:)();
}

uint64_t sub_1000848E0()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t sub_1000848F0()
{
  return View.onDisappear(perform:)();
}

uint64_t sub_100084900()
{
  return View.contentShape<A>(_:eoFill:)();
}

uint64_t sub_100084910()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100084920()
{
  return View.navigationTitle(_:)();
}

uint64_t sub_100084930()
{
  return View.navigationTitle<A>(_:)();
}

uint64_t sub_100084940()
{
  return View.navigationBarItems<A>(trailing:)();
}

uint64_t sub_100084950()
{
  return View.navigationBarTitle(_:displayMode:)();
}

uint64_t sub_100084960()
{
  return View.navigationBarTitleDisplayMode(_:)();
}

uint64_t sub_100084970()
{
  return View.task(priority:_:)();
}

uint64_t sub_100084980()
{
  return View.alert<A, B>(_:isPresented:actions:message:)();
}

uint64_t sub_100084990()
{
  return View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_1000849A0()
{
  return View.sheet<A>(isPresented:onDismiss:content:)();
}

uint64_t sub_1000849B0()
{
  return View.onAppear(perform:)();
}

uint64_t sub_1000849C0()
{
  return static Color.accentColor.getter();
}

uint64_t sub_1000849D0()
{
  return static Color.gray.getter();
}

uint64_t sub_1000849E0()
{
  return static Color.white.getter();
}

uint64_t sub_1000849F0()
{
  return static Color.secondary.getter();
}

uint64_t sub_100084A00()
{
  return Image.init(systemName:)();
}

uint64_t sub_100084A10()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_100084A20()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_100084A30()
{
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_100084A40()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_100084A50()
{
  return State.wrappedValue.getter();
}

uint64_t sub_100084A60()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100084A70()
{
  return State.projectedValue.getter();
}

uint64_t sub_100084A80()
{
  return Button.init(action:label:)();
}

uint64_t sub_100084A90()
{
  return Button<>.init(_:role:action:)();
}

uint64_t sub_100084AA0()
{
  return Button<>.init(_:action:)();
}

uint64_t sub_100084AB0()
{
  return type metadata accessor for Button();
}

uint64_t sub_100084AC0()
{
  return HStack.init(alignment:spacing:content:)();
}

uint64_t sub_100084AD0()
{
  return type metadata accessor for HStack();
}

uint64_t sub_100084AE0()
{
  return Toggle<>.init(_:isOn:)();
}

uint64_t sub_100084AF0()
{
  return VStack.init(alignment:spacing:content:)();
}

uint64_t sub_100084B00()
{
  return type metadata accessor for VStack();
}

uint64_t sub_100084B10()
{
  return AnyView.init<A>(_:)();
}

uint64_t sub_100084B20()
{
  return Binding.wrappedValue.getter();
}

uint64_t sub_100084B30()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_100084B40()
{
  return type metadata accessor for Binding();
}

uint64_t sub_100084B50()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100084B60()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100084B70()
{
  return type metadata accessor for ForEach();
}

uint64_t sub_100084B80()
{
  return Section<>.init(header:content:)();
}

uint64_t sub_100084B90()
{
  return Section<>.init(header:footer:content:)();
}

uint64_t sub_100084BA0()
{
  return Section<>.init(content:)();
}

uint64_t sub_100084BB0()
{
  return Section<>.init(footer:content:)();
}

uint64_t sub_100084BC0()
{
  return type metadata accessor for Section();
}

uint64_t sub_100084BD0()
{
  return static Alignment.center.getter();
}

uint64_t sub_100084BE0()
{
  return static Alignment.leading.getter();
}

uint64_t sub_100084BF0()
{
  return static Animation.default.getter();
}

uint64_t sub_100084C00()
{
  return TextField<>.init(_:text:onEditingChanged:onCommit:)();
}

uint64_t sub_100084C10()
{
  return type metadata accessor for TupleView();
}

uint64_t sub_100084C20()
{
  return TupleView.init(_:)();
}

uint64_t sub_100084C30()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_100084C40()
{
  return Dictionary.init()();
}

uint64_t sub_100084C50()
{
  return Array.init()();
}

NSDictionary sub_100084C60()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_100084C70()
{
  return Dictionary.description.getter();
}

uint64_t sub_100084C80()
{
  return type metadata accessor for Dictionary.Values();
}

uint64_t sub_100084C90()
{
  return type metadata accessor for Dictionary();
}

uint64_t sub_100084CA0()
{
  return Dictionary.subscript.modify();
}

uint64_t sub_100084CB0()
{
  return Dictionary.subscript.getter();
}

uint64_t sub_100084CC0()
{
  return Dictionary.subscript.setter();
}

uint64_t sub_100084CD0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_100084CE0()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_100084CF0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_100084D00()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100084D10()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100084D20()
{
  return String.init<A>(describing:)();
}

uint64_t sub_100084D30()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_100084D40()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_100084D50()
{
  return String.hash(into:)();
}

void sub_100084D60(Swift::String a1)
{
}

uint64_t sub_100084D70()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_100084D80()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_100084DA0()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_100084DB0()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_100084DC0()
{
  return String.init<A>(_:)();
}

uint64_t sub_100084DD0()
{
  return String.subscript.getter();
}

uint64_t sub_100084DE0()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t sub_100084DF0()
{
  return Sequence.first(where:)();
}

uint64_t sub_100084E00()
{
  return Sequence.reduce<A>(_:_:)();
}

uint64_t sub_100084E10()
{
  return Sequence.flatMap<A>(_:)();
}

uint64_t sub_100084E20()
{
  return Sequence.forEach(_:)();
}

uint64_t sub_100084E30()
{
  return Sequence<>.contains(_:)();
}

uint64_t sub_100084E40()
{
  return Sequence<>.joined(separator:)();
}

uint64_t sub_100084E50()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_100084E60()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_100084E70()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_100084E80()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100084E90()
{
  return Array.description.getter();
}

uint64_t sub_100084EA0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_100084EB0()
{
  return static Array._adoptStorage(_:count:)();
}

uint64_t sub_100084EC0()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t sub_100084ED0()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void sub_100084EE0()
{
}

uint64_t sub_100084EF0()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_100084F00()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

BOOL sub_100084F10()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t sub_100084F20()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100084F30()
{
  return Array.count.getter();
}

uint64_t sub_100084F40()
{
  return Array.append(_:)();
}

uint64_t sub_100084F50()
{
  return Array.endIndex.getter();
}

uint64_t sub_100084F60()
{
  return type metadata accessor for Array();
}

uint64_t sub_100084F80()
{
  return Array.init<A>(_:)();
}

uint64_t sub_100084F90()
{
  return Array.subscript.getter();
}

uint64_t sub_100084FA0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_100084FB0()
{
  return static MainActor.shared.getter();
}

uint64_t sub_100084FC0()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_100084FD0()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t sub_100084FE0()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_100084FF0()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_100085010()
{
  return Float.write<A>(to:)();
}

NSSet sub_100085020()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_100085030()
{
  return static Set._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100085040()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100085050()
{
  return Set.description.getter();
}

uint64_t sub_100085060()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_100085070()
{
  return Set.formSymmetricDifference<A>(_:)();
}

uint64_t sub_100085080()
{
  return Set.Index._asCocoa.modify();
}

uint64_t sub_100085090()
{
  return Set.count.getter();
}

uint64_t sub_1000850A0()
{
  return Set.filter(_:)();
}

uint64_t sub_1000850B0()
{
  return Set.isEmpty.getter();
}

uint64_t sub_1000850C0()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_1000850D0()
{
  return Set.contains(_:)();
}

void sub_1000850E0(Swift::Bool keepingCapacity)
{
}

uint64_t sub_1000850F0()
{
  return type metadata accessor for Set();
}

uint64_t sub_100085100()
{
  return Set.init<A>(_:)();
}

uint64_t sub_100085110()
{
  return RandomAccessCollection<>.indices.getter();
}

uint64_t sub_100085120()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_100085130()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_100085140()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_100085150()
{
  return Collection.first.getter();
}

uint64_t sub_100085160()
{
  return Collection.isEmpty.getter();
}

uint64_t sub_100085170()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_100085180()
{
  return Range<>.init(_:in:)();
}

uint64_t sub_100085190()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_1000851A0()
{
  return static OS_dispatch_queue.global(qos:)();
}

NSNumber sub_1000851B0(Swift::Int integerLiteral)
{
  return NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int sub_1000851C0(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_1000851D0()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1000851E0()
{
  return _NSRange.init<A, B>(_:in:)();
}

uint64_t sub_1000851F0()
{
  return Optional._bridgeToObjectiveC()();
}

uint64_t sub_100085200()
{
  return type metadata accessor for Optional();
}

uint64_t sub_100085210()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_100085220()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_100085230()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_100085240()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t sub_100085250()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_100085260()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t sub_100085270()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t sub_100085280()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t sub_100085290()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_1000852A0()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_1000852B0()
{
  return __CocoaSet.element(at:)();
}

uint64_t sub_1000852C0()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_1000852D0()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

Swift::Int sub_1000852E0(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_1000852F0()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_100085300()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_100085310()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_100085320()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_100085330()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_100085340(Swift::Int a1)
{
}

uint64_t sub_100085350()
{
  return dispatch thunk of Identifiable.id.getter();
}

uint64_t sub_100085360()
{
  return Identifiable<>.id.getter();
}

uint64_t sub_100085370()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_100085380()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_100085390()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1000853A0()
{
  return _ArrayProtocol.filter(_:)();
}

uint64_t sub_1000853B0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_1000853C0()
{
  return specialized ContiguousArray._endMutation()();
}

void sub_1000853D0(Swift::Int a1)
{
}

uint64_t sub_1000853E0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_1000853F0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_100085400()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100085410()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_100085420()
{
  return ContiguousArray.init()();
}

uint64_t sub_100085430()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_100085440()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_100085450()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t sub_100085460()
{
  return __CocoaDictionary.count.getter();
}

uint64_t sub_100085470()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t sub_100085480()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t sub_100085490()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1000854A0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1000854B0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1000854C0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1000854D0()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t sub_1000854E0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_1000854F0()
{
  return _arrayConditionalCast<A, B>(_:)();
}

uint64_t sub_100085500()
{
  return _convertToAnyHashable<A>(_:)();
}

Swift::Int sub_100085510(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

Swift::Int sub_100085520(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_100085530()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_100085540()
{
  return type metadata accessor for _ContiguousArrayStorage();
}

uint64_t sub_100085550()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_100085560()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_100085570()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_100085580()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100085590()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_1000855A0()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_1000855B0()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1000855C0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1000855F0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_100085600()
{
  return Error._code.getter();
}

uint64_t sub_100085610()
{
  return Error._domain.getter();
}

uint64_t sub_100085620()
{
  return Error._userInfo.getter();
}

uint64_t sub_100085630()
{
  return Hasher.init(_seed:)();
}

void sub_100085640(Swift::UInt a1)
{
}

Swift::Int sub_100085650()
{
  return Hasher._finalize()();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetSInt32Answer()
{
  return _MGGetSInt32Answer();
}

uint64_t MGGetStringAnswer()
{
  return _MGGetStringAnswer();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

uint64_t UpTicksToSecondsF()
{
  return _UpTicksToSecondsF();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return __swift_isClassOrObjCExistentialType();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocObject()
{
  return _swift_deallocObject();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return _swift_getTupleTypeMetadata3();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}